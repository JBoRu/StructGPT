{"db_id": "concert_singer", "query": "SELECT count(*) FROM singer", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "singer"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "singer"], "question": "How many singers do we have?", "question_toks": ["How", "many", "singers", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "0", "answer_text": [[6]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM singer;"}
{"db_id": "concert_singer", "query": "SELECT count(*) FROM singer", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "singer"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "singer"], "question": "What is the total number of singers?", "question_toks": ["What", "is", "the", "total", "number", "of", "singers", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1", "answer_text": [[6]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM singer;"}
{"db_id": "concert_singer", "query": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC", "query_toks": ["SELECT", "name", ",", "country", ",", "age", "FROM", "singer", "ORDER", "BY", "age", "DESC"], "query_toks_no_value": ["select", "name", ",", "country", ",", "age", "from", "singer", "order", "by", "age", "desc"], "question": "Show name, country, age for all singers ordered by age from the oldest to the youngest.", "question_toks": ["Show", "name", ",", "country", ",", "age", "for", "all", "singers", "ordered", "by", "age", "from", "the", "oldest", "to", "the", "youngest", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 13, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "2", "answer_text": [["Joe Sharp", "Netherlands", 52], ["John Nizinik", "France", 43], ["Rose White", "France", 41], ["Timbaland", "United States", 32], ["Justin Brown", "France", 29], ["Tribal King", "France", 25]], "trigger_words": ["Name", "Country", "Age"], "Prediction": "Name, Country, Age FROM singer ORDER BY Age DESC;"}
{"db_id": "concert_singer", "query": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC", "query_toks": ["SELECT", "name", ",", "country", ",", "age", "FROM", "singer", "ORDER", "BY", "age", "DESC"], "query_toks_no_value": ["select", "name", ",", "country", ",", "age", "from", "singer", "order", "by", "age", "desc"], "question": "What are the names, countries, and ages for every singer in descending order of age?", "question_toks": ["What", "are", "the", "names", ",", "countries", ",", "and", "ages", "for", "every", "singer", "in", "descending", "order", "of", "age", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 13, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "3", "answer_text": [["Joe Sharp", "Netherlands", 52], ["John Nizinik", "France", 43], ["Rose White", "France", 41], ["Timbaland", "United States", 32], ["Justin Brown", "France", 29], ["Tribal King", "France", 25]], "trigger_words": ["Name", "Country", "Age"], "Prediction": "Name, Country, Age FROM singer ORDER BY Age DESC;"}
{"db_id": "concert_singer", "query": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "FROM", "singer", "WHERE", "country", "=", "'France", "'"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "from", "singer", "where", "country", "=", "value"], "question": "What is the average, minimum, and maximum age of all singers from France?", "question_toks": ["What", "is", "the", "average", ",", "minimum", ",", "and", "maximum", "age", "of", "all", "singers", "from", "France", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]], [1, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"France\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "4", "answer_text": [[34.5, 25, 43]], "trigger_words": ["Average Number", "Minimal Number", "Maximal Number"], "Prediction": "AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country='France';"}
{"db_id": "concert_singer", "query": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "FROM", "singer", "WHERE", "country", "=", "'France", "'"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "from", "singer", "where", "country", "=", "value"], "question": "What is the average, minimum, and maximum age for all French singers?", "question_toks": ["What", "is", "the", "average", ",", "minimum", ",", "and", "maximum", "age", "for", "all", "French", "singers", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]], [1, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"France\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "5", "answer_text": [[34.5, 25, 43]], "trigger_words": ["Average Number", "Minimal Number", "Maximal Number"], "Prediction": "AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country='France';"}
{"db_id": "concert_singer", "query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1", "query_toks": ["SELECT", "song_name", ",", "song_release_year", "FROM", "singer", "ORDER", "BY", "age", "LIMIT", "1"], "query_toks_no_value": ["select", "song_name", ",", "song_release_year", "from", "singer", "order", "by", "age", "limit", "value"], "question": "Show the name and the release year of the song by the youngest singer.", "question_toks": ["Show", "the", "name", "and", "the", "release", "year", "of", "the", "song", "by", "the", "youngest", "singer", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "6", "answer_text": [["Love", "2016"]], "trigger_words": ["Song Name", "Song Release Year"], "Prediction": "Song_Name, Song_release_year \n FROM singer \n WHERE Age = (SELECT MIN(Age) FROM singer);"}
{"db_id": "concert_singer", "query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1", "query_toks": ["SELECT", "song_name", ",", "song_release_year", "FROM", "singer", "ORDER", "BY", "age", "LIMIT", "1"], "query_toks_no_value": ["select", "song_name", ",", "song_release_year", "from", "singer", "order", "by", "age", "limit", "value"], "question": "What are the names and release years for all the songs of the youngest singer?", "question_toks": ["What", "are", "the", "names", "and", "release", "years", "for", "all", "the", "songs", "of", "the", "youngest", "singer", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "7", "answer_text": [["Love", "2016"]], "trigger_words": ["Song Name", "Song Release Year"], "Prediction": "Song_Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer);"}
{"db_id": "concert_singer", "query": "SELECT DISTINCT country FROM singer WHERE age  >  20", "query_toks": ["SELECT", "DISTINCT", "country", "FROM", "singer", "WHERE", "age", ">", "20"], "query_toks_no_value": ["select", "distinct", "country", "from", "singer", "where", "age", ">", "value"], "question": "What are all distinct countries where singers above age 20 are from?", "question_toks": ["What", "are", "all", "distinct", "countries", "where", "singers", "above", "age", "20", "are", "from", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "8", "answer_text": [["Netherlands"], ["United States"], ["France"]], "trigger_words": ["Country"], "Prediction": "DISTINCT Country FROM singer WHERE Age > 20;"}
{"db_id": "concert_singer", "query": "SELECT DISTINCT country FROM singer WHERE age  >  20", "query_toks": ["SELECT", "DISTINCT", "country", "FROM", "singer", "WHERE", "age", ">", "20"], "query_toks_no_value": ["select", "distinct", "country", "from", "singer", "where", "age", ">", "value"], "question": "What are  the different countries with singers above age 20?", "question_toks": ["What", "are", "the", "different", "countries", "with", "singers", "above", "age", "20", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "9", "answer_text": [["Netherlands"], ["United States"], ["France"]], "trigger_words": ["Country"], "Prediction": "DISTINCT Country FROM singer WHERE Age > 20;"}
{"db_id": "concert_singer", "query": "SELECT country ,  count(*) FROM singer GROUP BY country", "query_toks": ["SELECT", "country", ",", "count", "(", "*", ")", "FROM", "singer", "GROUP", "BY", "country"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "country"], "question": "Show all countries and the number of singers in each country.", "question_toks": ["Show", "all", "countries", "and", "the", "number", "of", "singers", "in", "each", "country", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "10", "answer_text": [["France", 4], ["Netherlands", 1], ["United States", 1]], "trigger_words": ["Country", "Number"], "Prediction": "Country, COUNT(*) FROM singer GROUP BY Country;"}
{"db_id": "concert_singer", "query": "SELECT country ,  count(*) FROM singer GROUP BY country", "query_toks": ["SELECT", "country", ",", "count", "(", "*", ")", "FROM", "singer", "GROUP", "BY", "country"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "country"], "question": "How many singers are from each country?", "question_toks": ["How", "many", "singers", "are", "from", "each", "country", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "11", "answer_text": [["France", 4], ["Netherlands", 1], ["United States", 1]], "trigger_words": ["Country", "Number"], "Prediction": "Country, COUNT(*) FROM singer GROUP BY Country;"}
{"db_id": "concert_singer", "query": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)", "query_toks": ["SELECT", "song_name", "FROM", "singer", "WHERE", "age", ">", "(", "SELECT", "avg", "(", "age", ")", "FROM", "singer", ")"], "query_toks_no_value": ["select", "song_name", "from", "singer", "where", "age", ">", "(", "select", "avg", "(", "age", ")", "from", "singer", ")"], "question": "List all song names by singers above the average age.", "question_toks": ["List", "all", "song", "names", "by", "singers", "above", "the", "average", "age", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "12", "answer_text": [["You"], ["Sun"], ["Gentleman"]], "trigger_words": ["Song Name"], "Prediction": "singer.Song_Name \nFROM singer \nWHERE singer.Age > (SELECT AVG(Age) FROM singer);"}
{"db_id": "concert_singer", "query": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)", "query_toks": ["SELECT", "song_name", "FROM", "singer", "WHERE", "age", ">", "(", "SELECT", "avg", "(", "age", ")", "FROM", "singer", ")"], "query_toks_no_value": ["select", "song_name", "from", "singer", "where", "age", ">", "(", "select", "avg", "(", "age", ")", "from", "singer", ")"], "question": "What are all the song names by singers who are older than average?", "question_toks": ["What", "are", "all", "the", "song", "names", "by", "singers", "who", "are", "older", "than", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "13", "answer_text": [["You"], ["Sun"], ["Gentleman"]], "trigger_words": ["Song Name"], "Prediction": "Song_Name \nFROM singer \nWHERE Age > (SELECT AVG(Age) FROM singer);"}
{"db_id": "concert_singer", "query": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000", "query_toks": ["SELECT", "LOCATION", ",", "name", "FROM", "stadium", "WHERE", "capacity", "BETWEEN", "5000", "AND", "10000"], "query_toks_no_value": ["select", "location", ",", "name", "from", "stadium", "where", "capacity", "between", "value", "and", "value"], "question": "Show location and name for all stadiums with a capacity between 5000 and 10000.", "question_toks": ["Show", "location", "and", "name", "for", "all", "stadiums", "with", "a", "capacity", "between", "5000", "and", "10000", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 1, [0, [0, 4, false], null], 5000.0, 10000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "14", "answer_text": [], "trigger_words": ["Location", "Name"], "Prediction": "Location, Name \n FROM stadium \n WHERE Capacity BETWEEN 5000 AND 10000;"}
{"db_id": "concert_singer", "query": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000", "query_toks": ["SELECT", "LOCATION", ",", "name", "FROM", "stadium", "WHERE", "capacity", "BETWEEN", "5000", "AND", "10000"], "query_toks_no_value": ["select", "location", ",", "name", "from", "stadium", "where", "capacity", "between", "value", "and", "value"], "question": "What are the locations and names of all stations with capacity between 5000 and 10000?", "question_toks": ["What", "are", "the", "locations", "and", "names", "of", "all", "stations", "with", "capacity", "between", "5000", "and", "10000", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 1, [0, [0, 4, false], null], 5000.0, 10000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "15", "answer_text": [], "trigger_words": ["Location", "Name"], "Prediction": "Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;"}
{"db_id": "concert_singer", "query": "select max(capacity), average from stadium", "query_toks": ["select", "max", "(", "capacity", ")", ",", "average", "from", "stadium"], "query_toks_no_value": ["select", "max", "(", "capacity", ")", ",", "average", "from", "stadium"], "question": "What is the maximum capacity and the average of all stadiums ?", "question_toks": ["What", "is", "the", "maximum", "capacity", "and", "the", "average", "of", "all", "stadiums", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 4, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "16", "answer_text": [[52500, 730]], "trigger_words": ["Maximal Number", "Average"], "Prediction": "MAX(Capacity), AVG(Capacity) FROM stadium;"}
{"db_id": "concert_singer", "query": "select avg(capacity) ,  max(capacity) from stadium", "query_toks": ["select", "avg", "(", "capacity", ")", ",", "max", "(", "capacity", ")", "from", "stadium"], "query_toks_no_value": ["select", "avg", "(", "capacity", ")", ",", "max", "(", "capacity", ")", "from", "stadium"], "question": "What is the average and maximum capacities for all stadiums ?", "question_toks": ["What", "is", "the", "average", "and", "maximum", "capacities", "for", "all", "stadiums", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]], [1, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "17", "answer_text": [[10621.666666666666, 52500]], "trigger_words": ["Average Number", "Maximal Number"], "Prediction": "AVG(Capacity), MAX(Capacity) FROM stadium;"}
{"db_id": "concert_singer", "query": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1", "query_toks": ["SELECT", "name", ",", "capacity", "FROM", "stadium", "ORDER", "BY", "average", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "capacity", "from", "stadium", "order", "by", "average", "desc", "limit", "value"], "question": "What is the name and capacity for the stadium with highest average attendance?", "question_toks": ["What", "is", "the", "name", "and", "capacity", "for", "the", "stadium", "with", "highest", "average", "attendance", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 7, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "18", "answer_text": [["Stark's Park", 10104]], "trigger_words": ["Name", "Capacity"], "Prediction": "Name, Capacity \nFROM stadium \nWHERE Average = (SELECT MAX(Average) FROM stadium);"}
{"db_id": "concert_singer", "query": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1", "query_toks": ["SELECT", "name", ",", "capacity", "FROM", "stadium", "ORDER", "BY", "average", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "capacity", "from", "stadium", "order", "by", "average", "desc", "limit", "value"], "question": "What is the name and capacity for the stadium with the highest average attendance?", "question_toks": ["What", "is", "the", "name", "and", "capacity", "for", "the", "stadium", "with", "the", "highest", "average", "attendance", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 7, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "19", "answer_text": [["Stark's Park", 10104]], "trigger_words": ["Name", "Capacity"], "Prediction": "Name, Capacity \n FROM stadium \n WHERE Average = (SELECT MAX(Average) FROM stadium);"}
{"db_id": "concert_singer", "query": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "concert", "WHERE", "YEAR", "=", "2014", "OR", "YEAR", "=", "2015"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "concert", "where", "year", "=", "value", "or", "year", "=", "value"], "question": "How many concerts are there in year 2014 or 2015?", "question_toks": ["How", "many", "concerts", "are", "there", "in", "year", "2014", "or", "2015", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null], "or", [false, 2, [0, [0, 19, false], null], 2015.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "20", "answer_text": [[6]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM concert WHERE Year = 2014 OR Year = 2015;"}
{"db_id": "concert_singer", "query": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "concert", "WHERE", "YEAR", "=", "2014", "OR", "YEAR", "=", "2015"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "concert", "where", "year", "=", "value", "or", "year", "=", "value"], "question": "How many concerts occurred in 2014 or 2015?", "question_toks": ["How", "many", "concerts", "occurred", "in", "2014", "or", "2015", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null], "or", [false, 2, [0, [0, 19, false], null], 2015.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "21", "answer_text": [[6]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM concert WHERE Year IN (2014, 2015);"}
{"db_id": "concert_singer", "query": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "concert", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.stadium_id", "GROUP", "BY", "T1.stadium_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "group", "by", "t1", ".", "stadium_id"], "question": "Show the stadium name and the number of concerts in each stadium.", "question_toks": ["Show", "the", "stadium", "name", "and", "the", "number", "of", "concerts", "in", "each", "stadium", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "22", "answer_text": [["Stark's Park", 1], ["Glebe Park", 1], ["Somerset Park", 2], ["Recreation Park", 1], ["Balmoor", 1]], "trigger_words": ["Name", "Number"], "Prediction": "stadium.Name, COUNT(concert.concert_ID)\n FROM stadium\n JOIN concert ON concert.Stadium_ID=stadium.Stadium_ID\n GROUP BY stadium.Name;"}
{"db_id": "concert_singer", "query": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "concert", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.stadium_id", "GROUP", "BY", "T1.stadium_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "group", "by", "t1", ".", "stadium_id"], "question": "For each stadium, how many concerts play there?", "question_toks": ["For", "each", "stadium", ",", "how", "many", "concerts", "play", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "23", "answer_text": [["Stark's Park", 1], ["Glebe Park", 1], ["Somerset Park", 2], ["Recreation Park", 1], ["Balmoor", 1]], "trigger_words": ["Name", "Number"], "Prediction": "stadium.Name, COUNT(concert.concert_ID) \n FROM stadium \n LEFT JOIN concert ON stadium.Stadium_ID=concert.Stadium_ID \n GROUP BY stadium.Name;"}
{"db_id": "concert_singer", "query": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", ",", "T2.capacity", "FROM", "concert", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.stadium_id", "WHERE", "T1.year", ">", "=", "2014", "GROUP", "BY", "T2.stadium_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "capacity", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "where", "t1", ".", "year", ">", "=", "value", "group", "by", "t2", ".", "stadium_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the stadium name and capacity with most number of concerts in year 2014 or after.", "question_toks": ["Show", "the", "stadium", "name", "and", "capacity", "with", "most", "number", "of", "concerts", "in", "year", "2014", "or", "after", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 5, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "24", "answer_text": [["Somerset Park", 11998]], "trigger_words": ["Name", "Capacity"], "Prediction": "stadium.Name, stadium.Capacity \n FROM stadium \n JOIN concert ON concert.Stadium_ID=stadium.Stadium_ID \n WHERE concert.Year>=2014 \n GROUP BY stadium.Name \n ORDER BY COUNT(concert.concert_ID) DESC \n LIMIT 1;"}
{"db_id": "concert_singer", "query": "select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1", "query_toks": ["select", "t2.name", ",", "t2.capacity", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", ">", "2013", "group", "by", "t2.stadium_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "capacity", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "where", "t1", ".", "year", ">", "value", "group", "by", "t2", ".", "stadium_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name and capacity of the stadium with the most concerts after 2013 ?", "question_toks": ["What", "is", "the", "name", "and", "capacity", "of", "the", "stadium", "with", "the", "most", "concerts", "after", "2013", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 19, false], null], 2013.0, null]], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "25", "answer_text": [["Somerset Park", 11998]], "trigger_words": ["Name", "Capacity"], "Prediction": "stadium.Name, stadium.Capacity \n FROM concert \n JOIN stadium ON concert.Stadium_ID=stadium.Stadium_ID \n WHERE concert.Year > 2013 \n GROUP BY stadium.Stadium_ID \n ORDER BY COUNT(concert.concert_ID) DESC \n LIMIT 1;"}
{"db_id": "concert_singer", "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "YEAR", "FROM", "concert", "GROUP", "BY", "YEAR", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "year", "from", "concert", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which year has most number of concerts?", "question_toks": ["Which", "year", "has", "most", "number", "of", "concerts", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "26", "answer_text": [["2015"]], "trigger_words": ["Year"], "Prediction": "Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1;"}
{"db_id": "concert_singer", "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "YEAR", "FROM", "concert", "GROUP", "BY", "YEAR", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "year", "from", "concert", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the year that had the most concerts?", "question_toks": ["What", "is", "the", "year", "that", "had", "the", "most", "concerts", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "27", "answer_text": [["2015"]], "trigger_words": ["Year"], "Prediction": "Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1;"}
{"db_id": "concert_singer", "query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)", "query_toks": ["SELECT", "name", "FROM", "stadium", "WHERE", "stadium_id", "NOT", "IN", "(", "SELECT", "stadium_id", "FROM", "concert", ")"], "query_toks_no_value": ["select", "name", "from", "stadium", "where", "stadium_id", "not", "in", "(", "select", "stadium_id", "from", "concert", ")"], "question": "Show the stadium names without any concert.", "question_toks": ["Show", "the", "stadium", "names", "without", "any", "concert", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "28", "answer_text": [["Bayview Stadium"], ["Hampden Park"], ["Forthbank Stadium"], ["Gayfield Park"]], "trigger_words": ["Name"], "Prediction": "stadium.Name FROM stadium LEFT JOIN concert ON stadium.Stadium_ID=concert.Stadium_ID WHERE concert_ID IS NULL;"}
{"db_id": "concert_singer", "query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)", "query_toks": ["SELECT", "name", "FROM", "stadium", "WHERE", "stadium_id", "NOT", "IN", "(", "SELECT", "stadium_id", "FROM", "concert", ")"], "query_toks_no_value": ["select", "name", "from", "stadium", "where", "stadium_id", "not", "in", "(", "select", "stadium_id", "from", "concert", ")"], "question": "What are the names of the stadiums without any concerts?", "question_toks": ["What", "are", "the", "names", "of", "the", "stadiums", "without", "any", "concerts", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "29", "answer_text": [["Bayview Stadium"], ["Hampden Park"], ["Forthbank Stadium"], ["Gayfield Park"]], "trigger_words": ["Name"], "Prediction": "stadium.Name \nFROM stadium \nLEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID \nWHERE concert.concert_ID IS NULL;"}
{"db_id": "concert_singer", "query": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30", "query_toks": ["SELECT", "country", "FROM", "singer", "WHERE", "age", ">", "40", "INTERSECT", "SELECT", "country", "FROM", "singer", "WHERE", "age", "<", "30"], "query_toks_no_value": ["select", "country", "from", "singer", "where", "age", ">", "value", "intersect", "select", "country", "from", "singer", "where", "age", "<", "value"], "question": "Show countries where a singer above age 40 and a singer below 30 are from.", "question_toks": ["Show", "countries", "where", "a", "singer", "above", "age", "40", "and", "a", "singer", "below", "30", "are", "from", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 40.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 4, [0, [0, 13, false], null], 30.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "30", "answer_text": [["France"]], "trigger_words": ["Country"], "Prediction": "Country FROM singer WHERE Age > 40 \nINTERSECT \nSELECT Country FROM singer WHERE Age < 30;"}
{"db_id": "concert_singer", "query": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014", "query_toks": ["SELECT", "name", "FROM", "stadium", "EXCEPT", "SELECT", "T2.name", "FROM", "concert", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.stadium_id", "WHERE", "T1.year", "=", "2014"], "query_toks_no_value": ["select", "name", "from", "stadium", "except", "select", "t2", ".", "name", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "where", "t1", ".", "year", "=", "value"], "question": "Show names for all stadiums except for stadiums having a concert in year 2014.", "question_toks": ["Show", "names", "for", "all", "stadiums", "except", "for", "stadiums", "having", "a", "concert", "in", "year", "2014", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "31", "answer_text": [["Balmoor"], ["Bayview Stadium"], ["Forthbank Stadium"], ["Gayfield Park"], ["Hampden Park"], ["Recreation Park"]], "trigger_words": ["Name"], "Prediction": "stadium.Name FROM stadium WHERE stadium.Stadium_ID NOT IN (SELECT concert.Stadium_ID FROM concert WHERE concert.Year=2014);"}
{"db_id": "concert_singer", "query": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014", "query_toks": ["SELECT", "name", "FROM", "stadium", "EXCEPT", "SELECT", "T2.name", "FROM", "concert", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.stadium_id", "WHERE", "T1.year", "=", "2014"], "query_toks_no_value": ["select", "name", "from", "stadium", "except", "select", "t2", ".", "name", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "where", "t1", ".", "year", "=", "value"], "question": "What are the names of all stadiums that did not have a concert in 2014?", "question_toks": ["What", "are", "the", "names", "of", "all", "stadiums", "that", "did", "not", "have", "a", "concert", "in", "2014", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "32", "answer_text": [["Balmoor"], ["Bayview Stadium"], ["Forthbank Stadium"], ["Gayfield Park"], ["Hampden Park"], ["Recreation Park"]], "trigger_words": ["Name"], "Prediction": "Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year=2014);"}
{"db_id": "concert_singer", "query": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id", "query_toks": ["SELECT", "T2.concert_name", ",", "T2.theme", ",", "count", "(", "*", ")", "FROM", "singer_in_concert", "AS", "T1", "JOIN", "concert", "AS", "T2", "ON", "T1.concert_id", "=", "T2.concert_id", "GROUP", "BY", "T2.concert_id"], "query_toks_no_value": ["select", "t2", ".", "concert_name", ",", "t2", ".", "theme", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "concert", "as", "t2", "on", "t1", ".", "concert_id", "=", "t2", ".", "concert_id", "group", "by", "t2", ".", "concert_id"], "question": "Show the name and theme for all concerts and the number of singers in each concert.", "question_toks": ["Show", "the", "name", "and", "theme", "for", "all", "concerts", "and", "the", "number", "of", "singers", "in", "each", "concert", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "33", "answer_text": [["Auditions", "Free choice", 3], ["Super bootcamp", "Free choice 2", 2], ["Home Visits", "Bleeding Love", 1], ["Week 1", "Wide Awake", 1], ["Week 1", "Happy Tonight", 2], ["Week 2", "Party All Night", 1]], "trigger_words": ["Concert Name", "Theme", "Number"], "Prediction": "concert.concert_Name, concert.Theme, COUNT(singer_in_concert.Singer_ID) AS num_singers\n FROM concert\n JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID\n GROUP BY concert.concert_ID;"}
{"db_id": "concert_singer", "query": "select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id", "query_toks": ["select", "t2.concert_name", ",", "t2.theme", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "concert", "as", "t2", "on", "t1.concert_id", "=", "t2.concert_id", "group", "by", "t2.concert_id"], "query_toks_no_value": ["select", "t2", ".", "concert_name", ",", "t2", ".", "theme", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "concert", "as", "t2", "on", "t1", ".", "concert_id", "=", "t2", ".", "concert_id", "group", "by", "t2", ".", "concert_id"], "question": "What are the names , themes , and number of singers for every concert ?", "question_toks": ["What", "are", "the", "names", ",", "themes", ",", "and", "number", "of", "singers", "for", "every", "concert", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "34", "answer_text": [["Auditions", "Free choice", 3], ["Super bootcamp", "Free choice 2", 2], ["Home Visits", "Bleeding Love", 1], ["Week 1", "Wide Awake", 1], ["Week 1", "Happy Tonight", 2], ["Week 2", "Party All Night", 1]], "trigger_words": ["Concert Name", "Theme", "Number"], "Prediction": "concert_Name, Theme, COUNT(singer_in_concert.Singer_ID) AS number_of_singers\n FROM concert\n JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID\n GROUP BY concert.concert_ID;"}
{"db_id": "concert_singer", "query": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "singer_in_concert", "AS", "T1", "JOIN", "singer", "AS", "T2", "ON", "T1.singer_id", "=", "T2.singer_id", "GROUP", "BY", "T2.singer_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "group", "by", "t2", ".", "singer_id"], "question": "List singer names and number of concerts for each singer.", "question_toks": ["List", "singer", "names", "and", "number", "of", "concerts", "for", "each", "singer", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "35", "answer_text": [["Timbaland", 2], ["Justin Brown", 3], ["Rose White", 1], ["John Nizinik", 2], ["Tribal King", 2]], "trigger_words": ["Name", "Number"], "Prediction": "singer.Name, COUNT(singer_in_concert.concert_ID) \n FROM singer \n JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID \n GROUP BY singer.Name;"}
{"db_id": "concert_singer", "query": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "singer_in_concert", "AS", "T1", "JOIN", "singer", "AS", "T2", "ON", "T1.singer_id", "=", "T2.singer_id", "GROUP", "BY", "T2.singer_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "group", "by", "t2", ".", "singer_id"], "question": "What are the names of the singers and number of concerts for each person?", "question_toks": ["What", "are", "the", "names", "of", "the", "singers", "and", "number", "of", "concerts", "for", "each", "person", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "36", "answer_text": [["Timbaland", 2], ["Justin Brown", 3], ["Rose White", 1], ["John Nizinik", 2], ["Tribal King", 2]], "trigger_words": ["Name", "Number"], "Prediction": "singer.Name, COUNT(singer_in_concert.concert_ID) AS num_concerts\n FROM singer\n JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID\n GROUP BY singer.Name;"}
{"db_id": "concert_singer", "query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014", "query_toks": ["SELECT", "T2.name", "FROM", "singer_in_concert", "AS", "T1", "JOIN", "singer", "AS", "T2", "ON", "T1.singer_id", "=", "T2.singer_id", "JOIN", "concert", "AS", "T3", "ON", "T1.concert_id", "=", "T3.concert_id", "WHERE", "T3.year", "=", "2014"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "join", "concert", "as", "t3", "on", "t1", ".", "concert_id", "=", "t3", ".", "concert_id", "where", "t3", ".", "year", "=", "value"], "question": "List all singer names in concerts in year 2014.", "question_toks": ["List", "all", "singer", "names", "in", "concerts", "in", "year", "2014", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 20, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "37", "answer_text": [["Timbaland"], ["Justin Brown"], ["John Nizinik"], ["Justin Brown"], ["Tribal King"], ["Rose White"]], "trigger_words": ["Name"], "Prediction": "singer.Name \n FROM singer \n JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID \n JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID \n WHERE concert.Year = 2014;"}
{"db_id": "concert_singer", "query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014", "query_toks": ["SELECT", "T2.name", "FROM", "singer_in_concert", "AS", "T1", "JOIN", "singer", "AS", "T2", "ON", "T1.singer_id", "=", "T2.singer_id", "JOIN", "concert", "AS", "T3", "ON", "T1.concert_id", "=", "T3.concert_id", "WHERE", "T3.year", "=", "2014"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "join", "concert", "as", "t3", "on", "t1", ".", "concert_id", "=", "t3", ".", "concert_id", "where", "t3", ".", "year", "=", "value"], "question": "What are the names of the singers who performed in a concert in 2014?", "question_toks": ["What", "are", "the", "names", "of", "the", "singers", "who", "performed", "in", "a", "concert", "in", "2014", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 20, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "38", "answer_text": [["Timbaland"], ["Justin Brown"], ["John Nizinik"], ["Justin Brown"], ["Tribal King"], ["Rose White"]], "trigger_words": ["Name"], "Prediction": "singer.Name \nFROM singer \nJOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID \nJOIN concert ON singer_in_concert.concert_ID = concert.concert_ID \nWHERE concert.Year = 2014;"}
{"db_id": "concert_singer", "query": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'", "query_toks": ["SELECT", "name", ",", "country", "FROM", "singer", "WHERE", "song_name", "LIKE", "'", "%", "Hey", "%", "'"], "query_toks_no_value": ["select", "name", ",", "country", "from", "singer", "where", "song_name", "like", "value"], "question": "what is the name and nation of the singer who have a song having 'Hey' in its name?", "question_toks": ["what", "is", "the", "name", "and", "nation", "of", "the", "singer", "who", "have", "a", "song", "having", "'Hey", "'", "in", "its", "name", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 9, [0, [0, 11, false], null], "\"%Hey%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "39", "answer_text": [["Justin Brown", "France"]], "trigger_words": ["Name", "Country"], "Prediction": "singer.Name, singer.Country\n FROM singer\n WHERE singer.Song_Name LIKE '%Hey%';"}
{"db_id": "concert_singer", "query": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'", "query_toks": ["SELECT", "name", ",", "country", "FROM", "singer", "WHERE", "song_name", "LIKE", "'", "%", "Hey", "%", "'"], "query_toks_no_value": ["select", "name", ",", "country", "from", "singer", "where", "song_name", "like", "value"], "question": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?", "question_toks": ["What", "is", "the", "name", "and", "country", "of", "origin", "of", "every", "singer", "who", "has", "a", "song", "with", "the", "word", "'Hey", "'", "in", "its", "title", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 9, [0, [0, 11, false], null], "\"%Hey%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "40", "answer_text": [["Justin Brown", "France"]], "trigger_words": ["Name", "Country"], "Prediction": "singer.Name, singer.Country\n FROM singer\n WHERE singer.Song_Name LIKE '%Hey%';"}
{"db_id": "concert_singer", "query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015", "query_toks": ["SELECT", "T2.name", ",", "T2.location", "FROM", "concert", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.stadium_id", "WHERE", "T1.Year", "=", "2014", "INTERSECT", "SELECT", "T2.name", ",", "T2.location", "FROM", "concert", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.stadium_id", "WHERE", "T1.Year", "=", "2015"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "where", "t1", ".", "year", "=", "value", "intersect", "select", "t2", ".", "name", ",", "t2", ".", "location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "where", "t1", ".", "year", "=", "value"], "question": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.", "question_toks": ["Find", "the", "name", "and", "location", "of", "the", "stadiums", "which", "some", "concerts", "happened", "in", "the", "years", "of", "both", "2014", "and", "2015", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2015.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "41", "answer_text": [["Somerset Park", "Ayr United"]], "trigger_words": ["Name", "Location"], "Prediction": "stadium.Name, stadium.Location\n FROM stadium\n JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID\n WHERE concert.Year = 2014 AND stadium.Stadium_ID IN \n (SELECT stadium.Stadium_ID FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE concert.Year = 2015)"}
{"db_id": "concert_singer", "query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015", "query_toks": ["SELECT", "T2.name", ",", "T2.location", "FROM", "concert", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.stadium_id", "WHERE", "T1.Year", "=", "2014", "INTERSECT", "SELECT", "T2.name", ",", "T2.location", "FROM", "concert", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.stadium_id", "WHERE", "T1.Year", "=", "2015"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "where", "t1", ".", "year", "=", "value", "intersect", "select", "t2", ".", "name", ",", "t2", ".", "location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "where", "t1", ".", "year", "=", "value"], "question": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?", "question_toks": ["What", "are", "the", "names", "and", "locations", "of", "the", "stadiums", "that", "had", "concerts", "that", "occurred", "in", "both", "2014", "and", "2015", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2015.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "42", "answer_text": [["Somerset Park", "Ayr United"]], "trigger_words": ["Name", "Location"], "Prediction": "stadium.Name, stadium.Location\n FROM stadium\n WHERE stadium.Stadium_ID IN (\n SELECT concert.Stadium_ID\n FROM concert\n WHERE concert.Year = 2014\n INTERSECT\n SELECT concert.Stadium_ID\n FROM concert\n WHERE concert.Year = 2015\n );"}
{"db_id": "concert_singer", "query": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)", "query_toks": ["select", "count", "(", "*", ")", "from", "concert", "where", "stadium_id", "=", "(", "select", "stadium_id", "from", "stadium", "order", "by", "capacity", "desc", "limit", "1", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "concert", "where", "stadium_id", "=", "(", "select", "stadium_id", "from", "stadium", "order", "by", "capacity", "desc", "limit", "value", ")"], "question": "Find the number of concerts happened in the stadium with the highest capacity .", "question_toks": ["Find", "the", "number", "of", "concerts", "happened", "in", "the", "stadium", "with", "the", "highest", "capacity", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "43", "answer_text": [[0]], "trigger_words": ["Number"], "Prediction": "COUNT(*) \nFROM concert \nJOIN stadium ON concert.Stadium_ID=stadium.Stadium_ID \nWHERE stadium.Capacity = (SELECT MAX(Capacity) FROM stadium);"}
{"db_id": "concert_singer", "query": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)", "query_toks": ["select", "count", "(", "*", ")", "from", "concert", "where", "stadium_id", "=", "(", "select", "stadium_id", "from", "stadium", "order", "by", "capacity", "desc", "limit", "1", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "concert", "where", "stadium_id", "=", "(", "select", "stadium_id", "from", "stadium", "order", "by", "capacity", "desc", "limit", "value", ")"], "question": "What are the number of concerts that occurred in the stadium with the largest capacity ?", "question_toks": ["What", "are", "the", "number", "of", "concerts", "that", "occurred", "in", "the", "stadium", "with", "the", "largest", "capacity", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "44", "answer_text": [[0]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM concert \nWHERE Stadium_ID IN (SELECT Stadium_ID FROM stadium \n                     WHERE Capacity = (SELECT MAX(Capacity) FROM stadium));"}
{"db_id": "pets_1", "query": "SELECT count(*) FROM pets WHERE weight  >  10", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "pets", "WHERE", "weight", ">", "10"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "pets", "where", "weight", ">", "value"], "question": "Find the number of pets whose weight is heavier than 10.", "question_toks": ["Find", "the", "number", "of", "pets", "whose", "weight", "is", "heavier", "than", "10", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "45", "answer_text": [[2]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Pets WHERE weight > 10;"}
{"db_id": "pets_1", "query": "SELECT count(*) FROM pets WHERE weight  >  10", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "pets", "WHERE", "weight", ">", "10"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "pets", "where", "weight", ">", "value"], "question": "How many pets have a greater weight than 10?", "question_toks": ["How", "many", "pets", "have", "a", "greater", "weight", "than", "10", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "46", "answer_text": [[2]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Pets WHERE weight > 10;"}
{"db_id": "pets_1", "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1", "query_toks": ["SELECT", "weight", "FROM", "pets", "ORDER", "BY", "pet_age", "LIMIT", "1"], "query_toks_no_value": ["select", "weight", "from", "pets", "order", "by", "pet_age", "limit", "value"], "question": "Find the weight of the youngest dog.", "question_toks": ["Find", "the", "weight", "of", "the", "youngest", "dog", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "47", "answer_text": [[9.3]], "trigger_words": ["Weight"], "Prediction": "MIN(weight) FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog');"}
{"db_id": "pets_1", "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1", "query_toks": ["SELECT", "weight", "FROM", "pets", "ORDER", "BY", "pet_age", "LIMIT", "1"], "query_toks_no_value": ["select", "weight", "from", "pets", "order", "by", "pet_age", "limit", "value"], "question": "How much does the youngest dog weigh?", "question_toks": ["How", "much", "does", "the", "youngest", "dog", "weigh", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "48", "answer_text": [[9.3]], "trigger_words": ["Weight"], "Prediction": "MIN(weight) FROM Pets WHERE PetType='dog' AND pet_age=(SELECT MIN(pet_age) FROM Pets WHERE PetType='dog');"}
{"db_id": "pets_1", "query": "SELECT max(weight) ,  petType FROM pets GROUP BY petType", "query_toks": ["SELECT", "max", "(", "weight", ")", ",", "petType", "FROM", "pets", "GROUP", "BY", "petType"], "query_toks_no_value": ["select", "max", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype"], "question": "Find the maximum weight for each type of pet. List the maximum weight and pet type.", "question_toks": ["Find", "the", "maximum", "weight", "for", "each", "type", "of", "pet", ".", "List", "the", "maximum", "weight", "and", "pet", "type", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "49", "answer_text": [[12.0, "cat"], [13.4, "dog"]], "trigger_words": ["Maximal Number", "Pet Type"], "Prediction": "Pets.PetType, MAX(Pets.weight) \n FROM Has_Pet \n JOIN Pets ON Has_Pet.PetID=Pets.PetID \n GROUP BY Pets.PetType;"}
{"db_id": "pets_1", "query": "SELECT max(weight) ,  petType FROM pets GROUP BY petType", "query_toks": ["SELECT", "max", "(", "weight", ")", ",", "petType", "FROM", "pets", "GROUP", "BY", "petType"], "query_toks_no_value": ["select", "max", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype"], "question": "List the maximum weight and type for each type of pet.", "question_toks": ["List", "the", "maximum", "weight", "and", "type", "for", "each", "type", "of", "pet", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "50", "answer_text": [[12.0, "cat"], [13.4, "dog"]], "trigger_words": ["Maximal Number", "Pet Type"], "Prediction": "Pets.PetType, MAX(Pets.weight) \n FROM Pets \n JOIN Has_Pet ON Has_Pet.PetID=Pets.PetID \n GROUP BY Pets.PetType;"}
{"db_id": "pets_1", "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T1.age", ">", "20"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t1", ".", "age", ">", "value"], "question": "Find number of pets owned by students who are older than 20.", "question_toks": ["Find", "number", "of", "pets", "owned", "by", "students", "who", "are", "older", "than", "20", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "51", "answer_text": [[0]], "trigger_words": ["Number"], "Prediction": "COUNT(*) \nFROM Has_Pet \nJOIN Student ON Has_Pet.StuID = Student.StuID \nWHERE Student.Age > 20;"}
{"db_id": "pets_1", "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T1.age", ">", "20"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t1", ".", "age", ">", "value"], "question": "How many pets are owned by students that have an age greater than 20?", "question_toks": ["How", "many", "pets", "are", "owned", "by", "students", "that", "have", "an", "age", "greater", "than", "20", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "52", "answer_text": [[0]], "trigger_words": ["Number"], "Prediction": "COUNT(*) \nFROM Has_Pet \nJOIN Student ON Has_Pet.StuID = Student.StuID \nWHERE Student.Age > 20;"}
{"db_id": "pets_1", "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T2.petid", "=", "T3.petid", "WHERE", "T1.sex", "=", "'F", "'", "AND", "T3.pettype", "=", "'dog", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t2", ".", "petid", "=", "t3", ".", "petid", "where", "t1", ".", "sex", "=", "value", "and", "t3", ".", "pettype", "=", "value"], "question": "Find the number of dog pets that are raised by female students (with sex F).", "question_toks": ["Find", "the", "number", "of", "dog", "pets", "that", "are", "raised", "by", "female", "students", "(", "with", "sex", "F", ")", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 11, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"F\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"dog\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "53", "answer_text": [[2]], "trigger_words": ["Number"], "Prediction": "COUNT(*) \nFROM Has_Pet \nJOIN Pets ON Has_Pet.PetID = Pets.PetID \nJOIN Student ON Has_Pet.StuID = Student.StuID \nWHERE Pets.PetType = 'dog' AND Student.Sex = 'F';"}
{"db_id": "pets_1", "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T2.petid", "=", "T3.petid", "WHERE", "T1.sex", "=", "'F", "'", "AND", "T3.pettype", "=", "'dog", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t2", ".", "petid", "=", "t3", ".", "petid", "where", "t1", ".", "sex", "=", "value", "and", "t3", ".", "pettype", "=", "value"], "question": "How many dog pets are raised by female students?", "question_toks": ["How", "many", "dog", "pets", "are", "raised", "by", "female", "students", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 11, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"F\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"dog\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "54", "answer_text": [[2]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Has_Pet \nJOIN Pets ON Has_Pet.PetID=Pets.PetID \nJOIN Student ON Has_Pet.StuID=Student.StuID \nWHERE Student.Sex='female' AND Pets.PetType='dog';"}
{"db_id": "pets_1", "query": "SELECT count(DISTINCT pettype) FROM pets", "query_toks": ["SELECT", "count", "(", "DISTINCT", "pettype", ")", "FROM", "pets"], "query_toks_no_value": ["select", "count", "(", "distinct", "pettype", ")", "from", "pets"], "question": "Find the number of distinct type of pets.", "question_toks": ["Find", "the", "number", "of", "distinct", "type", "of", "pets", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 12, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "55", "answer_text": [[2]], "trigger_words": ["Number Of Pet Type"], "Prediction": "COUNT(DISTINCT PetType) FROM Pets;"}
{"db_id": "pets_1", "query": "SELECT count(DISTINCT pettype) FROM pets", "query_toks": ["SELECT", "count", "(", "DISTINCT", "pettype", ")", "FROM", "pets"], "query_toks_no_value": ["select", "count", "(", "distinct", "pettype", ")", "from", "pets"], "question": "How many different types of pet are there?", "question_toks": ["How", "many", "different", "types", "of", "pet", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 12, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "56", "answer_text": [[2]], "trigger_words": ["Number Of Pet Type"], "Prediction": "COUNT(DISTINCT PetType) FROM Pets;"}
{"db_id": "pets_1", "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'", "query_toks": ["SELECT", "DISTINCT", "T1.Fname", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'cat", "'", "OR", "T3.pettype", "=", "'dog", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value", "or", "t3", ".", "pettype", "=", "value"], "question": "Find the first name of students who have cat or dog pet.", "question_toks": ["Find", "the", "first", "name", "of", "students", "who", "have", "cat", "or", "dog", "pet", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null], "or", [false, 2, [0, [0, 12, false], null], "\"dog\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "57", "answer_text": [["Linda"], ["Tracy"]], "trigger_words": ["First Name"], "Prediction": "Student.Fname\nFROM Student\nJOIN Has_Pet ON Has_Pet.StuID = Student.StuID\nJOIN Pets ON Has_Pet.PetID = Pets.PetID\nWHERE Pets.PetType IN ('cat', 'dog');"}
{"db_id": "pets_1", "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'", "query_toks": ["SELECT", "DISTINCT", "T1.Fname", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'cat", "'", "OR", "T3.pettype", "=", "'dog", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value", "or", "t3", ".", "pettype", "=", "value"], "question": "What are the first names of every student who has a cat or dog as a pet?", "question_toks": ["What", "are", "the", "first", "names", "of", "every", "student", "who", "has", "a", "cat", "or", "dog", "as", "a", "pet", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null], "or", [false, 2, [0, [0, 12, false], null], "\"dog\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "58", "answer_text": [["Linda"], ["Tracy"]], "trigger_words": ["First Name"], "Prediction": "Student.Fname\nFROM Student\nJOIN Has_Pet ON Student.StuID = Has_Pet.StuID\nJOIN Pets ON Has_Pet.PetID = Pets.PetID\nWHERE Pets.PetType IN ('cat', 'dog')"}
{"db_id": "pets_1", "query": "select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'", "query_toks": ["select", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"cat\"", "intersect", "select", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"dog\""], "query_toks_no_value": ["select", "t1", ".", "fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value", "intersect", "select", "t1", ".", "fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value"], "question": "Find the first name of students who have both cat and dog pets .", "question_toks": ["Find", "the", "first", "name", "of", "students", "who", "have", "both", "cat", "and", "dog", "pets", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"dog\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "59", "answer_text": [], "trigger_words": ["First Name"], "Prediction": "Student.Fname\nFROM Student\nJOIN Has_Pet ON Student.StuID = Has_Pet.StuID\nJOIN Pets ON Has_Pet.PetID = Pets.PetID\nWHERE Pets.PetType = 'cat' AND Student.StuID IN (\n  SELECT Student.StuID\n  FROM Student\n  JOIN Has_Pet ON Student.StuID = Has_Pet.StuID\n  JOIN Pets ON Has_Pet.PetID = Pets.PetID\n  WHERE Pets.PetType = 'dog'\n)"}
{"db_id": "pets_1", "query": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'", "query_toks": ["SELECT", "T1.Fname", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'cat", "'", "INTERSECT", "SELECT", "T1.Fname", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'dog", "'"], "query_toks_no_value": ["select", "t1", ".", "fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value", "intersect", "select", "t1", ".", "fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value"], "question": "What are the students' first names who have both cats and dogs as pets?", "question_toks": ["What", "are", "the", "students", "'", "first", "names", "who", "have", "both", "cats", "and", "dogs", "as", "pets", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"dog\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "60", "answer_text": [], "trigger_words": ["First Name"], "Prediction": "Student.Fname\nFROM Student\nJOIN Has_Pet ON Student.StuID = Has_Pet.StuID\nJOIN Pets ON Has_Pet.PetID = Pets.PetID\nWHERE Pets.PetType = 'cat' AND Student.StuID IN (\n  SELECT Has_Pet.StuID\n  FROM Has_Pet\n  JOIN Pets ON Has_Pet.PetID = Pets.PetID\n  WHERE Pets.PetType = 'dog'\n)"}
{"db_id": "pets_1", "query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "query_toks": ["SELECT", "major", ",", "age", "FROM", "student", "WHERE", "stuid", "NOT", "IN", "(", "SELECT", "T1.stuid", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'cat", "'", ")"], "query_toks_no_value": ["select", "major", ",", "age", "from", "student", "where", "stuid", "not", "in", "(", "select", "t1", ".", "stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value", ")"], "question": "Find the major and age of students who do not have a cat pet.", "question_toks": ["Find", "the", "major", "and", "age", "of", "students", "who", "do", "not", "have", "a", "cat", "pet", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "61", "answer_text": [[600, 19], [600, 21], [600, 20], [600, 26], [600, 18], [600, 18], [600, 20], [600, 19], [600, 17], [600, 22], [600, 20], [600, 18], [600, 16], [600, 17], [600, 27], [600, 20], [600, 18], [520, 22], [520, 19], [540, 17], [520, 20], [540, 18], [520, 18], [520, 19], [520, 18], [550, 20], [100, 17], [550, 21], [550, 20], [550, 20], [550, 18], [50, 18], [50, 26]], "trigger_words": ["Major", "Age"], "Prediction": "Student.Major, Student.Age\n FROM Student\n WHERE Student.StuID NOT IN (\n     SELECT Has_Pet.StuID\n     FROM Has_Pet\n     JOIN Pets ON Has_Pet.PetID = Pets.PetID\n     WHERE Pets.PetType = 'cat'\n );"}
{"db_id": "pets_1", "query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "query_toks": ["SELECT", "major", ",", "age", "FROM", "student", "WHERE", "stuid", "NOT", "IN", "(", "SELECT", "T1.stuid", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'cat", "'", ")"], "query_toks_no_value": ["select", "major", ",", "age", "from", "student", "where", "stuid", "not", "in", "(", "select", "t1", ".", "stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value", ")"], "question": "What major is every student who does not own a cat as a pet, and also how old are they?", "question_toks": ["What", "major", "is", "every", "student", "who", "does", "not", "own", "a", "cat", "as", "a", "pet", ",", "and", "also", "how", "old", "are", "they", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "62", "answer_text": [[600, 19], [600, 21], [600, 20], [600, 26], [600, 18], [600, 18], [600, 20], [600, 19], [600, 17], [600, 22], [600, 20], [600, 18], [600, 16], [600, 17], [600, 27], [600, 20], [600, 18], [520, 22], [520, 19], [540, 17], [520, 20], [540, 18], [520, 18], [520, 19], [520, 18], [550, 20], [100, 17], [550, 21], [550, 20], [550, 20], [550, 18], [50, 18], [50, 26]], "trigger_words": ["Major", "Age"], "Prediction": "Student.Major, Student.Age \nFROM Student \nWHERE Student.StuID NOT IN \n    (SELECT Has_Pet.StuID \n     FROM Has_Pet \n     JOIN Pets ON Has_Pet.PetID = Pets.PetID \n     WHERE Pets.PetType = 'cat');"}
{"db_id": "pets_1", "query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'", "query_toks": ["SELECT", "stuid", "FROM", "student", "EXCEPT", "SELECT", "T1.stuid", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'cat", "'"], "query_toks_no_value": ["select", "stuid", "from", "student", "except", "select", "t1", ".", "stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value"], "question": "Find the id of students who do not have a cat pet.", "question_toks": ["Find", "the", "id", "of", "students", "who", "do", "not", "have", "a", "cat", "pet", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "63", "answer_text": [[1002], [1003], [1004], [1005], [1006], [1007], [1008], [1009], [1010], [1011], [1012], [1014], [1015], [1016], [1017], [1018], [1019], [1020], [1021], [1022], [1023], [1024], [1025], [1026], [1027], [1028], [1029], [1030], [1031], [1032], [1033], [1034], [1035]], "trigger_words": ["Stu Id"], "Prediction": "Student.StuID \nFROM Student \nLEFT JOIN Has_Pet ON Student.StuID = Has_Pet.StuID \nLEFT JOIN Pets ON Has_Pet.PetID = Pets.PetID \nWHERE Pets.PetType != 'cat' OR Pets.PetType IS NULL;"}
{"db_id": "pets_1", "query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'", "query_toks": ["SELECT", "stuid", "FROM", "student", "EXCEPT", "SELECT", "T1.stuid", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'cat", "'"], "query_toks_no_value": ["select", "stuid", "from", "student", "except", "select", "t1", ".", "stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value"], "question": "What are the ids of the students who do not own cats as pets?", "question_toks": ["What", "are", "the", "ids", "of", "the", "students", "who", "do", "not", "own", "cats", "as", "pets", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "64", "answer_text": [[1002], [1003], [1004], [1005], [1006], [1007], [1008], [1009], [1010], [1011], [1012], [1014], [1015], [1016], [1017], [1018], [1019], [1020], [1021], [1022], [1023], [1024], [1025], [1026], [1027], [1028], [1029], [1030], [1031], [1032], [1033], [1034], [1035]], "trigger_words": ["Stu Id"], "Prediction": "Student.StuID \nFROM Student \nWHERE Student.StuID NOT IN \n(SELECT Has_Pet.StuID \nFROM Has_Pet \nJOIN Pets ON Has_Pet.PetID = Pets.PetID \nWHERE Pets.PetType = 'cat');"}
{"db_id": "pets_1", "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "query_toks": ["SELECT", "T1.fname", ",", "T1.age", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'dog", "'", "AND", "T1.stuid", "NOT", "IN", "(", "SELECT", "T1.stuid", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'cat", "'", ")"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value", "and", "t1", ".", "stuid", "not", "in", "(", "select", "t1", ".", "stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value", ")"], "question": "Find the first name and age of students who have a dog but do not have a cat as a pet.", "question_toks": ["Find", "the", "first", "name", "and", "age", "of", "students", "who", "have", "a", "dog", "but", "do", "not", "have", "a", "cat", "as", "a", "pet", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"dog\"", null], "and", [true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "65", "answer_text": [["Tracy", 19], ["Tracy", 19]], "trigger_words": ["First Name", "Age"], "Prediction": "Student.Fname, Student.Age\nFROM Student\nJOIN Has_Pet ON Student.StuID = Has_Pet.StuID\nJOIN Pets ON Has_Pet.PetID = Pets.PetID\nWHERE Pets.PetType = 'dog' AND Student.StuID NOT IN (\n    SELECT Student.StuID\n    FROM Student\n    JOIN Has_Pet ON Student.StuID = Has_Pet.StuID\n    JOIN Pets ON Has_Pet.PetID = Pets.PetID\n    WHERE Pets.PetType = 'cat'\n)"}
{"db_id": "pets_1", "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "query_toks": ["SELECT", "T1.fname", ",", "T1.age", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'dog", "'", "AND", "T1.stuid", "NOT", "IN", "(", "SELECT", "T1.stuid", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pettype", "=", "'cat", "'", ")"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value", "and", "t1", ".", "stuid", "not", "in", "(", "select", "t1", ".", "stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pettype", "=", "value", ")"], "question": "What is the first name of every student who has a dog but does not have a cat?", "question_toks": ["What", "is", "the", "first", "name", "of", "every", "student", "who", "has", "a", "dog", "but", "does", "not", "have", "a", "cat", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"dog\"", null], "and", [true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "66", "answer_text": [["Tracy", 19], ["Tracy", 19]], "trigger_words": ["First Name", "Age"], "Prediction": "Student.Fname \nFROM Student \nJOIN Has_Pet ON Student.StuID = Has_Pet.StuID \nJOIN Pets ON Has_Pet.PetID = Pets.PetID \nWHERE Pets.PetType = 'dog' AND Student.StuID NOT IN \n(SELECT Student.StuID FROM Student \nJOIN Has_Pet ON Student.StuID = Has_Pet.StuID \nJOIN Pets ON Has_Pet.PetID = Pets.PetID \nWHERE Pets.PetType = 'cat')"}
{"db_id": "pets_1", "query": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1", "query_toks": ["SELECT", "pettype", ",", "weight", "FROM", "pets", "ORDER", "BY", "pet_age", "LIMIT", "1"], "query_toks_no_value": ["select", "pettype", ",", "weight", "from", "pets", "order", "by", "pet_age", "limit", "value"], "question": "Find the type and weight of the youngest pet.", "question_toks": ["Find", "the", "type", "and", "weight", "of", "the", "youngest", "pet", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "67", "answer_text": [["dog", 9.3]], "trigger_words": ["Pet Type", "Weight"], "Prediction": "Pets.PetType, Pets.weight \n FROM Pets \n WHERE Pets.pet_age = (SELECT MIN(pet_age) FROM Pets);"}
{"db_id": "pets_1", "query": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1", "query_toks": ["SELECT", "pettype", ",", "weight", "FROM", "pets", "ORDER", "BY", "pet_age", "LIMIT", "1"], "query_toks_no_value": ["select", "pettype", ",", "weight", "from", "pets", "order", "by", "pet_age", "limit", "value"], "question": "What type of pet is the youngest animal, and how much does it weigh?", "question_toks": ["What", "type", "of", "pet", "is", "the", "youngest", "animal", ",", "and", "how", "much", "does", "it", "weigh", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "68", "answer_text": [["dog", 9.3]], "trigger_words": ["Pet Type", "Weight"], "Prediction": "Pets.PetType, Pets.weight \n FROM Pets \n WHERE Pets.pet_age = (SELECT MIN(pet_age) FROM Pets)"}
{"db_id": "pets_1", "query": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1", "query_toks": ["SELECT", "petid", ",", "weight", "FROM", "pets", "WHERE", "pet_age", ">", "1"], "query_toks_no_value": ["select", "petid", ",", "weight", "from", "pets", "where", "pet_age", ">", "value"], "question": "Find the id and weight of all pets whose age is older than 1.", "question_toks": ["Find", "the", "id", "and", "weight", "of", "all", "pets", "whose", "age", "is", "older", "than", "1", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "69", "answer_text": [[2001, 12.0], [2002, 13.4]], "trigger_words": ["Pet Id", "Weight"], "Prediction": "Pets.PetID, Pets.weight\n FROM Pets\n WHERE Pets.pet_age > 1;"}
{"db_id": "pets_1", "query": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1", "query_toks": ["SELECT", "petid", ",", "weight", "FROM", "pets", "WHERE", "pet_age", ">", "1"], "query_toks_no_value": ["select", "petid", ",", "weight", "from", "pets", "where", "pet_age", ">", "value"], "question": "What is the id and weight of every pet who is older than 1?", "question_toks": ["What", "is", "the", "id", "and", "weight", "of", "every", "pet", "who", "is", "older", "than", "1", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "70", "answer_text": [[2001, 12.0], [2002, 13.4]], "trigger_words": ["Pet Id", "Weight"], "Prediction": "PetID, weight FROM Pets WHERE pet_age > 1;"}
{"db_id": "pets_1", "query": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype", "query_toks": ["SELECT", "avg", "(", "pet_age", ")", ",", "max", "(", "pet_age", ")", ",", "pettype", "FROM", "pets", "GROUP", "BY", "pettype"], "query_toks_no_value": ["select", "avg", "(", "pet_age", ")", ",", "max", "(", "pet_age", ")", ",", "pettype", "from", "pets", "group", "by", "pettype"], "question": "Find the average and maximum age for each type of pet.", "question_toks": ["Find", "the", "average", "and", "maximum", "age", "for", "each", "type", "of", "pet", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]], [1, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "71", "answer_text": [[3.0, 3, "cat"], [1.5, 2, "dog"]], "trigger_words": ["Average Number", "Maximal Number", "Pet Type"], "Prediction": "Pets.PetType, AVG(Pets.pet_age), MAX(Pets.pet_age)\n FROM Has_Pet\n JOIN Pets ON Has_Pet.PetID=Pets.PetID\n GROUP BY Pets.PetType;"}
{"db_id": "pets_1", "query": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype", "query_toks": ["SELECT", "avg", "(", "pet_age", ")", ",", "max", "(", "pet_age", ")", ",", "pettype", "FROM", "pets", "GROUP", "BY", "pettype"], "query_toks_no_value": ["select", "avg", "(", "pet_age", ")", ",", "max", "(", "pet_age", ")", ",", "pettype", "from", "pets", "group", "by", "pettype"], "question": "What is the average and maximum age for each pet type?", "question_toks": ["What", "is", "the", "average", "and", "maximum", "age", "for", "each", "pet", "type", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]], [1, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "72", "answer_text": [[3.0, 3, "cat"], [1.5, 2, "dog"]], "trigger_words": ["Average Number", "Maximal Number", "Pet Type"], "Prediction": "Pets.PetType, AVG(Pets.pet_age), MAX(Pets.pet_age)\n FROM Has_Pet\n JOIN Pets ON Has_Pet.PetID = Pets.PetID\n GROUP BY Pets.PetType;"}
{"db_id": "pets_1", "query": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype", "query_toks": ["SELECT", "avg", "(", "weight", ")", ",", "pettype", "FROM", "pets", "GROUP", "BY", "pettype"], "query_toks_no_value": ["select", "avg", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype"], "question": "Find the average weight for each pet type.", "question_toks": ["Find", "the", "average", "weight", "for", "each", "pet", "type", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 14, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "73", "answer_text": [[12.0, "cat"], [11.35, "dog"]], "trigger_words": ["Average Number", "Pet Type"], "Prediction": "Pets.PetType, AVG(Pets.weight) \n FROM Pets \n JOIN Has_Pet ON Has_Pet.PetID=Pets.PetID \n GROUP BY Pets.PetType;"}
{"db_id": "pets_1", "query": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype", "query_toks": ["SELECT", "avg", "(", "weight", ")", ",", "pettype", "FROM", "pets", "GROUP", "BY", "pettype"], "query_toks_no_value": ["select", "avg", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype"], "question": "What is the average weight for each type of pet?", "question_toks": ["What", "is", "the", "average", "weight", "for", "each", "type", "of", "pet", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 14, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "74", "answer_text": [[12.0, "cat"], [11.35, "dog"]], "trigger_words": ["Average Number", "Pet Type"], "Prediction": "Pets.PetType, AVG(Pets.weight) \n FROM Has_Pet \n JOIN Pets ON Has_Pet.PetID=Pets.PetID \n GROUP BY Pets.PetType;"}
{"db_id": "pets_1", "query": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid", "query_toks": ["SELECT", "DISTINCT", "T1.fname", ",", "T1.age", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid"], "question": "Find the first name and age of students who have a pet.", "question_toks": ["Find", "the", "first", "name", "and", "age", "of", "students", "who", "have", "a", "pet", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "75", "answer_text": [["Linda", 18], ["Tracy", 19]], "trigger_words": ["First Name", "Age"], "Prediction": "Student.Fname, Student.Age\n FROM Student\n JOIN Has_Pet ON Student.StuID = Has_Pet.StuID\n JOIN Pets ON Has_Pet.PetID = Pets.PetID;"}
{"db_id": "pets_1", "query": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid", "query_toks": ["SELECT", "DISTINCT", "T1.fname", ",", "T1.age", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid"], "question": "What are the different first names and ages of the students who do have pets?", "question_toks": ["What", "are", "the", "different", "first", "names", "and", "ages", "of", "the", "students", "who", "do", "have", "pets", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "76", "answer_text": [["Linda", 18], ["Tracy", 19]], "trigger_words": ["First Name", "Age"], "Prediction": "Student.Fname, Student.Age\n FROM Student\n JOIN Has_Pet ON Has_Pet.StuID = Student.StuID\n JOIN Pets ON Has_Pet.PetID = Pets.PetID;"}
{"db_id": "pets_1", "query": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'", "query_toks": ["SELECT", "T2.petid", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T1.Lname", "=", "'Smith", "'"], "query_toks_no_value": ["select", "t2", ".", "petid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t1", ".", "lname", "=", "value"], "question": "Find the id of the pet owned by student whose last name is \u2018Smith\u2019.", "question_toks": ["Find", "the", "id", "of", "the", "pet", "owned", "by", "student", "whose", "last", "name", "is", "\u2018Smith\u2019", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Smith\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "77", "answer_text": [[2001]], "trigger_words": ["Pet Id"], "Prediction": "Pets.PetID \nFROM Has_Pet \nJOIN Student ON Has_Pet.StuID = Student.StuID \nJOIN Pets ON Has_Pet.PetID = Pets.PetID \nWHERE Student.LName = 'Smith';"}
{"db_id": "pets_1", "query": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'", "query_toks": ["SELECT", "T2.petid", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T1.Lname", "=", "'Smith", "'"], "query_toks_no_value": ["select", "t2", ".", "petid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t1", ".", "lname", "=", "value"], "question": "What is the id of the pet owned by the student whose last name is 'Smith'?", "question_toks": ["What", "is", "the", "id", "of", "the", "pet", "owned", "by", "the", "student", "whose", "last", "name", "is", "'Smith", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Smith\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "78", "answer_text": [[2001]], "trigger_words": ["Pet Id"], "Prediction": "Pets.PetID \nFROM Has_Pet \nJOIN Student ON Has_Pet.StuID=Student.StuID \nJOIN Pets ON Has_Pet.PetID=Pets.PetID \nWHERE Student.LName='Smith'"}
{"db_id": "pets_1", "query": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.stuid", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "GROUP", "BY", "T1.stuid"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "group", "by", "t1", ".", "stuid"], "question": "Find the number of pets for each student who has any pet and student id.", "question_toks": ["Find", "the", "number", "of", "pets", "for", "each", "student", "who", "has", "any", "pet", "and", "student", "id", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "79", "answer_text": [[1, 1001], [2, 1002]], "trigger_words": ["Number", "Stu Id"], "Prediction": "Student.StuID, COUNT(Has_Pet.PetID) AS num_pets\n FROM Has_Pet\n JOIN Student ON Has_Pet.StuID = Student.StuID\n GROUP BY Student.StuID;"}
{"db_id": "pets_1", "query": "select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid", "query_toks": ["select", "count", "(", "*", ")", ",", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "group", "by", "t1.stuid"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "group", "by", "t1", ".", "stuid"], "question": "For students who have pets , how many pets does each student have ? list their ids instead of names .", "question_toks": ["For", "students", "who", "have", "pets", ",", "how", "many", "pets", "does", "each", "student", "have", "?", "list", "their", "ids", "instead", "of", "names", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "80", "answer_text": [[1, 1001], [2, 1002]], "trigger_words": ["Number", "Stu Id"], "Prediction": "Student.StuID, COUNT(Has_Pet.PetID) \n FROM Student \n JOIN Has_Pet ON Student.StuID=Has_Pet.StuID \n GROUP BY Student.StuID;"}
{"db_id": "pets_1", "query": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1", "query_toks": ["SELECT", "T1.fname", ",", "T1.sex", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "GROUP", "BY", "T1.stuid", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "sex", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "group", "by", "t1", ".", "stuid", "having", "count", "(", "*", ")", ">", "value"], "question": "Find the first name and gender of student who have more than one pet.", "question_toks": ["Find", "the", "first", "name", "and", "gender", "of", "student", "who", "have", "more", "than", "one", "pet", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "81", "answer_text": [["Tracy", "F"]], "trigger_words": ["First Name", "Sex"], "Prediction": "Student.Fname, Student.Sex\n FROM Student\n JOIN Has_Pet ON Has_Pet.StuID = Student.StuID\n GROUP BY Student.StuID\n HAVING COUNT(Has_Pet.PetID) > 1;"}
{"db_id": "pets_1", "query": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1", "query_toks": ["SELECT", "T1.fname", ",", "T1.sex", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "GROUP", "BY", "T1.stuid", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "sex", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "group", "by", "t1", ".", "stuid", "having", "count", "(", "*", ")", ">", "value"], "question": "What is the first name and gender of the all the students who have more than one pet?", "question_toks": ["What", "is", "the", "first", "name", "and", "gender", "of", "the", "all", "the", "students", "who", "have", "more", "than", "one", "pet", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "82", "answer_text": [["Tracy", "F"]], "trigger_words": ["First Name", "Sex"], "Prediction": "Student.Fname, Student.Sex\n FROM Student\n JOIN Has_Pet ON Has_Pet.StuID = Student.StuID\n GROUP BY Student.StuID\n HAVING COUNT(Has_Pet.PetID) > 1;"}
{"db_id": "pets_1", "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'", "query_toks": ["SELECT", "T1.lname", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pet_age", "=", "3", "AND", "T3.pettype", "=", "'cat", "'"], "query_toks_no_value": ["select", "t1", ".", "lname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pet_age", "=", "value", "and", "t3", ".", "pettype", "=", "value"], "question": "Find the last name of the student who has a cat that is age 3.", "question_toks": ["Find", "the", "last", "name", "of", "the", "student", "who", "has", "a", "cat", "that", "is", "age", "3", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], 3.0, null], "and", [false, 2, [0, [0, 12, false], null], "\"cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "83", "answer_text": [["Smith"]], "trigger_words": ["Last Name"], "Prediction": "Student.LName\nFROM Student\nJOIN Has_Pet ON Student.StuID = Has_Pet.StuID\nJOIN Pets ON Has_Pet.PetID = Pets.PetID\nWHERE Pets.PetType = 'cat' AND Pets.pet_age = 3;"}
{"db_id": "pets_1", "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'", "query_toks": ["SELECT", "T1.lname", "FROM", "student", "AS", "T1", "JOIN", "has_pet", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "pets", "AS", "T3", "ON", "T3.petid", "=", "T2.petid", "WHERE", "T3.pet_age", "=", "3", "AND", "T3.pettype", "=", "'cat", "'"], "query_toks_no_value": ["select", "t1", ".", "lname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "pets", "as", "t3", "on", "t3", ".", "petid", "=", "t2", ".", "petid", "where", "t3", ".", "pet_age", "=", "value", "and", "t3", ".", "pettype", "=", "value"], "question": "What is the last name of the student who has a cat that is 3 years old?", "question_toks": ["What", "is", "the", "last", "name", "of", "the", "student", "who", "has", "a", "cat", "that", "is", "3", "years", "old", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], 3.0, null], "and", [false, 2, [0, [0, 12, false], null], "\"cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "84", "answer_text": [["Smith"]], "trigger_words": ["Last Name"], "Prediction": "Student.LName \nFROM Student \nJOIN Has_Pet ON Student.StuID=Has_Pet.StuID \nJOIN Pets ON Has_Pet.PetID=Pets.PetID \nWHERE Pets.PetType='cat' AND Pets.pet_age=3;"}
{"db_id": "pets_1", "query": "select avg(age) from student where stuid not in (select stuid from has_pet)", "query_toks": ["select", "avg", "(", "age", ")", "from", "student", "where", "stuid", "not", "in", "(", "select", "stuid", "from", "has_pet", ")"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "student", "where", "stuid", "not", "in", "(", "select", "stuid", "from", "has_pet", ")"], "question": "Find the average age of students who do not have any pet .", "question_toks": ["Find", "the", "average", "age", "of", "students", "who", "do", "not", "have", "any", "pet", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "85", "answer_text": [[19.625]], "trigger_words": ["Average Number"], "Prediction": "AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);"}
{"db_id": "pets_1", "query": "select avg(age) from student where stuid not in (select stuid from has_pet)", "query_toks": ["select", "avg", "(", "age", ")", "from", "student", "where", "stuid", "not", "in", "(", "select", "stuid", "from", "has_pet", ")"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "student", "where", "stuid", "not", "in", "(", "select", "stuid", "from", "has_pet", ")"], "question": "What is the average age for all students who do not own any pets ?", "question_toks": ["What", "is", "the", "average", "age", "for", "all", "students", "who", "do", "not", "own", "any", "pets", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "86", "answer_text": [[19.625]], "trigger_words": ["Average Number"], "Prediction": "AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);"}
{"db_id": "car_1", "query": "SELECT count(*) FROM CONTINENTS;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CONTINENTS", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "continents"], "question": "How many continents are there?", "question_toks": ["How", "many", "continents", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "87", "answer_text": [[5]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM continents;"}
{"db_id": "car_1", "query": "SELECT count(*) FROM CONTINENTS;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CONTINENTS", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "continents"], "question": "What is the number of continents?", "question_toks": ["What", "is", "the", "number", "of", "continents", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "88", "answer_text": [[5]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM continents;"}
{"db_id": "car_1", "query": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;", "query_toks": ["SELECT", "T1.ContId", ",", "T1.Continent", ",", "count", "(", "*", ")", "FROM", "CONTINENTS", "AS", "T1", "JOIN", "COUNTRIES", "AS", "T2", "ON", "T1.ContId", "=", "T2.Continent", "GROUP", "BY", "T1.ContId", ";"], "query_toks_no_value": ["select", "t1", ".", "contid", ",", "t1", ".", "continent", ",", "count", "(", "*", ")", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1", ".", "contid", "=", "t2", ".", "continent", "group", "by", "t1", ".", "contid"], "question": "How many countries does each continent have? List the continent id, continent name and the number of countries.", "question_toks": ["How", "many", "countries", "does", "each", "continent", "have", "?", "List", "the", "continent", "id", ",", "continent", "name", "and", "the", "number", "of", "countries", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "89", "answer_text": [[1, "america", 3], [2, "europe", 6], [3, "asia", 2], [4, "africa", 2], [5, "australia", 2]], "trigger_words": ["Continent Id", "Continent", "Number"], "Prediction": "continents.ContId, continents.Continent, COUNT(countries.CountryId) \n FROM continents \n JOIN countries ON countries.Continent=continents.ContId \n GROUP BY continents.ContId;"}
{"db_id": "car_1", "query": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;", "query_toks": ["SELECT", "T1.ContId", ",", "T1.Continent", ",", "count", "(", "*", ")", "FROM", "CONTINENTS", "AS", "T1", "JOIN", "COUNTRIES", "AS", "T2", "ON", "T1.ContId", "=", "T2.Continent", "GROUP", "BY", "T1.ContId", ";"], "query_toks_no_value": ["select", "t1", ".", "contid", ",", "t1", ".", "continent", ",", "count", "(", "*", ")", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1", ".", "contid", "=", "t2", ".", "continent", "group", "by", "t1", ".", "contid"], "question": "For each continent, list its id, name, and how many countries it has?", "question_toks": ["For", "each", "continent", ",", "list", "its", "id", ",", "name", ",", "and", "how", "many", "countries", "it", "has", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "90", "answer_text": [[1, "america", 3], [2, "europe", 6], [3, "asia", 2], [4, "africa", 2], [5, "australia", 2]], "trigger_words": ["Continent Id", "Continent", "Number"], "Prediction": "continents.ContId, continents.Continent, COUNT(countries.CountryId) \n FROM continents \n JOIN countries ON countries.Continent=continents.ContId \n GROUP BY continents.ContId;"}
{"db_id": "car_1", "query": "SELECT count(*) FROM COUNTRIES;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "COUNTRIES", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "countries"], "question": "How many countries are listed?", "question_toks": ["How", "many", "countries", "are", "listed", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "91", "answer_text": [[15]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM countries;"}
{"db_id": "car_1", "query": "SELECT count(*) FROM COUNTRIES;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "COUNTRIES", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "countries"], "question": "How many countries exist?", "question_toks": ["How", "many", "countries", "exist", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "92", "answer_text": [[15]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM countries;"}
{"db_id": "car_1", "query": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;", "query_toks": ["SELECT", "T1.FullName", ",", "T1.Id", ",", "count", "(", "*", ")", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Id", "=", "T2.Maker", "GROUP", "BY", "T1.Id", ";"], "query_toks_no_value": ["select", "t1", ".", "fullname", ",", "t1", ".", "id", ",", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "group", "by", "t1", ".", "id"], "question": "How many models does each car maker produce? List maker full name, id and the number.", "question_toks": ["How", "many", "models", "does", "each", "car", "maker", "produce", "?", "List", "maker", "full", "name", ",", "id", "and", "the", "number", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "93", "answer_text": [["American Motor Company", 1, 1], ["Volkswagen", 2, 2], ["BMW", 3, 1], ["General Motors", 4, 5], ["Ford Motor Company", 5, 3], ["Chrysler", 6, 4], ["Citroen", 7, 1], ["Nissan Motors", 8, 2], ["Fiat", 9, 1], ["Honda", 11, 1], ["Mazda", 12, 1], ["Daimler Benz", 13, 2], ["Opel", 14, 1], ["Peugeaut", 15, 1], ["Renault", 16, 1], ["Saab", 17, 1], ["Subaru", 18, 1], ["Toyota", 19, 2], ["Triumph", 20, 1], ["Volvo", 21, 1], ["Kia Motors", 22, 1], ["Hyundai", 23, 1]], "trigger_words": ["Full Name", "Id", "Number"], "Prediction": "car_makers.FullName, car_makers.Id, COUNT(car_names.Model) \n FROM car_makers \n JOIN car_names ON car_makers.Id = car_names.MakeId \n GROUP BY car_makers.Id;"}
{"db_id": "car_1", "query": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;", "query_toks": ["SELECT", "T1.FullName", ",", "T1.Id", ",", "count", "(", "*", ")", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Id", "=", "T2.Maker", "GROUP", "BY", "T1.Id", ";"], "query_toks_no_value": ["select", "t1", ".", "fullname", ",", "t1", ".", "id", ",", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "group", "by", "t1", ".", "id"], "question": "What is the full name of each car maker, along with its id and how many models it produces?", "question_toks": ["What", "is", "the", "full", "name", "of", "each", "car", "maker", ",", "along", "with", "its", "id", "and", "how", "many", "models", "it", "produces", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "94", "answer_text": [["American Motor Company", 1, 1], ["Volkswagen", 2, 2], ["BMW", 3, 1], ["General Motors", 4, 5], ["Ford Motor Company", 5, 3], ["Chrysler", 6, 4], ["Citroen", 7, 1], ["Nissan Motors", 8, 2], ["Fiat", 9, 1], ["Honda", 11, 1], ["Mazda", 12, 1], ["Daimler Benz", 13, 2], ["Opel", 14, 1], ["Peugeaut", 15, 1], ["Renault", 16, 1], ["Saab", 17, 1], ["Subaru", 18, 1], ["Toyota", 19, 2], ["Triumph", 20, 1], ["Volvo", 21, 1], ["Kia Motors", 22, 1], ["Hyundai", 23, 1]], "trigger_words": ["Full Name", "Id", "Number"], "Prediction": "car_makers.Id, car_makers.FullName, COUNT(model_list.ModelId) AS num_models\n FROM car_makers\n JOIN model_list ON car_makers.Id = model_list.Maker\n GROUP BY car_makers.Id, car_makers.FullName;"}
{"db_id": "car_1", "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;", "query_toks": ["SELECT", "T1.Model", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "ORDER", "BY", "T2.horsepower", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "order", "by", "t2", ".", "horsepower", "asc", "limit", "value"], "question": "Which model of the car has the minimum horsepower?", "question_toks": ["Which", "model", "of", "the", "car", "has", "the", "minimum", "horsepower", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "95", "answer_text": [["amc"]], "trigger_words": ["Model"], "Prediction": "Model FROM cars_data \nJOIN car_names ON cars_data.Id=car_names.MakeId \nWHERE Horsepower = (SELECT MIN(Horsepower) FROM cars_data);"}
{"db_id": "car_1", "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;", "query_toks": ["SELECT", "T1.Model", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "ORDER", "BY", "T2.horsepower", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "order", "by", "t2", ".", "horsepower", "asc", "limit", "value"], "question": "What is the model of the car with the smallest amount of horsepower?", "question_toks": ["What", "is", "the", "model", "of", "the", "car", "with", "the", "smallest", "amount", "of", "horsepower", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "96", "answer_text": [["amc"]], "trigger_words": ["Model"], "Prediction": "car_names.Model\nFROM car_names\nJOIN cars_data ON car_names.MakeId = cars_data.Id\nWHERE cars_data.Horsepower = (SELECT MIN(Horsepower) FROM cars_data);"}
{"db_id": "car_1", "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)", "query_toks": ["SELECT", "T1.model", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "WHERE", "T2.Weight", "<", "(", "SELECT", "avg", "(", "Weight", ")", "FROM", "CARS_DATA", ")"], "query_toks_no_value": ["select", "t1", ".", "model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "where", "t2", ".", "weight", "<", "(", "select", "avg", "(", "weight", ")", "from", "cars_data", ")"], "question": "Find the model of the car whose weight is below the average weight.", "question_toks": ["Find", "the", "model", "of", "the", "car", "whose", "weight", "is", "below", "the", "average", "weight", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 4, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "97", "answer_text": [["toyota"], ["plymouth"], ["amc"], ["ford"], ["datsun"], ["volkswagen"], ["peugeot"], ["audi"], ["saab"], ["bmw"], ["amc"], ["datsun"], ["chevrolet"], ["toyota"], ["ford"], ["volkswagen"], ["amc"], ["amc"], ["chevrolet"], ["mercury"], ["opel"], ["peugeot"], ["fiat"], ["toyota"], ["datsun"], ["volkswagen"], ["plymouth"], ["toyota"], ["dodge"], ["volkswagen"], ["chevrolet"], ["ford"], ["mazda"], ["volvo"], ["volkswagen"], ["peugeot"], ["renault"], ["ford"], ["datsun"], ["toyota"], ["dodge"], ["toyota"], ["amc"], ["plymouth"], ["volkswagen"], ["amc"], ["toyota"], ["chevrolet"], ["datsun"], ["mazda"], ["ford"], ["mercury"], ["fiat"], ["fiat"], ["opel"], ["audi"], ["volvo"], ["saab"], ["toyota"], ["ford"], ["amc"], ["datsun"], ["ford"], ["toyota"], ["chevrolet"], ["audi"], ["volkswagen"], ["opel"], ["toyota"], ["datsun"], ["dodge"], ["fiat"], ["fiat"], ["honda"], ["subaru"], ["fiat"], ["toyota"], ["ford"], ["amc"], ["pontiac"], ["toyota"], ["volkswagen"], ["datsun"], ["volkswagen"], ["audi"], ["peugeot"], ["volvo"], ["saab"], ["honda"], ["fiat"], ["opel"], ["capri"], ["dodge"], ["renault"], ["chevrolet"], ["chevrolet"], ["volkswagen"], ["honda"], ["volkswagen"], ["datsun"], ["toyota"], ["ford"], ["toyota"], ["honda"], ["buick"], ["renault"], ["plymouth"], ["datsun"], ["volkswagen"], ["pontiac"], ["toyota"], ["ford"], ["chevrolet"], ["dodge"], ["subaru"], ["volkswagen"], ["datsun"], ["bmw"], ["mazda"], ["volkswagen"], ["ford"], ["mazda"], ["datsun"], ["honda"], ["ford"], ["ford"], ["chevrolet"], ["toyota"], ["datsun"], ["dodge"], ["toyota"], ["plymouth"], ["oldsmobile"], ["datsun"], ["audi"], ["saab"], ["volkswagen"], ["honda"], ["ford"], ["volkswagen"], ["mazda"], ["dodge"], ["amc"], ["plymouth"], ["plymouth"], ["datsun"], ["fiat"], ["buick"], ["chevrolet"], ["oldsmobile"], ["pontiac"], ["volkswagen"], ["toyota"], ["chevrolet"], ["datsun"], ["chevrolet"], ["ford"], ["audi"], ["toyota"], ["mazda"], ["datsun"], ["toyota"], ["mazda"], ["dodge"], ["datsun"], ["volkswagen"], ["volkswagen"], ["audi"], ["honda"], ["renault"], ["subaru"], [" volkswagen"], ["datsun"], ["mazda"], ["triumph"], ["ford"], ["honda"], ["plymouth"], ["buick"], ["dodge"], ["chevrolet"], ["plymouth"], ["toyota"], ["plymouth"], ["honda"], ["subaru"], ["datsun"], ["toyota"], ["mazda"], ["plymouth"], ["ford"], ["ford"], ["volkswagen"], ["renault"], ["honda"], ["toyota"], ["datsun"], ["mazda"], ["saab"], ["toyota"], ["datsun"], ["chevrolet"], ["chevrolet"], ["chevrolet"], ["pontiac"], ["dodge"], ["pontiac"], ["ford"], ["volkswagen"], ["mazda"], ["mazda"], ["plymouth"], ["mercury"], ["nissan"], ["honda"], ["toyota"], ["honda"], ["honda"], ["datsun"], ["buick"], ["chrysler"], ["ford"], ["toyota"], ["dodge"], ["chevrolet"], ["ford"], ["volkswagen"], ["dodge"], ["ford"], ["chevrolet"]], "trigger_words": ["Model"], "Prediction": "Model FROM cars_data \nJOIN car_names ON cars_data.Id=car_names.MakeId \nWHERE Weight < (SELECT AVG(Weight) FROM cars_data);"}
{"db_id": "car_1", "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)", "query_toks": ["SELECT", "T1.model", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "WHERE", "T2.Weight", "<", "(", "SELECT", "avg", "(", "Weight", ")", "FROM", "CARS_DATA", ")"], "query_toks_no_value": ["select", "t1", ".", "model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "where", "t2", ".", "weight", "<", "(", "select", "avg", "(", "weight", ")", "from", "cars_data", ")"], "question": "What is the model for the car with a weight smaller than the average?", "question_toks": ["What", "is", "the", "model", "for", "the", "car", "with", "a", "weight", "smaller", "than", "the", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 4, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "98", "answer_text": [["toyota"], ["plymouth"], ["amc"], ["ford"], ["datsun"], ["volkswagen"], ["peugeot"], ["audi"], ["saab"], ["bmw"], ["amc"], ["datsun"], ["chevrolet"], ["toyota"], ["ford"], ["volkswagen"], ["amc"], ["amc"], ["chevrolet"], ["mercury"], ["opel"], ["peugeot"], ["fiat"], ["toyota"], ["datsun"], ["volkswagen"], ["plymouth"], ["toyota"], ["dodge"], ["volkswagen"], ["chevrolet"], ["ford"], ["mazda"], ["volvo"], ["volkswagen"], ["peugeot"], ["renault"], ["ford"], ["datsun"], ["toyota"], ["dodge"], ["toyota"], ["amc"], ["plymouth"], ["volkswagen"], ["amc"], ["toyota"], ["chevrolet"], ["datsun"], ["mazda"], ["ford"], ["mercury"], ["fiat"], ["fiat"], ["opel"], ["audi"], ["volvo"], ["saab"], ["toyota"], ["ford"], ["amc"], ["datsun"], ["ford"], ["toyota"], ["chevrolet"], ["audi"], ["volkswagen"], ["opel"], ["toyota"], ["datsun"], ["dodge"], ["fiat"], ["fiat"], ["honda"], ["subaru"], ["fiat"], ["toyota"], ["ford"], ["amc"], ["pontiac"], ["toyota"], ["volkswagen"], ["datsun"], ["volkswagen"], ["audi"], ["peugeot"], ["volvo"], ["saab"], ["honda"], ["fiat"], ["opel"], ["capri"], ["dodge"], ["renault"], ["chevrolet"], ["chevrolet"], ["volkswagen"], ["honda"], ["volkswagen"], ["datsun"], ["toyota"], ["ford"], ["toyota"], ["honda"], ["buick"], ["renault"], ["plymouth"], ["datsun"], ["volkswagen"], ["pontiac"], ["toyota"], ["ford"], ["chevrolet"], ["dodge"], ["subaru"], ["volkswagen"], ["datsun"], ["bmw"], ["mazda"], ["volkswagen"], ["ford"], ["mazda"], ["datsun"], ["honda"], ["ford"], ["ford"], ["chevrolet"], ["toyota"], ["datsun"], ["dodge"], ["toyota"], ["plymouth"], ["oldsmobile"], ["datsun"], ["audi"], ["saab"], ["volkswagen"], ["honda"], ["ford"], ["volkswagen"], ["mazda"], ["dodge"], ["amc"], ["plymouth"], ["plymouth"], ["datsun"], ["fiat"], ["buick"], ["chevrolet"], ["oldsmobile"], ["pontiac"], ["volkswagen"], ["toyota"], ["chevrolet"], ["datsun"], ["chevrolet"], ["ford"], ["audi"], ["toyota"], ["mazda"], ["datsun"], ["toyota"], ["mazda"], ["dodge"], ["datsun"], ["volkswagen"], ["volkswagen"], ["audi"], ["honda"], ["renault"], ["subaru"], [" volkswagen"], ["datsun"], ["mazda"], ["triumph"], ["ford"], ["honda"], ["plymouth"], ["buick"], ["dodge"], ["chevrolet"], ["plymouth"], ["toyota"], ["plymouth"], ["honda"], ["subaru"], ["datsun"], ["toyota"], ["mazda"], ["plymouth"], ["ford"], ["ford"], ["volkswagen"], ["renault"], ["honda"], ["toyota"], ["datsun"], ["mazda"], ["saab"], ["toyota"], ["datsun"], ["chevrolet"], ["chevrolet"], ["chevrolet"], ["pontiac"], ["dodge"], ["pontiac"], ["ford"], ["volkswagen"], ["mazda"], ["mazda"], ["plymouth"], ["mercury"], ["nissan"], ["honda"], ["toyota"], ["honda"], ["honda"], ["datsun"], ["buick"], ["chrysler"], ["ford"], ["toyota"], ["dodge"], ["chevrolet"], ["ford"], ["volkswagen"], ["dodge"], ["ford"], ["chevrolet"]], "trigger_words": ["Model"], "Prediction": "Model FROM cars_data JOIN car_names ON cars_data.Id=car_names.MakeId WHERE Weight < (SELECT AVG(Weight) FROM cars_data);"}
{"db_id": "car_1", "query": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';", "query_toks": ["SELECT", "DISTINCT", "T1.Maker", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Id", "=", "T2.Maker", "JOIN", "CAR_NAMES", "AS", "T3", "ON", "T2.model", "=", "T3.model", "JOIN", "CARS_DATA", "AS", "T4", "ON", "T3.MakeId", "=", "T4.id", "WHERE", "T4.year", "=", "'1970", "'", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "join", "car_names", "as", "t3", "on", "t2", ".", "model", "=", "t3", ".", "model", "join", "cars_data", "as", "t4", "on", "t3", ".", "makeid", "=", "t4", ".", "id", "where", "t4", ".", "year", "=", "value"], "question": "Find the name of the makers that produced some cars in the year of 1970?", "question_toks": ["Find", "the", "name", "of", "the", "makers", "that", "produced", "some", "cars", "in", "the", "year", "of", "1970", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"1970\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "99", "answer_text": [["gm"], ["chrysler"], ["amc"], ["ford"], ["citroen"], ["toyota"], ["nissan"], ["volkswagen"], ["peugeaut"], ["saab"], ["bmw"]], "trigger_words": ["Maker"], "Prediction": "car_makers.Maker \n FROM car_makers \n JOIN cars_data ON car_makers.Id = cars_data.Id \n WHERE cars_data.Year = 1970;"}
{"db_id": "car_1", "query": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';", "query_toks": ["SELECT", "DISTINCT", "T1.Maker", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Id", "=", "T2.Maker", "JOIN", "CAR_NAMES", "AS", "T3", "ON", "T2.model", "=", "T3.model", "JOIN", "CARS_DATA", "AS", "T4", "ON", "T3.MakeId", "=", "T4.id", "WHERE", "T4.year", "=", "'1970", "'", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "join", "car_names", "as", "t3", "on", "t2", ".", "model", "=", "t3", ".", "model", "join", "cars_data", "as", "t4", "on", "t3", ".", "makeid", "=", "t4", ".", "id", "where", "t4", ".", "year", "=", "value"], "question": "What is the name of the different car makers who produced a car in 1970?", "question_toks": ["What", "is", "the", "name", "of", "the", "different", "car", "makers", "who", "produced", "a", "car", "in", "1970", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"1970\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "100", "answer_text": [["gm"], ["chrysler"], ["amc"], ["ford"], ["citroen"], ["toyota"], ["nissan"], ["volkswagen"], ["peugeaut"], ["saab"], ["bmw"]], "trigger_words": ["Maker"], "Prediction": "DISTINCT Maker FROM car_makers \nINNER JOIN cars_data ON car_makers.Id = cars_data.Id \nWHERE Year = 1970;"}
{"db_id": "car_1", "query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);", "query_toks": ["SELECT", "T2.Make", ",", "T1.Year", "FROM", "CARS_DATA", "AS", "T1", "JOIN", "CAR_NAMES", "AS", "T2", "ON", "T1.Id", "=", "T2.MakeId", "WHERE", "T1.Year", "=", "(", "SELECT", "min", "(", "YEAR", ")", "FROM", "CARS_DATA", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "make", ",", "t1", ".", "year", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "makeid", "where", "t1", ".", "year", "=", "(", "select", "min", "(", "year", ")", "from", "cars_data", ")"], "question": "Find the make and production time of the cars that were produced in the earliest year?", "question_toks": ["Find", "the", "make", "and", "production", "time", "of", "the", "cars", "that", "were", "produced", "in", "the", "earliest", "year", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[2, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "101", "answer_text": [["chevrolet chevelle malibu", 1970], ["buick skylark 320", 1970], ["plymouth satellite", 1970], ["amc rebel sst", 1970], ["ford torino", 1970], ["ford galaxie 500", 1970], ["chevrolet impala", 1970], ["plymouth fury iii", 1970], ["pontiac catalina", 1970], ["amc ambassador dpl", 1970], ["citroen ds-21 pallas", 1970], ["chevrolet chevelle concours (sw)", 1970], ["ford torino (sw)", 1970], ["plymouth satellite (sw)", 1970], ["amc rebel sst (sw)", 1970], ["dodge challenger se", 1970], ["plymouth cuda 340", 1970], ["ford mustang boss 302", 1970], ["chevrolet monte carlo", 1970], ["buick estate wagon (sw)", 1970], ["toyota corona mark ii", 1970], ["plymouth duster", 1970], ["amc hornet", 1970], ["ford maverick", 1970], ["datsun pl510", 1970], ["volkswagen 1131 deluxe sedan", 1970], ["peugeot 504", 1970], ["audi 100 ls", 1970], ["saab 99e", 1970], ["bmw 2002", 1970], ["amc gremlin", 1970], ["ford f250", 1970], ["chevy c20", 1970], ["dodge d200", 1970], ["hi 1200d", 1970]], "trigger_words": ["Make", "Year"], "Prediction": "car_makers.Maker, cars_data.Year \n FROM car_makers \n JOIN cars_data ON car_makers.Id = cars_data.Id \n WHERE cars_data.Year = (SELECT MIN(Year) FROM cars_data);"}
{"db_id": "car_1", "query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);", "query_toks": ["SELECT", "T2.Make", ",", "T1.Year", "FROM", "CARS_DATA", "AS", "T1", "JOIN", "CAR_NAMES", "AS", "T2", "ON", "T1.Id", "=", "T2.MakeId", "WHERE", "T1.Year", "=", "(", "SELECT", "min", "(", "YEAR", ")", "FROM", "CARS_DATA", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "make", ",", "t1", ".", "year", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "makeid", "where", "t1", ".", "year", "=", "(", "select", "min", "(", "year", ")", "from", "cars_data", ")"], "question": "What is the maker of the carr produced in the earliest year and what year was it?", "question_toks": ["What", "is", "the", "maker", "of", "the", "carr", "produced", "in", "the", "earliest", "year", "and", "what", "year", "was", "it", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[2, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "102", "answer_text": [["chevrolet chevelle malibu", 1970], ["buick skylark 320", 1970], ["plymouth satellite", 1970], ["amc rebel sst", 1970], ["ford torino", 1970], ["ford galaxie 500", 1970], ["chevrolet impala", 1970], ["plymouth fury iii", 1970], ["pontiac catalina", 1970], ["amc ambassador dpl", 1970], ["citroen ds-21 pallas", 1970], ["chevrolet chevelle concours (sw)", 1970], ["ford torino (sw)", 1970], ["plymouth satellite (sw)", 1970], ["amc rebel sst (sw)", 1970], ["dodge challenger se", 1970], ["plymouth cuda 340", 1970], ["ford mustang boss 302", 1970], ["chevrolet monte carlo", 1970], ["buick estate wagon (sw)", 1970], ["toyota corona mark ii", 1970], ["plymouth duster", 1970], ["amc hornet", 1970], ["ford maverick", 1970], ["datsun pl510", 1970], ["volkswagen 1131 deluxe sedan", 1970], ["peugeot 504", 1970], ["audi 100 ls", 1970], ["saab 99e", 1970], ["bmw 2002", 1970], ["amc gremlin", 1970], ["ford f250", 1970], ["chevy c20", 1970], ["dodge d200", 1970], ["hi 1200d", 1970]], "trigger_words": ["Make", "Year"], "Prediction": "car_makers.Maker, MIN(cars_data.Year) \n FROM car_makers \n JOIN cars_data ON car_makers.Id = cars_data.Id \n GROUP BY car_makers.Maker \n ORDER BY MIN(cars_data.Year) ASC \n LIMIT 1;"}
{"db_id": "car_1", "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;", "query_toks": ["SELECT", "DISTINCT", "T1.model", "FROM", "MODEL_LIST", "AS", "T1", "JOIN", "CAR_NAMES", "AS", "T2", "ON", "T1.model", "=", "T2.model", "JOIN", "CARS_DATA", "AS", "T3", "ON", "T2.MakeId", "=", "T3.id", "WHERE", "T3.year", ">", "1980", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "model", "=", "t2", ".", "model", "join", "cars_data", "as", "t3", "on", "t2", ".", "makeid", "=", "t3", ".", "id", "where", "t3", ".", "year", ">", "value"], "question": "Which distinct car models are the produced after 1980?", "question_toks": ["Which", "distinct", "car", "models", "are", "the", "produced", "after", "1980", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "103", "answer_text": [["plymouth"], ["buick"], ["dodge"], ["chevrolet"], ["toyota"], ["honda"], ["subaru"], ["datsun"], ["mazda"], ["ford"], ["volkswagen"], ["renault"], ["peugeot"], ["saab"], ["volvo"], ["oldsmobile"], ["chrysler"], ["pontiac"], ["amc"], ["mercury"], ["nissan"]], "trigger_words": ["Model"], "Prediction": "DISTINCT Model FROM cars_data JOIN car_names ON cars_data.Id=car_names.MakeId WHERE Year>1980;"}
{"db_id": "car_1", "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;", "query_toks": ["SELECT", "DISTINCT", "T1.model", "FROM", "MODEL_LIST", "AS", "T1", "JOIN", "CAR_NAMES", "AS", "T2", "ON", "T1.model", "=", "T2.model", "JOIN", "CARS_DATA", "AS", "T3", "ON", "T2.MakeId", "=", "T3.id", "WHERE", "T3.year", ">", "1980", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "model", "=", "t2", ".", "model", "join", "cars_data", "as", "t3", "on", "t2", ".", "makeid", "=", "t3", ".", "id", "where", "t3", ".", "year", ">", "value"], "question": "What are the different models for the cards produced after 1980?", "question_toks": ["What", "are", "the", "different", "models", "for", "the", "cards", "produced", "after", "1980", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "104", "answer_text": [["plymouth"], ["buick"], ["dodge"], ["chevrolet"], ["toyota"], ["honda"], ["subaru"], ["datsun"], ["mazda"], ["ford"], ["volkswagen"], ["renault"], ["peugeot"], ["saab"], ["volvo"], ["oldsmobile"], ["chrysler"], ["pontiac"], ["amc"], ["mercury"], ["nissan"]], "trigger_words": ["Model"], "Prediction": "Model FROM car_names JOIN cars_data ON car_names.MakeId=cars_data.Id WHERE Year>1980;"}
{"db_id": "car_1", "query": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;", "query_toks": ["SELECT", "T1.Continent", ",", "count", "(", "*", ")", "FROM", "CONTINENTS", "AS", "T1", "JOIN", "COUNTRIES", "AS", "T2", "ON", "T1.ContId", "=", "T2.continent", "JOIN", "car_makers", "AS", "T3", "ON", "T2.CountryId", "=", "T3.Country", "GROUP", "BY", "T1.Continent", ";"], "query_toks_no_value": ["select", "t1", ".", "continent", ",", "count", "(", "*", ")", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1", ".", "contid", "=", "t2", ".", "continent", "join", "car_makers", "as", "t3", "on", "t2", ".", "countryid", "=", "t3", ".", "country", "group", "by", "t1", ".", "continent"], "question": "How many car makers are there in each continents? List the continent name and the count.", "question_toks": ["How", "many", "car", "makers", "are", "there", "in", "each", "continents", "?", "List", "the", "continent", "name", "and", "the", "count", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "105", "answer_text": [["america", 4], ["asia", 7], ["europe", 11]], "trigger_words": ["Continent", "Number"], "Prediction": "countries.Continent, COUNT(DISTINCT car_makers.Maker) \n FROM car_makers \n JOIN countries ON car_makers.Country=countries.CountryId \n GROUP BY countries.Continent;"}
{"db_id": "car_1", "query": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;", "query_toks": ["SELECT", "T1.Continent", ",", "count", "(", "*", ")", "FROM", "CONTINENTS", "AS", "T1", "JOIN", "COUNTRIES", "AS", "T2", "ON", "T1.ContId", "=", "T2.continent", "JOIN", "car_makers", "AS", "T3", "ON", "T2.CountryId", "=", "T3.Country", "GROUP", "BY", "T1.Continent", ";"], "query_toks_no_value": ["select", "t1", ".", "continent", ",", "count", "(", "*", ")", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1", ".", "contid", "=", "t2", ".", "continent", "join", "car_makers", "as", "t3", "on", "t2", ".", "countryid", "=", "t3", ".", "country", "group", "by", "t1", ".", "continent"], "question": "What is the name of each continent and how many car makers are there in each one?", "question_toks": ["What", "is", "the", "name", "of", "each", "continent", "and", "how", "many", "car", "makers", "are", "there", "in", "each", "one", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "106", "answer_text": [["america", 4], ["asia", 7], ["europe", 11]], "trigger_words": ["Continent", "Number"], "Prediction": "continents.Continent, COUNT(car_makers.Id) \n FROM continents \n JOIN countries ON countries.Continent=continents.ContId \n JOIN car_makers ON car_makers.Country=countries.CountryId \n GROUP BY continents.Continent;"}
{"db_id": "car_1", "query": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "T2.CountryName", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "COUNTRIES", "AS", "T2", "ON", "T1.Country", "=", "T2.CountryId", "GROUP", "BY", "T1.Country", "ORDER", "BY", "Count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "countryname", "from", "car_makers", "as", "t1", "join", "countries", "as", "t2", "on", "t1", ".", "country", "=", "t2", ".", "countryid", "group", "by", "t1", ".", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which of the countries has the most car makers? List the country name.", "question_toks": ["Which", "of", "the", "countries", "has", "the", "most", "car", "makers", "?", "List", "the", "country", "name", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "107", "answer_text": [["japan"]], "trigger_words": ["Country Name"], "Prediction": "countries.CountryName \nFROM car_makers \nJOIN countries ON car_makers.Country=countries.CountryId \nGROUP BY countries.CountryName \nORDER BY COUNT(car_makers.Id) DESC \nLIMIT 1;"}
{"db_id": "car_1", "query": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "T2.CountryName", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "COUNTRIES", "AS", "T2", "ON", "T1.Country", "=", "T2.CountryId", "GROUP", "BY", "T1.Country", "ORDER", "BY", "Count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "countryname", "from", "car_makers", "as", "t1", "join", "countries", "as", "t2", "on", "t1", ".", "country", "=", "t2", ".", "countryid", "group", "by", "t1", ".", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the country with the most car makers?", "question_toks": ["What", "is", "the", "name", "of", "the", "country", "with", "the", "most", "car", "makers", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "108", "answer_text": [["japan"]], "trigger_words": ["Country Name"], "Prediction": "countries.CountryName \nFROM countries \nJOIN car_makers ON countries.CountryId = car_makers.Country \nGROUP BY countries.CountryName \nORDER BY COUNT(car_makers.Id) DESC \nLIMIT 1;"}
{"db_id": "car_1", "query": "select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;", "query_toks": ["select", "count", "(", "*", ")", ",", "t2.fullname", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.maker", "=", "t2.id", "group", "by", "t2.id", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t2", ".", "fullname", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "maker", "=", "t2", ".", "id", "group", "by", "t2", ".", "id"], "question": "How many car models are produced by each maker ? Only list the count and the maker full name .", "question_toks": ["How", "many", "car", "models", "are", "produced", "by", "each", "maker", "?", "Only", "list", "the", "count", "and", "the", "maker", "full", "name", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "109", "answer_text": [[1, "American Motor Company"], [2, "Volkswagen"], [1, "BMW"], [5, "General Motors"], [3, "Ford Motor Company"], [4, "Chrysler"], [1, "Citroen"], [2, "Nissan Motors"], [1, "Fiat"], [1, "Honda"], [1, "Mazda"], [2, "Daimler Benz"], [1, "Opel"], [1, "Peugeaut"], [1, "Renault"], [1, "Saab"], [1, "Subaru"], [2, "Toyota"], [1, "Triumph"], [1, "Volvo"], [1, "Kia Motors"], [1, "Hyundai"]], "trigger_words": ["Number", "Full Name"], "Prediction": "car_makers.FullName, COUNT(model_list.ModelId) \n FROM car_makers \n JOIN model_list ON car_makers.Id = model_list.Maker \n GROUP BY car_makers.FullName;"}
{"db_id": "car_1", "query": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;", "query_toks": ["SELECT", "Count", "(", "*", ")", ",", "T2.FullName", ",", "T2.id", "FROM", "MODEL_LIST", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.Maker", "=", "T2.Id", "GROUP", "BY", "T2.id", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t2", ".", "fullname", ",", "t2", ".", "id", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "maker", "=", "t2", ".", "id", "group", "by", "t2", ".", "id"], "question": "What is the number of car models that are produced by each maker and what is the id and full name of each maker?", "question_toks": ["What", "is", "the", "number", "of", "car", "models", "that", "are", "produced", "by", "each", "maker", "and", "what", "is", "the", "id", "and", "full", "name", "of", "each", "maker", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "110", "answer_text": [[1, "American Motor Company", 1], [2, "Volkswagen", 2], [1, "BMW", 3], [5, "General Motors", 4], [3, "Ford Motor Company", 5], [4, "Chrysler", 6], [1, "Citroen", 7], [2, "Nissan Motors", 8], [1, "Fiat", 9], [1, "Honda", 11], [1, "Mazda", 12], [2, "Daimler Benz", 13], [1, "Opel", 14], [1, "Peugeaut", 15], [1, "Renault", 16], [1, "Saab", 17], [1, "Subaru", 18], [2, "Toyota", 19], [1, "Triumph", 20], [1, "Volvo", 21], [1, "Kia Motors", 22], [1, "Hyundai", 23]], "trigger_words": ["Number", "Full Name", "Id"], "Prediction": "car_makers.Id, car_makers.FullName, COUNT(car_names.Model) \n FROM car_makers \n JOIN car_names ON car_makers.Id = car_names.MakeId \n GROUP BY car_makers.Id;"}
{"db_id": "car_1", "query": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';", "query_toks": ["SELECT", "T1.Accelerate", "FROM", "CARS_DATA", "AS", "T1", "JOIN", "CAR_NAMES", "AS", "T2", "ON", "T1.Id", "=", "T2.MakeId", "WHERE", "T2.Make", "=", "'amc", "hornet", "sportabout", "(", "sw", ")", "'", ";"], "query_toks_no_value": ["select", "t1", ".", "accelerate", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "makeid", "where", "t2", ".", "make", "=", "value"], "question": "What is the accelerate of the car make amc hornet sportabout (sw)?", "question_toks": ["What", "is", "the", "accelerate", "of", "the", "car", "make", "amc", "hornet", "sportabout", "(", "sw", ")", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"amc hornet sportabout (sw)\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "111", "answer_text": [[13.5]], "trigger_words": ["Accelerate"], "Prediction": "cars_data.Accelerate \n FROM cars_data \n JOIN car_names ON cars_data.Id = car_names.MakeId \n WHERE car_names.Model = 'hornet sportabout (sw)' AND car_names.Make = 'amc';"}
{"db_id": "car_1", "query": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';", "query_toks": ["SELECT", "T1.Accelerate", "FROM", "CARS_DATA", "AS", "T1", "JOIN", "CAR_NAMES", "AS", "T2", "ON", "T1.Id", "=", "T2.MakeId", "WHERE", "T2.Make", "=", "'amc", "hornet", "sportabout", "(", "sw", ")", "'", ";"], "query_toks_no_value": ["select", "t1", ".", "accelerate", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "makeid", "where", "t2", ".", "make", "=", "value"], "question": "How much does the car accelerate that makes amc hornet sportabout (sw)?", "question_toks": ["How", "much", "does", "the", "car", "accelerate", "that", "makes", "amc", "hornet", "sportabout", "(", "sw", ")", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"amc hornet sportabout (sw)\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "112", "answer_text": [[13.5]], "trigger_words": ["Accelerate"], "Prediction": "Accelerate \nFROM cars_data \nWHERE Id = (SELECT MakeId FROM car_names WHERE Model = 'hornet sportabout (sw)' AND Make = 'amc');"}
{"db_id": "car_1", "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "COUNTRIES", "AS", "T2", "ON", "T1.Country", "=", "T2.CountryId", "WHERE", "T2.CountryName", "=", "'france", "'", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "countries", "as", "t2", "on", "t1", ".", "country", "=", "t2", ".", "countryid", "where", "t2", ".", "countryname", "=", "value"], "question": "How many car makers are there in france?", "question_toks": ["How", "many", "car", "makers", "are", "there", "in", "france", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 3, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"france\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "113", "answer_text": [[3]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM car_makers \nWHERE Country = (SELECT CountryId FROM countries WHERE CountryName = 'France');"}
{"db_id": "car_1", "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "COUNTRIES", "AS", "T2", "ON", "T1.Country", "=", "T2.CountryId", "WHERE", "T2.CountryName", "=", "'france", "'", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "countries", "as", "t2", "on", "t1", ".", "country", "=", "t2", ".", "countryid", "where", "t2", ".", "countryname", "=", "value"], "question": "What is the number of makers of care in France?", "question_toks": ["What", "is", "the", "number", "of", "makers", "of", "care", "in", "France", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 3, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"france\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "114", "answer_text": [[3]], "trigger_words": ["Number"], "Prediction": "COUNT(DISTINCT car_makers.Id) \nFROM car_makers \nJOIN countries ON car_makers.Country = countries.CountryId \nWHERE countries.CountryName = 'France';"}
{"db_id": "car_1", "query": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "MODEL_LIST", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.Maker", "=", "T2.Id", "JOIN", "COUNTRIES", "AS", "T3", "ON", "T2.Country", "=", "T3.CountryId", "WHERE", "T3.CountryName", "=", "'usa", "'", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "maker", "=", "t2", ".", "id", "join", "countries", "as", "t3", "on", "t2", ".", "country", "=", "t3", ".", "countryid", "where", "t3", ".", "countryname", "=", "value"], "question": "How many car models are produced in the usa?", "question_toks": ["How", "many", "car", "models", "are", "produced", "in", "the", "usa", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 3, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"usa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "115", "answer_text": [[13]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM cars_data \nJOIN car_makers ON cars_data.Id = car_makers.Id \nWHERE car_makers.Country = 'USA';"}
{"db_id": "car_1", "query": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "MODEL_LIST", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.Maker", "=", "T2.Id", "JOIN", "COUNTRIES", "AS", "T3", "ON", "T2.Country", "=", "T3.CountryId", "WHERE", "T3.CountryName", "=", "'usa", "'", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "maker", "=", "t2", ".", "id", "join", "countries", "as", "t3", "on", "t2", ".", "country", "=", "t3", ".", "countryid", "where", "t3", ".", "countryname", "=", "value"], "question": "What is the count of the car models produced in the United States?", "question_toks": ["What", "is", "the", "count", "of", "the", "car", "models", "produced", "in", "the", "United", "States", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 3, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"usa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "116", "answer_text": [[13]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM cars_data \nJOIN car_makers ON cars_data.Id = car_makers.Id \nJOIN countries ON car_makers.Country = countries.CountryId \nWHERE countries.CountryName = 'United States';"}
{"db_id": "car_1", "query": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;", "query_toks": ["SELECT", "avg", "(", "mpg", ")", "FROM", "CARS_DATA", "WHERE", "Cylinders", "=", "4", ";"], "query_toks_no_value": ["select", "avg", "(", "mpg", ")", "from", "cars_data", "where", "cylinders", "=", "value"], "question": "What is the average miles per gallon(mpg) of the cars with 4 cylinders?", "question_toks": ["What", "is", "the", "average", "miles", "per", "gallon", "(", "mpg", ")", "of", "the", "cars", "with", "4", "cylinders", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "117", "answer_text": [[28.862318840579714]], "trigger_words": ["Average Number"], "Prediction": "AVG(MPG) FROM cars_data WHERE Cylinders=4;"}
{"db_id": "car_1", "query": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;", "query_toks": ["SELECT", "avg", "(", "mpg", ")", "FROM", "CARS_DATA", "WHERE", "Cylinders", "=", "4", ";"], "query_toks_no_value": ["select", "avg", "(", "mpg", ")", "from", "cars_data", "where", "cylinders", "=", "value"], "question": "What is the average miles per gallon of all the cards with 4 cylinders?", "question_toks": ["What", "is", "the", "average", "miles", "per", "gallon", "of", "all", "the", "cards", "with", "4", "cylinders", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "118", "answer_text": [[28.862318840579714]], "trigger_words": ["Average Number"], "Prediction": "AVG(MPG) FROM cars_data WHERE Cylinders = 4;"}
{"db_id": "car_1", "query": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974", "query_toks": ["select", "min", "(", "weight", ")", "from", "cars_data", "where", "cylinders", "=", "8", "and", "year", "=", "1974"], "query_toks_no_value": ["select", "min", "(", "weight", ")", "from", "cars_data", "where", "cylinders", "=", "value", "and", "year", "=", "value"], "question": "What is the smallest weight of the car produced with 8 cylinders on 1974 ?", "question_toks": ["What", "is", "the", "smallest", "weight", "of", "the", "car", "produced", "with", "8", "cylinders", "on", "1974", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[2, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 8.0, null], "and", [false, 2, [0, [0, 23, false], null], 1974.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "119", "answer_text": [[4141]], "trigger_words": ["Minimal Number"], "Prediction": "MIN(Weight) FROM cars_data WHERE Cylinders=8 AND Year=1974;"}
{"db_id": "car_1", "query": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974", "query_toks": ["select", "min", "(", "weight", ")", "from", "cars_data", "where", "cylinders", "=", "8", "and", "year", "=", "1974"], "query_toks_no_value": ["select", "min", "(", "weight", ")", "from", "cars_data", "where", "cylinders", "=", "value", "and", "year", "=", "value"], "question": "What is the minimum weight of the car with 8 cylinders produced in 1974 ?", "question_toks": ["What", "is", "the", "minimum", "weight", "of", "the", "car", "with", "8", "cylinders", "produced", "in", "1974", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[2, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 8.0, null], "and", [false, 2, [0, [0, 23, false], null], 1974.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "120", "answer_text": [[4141]], "trigger_words": ["Minimal Number"], "Prediction": "MIN(Weight) FROM cars_data WHERE Cylinders=8 AND Year=1974;"}
{"db_id": "car_1", "query": "SELECT Maker ,  Model FROM MODEL_LIST;", "query_toks": ["SELECT", "Maker", ",", "Model", "FROM", "MODEL_LIST", ";"], "query_toks_no_value": ["select", "maker", ",", "model", "from", "model_list"], "question": "What are all the makers and models?", "question_toks": ["What", "are", "all", "the", "makers", "and", "models", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "121", "answer_text": [[1, "amc"], [2, "audi"], [3, "bmw"], [4, "buick"], [4, "cadillac"], [5, "capri"], [4, "chevrolet"], [6, "chrysler"], [7, "citroen"], [8, "datsun"], [6, "dodge"], [9, "fiat"], [5, "ford"], [10, "hi"], [11, "honda"], [12, "mazda"], [13, "mercedes"], [13, "mercedes-benz"], [5, "mercury"], [8, "nissan"], [4, "oldsmobile"], [14, "opel"], [15, "peugeot"], [6, "plymouth"], [4, "pontiac"], [16, "renault"], [17, "saab"], [18, "subaru"], [19, "toyota"], [20, "triumph"], [2, "volkswagen"], [21, "volvo"], [22, "kia"], [23, "hyundai"], [6, "jeep"], [19, "scion"]], "trigger_words": ["Maker", "Model"], "Prediction": "car_makers.Maker, model_list.Model\n FROM car_makers\n JOIN model_list ON car_makers.Id = model_list.Maker;"}
{"db_id": "car_1", "query": "SELECT Maker ,  Model FROM MODEL_LIST;", "query_toks": ["SELECT", "Maker", ",", "Model", "FROM", "MODEL_LIST", ";"], "query_toks_no_value": ["select", "maker", ",", "model", "from", "model_list"], "question": "What are the makers and models?", "question_toks": ["What", "are", "the", "makers", "and", "models", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "122", "answer_text": [[1, "amc"], [2, "audi"], [3, "bmw"], [4, "buick"], [4, "cadillac"], [5, "capri"], [4, "chevrolet"], [6, "chrysler"], [7, "citroen"], [8, "datsun"], [6, "dodge"], [9, "fiat"], [5, "ford"], [10, "hi"], [11, "honda"], [12, "mazda"], [13, "mercedes"], [13, "mercedes-benz"], [5, "mercury"], [8, "nissan"], [4, "oldsmobile"], [14, "opel"], [15, "peugeot"], [6, "plymouth"], [4, "pontiac"], [16, "renault"], [17, "saab"], [18, "subaru"], [19, "toyota"], [20, "triumph"], [2, "volkswagen"], [21, "volvo"], [22, "kia"], [23, "hyundai"], [6, "jeep"], [19, "scion"]], "trigger_words": ["Maker", "Model"], "Prediction": "car_makers.Maker, model_list.Model\n FROM car_makers\n JOIN model_list ON model_list.Maker = car_makers.Id;"}
{"db_id": "car_1", "query": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;", "query_toks": ["SELECT", "T1.CountryName", ",", "T1.CountryId", "FROM", "COUNTRIES", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.CountryId", "=", "T2.Country", "GROUP", "BY", "T1.CountryId", "HAVING", "count", "(", "*", ")", ">", "=", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "countryname", ",", "t1", ".", "countryid", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "countryid", "=", "t2", ".", "country", "group", "by", "t1", ".", "countryid", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the countries having at least one car maker? List name and id.", "question_toks": ["What", "are", "the", "countries", "having", "at", "least", "one", "car", "maker", "?", "List", "name", "and", "id", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "123", "answer_text": [["usa", 1], ["germany", 2], ["france", 3], ["japan", 4], ["italy", 5], ["sweden", 6], ["uk", 7], ["korea", 8]], "trigger_words": ["Country Name", "Country Id"], "Prediction": "countries.CountryId, countries.CountryName \n FROM countries \n INNER JOIN car_makers ON countries.CountryId = car_makers.Country \n GROUP BY countries.CountryId \n HAVING COUNT(car_makers.Id) >= 1;"}
{"db_id": "car_1", "query": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;", "query_toks": ["SELECT", "T1.CountryName", ",", "T1.CountryId", "FROM", "COUNTRIES", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.CountryId", "=", "T2.Country", "GROUP", "BY", "T1.CountryId", "HAVING", "count", "(", "*", ")", ">", "=", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "countryname", ",", "t1", ".", "countryid", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "countryid", "=", "t2", ".", "country", "group", "by", "t1", ".", "countryid", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the names and ids of all countries with at least one car maker?", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "all", "countries", "with", "at", "least", "one", "car", "maker", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "124", "answer_text": [["usa", 1], ["germany", 2], ["france", 3], ["japan", 4], ["italy", 5], ["sweden", 6], ["uk", 7], ["korea", 8]], "trigger_words": ["Country Name", "Country Id"], "Prediction": "countries.CountryId, countries.CountryName \n FROM countries \n INNER JOIN car_makers ON countries.CountryId = car_makers.Country \n GROUP BY countries.CountryId;"}
{"db_id": "car_1", "query": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CARS_DATA", "WHERE", "horsepower", ">", "150", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "horsepower", ">", "value"], "question": "What is the number of the cars with horsepower more than 150?", "question_toks": ["What", "is", "the", "number", "of", "the", "cars", "with", "horsepower", "more", "than", "150", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 20, false], null], 150.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "125", "answer_text": [[281]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM cars_data WHERE Horsepower > 150;"}
{"db_id": "car_1", "query": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CARS_DATA", "WHERE", "horsepower", ">", "150", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "horsepower", ">", "value"], "question": "What is the number of cars with a horsepower greater than 150?", "question_toks": ["What", "is", "the", "number", "of", "cars", "with", "a", "horsepower", "greater", "than", "150", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 20, false], null], 150.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "126", "answer_text": [[281]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM cars_data WHERE Horsepower > 150;"}
{"db_id": "car_1", "query": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;", "query_toks": ["SELECT", "avg", "(", "Weight", ")", ",", "YEAR", "FROM", "CARS_DATA", "GROUP", "BY", "YEAR", ";"], "query_toks_no_value": ["select", "avg", "(", "weight", ")", ",", "year", "from", "cars_data", "group", "by", "year"], "question": "What is the average weight of cars each year?", "question_toks": ["What", "is", "the", "average", "weight", "of", "cars", "each", "year", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 21, false], null]], [0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "127", "answer_text": [[3441.3142857142857, 1970], [2960.344827586207, 1971], [3237.714285714286, 1972], [3419.025, 1973], [2877.925925925926, 1974], [3176.8, 1975], [3078.735294117647, 1976], [2997.3571428571427, 1977], [2861.8055555555557, 1978], [3055.344827586207, 1979], [2436.655172413793, 1980], [2532.1666666666665, 1981], [2453.548387096774, 1982]], "trigger_words": ["Average Number", "Year"], "Prediction": "Year, AVG(Weight) FROM cars_data GROUP BY Year;"}
{"db_id": "car_1", "query": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;", "query_toks": ["SELECT", "avg", "(", "Weight", ")", ",", "YEAR", "FROM", "CARS_DATA", "GROUP", "BY", "YEAR", ";"], "query_toks_no_value": ["select", "avg", "(", "weight", ")", ",", "year", "from", "cars_data", "group", "by", "year"], "question": "What is the average weight and year for each year?", "question_toks": ["What", "is", "the", "average", "weight", "and", "year", "for", "each", "year", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 21, false], null]], [0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "128", "answer_text": [[3441.3142857142857, 1970], [2960.344827586207, 1971], [3237.714285714286, 1972], [3419.025, 1973], [2877.925925925926, 1974], [3176.8, 1975], [3078.735294117647, 1976], [2997.3571428571427, 1977], [2861.8055555555557, 1978], [3055.344827586207, 1979], [2436.655172413793, 1980], [2532.1666666666665, 1981], [2453.548387096774, 1982]], "trigger_words": ["Average Number", "Year"], "Prediction": "Year, AVG(Weight), AVG(Year) FROM cars_data GROUP BY Year;"}
{"db_id": "car_1", "query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;", "query_toks": ["SELECT", "T1.CountryName", "FROM", "COUNTRIES", "AS", "T1", "JOIN", "CONTINENTS", "AS", "T2", "ON", "T1.Continent", "=", "T2.ContId", "JOIN", "CAR_MAKERS", "AS", "T3", "ON", "T1.CountryId", "=", "T3.Country", "WHERE", "T2.Continent", "=", "'europe", "'", "GROUP", "BY", "T1.CountryName", "HAVING", "count", "(", "*", ")", ">", "=", "3", ";"], "query_toks_no_value": ["select", "t1", ".", "countryname", "from", "countries", "as", "t1", "join", "continents", "as", "t2", "on", "t1", ".", "continent", "=", "t2", ".", "contid", "join", "car_makers", "as", "t3", "on", "t1", ".", "countryid", "=", "t3", ".", "country", "where", "t2", ".", "continent", "=", "value", "group", "by", "t1", ".", "countryname", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Which countries in europe have at least 3 car manufacturers?", "question_toks": ["Which", "countries", "in", "europe", "have", "at", "least", "3", "car", "manufacturers", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"europe\"", null]], "groupBy": [[0, 4, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "129", "answer_text": [["france"], ["germany"]], "trigger_words": ["Country Name"], "Prediction": "countries.CountryName \nFROM countries \nJOIN car_makers ON countries.CountryId = car_makers.Country \nWHERE countries.Continent = 'Europe' \nGROUP BY countries.CountryName \nHAVING COUNT(car_makers.Id) >= 3;"}
{"db_id": "car_1", "query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;", "query_toks": ["SELECT", "T1.CountryName", "FROM", "COUNTRIES", "AS", "T1", "JOIN", "CONTINENTS", "AS", "T2", "ON", "T1.Continent", "=", "T2.ContId", "JOIN", "CAR_MAKERS", "AS", "T3", "ON", "T1.CountryId", "=", "T3.Country", "WHERE", "T2.Continent", "=", "'europe", "'", "GROUP", "BY", "T1.CountryName", "HAVING", "count", "(", "*", ")", ">", "=", "3", ";"], "query_toks_no_value": ["select", "t1", ".", "countryname", "from", "countries", "as", "t1", "join", "continents", "as", "t2", "on", "t1", ".", "continent", "=", "t2", ".", "contid", "join", "car_makers", "as", "t3", "on", "t1", ".", "countryid", "=", "t3", ".", "country", "where", "t2", ".", "continent", "=", "value", "group", "by", "t1", ".", "countryname", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the names of all European countries with at least 3 manufacturers?", "question_toks": ["What", "are", "the", "names", "of", "all", "European", "countries", "with", "at", "least", "3", "manufacturers", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"europe\"", null]], "groupBy": [[0, 4, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "130", "answer_text": [["france"], ["germany"]], "trigger_words": ["Country Name"], "Prediction": "countries.CountryName \nFROM countries \nINNER JOIN car_makers ON countries.CountryId = car_makers.Country \nWHERE countries.Continent = 'Europe' \nGROUP BY countries.CountryName \nHAVING COUNT(DISTINCT car_makers.Maker) >= 3;"}
{"db_id": "car_1", "query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;", "query_toks": ["SELECT", "T2.horsepower", ",", "T1.Make", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "WHERE", "T2.cylinders", "=", "3", "ORDER", "BY", "T2.horsepower", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "horsepower", ",", "t1", ".", "make", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "where", "t2", ".", "cylinders", "=", "value", "order", "by", "t2", ".", "horsepower", "desc", "limit", "value"], "question": "What is the maximum horsepower and the make of the car models with 3 cylinders?", "question_toks": ["What", "is", "the", "maximum", "horsepower", "and", "the", "make", "of", "the", "car", "models", "with", "3", "cylinders", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 3.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "131", "answer_text": [["97", "mazda rx2 coupe"]], "trigger_words": ["Horsepower", "Make"], "Prediction": "MAX(cars_data.Horsepower), car_makers.Maker \n FROM cars_data \n JOIN car_names ON cars_data.Id=car_names.MakeId \n JOIN car_makers ON car_names.Make=car_makers.Maker \n WHERE cars_data.Cylinders=3;"}
{"db_id": "car_1", "query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;", "query_toks": ["SELECT", "T2.horsepower", ",", "T1.Make", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "WHERE", "T2.cylinders", "=", "3", "ORDER", "BY", "T2.horsepower", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "horsepower", ",", "t1", ".", "make", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "where", "t2", ".", "cylinders", "=", "value", "order", "by", "t2", ".", "horsepower", "desc", "limit", "value"], "question": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?", "question_toks": ["What", "is", "the", "largest", "amount", "of", "horsepower", "for", "the", "models", "with", "3", "cylinders", "and", "what", "make", "is", "it", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 3.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "132", "answer_text": [["97", "mazda rx2 coupe"]], "trigger_words": ["Horsepower", "Make"], "Prediction": "car_makers.Maker, MAX(cars_data.Horsepower) \n FROM car_makers \n JOIN car_names ON car_makers.Id = car_names.MakeId \n JOIN cars_data ON car_names.MakeId = cars_data.Id \n WHERE cars_data.Cylinders = 3;"}
{"db_id": "car_1", "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;", "query_toks": ["SELECT", "T1.Model", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "ORDER", "BY", "T2.mpg", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "order", "by", "t2", ".", "mpg", "desc", "limit", "value"], "question": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.", "question_toks": ["Which", "model", "saves", "the", "most", "gasoline", "?", "That", "is", "to", "say", ",", "have", "the", "maximum", "miles", "per", "gallon", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 17, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "133", "answer_text": [["citroen"]], "trigger_words": ["Model"], "Prediction": "model_list.Model\nFROM cars_data\nJOIN model_list ON cars_data.Id = model_list.ModelId\nWHERE cars_data.MPG = (SELECT MAX(MPG) FROM cars_data);"}
{"db_id": "car_1", "query": "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;", "query_toks": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "order", "by", "t2.mpg", "desc", "limit", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "order", "by", "t2", ".", "mpg", "desc", "limit", "value"], "question": "What is the car model with the highest mpg ?", "question_toks": ["What", "is", "the", "car", "model", "with", "the", "highest", "mpg", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 17, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "134", "answer_text": [["citroen"]], "trigger_words": ["Model"], "Prediction": "Model FROM car_names \nJOIN cars_data ON car_names.MakeId=cars_data.Id \nORDER BY MPG DESC LIMIT 1;"}
{"db_id": "car_1", "query": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;", "query_toks": ["SELECT", "avg", "(", "horsepower", ")", "FROM", "CARS_DATA", "WHERE", "YEAR", "<", "1980", ";"], "query_toks_no_value": ["select", "avg", "(", "horsepower", ")", "from", "cars_data", "where", "year", "<", "value"], "question": "What is the average horsepower of the cars before 1980?", "question_toks": ["What", "is", "the", "average", "horsepower", "of", "the", "cars", "before", "1980", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 20, false], null]]]], "where": [[false, 4, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "135", "answer_text": [[111.13291139240506]], "trigger_words": ["Average Number"], "Prediction": "AVG(Horsepower) FROM cars_data WHERE Year < 1980;"}
{"db_id": "car_1", "query": "select avg(horsepower) from cars_data where year  <  1980;", "query_toks": ["select", "avg", "(", "horsepower", ")", "from", "cars_data", "where", "year", "<", "1980", ";"], "query_toks_no_value": ["select", "avg", "(", "horsepower", ")", "from", "cars_data", "where", "year", "<", "value"], "question": "What is the average horsepower for all cars produced before 1980 ?", "question_toks": ["What", "is", "the", "average", "horsepower", "for", "all", "cars", "produced", "before", "1980", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 20, false], null]]]], "where": [[false, 4, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "136", "answer_text": [[111.13291139240506]], "trigger_words": ["Average Number"], "Prediction": "AVG(Horsepower) FROM cars_data WHERE Year < 1980;"}
{"db_id": "car_1", "query": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';", "query_toks": ["SELECT", "avg", "(", "T2.edispl", ")", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "WHERE", "T1.Model", "=", "'volvo", "'", ";"], "query_toks_no_value": ["select", "avg", "(", "t2", ".", "edispl", ")", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "where", "t1", ".", "model", "=", "value"], "question": "What is the average edispl of the cars of model volvo?", "question_toks": ["What", "is", "the", "average", "edispl", "of", "the", "cars", "of", "model", "volvo", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[5, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"volvo\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "137", "answer_text": [[133.5]], "trigger_words": ["Average Number"], "Prediction": "AVG(cars_data.Edispl) \nFROM cars_data \nJOIN car_names ON cars_data.Id = car_names.MakeId \nWHERE car_names.Model = 'volvo';"}
{"db_id": "car_1", "query": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';", "query_toks": ["SELECT", "avg", "(", "T2.edispl", ")", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "WHERE", "T1.Model", "=", "'volvo", "'", ";"], "query_toks_no_value": ["select", "avg", "(", "t2", ".", "edispl", ")", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "where", "t1", ".", "model", "=", "value"], "question": "What is the average edispl for all volvos?", "question_toks": ["What", "is", "the", "average", "edispl", "for", "all", "volvos", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[5, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"volvo\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "138", "answer_text": [[133.5]], "trigger_words": ["Average Number"], "Prediction": "AVG(cars_data.Edispl) FROM cars_data \nJOIN car_names ON cars_data.Id=car_names.MakeId \nJOIN car_makers ON car_names.Make=car_makers.Maker \nWHERE car_makers.FullName LIKE '%Volvo%';"}
{"db_id": "car_1", "query": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;", "query_toks": ["SELECT", "max", "(", "Accelerate", ")", ",", "Cylinders", "FROM", "CARS_DATA", "GROUP", "BY", "Cylinders", ";"], "query_toks_no_value": ["select", "max", "(", "accelerate", ")", ",", "cylinders", "from", "cars_data", "group", "by", "cylinders"], "question": "What is the maximum accelerate for different number of cylinders?", "question_toks": ["What", "is", "the", "maximum", "accelerate", "for", "different", "number", "of", "cylinders", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 22, false], null]], [0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "139", "answer_text": [[13.5, 3], [24.8, 4], [20.1, 5], [21.0, 6], [22.2, 8]], "trigger_words": ["Maximal Number", "Cylinders"], "Prediction": "Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders;"}
{"db_id": "car_1", "query": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;", "query_toks": ["SELECT", "max", "(", "Accelerate", ")", ",", "Cylinders", "FROM", "CARS_DATA", "GROUP", "BY", "Cylinders", ";"], "query_toks_no_value": ["select", "max", "(", "accelerate", ")", ",", "cylinders", "from", "cars_data", "group", "by", "cylinders"], "question": "What is the maximum accelerate for all the different cylinders?", "question_toks": ["What", "is", "the", "maximum", "accelerate", "for", "all", "the", "different", "cylinders", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 22, false], null]], [0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "140", "answer_text": [[13.5, 3], [24.8, 4], [20.1, 5], [21.0, 6], [22.2, 8]], "trigger_words": ["Maximal Number", "Cylinders"], "Prediction": "Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders;"}
{"db_id": "car_1", "query": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "Model", "FROM", "CAR_NAMES", "GROUP", "BY", "Model", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "model", "from", "car_names", "group", "by", "model", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which model has the most version(make) of cars?", "question_toks": ["Which", "model", "has", "the", "most", "version", "(", "make", ")", "of", "cars", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [[0, 14, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "141", "answer_text": [["ford"]], "trigger_words": ["Model"], "Prediction": "car_names.Model \n FROM car_names \n GROUP BY car_names.Model \n ORDER BY COUNT(DISTINCT car_names.Make) DESC \n LIMIT 1;"}
{"db_id": "car_1", "query": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "Model", "FROM", "CAR_NAMES", "GROUP", "BY", "Model", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "model", "from", "car_names", "group", "by", "model", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What model has the most different versions?", "question_toks": ["What", "model", "has", "the", "most", "different", "versions", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [[0, 14, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "142", "answer_text": [["ford"]], "trigger_words": ["Model"], "Prediction": "Model, COUNT(DISTINCT MakeId) AS num_versions\n FROM car_names\n GROUP BY Model\n ORDER BY num_versions DESC\n LIMIT 1;"}
{"db_id": "car_1", "query": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CARS_DATA", "WHERE", "Cylinders", ">", "4", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "cylinders", ">", "value"], "question": "How many cars have more than 4 cylinders?", "question_toks": ["How", "many", "cars", "have", "more", "than", "4", "cylinders", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 18, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "143", "answer_text": [[195]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM cars_data WHERE Cylinders > 4;"}
{"db_id": "car_1", "query": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CARS_DATA", "WHERE", "Cylinders", ">", "4", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "cylinders", ">", "value"], "question": "What is the number of cars with more than 4 cylinders?", "question_toks": ["What", "is", "the", "number", "of", "cars", "with", "more", "than", "4", "cylinders", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 18, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "144", "answer_text": [[195]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM cars_data WHERE Cylinders > 4;"}
{"db_id": "car_1", "query": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CARS_DATA", "WHERE", "YEAR", "=", "1980", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "year", "=", "value"], "question": "how many cars were produced in 1980?", "question_toks": ["how", "many", "cars", "were", "produced", "in", "1980", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "145", "answer_text": [[29]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM cars_data WHERE Year=1980;"}
{"db_id": "car_1", "query": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CARS_DATA", "WHERE", "YEAR", "=", "1980", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "year", "=", "value"], "question": "In 1980, how many cars were made?", "question_toks": ["In", "1980", ",", "how", "many", "cars", "were", "made", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "146", "answer_text": [[29]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM cars_data WHERE Year=1980;"}
{"db_id": "car_1", "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Id", "=", "T2.Maker", "WHERE", "T1.FullName", "=", "'American", "Motor", "Company", "'", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "where", "t1", ".", "fullname", "=", "value"], "question": "How many car models were produced by the maker with full name American Motor Company?", "question_toks": ["How", "many", "car", "models", "were", "produced", "by", "the", "maker", "with", "full", "name", "American", "Motor", "Company", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"American Motor Company\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "147", "answer_text": [[1]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM car_names \nWHERE MakeId IN \n(SELECT Id FROM car_makers WHERE FullName = 'American Motor Company');"}
{"db_id": "car_1", "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Id", "=", "T2.Maker", "WHERE", "T1.FullName", "=", "'American", "Motor", "Company", "'", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "where", "t1", ".", "fullname", "=", "value"], "question": "What is the number of car models created by the car maker American Motor Company?", "question_toks": ["What", "is", "the", "number", "of", "car", "models", "created", "by", "the", "car", "maker", "American", "Motor", "Company", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"American Motor Company\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "148", "answer_text": [[1]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM model_list \nWHERE Maker = (SELECT Id FROM car_makers WHERE Maker = 'American Motor Company');"}
{"db_id": "car_1", "query": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;", "query_toks": ["SELECT", "T1.FullName", ",", "T1.Id", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Id", "=", "T2.Maker", "GROUP", "BY", "T1.Id", "HAVING", "count", "(", "*", ")", ">", "3", ";"], "query_toks_no_value": ["select", "t1", ".", "fullname", ",", "t1", ".", "id", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "value"], "question": "Which makers designed more than 3 car models? List full name and the id.", "question_toks": ["Which", "makers", "designed", "more", "than", "3", "car", "models", "?", "List", "full", "name", "and", "the", "id", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "149", "answer_text": [["General Motors", 4], ["Chrysler", 6]], "trigger_words": ["Full Name", "Id"], "Prediction": "car_makers.Id, car_makers.FullName\n FROM car_makers\n JOIN model_list ON car_makers.Id = model_list.Maker\n GROUP BY car_makers.Id, car_makers.FullName\n HAVING COUNT(model_list.ModelId) > 3;"}
{"db_id": "car_1", "query": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;", "query_toks": ["SELECT", "T1.FullName", ",", "T1.Id", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Id", "=", "T2.Maker", "GROUP", "BY", "T1.Id", "HAVING", "count", "(", "*", ")", ">", "3", ";"], "query_toks_no_value": ["select", "t1", ".", "fullname", ",", "t1", ".", "id", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the names and ids of all makers with more than 3 models?", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "all", "makers", "with", "more", "than", "3", "models", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "150", "answer_text": [["General Motors", 4], ["Chrysler", 6]], "trigger_words": ["Full Name", "Id"], "Prediction": "car_makers.Id, car_makers.Maker \n FROM car_makers \n INNER JOIN model_list ON car_makers.Id = model_list.Maker \n GROUP BY car_makers.Id \n HAVING COUNT(model_list.ModelId) > 3;"}
{"db_id": "car_1", "query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;", "query_toks": ["SELECT", "DISTINCT", "T2.Model", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Model", "=", "T2.Model", "JOIN", "CAR_MAKERS", "AS", "T3", "ON", "T2.Maker", "=", "T3.Id", "JOIN", "CARS_DATA", "AS", "T4", "ON", "T1.MakeId", "=", "T4.Id", "WHERE", "T3.FullName", "=", "'General", "Motors", "'", "OR", "T4.weight", ">", "3500", ";"], "query_toks_no_value": ["select", "distinct", "t2", ".", "model", "from", "car_names", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "model", "=", "t2", ".", "model", "join", "car_makers", "as", "t3", "on", "t2", ".", "maker", "=", "t3", ".", "id", "join", "cars_data", "as", "t4", "on", "t1", ".", "makeid", "=", "t4", ".", "id", "where", "t3", ".", "fullname", "=", "value", "or", "t4", ".", "weight", ">", "value"], "question": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?", "question_toks": ["Which", "distinctive", "models", "are", "produced", "by", "maker", "with", "the", "full", "name", "General", "Motors", "or", "weighing", "more", "than", "3500", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3], ["table_unit", 2], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 12, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"General Motors\"", null], "or", [false, 3, [0, [0, 21, false], null], 3500.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "151", "answer_text": [["chevrolet"], ["buick"], ["ford"], ["plymouth"], ["pontiac"], ["amc"], ["dodge"], ["mercury"], ["oldsmobile"], ["chrysler"], ["mercedes-benz"], ["cadillac"], ["mercedes"]], "trigger_words": ["Model"], "Prediction": "DISTINCT cars_data.Id, cars_data.Model \nFROM cars_data \nINNER JOIN car_makers ON cars_data.Id = car_makers.Id \nWHERE car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500;"}
{"db_id": "car_1", "query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;", "query_toks": ["SELECT", "DISTINCT", "T2.Model", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Model", "=", "T2.Model", "JOIN", "CAR_MAKERS", "AS", "T3", "ON", "T2.Maker", "=", "T3.Id", "JOIN", "CARS_DATA", "AS", "T4", "ON", "T1.MakeId", "=", "T4.Id", "WHERE", "T3.FullName", "=", "'General", "Motors", "'", "OR", "T4.weight", ">", "3500", ";"], "query_toks_no_value": ["select", "distinct", "t2", ".", "model", "from", "car_names", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "model", "=", "t2", ".", "model", "join", "car_makers", "as", "t3", "on", "t2", ".", "maker", "=", "t3", ".", "id", "join", "cars_data", "as", "t4", "on", "t1", ".", "makeid", "=", "t4", ".", "id", "where", "t3", ".", "fullname", "=", "value", "or", "t4", ".", "weight", ">", "value"], "question": "What are the different models created by either the car maker General Motors or weighed more than 3500?", "question_toks": ["What", "are", "the", "different", "models", "created", "by", "either", "the", "car", "maker", "General", "Motors", "or", "weighed", "more", "than", "3500", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3], ["table_unit", 2], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 12, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"General Motors\"", null], "or", [false, 3, [0, [0, 21, false], null], 3500.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "152", "answer_text": [["chevrolet"], ["buick"], ["ford"], ["plymouth"], ["pontiac"], ["amc"], ["dodge"], ["mercury"], ["oldsmobile"], ["chrysler"], ["mercedes-benz"], ["cadillac"], ["mercedes"]], "trigger_words": ["Model"], "Prediction": "cars_data.Id, cars_data.MPG, cars_data.Cylinders, cars_data.Edispl, cars_data.Horsepower, cars_data.Weight, cars_data.Accelerate, cars_data.Year\n FROM cars_data\n JOIN car_makers ON cars_data.Id = car_makers.Id\n WHERE (car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500)"}
{"db_id": "car_1", "query": "select distinct year from cars_data where weight between 3000 and 4000;", "query_toks": ["select", "distinct", "year", "from", "cars_data", "where", "weight", "between", "3000", "and", "4000", ";"], "query_toks_no_value": ["select", "distinct", "year", "from", "cars_data", "where", "weight", "between", "value", "and", "value"], "question": "In which years cars were produced weighing no less than 3000 and no more than 4000 ?", "question_toks": ["In", "which", "years", "cars", "were", "produced", "weighing", "no", "less", "than", "3000", "and", "no", "more", "than", "4000", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]]]], "where": [[false, 1, [0, [0, 21, false], null], 3000.0, 4000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "153", "answer_text": [[1970], [1971], [1972], [1973], [1974], [1975], [1976], [1977], [1978], [1979], [1980], [1981], [1982]], "trigger_words": ["Year"], "Prediction": "Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000;"}
{"db_id": "car_1", "query": "select distinct year from cars_data where weight between 3000 and 4000;", "query_toks": ["select", "distinct", "year", "from", "cars_data", "where", "weight", "between", "3000", "and", "4000", ";"], "query_toks_no_value": ["select", "distinct", "year", "from", "cars_data", "where", "weight", "between", "value", "and", "value"], "question": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?", "question_toks": ["What", "are", "the", "different", "years", "in", "which", "there", "were", "cars", "produced", "that", "weighed", "less", "than", "4000", "and", "also", "cars", "that", "weighted", "more", "than", "3000", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]]]], "where": [[false, 1, [0, [0, 21, false], null], 3000.0, 4000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "154", "answer_text": [[1970], [1971], [1972], [1973], [1974], [1975], [1976], [1977], [1978], [1979], [1980], [1981], [1982]], "trigger_words": ["Year"], "Prediction": "DISTINCT Year FROM cars_data WHERE Weight < 4000 OR Weight > 3000;"}
{"db_id": "car_1", "query": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;", "query_toks": ["SELECT", "T1.horsepower", "FROM", "CARS_DATA", "AS", "T1", "ORDER", "BY", "T1.accelerate", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "horsepower", "from", "cars_data", "as", "t1", "order", "by", "t1", ".", "accelerate", "desc", "limit", "value"], "question": "What is the horsepower of the car with the largest accelerate?", "question_toks": ["What", "is", "the", "horsepower", "of", "the", "car", "with", "the", "largest", "accelerate", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 22, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "155", "answer_text": [["71"]], "trigger_words": ["Horsepower"], "Prediction": "cars_data.Horsepower \n FROM cars_data \n WHERE cars_data.Accelerate = (SELECT MAX(Accelerate) FROM cars_data);"}
{"db_id": "car_1", "query": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;", "query_toks": ["SELECT", "T1.horsepower", "FROM", "CARS_DATA", "AS", "T1", "ORDER", "BY", "T1.accelerate", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "horsepower", "from", "cars_data", "as", "t1", "order", "by", "t1", ".", "accelerate", "desc", "limit", "value"], "question": "What is the horsepower of the car with the greatest accelerate?", "question_toks": ["What", "is", "the", "horsepower", "of", "the", "car", "with", "the", "greatest", "accelerate", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 22, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "156", "answer_text": [["71"]], "trigger_words": ["Horsepower"], "Prediction": "cars_data.Horsepower \n FROM cars_data \n WHERE cars_data.Accelerate = (SELECT MAX(Accelerate) FROM cars_data);"}
{"db_id": "car_1", "query": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;", "query_toks": ["SELECT", "T1.cylinders", "FROM", "CARS_DATA", "AS", "T1", "JOIN", "CAR_NAMES", "AS", "T2", "ON", "T1.Id", "=", "T2.MakeId", "WHERE", "T2.Model", "=", "'volvo", "'", "ORDER", "BY", "T1.accelerate", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "cylinders", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "makeid", "where", "t2", ".", "model", "=", "value", "order", "by", "t1", ".", "accelerate", "asc", "limit", "value"], "question": "For model volvo, how many cylinders does the car with the least accelerate have?", "question_toks": ["For", "model", "volvo", ",", "how", "many", "cylinders", "does", "the", "car", "with", "the", "least", "accelerate", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"volvo\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 22, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "157", "answer_text": [[6]], "trigger_words": ["Cylinders"], "Prediction": "MIN(Cylinders) FROM cars_data JOIN car_names ON cars_data.Id=car_names.MakeId WHERE Model='volvo' AND Accelerate=(SELECT MIN(Accelerate) FROM cars_data JOIN car_names ON cars_data.Id=car_names.MakeId WHERE Model='volvo');"}
{"db_id": "car_1", "query": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;", "query_toks": ["SELECT", "T1.cylinders", "FROM", "CARS_DATA", "AS", "T1", "JOIN", "CAR_NAMES", "AS", "T2", "ON", "T1.Id", "=", "T2.MakeId", "WHERE", "T2.Model", "=", "'volvo", "'", "ORDER", "BY", "T1.accelerate", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "cylinders", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "makeid", "where", "t2", ".", "model", "=", "value", "order", "by", "t1", ".", "accelerate", "asc", "limit", "value"], "question": "For a volvo model, how many cylinders does the version with least accelerate have?", "question_toks": ["For", "a", "volvo", "model", ",", "how", "many", "cylinders", "does", "the", "version", "with", "least", "accelerate", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"volvo\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 22, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "158", "answer_text": [[6]], "trigger_words": ["Cylinders"], "Prediction": "MIN(Cylinders) FROM cars_data \nWHERE Id IN (SELECT MakeId FROM car_names WHERE Model LIKE '%volvo%') \nAND Accelerate = (SELECT MIN(Accelerate) FROM cars_data \n                  WHERE Id IN (SELECT MakeId FROM car_names WHERE Model LIKE '%volvo%'))"}
{"db_id": "car_1", "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "CARS_DATA", "WHERE", "Accelerate", ">", "(", "SELECT", "Accelerate", "FROM", "CARS_DATA", "ORDER", "BY", "Horsepower", "DESC", "LIMIT", "1", ")", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "accelerate", ">", "(", "select", "accelerate", "from", "cars_data", "order", "by", "horsepower", "desc", "limit", "value", ")"], "question": "How many cars have a larger accelerate than the car with the largest horsepower?", "question_toks": ["How", "many", "cars", "have", "a", "larger", "accelerate", "than", "the", "car", "with", "the", "largest", "horsepower", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 22, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "159", "answer_text": [[39]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);"}
{"db_id": "car_1", "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "CARS_DATA", "WHERE", "Accelerate", ">", "(", "SELECT", "Accelerate", "FROM", "CARS_DATA", "ORDER", "BY", "Horsepower", "DESC", "LIMIT", "1", ")", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "accelerate", ">", "(", "select", "accelerate", "from", "cars_data", "order", "by", "horsepower", "desc", "limit", "value", ")"], "question": "What is the number of cars with a greater accelerate than the one with the most horsepower?", "question_toks": ["What", "is", "the", "number", "of", "cars", "with", "a", "greater", "accelerate", "than", "the", "one", "with", "the", "most", "horsepower", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 22, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "160", "answer_text": [[39]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);"}
{"db_id": "car_1", "query": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2", "query_toks": ["select", "count", "(", "*", ")", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "countryid", "=", "t2", ".", "country", "group", "by", "t1", ".", "countryid", "having", "count", "(", "*", ")", ">", "value"], "question": "How many countries has more than 2 car makers ?", "question_toks": ["How", "many", "countries", "has", "more", "than", "2", "car", "makers", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "161", "answer_text": [[4], [4], [3], [5]], "trigger_words": ["Number"], "Prediction": "COUNT(DISTINCT car_makers.Country)\nFROM car_makers\nGROUP BY car_makers.Country\nHAVING COUNT(DISTINCT car_makers.Maker) > 2;"}
{"db_id": "car_1", "query": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2", "query_toks": ["select", "count", "(", "*", ")", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "countryid", "=", "t2", ".", "country", "group", "by", "t1", ".", "countryid", "having", "count", "(", "*", ")", ">", "value"], "question": "What is the number of countries with more than 2 car makers ?", "question_toks": ["What", "is", "the", "number", "of", "countries", "with", "more", "than", "2", "car", "makers", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "162", "answer_text": [[4], [4], [3], [5]], "trigger_words": ["Number"], "Prediction": "COUNT(DISTINCT countries.CountryId) \nFROM car_makers \nJOIN countries ON car_makers.Country=countries.CountryId \nGROUP BY countries.CountryId \nHAVING COUNT(DISTINCT car_makers.Id) > 2;"}
{"db_id": "car_1", "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "CARS_DATA", "WHERE", "Cylinders", ">", "6", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "cylinders", ">", "value"], "question": "How many cars has over 6 cylinders?", "question_toks": ["How", "many", "cars", "has", "over", "6", "cylinders", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 18, false], null], 6.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "163", "answer_text": [[108]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM cars_data WHERE Cylinders > 6;"}
{"db_id": "car_1", "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "CARS_DATA", "WHERE", "Cylinders", ">", "6", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "cylinders", ">", "value"], "question": "What is the number of carsw ith over 6 cylinders?", "question_toks": ["What", "is", "the", "number", "of", "carsw", "ith", "over", "6", "cylinders", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 18, false], null], 6.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "164", "answer_text": [[108]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM cars_data WHERE Cylinders > 6;"}
{"db_id": "car_1", "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;", "query_toks": ["SELECT", "T1.Model", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "WHERE", "T2.Cylinders", "=", "4", "ORDER", "BY", "T2.horsepower", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "where", "t2", ".", "cylinders", "=", "value", "order", "by", "t2", ".", "horsepower", "desc", "limit", "value"], "question": "For the cars with 4 cylinders, which model has the largest horsepower?", "question_toks": ["For", "the", "cars", "with", "4", "cylinders", ",", "which", "model", "has", "the", "largest", "horsepower", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "165", "answer_text": [["ford"]], "trigger_words": ["Model"], "Prediction": "car_names.Model \nFROM cars_data \nJOIN car_names ON cars_data.Id=car_names.MakeId \nWHERE cars_data.Cylinders=4 \nORDER BY cars_data.Horsepower DESC \nLIMIT 1;"}
{"db_id": "car_1", "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;", "query_toks": ["SELECT", "T1.Model", "FROM", "CAR_NAMES", "AS", "T1", "JOIN", "CARS_DATA", "AS", "T2", "ON", "T1.MakeId", "=", "T2.Id", "WHERE", "T2.Cylinders", "=", "4", "ORDER", "BY", "T2.horsepower", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1", ".", "makeid", "=", "t2", ".", "id", "where", "t2", ".", "cylinders", "=", "value", "order", "by", "t2", ".", "horsepower", "desc", "limit", "value"], "question": "For all of the 4 cylinder cars, which model has the most horsepower?", "question_toks": ["For", "all", "of", "the", "4", "cylinder", "cars", ",", "which", "model", "has", "the", "most", "horsepower", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "166", "answer_text": [["ford"]], "trigger_words": ["Model"], "Prediction": "car_names.Model \nFROM car_names \nJOIN cars_data ON car_names.MakeId = cars_data.Id \nWHERE cars_data.Cylinders = 4 \nORDER BY cars_data.Horsepower DESC \nLIMIT 1;"}
{"db_id": "car_1", "query": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;", "query_toks": ["SELECT", "T2.MakeId", ",", "T2.Make", "FROM", "CARS_DATA", "AS", "T1", "JOIN", "CAR_NAMES", "AS", "T2", "ON", "T1.Id", "=", "T2.MakeId", "WHERE", "T1.Horsepower", ">", "(", "SELECT", "min", "(", "Horsepower", ")", "FROM", "CARS_DATA", ")", "AND", "T1.Cylinders", "<", "=", "3", ";"], "query_toks_no_value": ["select", "t2", ".", "makeid", ",", "t2", ".", "make", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "makeid", "where", "t1", ".", "horsepower", ">", "(", "select", "min", "(", "horsepower", ")", "from", "cars_data", ")", "and", "t1", ".", "cylinders", "<", "=", "value"], "question": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.", "question_toks": ["Among", "the", "cars", "with", "more", "than", "lowest", "horsepower", ",", "which", "ones", "do", "not", "have", "more", "than", "3", "cylinders", "?", "List", "the", "car", "makeid", "and", "make", "name", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 3, [0, [0, 20, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[2, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 6, [0, [0, 18, false], null], 3.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "167", "answer_text": [[79, "mazda rx2 coupe"], [119, "mazda rx3"], [251, "mazda rx-4"]], "trigger_words": ["Makeid", "Make"], "Prediction": "car_names.MakeId, car_names.Make\n FROM car_names\n JOIN cars_data ON car_names.MakeId = cars_data.Id\n WHERE cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data)\n AND cars_data.Cylinders <= 3;"}
{"db_id": "car_1", "query": "select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;", "query_toks": ["select", "t2.makeid", ",", "t2.make", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t1.horsepower", ">", "(", "select", "min", "(", "horsepower", ")", "from", "cars_data", ")", "and", "t1.cylinders", "<", "4", ";"], "query_toks_no_value": ["select", "t2", ".", "makeid", ",", "t2", ".", "make", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "makeid", "where", "t1", ".", "horsepower", ">", "(", "select", "min", "(", "horsepower", ")", "from", "cars_data", ")", "and", "t1", ".", "cylinders", "<", "value"], "question": "Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?", "question_toks": ["Among", "the", "cars", "that", "do", "not", "have", "the", "minimum", "horsepower", ",", "what", "are", "the", "make", "ids", "and", "names", "of", "all", "those", "with", "less", "than", "4", "cylinders", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 3, [0, [0, 20, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[2, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 4, [0, [0, 18, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "168", "answer_text": [[79, "mazda rx2 coupe"], [119, "mazda rx3"], [251, "mazda rx-4"]], "trigger_words": ["Makeid", "Make"], "Prediction": "car_makers.Id, car_makers.Maker \n FROM cars_data \n JOIN car_makers ON cars_data.Id = car_makers.Id \n WHERE cars_data.Cylinders < 4 AND cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data);"}
{"db_id": "car_1", "query": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980", "query_toks": ["select", "max", "(", "mpg", ")", "from", "cars_data", "where", "cylinders", "=", "8", "or", "year", "<", "1980"], "query_toks_no_value": ["select", "max", "(", "mpg", ")", "from", "cars_data", "where", "cylinders", "=", "value", "or", "year", "<", "value"], "question": "What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ?", "question_toks": ["What", "is", "the", "maximum", "miles", "per", "gallon", "of", "the", "car", "with", "8", "cylinders", "or", "produced", "before", "1980", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 8.0, null], "or", [false, 4, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "169", "answer_text": [["null"]], "trigger_words": ["Maximal Number"], "Prediction": "MAX(MPG) FROM cars_data WHERE Cylinders = 8 AND Year < 1980;"}
{"db_id": "car_1", "query": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980", "query_toks": ["select", "max", "(", "mpg", ")", "from", "cars_data", "where", "cylinders", "=", "8", "or", "year", "<", "1980"], "query_toks_no_value": ["select", "max", "(", "mpg", ")", "from", "cars_data", "where", "cylinders", "=", "value", "or", "year", "<", "value"], "question": "What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ?", "question_toks": ["What", "is", "the", "maximum", "mpg", "of", "the", "cars", "that", "had", "8", "cylinders", "or", "that", "were", "produced", "before", "1980", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 8.0, null], "or", [false, 4, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "170", "answer_text": [["null"]], "trigger_words": ["Maximal Number"], "Prediction": "MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980;"}
{"db_id": "car_1", "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';", "query_toks": ["SELECT", "DISTINCT", "T1.model", "FROM", "MODEL_LIST", "AS", "T1", "JOIN", "CAR_NAMES", "AS", "T2", "ON", "T1.Model", "=", "T2.Model", "JOIN", "CARS_DATA", "AS", "T3", "ON", "T2.MakeId", "=", "T3.Id", "JOIN", "CAR_MAKERS", "AS", "T4", "ON", "T1.Maker", "=", "T4.Id", "WHERE", "T3.weight", "<", "3500", "AND", "T4.FullName", "!", "=", "'Ford", "Motor", "Company", "'", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "model", "=", "t2", ".", "model", "join", "cars_data", "as", "t3", "on", "t2", ".", "makeid", "=", "t3", ".", "id", "join", "car_makers", "as", "t4", "on", "t1", ".", "maker", "=", "t4", ".", "id", "where", "t3", ".", "weight", "<", "value", "and", "t4", ".", "fullname", "!", "=", "value"], "question": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?", "question_toks": ["Which", "models", "are", "lighter", "than", "3500", "but", "not", "built", "by", "the", "'Ford", "Motor", "Company", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 6, false], null]]}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [[false, 4, [0, [0, 21, false], null], 3500.0, null], "and", [false, 7, [0, [0, 8, false], null], "\"Ford Motor Company\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "171", "answer_text": [["plymouth"], ["amc"], ["citroen"], ["buick"], ["toyota"], ["datsun"], ["volkswagen"], ["peugeot"], ["audi"], ["saab"], ["bmw"], ["chevrolet"], ["pontiac"], ["opel"], ["fiat"], ["dodge"], ["mazda"], ["volvo"], ["renault"], ["honda"], ["subaru"], ["oldsmobile"], ["mercedes-benz"], ["triumph"], ["chrysler"], ["nissan"]], "trigger_words": ["Model"], "Prediction": "Model FROM car_names \nJOIN cars_data ON car_names.MakeId=cars_data.Id \nJOIN car_makers ON car_names.Make=car_makers.Maker \nWHERE Weight<3500 AND car_makers.Maker!='Ford Motor Company';"}
{"db_id": "car_1", "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';", "query_toks": ["SELECT", "DISTINCT", "T1.model", "FROM", "MODEL_LIST", "AS", "T1", "JOIN", "CAR_NAMES", "AS", "T2", "ON", "T1.Model", "=", "T2.Model", "JOIN", "CARS_DATA", "AS", "T3", "ON", "T2.MakeId", "=", "T3.Id", "JOIN", "CAR_MAKERS", "AS", "T4", "ON", "T1.Maker", "=", "T4.Id", "WHERE", "T3.weight", "<", "3500", "AND", "T4.FullName", "!", "=", "'Ford", "Motor", "Company", "'", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1", ".", "model", "=", "t2", ".", "model", "join", "cars_data", "as", "t3", "on", "t2", ".", "makeid", "=", "t3", ".", "id", "join", "car_makers", "as", "t4", "on", "t1", ".", "maker", "=", "t4", ".", "id", "where", "t3", ".", "weight", "<", "value", "and", "t4", ".", "fullname", "!", "=", "value"], "question": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?", "question_toks": ["What", "are", "the", "different", "models", "wthat", "are", "lighter", "than", "3500", "but", "were", "not", "built", "by", "the", "Ford", "Motor", "Company", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 6, false], null]]}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [[false, 4, [0, [0, 21, false], null], 3500.0, null], "and", [false, 7, [0, [0, 8, false], null], "\"Ford Motor Company\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "172", "answer_text": [["plymouth"], ["amc"], ["citroen"], ["buick"], ["toyota"], ["datsun"], ["volkswagen"], ["peugeot"], ["audi"], ["saab"], ["bmw"], ["chevrolet"], ["pontiac"], ["opel"], ["fiat"], ["dodge"], ["mazda"], ["volvo"], ["renault"], ["honda"], ["subaru"], ["oldsmobile"], ["mercedes-benz"], ["triumph"], ["chrysler"], ["nissan"]], "trigger_words": ["Model"], "Prediction": "car_names.Model \n FROM car_names \n JOIN cars_data ON car_names.MakeId=cars_data.Id \n JOIN car_makers ON car_names.Make=car_makers.Maker \n WHERE cars_data.Weight<3500 AND car_makers.Maker!='Ford Motor Company';"}
{"db_id": "car_1", "query": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;", "query_toks": ["SELECT", "CountryName", "FROM", "countries", "EXCEPT", "SELECT", "T1.CountryName", "FROM", "countries", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.countryId", "=", "T2.Country", ";"], "query_toks_no_value": ["select", "countryname", "from", "countries", "except", "select", "t1", ".", "countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "countryid", "=", "t2", ".", "country"], "question": "What are the name of the countries where there is not a single car maker?", "question_toks": ["What", "are", "the", "name", "of", "the", "countries", "where", "there", "is", "not", "a", "single", "car", "maker", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "173", "answer_text": [["australia"], ["brazil"], ["egypt"], ["mexico"], ["new zealand"], ["nigeria"], ["russia"]], "trigger_words": ["Country Name"], "Prediction": "CountryName FROM countries LEFT JOIN car_makers ON countries.CountryId=car_makers.Country WHERE car_makers.Id IS NULL;"}
{"db_id": "car_1", "query": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;", "query_toks": ["SELECT", "CountryName", "FROM", "countries", "EXCEPT", "SELECT", "T1.CountryName", "FROM", "countries", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.countryId", "=", "T2.Country", ";"], "query_toks_no_value": ["select", "countryname", "from", "countries", "except", "select", "t1", ".", "countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "countryid", "=", "t2", ".", "country"], "question": "What are the names of the countries with no car makers?", "question_toks": ["What", "are", "the", "names", "of", "the", "countries", "with", "no", "car", "makers", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "174", "answer_text": [["australia"], ["brazil"], ["egypt"], ["mexico"], ["new zealand"], ["nigeria"], ["russia"]], "trigger_words": ["Country Name"], "Prediction": "countries.CountryName \nFROM countries \nLEFT JOIN car_makers ON countries.CountryId = car_makers.Country \nWHERE car_makers.Id IS NULL;"}
{"db_id": "car_1", "query": "select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;", "query_toks": ["select", "t1.id", ",", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">=", "2", "intersect", "select", "t1.id", ",", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "join", "car_names", "as", "t3", "on", "t2.model", "=", "t3.model", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">", "3", ";"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "=", "value", "intersect", "select", "t1", ".", "id", ",", "t1", ".", "maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "join", "car_names", "as", "t3", "on", "t2", ".", "model", "=", "t3", ".", "model", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "value"], "question": "Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .", "question_toks": ["Which", "are", "the", "car", "makers", "which", "produce", "at", "least", "2", "models", "and", "more", "than", "3", "car", "makers", "?", "List", "the", "id", "and", "the", "maker", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "175", "answer_text": [[2, "volkswagen"], [4, "gm"], [5, "ford"], [6, "chrysler"], [8, "nissan"], [19, "toyota"]], "trigger_words": ["Id", "Maker"], "Prediction": "car_makers.Id, car_makers.Maker \n FROM car_makers \n INNER JOIN car_names ON car_makers.Id = car_names.MakeId \n GROUP BY car_makers.Id \n HAVING COUNT(car_names.Model) >= 2 AND COUNT(DISTINCT car_makers.Id) > 3;"}
{"db_id": "car_1", "query": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;", "query_toks": ["SELECT", "T1.Id", ",", "T1.Maker", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Id", "=", "T2.Maker", "GROUP", "BY", "T1.Id", "HAVING", "count", "(", "*", ")", ">", "=", "2", "INTERSECT", "SELECT", "T1.Id", ",", "T1.Maker", "FROM", "CAR_MAKERS", "AS", "T1", "JOIN", "MODEL_LIST", "AS", "T2", "ON", "T1.Id", "=", "T2.Maker", "JOIN", "CAR_NAMES", "AS", "T3", "ON", "T2.model", "=", "T3.model", "GROUP", "BY", "T1.Id", "HAVING", "count", "(", "*", ")", ">", "3", ";"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "=", "value", "intersect", "select", "t1", ".", "id", ",", "t1", ".", "maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "maker", "join", "car_names", "as", "t3", "on", "t2", ".", "model", "=", "t3", ".", "model", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?", "question_toks": ["What", "are", "the", "ids", "and", "makers", "of", "all", "car", "makers", "that", "produce", "at", "least", "2", "models", "and", "make", "more", "than", "3", "cars", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "176", "answer_text": [[2, "volkswagen"], [4, "gm"], [5, "ford"], [6, "chrysler"], [8, "nissan"], [19, "toyota"]], "trigger_words": ["Id", "Maker"], "Prediction": "car_makers.Id, car_makers.Maker \n FROM car_makers \n JOIN car_names ON car_makers.Id = car_names.MakeId \n WHERE car_makers.Country = 'USA' \n GROUP BY car_makers.Id \n HAVING COUNT(DISTINCT car_names.Model) >= 2 AND COUNT(car_names.Make) > 3;"}
{"db_id": "car_1", "query": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';", "query_toks": ["SELECT", "T1.countryId", ",", "T1.CountryName", "FROM", "Countries", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.CountryId", "=", "T2.Country", "GROUP", "BY", "T1.countryId", "HAVING", "count", "(", "*", ")", ">", "3", "UNION", "SELECT", "T1.countryId", ",", "T1.CountryName", "FROM", "Countries", "AS", "T1", "JOIN", "CAR_MAKERS", "AS", "T2", "ON", "T1.CountryId", "=", "T2.Country", "JOIN", "MODEL_LIST", "AS", "T3", "ON", "T2.Id", "=", "T3.Maker", "WHERE", "T3.Model", "=", "'fiat", "'", ";"], "query_toks_no_value": ["select", "t1", ".", "countryid", ",", "t1", ".", "countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "countryid", "=", "t2", ".", "country", "group", "by", "t1", ".", "countryid", "having", "count", "(", "*", ")", ">", "value", "union", "select", "t1", ".", "countryid", ",", "t1", ".", "countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "countryid", "=", "t2", ".", "country", "join", "model_list", "as", "t3", "on", "t2", ".", "id", "=", "t3", ".", "maker", "where", "t3", ".", "model", "=", "value"], "question": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?", "question_toks": ["What", "are", "the", "id", "and", "names", "of", "the", "countries", "which", "have", "more", "than", "3", "car", "makers", "or", "produce", "the", "'fiat", "'", "model", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"fiat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "id": "177", "answer_text": [[1, "usa"], [2, "germany"], [4, "japan"], [5, "italy"]], "trigger_words": ["Country Id", "Country Name"], "Prediction": "countries.CountryId, countries.CountryName \n FROM countries \n JOIN car_makers ON countries.CountryId = car_makers.Country \n JOIN car_names ON car_makers.Id = car_names.MakeId \n WHERE countries.CountryId IN \n   (SELECT car_makers.Country \n    FROM car_makers \n    GROUP BY car_makers.Country \n    HAVING COUNT(DISTINCT car_makers.Maker) > 3) \n OR car_names.Model = 'fiat';"}
{"db_id": "car_1", "query": "select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';", "query_toks": ["select", "t1.countryid", ",", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">", "3", "union", "select", "t1.countryid", ",", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "join", "model_list", "as", "t3", "on", "t2.id", "=", "t3.maker", "where", "t3.model", "=", "\"fiat\"", ";"], "query_toks_no_value": ["select", "t1", ".", "countryid", ",", "t1", ".", "countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "countryid", "=", "t2", ".", "country", "group", "by", "t1", ".", "countryid", "having", "count", "(", "*", ")", ">", "value", "union", "select", "t1", ".", "countryid", ",", "t1", ".", "countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1", ".", "countryid", "=", "t2", ".", "country", "join", "model_list", "as", "t3", "on", "t2", ".", "id", "=", "t3", ".", "maker", "where", "t3", ".", "model", "=", "value"], "question": "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?", "question_toks": ["What", "are", "the", "ids", "and", "names", "of", "all", "countries", "that", "either", "have", "more", "than", "3", "car", "makers", "or", "produce", "fiat", "model", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"fiat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "id": "178", "answer_text": [[1, "usa"], [2, "germany"], [4, "japan"], [5, "italy"]], "trigger_words": ["Country Id", "Country Name"], "Prediction": "countries.CountryId, countries.CountryName \n FROM countries \n JOIN car_makers ON countries.CountryId = car_makers.Country \n JOIN car_names ON car_makers.Id = car_names.MakeId \n WHERE countries.CountryId IN \n     (SELECT car_makers.Country \n      FROM car_makers \n      GROUP BY car_makers.Country \n      HAVING COUNT(DISTINCT car_makers.Maker) > 3) \n OR car_names.Model = 'fiat';"}
{"db_id": "flight_2", "query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "query_toks": ["SELECT", "Country", "FROM", "AIRLINES", "WHERE", "Airline", "=", "``", "JetBlue", "Airways", "''"], "query_toks_no_value": ["select", "country", "from", "airlines", "where", "airline", "=", "value"], "question": "Which country does Airline \"JetBlue Airways\" belong to?", "question_toks": ["Which", "country", "does", "Airline", "``", "JetBlue", "Airways", "''", "belong", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "179", "answer_text": [["USA"]], "trigger_words": ["Country"], "Prediction": "Country FROM airlines WHERE Airline = \"JetBlue Airways\";"}
{"db_id": "flight_2", "query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "query_toks": ["SELECT", "Country", "FROM", "AIRLINES", "WHERE", "Airline", "=", "``", "JetBlue", "Airways", "''"], "query_toks_no_value": ["select", "country", "from", "airlines", "where", "airline", "=", "value"], "question": "What country is Jetblue Airways affiliated with?", "question_toks": ["What", "country", "is", "Jetblue", "Airways", "affiliated", "with", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "180", "answer_text": [["USA"]], "trigger_words": ["Country"], "Prediction": "airlines.Country FROM airlines WHERE airlines.Airline = 'Jetblue Airways';"}
{"db_id": "flight_2", "query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "query_toks": ["SELECT", "Abbreviation", "FROM", "AIRLINES", "WHERE", "Airline", "=", "``", "JetBlue", "Airways", "''"], "query_toks_no_value": ["select", "abbreviation", "from", "airlines", "where", "airline", "=", "value"], "question": "What is the abbreviation of Airline \"JetBlue Airways\"?", "question_toks": ["What", "is", "the", "abbreviation", "of", "Airline", "``", "JetBlue", "Airways", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "181", "answer_text": [["JetBlue"]], "trigger_words": ["Abbreviation"], "Prediction": "Abbreviation FROM airlines WHERE Airline = \"JetBlue Airways\";"}
{"db_id": "flight_2", "query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "query_toks": ["SELECT", "Abbreviation", "FROM", "AIRLINES", "WHERE", "Airline", "=", "``", "JetBlue", "Airways", "''"], "query_toks_no_value": ["select", "abbreviation", "from", "airlines", "where", "airline", "=", "value"], "question": "Which abbreviation corresponds to Jetblue Airways?", "question_toks": ["Which", "abbreviation", "corresponds", "to", "Jetblue", "Airways", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "182", "answer_text": [["JetBlue"]], "trigger_words": ["Abbreviation"], "Prediction": "Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways';"}
{"db_id": "flight_2", "query": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"", "query_toks": ["SELECT", "Airline", ",", "Abbreviation", "FROM", "AIRLINES", "WHERE", "Country", "=", "``", "USA", "''"], "query_toks_no_value": ["select", "airline", ",", "abbreviation", "from", "airlines", "where", "country", "=", "value"], "question": "List all airline names and their abbreviations in \"USA\".", "question_toks": ["List", "all", "airline", "names", "and", "their", "abbreviations", "in", "``", "USA", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "183", "answer_text": [["United Airlines", "UAL"], ["US Airways", "USAir"], ["Delta Airlines", "Delta"], ["Southwest Airlines", "Southwest"], ["American Airlines", "American"], ["Northwest Airlines", "Northwest"], ["Continental Airlines", "Continental"], ["JetBlue Airways", "JetBlue"], ["Frontier Airlines", "Frontier"], ["AirTran Airways", "AirTran"], ["Allegiant Air", "Allegiant"], ["Virgin America", "Virgin"]], "trigger_words": ["Airline", "Abbreviation"], "Prediction": "Airline, Abbreviation FROM airlines WHERE Country = \"USA\";"}
{"db_id": "flight_2", "query": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"", "query_toks": ["SELECT", "Airline", ",", "Abbreviation", "FROM", "AIRLINES", "WHERE", "Country", "=", "``", "USA", "''"], "query_toks_no_value": ["select", "airline", ",", "abbreviation", "from", "airlines", "where", "country", "=", "value"], "question": "What are the airline names and abbreviations for airlines in the USA?", "question_toks": ["What", "are", "the", "airline", "names", "and", "abbreviations", "for", "airlines", "in", "the", "USA", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "184", "answer_text": [["United Airlines", "UAL"], ["US Airways", "USAir"], ["Delta Airlines", "Delta"], ["Southwest Airlines", "Southwest"], ["American Airlines", "American"], ["Northwest Airlines", "Northwest"], ["Continental Airlines", "Continental"], ["JetBlue Airways", "JetBlue"], ["Frontier Airlines", "Frontier"], ["AirTran Airways", "AirTran"], ["Allegiant Air", "Allegiant"], ["Virgin America", "Virgin"]], "trigger_words": ["Airline", "Abbreviation"], "Prediction": "Airline, Abbreviation FROM airlines WHERE Country = 'USA';"}
{"db_id": "flight_2", "query": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"", "query_toks": ["SELECT", "AirportCode", ",", "AirportName", "FROM", "AIRPORTS", "WHERE", "city", "=", "``", "Anthony", "''"], "query_toks_no_value": ["select", "airportcode", ",", "airportname", "from", "airports", "where", "city", "=", "value"], "question": "List the airport code and name in the city of Anthony.", "question_toks": ["List", "the", "airport", "code", "and", "name", "in", "the", "city", "of", "Anthony", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Anthony\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "185", "answer_text": [], "trigger_words": ["Airport Code", "Airport Name"], "Prediction": "AirportCode, AirportName \n FROM airports \n WHERE City = 'Anthony';"}
{"db_id": "flight_2", "query": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"", "query_toks": ["SELECT", "AirportCode", ",", "AirportName", "FROM", "AIRPORTS", "WHERE", "city", "=", "``", "Anthony", "''"], "query_toks_no_value": ["select", "airportcode", ",", "airportname", "from", "airports", "where", "city", "=", "value"], "question": "Give the airport code and airport name corresonding to the city Anthony.", "question_toks": ["Give", "the", "airport", "code", "and", "airport", "name", "corresonding", "to", "the", "city", "Anthony", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Anthony\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "186", "answer_text": [], "trigger_words": ["Airport Code", "Airport Name"], "Prediction": "AirportCode, AirportName FROM airports WHERE City = 'Anthony';"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines"], "question": "How many airlines do we have?", "question_toks": ["How", "many", "airlines", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "187", "answer_text": [[12]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM airlines;"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines"], "question": "What is the total number of airlines?", "question_toks": ["What", "is", "the", "total", "number", "of", "airlines", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "188", "answer_text": [[12]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM airlines;"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM AIRPORTS", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRPORTS"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airports"], "question": "How many airports do we have?", "question_toks": ["How", "many", "airports", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "189", "answer_text": [[100]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM airports;"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM AIRPORTS", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRPORTS"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airports"], "question": "Return the number of  airports.", "question_toks": ["Return", "the", "number", "of", "airports", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "190", "answer_text": [[100]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM airports;"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights"], "question": "How many flights do we have?", "question_toks": ["How", "many", "flights", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "191", "answer_text": [[1200]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM flights;"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights"], "question": "Return the number of flights.", "question_toks": ["Return", "the", "number", "of", "flights", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "192", "answer_text": [[1200]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM flights;"}
{"db_id": "flight_2", "query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"", "query_toks": ["SELECT", "Airline", "FROM", "AIRLINES", "WHERE", "Abbreviation", "=", "``", "UAL", "''"], "query_toks_no_value": ["select", "airline", "from", "airlines", "where", "abbreviation", "=", "value"], "question": "Which airline has abbreviation 'UAL'?", "question_toks": ["Which", "airline", "has", "abbreviation", "'UAL", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"UAL\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "193", "answer_text": [["United Airlines"]], "trigger_words": ["Airline"], "Prediction": "Airline FROM airlines WHERE Abbreviation = 'UAL';"}
{"db_id": "flight_2", "query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"", "query_toks": ["SELECT", "Airline", "FROM", "AIRLINES", "WHERE", "Abbreviation", "=", "``", "UAL", "''"], "query_toks_no_value": ["select", "airline", "from", "airlines", "where", "abbreviation", "=", "value"], "question": "Give the airline with abbreviation 'UAL'.", "question_toks": ["Give", "the", "airline", "with", "abbreviation", "'UAL", "'", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"UAL\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "194", "answer_text": [["United Airlines"]], "trigger_words": ["Airline"], "Prediction": "Airline FROM airlines WHERE Abbreviation = 'UAL';"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES", "WHERE", "Country", "=", "``", "USA", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "where", "country", "=", "value"], "question": "How many airlines are from USA?", "question_toks": ["How", "many", "airlines", "are", "from", "USA", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "195", "answer_text": [[12]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM airlines WHERE Country = 'USA';"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES", "WHERE", "Country", "=", "``", "USA", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "where", "country", "=", "value"], "question": "Return the number of airlines in the USA.", "question_toks": ["Return", "the", "number", "of", "airlines", "in", "the", "USA", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "196", "answer_text": [[12]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM airlines WHERE Country = 'USA';"}
{"db_id": "flight_2", "query": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"", "query_toks": ["SELECT", "City", ",", "Country", "FROM", "AIRPORTS", "WHERE", "AirportName", "=", "``", "Alton", "''"], "query_toks_no_value": ["select", "city", ",", "country", "from", "airports", "where", "airportname", "=", "value"], "question": "Which city and country is the Alton airport at?", "question_toks": ["Which", "city", "and", "country", "is", "the", "Alton", "airport", "at", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Alton\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "197", "answer_text": [], "trigger_words": ["City", "Country"], "Prediction": "City, Country FROM airports WHERE AirportName = 'Alton';"}
{"db_id": "flight_2", "query": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"", "query_toks": ["SELECT", "City", ",", "Country", "FROM", "AIRPORTS", "WHERE", "AirportName", "=", "``", "Alton", "''"], "query_toks_no_value": ["select", "city", ",", "country", "from", "airports", "where", "airportname", "=", "value"], "question": "Give the city and country for the Alton airport.", "question_toks": ["Give", "the", "city", "and", "country", "for", "the", "Alton", "airport", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Alton\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "198", "answer_text": [], "trigger_words": ["City", "Country"], "Prediction": "City, Country FROM airports WHERE AirportName = 'Alton';"}
{"db_id": "flight_2", "query": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"", "query_toks": ["SELECT", "AirportName", "FROM", "AIRPORTS", "WHERE", "AirportCode", "=", "``", "AKO", "''"], "query_toks_no_value": ["select", "airportname", "from", "airports", "where", "airportcode", "=", "value"], "question": "What is the airport name for airport 'AKO'?", "question_toks": ["What", "is", "the", "airport", "name", "for", "airport", "'AKO", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"AKO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "199", "answer_text": [["Colorado Plains Regional Airport "]], "trigger_words": ["Airport Name"], "Prediction": "AirportName FROM airports WHERE AirportCode = 'AKO';"}
{"db_id": "flight_2", "query": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"", "query_toks": ["SELECT", "AirportName", "FROM", "AIRPORTS", "WHERE", "AirportCode", "=", "``", "AKO", "''"], "query_toks_no_value": ["select", "airportname", "from", "airports", "where", "airportcode", "=", "value"], "question": "Return the name of the airport with code 'AKO'.", "question_toks": ["Return", "the", "name", "of", "the", "airport", "with", "code", "'AKO", "'", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"AKO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "200", "answer_text": [["Colorado Plains Regional Airport "]], "trigger_words": ["Airport Name"], "Prediction": "AirportName FROM airports WHERE AirportCode = 'AKO';"}
{"db_id": "flight_2", "query": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"", "query_toks": ["SELECT", "AirportName", "FROM", "AIRPORTS", "WHERE", "City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "airportname", "from", "airports", "where", "city", "=", "value"], "question": "What are airport names at City 'Aberdeen'?", "question_toks": ["What", "are", "airport", "names", "at", "City", "'Aberdeen", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "201", "answer_text": [], "trigger_words": ["Airport Name"], "Prediction": "AirportName FROM airports WHERE City = 'Aberdeen';"}
{"db_id": "flight_2", "query": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"", "query_toks": ["SELECT", "AirportName", "FROM", "AIRPORTS", "WHERE", "City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "airportname", "from", "airports", "where", "city", "=", "value"], "question": "What are the names of airports in Aberdeen?", "question_toks": ["What", "are", "the", "names", "of", "airports", "in", "Aberdeen", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "202", "answer_text": [], "trigger_words": ["Airport Name"], "Prediction": "AirportName FROM airports WHERE City = 'Aberdeen';"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "WHERE", "SourceAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "where", "sourceairport", "=", "value"], "question": "How many flights depart from 'APG'?", "question_toks": ["How", "many", "flights", "depart", "from", "'APG", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "203", "answer_text": [[0]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM flights WHERE SourceAirport='APG';"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "WHERE", "SourceAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "where", "sourceairport", "=", "value"], "question": "Count the number of flights departing from 'APG'.", "question_toks": ["Count", "the", "number", "of", "flights", "departing", "from", "'APG", "'", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "204", "answer_text": [[0]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM flights WHERE SourceAirport='APG';"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "WHERE", "DestAirport", "=", "``", "ATO", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "where", "destairport", "=", "value"], "question": "How many flights have destination ATO?", "question_toks": ["How", "many", "flights", "have", "destination", "ATO", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"ATO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "205", "answer_text": [[0]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM flights WHERE DestAirport='ATO';"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "WHERE", "DestAirport", "=", "``", "ATO", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "where", "destairport", "=", "value"], "question": "Count the number of flights into ATO.", "question_toks": ["Count", "the", "number", "of", "flights", "into", "ATO", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"ATO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "206", "answer_text": [[0]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM flights JOIN airports ON flights.DestAirport=airports.AirportCode WHERE airports.AirportCode='ATO';"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.SourceAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "sourceairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "How many flights depart from City Aberdeen?", "question_toks": ["How", "many", "flights", "depart", "from", "City", "Aberdeen", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "207", "answer_text": [[0]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM flights \nJOIN airports ON flights.SourceAirport = airports.AirportCode \nWHERE airports.City = 'Aberdeen';"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.SourceAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "sourceairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "Return the number of flights departing from Aberdeen.", "question_toks": ["Return", "the", "number", "of", "flights", "departing", "from", "Aberdeen", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "208", "answer_text": [[0]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM flights \nJOIN airports ON flights.SourceAirport = airports.AirportCode \nWHERE airports.City = 'Aberdeen';"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "How many flights arriving in Aberdeen city?", "question_toks": ["How", "many", "flights", "arriving", "in", "Aberdeen", "city", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "209", "answer_text": [[0]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM flights JOIN airports ON flights.DestAirport=airports.AirportCode WHERE airports.City='Aberdeen';"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "Return the number of flights arriving in Aberdeen.", "question_toks": ["Return", "the", "number", "of", "flights", "arriving", "in", "Aberdeen", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "210", "answer_text": [[0]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM flights JOIN airports ON flights.DestAirport=airports.AirportCode WHERE airports.City='Aberdeen';"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "JOIN", "AIRPORTS", "AS", "T3", "ON", "T1.SourceAirport", "=", "T3.AirportCode", "WHERE", "T2.City", "=", "``", "Ashley", "''", "AND", "T3.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "join", "airports", "as", "t3", "on", "t1", ".", "sourceairport", "=", "t3", ".", "airportcode", "where", "t2", ".", "city", "=", "value", "and", "t3", ".", "city", "=", "value"], "question": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?", "question_toks": ["How", "many", "flights", "depart", "from", "City", "'Aberdeen", "'", "and", "have", "destination", "City", "'Ashley", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Ashley\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "211", "answer_text": [[0]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM flights \nJOIN airports ON flights.DestAirport=airports.AirportCode \nJOIN airports AS a2 ON flights.SourceAirport=a2.AirportCode \nWHERE airports.City='Ashley' AND a2.City='Aberdeen';"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "JOIN", "AIRPORTS", "AS", "T3", "ON", "T1.SourceAirport", "=", "T3.AirportCode", "WHERE", "T2.City", "=", "``", "Ashley", "''", "AND", "T3.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "join", "airports", "as", "t3", "on", "t1", ".", "sourceairport", "=", "t3", ".", "airportcode", "where", "t2", ".", "city", "=", "value", "and", "t3", ".", "city", "=", "value"], "question": "How many flights fly from Aberdeen to Ashley?", "question_toks": ["How", "many", "flights", "fly", "from", "Aberdeen", "to", "Ashley", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Ashley\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "212", "answer_text": [[0]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM flights \nWHERE SourceAirport = (SELECT AirportCode FROM airports WHERE City = 'Aberdeen') \nAND DestAirport = (SELECT AirportCode FROM airports WHERE City = 'Ashley');"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRLINES", "AS", "T2", "ON", "T1.Airline", "=", "T2.uid", "WHERE", "T2.Airline", "=", "``", "JetBlue", "Airways", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t1", ".", "airline", "=", "t2", ".", "uid", "where", "t2", ".", "airline", "=", "value"], "question": "How many flights does airline 'JetBlue Airways' have?", "question_toks": ["How", "many", "flights", "does", "airline", "'JetBlue", "Airways", "'", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "213", "answer_text": [[100]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM flights WHERE Airline = 'JetBlue Airways';"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRLINES", "AS", "T2", "ON", "T1.Airline", "=", "T2.uid", "WHERE", "T2.Airline", "=", "``", "JetBlue", "Airways", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t1", ".", "airline", "=", "t2", ".", "uid", "where", "t2", ".", "airline", "=", "value"], "question": "Give the number of Jetblue Airways flights.", "question_toks": ["Give", "the", "number", "of", "Jetblue", "Airways", "flights", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "214", "answer_text": [[100]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM flights WHERE Airline = 'Jetblue Airways';"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T2.Airline", "=", "T1.uid", "WHERE", "T1.Airline", "=", "``", "United", "Airlines", "''", "AND", "T2.DestAirport", "=", "``", "ASY", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2", ".", "airline", "=", "t1", ".", "uid", "where", "t1", ".", "airline", "=", "value", "and", "t2", ".", "destairport", "=", "value"], "question": "How many 'United Airlines' flights go to Airport 'ASY'?", "question_toks": ["How", "many", "'United", "Airlines", "'", "flights", "go", "to", "Airport", "'ASY", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null], "and", [false, 2, [0, [0, 13, false], null], "\"ASY\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "215", "answer_text": [[0]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM flights \nJOIN airlines ON flights.Airline = airlines.Airline \nWHERE airlines.Airline = 'United Airlines' AND flights.DestAirport = 'ASY';"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T2.Airline", "=", "T1.uid", "WHERE", "T1.Airline", "=", "``", "United", "Airlines", "''", "AND", "T2.DestAirport", "=", "``", "ASY", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2", ".", "airline", "=", "t1", ".", "uid", "where", "t1", ".", "airline", "=", "value", "and", "t2", ".", "destairport", "=", "value"], "question": "Count the number of United Airlines flights arriving in ASY Airport.", "question_toks": ["Count", "the", "number", "of", "United", "Airlines", "flights", "arriving", "in", "ASY", "Airport", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null], "and", [false, 2, [0, [0, 13, false], null], "\"ASY\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "216", "answer_text": [[0]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM flights \nWHERE Airline = 'United Airlines' AND DestAirport = 'ASY';"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T2.Airline", "=", "T1.uid", "WHERE", "T1.Airline", "=", "``", "United", "Airlines", "''", "AND", "T2.SourceAirport", "=", "``", "AHD", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2", ".", "airline", "=", "t1", ".", "uid", "where", "t1", ".", "airline", "=", "value", "and", "t2", ".", "sourceairport", "=", "value"], "question": "How many 'United Airlines' flights depart from Airport 'AHD'?", "question_toks": ["How", "many", "'United", "Airlines", "'", "flights", "depart", "from", "Airport", "'AHD", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"AHD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "217", "answer_text": [[0]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM flights \nWHERE Airline = 'United Airlines' AND SourceAirport = 'AHD';"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T2.Airline", "=", "T1.uid", "WHERE", "T1.Airline", "=", "``", "United", "Airlines", "''", "AND", "T2.SourceAirport", "=", "``", "AHD", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2", ".", "airline", "=", "t1", ".", "uid", "where", "t1", ".", "airline", "=", "value", "and", "t2", ".", "sourceairport", "=", "value"], "question": "Return the number of United Airlines flights leaving from AHD Airport.", "question_toks": ["Return", "the", "number", "of", "United", "Airlines", "flights", "leaving", "from", "AHD", "Airport", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"AHD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "218", "answer_text": [[0]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM flights \nWHERE Airline = 'United Airlines' AND SourceAirport = 'AHD';"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "JOIN", "AIRLINES", "AS", "T3", "ON", "T3.uid", "=", "T1.Airline", "WHERE", "T2.City", "=", "``", "Aberdeen", "''", "AND", "T3.Airline", "=", "``", "United", "Airlines", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "join", "airlines", "as", "t3", "on", "t3", ".", "uid", "=", "t1", ".", "airline", "where", "t2", ".", "city", "=", "value", "and", "t3", ".", "airline", "=", "value"], "question": "How many United Airlines flights go to City 'Aberdeen'?", "question_toks": ["How", "many", "United", "Airlines", "flights", "go", "to", "City", "'Aberdeen", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "219", "answer_text": [[0]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM flights \nJOIN airlines ON flights.Airline = airlines.Abbreviation \nJOIN airports ON flights.DestAirport = airports.AirportCode \nWHERE airlines.Airline = 'United Airlines' AND airports.City = 'Aberdeen';"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "JOIN", "AIRLINES", "AS", "T3", "ON", "T3.uid", "=", "T1.Airline", "WHERE", "T2.City", "=", "``", "Aberdeen", "''", "AND", "T3.Airline", "=", "``", "United", "Airlines", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "join", "airlines", "as", "t3", "on", "t3", ".", "uid", "=", "t1", ".", "airline", "where", "t2", ".", "city", "=", "value", "and", "t3", ".", "airline", "=", "value"], "question": "Count the number of United Airlines flights that arrive in Aberdeen.", "question_toks": ["Count", "the", "number", "of", "United", "Airlines", "flights", "that", "arrive", "in", "Aberdeen", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "220", "answer_text": [[0]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM flights \nJOIN airlines ON flights.Airline = airlines.Abbreviation \nJOIN airports ON flights.DestAirport = airports.AirportCode \nWHERE airlines.Airline = 'United Airlines' AND airports.City = 'Aberdeen';"}
{"db_id": "flight_2", "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.City", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.DestAirport", "GROUP", "BY", "T1.City", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "destairport", "group", "by", "t1", ".", "city", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which city has most number of arriving flights?", "question_toks": ["Which", "city", "has", "most", "number", "of", "arriving", "flights", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "221", "answer_text": [], "trigger_words": ["City"], "Prediction": "airports.City \nFROM airports \nJOIN flights ON airports.AirportCode = flights.DestAirport \nGROUP BY airports.City \nORDER BY COUNT(*) DESC \nLIMIT 1;"}
{"db_id": "flight_2", "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.City", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.DestAirport", "GROUP", "BY", "T1.City", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "destairport", "group", "by", "t1", ".", "city", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which city has the most frequent destination airport?", "question_toks": ["Which", "city", "has", "the", "most", "frequent", "destination", "airport", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "222", "answer_text": [], "trigger_words": ["City"], "Prediction": "airports.City \nFROM airports \nJOIN flights ON airports.AirportCode = flights.DestAirport \nGROUP BY airports.City \nORDER BY COUNT(flights.DestAirport) DESC \nLIMIT 1;"}
{"db_id": "flight_2", "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.City", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.SourceAirport", "GROUP", "BY", "T1.City", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "sourceairport", "group", "by", "t1", ".", "city", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which city has most number of departing flights?", "question_toks": ["Which", "city", "has", "most", "number", "of", "departing", "flights", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "223", "answer_text": [], "trigger_words": ["City"], "Prediction": "airports.City \nFROM flights \nJOIN airports ON flights.SourceAirport=airports.AirportCode \nGROUP BY airports.City \nORDER BY COUNT(*) DESC \nLIMIT 1;"}
{"db_id": "flight_2", "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.City", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.SourceAirport", "GROUP", "BY", "T1.City", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "sourceairport", "group", "by", "t1", ".", "city", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which city is the most frequent source airport?", "question_toks": ["Which", "city", "is", "the", "most", "frequent", "source", "airport", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "224", "answer_text": [], "trigger_words": ["City"], "Prediction": "airports.City\nFROM airports\nJOIN flights ON airports.AirportCode = flights.SourceAirport\nGROUP BY airports.City\nORDER BY COUNT(*) DESC\nLIMIT 1;"}
{"db_id": "flight_2", "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.AirportCode", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.DestAirport", "OR", "T1.AirportCode", "=", "T2.SourceAirport", "GROUP", "BY", "T1.AirportCode", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "destairport", "or", "t1", ".", "airportcode", "=", "t2", ".", "sourceairport", "group", "by", "t1", ".", "airportcode", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the code of airport that has the highest number of flights?", "question_toks": ["What", "is", "the", "code", "of", "airport", "that", "has", "the", "highest", "number", "of", "flights", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "225", "answer_text": [], "trigger_words": ["Airport Code"], "Prediction": "airports.AirportCode \nFROM airports \nJOIN flights ON airports.AirportCode = flights.SourceAirport OR airports.AirportCode = flights.DestAirport \nGROUP BY airports.AirportCode \nORDER BY COUNT(*) DESC \nLIMIT 1;"}
{"db_id": "flight_2", "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.AirportCode", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.DestAirport", "OR", "T1.AirportCode", "=", "T2.SourceAirport", "GROUP", "BY", "T1.AirportCode", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "destairport", "or", "t1", ".", "airportcode", "=", "t2", ".", "sourceairport", "group", "by", "t1", ".", "airportcode", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the airport code of the airport with the most flights?", "question_toks": ["What", "is", "the", "airport", "code", "of", "the", "airport", "with", "the", "most", "flights", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "226", "answer_text": [], "trigger_words": ["Airport Code"], "Prediction": "flights.DestAirport, COUNT(*) AS num_flights\n FROM flights\n GROUP BY flights.DestAirport\n ORDER BY num_flights DESC\n LIMIT 1;"}
{"db_id": "flight_2", "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "T1.AirportCode", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.DestAirport", "OR", "T1.AirportCode", "=", "T2.SourceAirport", "GROUP", "BY", "T1.AirportCode", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "destairport", "or", "t1", ".", "airportcode", "=", "t2", ".", "sourceairport", "group", "by", "t1", ".", "airportcode", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "What is the code of airport that has fewest number of flights?", "question_toks": ["What", "is", "the", "code", "of", "airport", "that", "has", "fewest", "number", "of", "flights", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "227", "answer_text": [], "trigger_words": ["Airport Code"], "Prediction": "airports.AirportCode\nFROM airports\nLEFT JOIN flights ON airports.AirportCode = flights.SourceAirport OR airports.AirportCode = flights.DestAirport\nGROUP BY airports.AirportCode\nORDER BY COUNT(flights.FlightNo) ASC\nLIMIT 1;"}
{"db_id": "flight_2", "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "T1.AirportCode", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.DestAirport", "OR", "T1.AirportCode", "=", "T2.SourceAirport", "GROUP", "BY", "T1.AirportCode", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "destairport", "or", "t1", ".", "airportcode", "=", "t2", ".", "sourceairport", "group", "by", "t1", ".", "airportcode", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "Give the code of the airport with the least flights.", "question_toks": ["Give", "the", "code", "of", "the", "airport", "with", "the", "least", "flights", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "228", "answer_text": [], "trigger_words": ["Airport Code"], "Prediction": "airports.AirportCode \nFROM airports \nLEFT JOIN flights ON airports.AirportCode = flights.SourceAirport \nGROUP BY airports.AirportCode \nORDER BY COUNT(flights.FlightNo) ASC \nLIMIT 1;"}
{"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which airline has most number of flights?", "question_toks": ["Which", "airline", "has", "most", "number", "of", "flights", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "229", "answer_text": [["Virgin America"]], "trigger_words": ["Airline"], "Prediction": "Airline FROM flights GROUP BY Airline ORDER BY COUNT(*) DESC LIMIT 1;"}
{"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What airline serves the most flights?", "question_toks": ["What", "airline", "serves", "the", "most", "flights", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "230", "answer_text": [["Virgin America"]], "trigger_words": ["Airline"], "Prediction": "Airline, COUNT(*) AS num_flights\n FROM flights\n GROUP BY Airline\n ORDER BY num_flights DESC\n LIMIT 1;"}
{"db_id": "flight_2", "query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "T1.Abbreviation", ",", "T1.Country", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "abbreviation", ",", "t1", ".", "country", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "Find the abbreviation and country of the airline that has fewest number of flights?", "question_toks": ["Find", "the", "abbreviation", "and", "country", "of", "the", "airline", "that", "has", "fewest", "number", "of", "flights", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "231", "answer_text": [["AirTran", "USA"]], "trigger_words": ["Abbreviation", "Country"], "Prediction": "Abbreviation, Country \nFROM airlines \nWHERE uid = (\n  SELECT Airline \n  FROM flights \n  GROUP BY Airline \n  ORDER BY COUNT(*) ASC \n  LIMIT 1\n);"}
{"db_id": "flight_2", "query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "T1.Abbreviation", ",", "T1.Country", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "abbreviation", ",", "t1", ".", "country", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "What is the abbreviation of the airilne has the fewest flights and what country is it in?", "question_toks": ["What", "is", "the", "abbreviation", "of", "the", "airilne", "has", "the", "fewest", "flights", "and", "what", "country", "is", "it", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "232", "answer_text": [["AirTran", "USA"]], "trigger_words": ["Abbreviation", "Country"], "Prediction": "Abbreviation, Country \n FROM airlines \n WHERE uid = (SELECT Airline \n              FROM flights \n              GROUP BY Airline \n              ORDER BY COUNT(*) ASC \n              LIMIT 1);"}
{"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "AHD", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value"], "question": "What are airlines that have some flight departing from airport 'AHD'?", "question_toks": ["What", "are", "airlines", "that", "have", "some", "flight", "departing", "from", "airport", "'AHD", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"AHD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "233", "answer_text": [], "trigger_words": ["Airline"], "Prediction": "airlines.Airline \nFROM airlines \nJOIN flights ON airlines.Airline = flights.Airline \nJOIN airports ON flights.SourceAirport = airports.AirportCode \nWHERE airports.AirportCode = 'AHD';"}
{"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "AHD", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value"], "question": "Which airlines have a flight with source airport AHD?", "question_toks": ["Which", "airlines", "have", "a", "flight", "with", "source", "airport", "AHD", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"AHD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "234", "answer_text": [], "trigger_words": ["Airline"], "Prediction": "airlines.Airline \n FROM airlines \n JOIN flights ON airlines.uid = flights.Airline \n WHERE flights.SourceAirport = 'AHD';"}
{"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.DestAirport", "=", "``", "AHD", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "destairport", "=", "value"], "question": "What are airlines that have flights arriving at airport 'AHD'?", "question_toks": ["What", "are", "airlines", "that", "have", "flights", "arriving", "at", "airport", "'AHD", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"AHD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "235", "answer_text": [], "trigger_words": ["Airline"], "Prediction": "airlines.Airline, airlines.Abbreviation, airlines.Country\n FROM airlines\n JOIN flights ON airlines.uid = flights.Airline\n WHERE flights.DestAirport = 'AHD';"}
{"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.DestAirport", "=", "``", "AHD", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "destairport", "=", "value"], "question": "Which airlines have a flight with destination airport AHD?", "question_toks": ["Which", "airlines", "have", "a", "flight", "with", "destination", "airport", "AHD", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"AHD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "236", "answer_text": [], "trigger_words": ["Airline"], "Prediction": "airlines.Airline \n FROM airlines \n JOIN flights ON airlines.Airline = flights.Airline \n JOIN airports ON flights.DestAirport = airports.AirportCode \n WHERE airports.AirportCode = 'AHD';"}
{"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "APG", "''", "INTERSECT", "SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "CVO", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value", "intersect", "select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value"], "question": "Find all airlines that have flights from both airports 'APG' and 'CVO'.", "question_toks": ["Find", "all", "airlines", "that", "have", "flights", "from", "both", "airports", "'APG", "'", "and", "'CVO", "'", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"CVO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "237", "answer_text": [], "trigger_words": ["Airline"], "Prediction": "airlines.Airline \n FROM airlines \n JOIN flights ON airlines.Airline = flights.Airline \n WHERE flights.SourceAirport = 'APG' \n AND flights.DestAirport = 'CVO' \n INTERSECT \n SELECT airlines.Airline \n FROM airlines \n JOIN flights ON airlines.Airline = flights.Airline \n WHERE flights.SourceAirport = 'CVO' \n AND flights.DestAirport = 'APG';"}
{"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "APG", "''", "INTERSECT", "SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "CVO", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value", "intersect", "select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value"], "question": "Which airlines have departing flights from both APG and CVO airports?", "question_toks": ["Which", "airlines", "have", "departing", "flights", "from", "both", "APG", "and", "CVO", "airports", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"CVO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "238", "answer_text": [], "trigger_words": ["Airline"], "Prediction": "airlines.Airline \nFROM airlines \nJOIN flights ON airlines.Airline = flights.Airline \nJOIN airports ON flights.SourceAirport = airports.AirportCode \nWHERE airports.AirportCode IN ('APG', 'CVO') \nGROUP BY airlines.Airline \nHAVING COUNT(DISTINCT airports.AirportCode) = 2;"}
{"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "CVO", "''", "EXCEPT", "SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value", "except", "select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value"], "question": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.", "question_toks": ["Find", "all", "airlines", "that", "have", "flights", "from", "airport", "'CVO", "'", "but", "not", "from", "'APG", "'", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"CVO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "239", "answer_text": [], "trigger_words": ["Airline"], "Prediction": "airlines.Airline \nFROM airlines \nINNER JOIN flights ON airlines.Airline = flights.Airline \nWHERE flights.SourceAirport = 'CVO' \nAND airlines.Airline NOT IN (SELECT airlines.Airline \n                             FROM airlines \n                             INNER JOIN flights ON airlines.Airline = flights.Airline \n                             WHERE flights.SourceAirport = 'APG');"}
{"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "CVO", "''", "EXCEPT", "SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.SourceAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value", "except", "select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "sourceairport", "=", "value"], "question": "Which airlines have departures from CVO but not from APG airports?", "question_toks": ["Which", "airlines", "have", "departures", "from", "CVO", "but", "not", "from", "APG", "airports", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"CVO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "240", "answer_text": [], "trigger_words": ["Airline"], "Prediction": "airlines.Airline \nFROM airlines \nJOIN flights ON airlines.Airline = flights.Airline \nJOIN airports ON flights.SourceAirport = airports.AirportCode \nWHERE airports.City = 'CVO' \nAND airlines.Airline NOT IN \n(SELECT airlines.Airline \nFROM airlines \nJOIN flights ON airlines.Airline = flights.Airline \nJOIN airports ON flights.SourceAirport = airports.AirportCode \nWHERE airports.City = 'APG');"}
{"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "HAVING", "count", "(", "*", ")", ">", "10"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "having", "count", "(", "*", ")", ">", "value"], "question": "Find all airlines that have at least 10 flights.", "question_toks": ["Find", "all", "airlines", "that", "have", "at", "least", "10", "flights", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 3, [0, [3, 0, false], null], 10.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "241", "answer_text": [["AirTran Airways"], ["Allegiant Air"], ["American Airlines"], ["Continental Airlines"], ["Delta Airlines"], ["Frontier Airlines"], ["JetBlue Airways"], ["Northwest Airlines"], ["Southwest Airlines"], ["US Airways"], ["United Airlines"], ["Virgin America"]], "trigger_words": ["Airline"], "Prediction": "airlines.Airline \n FROM airlines \n JOIN flights ON airlines.Airline = flights.Airline \n GROUP BY airlines.Airline \n HAVING COUNT(*) >= 10;"}
{"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "HAVING", "count", "(", "*", ")", ">", "10"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "having", "count", "(", "*", ")", ">", "value"], "question": "Which airlines have at least 10 flights?", "question_toks": ["Which", "airlines", "have", "at", "least", "10", "flights", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 3, [0, [3, 0, false], null], 10.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "242", "answer_text": [["AirTran Airways"], ["Allegiant Air"], ["American Airlines"], ["Continental Airlines"], ["Delta Airlines"], ["Frontier Airlines"], ["JetBlue Airways"], ["Northwest Airlines"], ["Southwest Airlines"], ["US Airways"], ["United Airlines"], ["Virgin America"]], "trigger_words": ["Airline"], "Prediction": "Airline FROM flights GROUP BY Airline HAVING COUNT(*) >= 10;"}
{"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "HAVING", "count", "(", "*", ")", "<", "200"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "having", "count", "(", "*", ")", "<", "value"], "question": "Find all airlines that have fewer than 200 flights.", "question_toks": ["Find", "all", "airlines", "that", "have", "fewer", "than", "200", "flights", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 4, [0, [3, 0, false], null], 200.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "243", "answer_text": [["AirTran Airways"], ["Allegiant Air"], ["American Airlines"], ["Continental Airlines"], ["Delta Airlines"], ["Frontier Airlines"], ["JetBlue Airways"], ["Northwest Airlines"], ["Southwest Airlines"], ["US Airways"], ["United Airlines"], ["Virgin America"]], "trigger_words": ["Airline"], "Prediction": "Airline FROM airlines \nWHERE uid IN (SELECT Airline FROM flights \nGROUP BY Airline \nHAVING COUNT(*) < 200);"}
{"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "HAVING", "count", "(", "*", ")", "<", "200"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "having", "count", "(", "*", ")", "<", "value"], "question": "Which airlines have less than 200 flights?", "question_toks": ["Which", "airlines", "have", "less", "than", "200", "flights", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 4, [0, [3, 0, false], null], 200.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "244", "answer_text": [["AirTran Airways"], ["Allegiant Air"], ["American Airlines"], ["Continental Airlines"], ["Delta Airlines"], ["Frontier Airlines"], ["JetBlue Airways"], ["Northwest Airlines"], ["Southwest Airlines"], ["US Airways"], ["United Airlines"], ["Virgin America"]], "trigger_words": ["Airline"], "Prediction": "Airline FROM airlines \nWHERE uid IN (\n    SELECT Airline FROM flights \n    GROUP BY Airline \n    HAVING COUNT(*) < 200\n);"}
{"db_id": "flight_2", "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"", "query_toks": ["SELECT", "T1.FlightNo", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRLINES", "AS", "T2", "ON", "T2.uid", "=", "T1.Airline", "WHERE", "T2.Airline", "=", "``", "United", "Airlines", "''"], "query_toks_no_value": ["select", "t1", ".", "flightno", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t2", ".", "uid", "=", "t1", ".", "airline", "where", "t2", ".", "airline", "=", "value"], "question": "What are flight numbers of Airline \"United Airlines\"?", "question_toks": ["What", "are", "flight", "numbers", "of", "Airline", "``", "United", "Airlines", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "245", "answer_text": [[28], [29], [44], [45], [54], [55], [90], [91], [108], [109], [142], [143], [148], [149], [198], [199], [226], [227], [276], [277], [308], [309], [326], [327], [370], [371], [414], [415], [424], [425], [470], [471], [520], [521], [556], [557], [560], [561], [604], [605], [608], [609], [626], [627], [658], [659], [708], [709], [744], [745], [754], [755], [786], [787], [810], [811], [828], [829], [878], [879], [888], [889], [900], [901], [924], [925], [946], [947], [996], [997], [1000], [1001], [1026], [1027], [1062], [1063], [1068], [1069], [1100], [1101], [1144], [1145], [1166], [1167], [1168], [1169], [1192], [1193], [1208], [1209], [1216], [1217], [1250], [1251], [1274], [1275], [1284], [1285], [1328], [1329]], "trigger_words": ["Flight Number"], "Prediction": "FlightNo FROM flights WHERE Airline = \"United Airlines\";"}
{"db_id": "flight_2", "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"", "query_toks": ["SELECT", "T1.FlightNo", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRLINES", "AS", "T2", "ON", "T2.uid", "=", "T1.Airline", "WHERE", "T2.Airline", "=", "``", "United", "Airlines", "''"], "query_toks_no_value": ["select", "t1", ".", "flightno", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t2", ".", "uid", "=", "t1", ".", "airline", "where", "t2", ".", "airline", "=", "value"], "question": "Which flight numbers correspond to United Airlines flights?", "question_toks": ["Which", "flight", "numbers", "correspond", "to", "United", "Airlines", "flights", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "246", "answer_text": [[28], [29], [44], [45], [54], [55], [90], [91], [108], [109], [142], [143], [148], [149], [198], [199], [226], [227], [276], [277], [308], [309], [326], [327], [370], [371], [414], [415], [424], [425], [470], [471], [520], [521], [556], [557], [560], [561], [604], [605], [608], [609], [626], [627], [658], [659], [708], [709], [744], [745], [754], [755], [786], [787], [810], [811], [828], [829], [878], [879], [888], [889], [900], [901], [924], [925], [946], [947], [996], [997], [1000], [1001], [1026], [1027], [1062], [1063], [1068], [1069], [1100], [1101], [1144], [1145], [1166], [1167], [1168], [1169], [1192], [1193], [1208], [1209], [1216], [1217], [1250], [1251], [1274], [1275], [1284], [1285], [1328], [1329]], "trigger_words": ["Flight Number"], "Prediction": "FlightNo FROM flights WHERE Airline = 'United Airlines';"}
{"db_id": "flight_2", "query": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "query_toks": ["SELECT", "FlightNo", "FROM", "FLIGHTS", "WHERE", "SourceAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "flightno", "from", "flights", "where", "sourceairport", "=", "value"], "question": "What are flight numbers of flights departing from Airport \"APG\"?", "question_toks": ["What", "are", "flight", "numbers", "of", "flights", "departing", "from", "Airport", "``", "APG", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "247", "answer_text": [], "trigger_words": ["Flight Number"], "Prediction": "FlightNo FROM flights WHERE SourceAirport = \"APG\";"}
{"db_id": "flight_2", "query": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "query_toks": ["SELECT", "FlightNo", "FROM", "FLIGHTS", "WHERE", "SourceAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "flightno", "from", "flights", "where", "sourceairport", "=", "value"], "question": "Give the flight numbers of flights leaving from APG.", "question_toks": ["Give", "the", "flight", "numbers", "of", "flights", "leaving", "from", "APG", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "248", "answer_text": [], "trigger_words": ["Flight Number"], "Prediction": "FlightNo FROM flights WHERE SourceAirport = 'APG';"}
{"db_id": "flight_2", "query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"", "query_toks": ["SELECT", "FlightNo", "FROM", "FLIGHTS", "WHERE", "DestAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "flightno", "from", "flights", "where", "destairport", "=", "value"], "question": "What are flight numbers of flights arriving at Airport \"APG\"?", "question_toks": ["What", "are", "flight", "numbers", "of", "flights", "arriving", "at", "Airport", "``", "APG", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "249", "answer_text": [], "trigger_words": ["Flight Number"], "Prediction": "FlightNo FROM flights WHERE DestAirport=\"APG\";"}
{"db_id": "flight_2", "query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"", "query_toks": ["SELECT", "FlightNo", "FROM", "FLIGHTS", "WHERE", "DestAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "flightno", "from", "flights", "where", "destairport", "=", "value"], "question": "Give the flight numbers of flights landing at APG.", "question_toks": ["Give", "the", "flight", "numbers", "of", "flights", "landing", "at", "APG", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "250", "answer_text": [], "trigger_words": ["Flight Number"], "Prediction": "FlightNo FROM flights JOIN airports ON flights.DestAirport=airports.AirportCode WHERE airports.AirportName='APG';"}
{"db_id": "flight_2", "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "T1.FlightNo", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.SourceAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "t1", ".", "flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "sourceairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "What are flight numbers of flights departing from City \"Aberdeen \"?", "question_toks": ["What", "are", "flight", "numbers", "of", "flights", "departing", "from", "City", "``", "Aberdeen", "``", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "251", "answer_text": [], "trigger_words": ["Flight Number"], "Prediction": "flights.FlightNo \nFROM flights \nJOIN airports ON flights.SourceAirport = airports.AirportCode \nWHERE airports.City = \"Aberdeen\";"}
{"db_id": "flight_2", "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "T1.FlightNo", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.SourceAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "t1", ".", "flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "sourceairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "Give the flight numbers of flights leaving from Aberdeen.", "question_toks": ["Give", "the", "flight", "numbers", "of", "flights", "leaving", "from", "Aberdeen", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "252", "answer_text": [], "trigger_words": ["Flight Number"], "Prediction": "flights.FlightNo FROM flights \nJOIN airports ON flights.SourceAirport = airports.AirportCode \nWHERE airports.City = 'Aberdeen';"}
{"db_id": "flight_2", "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "T1.FlightNo", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "t1", ".", "flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "What are flight numbers of flights arriving at City \"Aberdeen\"?", "question_toks": ["What", "are", "flight", "numbers", "of", "flights", "arriving", "at", "City", "``", "Aberdeen", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "253", "answer_text": [], "trigger_words": ["Flight Number"], "Prediction": "flights.FlightNo \nFROM flights \nJOIN airports ON flights.DestAirport=airports.AirportCode \nWHERE airports.City='Aberdeen';"}
{"db_id": "flight_2", "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "T1.FlightNo", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "t1", ".", "flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "Give the flight numbers of flights arriving in Aberdeen.", "question_toks": ["Give", "the", "flight", "numbers", "of", "flights", "arriving", "in", "Aberdeen", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "254", "answer_text": [], "trigger_words": ["Flight Number"], "Prediction": "flights.FlightNo FROM flights \nJOIN airports ON flights.DestAirport=airports.AirportCode \nWHERE airports.City='Aberdeen';"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Flights", "AS", "T1", "JOIN", "Airports", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "WHERE", "T2.city", "=", "``", "Aberdeen", "''", "OR", "T2.city", "=", "``", "Abilene", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value", "or", "t2", ".", "city", "=", "value"], "question": "Find the number of flights landing in the city of Aberdeen or Abilene.", "question_toks": ["Find", "the", "number", "of", "flights", "landing", "in", "the", "city", "of", "Aberdeen", "or", "Abilene", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"Abilene\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "255", "answer_text": [[0]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM flights \nJOIN airports ON flights.DestAirport=airports.AirportCode \nWHERE airports.City='Aberdeen' OR airports.City='Abilene';"}
{"db_id": "flight_2", "query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Flights", "AS", "T1", "JOIN", "Airports", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "WHERE", "T2.city", "=", "``", "Aberdeen", "''", "OR", "T2.city", "=", "``", "Abilene", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value", "or", "t2", ".", "city", "=", "value"], "question": "How many flights land in Aberdeen or Abilene?", "question_toks": ["How", "many", "flights", "land", "in", "Aberdeen", "or", "Abilene", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"Abilene\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "256", "answer_text": [[0]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM flights \nWHERE DestAirport IN ('ABZ', 'ABI')"}
{"db_id": "flight_2", "query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)", "query_toks": ["SELECT", "AirportName", "FROM", "Airports", "WHERE", "AirportCode", "NOT", "IN", "(", "SELECT", "SourceAirport", "FROM", "Flights", "UNION", "SELECT", "DestAirport", "FROM", "Flights", ")"], "query_toks_no_value": ["select", "airportname", "from", "airports", "where", "airportcode", "not", "in", "(", "select", "sourceairport", "from", "flights", "union", "select", "destairport", "from", "flights", ")"], "question": "Find the name of airports which do not have any flight in and out.", "question_toks": ["Find", "the", "name", "of", "airports", "which", "do", "not", "have", "any", "flight", "in", "and", "out", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "257", "answer_text": [["Phillips AAF "], ["Municipal "], ["Dyess AFB "], ["Municipal "], ["Virginia Highlands "], ["Ada "], ["Adak Island Ns "], ["Lenawee County "], ["Municipal "], ["Municipal "], ["Ainsworth "], ["Akhiok SPB "], ["Spb "], ["Akiak "], ["Colorado Plains Regional Airport "], ["Akron/canton Regional "], ["Fulton International "], ["Akutan "], ["Alakanuk "], ["NAS "], ["Holloman AFB "], ["Municipal "], ["Municipal "], ["Albany NAS "], ["Dougherty County "], ["Albany International "], ["Albany "], ["Albert Lea "], ["Albuquerque International "], ["Aleknagik "], ["Aleneva "], ["Thomas C Russell Fld "], ["Alexandria International "], ["Esler Field "], ["Alexandria "], ["Alexandria Bay "], ["Algona "], ["International "], ["George Downer "], ["Alitak SPB "], ["Allakaket "], ["Alliance "], ["Gratiot Community "], ["Alpena County Regional "], ["Alpine "], ["Alton "], ["Altus AFB "], ["Municipal "], ["Alyeska "], ["Rick Husband Amarillo International "], ["Tradewind "], ["Ambler "], ["Amchitka "], ["Municipal "], ["Ames "], ["Zahns "], ["Amook "], ["Anacortes "], ["USN Heliport "], ["Orange County Steel Salvage Heliport "], ["Anaktuvuk "], ["Elmendorf Afb "], ["Ted Stevens Anchorage International Airport "], ["Merrill Field "], ["Municipal "], ["Anderson "], ["Andrews "], ["Angel Fire "], ["Tri-State Steuben Cty "], ["Angoon "], ["Rollang Field "], ["Aniak "], ["Anita Bay "], ["Municipal "], ["Lee "], ["Annette Island "], ["Anniston Metropolitan "], ["Ft Mcclellan Bus Trml "], ["Reilly AHP "], ["Anthony "], ["Antlers "], ["Anvik "], ["Municipal "], ["Apple Valley "], ["Outagamie County "], ["Municipal "], ["Arcata "], ["Arctic Village "], ["Downtown "], ["Ardmore Municipal Arpt "], ["US Army Heliport "], ["Artesia "], ["Asbury Park "], ["Ashland "], ["Ashley "], ["Aspen "], ["Astoria "], ["Athens "], ["Ohio University "], ["McMinn County "]], "trigger_words": ["Airport Name"], "Prediction": "AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights UNION SELECT DestAirport FROM flights);"}
{"db_id": "flight_2", "query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)", "query_toks": ["SELECT", "AirportName", "FROM", "Airports", "WHERE", "AirportCode", "NOT", "IN", "(", "SELECT", "SourceAirport", "FROM", "Flights", "UNION", "SELECT", "DestAirport", "FROM", "Flights", ")"], "query_toks_no_value": ["select", "airportname", "from", "airports", "where", "airportcode", "not", "in", "(", "select", "sourceairport", "from", "flights", "union", "select", "destairport", "from", "flights", ")"], "question": "Which airports do not have departing or arriving flights?", "question_toks": ["Which", "airports", "do", "not", "have", "departing", "or", "arriving", "flights", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "258", "answer_text": [["Phillips AAF "], ["Municipal "], ["Dyess AFB "], ["Municipal "], ["Virginia Highlands "], ["Ada "], ["Adak Island Ns "], ["Lenawee County "], ["Municipal "], ["Municipal "], ["Ainsworth "], ["Akhiok SPB "], ["Spb "], ["Akiak "], ["Colorado Plains Regional Airport "], ["Akron/canton Regional "], ["Fulton International "], ["Akutan "], ["Alakanuk "], ["NAS "], ["Holloman AFB "], ["Municipal "], ["Municipal "], ["Albany NAS "], ["Dougherty County "], ["Albany International "], ["Albany "], ["Albert Lea "], ["Albuquerque International "], ["Aleknagik "], ["Aleneva "], ["Thomas C Russell Fld "], ["Alexandria International "], ["Esler Field "], ["Alexandria "], ["Alexandria Bay "], ["Algona "], ["International "], ["George Downer "], ["Alitak SPB "], ["Allakaket "], ["Alliance "], ["Gratiot Community "], ["Alpena County Regional "], ["Alpine "], ["Alton "], ["Altus AFB "], ["Municipal "], ["Alyeska "], ["Rick Husband Amarillo International "], ["Tradewind "], ["Ambler "], ["Amchitka "], ["Municipal "], ["Ames "], ["Zahns "], ["Amook "], ["Anacortes "], ["USN Heliport "], ["Orange County Steel Salvage Heliport "], ["Anaktuvuk "], ["Elmendorf Afb "], ["Ted Stevens Anchorage International Airport "], ["Merrill Field "], ["Municipal "], ["Anderson "], ["Andrews "], ["Angel Fire "], ["Tri-State Steuben Cty "], ["Angoon "], ["Rollang Field "], ["Aniak "], ["Anita Bay "], ["Municipal "], ["Lee "], ["Annette Island "], ["Anniston Metropolitan "], ["Ft Mcclellan Bus Trml "], ["Reilly AHP "], ["Anthony "], ["Antlers "], ["Anvik "], ["Municipal "], ["Apple Valley "], ["Outagamie County "], ["Municipal "], ["Arcata "], ["Arctic Village "], ["Downtown "], ["Ardmore Municipal Arpt "], ["US Army Heliport "], ["Artesia "], ["Asbury Park "], ["Ashland "], ["Ashley "], ["Aspen "], ["Astoria "], ["Athens "], ["Ohio University "], ["McMinn County "]], "trigger_words": ["Airport Name"], "Prediction": "airports.AirportName \n FROM airports \n LEFT JOIN flights ON airports.AirportCode = flights.SourceAirport OR airports.AirportCode = flights.DestAirport \n WHERE flights.FlightNo IS NULL;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT count(*) FROM employee", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "employee"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "employee"], "question": "How many employees are there?", "question_toks": ["How", "many", "employees", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "259", "answer_text": [[10]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM employee;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT count(*) FROM employee", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "employee"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "employee"], "question": "Count the number of employees", "question_toks": ["Count", "the", "number", "of", "employees"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "260", "answer_text": [[10]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM employee;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT name FROM employee ORDER BY age", "query_toks": ["SELECT", "name", "FROM", "employee", "ORDER", "BY", "age"], "query_toks_no_value": ["select", "name", "from", "employee", "order", "by", "age"], "question": "Sort employee names by their age in ascending order.", "question_toks": ["Sort", "employee", "names", "by", "their", "age", "in", "ascending", "order", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "261", "answer_text": [["George Chuter"], ["Andrew Sheridan"], ["Lee Mears"], ["Tim Payne"], ["Matt Stevens"], ["Jason Hobson"], ["Steve Borthwick"], ["Louis Deacon"], ["Phil Vickery"], ["Mark Regan"]], "trigger_words": ["Name"], "Prediction": "Name FROM employee ORDER BY Age ASC;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT name FROM employee ORDER BY age", "query_toks": ["SELECT", "name", "FROM", "employee", "ORDER", "BY", "age"], "query_toks_no_value": ["select", "name", "from", "employee", "order", "by", "age"], "question": "List the names of employees and sort in ascending order of age.", "question_toks": ["List", "the", "names", "of", "employees", "and", "sort", "in", "ascending", "order", "of", "age", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "262", "answer_text": [["George Chuter"], ["Andrew Sheridan"], ["Lee Mears"], ["Tim Payne"], ["Matt Stevens"], ["Jason Hobson"], ["Steve Borthwick"], ["Louis Deacon"], ["Phil Vickery"], ["Mark Regan"]], "trigger_words": ["Name"], "Prediction": "Name FROM employee ORDER BY Age ASC;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT count(*) ,  city FROM employee GROUP BY city", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "city", "FROM", "employee", "GROUP", "BY", "city"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "city", "from", "employee", "group", "by", "city"], "question": "What is the number of employees from each city?", "question_toks": ["What", "is", "the", "number", "of", "employees", "from", "each", "city", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "263", "answer_text": [[3, "Bath"], [3, "Bristol"], [1, "Leicester"], [1, "Sale"], [2, "Wasps"]], "trigger_words": ["Number", "City"], "Prediction": "City, COUNT(*) FROM employee GROUP BY City;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT count(*) ,  city FROM employee GROUP BY city", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "city", "FROM", "employee", "GROUP", "BY", "city"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "city", "from", "employee", "group", "by", "city"], "question": "Count the number of employees for each city.", "question_toks": ["Count", "the", "number", "of", "employees", "for", "each", "city", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "264", "answer_text": [[3, "Bath"], [3, "Bristol"], [1, "Leicester"], [1, "Sale"], [2, "Wasps"]], "trigger_words": ["Number", "City"], "Prediction": "City, COUNT(*) FROM employee GROUP BY City;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1", "query_toks": ["SELECT", "city", "FROM", "employee", "WHERE", "age", "<", "30", "GROUP", "BY", "city", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "city", "from", "employee", "where", "age", "<", "value", "group", "by", "city", "having", "count", "(", "*", ")", ">", "value"], "question": "Which cities do more than one employee under age 30 come from?", "question_toks": ["Which", "cities", "do", "more", "than", "one", "employee", "under", "age", "30", "come", "from", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 4, [0, [0, 3, false], null], 30.0, null]], "groupBy": [[0, 4, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "265", "answer_text": [["Bath"]], "trigger_words": ["City"], "Prediction": "City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1", "query_toks": ["SELECT", "city", "FROM", "employee", "WHERE", "age", "<", "30", "GROUP", "BY", "city", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "city", "from", "employee", "where", "age", "<", "value", "group", "by", "city", "having", "count", "(", "*", ")", ">", "value"], "question": "Find the cities that have more than one employee under age 30.", "question_toks": ["Find", "the", "cities", "that", "have", "more", "than", "one", "employee", "under", "age", "30", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 4, [0, [0, 3, false], null], 30.0, null]], "groupBy": [[0, 4, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "266", "answer_text": [["Bath"]], "trigger_words": ["City"], "Prediction": "City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "LOCATION", "FROM", "shop", "GROUP", "BY", "LOCATION"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "location", "from", "shop", "group", "by", "location"], "question": "Find the number of shops in each location.", "question_toks": ["Find", "the", "number", "of", "shops", "in", "each", "location", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "267", "answer_text": [[1, "Espoo"], [1, "Helsinki"], [1, "Jakobstad"], [1, "Kotka"], [1, "Kuopio"], [1, "Lahti"], [1, "Mariehamn"], [1, "Turku"], [1, "Valkeakoski"]], "trigger_words": ["Number", "Location"], "Prediction": "Location, COUNT(*) AS num_shops FROM shop GROUP BY Location;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "LOCATION", "FROM", "shop", "GROUP", "BY", "LOCATION"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "location", "from", "shop", "group", "by", "location"], "question": "How many shops are there in each location?", "question_toks": ["How", "many", "shops", "are", "there", "in", "each", "location", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "268", "answer_text": [[1, "Espoo"], [1, "Helsinki"], [1, "Jakobstad"], [1, "Kotka"], [1, "Kuopio"], [1, "Lahti"], [1, "Mariehamn"], [1, "Turku"], [1, "Valkeakoski"]], "trigger_words": ["Number", "Location"], "Prediction": "Location, COUNT(*) FROM shop GROUP BY Location;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1", "query_toks": ["SELECT", "manager_name", ",", "district", "FROM", "shop", "ORDER", "BY", "number_products", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "manager_name", ",", "district", "from", "shop", "order", "by", "number_products", "desc", "limit", "value"], "question": "Find the manager name and district of the shop whose number of products is the largest.", "question_toks": ["Find", "the", "manager", "name", "and", "district", "of", "the", "shop", "whose", "number", "of", "products", "is", "the", "largest", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 9, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "269", "answer_text": [["Ilkka M\u00e4kel\u00e4", "Lahden Stadion"]], "trigger_words": ["Manager Name", "District"], "Prediction": "Manager_name, District \n FROM shop \n WHERE Number_products = (SELECT MAX(Number_products) FROM shop);"}
{"db_id": "employee_hire_evaluation", "query": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1", "query_toks": ["SELECT", "manager_name", ",", "district", "FROM", "shop", "ORDER", "BY", "number_products", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "manager_name", ",", "district", "from", "shop", "order", "by", "number_products", "desc", "limit", "value"], "question": "What are the manager name and district of the shop that sells the largest number of products?", "question_toks": ["What", "are", "the", "manager", "name", "and", "district", "of", "the", "shop", "that", "sells", "the", "largest", "number", "of", "products", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 9, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "270", "answer_text": [["Ilkka M\u00e4kel\u00e4", "Lahden Stadion"]], "trigger_words": ["Manager Name", "District"], "Prediction": "shop.Manager_name, shop.District \n FROM shop \n WHERE shop.Number_products = (SELECT MAX(Number_products) FROM shop);"}
{"db_id": "employee_hire_evaluation", "query": "SELECT min(Number_products) ,  max(Number_products) FROM shop", "query_toks": ["SELECT", "min", "(", "Number_products", ")", ",", "max", "(", "Number_products", ")", "FROM", "shop"], "query_toks_no_value": ["select", "min", "(", "number_products", ")", ",", "max", "(", "number_products", ")", "from", "shop"], "question": "find the minimum and maximum number of products of all stores.", "question_toks": ["find", "the", "minimum", "and", "maximum", "number", "of", "products", "of", "all", "stores", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 9, false], null]], [1, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "271", "answer_text": [[1600, 15000]], "trigger_words": ["Minimal Number", "Maximal Number"], "Prediction": "MIN(Number_products), MAX(Number_products) FROM shop;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT min(Number_products) ,  max(Number_products) FROM shop", "query_toks": ["SELECT", "min", "(", "Number_products", ")", ",", "max", "(", "Number_products", ")", "FROM", "shop"], "query_toks_no_value": ["select", "min", "(", "number_products", ")", ",", "max", "(", "number_products", ")", "from", "shop"], "question": "What are the minimum and maximum number of products across all the shops?", "question_toks": ["What", "are", "the", "minimum", "and", "maximum", "number", "of", "products", "across", "all", "the", "shops", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 9, false], null]], [1, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "272", "answer_text": [[1600, 15000]], "trigger_words": ["Minimal Number", "Maximal Number"], "Prediction": "MIN(Number_products), MAX(Number_products) FROM shop;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC", "query_toks": ["SELECT", "name", ",", "LOCATION", ",", "district", "FROM", "shop", "ORDER", "BY", "number_products", "DESC"], "query_toks_no_value": ["select", "name", ",", "location", ",", "district", "from", "shop", "order", "by", "number_products", "desc"], "question": "Return the name, location and district of all shops in descending order of number of products.", "question_toks": ["Return", "the", "name", ",", "location", "and", "district", "of", "all", "shops", "in", "descending", "order", "of", "number", "of", "products", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "273", "answer_text": [["FC Lahti", "Lahti", "Lahden Stadion"], ["HJK", "Helsinki", "Finnair Stadium"], ["FC Inter", "Turku", "Veritas Stadion"], ["FC Honka", "Espoo", "Tapiolan Urheilupuisto"], ["FF Jaro", "Jakobstad", "Jakobstads Centralplan"], ["FC KooTeePee", "Kotka", "Arto Tolsa Areena"], ["FC Haka", "Valkeakoski", "Tehtaan kentt\u00e4"], ["KuPS", "Kuopio", "Magnum Areena"], ["IFK Mariehamn", "Mariehamn", "Wikl\u00f6f Holding Arena"]], "trigger_words": ["Name", "Location", "District"], "Prediction": "Name, Location, District FROM shop ORDER BY Number_products DESC;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC", "query_toks": ["SELECT", "name", ",", "LOCATION", ",", "district", "FROM", "shop", "ORDER", "BY", "number_products", "DESC"], "query_toks_no_value": ["select", "name", ",", "location", ",", "district", "from", "shop", "order", "by", "number_products", "desc"], "question": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.", "question_toks": ["Sort", "all", "the", "shops", "by", "number", "products", "in", "descending", "order", ",", "and", "return", "the", "name", ",", "location", "and", "district", "of", "each", "shop", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "274", "answer_text": [["FC Lahti", "Lahti", "Lahden Stadion"], ["HJK", "Helsinki", "Finnair Stadium"], ["FC Inter", "Turku", "Veritas Stadion"], ["FC Honka", "Espoo", "Tapiolan Urheilupuisto"], ["FF Jaro", "Jakobstad", "Jakobstads Centralplan"], ["FC KooTeePee", "Kotka", "Arto Tolsa Areena"], ["FC Haka", "Valkeakoski", "Tehtaan kentt\u00e4"], ["KuPS", "Kuopio", "Magnum Areena"], ["IFK Mariehamn", "Mariehamn", "Wikl\u00f6f Holding Arena"]], "trigger_words": ["Name", "Location", "District"], "Prediction": "Name, Location, District FROM shop ORDER BY Number_products DESC;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)", "query_toks": ["SELECT", "name", "FROM", "shop", "WHERE", "number_products", ">", "(", "SELECT", "avg", "(", "number_products", ")", "FROM", "shop", ")"], "query_toks_no_value": ["select", "name", "from", "shop", "where", "number_products", ">", "(", "select", "avg", "(", "number_products", ")", "from", "shop", ")"], "question": "Find the names of stores whose number products is more than the average number of products.", "question_toks": ["Find", "the", "names", "of", "stores", "whose", "number", "products", "is", "more", "than", "the", "average", "number", "of", "products", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "275", "answer_text": [["HJK"], ["FC Inter"], ["FC Lahti"]], "trigger_words": ["Name"], "Prediction": "Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);"}
{"db_id": "employee_hire_evaluation", "query": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)", "query_toks": ["SELECT", "name", "FROM", "shop", "WHERE", "number_products", ">", "(", "SELECT", "avg", "(", "number_products", ")", "FROM", "shop", ")"], "query_toks_no_value": ["select", "name", "from", "shop", "where", "number_products", ">", "(", "select", "avg", "(", "number_products", ")", "from", "shop", ")"], "question": "Which shops' number products is above the average? Give me the shop names.", "question_toks": ["Which", "shops", "'", "number", "products", "is", "above", "the", "average", "?", "Give", "me", "the", "shop", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "276", "answer_text": [["HJK"], ["FC Inter"], ["FC Lahti"]], "trigger_words": ["Name"], "Prediction": "Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);"}
{"db_id": "employee_hire_evaluation", "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t1.name", "FROM", "employee", "AS", "t1", "JOIN", "evaluation", "AS", "t2", "ON", "t1.Employee_ID", "=", "t2.Employee_ID", "GROUP", "BY", "t2.Employee_ID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "employee", "as", "t1", "join", "evaluation", "as", "t2", "on", "t1", ".", "employee_id", "=", "t2", ".", "employee_id", "group", "by", "t2", ".", "employee_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "find the name of employee who was awarded the most times in the evaluation.", "question_toks": ["find", "the", "name", "of", "employee", "who", "was", "awarded", "the", "most", "times", "in", "the", "evaluation", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "277", "answer_text": [["George Chuter"]], "trigger_words": ["Name"], "Prediction": "employee.Name\nFROM employee\nJOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID\nGROUP BY employee.Employee_ID\nORDER BY COUNT(evaluation.Year_awarded) DESC\nLIMIT 1;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t1.name", "FROM", "employee", "AS", "t1", "JOIN", "evaluation", "AS", "t2", "ON", "t1.Employee_ID", "=", "t2.Employee_ID", "GROUP", "BY", "t2.Employee_ID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "employee", "as", "t1", "join", "evaluation", "as", "t2", "on", "t1", ".", "employee_id", "=", "t2", ".", "employee_id", "group", "by", "t2", ".", "employee_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which employee received the most awards in evaluations? Give me the employee name.", "question_toks": ["Which", "employee", "received", "the", "most", "awards", "in", "evaluations", "?", "Give", "me", "the", "employee", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "278", "answer_text": [["George Chuter"]], "trigger_words": ["Name"], "Prediction": "employee.Name \nFROM employee \nJOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID \nGROUP BY employee.Employee_ID \nORDER BY COUNT(evaluation.Year_awarded) DESC \nLIMIT 1;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1", "query_toks": ["SELECT", "t1.name", "FROM", "employee", "AS", "t1", "JOIN", "evaluation", "AS", "t2", "ON", "t1.Employee_ID", "=", "t2.Employee_ID", "ORDER", "BY", "t2.bonus", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "employee", "as", "t1", "join", "evaluation", "as", "t2", "on", "t1", ".", "employee_id", "=", "t2", ".", "employee_id", "order", "by", "t2", ".", "bonus", "desc", "limit", "value"], "question": "Find the name of the employee who got the highest one time bonus.", "question_toks": ["Find", "the", "name", "of", "the", "employee", "who", "got", "the", "highest", "one", "time", "bonus", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 17, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "279", "answer_text": [["Louis Deacon"]], "trigger_words": ["Name"], "Prediction": "employee.Name\nFROM employee\nJOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID\nWHERE evaluation.Bonus = (SELECT MAX(Bonus) FROM evaluation)"}
{"db_id": "employee_hire_evaluation", "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1", "query_toks": ["SELECT", "t1.name", "FROM", "employee", "AS", "t1", "JOIN", "evaluation", "AS", "t2", "ON", "t1.Employee_ID", "=", "t2.Employee_ID", "ORDER", "BY", "t2.bonus", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "employee", "as", "t1", "join", "evaluation", "as", "t2", "on", "t1", ".", "employee_id", "=", "t2", ".", "employee_id", "order", "by", "t2", ".", "bonus", "desc", "limit", "value"], "question": "Which employee received the biggest bonus? Give me the employee name.", "question_toks": ["Which", "employee", "received", "the", "biggest", "bonus", "?", "Give", "me", "the", "employee", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 17, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "280", "answer_text": [["Louis Deacon"]], "trigger_words": ["Name"], "Prediction": "employee.Name \n FROM employee \n JOIN evaluation ON employee.Employee_ID=evaluation.Employee_ID \n ORDER BY evaluation.Bonus DESC \n LIMIT 1;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)", "query_toks": ["SELECT", "name", "FROM", "employee", "WHERE", "Employee_ID", "NOT", "IN", "(", "SELECT", "Employee_ID", "FROM", "evaluation", ")"], "query_toks_no_value": ["select", "name", "from", "employee", "where", "employee_id", "not", "in", "(", "select", "employee_id", "from", "evaluation", ")"], "question": "Find the names of employees who never won any award in the evaluation.", "question_toks": ["Find", "the", "names", "of", "employees", "who", "never", "won", "any", "award", "in", "the", "evaluation", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "281", "answer_text": [["Mark Regan"], ["Tim Payne"], ["Andrew Sheridan"], ["Phil Vickery"], ["Steve Borthwick"]], "trigger_words": ["Name"], "Prediction": "employee.Name \nFROM employee \nLEFT JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID \nWHERE evaluation.Employee_ID IS NULL;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)", "query_toks": ["SELECT", "name", "FROM", "employee", "WHERE", "Employee_ID", "NOT", "IN", "(", "SELECT", "Employee_ID", "FROM", "evaluation", ")"], "query_toks_no_value": ["select", "name", "from", "employee", "where", "employee_id", "not", "in", "(", "select", "employee_id", "from", "evaluation", ")"], "question": "What are the names of the employees who never received any evaluation?", "question_toks": ["What", "are", "the", "names", "of", "the", "employees", "who", "never", "received", "any", "evaluation", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "282", "answer_text": [["Mark Regan"], ["Tim Payne"], ["Andrew Sheridan"], ["Phil Vickery"], ["Steve Borthwick"]], "trigger_words": ["Name"], "Prediction": "employee.Name \nFROM employee \nLEFT JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID \nWHERE evaluation.Employee_ID IS NULL;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t2.name", "FROM", "hiring", "AS", "t1", "JOIN", "shop", "AS", "t2", "ON", "t1.shop_id", "=", "t2.shop_id", "GROUP", "BY", "t1.shop_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "hiring", "as", "t1", "join", "shop", "as", "t2", "on", "t1", ".", "shop_id", "=", "t2", ".", "shop_id", "group", "by", "t1", ".", "shop_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the shop that is hiring the largest number of employees?", "question_toks": ["What", "is", "the", "name", "of", "the", "shop", "that", "is", "hiring", "the", "largest", "number", "of", "employees", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "283", "answer_text": [["FC Haka"]], "trigger_words": ["Name"], "Prediction": "shop.Name \nFROM shop \nJOIN hiring ON shop.Shop_ID=hiring.Shop_ID \nGROUP BY shop.Name \nORDER BY COUNT(hiring.Employee_ID) DESC \nLIMIT 1;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t2.name", "FROM", "hiring", "AS", "t1", "JOIN", "shop", "AS", "t2", "ON", "t1.shop_id", "=", "t2.shop_id", "GROUP", "BY", "t1.shop_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "hiring", "as", "t1", "join", "shop", "as", "t2", "on", "t1", ".", "shop_id", "=", "t2", ".", "shop_id", "group", "by", "t1", ".", "shop_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which shop has the most employees? Give me the shop name.", "question_toks": ["Which", "shop", "has", "the", "most", "employees", "?", "Give", "me", "the", "shop", "name", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "284", "answer_text": [["FC Haka"]], "trigger_words": ["Name"], "Prediction": "shop.Name \nFROM shop \nJOIN hiring ON shop.Shop_ID=hiring.Shop_ID \nGROUP BY shop.Shop_ID \nORDER BY COUNT(hiring.Employee_ID) DESC \nLIMIT 1;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)", "query_toks": ["SELECT", "name", "FROM", "shop", "WHERE", "shop_id", "NOT", "IN", "(", "SELECT", "shop_id", "FROM", "hiring", ")"], "query_toks_no_value": ["select", "name", "from", "shop", "where", "shop_id", "not", "in", "(", "select", "shop_id", "from", "hiring", ")"], "question": "Find the name of the shops that do not hire any employee.", "question_toks": ["Find", "the", "name", "of", "the", "shops", "that", "do", "not", "hire", "any", "employee", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[true, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "285", "answer_text": [["FC Honka"], ["KuPS"], ["IFK Mariehamn"]], "trigger_words": ["Name"], "Prediction": "shop.Name FROM shop LEFT JOIN hiring ON shop.Shop_ID=hiring.Shop_ID WHERE hiring.Employee_ID IS NULL;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)", "query_toks": ["SELECT", "name", "FROM", "shop", "WHERE", "shop_id", "NOT", "IN", "(", "SELECT", "shop_id", "FROM", "hiring", ")"], "query_toks_no_value": ["select", "name", "from", "shop", "where", "shop_id", "not", "in", "(", "select", "shop_id", "from", "hiring", ")"], "question": "Which shops run with no employees? Find the shop names", "question_toks": ["Which", "shops", "run", "with", "no", "employees", "?", "Find", "the", "shop", "names"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[true, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "286", "answer_text": [["FC Honka"], ["KuPS"], ["IFK Mariehamn"]], "trigger_words": ["Name"], "Prediction": "shop.Name FROM shop LEFT JOIN hiring ON shop.Shop_ID=hiring.Shop_ID WHERE hiring.Employee_ID IS NULL;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "t2.name", "FROM", "hiring", "AS", "t1", "JOIN", "shop", "AS", "t2", "ON", "t1.shop_id", "=", "t2.shop_id", "GROUP", "BY", "t2.name"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t2", ".", "name", "from", "hiring", "as", "t1", "join", "shop", "as", "t2", "on", "t1", ".", "shop_id", "=", "t2", ".", "shop_id", "group", "by", "t2", ".", "name"], "question": "Find the number of employees hired in each shop; show the shop name as well.", "question_toks": ["Find", "the", "number", "of", "employees", "hired", "in", "each", "shop", ";", "show", "the", "shop", "name", "as", "well", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 5, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "287", "answer_text": [[2, "FC Haka"], [1, "FC Inter"], [1, "FC KooTeePee"], [1, "FC Lahti"], [1, "FF Jaro"], [1, "HJK"]], "trigger_words": ["Number", "Name"], "Prediction": "shop.Name, COUNT(hiring.Employee_ID) \n FROM hiring \n JOIN shop ON hiring.Shop_ID=shop.Shop_ID \n GROUP BY shop.Name;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "t2.name", "FROM", "hiring", "AS", "t1", "JOIN", "shop", "AS", "t2", "ON", "t1.shop_id", "=", "t2.shop_id", "GROUP", "BY", "t2.name"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t2", ".", "name", "from", "hiring", "as", "t1", "join", "shop", "as", "t2", "on", "t1", ".", "shop_id", "=", "t2", ".", "shop_id", "group", "by", "t2", ".", "name"], "question": "For each shop, return the number of employees working there and the name of the shop.", "question_toks": ["For", "each", "shop", ",", "return", "the", "number", "of", "employees", "working", "there", "and", "the", "name", "of", "the", "shop", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 5, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "288", "answer_text": [[2, "FC Haka"], [1, "FC Inter"], [1, "FC KooTeePee"], [1, "FC Lahti"], [1, "FF Jaro"], [1, "HJK"]], "trigger_words": ["Number", "Name"], "Prediction": "shop.Name, COUNT(hiring.Employee_ID) AS num_employees\n FROM shop\n JOIN hiring ON shop.Shop_ID=hiring.Shop_ID\n GROUP BY shop.Name;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT sum(bonus) FROM evaluation", "query_toks": ["SELECT", "sum", "(", "bonus", ")", "FROM", "evaluation"], "query_toks_no_value": ["select", "sum", "(", "bonus", ")", "from", "evaluation"], "question": "What is total bonus given in all evaluations?", "question_toks": ["What", "is", "total", "bonus", "given", "in", "all", "evaluations", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[4, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "289", "answer_text": [[19500.0]], "trigger_words": ["Total Number"], "Prediction": "SUM(Bonus) FROM evaluation;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT sum(bonus) FROM evaluation", "query_toks": ["SELECT", "sum", "(", "bonus", ")", "FROM", "evaluation"], "query_toks_no_value": ["select", "sum", "(", "bonus", ")", "from", "evaluation"], "question": "Find the total amount of bonus given in all the evaluations.", "question_toks": ["Find", "the", "total", "amount", "of", "bonus", "given", "in", "all", "the", "evaluations", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[4, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "290", "answer_text": [[19500.0]], "trigger_words": ["Total Number"], "Prediction": "SUM(Bonus) FROM evaluation;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT * FROM hiring", "query_toks": ["SELECT", "*", "FROM", "hiring"], "query_toks_no_value": ["select", "*", "from", "hiring"], "question": "Give me all the information about hiring.", "question_toks": ["Give", "me", "all", "the", "information", "about", "hiring", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "291", "answer_text": [[1, 1, "2009", "T"], [1, 2, "2003", "T"], [8, 3, "2011", "F"], [4, 4, "2012", "T"], [5, 5, "2013", "T"], [2, 6, "2010", "F"], [6, 7, "2008", "T"]], "trigger_words": ["Answer"], "Prediction": "* FROM hiring;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT * FROM hiring", "query_toks": ["SELECT", "*", "FROM", "hiring"], "query_toks_no_value": ["select", "*", "from", "hiring"], "question": "What is all the information about hiring?", "question_toks": ["What", "is", "all", "the", "information", "about", "hiring", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "292", "answer_text": [[1, 1, "2009", "T"], [1, 2, "2003", "T"], [8, 3, "2011", "F"], [4, 4, "2012", "T"], [5, 5, "2013", "T"], [2, 6, "2010", "F"], [6, 7, "2008", "T"]], "trigger_words": ["Answer"], "Prediction": "* FROM hiring;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000", "query_toks": ["SELECT", "district", "FROM", "shop", "WHERE", "Number_products", "<", "3000", "INTERSECT", "SELECT", "district", "FROM", "shop", "WHERE", "Number_products", ">", "10000"], "query_toks_no_value": ["select", "district", "from", "shop", "where", "number_products", "<", "value", "intersect", "select", "district", "from", "shop", "where", "number_products", ">", "value"], "question": "Which district has both stores with less than 3000 products and stores with more than 10000 products?", "question_toks": ["Which", "district", "has", "both", "stores", "with", "less", "than", "3000", "products", "and", "stores", "with", "more", "than", "10000", "products", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 4, [0, [0, 9, false], null], 3000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 10000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "293", "answer_text": [], "trigger_words": ["District"], "Prediction": "District \nFROM shop \nWHERE Number_products < 3000 AND District IN \n(SELECT District FROM shop WHERE Number_products > 10000);"}
{"db_id": "employee_hire_evaluation", "query": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000", "query_toks": ["SELECT", "district", "FROM", "shop", "WHERE", "Number_products", "<", "3000", "INTERSECT", "SELECT", "district", "FROM", "shop", "WHERE", "Number_products", ">", "10000"], "query_toks_no_value": ["select", "district", "from", "shop", "where", "number_products", "<", "value", "intersect", "select", "district", "from", "shop", "where", "number_products", ">", "value"], "question": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.", "question_toks": ["Find", "the", "districts", "in", "which", "there", "are", "both", "shops", "selling", "less", "than", "3000", "products", "and", "shops", "selling", "more", "than", "10000", "products", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 4, [0, [0, 9, false], null], 3000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 10000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "294", "answer_text": [], "trigger_words": ["District"], "Prediction": "District \nFROM shop \nWHERE Number_products < 3000 AND District IN \n    (SELECT District FROM shop WHERE Number_products > 10000);"}
{"db_id": "employee_hire_evaluation", "query": "SELECT count(DISTINCT LOCATION) FROM shop", "query_toks": ["SELECT", "count", "(", "DISTINCT", "LOCATION", ")", "FROM", "shop"], "query_toks_no_value": ["select", "count", "(", "distinct", "location", ")", "from", "shop"], "question": "How many different store locations are there?", "question_toks": ["How", "many", "different", "store", "locations", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 7, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "295", "answer_text": [[9]], "trigger_words": ["Number Of Location"], "Prediction": "COUNT(DISTINCT Location) FROM shop;"}
{"db_id": "employee_hire_evaluation", "query": "SELECT count(DISTINCT LOCATION) FROM shop", "query_toks": ["SELECT", "count", "(", "DISTINCT", "LOCATION", ")", "FROM", "shop"], "query_toks_no_value": ["select", "count", "(", "distinct", "location", ")", "from", "shop"], "question": "Count the number of distinct store locations.", "question_toks": ["Count", "the", "number", "of", "distinct", "store", "locations", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 7, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "296", "answer_text": [[9]], "trigger_words": ["Number Of Location"], "Prediction": "COUNT(DISTINCT Location) FROM shop;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Documents", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Documents"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "documents"], "question": "How many documents do we have?", "question_toks": ["How", "many", "documents", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "297", "answer_text": [[15]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Documents;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Documents", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Documents"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "documents"], "question": "Count the number of documents.", "question_toks": ["Count", "the", "number", "of", "documents", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "298", "answer_text": [[15]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Documents;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id ,  document_name ,  document_description FROM Documents", "query_toks": ["SELECT", "document_id", ",", "document_name", ",", "document_description", "FROM", "Documents"], "query_toks_no_value": ["select", "document_id", ",", "document_name", ",", "document_description", "from", "documents"], "question": "List document IDs, document names, and document descriptions for all documents.", "question_toks": ["List", "document", "IDs", ",", "document", "names", ",", "and", "document", "descriptions", "for", "all", "documents", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "299", "answer_text": [[0, "Introduction of OS", "n"], [1, "Understanding DB", "y"], [3, "Summer Show", "u"], [76, "Robbin CV", "y"], [80, "Welcome to NY", "h"], [82, "Data base", "w"], [2394, "Customer reviews", "y"], [3830, "Do not panic", "k"], [33930, "How Google people work", "z"], [50123, "Learning French", "r"], [651512, "How to write a CV", "f"], [801801, "How to read a book", "w"], [3540024, "Palm reading", "y"], [16514113, "A history of Arts", "h"], [385906526, "About Korea", "b"]], "trigger_words": ["Document Id", "Document Name", "Document Description"], "Prediction": "Document_ID, Document_Name, Document_Description FROM Documents;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id ,  document_name ,  document_description FROM Documents", "query_toks": ["SELECT", "document_id", ",", "document_name", ",", "document_description", "FROM", "Documents"], "query_toks_no_value": ["select", "document_id", ",", "document_name", ",", "document_description", "from", "documents"], "question": "What are the ids, names, and descriptions for all documents?", "question_toks": ["What", "are", "the", "ids", ",", "names", ",", "and", "descriptions", "for", "all", "documents", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "300", "answer_text": [[0, "Introduction of OS", "n"], [1, "Understanding DB", "y"], [3, "Summer Show", "u"], [76, "Robbin CV", "y"], [80, "Welcome to NY", "h"], [82, "Data base", "w"], [2394, "Customer reviews", "y"], [3830, "Do not panic", "k"], [33930, "How Google people work", "z"], [50123, "Learning French", "r"], [651512, "How to write a CV", "f"], [801801, "How to read a book", "w"], [3540024, "Palm reading", "y"], [16514113, "A history of Arts", "h"], [385906526, "About Korea", "b"]], "trigger_words": ["Document Id", "Document Name", "Document Description"], "Prediction": "Document_ID, Document_Name, Document_Description FROM Documents;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"", "query_toks": ["SELECT", "document_name", ",", "template_id", "FROM", "Documents", "WHERE", "Document_Description", "LIKE", "``", "%", "w", "%", "''"], "query_toks_no_value": ["select", "document_name", ",", "template_id", "from", "documents", "where", "document_description", "like", "value"], "question": "What is the document name and template id for document with description with the letter 'w' in it?", "question_toks": ["What", "is", "the", "document", "name", "and", "template", "id", "for", "document", "with", "description", "with", "the", "letter", "'w", "'", "in", "it", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 9, [0, [0, 12, false], null], "\"%w%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "301", "answer_text": [["Data base", 11], ["How to read a book", 4]], "trigger_words": ["Document Name", "Template Id"], "Prediction": "Documents.Document_Name, Documents.Template_ID \nFROM Documents \nJOIN Templates ON Documents.Template_ID=Templates.Template_ID \nWHERE Documents.Document_Description LIKE '%w%';"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"", "query_toks": ["SELECT", "document_name", ",", "template_id", "FROM", "Documents", "WHERE", "Document_Description", "LIKE", "``", "%", "w", "%", "''"], "query_toks_no_value": ["select", "document_name", ",", "template_id", "from", "documents", "where", "document_description", "like", "value"], "question": "Return the names and template ids for documents that contain the letter w in their description.", "question_toks": ["Return", "the", "names", "and", "template", "ids", "for", "documents", "that", "contain", "the", "letter", "w", "in", "their", "description", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 9, [0, [0, 12, false], null], "\"%w%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "302", "answer_text": [["Data base", 11], ["How to read a book", 4]], "trigger_words": ["Document Name", "Template Id"], "Prediction": "Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%';"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"", "query_toks": ["SELECT", "document_id", ",", "template_id", ",", "Document_Description", "FROM", "Documents", "WHERE", "document_name", "=", "``", "Robbin", "CV", "''"], "query_toks_no_value": ["select", "document_id", ",", "template_id", ",", "document_description", "from", "documents", "where", "document_name", "=", "value"], "question": "What is the document id, template id and description for document named \"Robbin CV\"?", "question_toks": ["What", "is", "the", "document", "id", ",", "template", "id", "and", "description", "for", "document", "named", "``", "Robbin", "CV", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Robbin CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "303", "answer_text": [[76, 20, "y"]], "trigger_words": ["Document Id", "Template Id", "Document Description"], "Prediction": "Document_ID, Template_ID, Document_Description \n FROM Documents \n WHERE Document_Name = \"Robbin CV\";"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"", "query_toks": ["SELECT", "document_id", ",", "template_id", ",", "Document_Description", "FROM", "Documents", "WHERE", "document_name", "=", "``", "Robbin", "CV", "''"], "query_toks_no_value": ["select", "document_id", ",", "template_id", ",", "document_description", "from", "documents", "where", "document_name", "=", "value"], "question": "Return the document id, template id, and description for the document with the name Robbin CV.", "question_toks": ["Return", "the", "document", "id", ",", "template", "id", ",", "and", "description", "for", "the", "document", "with", "the", "name", "Robbin", "CV", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Robbin CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "304", "answer_text": [[76, 20, "y"]], "trigger_words": ["Document Id", "Template Id", "Document Description"], "Prediction": "Documents.Document_ID, Documents.Template_ID, Documents.Document_Description\nFROM Documents\nWHERE Documents.Document_Name = 'Robbin CV';"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(DISTINCT template_id) FROM Documents", "query_toks": ["SELECT", "count", "(", "DISTINCT", "template_id", ")", "FROM", "Documents"], "query_toks_no_value": ["select", "count", "(", "distinct", "template_id", ")", "from", "documents"], "question": "How many different templates do all document use?", "question_toks": ["How", "many", "different", "templates", "do", "all", "document", "use", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 10, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "305", "answer_text": [[12]], "trigger_words": ["Number Of Template Id"], "Prediction": "COUNT(DISTINCT Templates.Template_ID) FROM Documents JOIN Templates ON Documents.Template_ID=Templates.Template_ID;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(DISTINCT template_id) FROM Documents", "query_toks": ["SELECT", "count", "(", "DISTINCT", "template_id", ")", "FROM", "Documents"], "query_toks_no_value": ["select", "count", "(", "distinct", "template_id", ")", "from", "documents"], "question": "Count the number of different templates used for documents.", "question_toks": ["Count", "the", "number", "of", "different", "templates", "used", "for", "documents", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 10, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "306", "answer_text": [[12]], "trigger_words": ["Number Of Template Id"], "Prediction": "COUNT(DISTINCT Templates.Template_ID) FROM Documents JOIN Templates ON Documents.Template_ID=Templates.Template_ID;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Documents", "AS", "T1", "JOIN", "Templates", "AS", "T2", "ON", "T1.Template_ID", "=", "T2.Template_ID", "WHERE", "T2.Template_Type_Code", "=", "'PPT", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "documents", "as", "t1", "join", "templates", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id", "where", "t2", ".", "template_type_code", "=", "value"], "question": "How many documents are using the template with type code 'PPT'?", "question_toks": ["How", "many", "documents", "are", "using", "the", "template", "with", "type", "code", "'PPT", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 3, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"PPT\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "307", "answer_text": [[3]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Documents WHERE Template_ID IN (SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'PPT');"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Documents", "AS", "T1", "JOIN", "Templates", "AS", "T2", "ON", "T1.Template_ID", "=", "T2.Template_ID", "WHERE", "T2.Template_Type_Code", "=", "'PPT", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "documents", "as", "t1", "join", "templates", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id", "where", "t2", ".", "template_type_code", "=", "value"], "question": "Count the number of documents that use the PPT template type.", "question_toks": ["Count", "the", "number", "of", "documents", "that", "use", "the", "PPT", "template", "type", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 3, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"PPT\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "308", "answer_text": [[3]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Documents \nINNER JOIN Templates ON Documents.Template_ID=Templates.Template_ID \nWHERE Templates.Template_Type_Code='PPT';"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id", "query_toks": ["SELECT", "template_id", ",", "count", "(", "*", ")", "FROM", "Documents", "GROUP", "BY", "template_id"], "query_toks_no_value": ["select", "template_id", ",", "count", "(", "*", ")", "from", "documents", "group", "by", "template_id"], "question": "Show all template ids and number of documents using each template.", "question_toks": ["Show", "all", "template", "ids", "and", "number", "of", "documents", "using", "each", "template", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "309", "answer_text": [[1, 1], [4, 1], [6, 1], [7, 1], [8, 1], [10, 1], [11, 2], [14, 2], [20, 1], [21, 1], [22, 1], [25, 2]], "trigger_words": ["Template Id", "Number"], "Prediction": "Templates.Template_ID, COUNT(Documents.Document_ID) \n FROM Templates \n LEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID \n GROUP BY Templates.Template_ID;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id", "query_toks": ["SELECT", "template_id", ",", "count", "(", "*", ")", "FROM", "Documents", "GROUP", "BY", "template_id"], "query_toks_no_value": ["select", "template_id", ",", "count", "(", "*", ")", "from", "documents", "group", "by", "template_id"], "question": "What are all different template ids used for documents, and how many times were each of them used?", "question_toks": ["What", "are", "all", "different", "template", "ids", "used", "for", "documents", ",", "and", "how", "many", "times", "were", "each", "of", "them", "used", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "310", "answer_text": [[1, 1], [4, 1], [6, 1], [7, 1], [8, 1], [10, 1], [11, 2], [14, 2], [20, 1], [21, 1], [22, 1], [25, 2]], "trigger_words": ["Template Id", "Number"], "Prediction": "Templates.Template_ID, COUNT(Documents.Document_ID) \nFROM Templates \nJOIN Documents ON Documents.Template_ID=Templates.Template_ID \nGROUP BY Templates.Template_ID;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.template_id", ",", "T2.Template_Type_Code", "FROM", "Documents", "AS", "T1", "JOIN", "Templates", "AS", "T2", "ON", "T1.template_id", "=", "T2.template_id", "GROUP", "BY", "T1.template_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "template_id", ",", "t2", ".", "template_type_code", "from", "documents", "as", "t1", "join", "templates", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id", "group", "by", "t1", ".", "template_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the id and type code for the template used by the most documents?", "question_toks": ["What", "is", "the", "id", "and", "type", "code", "for", "the", "template", "used", "by", "the", "most", "documents", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "311", "answer_text": [[25, "PP"]], "trigger_words": ["Template Id", "Template Type Code"], "Prediction": "Templates.Template_ID, Templates.Template_Type_Code\n FROM Templates\n JOIN Documents ON Documents.Template_ID = Templates.Template_ID\n GROUP BY Templates.Template_ID\n ORDER BY COUNT(Documents.Document_ID) DESC\n LIMIT 1;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.template_id", ",", "T2.Template_Type_Code", "FROM", "Documents", "AS", "T1", "JOIN", "Templates", "AS", "T2", "ON", "T1.template_id", "=", "T2.template_id", "GROUP", "BY", "T1.template_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "template_id", ",", "t2", ".", "template_type_code", "from", "documents", "as", "t1", "join", "templates", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id", "group", "by", "t1", ".", "template_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the id and type code of the template that is used for the greatest number of documents.", "question_toks": ["Return", "the", "id", "and", "type", "code", "of", "the", "template", "that", "is", "used", "for", "the", "greatest", "number", "of", "documents", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "312", "answer_text": [[25, "PP"]], "trigger_words": ["Template Id", "Template Type Code"], "Prediction": "Templates.Template_ID, Templates.Template_Type_Code\n FROM Templates\n JOIN Documents ON Documents.Template_ID = Templates.Template_ID\n GROUP BY Templates.Template_ID\n ORDER BY COUNT(Documents.Document_ID) DESC\n LIMIT 1;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1", "query_toks": ["SELECT", "template_id", "FROM", "Documents", "GROUP", "BY", "template_id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "template_id", "from", "documents", "group", "by", "template_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Show ids for all templates that are used by more than one document.", "question_toks": ["Show", "ids", "for", "all", "templates", "that", "are", "used", "by", "more", "than", "one", "document", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "313", "answer_text": [[11], [14], [25]], "trigger_words": ["Template Id"], "Prediction": "Templates.Template_ID \nFROM Templates \nINNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID \nGROUP BY Templates.Template_ID \nHAVING COUNT(Documents.Document_ID) > 1;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1", "query_toks": ["SELECT", "template_id", "FROM", "Documents", "GROUP", "BY", "template_id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "template_id", "from", "documents", "group", "by", "template_id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the template ids of any templates used in more than a single document?", "question_toks": ["What", "are", "the", "template", "ids", "of", "any", "templates", "used", "in", "more", "than", "a", "single", "document", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "314", "answer_text": [[11], [14], [25]], "trigger_words": ["Template Id"], "Prediction": "Templates.Template_ID FROM Templates \nINNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID \nGROUP BY Templates.Template_ID \nHAVING COUNT(DISTINCT Documents.Document_ID) > 1;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents", "query_toks": ["SELECT", "template_id", "FROM", "Templates", "EXCEPT", "SELECT", "template_id", "FROM", "Documents"], "query_toks_no_value": ["select", "template_id", "from", "templates", "except", "select", "template_id", "from", "documents"], "question": "Show ids for all templates not used by any document.", "question_toks": ["Show", "ids", "for", "all", "templates", "not", "used", "by", "any", "document", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "315", "answer_text": [[0], [9], [15], [16], [18], [19], [23], [24]], "trigger_words": ["Template Id"], "Prediction": "Templates.Template_ID \n FROM Templates \n LEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID \n WHERE Documents.Document_ID IS NULL;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents", "query_toks": ["SELECT", "template_id", "FROM", "Templates", "EXCEPT", "SELECT", "template_id", "FROM", "Documents"], "query_toks_no_value": ["select", "template_id", "from", "templates", "except", "select", "template_id", "from", "documents"], "question": "What are the ids for templates that are not used in any documents?", "question_toks": ["What", "are", "the", "ids", "for", "templates", "that", "are", "not", "used", "in", "any", "documents", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "316", "answer_text": [[0], [9], [15], [16], [18], [19], [23], [24]], "trigger_words": ["Template Id"], "Prediction": "Templates.Template_ID \nFROM Templates \nLEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID \nWHERE Documents.Template_ID IS NULL;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Templates", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Templates"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "templates"], "question": "How many templates do we have?", "question_toks": ["How", "many", "templates", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "317", "answer_text": [[20]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Templates;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Templates", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Templates"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "templates"], "question": "Count the number of templates.", "question_toks": ["Count", "the", "number", "of", "templates", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "318", "answer_text": [[20]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Templates;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_id ,  version_number ,  template_type_code FROM Templates", "query_toks": ["SELECT", "template_id", ",", "version_number", ",", "template_type_code", "FROM", "Templates"], "query_toks_no_value": ["select", "template_id", ",", "version_number", ",", "template_type_code", "from", "templates"], "question": "Show template ids, version numbers, and template type codes for all templates.", "question_toks": ["Show", "template", "ids", ",", "version", "numbers", ",", "and", "template", "type", "codes", "for", "all", "templates", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "319", "answer_text": [[0, 5, "PP"], [1, 9, "PP"], [4, 4, "BK"], [6, 2, "PPT"], [7, 8, "PPT"], [8, 3, "BK"], [9, 2, "BK"], [10, 1, "PPT"], [11, 6, "BK"], [14, 7, "AD"], [15, 9, "CV"], [16, 5, "CV"], [18, 5, "PP"], [19, 7, "AD"], [20, 6, "BK"], [21, 9, "AD"], [22, 0, "PP"], [23, 2, "BK"], [24, 8, "PP"], [25, 5, "PP"]], "trigger_words": ["Template Id", "Version Number", "Template Type Code"], "Prediction": "Template_ID, Version_Number, Template_Type_Code FROM Templates;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_id ,  version_number ,  template_type_code FROM Templates", "query_toks": ["SELECT", "template_id", ",", "version_number", ",", "template_type_code", "FROM", "Templates"], "query_toks_no_value": ["select", "template_id", ",", "version_number", ",", "template_type_code", "from", "templates"], "question": "What are the ids, version numbers, and type codes for each template?", "question_toks": ["What", "are", "the", "ids", ",", "version", "numbers", ",", "and", "type", "codes", "for", "each", "template", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "320", "answer_text": [[0, 5, "PP"], [1, 9, "PP"], [4, 4, "BK"], [6, 2, "PPT"], [7, 8, "PPT"], [8, 3, "BK"], [9, 2, "BK"], [10, 1, "PPT"], [11, 6, "BK"], [14, 7, "AD"], [15, 9, "CV"], [16, 5, "CV"], [18, 5, "PP"], [19, 7, "AD"], [20, 6, "BK"], [21, 9, "AD"], [22, 0, "PP"], [23, 2, "BK"], [24, 8, "PP"], [25, 5, "PP"]], "trigger_words": ["Template Id", "Version Number", "Template Type Code"], "Prediction": "Template_ID, Version_Number, Template_Type_Code FROM Templates;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT DISTINCT template_type_code FROM Templates", "query_toks": ["SELECT", "DISTINCT", "template_type_code", "FROM", "Templates"], "query_toks_no_value": ["select", "distinct", "template_type_code", "from", "templates"], "question": "Show all distinct template type codes for all templates.", "question_toks": ["Show", "all", "distinct", "template", "type", "codes", "for", "all", "templates", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "321", "answer_text": [["PP"], ["BK"], ["PPT"], ["AD"], ["CV"]], "trigger_words": ["Template Type Code"], "Prediction": "DISTINCT Template_Type_Code FROM Templates;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT DISTINCT template_type_code FROM Templates", "query_toks": ["SELECT", "DISTINCT", "template_type_code", "FROM", "Templates"], "query_toks_no_value": ["select", "distinct", "template_type_code", "from", "templates"], "question": "What are the different template type codes?", "question_toks": ["What", "are", "the", "different", "template", "type", "codes", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "322", "answer_text": [["PP"], ["BK"], ["PPT"], ["AD"], ["CV"]], "trigger_words": ["Template Type Code"], "Prediction": "Template_Type_Code FROM Ref_Template_Types;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"", "query_toks": ["SELECT", "template_id", "FROM", "Templates", "WHERE", "template_type_code", "=", "``", "PP", "''", "OR", "template_type_code", "=", "``", "PPT", "''"], "query_toks_no_value": ["select", "template_id", "from", "templates", "where", "template_type_code", "=", "value", "or", "template_type_code", "=", "value"], "question": "What are the ids of templates with template type code PP or PPT?", "question_toks": ["What", "are", "the", "ids", "of", "templates", "with", "template", "type", "code", "PP", "or", "PPT", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"PP\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"PPT\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "323", "answer_text": [[0], [1], [6], [7], [10], [18], [22], [24], [25]], "trigger_words": ["Template Id"], "Prediction": "Templates.Template_ID \nFROM Templates \nINNER JOIN Ref_Template_Types \nON Templates.Template_Type_Code=Ref_Template_Types.Template_Type_Code \nWHERE Ref_Template_Types.Template_Type_Code='PP' OR Ref_Template_Types.Template_Type_Code='PPT';"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"", "query_toks": ["SELECT", "template_id", "FROM", "Templates", "WHERE", "template_type_code", "=", "``", "PP", "''", "OR", "template_type_code", "=", "``", "PPT", "''"], "query_toks_no_value": ["select", "template_id", "from", "templates", "where", "template_type_code", "=", "value", "or", "template_type_code", "=", "value"], "question": "Return the ids of templates that have the code PP or PPT.", "question_toks": ["Return", "the", "ids", "of", "templates", "that", "have", "the", "code", "PP", "or", "PPT", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"PP\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"PPT\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "324", "answer_text": [[0], [1], [6], [7], [10], [18], [22], [24], [25]], "trigger_words": ["Template Id"], "Prediction": "Templates.Template_ID\nFROM Templates\nINNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code\nWHERE Ref_Template_Types.Template_Type_Code = 'PP' OR Ref_Template_Types.Template_Type_Code = 'PPT';"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Templates", "WHERE", "template_type_code", "=", "``", "CV", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "templates", "where", "template_type_code", "=", "value"], "question": "How many templates have template type code CV?", "question_toks": ["How", "many", "templates", "have", "template", "type", "code", "CV", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "325", "answer_text": [[2]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Templates", "WHERE", "template_type_code", "=", "``", "CV", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "templates", "where", "template_type_code", "=", "value"], "question": "Count the number of templates of the type CV.", "question_toks": ["Count", "the", "number", "of", "templates", "of", "the", "type", "CV", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "326", "answer_text": [[2]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Templates \nWHERE Template_Type_Code = 'CV';"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5", "query_toks": ["SELECT", "version_number", ",", "template_type_code", "FROM", "Templates", "WHERE", "version_number", ">", "5"], "query_toks_no_value": ["select", "version_number", ",", "template_type_code", "from", "templates", "where", "version_number", ">", "value"], "question": "What is the version number and template type code for the template with version number later than 5?", "question_toks": ["What", "is", "the", "version", "number", "and", "template", "type", "code", "for", "the", "template", "with", "version", "number", "later", "than", "5", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "327", "answer_text": [[9, "PP"], [8, "PPT"], [6, "BK"], [7, "AD"], [9, "CV"], [7, "AD"], [6, "BK"], [9, "AD"], [8, "PP"]], "trigger_words": ["Version Number", "Template Type Code"], "Prediction": "Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5", "query_toks": ["SELECT", "version_number", ",", "template_type_code", "FROM", "Templates", "WHERE", "version_number", ">", "5"], "query_toks_no_value": ["select", "version_number", ",", "template_type_code", "from", "templates", "where", "version_number", ">", "value"], "question": "Return the version numbers and template type codes of templates with a version number greater than 5.", "question_toks": ["Return", "the", "version", "numbers", "and", "template", "type", "codes", "of", "templates", "with", "a", "version", "number", "greater", "than", "5", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "328", "answer_text": [[9, "PP"], [8, "PPT"], [6, "BK"], [7, "AD"], [9, "CV"], [7, "AD"], [6, "BK"], [9, "AD"], [8, "PP"]], "trigger_words": ["Version Number", "Template Type Code"], "Prediction": "Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code", "query_toks": ["SELECT", "template_type_code", ",", "count", "(", "*", ")", "FROM", "Templates", "GROUP", "BY", "template_type_code"], "query_toks_no_value": ["select", "template_type_code", ",", "count", "(", "*", ")", "from", "templates", "group", "by", "template_type_code"], "question": "Show all template type codes and number of templates for each.", "question_toks": ["Show", "all", "template", "type", "codes", "and", "number", "of", "templates", "for", "each", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "329", "answer_text": [["AD", 3], ["BK", 6], ["CV", 2], ["PP", 6], ["PPT", 3]], "trigger_words": ["Template Type Code", "Number"], "Prediction": "Ref_Template_Types.Template_Type_Code, COUNT(Templates.Template_ID) \n FROM Ref_Template_Types \n LEFT JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code \n GROUP BY Ref_Template_Types.Template_Type_Code;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code", "query_toks": ["SELECT", "template_type_code", ",", "count", "(", "*", ")", "FROM", "Templates", "GROUP", "BY", "template_type_code"], "query_toks_no_value": ["select", "template_type_code", ",", "count", "(", "*", ")", "from", "templates", "group", "by", "template_type_code"], "question": "What are the different template type codes, and how many templates correspond to each?", "question_toks": ["What", "are", "the", "different", "template", "type", "codes", ",", "and", "how", "many", "templates", "correspond", "to", "each", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "330", "answer_text": [["AD", 3], ["BK", 6], ["CV", 2], ["PP", 6], ["PPT", 3]], "trigger_words": ["Template Type Code", "Number"], "Prediction": "Templates.Template_Type_Code, COUNT(Templates.Template_ID) \nFROM Templates \nGROUP BY Templates.Template_Type_Code;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "template_type_code", "FROM", "Templates", "GROUP", "BY", "template_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which template type code has most number of templates?", "question_toks": ["Which", "template", "type", "code", "has", "most", "number", "of", "templates", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "331", "answer_text": [["PP"]], "trigger_words": ["Template Type Code"], "Prediction": "Templates.Template_Type_Code \nFROM Templates \nGROUP BY Templates.Template_Type_Code \nORDER BY COUNT(Templates.Template_ID) DESC \nLIMIT 1;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "template_type_code", "FROM", "Templates", "GROUP", "BY", "template_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the type code of the template type that the most templates belong to.", "question_toks": ["Return", "the", "type", "code", "of", "the", "template", "type", "that", "the", "most", "templates", "belong", "to", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "332", "answer_text": [["PP"]], "trigger_words": ["Template Type Code"], "Prediction": "Templates.Template_Type_Code\nFROM Templates\nGROUP BY Templates.Template_Type_Code\nORDER BY COUNT(*) DESC\nLIMIT 1;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3", "query_toks": ["SELECT", "template_type_code", "FROM", "Templates", "GROUP", "BY", "template_type_code", "HAVING", "count", "(", "*", ")", "<", "3"], "query_toks_no_value": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "having", "count", "(", "*", ")", "<", "value"], "question": "Show all template type codes with less than three templates.", "question_toks": ["Show", "all", "template", "type", "codes", "with", "less", "than", "three", "templates", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 4, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "333", "answer_text": [["CV"]], "trigger_words": ["Template Type Code"], "Prediction": "Ref_Template_Types.Template_Type_Code\nFROM Ref_Template_Types\nLEFT JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code\nGROUP BY Ref_Template_Types.Template_Type_Code\nHAVING COUNT(Templates.Template_ID) < 3;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3", "query_toks": ["SELECT", "template_type_code", "FROM", "Templates", "GROUP", "BY", "template_type_code", "HAVING", "count", "(", "*", ")", "<", "3"], "query_toks_no_value": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "having", "count", "(", "*", ")", "<", "value"], "question": "What are the codes of template types that have fewer than 3 templates?", "question_toks": ["What", "are", "the", "codes", "of", "template", "types", "that", "have", "fewer", "than", "3", "templates", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 4, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "334", "answer_text": [["CV"]], "trigger_words": ["Template Type Code"], "Prediction": "Template_Type_Code FROM Ref_Template_Types \nWHERE Template_Type_Code NOT IN \n(SELECT Template_Type_Code FROM Templates \nGROUP BY Template_Type_Code \nHAVING COUNT(*) >= 3);"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT min(Version_Number) ,  template_type_code FROM Templates", "query_toks": ["SELECT", "min", "(", "Version_Number", ")", ",", "template_type_code", "FROM", "Templates"], "query_toks_no_value": ["select", "min", "(", "version_number", ")", ",", "template_type_code", "from", "templates"], "question": "What the smallest version number and its template type code?", "question_toks": ["What", "the", "smallest", "version", "number", "and", "its", "template", "type", "code", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "335", "answer_text": [[0, "PP"]], "trigger_words": ["Minimal Number", "Template Type Code"], "Prediction": "MIN(Version_Number), Template_Type_Code FROM Templates;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT min(Version_Number) ,  template_type_code FROM Templates", "query_toks": ["SELECT", "min", "(", "Version_Number", ")", ",", "template_type_code", "FROM", "Templates"], "query_toks_no_value": ["select", "min", "(", "version_number", ")", ",", "template_type_code", "from", "templates"], "question": "Return the lowest version number, along with its corresponding template type code.", "question_toks": ["Return", "the", "lowest", "version", "number", ",", "along", "with", "its", "corresponding", "template", "type", "code", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "336", "answer_text": [[0, "PP"]], "trigger_words": ["Minimal Number", "Template Type Code"], "Prediction": "Templates.Template_Type_Code, MIN(Templates.Version_Number)\n FROM Templates\n JOIN Ref_Template_Types ON Templates.Template_Type_Code=Ref_Template_Types.Template_Type_Code\n GROUP BY Templates.Template_Type_Code;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"", "query_toks": ["SELECT", "T1.template_type_code", "FROM", "Templates", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.template_id", "=", "T2.template_id", "WHERE", "T2.document_name", "=", "``", "Data", "base", "''"], "query_toks_no_value": ["select", "t1", ".", "template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id", "where", "t2", ".", "document_name", "=", "value"], "question": "What is the template type code of the template used by document with the name \"Data base\"?", "question_toks": ["What", "is", "the", "template", "type", "code", "of", "the", "template", "used", "by", "document", "with", "the", "name", "``", "Data", "base", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Data base\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "337", "answer_text": [["BK"]], "trigger_words": ["Template Type Code"], "Prediction": "Templates.Template_Type_Code \nFROM Documents \nJOIN Templates ON Documents.Template_ID=Templates.Template_ID \nWHERE Documents.Document_Name=\"Data base\";"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"", "query_toks": ["SELECT", "T1.template_type_code", "FROM", "Templates", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.template_id", "=", "T2.template_id", "WHERE", "T2.document_name", "=", "``", "Data", "base", "''"], "query_toks_no_value": ["select", "t1", ".", "template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id", "where", "t2", ".", "document_name", "=", "value"], "question": "Return the template type code of the template that is used by a document named Data base.", "question_toks": ["Return", "the", "template", "type", "code", "of", "the", "template", "that", "is", "used", "by", "a", "document", "named", "Data", "base", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Data base\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "338", "answer_text": [["BK"]], "trigger_words": ["Template Type Code"], "Prediction": "Templates.Template_Type_Code\nFROM Documents\nJOIN Templates ON Documents.Template_ID = Templates.Template_ID\nWHERE Documents.Document_Name = 'Data base';"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"", "query_toks": ["SELECT", "T2.document_name", "FROM", "Templates", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.template_id", "=", "T2.template_id", "WHERE", "T1.template_type_code", "=", "``", "BK", "''"], "query_toks_no_value": ["select", "t2", ".", "document_name", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id", "where", "t1", ".", "template_type_code", "=", "value"], "question": "Show all document names using templates with template type code BK.", "question_toks": ["Show", "all", "document", "names", "using", "templates", "with", "template", "type", "code", "BK", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"BK\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "339", "answer_text": [["Robbin CV"], ["Data base"], ["How to read a book"], ["Palm reading"], ["About Korea"]], "trigger_words": ["Document Name"], "Prediction": "Documents.Document_Name \nFROM Documents \nINNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID \nINNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code \nWHERE Ref_Template_Types.Template_Type_Code = 'BK';"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"", "query_toks": ["SELECT", "T2.document_name", "FROM", "Templates", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.template_id", "=", "T2.template_id", "WHERE", "T1.template_type_code", "=", "``", "BK", "''"], "query_toks_no_value": ["select", "t2", ".", "document_name", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id", "where", "t1", ".", "template_type_code", "=", "value"], "question": "What are the names of documents that use templates with the code BK?", "question_toks": ["What", "are", "the", "names", "of", "documents", "that", "use", "templates", "with", "the", "code", "BK", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"BK\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "340", "answer_text": [["Robbin CV"], ["Data base"], ["How to read a book"], ["Palm reading"], ["About Korea"]], "trigger_words": ["Document Name"], "Prediction": "Documents.Document_Name \nFROM Documents \nJOIN Templates ON Documents.Template_ID=Templates.Template_ID \nWHERE Templates.Template_Type_Code='BK';"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code", "query_toks": ["SELECT", "T1.template_type_code", ",", "count", "(", "*", ")", "FROM", "Templates", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.template_id", "=", "T2.template_id", "GROUP", "BY", "T1.template_type_code"], "query_toks_no_value": ["select", "t1", ".", "template_type_code", ",", "count", "(", "*", ")", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id", "group", "by", "t1", ".", "template_type_code"], "question": "Show all template type codes and the number of documents using each type.", "question_toks": ["Show", "all", "template", "type", "codes", "and", "the", "number", "of", "documents", "using", "each", "type", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "341", "answer_text": [["AD", 3], ["BK", 5], ["PP", 4], ["PPT", 3]], "trigger_words": ["Template Type Code", "Number"], "Prediction": "Ref_Template_Types.Template_Type_Code, COUNT(Documents.Document_ID)\n FROM Ref_Template_Types\n JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code\n JOIN Documents ON Templates.Template_ID = Documents.Template_ID\n GROUP BY Ref_Template_Types.Template_Type_Code;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code", "query_toks": ["SELECT", "T1.template_type_code", ",", "count", "(", "*", ")", "FROM", "Templates", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.template_id", "=", "T2.template_id", "GROUP", "BY", "T1.template_type_code"], "query_toks_no_value": ["select", "t1", ".", "template_type_code", ",", "count", "(", "*", ")", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id", "group", "by", "t1", ".", "template_type_code"], "question": "What are the different template type codes, and how many documents use each type?", "question_toks": ["What", "are", "the", "different", "template", "type", "codes", ",", "and", "how", "many", "documents", "use", "each", "type", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "342", "answer_text": [["AD", 3], ["BK", 5], ["PP", 4], ["PPT", 3]], "trigger_words": ["Template Type Code", "Number"], "Prediction": "Ref_Template_Types.Template_Type_Code, COUNT(Documents.Document_ID) \n FROM Ref_Template_Types \n LEFT JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code \n LEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID \n GROUP BY Ref_Template_Types.Template_Type_Code;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.template_type_code", "FROM", "Templates", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.template_id", "=", "T2.template_id", "GROUP", "BY", "T1.template_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id", "group", "by", "t1", ".", "template_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which template type code is used by most number of documents?", "question_toks": ["Which", "template", "type", "code", "is", "used", "by", "most", "number", "of", "documents", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "343", "answer_text": [["BK"]], "trigger_words": ["Template Type Code"], "Prediction": "Templates.Template_Type_Code, COUNT(*) AS num_docs\n FROM Documents\n JOIN Templates ON Documents.Template_ID=Templates.Template_ID\n GROUP BY Templates.Template_Type_Code\n ORDER BY num_docs DESC\n LIMIT 1;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.template_type_code", "FROM", "Templates", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.template_id", "=", "T2.template_id", "GROUP", "BY", "T1.template_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id", "group", "by", "t1", ".", "template_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the code of the template type that is most commonly used in documents.", "question_toks": ["Return", "the", "code", "of", "the", "template", "type", "that", "is", "most", "commonly", "used", "in", "documents", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "344", "answer_text": [["BK"]], "trigger_words": ["Template Type Code"], "Prediction": "Templates.Template_Type_Code\nFROM Templates\nJOIN Documents ON Documents.Template_ID = Templates.Template_ID\nJOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code\nGROUP BY Templates.Template_Type_Code\nORDER BY COUNT(*) DESC\nLIMIT 1;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id", "query_toks": ["SELECT", "template_type_code", "FROM", "Templates", "EXCEPT", "SELECT", "template_type_code", "FROM", "Templates", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.template_id", "=", "T2.template_id"], "query_toks_no_value": ["select", "template_type_code", "from", "templates", "except", "select", "template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id"], "question": "Show all template type codes that are not used by any document.", "question_toks": ["Show", "all", "template", "type", "codes", "that", "are", "not", "used", "by", "any", "document", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "345", "answer_text": [["CV"]], "trigger_words": ["Template Type Code"], "Prediction": "Ref_Template_Types.Template_Type_Code \n FROM Ref_Template_Types \n LEFT JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code \n LEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID \n WHERE Documents.Document_ID IS NULL;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id", "query_toks": ["SELECT", "template_type_code", "FROM", "Templates", "EXCEPT", "SELECT", "template_type_code", "FROM", "Templates", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.template_id", "=", "T2.template_id"], "query_toks_no_value": ["select", "template_type_code", "from", "templates", "except", "select", "template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "template_id", "=", "t2", ".", "template_id"], "question": "What are the codes of template types that are not used for any document?", "question_toks": ["What", "are", "the", "codes", "of", "template", "types", "that", "are", "not", "used", "for", "any", "document", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "346", "answer_text": [["CV"]], "trigger_words": ["Template Type Code"], "Prediction": "Templates.Template_Type_Code \nFROM Templates \nLEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID \nWHERE Documents.Document_ID IS NULL;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code ,  template_type_description FROM Ref_template_types", "query_toks": ["SELECT", "template_type_code", ",", "template_type_description", "FROM", "Ref_template_types"], "query_toks_no_value": ["select", "template_type_code", ",", "template_type_description", "from", "ref_template_types"], "question": "Show all template type codes and descriptions.", "question_toks": ["Show", "all", "template", "type", "codes", "and", "descriptions", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "347", "answer_text": [["PPT", "Presentation"], ["CV", "CV"], ["AD", "Advertisement"], ["PP", "Paper"], ["BK", "Book"]], "trigger_words": ["Template Type Code", "Template Type Description"], "Prediction": "Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code ,  template_type_description FROM Ref_template_types", "query_toks": ["SELECT", "template_type_code", ",", "template_type_description", "FROM", "Ref_template_types"], "query_toks_no_value": ["select", "template_type_code", ",", "template_type_description", "from", "ref_template_types"], "question": "What are the type codes and descriptions for all template types?", "question_toks": ["What", "are", "the", "type", "codes", "and", "descriptions", "for", "all", "template", "types", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "348", "answer_text": [["PPT", "Presentation"], ["CV", "CV"], ["AD", "Advertisement"], ["PP", "Paper"], ["BK", "Book"]], "trigger_words": ["Template Type Code", "Template Type Description"], "Prediction": "Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"", "query_toks": ["SELECT", "template_type_description", "FROM", "Ref_template_types", "WHERE", "template_type_code", "=", "``", "AD", "''"], "query_toks_no_value": ["select", "template_type_description", "from", "ref_template_types", "where", "template_type_code", "=", "value"], "question": "What is the template type descriptions for template type code \"AD\".", "question_toks": ["What", "is", "the", "template", "type", "descriptions", "for", "template", "type", "code", "``", "AD", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"AD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "349", "answer_text": [["Advertisement"]], "trigger_words": ["Template Type Description"], "Prediction": "Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = \"AD\";"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"", "query_toks": ["SELECT", "template_type_description", "FROM", "Ref_template_types", "WHERE", "template_type_code", "=", "``", "AD", "''"], "query_toks_no_value": ["select", "template_type_description", "from", "ref_template_types", "where", "template_type_code", "=", "value"], "question": "Return the template type description of the template type with the code AD.", "question_toks": ["Return", "the", "template", "type", "description", "of", "the", "template", "type", "with", "the", "code", "AD", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"AD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "350", "answer_text": [["Advertisement"]], "trigger_words": ["Template Type Description"], "Prediction": "Ref_Template_Types.Template_Type_Description \n FROM Templates \n JOIN Ref_Template_Types \n ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code \n WHERE Templates.Template_Type_Code = 'AD';"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"", "query_toks": ["SELECT", "template_type_code", "FROM", "Ref_template_types", "WHERE", "template_type_description", "=", "``", "Book", "''"], "query_toks_no_value": ["select", "template_type_code", "from", "ref_template_types", "where", "template_type_description", "=", "value"], "question": "What is the template type code for template type description \"Book\".", "question_toks": ["What", "is", "the", "template", "type", "code", "for", "template", "type", "description", "``", "Book", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Book\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "351", "answer_text": [["BK"]], "trigger_words": ["Template Type Code"], "Prediction": "Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = \"Book\";"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"", "query_toks": ["SELECT", "template_type_code", "FROM", "Ref_template_types", "WHERE", "template_type_description", "=", "``", "Book", "''"], "query_toks_no_value": ["select", "template_type_code", "from", "ref_template_types", "where", "template_type_description", "=", "value"], "question": "Return the type code of the template type with the description \"Book\".", "question_toks": ["Return", "the", "type", "code", "of", "the", "template", "type", "with", "the", "description", "``", "Book", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Book\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "352", "answer_text": [["BK"]], "trigger_words": ["Template Type Code"], "Prediction": "Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = \"Book\";"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID", "query_toks": ["SELECT", "DISTINCT", "T1.template_type_description", "FROM", "Ref_template_types", "AS", "T1", "JOIN", "Templates", "AS", "T2", "ON", "T1.template_type_code", "=", "T2.template_type_code", "JOIN", "Documents", "AS", "T3", "ON", "T2.Template_ID", "=", "T3.template_ID"], "query_toks_no_value": ["select", "distinct", "t1", ".", "template_type_description", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1", ".", "template_type_code", "=", "t2", ".", "template_type_code", "join", "documents", "as", "t3", "on", "t2", ".", "template_id", "=", "t3", ".", "template_id"], "question": "What are the distinct template type descriptions for the templates ever used by any document?", "question_toks": ["What", "are", "the", "distinct", "template", "type", "descriptions", "for", "the", "templates", "ever", "used", "by", "any", "document", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "353", "answer_text": [["Presentation"], ["Paper"], ["Book"], ["Advertisement"]], "trigger_words": ["Template Type Description"], "Prediction": "DISTINCT Ref_Template_Types.Template_Type_Description\nFROM Templates\nJOIN Documents ON Templates.Template_ID = Documents.Template_ID\nJOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID", "query_toks": ["SELECT", "DISTINCT", "T1.template_type_description", "FROM", "Ref_template_types", "AS", "T1", "JOIN", "Templates", "AS", "T2", "ON", "T1.template_type_code", "=", "T2.template_type_code", "JOIN", "Documents", "AS", "T3", "ON", "T2.Template_ID", "=", "T3.template_ID"], "query_toks_no_value": ["select", "distinct", "t1", ".", "template_type_description", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1", ".", "template_type_code", "=", "t2", ".", "template_type_code", "join", "documents", "as", "t3", "on", "t2", ".", "template_id", "=", "t3", ".", "template_id"], "question": "Return the different descriptions for templates that have been used in a document.", "question_toks": ["Return", "the", "different", "descriptions", "for", "templates", "that", "have", "been", "used", "in", "a", "document", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "354", "answer_text": [["Presentation"], ["Paper"], ["Book"], ["Advertisement"]], "trigger_words": ["Template Type Description"], "Prediction": "DISTINCT Ref_Template_Types.Template_Type_Description\n FROM Documents\n JOIN Templates ON Documents.Template_ID=Templates.Template_ID\n JOIN Ref_Template_Types ON Templates.Template_Type_Code=Ref_Template_Types.Template_Type_Code;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"", "query_toks": ["SELECT", "T2.template_id", "FROM", "Ref_template_types", "AS", "T1", "JOIN", "Templates", "AS", "T2", "ON", "T1.template_type_code", "=", "T2.template_type_code", "WHERE", "T1.template_type_description", "=", "``", "Presentation", "''"], "query_toks_no_value": ["select", "t2", ".", "template_id", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1", ".", "template_type_code", "=", "t2", ".", "template_type_code", "where", "t1", ".", "template_type_description", "=", "value"], "question": "What are the template ids with template type description \"Presentation\".", "question_toks": ["What", "are", "the", "template", "ids", "with", "template", "type", "description", "``", "Presentation", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Presentation\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "355", "answer_text": [[6], [7], [10]], "trigger_words": ["Template Id"], "Prediction": "Templates.Template_ID \nFROM Templates \nJOIN Ref_Template_Types \nON Templates.Template_Type_Code=Ref_Template_Types.Template_Type_Code \nWHERE Ref_Template_Types.Template_Type_Description=\"Presentation\";"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"", "query_toks": ["SELECT", "T2.template_id", "FROM", "Ref_template_types", "AS", "T1", "JOIN", "Templates", "AS", "T2", "ON", "T1.template_type_code", "=", "T2.template_type_code", "WHERE", "T1.template_type_description", "=", "``", "Presentation", "''"], "query_toks_no_value": ["select", "t2", ".", "template_id", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1", ".", "template_type_code", "=", "t2", ".", "template_type_code", "where", "t1", ".", "template_type_description", "=", "value"], "question": "Return the ids corresponding to templates with the description 'Presentation'.", "question_toks": ["Return", "the", "ids", "corresponding", "to", "templates", "with", "the", "description", "'Presentation", "'", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Presentation\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "356", "answer_text": [[6], [7], [10]], "trigger_words": ["Template Id"], "Prediction": "Templates.Template_ID\nFROM Templates\nJOIN Ref_Template_Types ON Templates.Template_Type_Code=Ref_Template_Types.Template_Type_Code\nWHERE Ref_Template_Types.Template_Type_Description='Presentation';"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Paragraphs", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Paragraphs"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "paragraphs"], "question": "How many paragraphs in total?", "question_toks": ["How", "many", "paragraphs", "in", "total", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "357", "answer_text": [[15]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Paragraphs;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Paragraphs", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Paragraphs"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "paragraphs"], "question": "Count the number of paragraphs.", "question_toks": ["Count", "the", "number", "of", "paragraphs", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "358", "answer_text": [[15]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Paragraphs;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Paragraphs", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_ID", "=", "T2.document_ID", "WHERE", "T2.document_name", "=", "'Summer", "Show", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "where", "t2", ".", "document_name", "=", "value"], "question": "How many paragraphs for the document with name 'Summer Show'?", "question_toks": ["How", "many", "paragraphs", "for", "the", "document", "with", "name", "'Summer", "Show", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Summer Show\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "359", "answer_text": [[1]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Paragraphs WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Summer Show');"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Paragraphs", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_ID", "=", "T2.document_ID", "WHERE", "T2.document_name", "=", "'Summer", "Show", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "where", "t2", ".", "document_name", "=", "value"], "question": "Count the number of paragraphs in the document named 'Summer Show'.", "question_toks": ["Count", "the", "number", "of", "paragraphs", "in", "the", "document", "named", "'Summer", "Show", "'", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Summer Show\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "360", "answer_text": [[1]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Paragraphs WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Summer Show');"}
{"db_id": "cre_Doc_Template_Mgt", "query": "select other_details from paragraphs where paragraph_text like 'korea'", "query_toks": ["select", "other_details", "from", "paragraphs", "where", "paragraph_text", "like", "\"korea\""], "query_toks_no_value": ["select", "other_details", "from", "paragraphs", "where", "paragraph_text", "like", "value"], "question": "Show paragraph details for paragraph with text 'Korea ' .", "question_toks": ["Show", "paragraph", "details", "for", "paragraph", "with", "text", "'Korea", "'", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 9, [0, [0, 16, false], null], "\"korea\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "361", "answer_text": [[null], [null]], "trigger_words": ["Other Details"], "Prediction": "Paragraphs.* FROM Paragraphs WHERE Paragraph_Text = 'Korea ';"}
{"db_id": "cre_Doc_Template_Mgt", "query": "select other_details from paragraphs where paragraph_text like 'korea'", "query_toks": ["select", "other_details", "from", "paragraphs", "where", "paragraph_text", "like", "\"korea\""], "query_toks_no_value": ["select", "other_details", "from", "paragraphs", "where", "paragraph_text", "like", "value"], "question": "What are the details for the paragraph that includes the text 'Korea ' ?", "question_toks": ["What", "are", "the", "details", "for", "the", "paragraph", "that", "includes", "the", "text", "'Korea", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 9, [0, [0, 16, false], null], "\"korea\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "362", "answer_text": [[null], [null]], "trigger_words": ["Other Details"], "Prediction": "* FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea %';"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'", "query_toks": ["SELECT", "T1.paragraph_id", ",", "T1.paragraph_text", "FROM", "Paragraphs", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "WHERE", "T2.Document_Name", "=", "'Welcome", "to", "NY", "'"], "query_toks_no_value": ["select", "t1", ".", "paragraph_id", ",", "t1", ".", "paragraph_text", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "where", "t2", ".", "document_name", "=", "value"], "question": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.", "question_toks": ["Show", "all", "paragraph", "ids", "and", "texts", "for", "the", "document", "with", "name", "'Welcome", "to", "NY", "'", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Welcome to NY\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "363", "answer_text": [[16615, "Japan"], [608931827, "Micronesia"]], "trigger_words": ["Paragraph Id", "Paragraph Text"], "Prediction": "Paragraph_ID, Paragraph_Text \n FROM Paragraphs \n WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Welcome to NY');"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'", "query_toks": ["SELECT", "T1.paragraph_id", ",", "T1.paragraph_text", "FROM", "Paragraphs", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "WHERE", "T2.Document_Name", "=", "'Welcome", "to", "NY", "'"], "query_toks_no_value": ["select", "t1", ".", "paragraph_id", ",", "t1", ".", "paragraph_text", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "where", "t2", ".", "document_name", "=", "value"], "question": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?", "question_toks": ["What", "are", "the", "ids", "and", "texts", "of", "paragraphs", "in", "the", "document", "titled", "'Welcome", "to", "NY", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Welcome to NY\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "364", "answer_text": [[16615, "Japan"], [608931827, "Micronesia"]], "trigger_words": ["Paragraph Id", "Paragraph Text"], "Prediction": "Paragraph_ID, Paragraph_Text \nFROM Paragraphs \nWHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Welcome to NY');"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"", "query_toks": ["SELECT", "T1.paragraph_text", "FROM", "Paragraphs", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "WHERE", "T2.document_name", "=", "``", "Customer", "reviews", "''"], "query_toks_no_value": ["select", "t1", ".", "paragraph_text", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "where", "t2", ".", "document_name", "=", "value"], "question": "Show all paragraph texts for the document \"Customer reviews\".", "question_toks": ["Show", "all", "paragraph", "texts", "for", "the", "document", "``", "Customer", "reviews", "''", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Customer reviews\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "365", "answer_text": [["Korea"], ["Ukraine"], ["Korea"]], "trigger_words": ["Paragraph Text"], "Prediction": "Paragraph_Text FROM Paragraphs \nINNER JOIN Documents ON Paragraphs.Document_ID=Documents.Document_ID \nWHERE Documents.Document_Name=\"Customer reviews\";"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"", "query_toks": ["SELECT", "T1.paragraph_text", "FROM", "Paragraphs", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "WHERE", "T2.document_name", "=", "``", "Customer", "reviews", "''"], "query_toks_no_value": ["select", "t1", ".", "paragraph_text", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "where", "t2", ".", "document_name", "=", "value"], "question": "What are the paragraph texts for the document with the name 'Customer reviews'?", "question_toks": ["What", "are", "the", "paragraph", "texts", "for", "the", "document", "with", "the", "name", "'Customer", "reviews", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Customer reviews\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "366", "answer_text": [["Korea"], ["Ukraine"], ["Korea"]], "trigger_words": ["Paragraph Text"], "Prediction": "Paragraph_Text FROM Paragraphs \nJOIN Documents ON Paragraphs.Document_ID=Documents.Document_ID \nWHERE Documents.Document_Name='Customer reviews';"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id", "query_toks": ["SELECT", "document_id", ",", "count", "(", "*", ")", "FROM", "Paragraphs", "GROUP", "BY", "document_id", "ORDER", "BY", "document_id"], "query_toks_no_value": ["select", "document_id", ",", "count", "(", "*", ")", "from", "paragraphs", "group", "by", "document_id", "order", "by", "document_id"], "question": "Show all document ids and the number of paragraphs in each document. Order by document id.", "question_toks": ["Show", "all", "document", "ids", "and", "the", "number", "of", "paragraphs", "in", "each", "document", ".", "Order", "by", "document", "id", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["asc", [[0, [0, 15, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "367", "answer_text": [[3, 1], [80, 2], [2394, 3], [3830, 1], [33930, 1], [50123, 1], [651512, 2], [3540024, 1], [16514113, 2], [385906526, 1]], "trigger_words": ["Document Id", "Number"], "Prediction": "Documents.Document_ID, COUNT(Paragraphs.Paragraph_ID) AS num_paragraphs\n FROM Documents\n LEFT JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID\n GROUP BY Documents.Document_ID\n ORDER BY Documents.Document_ID;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id", "query_toks": ["SELECT", "document_id", ",", "count", "(", "*", ")", "FROM", "Paragraphs", "GROUP", "BY", "document_id", "ORDER", "BY", "document_id"], "query_toks_no_value": ["select", "document_id", ",", "count", "(", "*", ")", "from", "paragraphs", "group", "by", "document_id", "order", "by", "document_id"], "question": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.", "question_toks": ["Return", "the", "different", "document", "ids", "along", "with", "the", "number", "of", "paragraphs", "corresponding", "to", "each", ",", "ordered", "by", "id", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["asc", [[0, [0, 15, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "368", "answer_text": [[3, 1], [80, 2], [2394, 3], [3830, 1], [33930, 1], [50123, 1], [651512, 2], [3540024, 1], [16514113, 2], [385906526, 1]], "trigger_words": ["Document Id", "Number"], "Prediction": "Documents.Document_ID, COUNT(Paragraphs.Paragraph_ID) AS num_paragraphs\nFROM Documents\nJOIN Paragraphs ON Paragraphs.Document_ID = Documents.Document_ID\nGROUP BY Documents.Document_ID\nORDER BY Documents.Document_ID;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id", "query_toks": ["SELECT", "T1.document_id", ",", "T2.document_name", ",", "count", "(", "*", ")", "FROM", "Paragraphs", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "GROUP", "BY", "T1.document_id"], "query_toks_no_value": ["select", "t1", ".", "document_id", ",", "t2", ".", "document_name", ",", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "group", "by", "t1", ".", "document_id"], "question": "Show all document ids, names and the number of paragraphs in each document.", "question_toks": ["Show", "all", "document", "ids", ",", "names", "and", "the", "number", "of", "paragraphs", "in", "each", "document", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "369", "answer_text": [[3, "Summer Show", 1], [80, "Welcome to NY", 2], [2394, "Customer reviews", 3], [3830, "Do not panic", 1], [33930, "How Google people work", 1], [50123, "Learning French", 1], [651512, "How to write a CV", 2], [3540024, "Palm reading", 1], [16514113, "A history of Arts", 2], [385906526, "About Korea", 1]], "trigger_words": ["Document Id", "Document Name", "Number"], "Prediction": "Documents.Document_ID, Documents.Document_Name, COUNT(Paragraphs.Paragraph_ID) AS num_paragraphs\n FROM Documents\n LEFT JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID\n GROUP BY Documents.Document_ID;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id", "query_toks": ["SELECT", "T1.document_id", ",", "T2.document_name", ",", "count", "(", "*", ")", "FROM", "Paragraphs", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "GROUP", "BY", "T1.document_id"], "query_toks_no_value": ["select", "t1", ".", "document_id", ",", "t2", ".", "document_name", ",", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "group", "by", "t1", ".", "document_id"], "question": "What are the ids and names of each document, as well as the number of paragraphs in each?", "question_toks": ["What", "are", "the", "ids", "and", "names", "of", "each", "document", ",", "as", "well", "as", "the", "number", "of", "paragraphs", "in", "each", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "370", "answer_text": [[3, "Summer Show", 1], [80, "Welcome to NY", 2], [2394, "Customer reviews", 3], [3830, "Do not panic", 1], [33930, "How Google people work", 1], [50123, "Learning French", 1], [651512, "How to write a CV", 2], [3540024, "Palm reading", 1], [16514113, "A history of Arts", 2], [385906526, "About Korea", 1]], "trigger_words": ["Document Id", "Document Name", "Number"], "Prediction": "Documents.Document_ID, Documents.Document_Name, COUNT(Paragraphs.Paragraph_ID) AS num_paragraphs\n FROM Documents\n LEFT JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID\n GROUP BY Documents.Document_ID;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "document_id", "FROM", "Paragraphs", "GROUP", "BY", "document_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "List all document ids with at least two paragraphs.", "question_toks": ["List", "all", "document", "ids", "with", "at", "least", "two", "paragraphs", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "371", "answer_text": [[80], [2394], [651512], [16514113]], "trigger_words": ["Document Id"], "Prediction": "Documents.Document_ID\nFROM Documents\nINNER JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID\nGROUP BY Documents.Document_ID\nHAVING COUNT(Paragraphs.Paragraph_ID) >= 2;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "document_id", "FROM", "Paragraphs", "GROUP", "BY", "document_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the ids of documents that have 2 or more paragraphs?", "question_toks": ["What", "are", "the", "ids", "of", "documents", "that", "have", "2", "or", "more", "paragraphs", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "372", "answer_text": [[80], [2394], [651512], [16514113]], "trigger_words": ["Document Id"], "Prediction": "Documents.Document_ID \nFROM Documents \nINNER JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID \nGROUP BY Documents.Document_ID \nHAVING COUNT(Paragraphs.Paragraph_ID) >= 2;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.document_id", ",", "T2.document_name", "FROM", "Paragraphs", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "GROUP", "BY", "T1.document_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "document_id", ",", "t2", ".", "document_name", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "group", "by", "t1", ".", "document_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the document id and name with greatest number of paragraphs?", "question_toks": ["What", "is", "the", "document", "id", "and", "name", "with", "greatest", "number", "of", "paragraphs", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "373", "answer_text": [[2394, "Customer reviews"]], "trigger_words": ["Document Id", "Document Name"], "Prediction": "Documents.Document_ID, Documents.Document_Name\n FROM Documents\n JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID\n GROUP BY Documents.Document_ID\n ORDER BY COUNT(Paragraphs.Paragraph_ID) DESC\n LIMIT 1;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.document_id", ",", "T2.document_name", "FROM", "Paragraphs", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "GROUP", "BY", "T1.document_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "document_id", ",", "t2", ".", "document_name", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "group", "by", "t1", ".", "document_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the id and name of the document with the most paragraphs.", "question_toks": ["Return", "the", "id", "and", "name", "of", "the", "document", "with", "the", "most", "paragraphs", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "374", "answer_text": [[2394, "Customer reviews"]], "trigger_words": ["Document Id", "Document Name"], "Prediction": "Documents.Document_ID, Documents.Document_Name\n FROM Documents\n JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID\n GROUP BY Documents.Document_ID\n ORDER BY COUNT(Paragraphs.Paragraph_ID) DESC\n LIMIT 1;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "document_id", "FROM", "Paragraphs", "GROUP", "BY", "document_id", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "What is the document id with least number of paragraphs?", "question_toks": ["What", "is", "the", "document", "id", "with", "least", "number", "of", "paragraphs", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "375", "answer_text": [[3]], "trigger_words": ["Document Id"], "Prediction": "Documents.Document_ID \nFROM Documents \nJOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID \nGROUP BY Documents.Document_ID \nORDER BY COUNT(Paragraphs.Paragraph_ID) ASC \nLIMIT 1;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "document_id", "FROM", "Paragraphs", "GROUP", "BY", "document_id", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Return the id of the document with the fewest paragraphs.", "question_toks": ["Return", "the", "id", "of", "the", "document", "with", "the", "fewest", "paragraphs", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "376", "answer_text": [[3]], "trigger_words": ["Document Id"], "Prediction": "Documents.Document_ID\nFROM Documents\nJOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID\nGROUP BY Documents.Document_ID\nORDER BY COUNT(Paragraphs.Paragraph_ID) ASC\nLIMIT 1;"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2", "query_toks": ["SELECT", "document_id", "FROM", "Paragraphs", "GROUP", "BY", "document_id", "HAVING", "count", "(", "*", ")", "BETWEEN", "1", "AND", "2"], "query_toks_no_value": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "having", "count", "(", "*", ")", "between", "value", "and", "value"], "question": "What is the document id with 1 to 2 paragraphs?", "question_toks": ["What", "is", "the", "document", "id", "with", "1", "to", "2", "paragraphs", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [[false, 1, [0, [3, 0, false], null], 1.0, 2.0]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "377", "answer_text": [[3], [80], [3830], [33930], [50123], [651512], [3540024], [16514113], [385906526]], "trigger_words": ["Document Id"], "Prediction": "Documents.Document_ID\nFROM Documents\nWHERE Documents.Document_ID IN (\n    SELECT Paragraphs.Document_ID\n    FROM Paragraphs\n    GROUP BY Paragraphs.Document_ID\n    HAVING COUNT(*) BETWEEN 1 AND 2\n);"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2", "query_toks": ["SELECT", "document_id", "FROM", "Paragraphs", "GROUP", "BY", "document_id", "HAVING", "count", "(", "*", ")", "BETWEEN", "1", "AND", "2"], "query_toks_no_value": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "having", "count", "(", "*", ")", "between", "value", "and", "value"], "question": "Give the ids of documents that have between one and two paragraphs.", "question_toks": ["Give", "the", "ids", "of", "documents", "that", "have", "between", "one", "and", "two", "paragraphs", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [[false, 1, [0, [3, 0, false], null], 1.0, 2.0]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "378", "answer_text": [[3], [80], [3830], [33930], [50123], [651512], [3540024], [16514113], [385906526]], "trigger_words": ["Document Id"], "Prediction": "Documents.Document_ID \nFROM Documents \nWHERE Document_ID IN \n    (SELECT Document_ID \n     FROM Paragraphs \n     GROUP BY Document_ID \n     HAVING COUNT(*) BETWEEN 1 AND 2);"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'", "query_toks": ["SELECT", "document_id", "FROM", "Paragraphs", "WHERE", "paragraph_text", "=", "'Brazil", "'", "INTERSECT", "SELECT", "document_id", "FROM", "Paragraphs", "WHERE", "paragraph_text", "=", "'Ireland", "'"], "query_toks_no_value": ["select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "value", "intersect", "select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "value"], "question": "Show the document id with paragraph text 'Brazil' and 'Ireland'.", "question_toks": ["Show", "the", "document", "id", "with", "paragraph", "text", "'Brazil", "'", "and", "'Ireland", "'", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"Brazil\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"Ireland\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "379", "answer_text": [[16514113]], "trigger_words": ["Document Id"], "Prediction": "Documents.Document_ID \nFROM Documents \nJOIN Paragraphs ON Paragraphs.Document_ID = Documents.Document_ID \nWHERE Paragraphs.Paragraph_Text IN ('Brazil', 'Ireland');"}
{"db_id": "cre_Doc_Template_Mgt", "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'", "query_toks": ["SELECT", "document_id", "FROM", "Paragraphs", "WHERE", "paragraph_text", "=", "'Brazil", "'", "INTERSECT", "SELECT", "document_id", "FROM", "Paragraphs", "WHERE", "paragraph_text", "=", "'Ireland", "'"], "query_toks_no_value": ["select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "value", "intersect", "select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "value"], "question": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?", "question_toks": ["What", "are", "the", "ids", "of", "documents", "that", "contain", "the", "paragraph", "text", "'Brazil", "'", "and", "'Ireland", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"Brazil\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"Ireland\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "380", "answer_text": [[16514113]], "trigger_words": ["Document Id"], "Prediction": "Documents.Document_ID \nFROM Documents \nJOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID \nWHERE Paragraphs.Paragraph_Text LIKE '%Brazil%' AND Paragraphs.Paragraph_Text LIKE '%Ireland%';"}
{"db_id": "course_teach", "query": "SELECT count(*) FROM teacher", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "teacher"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "teacher"], "question": "How many teachers are there?", "question_toks": ["How", "many", "teachers", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "381", "answer_text": [[7]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM teacher;"}
{"db_id": "course_teach", "query": "SELECT count(*) FROM teacher", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "teacher"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "teacher"], "question": "What is the total count of teachers?", "question_toks": ["What", "is", "the", "total", "count", "of", "teachers", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "382", "answer_text": [[7]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM teacher;"}
{"db_id": "course_teach", "query": "SELECT Name FROM teacher ORDER BY Age ASC", "query_toks": ["SELECT", "Name", "FROM", "teacher", "ORDER", "BY", "Age", "ASC"], "query_toks_no_value": ["select", "name", "from", "teacher", "order", "by", "age", "asc"], "question": "List the names of teachers in ascending order of age.", "question_toks": ["List", "the", "names", "of", "teachers", "in", "ascending", "order", "of", "age", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "383", "answer_text": [["Vicente Carretero"], ["Gustaaf Deloor"], ["Joseph Huts"], ["John Deloor"], ["Lucy Wong"], ["Anne Walker"], ["Kearsley Brown"]], "trigger_words": ["Name"], "Prediction": "Name FROM teacher ORDER BY Age ASC;"}
{"db_id": "course_teach", "query": "SELECT Name FROM teacher ORDER BY Age ASC", "query_toks": ["SELECT", "Name", "FROM", "teacher", "ORDER", "BY", "Age", "ASC"], "query_toks_no_value": ["select", "name", "from", "teacher", "order", "by", "age", "asc"], "question": "What are the names of the teachers ordered by ascending age?", "question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "ordered", "by", "ascending", "age", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "384", "answer_text": [["Vicente Carretero"], ["Gustaaf Deloor"], ["Joseph Huts"], ["John Deloor"], ["Lucy Wong"], ["Anne Walker"], ["Kearsley Brown"]], "trigger_words": ["Name"], "Prediction": "Name FROM teacher ORDER BY Age ASC;"}
{"db_id": "course_teach", "query": "SELECT Age ,  Hometown FROM teacher", "query_toks": ["SELECT", "Age", ",", "Hometown", "FROM", "teacher"], "query_toks_no_value": ["select", "age", ",", "hometown", "from", "teacher"], "question": "What are the age and hometown of teachers?", "question_toks": ["What", "are", "the", "age", "and", "hometown", "of", "teachers", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "385", "answer_text": [["32", "Blackrod Urban District"], ["29", "Bolton County Borough"], ["26", "Farnworth Municipal Borough"], ["33", "Horwich Urban District"], ["45", "Kearsley Urban District"], ["41", "Little Lever Urban District"], ["39", "Turton Urban District"]], "trigger_words": ["Age", "Hometown"], "Prediction": "Age, Hometown FROM teacher;"}
{"db_id": "course_teach", "query": "SELECT Age ,  Hometown FROM teacher", "query_toks": ["SELECT", "Age", ",", "Hometown", "FROM", "teacher"], "query_toks_no_value": ["select", "age", ",", "hometown", "from", "teacher"], "question": "What is the age and hometown of every teacher?", "question_toks": ["What", "is", "the", "age", "and", "hometown", "of", "every", "teacher", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "386", "answer_text": [["32", "Blackrod Urban District"], ["29", "Bolton County Borough"], ["26", "Farnworth Municipal Borough"], ["33", "Horwich Urban District"], ["45", "Kearsley Urban District"], ["41", "Little Lever Urban District"], ["39", "Turton Urban District"]], "trigger_words": ["Age", "Hometown"], "Prediction": "Age, Hometown FROM teacher;"}
{"db_id": "course_teach", "query": "select name from teacher where hometown != \"little lever urban district\"", "query_toks": ["select", "name", "from", "teacher", "where", "hometown", "!=", "\"little lever urban district\""], "query_toks_no_value": ["select", "name", "from", "teacher", "where", "hometown", "!", "=", "value"], "question": "List the name of teachers whose hometown is not `` Little Lever Urban District '' .", "question_toks": ["List", "the", "name", "of", "teachers", "whose", "hometown", "is", "not", "``", "Little", "Lever", "Urban", "District", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 7, [0, [0, 7, false], null], "\"little lever urban district\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "387", "answer_text": [["Joseph Huts"], ["Gustaaf Deloor"], ["Vicente Carretero"], ["John Deloor"], ["Kearsley Brown"], ["Anne Walker"], ["Lucy Wong"]], "trigger_words": ["Name"], "Prediction": "Name FROM teacher WHERE Hometown != 'Little Lever Urban District';"}
{"db_id": "course_teach", "query": "select name from teacher where hometown != \"little lever urban district\"", "query_toks": ["select", "name", "from", "teacher", "where", "hometown", "!=", "\"little lever urban district\""], "query_toks_no_value": ["select", "name", "from", "teacher", "where", "hometown", "!", "=", "value"], "question": "What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?", "question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "whose", "hometown", "is", "not", "``", "Little", "Lever", "Urban", "District", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 7, [0, [0, 7, false], null], "\"little lever urban district\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "388", "answer_text": [["Joseph Huts"], ["Gustaaf Deloor"], ["Vicente Carretero"], ["John Deloor"], ["Kearsley Brown"], ["Anne Walker"], ["Lucy Wong"]], "trigger_words": ["Name"], "Prediction": "Name FROM teacher WHERE Hometown != 'Little Lever Urban District';"}
{"db_id": "course_teach", "query": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33", "query_toks": ["SELECT", "Name", "FROM", "teacher", "WHERE", "Age", "=", "32", "OR", "Age", "=", "33"], "query_toks_no_value": ["select", "name", "from", "teacher", "where", "age", "=", "value", "or", "age", "=", "value"], "question": "Show the name of teachers aged either 32 or 33?", "question_toks": ["Show", "the", "name", "of", "teachers", "aged", "either", "32", "or", "33", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], 32.0, null], "or", [false, 2, [0, [0, 6, false], null], 33.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "389", "answer_text": [["Joseph Huts"], ["John Deloor"]], "trigger_words": ["Name"], "Prediction": "Name FROM teacher WHERE Age IN (32,33);"}
{"db_id": "course_teach", "query": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33", "query_toks": ["SELECT", "Name", "FROM", "teacher", "WHERE", "Age", "=", "32", "OR", "Age", "=", "33"], "query_toks_no_value": ["select", "name", "from", "teacher", "where", "age", "=", "value", "or", "age", "=", "value"], "question": "What are the names of the teachers who are aged either 32 or 33?", "question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "who", "are", "aged", "either", "32", "or", "33", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], 32.0, null], "or", [false, 2, [0, [0, 6, false], null], 33.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "390", "answer_text": [["Joseph Huts"], ["John Deloor"]], "trigger_words": ["Name"], "Prediction": "Name FROM teacher WHERE Age IN (32,33);"}
{"db_id": "course_teach", "query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1", "query_toks": ["SELECT", "Hometown", "FROM", "teacher", "ORDER", "BY", "Age", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "hometown", "from", "teacher", "order", "by", "age", "asc", "limit", "value"], "question": "What is the hometown of the youngest teacher?", "question_toks": ["What", "is", "the", "hometown", "of", "the", "youngest", "teacher", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "391", "answer_text": [["Farnworth Municipal Borough"]], "trigger_words": ["Hometown"], "Prediction": "Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher);"}
{"db_id": "course_teach", "query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1", "query_toks": ["SELECT", "Hometown", "FROM", "teacher", "ORDER", "BY", "Age", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "hometown", "from", "teacher", "order", "by", "age", "asc", "limit", "value"], "question": "Where is the youngest teacher from?", "question_toks": ["Where", "is", "the", "youngest", "teacher", "from", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "392", "answer_text": [["Farnworth Municipal Borough"]], "trigger_words": ["Hometown"], "Prediction": "Hometown FROM teacher ORDER BY Age ASC LIMIT 1;"}
{"db_id": "course_teach", "query": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown", "query_toks": ["SELECT", "Hometown", ",", "COUNT", "(", "*", ")", "FROM", "teacher", "GROUP", "BY", "Hometown"], "query_toks_no_value": ["select", "hometown", ",", "count", "(", "*", ")", "from", "teacher", "group", "by", "hometown"], "question": "Show different hometown of teachers and the number of teachers from each hometown.", "question_toks": ["Show", "different", "hometown", "of", "teachers", "and", "the", "number", "of", "teachers", "from", "each", "hometown", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "393", "answer_text": [["Blackrod Urban District", 1], ["Bolton County Borough", 1], ["Farnworth Municipal Borough", 1], ["Horwich Urban District", 1], ["Kearsley Urban District", 1], ["Little Lever Urban District", 1], ["Turton Urban District", 1]], "trigger_words": ["Hometown", "Number"], "Prediction": "Hometown, COUNT(*) FROM teacher GROUP BY Hometown;"}
{"db_id": "course_teach", "query": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown", "query_toks": ["SELECT", "Hometown", ",", "COUNT", "(", "*", ")", "FROM", "teacher", "GROUP", "BY", "Hometown"], "query_toks_no_value": ["select", "hometown", ",", "count", "(", "*", ")", "from", "teacher", "group", "by", "hometown"], "question": "For each hometown, how many teachers are there?", "question_toks": ["For", "each", "hometown", ",", "how", "many", "teachers", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "394", "answer_text": [["Blackrod Urban District", 1], ["Bolton County Borough", 1], ["Farnworth Municipal Borough", 1], ["Horwich Urban District", 1], ["Kearsley Urban District", 1], ["Little Lever Urban District", 1], ["Turton Urban District", 1]], "trigger_words": ["Hometown", "Number"], "Prediction": "Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown;"}
{"db_id": "course_teach", "query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Hometown", "FROM", "teacher", "GROUP", "BY", "Hometown", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "hometown", "from", "teacher", "group", "by", "hometown", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "List the most common hometown of teachers.", "question_toks": ["List", "the", "most", "common", "hometown", "of", "teachers", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "395", "answer_text": [["Turton Urban District"]], "trigger_words": ["Hometown"], "Prediction": "Hometown, COUNT(*) AS count \n FROM teacher \n GROUP BY Hometown \n ORDER BY count DESC \n LIMIT 1;"}
{"db_id": "course_teach", "query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Hometown", "FROM", "teacher", "GROUP", "BY", "Hometown", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "hometown", "from", "teacher", "group", "by", "hometown", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the most commmon hometowns for teachers?", "question_toks": ["What", "is", "the", "most", "commmon", "hometowns", "for", "teachers", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "396", "answer_text": [["Turton Urban District"]], "trigger_words": ["Hometown"], "Prediction": "Hometown, COUNT(*) FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1;"}
{"db_id": "course_teach", "query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2", "query_toks": ["SELECT", "Hometown", "FROM", "teacher", "GROUP", "BY", "Hometown", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "hometown", "from", "teacher", "group", "by", "hometown", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the hometowns shared by at least two teachers.", "question_toks": ["Show", "the", "hometowns", "shared", "by", "at", "least", "two", "teachers", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "397", "answer_text": [], "trigger_words": ["Hometown"], "Prediction": "Hometown\nFROM teacher\nGROUP BY Hometown\nHAVING COUNT(*) > 1;"}
{"db_id": "course_teach", "query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2", "query_toks": ["SELECT", "Hometown", "FROM", "teacher", "GROUP", "BY", "Hometown", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "hometown", "from", "teacher", "group", "by", "hometown", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the towns from which at least two teachers come from?", "question_toks": ["What", "are", "the", "towns", "from", "which", "at", "least", "two", "teachers", "come", "from", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "398", "answer_text": [], "trigger_words": ["Hometown"], "Prediction": "Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2;"}
{"db_id": "course_teach", "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID", "query_toks": ["SELECT", "T3.Name", ",", "T2.Course", "FROM", "course_arrange", "AS", "T1", "JOIN", "course", "AS", "T2", "ON", "T1.Course_ID", "=", "T2.Course_ID", "JOIN", "teacher", "AS", "T3", "ON", "T1.Teacher_ID", "=", "T3.Teacher_ID"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "course", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "join", "teacher", "as", "t3", "on", "t1", ".", "teacher_id", "=", "t3", ".", "teacher_id"], "question": "Show names of teachers and the courses they are arranged to teach.", "question_toks": ["Show", "names", "of", "teachers", "and", "the", "courses", "they", "are", "arranged", "to", "teach", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "399", "answer_text": [["Kearsley Brown", "Math"], ["Vicente Carretero", "Math"], ["Gustaaf Deloor", "Science"], ["Anne Walker", "History"], ["Anne Walker", "Bible"], ["Lucy Wong", "Music"]], "trigger_words": ["Name", "Course"], "Prediction": "teacher.Name, course.Course\n FROM course_arrange\n JOIN teacher ON course_arrange.Teacher_ID=teacher.Teacher_ID\n JOIN course ON course_arrange.Course_ID=course.Course_ID;"}
{"db_id": "course_teach", "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID", "query_toks": ["SELECT", "T3.Name", ",", "T2.Course", "FROM", "course_arrange", "AS", "T1", "JOIN", "course", "AS", "T2", "ON", "T1.Course_ID", "=", "T2.Course_ID", "JOIN", "teacher", "AS", "T3", "ON", "T1.Teacher_ID", "=", "T3.Teacher_ID"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "course", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "join", "teacher", "as", "t3", "on", "t1", ".", "teacher_id", "=", "t3", ".", "teacher_id"], "question": "What is the name of each teacher and what course they teach?", "question_toks": ["What", "is", "the", "name", "of", "each", "teacher", "and", "what", "course", "they", "teach", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "400", "answer_text": [["Kearsley Brown", "Math"], ["Vicente Carretero", "Math"], ["Gustaaf Deloor", "Science"], ["Anne Walker", "History"], ["Anne Walker", "Bible"], ["Lucy Wong", "Music"]], "trigger_words": ["Name", "Course"], "Prediction": "teacher.Name, course.Course\n FROM teacher\n JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID\n JOIN course ON course_arrange.Course_ID = course.Course_ID;"}
{"db_id": "course_teach", "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name", "query_toks": ["SELECT", "T3.Name", ",", "T2.Course", "FROM", "course_arrange", "AS", "T1", "JOIN", "course", "AS", "T2", "ON", "T1.Course_ID", "=", "T2.Course_ID", "JOIN", "teacher", "AS", "T3", "ON", "T1.Teacher_ID", "=", "T3.Teacher_ID", "ORDER", "BY", "T3.Name"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "course", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "join", "teacher", "as", "t3", "on", "t1", ".", "teacher_id", "=", "t3", ".", "teacher_id", "order", "by", "t3", ".", "name"], "question": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.", "question_toks": ["Show", "names", "of", "teachers", "and", "the", "courses", "they", "are", "arranged", "to", "teach", "in", "ascending", "alphabetical", "order", "of", "the", "teacher", "'s", "name", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "401", "answer_text": [["Anne Walker", "History"], ["Anne Walker", "Bible"], ["Gustaaf Deloor", "Science"], ["Kearsley Brown", "Math"], ["Lucy Wong", "Music"], ["Vicente Carretero", "Math"]], "trigger_words": ["Name", "Course"], "Prediction": "teacher.Name, course.Course\n FROM teacher\n JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID\n JOIN course ON course_arrange.Course_ID = course.Course_ID\n ORDER BY teacher.Name ASC;"}
{"db_id": "course_teach", "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name", "query_toks": ["SELECT", "T3.Name", ",", "T2.Course", "FROM", "course_arrange", "AS", "T1", "JOIN", "course", "AS", "T2", "ON", "T1.Course_ID", "=", "T2.Course_ID", "JOIN", "teacher", "AS", "T3", "ON", "T1.Teacher_ID", "=", "T3.Teacher_ID", "ORDER", "BY", "T3.Name"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "course", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "join", "teacher", "as", "t3", "on", "t1", ".", "teacher_id", "=", "t3", ".", "teacher_id", "order", "by", "t3", ".", "name"], "question": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?", "question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "and", "the", "courses", "they", "teach", "in", "ascending", "alphabetical", "order", "by", "the", "name", "of", "the", "teacher", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "402", "answer_text": [["Anne Walker", "History"], ["Anne Walker", "Bible"], ["Gustaaf Deloor", "Science"], ["Kearsley Brown", "Math"], ["Lucy Wong", "Music"], ["Vicente Carretero", "Math"]], "trigger_words": ["Name", "Course"], "Prediction": "teacher.Name, course.Course\n FROM teacher\n JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID\n JOIN course ON course_arrange.Course_ID = course.Course_ID\n ORDER BY teacher.Name ASC;"}
{"db_id": "course_teach", "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"", "query_toks": ["SELECT", "T3.Name", "FROM", "course_arrange", "AS", "T1", "JOIN", "course", "AS", "T2", "ON", "T1.Course_ID", "=", "T2.Course_ID", "JOIN", "teacher", "AS", "T3", "ON", "T1.Teacher_ID", "=", "T3.Teacher_ID", "WHERE", "T2.Course", "=", "``", "Math", "''"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "join", "teacher", "as", "t3", "on", "t1", ".", "teacher_id", "=", "t3", ".", "teacher_id", "where", "t2", ".", "course", "=", "value"], "question": "Show the name of the teacher for the math course.", "question_toks": ["Show", "the", "name", "of", "the", "teacher", "for", "the", "math", "course", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Math\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "403", "answer_text": [["Kearsley Brown"], ["Vicente Carretero"]], "trigger_words": ["Name"], "Prediction": "teacher.Name \n FROM course_arrange \n JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID \n JOIN course ON course_arrange.Course_ID = course.Course_ID \n WHERE course.Course = 'math';"}
{"db_id": "course_teach", "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"", "query_toks": ["SELECT", "T3.Name", "FROM", "course_arrange", "AS", "T1", "JOIN", "course", "AS", "T2", "ON", "T1.Course_ID", "=", "T2.Course_ID", "JOIN", "teacher", "AS", "T3", "ON", "T1.Teacher_ID", "=", "T3.Teacher_ID", "WHERE", "T2.Course", "=", "``", "Math", "''"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "join", "teacher", "as", "t3", "on", "t1", ".", "teacher_id", "=", "t3", ".", "teacher_id", "where", "t2", ".", "course", "=", "value"], "question": "What are the names of the people who teach math courses?", "question_toks": ["What", "are", "the", "names", "of", "the", "people", "who", "teach", "math", "courses", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Math\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "404", "answer_text": [["Kearsley Brown"], ["Vicente Carretero"]], "trigger_words": ["Name"], "Prediction": "teacher.Name \nFROM teacher \nJOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID \nJOIN course ON course_arrange.Course_ID = course.Course_ID \nWHERE course.Course = 'Math';"}
{"db_id": "course_teach", "query": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name", "query_toks": ["SELECT", "T2.Name", ",", "COUNT", "(", "*", ")", "FROM", "course_arrange", "AS", "T1", "JOIN", "teacher", "AS", "T2", "ON", "T1.Teacher_ID", "=", "T2.Teacher_ID", "GROUP", "BY", "T2.Name"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "group", "by", "t2", ".", "name"], "question": "Show names of teachers and the number of courses they teach.", "question_toks": ["Show", "names", "of", "teachers", "and", "the", "number", "of", "courses", "they", "teach", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "405", "answer_text": [["Anne Walker", 2], ["Gustaaf Deloor", 1], ["Kearsley Brown", 1], ["Lucy Wong", 1], ["Vicente Carretero", 1]], "trigger_words": ["Name", "Number"], "Prediction": "teacher.Name, COUNT(course_arrange.Course_ID) \n FROM teacher \n INNER JOIN course_arrange ON course_arrange.Teacher_ID=teacher.Teacher_ID \n GROUP BY teacher.Name;"}
{"db_id": "course_teach", "query": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name", "query_toks": ["SELECT", "T2.Name", ",", "COUNT", "(", "*", ")", "FROM", "course_arrange", "AS", "T1", "JOIN", "teacher", "AS", "T2", "ON", "T1.Teacher_ID", "=", "T2.Teacher_ID", "GROUP", "BY", "T2.Name"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "group", "by", "t2", ".", "name"], "question": "What are the names of the teachers and how many courses do they teach?", "question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "and", "how", "many", "courses", "do", "they", "teach", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "406", "answer_text": [["Anne Walker", 2], ["Gustaaf Deloor", 1], ["Kearsley Brown", 1], ["Lucy Wong", 1], ["Vicente Carretero", 1]], "trigger_words": ["Name", "Number"], "Prediction": "teacher.Name, COUNT(course_arrange.Course_ID)\n FROM teacher\n JOIN course_arrange ON course_arrange.Teacher_ID=teacher.Teacher_ID\n GROUP BY teacher.Name;"}
{"db_id": "course_teach", "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2", "query_toks": ["SELECT", "T2.Name", "FROM", "course_arrange", "AS", "T1", "JOIN", "teacher", "AS", "T2", "ON", "T1.Teacher_ID", "=", "T2.Teacher_ID", "GROUP", "BY", "T2.Name", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "group", "by", "t2", ".", "name", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show names of teachers that teach at least two courses.", "question_toks": ["Show", "names", "of", "teachers", "that", "teach", "at", "least", "two", "courses", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "407", "answer_text": [["Anne Walker"]], "trigger_words": ["Name"], "Prediction": "teacher.Name\nFROM course_arrange\nJOIN teacher ON course_arrange.Teacher_ID=teacher.Teacher_ID\nGROUP BY course_arrange.Teacher_ID\nHAVING COUNT(DISTINCT course_arrange.Course_ID) >= 2;"}
{"db_id": "course_teach", "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2", "query_toks": ["SELECT", "T2.Name", "FROM", "course_arrange", "AS", "T1", "JOIN", "teacher", "AS", "T2", "ON", "T1.Teacher_ID", "=", "T2.Teacher_ID", "GROUP", "BY", "T2.Name", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "group", "by", "t2", ".", "name", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the names of the teachers who teach at least two courses?", "question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "who", "teach", "at", "least", "two", "courses", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "408", "answer_text": [["Anne Walker"]], "trigger_words": ["Name"], "Prediction": "teacher.Name \nFROM teacher \nINNER JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID \nGROUP BY teacher.Teacher_ID \nHAVING COUNT(course_arrange.Course_ID) >= 2;"}
{"db_id": "course_teach", "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)", "query_toks": ["SELECT", "Name", "FROM", "teacher", "WHERE", "Teacher_id", "NOT", "IN", "(", "SELECT", "Teacher_id", "FROM", "course_arrange", ")"], "query_toks_no_value": ["select", "name", "from", "teacher", "where", "teacher_id", "not", "in", "(", "select", "teacher_id", "from", "course_arrange", ")"], "question": "List the names of teachers who have not been arranged to teach courses.", "question_toks": ["List", "the", "names", "of", "teachers", "who", "have", "not", "been", "arranged", "to", "teach", "courses", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[true, 8, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "409", "answer_text": [["Joseph Huts"], ["John Deloor"]], "trigger_words": ["Name"], "Prediction": "teacher.Name \n FROM teacher \n LEFT JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID \n WHERE course_arrange.Teacher_ID IS NULL;"}
{"db_id": "course_teach", "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)", "query_toks": ["SELECT", "Name", "FROM", "teacher", "WHERE", "Teacher_id", "NOT", "IN", "(", "SELECT", "Teacher_id", "FROM", "course_arrange", ")"], "query_toks_no_value": ["select", "name", "from", "teacher", "where", "teacher_id", "not", "in", "(", "select", "teacher_id", "from", "course_arrange", ")"], "question": "What are the names of the teachers whose courses have not been arranged?", "question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "whose", "courses", "have", "not", "been", "arranged", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[true, 8, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "410", "answer_text": [["Joseph Huts"], ["John Deloor"]], "trigger_words": ["Name"], "Prediction": "teacher.Name \nFROM teacher \nLEFT JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID \nWHERE course_arrange.Teacher_ID IS NULL;"}
{"db_id": "museum_visit", "query": "SELECT count(*) FROM visitor WHERE age  <  30", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "visitor", "WHERE", "age", "<", "30"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "visitor", "where", "age", "<", "value"], "question": "How many visitors below age 30 are there?", "question_toks": ["How", "many", "visitors", "below", "age", "30", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 4, [0, [0, 8, false], null], 30.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "411", "answer_text": [[3]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM visitor WHERE Age < 30;"}
{"db_id": "museum_visit", "query": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC", "query_toks": ["SELECT", "name", "FROM", "visitor", "WHERE", "Level_of_membership", ">", "4", "ORDER", "BY", "Level_of_membership", "DESC"], "query_toks_no_value": ["select", "name", "from", "visitor", "where", "level_of_membership", ">", "value", "order", "by", "level_of_membership", "desc"], "question": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.", "question_toks": ["Find", "the", "names", "of", "the", "visitors", "whose", "membership", "level", "is", "higher", "than", "4", ",", "and", "order", "the", "results", "by", "the", "level", "from", "high", "to", "low", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 7, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 7, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "412", "answer_text": [["Gonzalo Higua\u00edn "], ["Fernando Gago"], ["Guti Midfielder"]], "trigger_words": ["Name"], "Prediction": "Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC;"}
{"db_id": "museum_visit", "query": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4", "query_toks": ["SELECT", "avg", "(", "age", ")", "FROM", "visitor", "WHERE", "Level_of_membership", "<", "=", "4"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "visitor", "where", "level_of_membership", "<", "=", "value"], "question": "What is the average age of the visitors whose membership level is not higher than 4?", "question_toks": ["What", "is", "the", "average", "age", "of", "the", "visitors", "whose", "membership", "level", "is", "not", "higher", "than", "4", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 8, false], null]]]], "where": [[false, 6, [0, [0, 7, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "413", "answer_text": [[36.0]], "trigger_words": ["Average Number"], "Prediction": "AVG(Age) FROM visitor WHERE Level_of_membership <= 4;"}
{"db_id": "museum_visit", "query": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC", "query_toks": ["SELECT", "name", ",", "Level_of_membership", "FROM", "visitor", "WHERE", "Level_of_membership", ">", "4", "ORDER", "BY", "age", "DESC"], "query_toks_no_value": ["select", "name", ",", "level_of_membership", "from", "visitor", "where", "level_of_membership", ">", "value", "order", "by", "age", "desc"], "question": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.", "question_toks": ["Find", "the", "name", "and", "membership", "level", "of", "the", "visitors", "whose", "membership", "level", "is", "higher", "than", "4", ",", "and", "sort", "by", "their", "age", "from", "old", "to", "young", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 3, [0, [0, 7, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 8, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "414", "answer_text": [["Fernando Gago", 6], ["Gonzalo Higua\u00edn ", 8], ["Guti Midfielder", 5]], "trigger_words": ["Name", "Level Of Membership"], "Prediction": "Name, Level_of_membership \n FROM visitor \n WHERE Level_of_membership > 4 \n ORDER BY Age DESC;"}
{"db_id": "museum_visit", "query": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1", "query_toks": ["SELECT", "museum_id", ",", "name", "FROM", "museum", "ORDER", "BY", "num_of_staff", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "museum_id", ",", "name", "from", "museum", "order", "by", "num_of_staff", "desc", "limit", "value"], "question": "Find the id and name of the museum that has the most staff members?", "question_toks": ["Find", "the", "id", "and", "name", "of", "the", "museum", "that", "has", "the", "most", "staff", "members", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 3, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "415", "answer_text": [[1, "Plaza Museum"]], "trigger_words": ["Museum Id", "Name"], "Prediction": "Museum_ID, Name \nFROM museum \nWHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum);"}
{"db_id": "museum_visit", "query": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009", "query_toks": ["SELECT", "avg", "(", "num_of_staff", ")", "FROM", "museum", "WHERE", "open_year", "<", "2009"], "query_toks_no_value": ["select", "avg", "(", "num_of_staff", ")", "from", "museum", "where", "open_year", "<", "value"], "question": "Find the average number of staff working for the museums that were open before 2009.", "question_toks": ["Find", "the", "average", "number", "of", "staff", "working", "for", "the", "museums", "that", "were", "open", "before", "2009", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 3, false], null]]]], "where": [[false, 4, [0, [0, 4, false], null], 2009.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "416", "answer_text": [[31.333333333333332]], "trigger_words": ["Average Number"], "Prediction": "AVG(Num_of_Staff) FROM museum WHERE Open_Year < 2009;"}
{"db_id": "museum_visit", "query": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'", "query_toks": ["SELECT", "Num_of_Staff", ",", "Open_Year", "FROM", "museum", "WHERE", "name", "=", "'Plaza", "Museum", "'"], "query_toks_no_value": ["select", "num_of_staff", ",", "open_year", "from", "museum", "where", "name", "=", "value"], "question": "What are the opening year and staff number of the museum named Plaza Museum?", "question_toks": ["What", "are", "the", "opening", "year", "and", "staff", "number", "of", "the", "museum", "named", "Plaza", "Museum", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Plaza Museum\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "417", "answer_text": [[62, "2000"]], "trigger_words": ["Num Of Staff", "Open Year"], "Prediction": "Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum';"}
{"db_id": "museum_visit", "query": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)", "query_toks": ["SELECT", "name", "FROM", "museum", "WHERE", "num_of_staff", ">", "(", "SELECT", "min", "(", "num_of_staff", ")", "FROM", "museum", "WHERE", "open_year", ">", "2010", ")"], "query_toks_no_value": ["select", "name", "from", "museum", "where", "num_of_staff", ">", "(", "select", "min", "(", "num_of_staff", ")", "from", "museum", "where", "open_year", ">", "value", ")"], "question": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.", "question_toks": ["find", "the", "names", "of", "museums", "which", "have", "more", "staff", "than", "the", "minimum", "staff", "number", "of", "all", "museums", "opened", "after", "2010", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 2010.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "418", "answer_text": [["Plaza Museum"], ["Capital Plaza Museum"], ["Jefferson Development Museum"]], "trigger_words": ["Name"], "Prediction": "Name \nFROM museum \nWHERE Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > 2010);"}
{"db_id": "museum_visit", "query": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1", "query_toks": ["SELECT", "t1.id", ",", "t1.name", ",", "t1.age", "FROM", "visitor", "AS", "t1", "JOIN", "visit", "AS", "t2", "ON", "t1.id", "=", "t2.visitor_id", "GROUP", "BY", "t1.id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", ",", "t1", ".", "age", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "visitor_id", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "value"], "question": "find the id, name and age for visitors who visited some museums more than once.", "question_toks": ["find", "the", "id", ",", "name", "and", "age", "for", "visitors", "who", "visited", "some", "museums", "more", "than", "once", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "419", "answer_text": [[3, "Arjen Robben", 27], [5, "Fernando Gago", 36], [6, "Rafael van der Vaart", 25]], "trigger_words": ["Id", "Name", "Age"], "Prediction": "visitor.ID, visitor.Name, visitor.Age\nFROM visitor\nINNER JOIN visit ON visit.visitor_ID = visitor.ID\nGROUP BY visit.visitor_ID\nHAVING COUNT(DISTINCT visit.Museum_ID) > 1;"}
{"db_id": "museum_visit", "query": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1", "query_toks": ["SELECT", "t2.visitor_id", ",", "t1.name", ",", "t1.Level_of_membership", "FROM", "visitor", "AS", "t1", "JOIN", "visit", "AS", "t2", "ON", "t1.id", "=", "t2.visitor_id", "GROUP", "BY", "t2.visitor_id", "ORDER", "BY", "sum", "(", "t2.Total_spent", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "visitor_id", ",", "t1", ".", "name", ",", "t1", ".", "level_of_membership", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "visitor_id", "group", "by", "t2", ".", "visitor_id", "order", "by", "sum", "(", "t2", ".", "total_spent", ")", "desc", "limit", "value"], "question": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?", "question_toks": ["What", "are", "the", "id", ",", "name", "and", "membership", "level", "of", "visitors", "who", "have", "spent", "the", "largest", "amount", "of", "money", "in", "total", "in", "all", "museum", "tickets", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [4, 12, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "420", "answer_text": [["3", "Arjen Robben", 1]], "trigger_words": ["Visitor Id", "Name", "Level Of Membership"], "Prediction": "visitor.ID, visitor.Name, visitor.Level_of_membership \n FROM visitor \n JOIN visit ON visitor.ID = visit.visitor_ID \n GROUP BY visitor.ID \n ORDER BY SUM(Total_spent) DESC \n LIMIT 1;"}
{"db_id": "museum_visit", "query": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t2.Museum_ID", ",", "t1.name", "FROM", "museum", "AS", "t1", "JOIN", "visit", "AS", "t2", "ON", "t1.Museum_ID", "=", "t2.Museum_ID", "GROUP", "BY", "t2.Museum_ID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "museum_id", ",", "t1", ".", "name", "from", "museum", "as", "t1", "join", "visit", "as", "t2", "on", "t1", ".", "museum_id", "=", "t2", ".", "museum_id", "group", "by", "t2", ".", "museum_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the id and name of the museum visited most times?", "question_toks": ["What", "are", "the", "id", "and", "name", "of", "the", "museum", "visited", "most", "times", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "421", "answer_text": [[2, "Capital Plaza Museum"]], "trigger_words": ["Museum Id", "Name"], "Prediction": "museum.Museum_ID, museum.Name\n FROM museum\n JOIN visit ON museum.Museum_ID = visit.Museum_ID\n GROUP BY museum.Museum_ID\n ORDER BY SUM(visit.Num_of_Ticket) DESC\n LIMIT 1;"}
{"db_id": "museum_visit", "query": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)", "query_toks": ["SELECT", "name", "FROM", "museum", "WHERE", "Museum_ID", "NOT", "IN", "(", "SELECT", "museum_id", "FROM", "visit", ")"], "query_toks_no_value": ["select", "name", "from", "museum", "where", "museum_id", "not", "in", "(", "select", "museum_id", "from", "visit", ")"], "question": "What is the name of the museum that had no visitor yet?", "question_toks": ["What", "is", "the", "name", "of", "the", "museum", "that", "had", "no", "visitor", "yet", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "422", "answer_text": [["Jefferson Development Museum"], ["RiverPark Museum"], ["Place Tower Museum"], ["Central City District Residential Museum"]], "trigger_words": ["Name"], "Prediction": "museum.Name \nFROM museum \nLEFT JOIN visit ON museum.Museum_ID = visit.Museum_ID \nWHERE visit.Museum_ID IS NULL;"}
{"db_id": "museum_visit", "query": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1", "query_toks": ["SELECT", "t1.name", ",", "t1.age", "FROM", "visitor", "AS", "t1", "JOIN", "visit", "AS", "t2", "ON", "t1.id", "=", "t2.visitor_id", "ORDER", "BY", "t2.num_of_ticket", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "age", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "visitor_id", "order", "by", "t2", ".", "num_of_ticket", "desc", "limit", "value"], "question": "Find the name and age of the visitor who bought the most tickets at once.", "question_toks": ["Find", "the", "name", "and", "age", "of", "the", "visitor", "who", "bought", "the", "most", "tickets", "at", "once", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "423", "answer_text": [["Arjen Robben", 27]], "trigger_words": ["Name", "Age"], "Prediction": "visitor.Name, visitor.Age\n FROM visit\n JOIN visitor ON visit.visitor_ID = visitor.ID\n WHERE visit.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit)"}
{"db_id": "museum_visit", "query": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit", "query_toks": ["SELECT", "avg", "(", "num_of_ticket", ")", ",", "max", "(", "num_of_ticket", ")", "FROM", "visit"], "query_toks_no_value": ["select", "avg", "(", "num_of_ticket", ")", ",", "max", "(", "num_of_ticket", ")", "from", "visit"], "question": "What are the average and maximum number of tickets bought in all visits?", "question_toks": ["What", "are", "the", "average", "and", "maximum", "number", "of", "tickets", "bought", "in", "all", "visits", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 11, false], null]], [1, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "424", "answer_text": [[10.5, 24]], "trigger_words": ["Average Number", "Maximal Number"], "Prediction": "AVG(Num_of_Ticket), MAX(Num_of_Ticket) FROM visit;"}
{"db_id": "museum_visit", "query": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1", "query_toks": ["SELECT", "sum", "(", "t2.Total_spent", ")", "FROM", "visitor", "AS", "t1", "JOIN", "visit", "AS", "t2", "ON", "t1.id", "=", "t2.visitor_id", "WHERE", "t1.Level_of_membership", "=", "1"], "query_toks_no_value": ["select", "sum", "(", "t2", ".", "total_spent", ")", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "visitor_id", "where", "t1", ".", "level_of_membership", "=", "value"], "question": "What is the total ticket expense of the visitors whose membership level is 1?", "question_toks": ["What", "is", "the", "total", "ticket", "expense", "of", "the", "visitors", "whose", "membership", "level", "is", "1", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null]]}, "select": [false, [[4, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "425", "answer_text": [[570.84]], "trigger_words": ["Total Number"], "Prediction": "SUM(Total_spent) FROM visit JOIN visitor ON visit.visitor_ID=visitor.ID WHERE Level_of_membership=1;"}
{"db_id": "museum_visit", "query": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011", "query_toks": ["SELECT", "t1.name", "FROM", "visitor", "AS", "t1", "JOIN", "visit", "AS", "t2", "ON", "t1.id", "=", "t2.visitor_id", "JOIN", "museum", "AS", "t3", "ON", "t3.Museum_ID", "=", "t2.Museum_ID", "WHERE", "t3.open_year", "<", "2009", "INTERSECT", "SELECT", "t1.name", "FROM", "visitor", "AS", "t1", "JOIN", "visit", "AS", "t2", "ON", "t1.id", "=", "t2.visitor_id", "JOIN", "museum", "AS", "t3", "ON", "t3.Museum_ID", "=", "t2.Museum_ID", "WHERE", "t3.open_year", ">", "2011"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "visitor_id", "join", "museum", "as", "t3", "on", "t3", ".", "museum_id", "=", "t2", ".", "museum_id", "where", "t3", ".", "open_year", "<", "value", "intersect", "select", "t1", ".", "name", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "visitor_id", "join", "museum", "as", "t3", "on", "t3", ".", "museum_id", "=", "t2", ".", "museum_id", "where", "t3", ".", "open_year", ">", "value"], "question": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?", "question_toks": ["What", "is", "the", "name", "of", "the", "visitor", "who", "visited", "both", "a", "museum", "opened", "before", "2009", "and", "a", "museum", "opened", "after", "2011", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 4, [0, [0, 4, false], null], 2009.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 2011.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "426", "answer_text": [["Fernando Gago"]], "trigger_words": ["Name"], "Prediction": "visitor.Name\nFROM visitor\nINNER JOIN visit ON visit.visitor_ID = visitor.ID\nINNER JOIN museum ON visit.Museum_ID = museum.Museum_ID\nWHERE museum.Open_Year < 2009 AND museum.Open_Year > 2011\nGROUP BY visitor.Name\nHAVING COUNT(DISTINCT museum.Museum_ID) = 2;"}
{"db_id": "museum_visit", "query": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "visitor", "WHERE", "id", "NOT", "IN", "(", "SELECT", "t2.visitor_id", "FROM", "museum", "AS", "t1", "JOIN", "visit", "AS", "t2", "ON", "t1.Museum_ID", "=", "t2.Museum_ID", "WHERE", "t1.open_year", ">", "2010", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "visitor", "where", "id", "not", "in", "(", "select", "t2", ".", "visitor_id", "from", "museum", "as", "t1", "join", "visit", "as", "t2", "on", "t1", ".", "museum_id", "=", "t2", ".", "museum_id", "where", "t1", ".", "open_year", ">", "value", ")"], "question": "Find the number of visitors who did not visit any museum opened after 2010.", "question_toks": ["Find", "the", "number", "of", "visitors", "who", "did", "not", "visit", "any", "museum", "opened", "after", "2010", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 2010.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "427", "answer_text": [[3]], "trigger_words": ["Number"], "Prediction": "COUNT(DISTINCT visitor_ID) FROM visit\nWHERE visitor_ID NOT IN (\n    SELECT visitor_ID FROM visit\n    JOIN museum ON visit.Museum_ID = museum.Museum_ID\n    WHERE museum.Open_Year > 2010\n)"}
{"db_id": "museum_visit", "query": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "museum", "WHERE", "open_year", ">", "2013", "OR", "open_year", "<", "2008"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "museum", "where", "open_year", ">", "value", "or", "open_year", "<", "value"], "question": "How many museums were opened after 2013 or before 2008?", "question_toks": ["How", "many", "museums", "were", "opened", "after", "2013", "or", "before", "2008", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 2013.0, null], "or", [false, 4, [0, [0, 4, false], null], 2008.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "428", "answer_text": [[1]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM museum WHERE Open_Year > 2013 OR Open_Year < 2008;"}
{"db_id": "wta_1", "query": "SELECT count(*) FROM players", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "players"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "players"], "question": "Find the total number of players.", "question_toks": ["Find", "the", "total", "number", "of", "players", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "429", "answer_text": [[20662]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM players;"}
{"db_id": "wta_1", "query": "SELECT count(*) FROM players", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "players"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "players"], "question": "How many players are there?", "question_toks": ["How", "many", "players", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "430", "answer_text": [[20662]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM players;"}
{"db_id": "wta_1", "query": "SELECT count(*) FROM matches", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "matches"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "matches"], "question": "Find the total number of matches.", "question_toks": ["Find", "the", "total", "number", "of", "matches", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "431", "answer_text": [[278]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM matches;"}
{"db_id": "wta_1", "query": "SELECT count(*) FROM matches", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "matches"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "matches"], "question": "Count the number of matches.", "question_toks": ["Count", "the", "number", "of", "matches", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "432", "answer_text": [[278]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM matches;"}
{"db_id": "wta_1", "query": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'", "query_toks": ["SELECT", "first_name", ",", "birth_date", "FROM", "players", "WHERE", "country_code", "=", "'USA", "'"], "query_toks_no_value": ["select", "first_name", ",", "birth_date", "from", "players", "where", "country_code", "=", "value"], "question": "List the first name and birth date of all players from the country with code USA.", "question_toks": ["List", "the", "first", "name", "and", "birth", "date", "of", "all", "players", "from", "the", "country", "with", "code", "USA", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "433", "answer_text": [["Jolene", 19680831], ["Lisa", 19730810], ["Meilen", 19780117], ["Serena", 19810926], ["Chanda", 19760218], ["Amy", 19720919], ["Tara", 19770526], ["Meghann", 19790413], ["Erika", 19721014], ["Lilia", 19780407], ["Jane", 19740621], ["Jennifer", 19760329], ["Alexandra", 19801215], ["Linda", 19710211], ["Brie", 19800121], ["Corina", 19780126], ["Marissa", 19800623], ["Lindsay", 19760608], ["Kathleen", 19461027], ["Geri", ""], ["Rosie", 19480916], ["Joan", ""], ["Mary Ann", 19461125], ["Billie Jean", 19431122], ["Patti", 19491221], ["Sharon", 19520224], ["Mona", 19481128], ["Ann", 19510504], ["Chris", 19541221], ["Janet", 19530806], ["Jill", 19540519], ["Julie", 19451208], ["Ann", 19550822], ["Joy", 19540519], ["Pam", 19510417], ["Peggy", 19490202], ["Martina", 19561018], ["Laura", 19490504], ["Sally", 19550325], ["Cecilia", 19470524], ["Rene", 19570512], ["Beth", 19570613], ["Patricia", 19511125], ["Kim", 19561011], ["Betsy", 19561023], ["Barbara", 19570402], ["Dianne", 19580811], ["Felicia", 19570720], ["Lindsay", 19550124], ["Lele", 19560910], ["Diane", 19550615], ["Rosalyn", 19601102], ["Marcie", 19530910], ["Pam", 19620704], ["Barbara", 19570501], ["Candy", 19550324], ["Bonnie", 19630911], ["Barbara", 19611022], ["Anne", 19590701], ["Paula", 19570110], ["Nancy", 19550522], ["Andrea", 19650604], ["Anne", 19610928], ["Leslie", 19570312], ["Kathy", 19591203], ["Mary Lou", 19610806], ["Sherry", 19590606], ["Lea", 19590120], ["Kim", 19571222], ["Tracy", 19621212], ["Kate", 19521025], ["Wendy", 19600929], ["Andrea", 19640118], ["Zina", 19631116], ["Susan", 19640628], ["Camille", 19660602], ["Alycia", 19610218], ["Jane", 19531206], ["Vicki", 19620925], ["Heather", 19610611], ["Robin", 19631210], ["Gigi", 19640222], ["Kathy", 19670324], ["Anna Maria", 19601022], ["Beth", 19640528], ["Lori", 19631218], ["Laura", 19630317], ["Kim", 19570928], ["Shelley", 19630619], ["Barbara", 19640703], ["Michaela", 19660227], ["Shawn", 19671221], ["Elise", 19620305], ["Sandy", 19581013], ["Linda", 19691224], ["Lisa", 19620714], ["Terry", 19551128], ["Ann", 19591031], ["Lisa", 19651016], ["Molly", 19650312], ["Hu", 19630416], ["Dee Ann", 19620611], ["Jamie", 19620121], ["Beverly", 19650909], ["Louise", 19620107], ["Cammy", 19681011], ["Susan", 19590415], ["Caryn", 19610314], ["Tina", 19521124], ["Terry", 19661218], ["Marianne", 19671017], ["Gretchen", 19640207], ["Kathrin", 19621128], ["Pamela", 19630703], ["Lindsay", 19620731], ["Jennifer", 19670702], ["Jennifer", 19620426], ["Carol", 19621009], ["Jill", 19640904], ["Elizabeth", 19680826], ["Pam", 19631220], ["Melissa", 19680411], ["Cynthia", 19640326], ["Amy", 19690902], ["Sherri", 19640202], ["Stephanie", 19650206], ["Patty", 19650331], ["Penny", 19640411], ["Wendy", 19640420], ["Katrina", 19680805], ["Leigh Anne", 19641214], ["Donna", 19710705], ["Jennifer", 19690226], ["Andrea", 19710930], ["Anna", 19660117], ["Kimberly", 19730327], ["Laxmi", 19721109], ["Kathy", 19650825], ["Halle", 19690805], ["Ronni", 19660510], ["Ann", 19701013], ["Mary Joe", 19710819], ["Jeri", 19701211], ["Carrie", 19720428], ["Shaun", 19681213], ["Audra", 19711117], ["Stacey", 19701113], ["Tami", 19681113], ["Stacey", 19680319], ["Ginger", 19680914], ["Monica", 19731202], ["Patty", 19680118], ["Nicole", 19690826], ["Jessica", 19700913], ["Kimberly", 19711020], ["Stephanie", 19691105], ["Debbie", 19700825], ["Susan", 19701205], ["Caroline", 19660825], ["Elly", 19690825], ["Meredith", 19710428], ["Sandra", 19740910], ["Anne", 19770119], ["Lindsay", 19770628], ["Venus", 19800617], ["Samantha", 19790117], ["Karin", 19771210], ["Jill", 19740704], ["Bunny", 19570905], ["Rayni", 19560524], ["Jennifer", 19810210], ["Holly", 19790210], ["Nancy", 19420823], ["Dorothy", 19250703], ["Kristy", 19500815], ["Valerie", 19490629], ["Linda", 19501021], ["Peaches", 19490416], ["Tory Ann", 19420808], ["Pamela", 19500312], ["Denise", 19500731], ["Wendy", 19470331], ["Becky", ""], ["Nancy", 19520731], ["Barbara", 19540304], ["Kristien", 19520725], ["Janet", 19530628], ["Daryl", 19540507], ["Ching Ling", 19481008], ["Robin", 19580513], ["Patricia", 19410811], ["Laurie", 19551104], ["Donna", 19541109], ["Linda", 19521114], ["Julie", 19480113], ["Jeanne", 19571005], ["Laurie", 19550614], ["Kathy", 19560618], ["Janice", 19520710], ["Kathy", 19561123], ["Jane", 19530810], ["Marita", 19560219], ["Susie", 19570916], ["Mary", 19500721], ["Mary", 19540907], ["Mary", 19570312], ["Carrie", 19550822], ["Ruta", 19551118], ["Mareen", 19600815], ["Robin", 19560413], ["Caroline", 19601104], ["Emilse", 19571219], ["Kay", 19570925], ["Zenda", 19591212], ["Betty Ann", 19500226], ["Jeanne", 19591207], ["Linda", 19610605], ["Julie", 19620205], ["Stacy", 19590405], ["Dana", 19591126], ["Roberta", 19581103], ["Joyce", 19580503], ["Andrea", 19550406], ["Trey", 19591127], ["Jenny", 19650419], ["Leigh Anne", 19640108], ["Joanne", 19541030], ["Michelle", 19670627], ["Nancy", 19580418], ["Felicia", 19611231], ["Jean", 19581025], ["Barbi", 19640914], ["Amy", 19650405], ["Jill", 19600623], ["Ginny", 19661115], ["Grace", 19680416], ["Melissa", 19690624], ["Debbie", 19670809], ["Eileen", 19661201], ["Maeve", 19641116], ["Kathleen", 19610905], ["Niurka", 19690419], ["Cecilia", 19630628], ["Kristin", 19590827], ["Kate", 19630111], ["Liezel", 19760821], ["Mashona", 19760531], ["Stephanie", 19460308], ["Marilyn", 19480308], ["Mimi", ""], ["Alice", 19421122], ["Pixie", ""], ["Betty", 19250415], ["Nadine", 19441026], ["Victoria", ""], ["Stephanie", 19500703], ["Carole", 19430624], ["Gail", 19510421], ["Patricia", 19400101], ["Eliza", 19530102], ["Patricia", 19450828], ["Sandy", 19560501], ["Tam", 19520127], ["Wendy", 19520430], ["Kathy", 19461218], ["Lisa", ""], ["Judy", 19490816], ["Roberta", 19560702], ["Mary", 19450925], ["Aleida", 19550616], ["Erin", 19550720], ["Stephanie", 19560325], ["Karen", 19421211], ["Sheila", 19580222], ["Susie", 19620329], ["Micki", 19601129], ["Heather", 19610712], ["Jane", 19620121], ["Diane", 19611105], ["Shawna", ""], ["Tammy", 19651012], ["Tracy", 19791006], ["Allison", 19801114], ["Ansley", 19820105], ["Dawn", 19760529], ["Kristen", 19840628], ["Vija", ""], ["Farel", ""], ["Connie", 19510521], ["Marjorie", 19510503], ["Peggy", ""], ["Tish", ""], ["Jade", ""], ["Carole", ""], ["Emilie", ""], ["Diane", ""], ["Mary", ""], ["Ann", ""], ["Tina", ""], ["Maricaye", ""], ["Roylee", 19490526], ["Nancy", 19330421], ["Louise", 19470321], ["Mimi", 19390818], ["Raymonde", ""], ["Carol", ""], ["Joyce", 19420223], ["Pat", 19340819], ["Jane", 19510220], ["Darlene", 19360106], ["Pam", 19501025], ["Carol", ""], ["Emilie", ""], ["Margaret", 19500413], ["Pam", ""], ["Susan", 19531113], ["Shari", ""], ["Sue", 19540603], ["Jeanne", 19350721], ["Kathy", 19521219], ["Gertrude", 19230908], ["Judy", 19430402], ["Brenda", 19540211], ["Patricia", 19580516], ["Marcy", ""], ["Sally", ""], ["Lynne", 19580328], ["Margaret", 19530105], ["Renee", 19340819], ["Carol", 19501022], ["Chris", 19561026], ["Kelly", 19620418], ["Lisa", 19590305], ["Lucy", ""], ["Jody", 19560704], ["Phyllis", 19570326], ["Linda", 19631106], ["Karen", 19640323], ["Eleni", 19671023], ["Lisa", 19680718], ["Sandra", 19690903], ["Shannan", 19700519], ["Julie", 19760424], ["Nicole", 19760203], ["Angela", 19720404], ["Keri", 19740501], ["Jacqueline", 19801126], ["Laura", 19810512], ["Jean", 19740607], ["Melissa", 19820606], ["Amber", 19840706], ["Sarah", 19811106], ["Ashley", 19850502], ["Bethanie", 19850323], ["Allison", 19860410], ["Bea", 19801128], ["Alexandra", 19850902], ["Carly", 19861126], ["Theresa", 19850310], ["Gabriela", 19800607], ["Shenay", 19840706], ["Angela", 19840927], ["Kelly", 19830318], ["Teryn", 19781212], ["Abigail", 19810712], ["Jessica", 19871110], ["Jamea", 19860907], ["Mary", 19881218], ["Tiffany", 19800314], ["Alexa", 19890910], ["Vania", 19890303], ["Ahsha", 19850321], ["Lauren", 19891001], ["Varvara", 19860521], ["Madison", 19900403], ["Audra", 19860421], ["Ashley", 19890620], ["Julie", 19790104], ["Melanie", 19910923], ["Kristie", 19920615], ["Gail", 19910605], ["Asia", 19910404], ["Coco", 19911206], ["Christina", 19920511], ["Mallory", 19900718], ["Lauren", 19910110], ["Hilary", 19881117], ["Sloane", 19930320], ["Alison", 19900703], ["Jamie", 19900108], ["Chelsey", 19900829], ["Beatrice", 19920406], ["Shelby", 19921013], ["Irina", 19900504], ["Lauren", 19931009], ["Madison", 19950217], ["Nicole", 19740801], ["Michelle", 19731228], ["Akiko", 19720214], ["Joy", 19621006], ["Caryn", 19711005], ["Luanne", 19721228], ["Julie", 19720510], ["Rachel Ann", 19721119], ["Judy", 19620511], ["Noelle", 19701218], ["Alysia", 19710131], ["Laura", 19670517], ["Amanda", 19780620], ["Julie", 19721007], ["Ann", 19670822], ["Melissa", 19720621], ["Jan", 19531223], ["Mary", 19620121], ["Sylvia", 19640127], ["Gail", 19470116], ["Diedre", 19711011], ["Caroline", 19651129], ["Kerry", 19501002], ["Kathy", 19670904], ["Stella", 19690309], ["Karen", 19680705], ["Cynthia", 19580614], ["Marlie", 19501120], ["Rona", 19690708], ["Kylie", 19610519], ["Helena", 19610201], ["Cheryl", 19640503], ["Jennifer", 19690715], ["Elizabeth", 19660406], ["Anne", 19660205], ["Alix", 19721022], ["Erica", 19690716], ["Stephanie", 19700424], ["Jill", 19671011], ["Jane", 19630123], ["Kathy", ""], ["Jean", 19700510], ["Ann", 19651028], ["Kirsten", 19690327], ["Wendy", 19600327], ["Nicole", 19610906], ["Vicki", 19570325], ["Mary Ann", 19560424], ["Christine", 19680118], ["Jennifer", 19600326], ["Julie", 19570621], ["Penny", 19550826], ["Cathy", 19580310], ["June", 19630619], ["Pam", 19750701], ["Stephanie", 19791023], ["Jane", ""], ["Gretchen", 19650626], ["Jane", 19660324], ["Holyn", 19731012], ["Kristi", 19690910], ["Linley", 19620501], ["Shelby", 19500626], ["Andrea", 19700128], ["Kathy", 19591224], ["Danielle", 19700322], ["Carol", 19610705], ["Jean", 19550606], ["Lori", 19650330], ["Edie", ""], ["Robin", ""], ["Kerri", 19681001], ["Lisa", 19700324], ["Mary", 19660508], ["Carol", 19591113], ["Katie", 19750429], ["Michele", 19660606], ["Shannon", 19670527], ["Gina", 19490515], ["Clare", ""], ["Cathleen", 19570316], ["Janice", 19510522], ["Betsy", 19540503], ["Lucia", 19601022], ["Wendy", 19680715], ["Allyson", 19631007], ["Debbie", 19620722], ["Marsha", ""], ["Linda", 19690503], ["Page", 19740622], ["Heather", 19711011], ["Gigi", 19701007], ["Marilda", 19650222], ["Christine", 19720714], ["Cynthia Ann", 19521114], ["Jenny", 19710226], ["Shelley", 19650421], ["Jackie", 19640104], ["Stephanie", ""], ["Michelle", 19610116], ["Genevieve", 19630819], ["Glynis", ""], ["Ann", 19520526], ["Allegra", ""], ["Cricket", 19610507], ["Bunny", 19460729], ["Holly Ann", 19701218], ["Amy", 19721112], ["Kathy", 19631005], ["Monique", 19841006], ["Erica", 19721128], ["Susan", 19651125], ["Rita", 19601018], ["Nina", 19610207], ["Donna", 19591005], ["Cissie", 19600108], ["Nancy", 19640804], ["Erika", 19631007], ["Cristina", 19770210], ["Terri", 19680118], ["Patty", 19730928], ["Katrina", 19681104], ["Katrina", 19800530], ["Anne", 19810420], ["Cory Ann", 19850122], ["Nicole", 19861103], ["Diana", 19790704], ["Tanner", 19840803], ["Shadisha", 19850712], ["Leslie", 19870525], ["Neha", 19860206], ["Megan", 19850719], ["Elizabeth", 19880603], ["Jewel", 19810910], ["Lindsey", 19851118], ["Raquel", 19821208], ["Brittany", 19910919], ["Kirsten", 19880814], ["Chieh Yu", 19920114], ["Alexis", 19830331], ["Amanda", 19861204], ["Catherine", 19940409], ["Tetiana", 19840904], ["Julia", 19910909], ["Alexandra", 19880214], ["Zoe Gwen", 19930921], ["Julia", 19890323], ["Jessica", 19940224], ["Grace", 19940506], ["Chi Chi", 19920705], ["Nicole", 19930303], ["Mallory", 19910128], ["Jennifer", 19860922], ["Samantha", 19950218], ["Victoria", 19951130], ["Maria", 19891126], ["Anne", 19850828], ["Megan", 19850311], ["Lena", 19881115], ["Katie", 19830503], ["Courtney B", 19920325], ["Kimberly", 19890509], ["Jacqueline", 19910830], ["Ester", 19930704], ["Eleanor", 19880626], ["Yasmin", 19880504], ["Anne Liz", 19960526], ["Alessondra", 19900906], ["Ryann", 19960723], ["Lucie", 19720406], ["Kelly S", 19730905], ["Kristina", 19790811], ["Wendy", 19750131], ["Julie", 19751016], ["Aurandrea", 19791121], ["Brandis", 19800213], ["Megan", 19781224], ["Alyssa", 19821119], ["Jennifer", 19780807], ["Jennifer", 19840217], ["Candice", 19820331], ["Michelle", 19780119], ["Kristy", 19790517], ["Andrea", 19881006], ["Lauren", 19800829], ["Iris", 19850613], ["Jennifer", 19810718], ["Ali", 19870923], ["Nicole", 19851124], ["Kaysie", 19800411], ["Krystina", 19880510], ["Riza", 19860210], ["Sarah", 19810627], ["Megan", 19830326], ["Story", 19830502], ["Christina", 19801127], ["Stacia", 19850921], ["Kaitlyn", 19920113], ["Chloe", 19900201], ["Amanda", 19870902], ["Kelcy", 19890411], ["June", 19950619], ["Krista", 19940914], ["Adria", 19791221], ["Susie", 19721210], ["Kori", 19731101], ["Elizabeth", 19770823], ["Agnes", 19800801], ["Courtenay", 19770227], ["Dee Dee", 19790211], ["Aurora", 19741107], ["Keirsten", 19730917], ["Ingrid", 19730602], ["Stephanie", 19761207], ["Sara", 19770113], ["Lori", 19810731], ["Milangela", 19811209], ["Brooke", 19790101], ["Lauren", 19820521], ["Amanda", 19780119], ["Kelley", 19850922], ["Meredith", 19720604], ["Jackie", 19840111], ["Megan", 19780427], ["Amanda", 19811126], ["Cammy", 19701225], ["Ditta", 19751226], ["Jennifer", 19731228], ["Krissy", 19791211], ["Annica", 19780902], ["Tory", 19850618], ["Whitney", 19860123], ["Sarah", 19801121], ["Jessyca", 19800826], ["Beau", 19800626], ["Katrina", 19880707], ["Stephanie", 19790129], ["Jennifer", 19881123], ["Jessica", 19871124], ["Sarah", 19880209], ["Kim Anh", 19831004], ["Ellah", 19881122], ["Lauren", 19820914], ["Link", 19861125], ["Aleke", 19820427], ["Kendra", 19831118], ["Arpi", 19830612], ["Erin", 19900328], ["Tiffany", 19820909], ["Robin", 19830621], ["Kristi", 19851222], ["Jennifer Lee", 19870227], ["Veronica Ruo Qi", 19891110], ["Danielle", 19910328], ["Shilpa", 19840412], ["Elizabeth", 19880526], ["Megan", 19870701], ["Melissa", 19880408], ["Lauren", 19890522], ["Alana", 19851031], ["Riley", 19901114], ["Kristen", 19880323], ["Mami", 19790715], ["Kit", 19810726], ["Stacey", 19910718], ["Elizabeth", 19810315], ["Nina", 19890707], ["Nadja", 19900607], ["Erica", 19901127], ["Jenna", 19851126], ["Tiya", 19860611], ["Natalie", 19850322], ["Courtney", 19820929], ["Kristy", 19900108], ["Susanna", 19831103], ["Alexa", 19901117], ["Aeriel", 19900928], ["Maureen", 19820528], ["Allie", 19910420], ["Sanaz", 19880621], ["Lauren", 19760912], ["Alexis", 19840927], ["Libby", 19940124], ["Lauren", 19930723], ["Michaela", 19880722], ["Tori", 19871124], ["Gabrielle", 19930227], ["Danielle Rose", 19931213], ["Tarakaa", 19860811], ["Danielle", 19910528], ["Ellen", 19931008], ["Brooke", 19920408], ["Mccall", 19900315], ["Macall", 19860205], ["Megan", 19880705], ["Nicole", 19930729], ["Alexandra", 19911130], ["Elizabeth", 19860524], ["Jade", 19921028], ["Brie", 19890507], ["Jan", 19950301], ["Simone", 19891230], ["Elizabeth", 19860731], ["Gabrielle Faith", 19961223], ["Sachia", 19950511], ["Taylor", 19960416], ["Lindsey", 19900104], ["Alexandra", 19950630], ["Alexandra", 19910213], ["Robin", 19930412], ["Brianna", 19940219], ["Olivia", 19960122], ["Whitney", 19860811], ["Emily J", 19910615], ["Caroline B", 19941031], ["Chalena", 19950818], ["Elizabeth Anita Alexandria", 19960806], ["Breanna Alexa Bachini", 19930521], ["Mary", 19950817], ["Betsy", 19600427], ["Eve", 19621028], ["Janet", 19670405], ["Jaime", 19611001], ["Angel", 19610830], ["Donna", 19550626], ["Valerie", 19540813], ["Lucinda", 19520717], ["J", ""], ["J", ""], ["D", ""], ["K", ""], ["B", ""], ["J", ""], ["R", ""], ["N", ""], ["E", ""], ["F", ""], ["Caroline", 19560622], ["D", ""], ["Wendy", ""], ["Nancy", 19530830], ["Susan", 19570107], ["Gretchen", 19560201], ["Anne", ""], ["Holly", 19690811], ["Margaret", 19601012], ["Clare", 19671008], ["Kathy", 19641104], ["Rita", 19660512], ["Marlene", 19810731], ["Linda", 19570701], ["Beverly", 19530124], ["Ann", 19551013], ["Robin", 19540923], ["A", ""], ["Maria", ""], ["Karen", ""], ["Karen", ""], ["Jenny", ""], ["Lisa", ""], ["Kathy", ""], ["Maria", 19600424], ["Judith", ""], ["Becky", ""], ["Connie", ""], ["Lori", ""], ["Joni", 19651125], ["Lisa", ""], ["Suzanne", ""], ["Shandra", 19680519], ["Merrilee", ""], ["Jennifer", 19660615], ["Chris", ""], ["Trisha", 19690203], ["Stephanie", 19690818], ["Sonya", 19670825], ["Susan", 19710412], ["Tanya", 19690302], ["Tonya", 19690821], ["Kara", 19730105], ["Melissa", 19740402], ["Victoria", 19761230], ["Trina", 19821230], ["Kristine", 19720623], ["Martha", 19691215], ["Candice", 19800207], ["Cindy", 19790422], ["Elizabeth", 19740824], ["Valerie", 19731228], ["Tracey", 19710129], ["Diana", 19680410], ["Alice", 19770830], ["Allison", 19660804], ["Vickie", 19710827], ["Stacey", 19750105], ["Marissa", 19780613], ["Susanna", 19720303], ["Rebecca", 19721119], ["Ashley", 19720408], ["Varalee", 19760502], ["Stephanie", 19770408], ["Elizabeth", 19631112], ["Bridget", 19740207], ["Leslie", 19720209], ["Traci", 19780805], ["Alison", 19741125], ["Amy", 19681007], ["Vanessa", 19760513], ["Laura", 19720426], ["Anna", 19761021], ["Betsy", 19751127], ["Kristen", 19781002], ["Mugette", 19810424], ["Tu", 19780208], ["Irene", 19790612], ["Jennifer", 19720416], ["Diana", 19751029], ["Jody", 19711122], ["Samantha", 19890509], ["Tristen Z", 19940501], ["Rachel", 19920719], ["Ashley", 19871106], ["Alexandra", 19920223], ["Natalie", 19910801], ["Lindsay", 19880226], ["Amelia", 19920802], ["Caroline", 19930313], ["Camila", 19950929], ["Josie", 19951105], ["Skylar Alexandra", 19940424], ["Brooke", 19960212], ["Alexandra", 19910413], ["Daniella", 19971105], ["Hayley", 19950517], ["Jody", 19780930], ["Ella", 19760917], ["Emily Ann", 19820328], ["Jacquelyn", 19801117], ["Lesley", 19781011], ["Kristen", 19770518], ["Cara", 19720421], ["Zuzanna", 19800403], ["Katie", 19800911], ["Marilyn", 19740114], ["Lena", 19830510], ["Brandi", 19770612], ["Andrea", 19780204], ["Sara", 19801022], ["Hillary", 19820417], ["Mariel", 19800220], ["Whitney", 19800508], ["Darian", 19790615], ["Alexandra", 19820310], ["Prim", 19810115], ["Janet", 19800628], ["Rachel", 19690211], ["Lindsay", 19821207], ["Kirsty", 19780517], ["Raluca Daniela", 19830717], ["Mindy", 19720322], ["Erin", 19830419], ["Mary Carlisle", 19780716], ["Erin", 19800116], ["Keiko", 19800429], ["Maiko", 19820623], ["Paige", 19740714], ["Janet", 19790529], ["Briana", 19781221], ["Stacey", 19721219], ["Kristin", 19720204], ["Julia", 19810518], ["Rochelle", 19800430], ["Selin", 19780706], ["Jennifer", 19730117], ["Luana", 19821205], ["Whitney", 19850811], ["Paloma", 19720823], ["Tumeka", 19761226], ["Maria", 19830319], ["Hyacinth", 19610809], ["Eva", 19840706], ["Kara", 19790920], ["Katie", 19841110], ["Melissa", 19840613], ["Emmy", 19870722], ["Alexandria", 19860310], ["Shari", 19641103], ["Michelle", 19791212], ["Alexandra", 19841228], ["Nicole", 19860203], ["Monica", 19851212], ["Caitlin", 19850517], ["Lia", 19800922], ["Michelle", 19870304], ["Sybil", 19770106], ["Jodi", 19810822], ["Liberty", 19870409], ["Mimi", 19841030], ["Melissa", 19861211], ["Jessi", 19870221], ["Courtney", 19880501], ["Chrissie", 19870902], ["Yvette", 19880612], ["Audra", 19830331], ["Leila", 19860206], ["Tamara", 19790924], ["Rebekah", 19791012], ["Sabita", 19840927], ["Shannon", 19870109], ["Courtney", 19851011], ["Polina", 19860408], ["Anamika", 19890413], ["Jie", 19871101], ["Georgette", 19840709], ["Christy", 19871212], ["Suzanne", 19880117], ["Courtney", 19900327], ["Cammie", 19871122], ["Nelly", 19901113], ["Veronica", 19870514], ["Keilly", 19900505], ["Kate", 19831111], ["Reka", 19890708], ["Bianca", 19890514], ["Thien Trang", 19910918], ["Pamela", 19910101], ["Morgan", 19920220], ["Julianna", 19850107], ["Subbadharmi", 19890708], ["Stephanie", 19930216], ["Kelsey", 19910408], ["Alexandra", 19870719], ["Amanda", 19880314], ["Chelsea", 19891211], ["Anna", 19840821], ["Jill M", 19910313], ["Kady", 19860317], ["Phoebe", 19880520], ["Emily", 19921201], ["Christian", 19840913], ["Keri", 19891225], ["Sabrina", 19860112], ["Nataly", 19900913], ["Maria", 19920619], ["Noel", 19930203], ["April", 19920508], ["Ellie", 19930808], ["Stephanie", 19901027], ["Nicole", 19911031], ["Anna", 19940308], ["Veronika", 19900920], ["Annie", 19930330], ["Kyle", 19940405], ["Chanelle", 19940119], ["Yawna", 19860801], ["Hilary", 19910513], ["Ivana", 19861108], ["Gira", 19860829], ["Claire", 19891129], ["Erin", 19880609], ["Caitlin", 19880219], ["Alexandra", 19850703], ["Jennifer", 19950412], ["Kimberly", 19961015], ["Natalie", 19891102], ["Elizaveta Anna", 19930831], ["Veronica M", 19911207], ["Karina", 19950706], ["Sylvia", 19860904], ["Sherry", 19950208], ["Katrine Isabel", 19960315], ["Denise", 19950417], ["Courtney", 19940325], ["Christina", 19960529], ["Noelle", 19881205], ["Lauren", 19950517], ["Breaunna", 19941222], ["Nicole", 19941230], ["Meredith", 19970521], ["Nadia", 19950114], ["Jackie", 19710922], ["Antoinette", 19850107], ["Kathleen", 19740511], ["Kylene", 19790725], ["Dana", 19730725], ["Audra", 19720605], ["Tracee", 19731009], ["Amie", 19800517], ["Jennifer", 19811128], ["Lashawnn", 19740602], ["Jacqueline", 19820209], ["Jennifer", 19770119], ["Kristy", 19741230], ["Susan", 19741201], ["Bridget", 19761018], ["Amy", 19690628], ["Sandra", 19750116], ["Khristen", 19750803], ["Stefanie", 19810322], ["Barrie", 19730724], ["Kate", 19820415], ["Amy", 19731107], ["Anne", 19780520], ["Lauren", 19740830], ["Dewonder", 19590127], ["Kendra", 19790828], ["Jamie", 19801106], ["Jennifer", 19750823], ["Audrey", 19850430], ["Marjorie", 19750503], ["Katie", 19770527], ["Aimee", 19820110], ["Megan", 19810519], ["April", 19781129], ["Maren", 19791106], ["Sarah", 19780514], ["Marie Ange", 19780114], ["Dina", 19680406], ["Margaret", 19760707], ["Mary Beth", 19760329], ["Patricia", 19841020], ["Ashley", 19821229], ["Kathryn", 19790225], ["Leslie", 19810718], ["Becky", 19640801], ["Julie", 19811223], ["Danielle", 19781110], ["Terri", 19650402], ["Amy", 19681215], ["Douglas", 19840522], ["Sara", 19850621], ["Karla", 19770318], ["Kristin", 19841130], ["Kristin", 19810705], ["Bonnie", 19850503], ["Natalie", 19830401], ["Jennifer", 19830702], ["Claire", 19700527], ["Lauren", 19780316], ["Alison", 19791129], ["Laura", 19710624], ["Katia", 19810816], ["Kara", 19771202], ["Violette", 19790927], ["Lisa", 19740221], ["Evonne", 19740923], ["Mandy", 19790312], ["Jessica", 19800415], ["Emily", 19811119], ["Callie", 19770711], ["Maggie", 19750529], ["Elina", 19820521], ["Terry Ann", 19740428], ["Kimberly", 19790725], ["Bettina", 19820718], ["Lindsay", 19800519], ["Johanna", 19750518], ["Amy", 19790124], ["Meiling", 19791112], ["Jennifer", 19781020], ["Vania", 19810428], ["Megan", 19831014], ["Lindsey", 19800201], ["Megan", 19820411], ["Angela", 19840329], ["Megan", 19840920], ["Nicolette", 19831108], ["Anita", 19860219], ["Alessandra", 19870112], ["Aradhana", 19820709], ["Tiffany", 19831228], ["Macey", 19830224], ["Kelcy", 19861225], ["Caylan", 19820701], ["Stephanie", 19820923], ["Jan", 19580317], ["Kate", 19830530], ["Karen", 19671205], ["Sarah Jane", 19820802], ["Catrina", 19840913], ["Bethany", 19821129], ["Lindsay", 19820811], ["Kathleen", 19820917], ["Amy", 19810415], ["Emilia", 19820204], ["Colleen", 19790212], ["Ashlee", 19850522], ["Saras", 19830726], ["Brittany", 19850420], ["Laila", 19810805], ["Natalie", 19851103], ["Celena", 19790130], ["Marine", 19780929], ["Cara", 19730424], ["Loni", 19810928], ["Christyn", 19850210], ["Cassy", 19850802], ["Manisha", 19770513], ["Jennifer", 19811121], ["Michelle", 19801002], ["Brook", 19851231], ["Samantha", 19840807], ["Stephanie", 19870411], ["Courtney", 19820502], ["Melissa", 19840112], ["Kristin", 19790227], ["Adriana", 19780902], ["Christine", 19831216], ["Julie", 19840521], ["Cristina", 19860826], ["Nadia", 19850209], ["Amanda", 19821020], ["Camelia", 19860406], ["Emily", 19850201], ["Danielle", 19840717], ["Rochelle", 19800627], ["Brianna", 19851215], ["Zena", 19880717], ["Adina", 19870619], ["Lauren", 19880204], ["Lauren", 19870928], ["Meg", 19870811], ["Ristine", 19850116], ["Jennifer", 19841115], ["Lindsey", 19860101], ["Lindsay", 19880524], ["Gloriann", 19840228], ["Patricia", 19740119], ["Kelly", 19820223], ["Amanda", 19870813], ["Elizabeth", 19860128], ["Whitney", 19851225], ["Laura", 19850506], ["Masha", 19840211], ["Karina", 19880811], ["Erin", 19850113], ["Randi", 19870211], ["Kewa", 19860701], ["Hala", 19850809], ["Dasha", 19870606], ["Suzanna", 19861013], ["Colleen", 19880209], ["Blair", 19830904], ["Simone", 19881010], ["Jessica", 19870304], ["Austin", 19860601], ["Preethi", 19850629], ["Christala", 19890709], ["Krista", 19900423], ["Marie", 19830721], ["Ashley", 19861113], ["Latrell", 19891212], ["Sheryl", 19850920], ["Amanda", 19850319], ["Blakeley", 19841114], ["Ashley", 19870917], ["Whitney", 19890109], ["Marlene", 19880329], ["Melissa", 19860801], ["Alex", 19870117], ["Jessica", 19811223], ["Megan", 19890204], ["Jacqueline", 19830608], ["Melody", 19830708], ["Sarah", 19910314], ["Marie", 19910614], ["Daron", 19851128], ["Amy", 19790324], ["Dina", 19871014], ["Mia", 19910312], ["Valerie", 19851231], ["Amanda", 19880523], ["Connor", 19870922], ["Elizabeth", 19920114], ["Brittany", 19870208], ["Kristen A", 19880325], ["Julie", 19880331], ["Sarah", 19880129], ["Emily", 19890724], ["Christine", 19871225], ["Amanda", 19850511], ["Nicole", 19880620], ["Laurianne", 19881018], ["Pamela", 19901124], ["Miya", 19871114], ["Rachel", 19830708], ["Joanna", 19891009], ["Lynn", 19791216], ["Claire", 19871108], ["Paola", 19920827], ["Lauren", 19890512], ["Erin Carol", 19930506], ["Cameron", 19881224], ["Julie", 19870627], ["Stefanie", 19890130], ["Hannah", 19910812], ["Katherine", 19860305], ["Olivia", 19880423], ["Christina", 19880426], ["Christina", 19881212], ["Cierra", 19910927], ["Milena", 19850506], ["Christin J", 19870731], ["Stephanie", 19900327], ["Kaysara", 19910623], ["Nina", 19900115], ["Deirdre", 19901205], ["Kristin", 19841024], ["Jacqueline", 19900913], ["Stephany", 19900609], ["Erica", 19900702], ["Julia", 19910916], ["Grace", 19891211], ["C C", 19911009], ["Sarah", 19910422], ["Marianne", 19850906], ["Monica", 19920622], ["Kate", 19920109], ["Amanda Marie", 19860106], ["Alexa", 19900824], ["Denise", 19890731], ["Molly", 19890525], ["Nelo", 19920705], ["Farwa", 19891101], ["Millie", 19641005], ["Brooke Lindsey", 19940622], ["Lilly F", 19911101], ["Brynn", 19910801], ["Karina", 19831112], ["Tracy", 19740827], ["Desiree", 19931110], ["Rachael", 19910427], ["Alrissa", 19920724], ["Amanda", 19870317], ["Olivia", 19910711], ["Caryssa L", 19920413], ["Monica", 19930108], ["Joelle", 19910606], ["Malika", 19910709], ["Theresa", 19930607], ["Mary Anne", 19920215], ["Morocco", 19921107], ["Mara", 19920222], ["Alejandra Maria", 19950228], ["Catherine", 19880430], ["Kate", 19901106], ["Abigail", 19900209], ["Sabrina", 19930224], ["Heatherm", 19890925], ["Stephanie", 19940511], ["Leighann", 19931204], ["Lauren", 19880816], ["Kayla", 19920921], ["Kir", 19891031], ["Skylar", 19930914], ["Julia", 19931207], ["Meghan", 19930621], ["Nida", 19911029], ["Lauren", 19880905], ["Kelly K", 19910531], ["Alyssa Grace", 19950215], ["Mary", 19911122], ["Madeleine", 19920319], ["Rachel", 19840302], ["Alex", 19911229], ["Kyra", 19960510], ["Suzy", 19940830], ["Remeice", 19891112], ["Kate", 19940201], ["Courtney", 19891015], ["Molly", 19930810], ["Stephanie", 19940131], ["Alexandra M", 19870719], ["Aleksandra", 19960409], ["Erin", 19880709], ["Jessica", 19930428], ["Spencer", 19950125], ["Anik", 19910405], ["Simone", 19920717], ["Emma", 19930623], ["Melissa", 19921004], ["Tina", 19950427], ["Julia", 19940613], ["Rachael", 19931209], ["Shelby", 19930114], ["Epiphany B", 19921217], ["Kaitlin", 19921215], ["Mariana", 19950927], ["Hannah", 19951103], ["Casey", 19910613], ["Deborah", 19940514], ["Jessica", 19931117], ["Kelsey", 19940821], ["Samantha", 19930126], ["Blair", 19940814], ["Martha V", 19900628], ["Amanda", 19930322], ["Sarah", 19920729], ["Emily", 19931112], ["Jamie", 19950308], ["Kelly", 19770505], ["Quinn", 19941110], ["Sophia", 19930330], ["Sierra A", 19900816], ["Mckenzie", 19940107], ["Stacey", 19900117], ["Courtney", 19910226], ["Rosalia", 19900208], ["Sydney", 19950207], ["Mia", 19950406], ["Erin Kane", 19960512], ["Laura", 19841119], ["Eva", 19921222], ["Elizabeth", 19940706], ["Sarah", 19930713], ["Elyse", 19870910], ["Sabrina", 19920912], ["Julia", 19890114], ["Gabriella", 19951208], ["Tanya", 19930914], ["Nyla", 19960730], ["Louisa", 19960516], ["Zina", 19980402], ["Tornado Alicia", 19980512], ["Madison", 19970919], ["Rima", 19951116], ["Kourtney J", 19940907], ["Natasha", 19940823], ["Erin", 19901230], ["Rachel May", 19941113], ["Jillian", 19941210], ["Caroline", 19960315], ["Dominique", 19870203], ["Trelsie", 19890707], ["Angela", 19950604], ["Nicole", 19980429], ["Kim", 19951027], ["Emina", 19930330], ["Lynda", 19921123], ["Joanna Mary", 19930201], ["Caroline", 19960103], ["Julia", 19940403], ["Callie", 19910904], ["Maxine", 19910710], ["Katie", 19921211], ["Emma Christine", 19980201], ["Johnnise", 19960510], ["Katerina", 19970717], ["Jessica", 19970105], ["Marjorie", 19880420], ["Maci", 19931007], ["Kaitlyn", 19971204], ["Jacqueline", 19941203], ["Charity", 19870711], ["Parris", 19980708], ["Jamie", 19930819], ["Miriam Ruth", 19940724], ["Elizabeth", 19910118], ["Amanda", 19860130], ["Lindsay", 19780708], ["Erica", 19860327], ["Dina", 19711211], ["Robyn", 19850111], ["Anita", 19810402], ["Casey", 19840501], ["Emily", 19850224], ["Jamie", 19880415], ["Brittany", 19880627], ["Elizabeth", 19550921], ["Carolyn", 19900415], ["Cassandra", 19891211], ["Prissy", 19910807], ["Kristin", 19830420], ["Diamond", 19901226], ["Celia", 19860527], ["Tiffany", 19891126], ["Jennifer", 19890531], ["Komal", 19930108], ["Roxanne", 19890826], ["Mandy", 19810914], ["Amanda", 19800324], ["Alissa", 19671209], ["Kay", 19570927], ["Jane", 19661222], ["Tracie", 19610116], ["Elizabeth", 19630811], ["Cinda", 19710410], ["Tracy", 19611021], ["Dena", 19650928], ["Hemel", 19660108], ["Karen", 19630803], ["Reka", 19670612], ["Vincenza", 19660820], ["Lisa", 19640803], ["Lynn", 19661018], ["Jill", 19731226], ["Julie", 19710609], ["Kilmeny", 19660218], ["Kay", 19690131], ["Debbie", 19651129], ["Anne Marie", 19660720], ["Leslie", 19660908], ["Lisa", 19630604], ["Lisa", 19611106], ["Tory", 19660712], ["Kylie", 19700509], ["Anya", 19690220], ["Jennifer", 19670106], ["Diana", 19721007], ["Betsy", 19671127], ["Katrina", 19671129], ["Karen", 19701102], ["Susan", 19710206], ["Sherri", 19730118], ["Tonya", 19691110], ["Julie", 19680817], ["Susan", 19710206], ["Jamie", 19691029], ["Alita", 19630112], ["Tara", 19681223], ["Erika", 19720516], ["Kellie", 19670601], ["Happy", 19680605], ["Angie", 19710323], ["Bonnie", 19770412], ["Farley", 19741212], ["Tunecia", 19701023], ["Roseann", 19710227], ["Allison", 19710927], ["Hillery", 19610619], ["La Shawnn", 19740206], ["Sylvia", 19610419], ["Kathy", 19741105], ["Zuzanna", 19790726], ["Cassi", 19850902], ["Lejla", 19870206], ["Danielle", 19820120], ["Geneva", 19871225], ["Katie", 19891023], ["Katie", 19881216], ["Brittany", 19940406], ["Allie", 19950630], ["Sofia", 19981114], ["Mia", 19970723], ["Ty Ana", 19970313], ["Karina Kristina", 19981021], ["Jessica", 19890916], ["Trisha", 19981027], ["Ashley", 19881017], ["Tina", 19920831], ["Tatijana", 19971116], ["Taylor L", 19950117], ["Alexa", 19980707], ["Emerald", 19970905], ["Marie", 19970611], ["Alexandra", 19950224], ["Aleah", 19910923], ["Sarah", 19941219], ["Usue Maitane", 19981028], ["Ellie", 19970710], ["Maia A", 19960921], ["Raquel", 19980128], ["Peggy", 19951110], ["Rebecca", 19971004], ["Camila", 19961125], ["Karyn", 19940912], ["Ayla", 19960715], ["Rasheeda", 19950630], ["Amy", 19941028], ["Ariana", 19960126], ["Luisa", 19951005], ["Mary", 19910802], ["Kristi", 19900427], ["Ronit", 19931203], ["Julia Christine", 19921027], ["Kristina N", 19910125], ["Macie", 19941023], ["Jessica", 19950102], ["Rhiann", 19940622], ["Frances", 19940222], ["Kelly", 19960221], ["Hanna", 19980225], ["Natalie", 19960508], ["Dasha", 19961011], ["Elizabeth", 19910218], ["Brianna", 19951012], ["Kristin", 19951122], ["Kristina", 19951204], ["Maddie", 19971117], ["Raveena", 19980723], ["Daniella", 19971027], ["Laura", 19970305], ["Idia", 19930922], ["Chloe Michele", 19970905], ["Morgan", 19941219], ["Nikki", 19960418], ["Sianna", 19900804], ["Nicole", 19990508], ["Mercedes", 19970525], ["Lourdes", 19990531], ["Adi", 19951213], ["Anna", 19971103], ["Alexandra", 19980719], ["Katarina", 19960704], ["Michaela", 19990726], ["Ena", 19980212], ["Catherine Cartan", 19990408], ["Hadley", 19960311], ["Madison", 19960402], ["Jaeda", 19990728], ["Jeannez", 19960707], ["Erica", 19980316], ["Jessie", 19980419], ["Andie K", 19970107], ["Alexandria", 19960511], ["Gabriella", 19960709], ["Kelly", 19990509], ["Terri", 19960723], ["Angel", 19850125], ["Maria", 19970506], ["Alexis", 19980809], ["Rianna", 19960903], ["Megen", 19960709], ["Caroline", 19980905], ["Sophie", 19970528], ["Nicole", 19960504], ["Jacqueline", 19970531], ["Jessica", 19970709], ["Adriana", 19890308], ["Kylie", 19970606], ["Yuki Kristina", 19950819], ["Lexi", 19950525], ["Caroline", 19970726], ["Ingrid", 19980616], ["Alexandra", 19970301], ["Nada", 20000308], ["Alexis", 19950606], ["Felicity", 19970313], ["Tory", 19930105], ["Aimee", 19940907], ["Alli", 19961203], ["Claudia", 19961206], ["Brooke", 19951010], ["Marina", 19981123], ["Zoe Adeline", 19941217], ["Jessica", 19970605], ["Ashley", 19920829], ["Valerie", 19971122], ["Ashley", 19990208], ["Brittany", 19920303], ["Olivia", 19940623], ["Taylor", 19950731], ["Alexis", 19950724], ["Sara", 19971217], ["Lindsay", 19930107], ["Liza", 19950317], ["Jayci", 20000517], ["Marina", 19920314], ["Sydney", 19990430], ["Alyza", 19951122], ["Sophia", 19920113], ["Riley", 19990615], ["Delaney", 19981028], ["Jane", 19961112], ["Valerie Ann", 19980801], ["Carolyn", 19970524], ["Maegan", 19950416], ["Tamara", 19971129], ["Mary", 19981025], ["Victoria", 19990401], ["Kennedy", 19970521], ["Amy", 19970120], ["Makenna", 19980226], ["Stephanie", 19980415], ["Nicole Taylor", 19990426], ["Claire", 20000525], ["Jada", 19990129], ["Sara", 19970723], ["Hannah", 19960923], ["Sophia", 19971005], ["Akiko", 19930913], ["Karina", 19970808], ["Haley", 19910403], ["Paige", 19970222], ["Kayla", 19990928], ["Carson", 20000909], ["Amanda", 19940813], ["Maria", 19990721], ["Kylie", 19990321], ["Luciana", 19981001], ["Zoe", 20010308], ["Sachi", 19981129], ["Audrey", 19951029], ["Anna", 19970319], ["Abigail", 20010122], ["Cameron", 19990920], ["Katelyn", 19921211], ["Katharine", 19961019], ["Elyse", 19981014], ["Mimi", 19930430], ["Bess", 19971029], ["Ines Karmen", 19970615], ["Taylor", 19990615], ["Kristen", 19970407], ["Sabrina", 19971003], ["Desirae", 19940111], ["Sarah", 19960418], ["Rachel", 19961108], ["Victoria", 19990807], ["Nini", 19950909], ["Francesca", 19970722], ["Makenzie", 19990610], ["Chiara", 19980826], ["Melissa", 19930602], ["Morgan", 19990416], ["Jerricka", 19950116], ["Eva", 19961102], ["Miranda", 19990307], ["Teresia", 19990529], ["Julia", 19971217], ["Malkia", 20000808], ["Lorraine M", 19930615], ["Carol", 19960218], ["Jocelyn", 19900526], ["Roosh", 19920321], ["Alexa", 19980703], ["Alyvia", 20000503], ["Katie", 19990929], ["Meible", 19990519], ["Elizabeth", 20010712], ["Emma", 20010518], ["Arianna", 19950206], ["Kiah", 19950117], ["Alyssa", 20000210], ["Stephanie", 19880402], ["Sofia", 19990722], ["Sarah", 19930814], ["Melan", 19970406], ["Alexandra", 19990105], ["Dilara", 19990911], ["Hurricane Tyra", 20010302], ["Taylor", 19980222], ["Nami", 19980827], ["Marcella", 20001012], ["Sophia", 20010630], ["Delisha", ""], ["Haley", ""], ["Jenna", ""], ["Nikita", 19931021], ["Hoda", ""], ["Meredith", 19990310], ["Morgan", 19950317], ["Kirsten", 19940508], ["Maya", 19940527], ["Kat", 19930215], ["Alexandra", 19930215], ["Meghan", 19971028], ["Salma", 20000828], ["Madeline", 19990307], ["Lindsay", 19981217], ["Alexa", 20010908], ["Mary Catherine", 19971104], ["Cheyenne", 19960326], ["Neri", 19990902], ["Jesse", 20011004], ["Ann", 20000626], ["Natalia", 19930929], ["Whitney", 20020417], ["Christina", 19970725], ["Sofia", 19980703], ["Nicole", 20000805], ["Kenadi", 19970313], ["Paiton", 19980808], ["Shannon", 19950915], ["Elysia", 20000324], ["Ashley", 19991026], ["Alexis", 19970314], ["Caty", 20011120], ["Isabella", 20010706], ["Elizabeth", 20010519], ["Anna", 20020306], ["Dakota", 20020508], ["Janice", 19990105], ["Amanda", 20010831], ["Jada", 19980319], ["Hind", 19990228], ["Mikaela", 19890801], ["Micheline", 19970428], ["Kendal", 19940106], ["Anna", 19991008], ["Mia", 19981021], ["Chloe", 20010830], ["Abigail", 20010310], ["Ryan", 19990510], ["Maia", ""], ["Jana", 19941110], ["Shale", 20011015], ["Helen Abigail", 19980520], ["Kariann", 19990116], ["Kennedy", 19980903], ["Caroline", 19980929], ["Allison", 19981031], ["Melissa", 19970624], ["Ellyse", 19961109], ["Charleen", 19410918], ["Doris", 19250620], ["Patricia", 19370601], ["Pauline", 19190806], ["Helen", 19290507], ["Mary", ""], ["Althea", 19270825], ["Carrie", 19571026], ["Cathy", 19510822], ["Karen", 19570408], ["", ""], ["Barbara", ""], ["Susan", 19611219], ["Jan", 19630609], ["Diane", 19650626], ["Carol", 19620605], ["Leanne", ""], ["Shelley", 19631120], ["Maureen", ""], ["Lorrie", 19601015], ["Tiffany", 19600417], ["Sarah", 19741010], ["Meg", ""], ["Wendy", ""], ["Lynn", 19660819], ["Heidi", 19640507], ["Jacqueline", 19620329], ["Sheri", 19690629], ["Diane", 19710121], ["Angela", 19641211], ["Nancy", ""], ["Liz", 19640423], ["Jamie", 19630530], ["", ""], ["Laura", 19681210], ["Jill", ""], ["Courtney", 19560622], ["Tiffany", 19810121], ["Kristen", 19810501], ["Wendy", 19681001], ["Sheila", ""], ["Heidi", 19601007], ["Julie", 19610523], ["Deborah", 19701129], ["Jennifer", ""], ["Cindy", 19591207], ["Lynn", ""], ["I", ""], ["Lisa", 19600808], ["Jill", 19540907], ["Aschara", ""], ["Heidi", 19720713], ["Julie", 19710609], ["", ""], ["G", ""], ["Stephanie", 19661010], ["Lucy", 19540402], ["Cathy", ""], ["", ""], ["Emmy", ""], ["", ""], ["Claudette", ""], ["Lisa", ""], ["Lynn", 19631114], ["Lindsay", ""], ["Lisa", 19630218], ["Virginia", ""], ["Lloyd", 19451208], ["Suzanne", 19750612], ["Caren", 19611110], ["Allegra", 19720113], ["Molly", 19630215], ["Lori", 19600112], ["Lindsay", 19780417], ["Adrienne", 19680903], ["Quynh", 19710627], ["Kari", 19810120], ["Lisa", 19590212], ["Christa", 19790115], ["Kelly", 19770505], ["Massoumeh", 19770803], ["Louise", 19500119], ["Jayne", 19741006], ["Christine", ""], ["Kim", 19780329], ["Lani", 19600808], ["Julie", 19690425], ["Ruth Ann", 19700506], ["Lauren", 19830423], ["Tasha", 19760223], ["Kealy", 19801030], ["Courtney", 19721230], ["Julie Ann", 19750618], ["Nicole", 19741001], ["Ashlee", 19801005], ["Kelly", 19751106], ["Alexandra", 19790210], ["Mary", 19730912], ["Lisa", 19660204], ["Monty", 19650506], ["Julie Anne", 19800911], ["Lorrie", 19651203], ["Kendra", 19760621], ["Chris", 19610706], ["Christine", 19850303], ["Rankin", 19840126], ["Julia", 19850721], ["Sabaea", 19811125], ["Nicole", 19750602], ["Joyce", 19800628], ["Sarah", 19820410], ["Jean Marie", 19651109], ["Stacey", 19720110], ["Varita", 19820702], ["Shera", 19780910], ["Trisha", 19710617], ["Suzanne", 19680921], ["Lisa", 19801119], ["Martha", 19551005], ["Kandiss", 19770221], ["Brooke", 19780413], ["Cristina", 19750825], ["Jasmine", 19810102], ["Kathleen", 19830125], ["Melissa", 19770524], ["Michelle", 19731114], ["April", 19831011], ["Olivia", 19810310], ["Melissa", 19650221], ["Cami", 19720314], ["Marissa", 19780318], ["Kristin", 19720204], ["Christi", 19610509], ["Cindy", ""], ["Ashley", 19830506], ["Leigh", 19831014], ["Natalia", 19831110], ["Nikhila", 19850208], ["Rachel", 19820916], ["Alison", 19850118], ["Cameron", 19830328], ["Gretchen", 19820304], ["Cackie", 19661107], ["Stephanie", 19650104], ["Miriam", 19850925], ["Nicole", 19880219], ["Lilivette", 19800225], ["Jonni", 19791203], ["Amanda", 19850102], ["Weyli", 19800722], ["Helene", 19841215], ["Amanda", 19841101], ["Nicole", 19870615], ["Stefani", 19841215], ["Laura", 19860217], ["Tifanie", 19880920], ["Mary", 19651124], ["Katherine", 19730414], ["Monica", 19800204], ["Nicole", 19850105], ["Shanna", 19750428], ["Jane", 19890926], ["Estelle", 19890503], ["Maria", 19820204], ["Jessica", 19860812], ["Renata", 19650224], ["Laura", 19830408], ["Lindsey", 19840313], ["Christy", 19850925], ["Timberly", 19831209], ["Brooke", 19850423], ["Kelli Elizabeth", 19940409], ["Melanie", ""], ["Whitney P", 19930625], ["Sydni", 19880612], ["Jasmine Nicole", 19930826], ["Alexandra", 19920812], ["Amber", 19870605], ["Kelsey", 19920610], ["Alex", 19920225], ["Ashley M", 19940304], ["Lauren", 19940828], ["Stacia", 19930914], ["Alexandria", 19900111], ["Rozel Asuncion", 19950616], ["Bolan", 19890908], ["Annie", 19920829], ["Eva", 19941007], ["Whitney", 19900909], ["Hanna", 19911107], ["Mandy", 19910501], ["Gia", 19900614], ["Brooke", 19951105], ["Lisa", 19680519], ["Alexandra M", 19930120], ["Sonya Sheeran", 19940816], ["Shinann", 19900608], ["Nicolette", 19950824], ["Rebecca", 19921125], ["Ashley", 19960430], ["Savannah", 19950115], ["Margaret", 19570423], ["Carlee", 19950724], ["Sarah", 19850718], ["Caroline", 19840926], ["Alexia", 19940421], ["Micaela", 19890311], ["Tina", 19810116], ["Manon Cristina", 19941224], ["Hailey M", 19930127], ["Tiffany", 19911216], ["Devan", 19940528], ["Courtenay", 19770227], ["Christine", 19931110], ["Emily", 19900517], ["Leyla", 19930423], ["Alexis", 19880722], ["Di Andrea", 19950730], ["Jandayia", 19960303], ["Margarita", 19950317], ["Olivia", 19941211], ["Caitlin", 19910905], ["Kara", 19910629], ["Paloma", 19890313], ["Susie", 19491114], ["Emily", 19861118], ["Abbie", 19951121], ["Alanna", 19950107], ["Siobhan", 19871110], ["Kayla Symone", 19960110], ["Margie", 19901106], ["Jamie", 19820521], ["Adria", 19791221], ["Lynn", 19941106], ["Nadege", 19960527], ["Lauren", 19941203], ["Tiffany", 19881204], ["Sarah", 19880907], ["Victoria", 19941214], ["Natalia", 19950325], ["Alexandra", 19931013], ["Montana", 19970219], ["Samantha Rose", 19940410], ["Angela", 19980331], ["Samantha", 19950527], ["Elizabeth", 19890419], ["Sarah", 19941121], ["Gabriela", 19950418], ["Tina", 19911222], ["Mia", 19920116], ["Stephanie", 19920831], ["Kennan", 19960317], ["Madison", 19930602], ["Whitney", 19910815], ["Sarah", 19960925], ["Brooke", 19980614], ["Jessie Lynn", 19951228], ["Brittany", 19941212], ["Kylie", 19870826], ["Erin", 19861102], ["Lindsay", 19821118], ["Jessica", 19801107], ["Yuliya", 19860609], ["Kathryn", 19831129], ["Lyndsey", 19820509], ["Tiana", 19841014], ["Keri", 19870310], ["Sarah", 19871201], ["Alyssa", 19841006], ["Rachel", 19870205], ["Angelina", 19521229], ["Amy", 19540720], ["Bernadette", 19821015], ["Tarrin", 19820423], ["Christine", 19670817], ["Christian", 19870108], ["Emily", 19820728], ["Kelly", 19700330], ["Courtney", 19900729], ["Taylor", 19900818], ["Carissa", 19900507], ["Heather", 19810210], ["Georgiana", 19880624], ["Michelle", 19910127], ["Brintney", 19871008], ["Chisako", 19870720], ["Kristen", 19890819], ["Jessica", 19910223], ["Susie", 19700212], ["Ashley", 19830410], ["Megan", 19890818], ["Larraine", 19910713], ["Courtney", 19920503], ["Tiffany", 19860519], ["Olga", 19880819], ["Shauna", 19900424], ["Canna", 19860515], ["Jennifer", 19890525], ["Keri", ""], ["Lauren", 19890922], ["Whitney", 19880108], ["Caitlyn", 19891220], ["Stephanie", 19890627], ["Jacqueline", 19910905], ["Natalia Maria", 19880414], ["Katie", 19921222], ["Stephanie", 19880527], ["Kirsten", 19810703], ["Taylor", 19881121], ["Rebecca", 19880627], ["Maggie", 19881230], ["Arianna", 19910421], ["Katrina", 19860415], ["Jennifer", 19851029], ["Amber", 19920313], ["Kali A", 19880211], ["Merritt", 19890702], ["Whitney", 19860409], ["Jovana", 19900831], ["Daisy", 19841010], ["Danice", 19801001], ["Dana", 19870713], ["Kellie", 19871004], ["Magdalena", 19880701], ["Alison", 19900425], ["Myke", 19610608], ["Isadora", 19920421], ["Kelly", 19900622], ["Kristina", 19890516], ["Lindsey", 19930106], ["Emily Theresa", 19901123], ["Lauren", 19900423], ["Jenna", 19931127], ["Elizabeth", 19831216], ["Kelly", 19891215], ["Chelsea", 19880701], ["Sabrina", 19930104], ["Jamila", 19920114], ["Tracy", 19860926], ["Whitney", 19870831], ["Margaret", 19910927], ["Alexandra", 19920422], ["Mikayla", 19880525], ["Hailee", 19880530], ["Maureen", 19900314], ["Catherine R", 19910609], ["Erin", 19900530], ["Maryam", 19930203], ["Shabnam", 19910726], ["Caitlyn", 19931013], ["Chelsea", 19850919], ["Ashley", 19820703], ["Christina", 19890331], ["Chanel", 19930618], ["Amanda", 19890125], ["Alexandra", 19891129], ["Monica", 19901123], ["Lauren", 19890811], ["Jacquelyn", 19870304], ["Jacquelynn", 19890111], ["Courtney M", 19880916], ["Courtney", 19820114], ["Kristen", 19820114], ["Cameron", 19881217], ["Caroline", 19900110], ["Susanne", 19750213], ["Sarah", 19920801], ["Niltooli", 19900411], ["Victoria", 19891231], ["Hiromi", 19900510], ["Rachel", 19900209], ["Sena", 19970605], ["Christi", 19960204], ["Tatum", 19970428], ["Madeline", 19940911], ["Julia", 19890628], ["Kelly", 19941021], ["Jasmine Janelle", 19920519], ["Maria", 19950924], ["Monet", 19960106], ["Cordelia Currey", 19930607], ["Millie", 19911004], ["Madison", 19941227], ["Zaina", 19970519], ["Katelyn", 19870608], ["Amanda", 19961028], ["Anna Kate", 19941011], ["Tamijean", 19980616], ["Victoria", 19961202], ["Christiana", 19951116], ["Angie", 19750716], ["Kerry", 19680528], ["Anna", 19960128], ["Sabrina", 19920113], ["Brienne", 19971125], ["Sarah", 19960513], ["Stephanie J", 19960305], ["Alexus", 19970206], ["Alexandra", 19990630], ["Chloe", 19900921], ["Megan", 19960122], ["Erin", 19941226], ["Sydney", 19950909], ["Katherine", ""], ["Lauren", 19990905], ["Teresa", 19941010], ["Alix", 19950718], ["Alaina", 19980809], ["Cassie", 19950201], ["Morgan", 19940208], ["Kenna", 19930918], ["Kelli", 19931202], ["Lauren", 19940618], ["Katrina", 19920314], ["Taylor", 19921208], ["Sara Catherine", 19970130], ["Tamara", 19850418], ["Mckenna Alexandra", 19970303], ["Caroline", 19990809], ["Hada", 19980710], ["Lauren", 19970108], ["Jacara", 19980704], ["Ndindi Inziani", 19971224], ["Susanne", 19980505], ["Bianca", 19960804], ["Caitlin", 19960406], ["Iesha", 19911109], ["Chelsie Marie", 19920321], ["Aurora", 19921204], ["Alexandra", 19950811], ["Karolina", 19990305], ["Skylar", 19950616], ["Jillian", 20010513], ["Gabrielle", 19960114], ["Gabriella", 19971216], ["Allison", 19980324], ["Madeline", 19970403], ["Darya", 19981019], ["Seriana", 19980227], ["Erin", 19960312], ["Katherine", 20001206], ["Vivian", 20000111], ["Stephanie M", 19931110], ["Sabrina", 19971216], ["Kate", 19971013], ["Emma", 20000212], ["Lauren", 20010728], ["Kayla", 19930220], ["Khume", 19961023], ["Christiana", 19970614], ["Candace Olivia", 19800101], ["Alycia", 20001231], ["Mikayla", 19990722], ["Tiffany", 19971009], ["Sanyukta", 20010928], ["Karly", 19850115], ["Emma", 19940624], ["Arielle", 20000910], ["Marjorie", 19980202], ["Anastasiya", 19990324], ["Natasha", ""], ["Addison", ""], ["Mbalia", 19980107], ["Safiya", ""], ["Taylor", 20010406], ["Natasha", 19920609], ["Katherine", 20010213], ["Madison", 19961215], ["Omolola", 19840818], ["Reagan", 19980505], ["Katelyn", 19960909], ["Sophie", 20021031], ["Gabrielle", 19920202], ["Taylor", 19981203], ["Andrea", 19940728], ["Annie", 19870905], ["Olivia", 19990308], ["Imani", 20011220], ["Lauren", 20020523], ["Taylor", 20000807], ["Nicole", 20000304], ["Jane", 19881118], ["Chelsea", 20000819], ["Peyton", 19990915], ["Ellie", 20000523], ["Jane", 19931227], ["Anna", 20010815], ["Rosalyn", 19930622], ["Madison", 19990419], ["Sophia", 20010718], ["Jasmine", 19990813], ["Theresa", 19701102], ["Spirit", 19941027], ["Najah", 20010909], ["Sharmada", 19990810], ["Nicole", 20000812], ["Nina", 20020117], ["Alexa", 20020906], ["Naomi", 20020516], ["Sabina", 20010406], ["Katie", 20011231], ["Nikki", 20011019], ["Mccartney", 19990708], ["Tricia", 19920706], ["Peyton", 20011008], ["Anika", 20010807], ["Dalayna", 20001216], ["Kolie", 20000317], ["Cassie", 19960225], ["Anna", 20020102], ["Monica", 19950419], ["Taysia", 20000708], ["Kathleen", 19940728], ["Amanda", 19990718], ["Jimena", 20000707], ["Cassidy", 19950510], ["Brittany", 19950405]], "trigger_words": ["First Name", "Birth Date"], "Prediction": "first_name, birth_date FROM players WHERE country_code = 'USA';"}
{"db_id": "wta_1", "query": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'", "query_toks": ["SELECT", "first_name", ",", "birth_date", "FROM", "players", "WHERE", "country_code", "=", "'USA", "'"], "query_toks_no_value": ["select", "first_name", ",", "birth_date", "from", "players", "where", "country_code", "=", "value"], "question": "What are the first names and birth dates of players from the USA?", "question_toks": ["What", "are", "the", "first", "names", "and", "birth", "dates", "of", "players", "from", "the", "USA", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "434", "answer_text": [["Jolene", 19680831], ["Lisa", 19730810], ["Meilen", 19780117], ["Serena", 19810926], ["Chanda", 19760218], ["Amy", 19720919], ["Tara", 19770526], ["Meghann", 19790413], ["Erika", 19721014], ["Lilia", 19780407], ["Jane", 19740621], ["Jennifer", 19760329], ["Alexandra", 19801215], ["Linda", 19710211], ["Brie", 19800121], ["Corina", 19780126], ["Marissa", 19800623], ["Lindsay", 19760608], ["Kathleen", 19461027], ["Geri", ""], ["Rosie", 19480916], ["Joan", ""], ["Mary Ann", 19461125], ["Billie Jean", 19431122], ["Patti", 19491221], ["Sharon", 19520224], ["Mona", 19481128], ["Ann", 19510504], ["Chris", 19541221], ["Janet", 19530806], ["Jill", 19540519], ["Julie", 19451208], ["Ann", 19550822], ["Joy", 19540519], ["Pam", 19510417], ["Peggy", 19490202], ["Martina", 19561018], ["Laura", 19490504], ["Sally", 19550325], ["Cecilia", 19470524], ["Rene", 19570512], ["Beth", 19570613], ["Patricia", 19511125], ["Kim", 19561011], ["Betsy", 19561023], ["Barbara", 19570402], ["Dianne", 19580811], ["Felicia", 19570720], ["Lindsay", 19550124], ["Lele", 19560910], ["Diane", 19550615], ["Rosalyn", 19601102], ["Marcie", 19530910], ["Pam", 19620704], ["Barbara", 19570501], ["Candy", 19550324], ["Bonnie", 19630911], ["Barbara", 19611022], ["Anne", 19590701], ["Paula", 19570110], ["Nancy", 19550522], ["Andrea", 19650604], ["Anne", 19610928], ["Leslie", 19570312], ["Kathy", 19591203], ["Mary Lou", 19610806], ["Sherry", 19590606], ["Lea", 19590120], ["Kim", 19571222], ["Tracy", 19621212], ["Kate", 19521025], ["Wendy", 19600929], ["Andrea", 19640118], ["Zina", 19631116], ["Susan", 19640628], ["Camille", 19660602], ["Alycia", 19610218], ["Jane", 19531206], ["Vicki", 19620925], ["Heather", 19610611], ["Robin", 19631210], ["Gigi", 19640222], ["Kathy", 19670324], ["Anna Maria", 19601022], ["Beth", 19640528], ["Lori", 19631218], ["Laura", 19630317], ["Kim", 19570928], ["Shelley", 19630619], ["Barbara", 19640703], ["Michaela", 19660227], ["Shawn", 19671221], ["Elise", 19620305], ["Sandy", 19581013], ["Linda", 19691224], ["Lisa", 19620714], ["Terry", 19551128], ["Ann", 19591031], ["Lisa", 19651016], ["Molly", 19650312], ["Hu", 19630416], ["Dee Ann", 19620611], ["Jamie", 19620121], ["Beverly", 19650909], ["Louise", 19620107], ["Cammy", 19681011], ["Susan", 19590415], ["Caryn", 19610314], ["Tina", 19521124], ["Terry", 19661218], ["Marianne", 19671017], ["Gretchen", 19640207], ["Kathrin", 19621128], ["Pamela", 19630703], ["Lindsay", 19620731], ["Jennifer", 19670702], ["Jennifer", 19620426], ["Carol", 19621009], ["Jill", 19640904], ["Elizabeth", 19680826], ["Pam", 19631220], ["Melissa", 19680411], ["Cynthia", 19640326], ["Amy", 19690902], ["Sherri", 19640202], ["Stephanie", 19650206], ["Patty", 19650331], ["Penny", 19640411], ["Wendy", 19640420], ["Katrina", 19680805], ["Leigh Anne", 19641214], ["Donna", 19710705], ["Jennifer", 19690226], ["Andrea", 19710930], ["Anna", 19660117], ["Kimberly", 19730327], ["Laxmi", 19721109], ["Kathy", 19650825], ["Halle", 19690805], ["Ronni", 19660510], ["Ann", 19701013], ["Mary Joe", 19710819], ["Jeri", 19701211], ["Carrie", 19720428], ["Shaun", 19681213], ["Audra", 19711117], ["Stacey", 19701113], ["Tami", 19681113], ["Stacey", 19680319], ["Ginger", 19680914], ["Monica", 19731202], ["Patty", 19680118], ["Nicole", 19690826], ["Jessica", 19700913], ["Kimberly", 19711020], ["Stephanie", 19691105], ["Debbie", 19700825], ["Susan", 19701205], ["Caroline", 19660825], ["Elly", 19690825], ["Meredith", 19710428], ["Sandra", 19740910], ["Anne", 19770119], ["Lindsay", 19770628], ["Venus", 19800617], ["Samantha", 19790117], ["Karin", 19771210], ["Jill", 19740704], ["Bunny", 19570905], ["Rayni", 19560524], ["Jennifer", 19810210], ["Holly", 19790210], ["Nancy", 19420823], ["Dorothy", 19250703], ["Kristy", 19500815], ["Valerie", 19490629], ["Linda", 19501021], ["Peaches", 19490416], ["Tory Ann", 19420808], ["Pamela", 19500312], ["Denise", 19500731], ["Wendy", 19470331], ["Becky", ""], ["Nancy", 19520731], ["Barbara", 19540304], ["Kristien", 19520725], ["Janet", 19530628], ["Daryl", 19540507], ["Ching Ling", 19481008], ["Robin", 19580513], ["Patricia", 19410811], ["Laurie", 19551104], ["Donna", 19541109], ["Linda", 19521114], ["Julie", 19480113], ["Jeanne", 19571005], ["Laurie", 19550614], ["Kathy", 19560618], ["Janice", 19520710], ["Kathy", 19561123], ["Jane", 19530810], ["Marita", 19560219], ["Susie", 19570916], ["Mary", 19500721], ["Mary", 19540907], ["Mary", 19570312], ["Carrie", 19550822], ["Ruta", 19551118], ["Mareen", 19600815], ["Robin", 19560413], ["Caroline", 19601104], ["Emilse", 19571219], ["Kay", 19570925], ["Zenda", 19591212], ["Betty Ann", 19500226], ["Jeanne", 19591207], ["Linda", 19610605], ["Julie", 19620205], ["Stacy", 19590405], ["Dana", 19591126], ["Roberta", 19581103], ["Joyce", 19580503], ["Andrea", 19550406], ["Trey", 19591127], ["Jenny", 19650419], ["Leigh Anne", 19640108], ["Joanne", 19541030], ["Michelle", 19670627], ["Nancy", 19580418], ["Felicia", 19611231], ["Jean", 19581025], ["Barbi", 19640914], ["Amy", 19650405], ["Jill", 19600623], ["Ginny", 19661115], ["Grace", 19680416], ["Melissa", 19690624], ["Debbie", 19670809], ["Eileen", 19661201], ["Maeve", 19641116], ["Kathleen", 19610905], ["Niurka", 19690419], ["Cecilia", 19630628], ["Kristin", 19590827], ["Kate", 19630111], ["Liezel", 19760821], ["Mashona", 19760531], ["Stephanie", 19460308], ["Marilyn", 19480308], ["Mimi", ""], ["Alice", 19421122], ["Pixie", ""], ["Betty", 19250415], ["Nadine", 19441026], ["Victoria", ""], ["Stephanie", 19500703], ["Carole", 19430624], ["Gail", 19510421], ["Patricia", 19400101], ["Eliza", 19530102], ["Patricia", 19450828], ["Sandy", 19560501], ["Tam", 19520127], ["Wendy", 19520430], ["Kathy", 19461218], ["Lisa", ""], ["Judy", 19490816], ["Roberta", 19560702], ["Mary", 19450925], ["Aleida", 19550616], ["Erin", 19550720], ["Stephanie", 19560325], ["Karen", 19421211], ["Sheila", 19580222], ["Susie", 19620329], ["Micki", 19601129], ["Heather", 19610712], ["Jane", 19620121], ["Diane", 19611105], ["Shawna", ""], ["Tammy", 19651012], ["Tracy", 19791006], ["Allison", 19801114], ["Ansley", 19820105], ["Dawn", 19760529], ["Kristen", 19840628], ["Vija", ""], ["Farel", ""], ["Connie", 19510521], ["Marjorie", 19510503], ["Peggy", ""], ["Tish", ""], ["Jade", ""], ["Carole", ""], ["Emilie", ""], ["Diane", ""], ["Mary", ""], ["Ann", ""], ["Tina", ""], ["Maricaye", ""], ["Roylee", 19490526], ["Nancy", 19330421], ["Louise", 19470321], ["Mimi", 19390818], ["Raymonde", ""], ["Carol", ""], ["Joyce", 19420223], ["Pat", 19340819], ["Jane", 19510220], ["Darlene", 19360106], ["Pam", 19501025], ["Carol", ""], ["Emilie", ""], ["Margaret", 19500413], ["Pam", ""], ["Susan", 19531113], ["Shari", ""], ["Sue", 19540603], ["Jeanne", 19350721], ["Kathy", 19521219], ["Gertrude", 19230908], ["Judy", 19430402], ["Brenda", 19540211], ["Patricia", 19580516], ["Marcy", ""], ["Sally", ""], ["Lynne", 19580328], ["Margaret", 19530105], ["Renee", 19340819], ["Carol", 19501022], ["Chris", 19561026], ["Kelly", 19620418], ["Lisa", 19590305], ["Lucy", ""], ["Jody", 19560704], ["Phyllis", 19570326], ["Linda", 19631106], ["Karen", 19640323], ["Eleni", 19671023], ["Lisa", 19680718], ["Sandra", 19690903], ["Shannan", 19700519], ["Julie", 19760424], ["Nicole", 19760203], ["Angela", 19720404], ["Keri", 19740501], ["Jacqueline", 19801126], ["Laura", 19810512], ["Jean", 19740607], ["Melissa", 19820606], ["Amber", 19840706], ["Sarah", 19811106], ["Ashley", 19850502], ["Bethanie", 19850323], ["Allison", 19860410], ["Bea", 19801128], ["Alexandra", 19850902], ["Carly", 19861126], ["Theresa", 19850310], ["Gabriela", 19800607], ["Shenay", 19840706], ["Angela", 19840927], ["Kelly", 19830318], ["Teryn", 19781212], ["Abigail", 19810712], ["Jessica", 19871110], ["Jamea", 19860907], ["Mary", 19881218], ["Tiffany", 19800314], ["Alexa", 19890910], ["Vania", 19890303], ["Ahsha", 19850321], ["Lauren", 19891001], ["Varvara", 19860521], ["Madison", 19900403], ["Audra", 19860421], ["Ashley", 19890620], ["Julie", 19790104], ["Melanie", 19910923], ["Kristie", 19920615], ["Gail", 19910605], ["Asia", 19910404], ["Coco", 19911206], ["Christina", 19920511], ["Mallory", 19900718], ["Lauren", 19910110], ["Hilary", 19881117], ["Sloane", 19930320], ["Alison", 19900703], ["Jamie", 19900108], ["Chelsey", 19900829], ["Beatrice", 19920406], ["Shelby", 19921013], ["Irina", 19900504], ["Lauren", 19931009], ["Madison", 19950217], ["Nicole", 19740801], ["Michelle", 19731228], ["Akiko", 19720214], ["Joy", 19621006], ["Caryn", 19711005], ["Luanne", 19721228], ["Julie", 19720510], ["Rachel Ann", 19721119], ["Judy", 19620511], ["Noelle", 19701218], ["Alysia", 19710131], ["Laura", 19670517], ["Amanda", 19780620], ["Julie", 19721007], ["Ann", 19670822], ["Melissa", 19720621], ["Jan", 19531223], ["Mary", 19620121], ["Sylvia", 19640127], ["Gail", 19470116], ["Diedre", 19711011], ["Caroline", 19651129], ["Kerry", 19501002], ["Kathy", 19670904], ["Stella", 19690309], ["Karen", 19680705], ["Cynthia", 19580614], ["Marlie", 19501120], ["Rona", 19690708], ["Kylie", 19610519], ["Helena", 19610201], ["Cheryl", 19640503], ["Jennifer", 19690715], ["Elizabeth", 19660406], ["Anne", 19660205], ["Alix", 19721022], ["Erica", 19690716], ["Stephanie", 19700424], ["Jill", 19671011], ["Jane", 19630123], ["Kathy", ""], ["Jean", 19700510], ["Ann", 19651028], ["Kirsten", 19690327], ["Wendy", 19600327], ["Nicole", 19610906], ["Vicki", 19570325], ["Mary Ann", 19560424], ["Christine", 19680118], ["Jennifer", 19600326], ["Julie", 19570621], ["Penny", 19550826], ["Cathy", 19580310], ["June", 19630619], ["Pam", 19750701], ["Stephanie", 19791023], ["Jane", ""], ["Gretchen", 19650626], ["Jane", 19660324], ["Holyn", 19731012], ["Kristi", 19690910], ["Linley", 19620501], ["Shelby", 19500626], ["Andrea", 19700128], ["Kathy", 19591224], ["Danielle", 19700322], ["Carol", 19610705], ["Jean", 19550606], ["Lori", 19650330], ["Edie", ""], ["Robin", ""], ["Kerri", 19681001], ["Lisa", 19700324], ["Mary", 19660508], ["Carol", 19591113], ["Katie", 19750429], ["Michele", 19660606], ["Shannon", 19670527], ["Gina", 19490515], ["Clare", ""], ["Cathleen", 19570316], ["Janice", 19510522], ["Betsy", 19540503], ["Lucia", 19601022], ["Wendy", 19680715], ["Allyson", 19631007], ["Debbie", 19620722], ["Marsha", ""], ["Linda", 19690503], ["Page", 19740622], ["Heather", 19711011], ["Gigi", 19701007], ["Marilda", 19650222], ["Christine", 19720714], ["Cynthia Ann", 19521114], ["Jenny", 19710226], ["Shelley", 19650421], ["Jackie", 19640104], ["Stephanie", ""], ["Michelle", 19610116], ["Genevieve", 19630819], ["Glynis", ""], ["Ann", 19520526], ["Allegra", ""], ["Cricket", 19610507], ["Bunny", 19460729], ["Holly Ann", 19701218], ["Amy", 19721112], ["Kathy", 19631005], ["Monique", 19841006], ["Erica", 19721128], ["Susan", 19651125], ["Rita", 19601018], ["Nina", 19610207], ["Donna", 19591005], ["Cissie", 19600108], ["Nancy", 19640804], ["Erika", 19631007], ["Cristina", 19770210], ["Terri", 19680118], ["Patty", 19730928], ["Katrina", 19681104], ["Katrina", 19800530], ["Anne", 19810420], ["Cory Ann", 19850122], ["Nicole", 19861103], ["Diana", 19790704], ["Tanner", 19840803], ["Shadisha", 19850712], ["Leslie", 19870525], ["Neha", 19860206], ["Megan", 19850719], ["Elizabeth", 19880603], ["Jewel", 19810910], ["Lindsey", 19851118], ["Raquel", 19821208], ["Brittany", 19910919], ["Kirsten", 19880814], ["Chieh Yu", 19920114], ["Alexis", 19830331], ["Amanda", 19861204], ["Catherine", 19940409], ["Tetiana", 19840904], ["Julia", 19910909], ["Alexandra", 19880214], ["Zoe Gwen", 19930921], ["Julia", 19890323], ["Jessica", 19940224], ["Grace", 19940506], ["Chi Chi", 19920705], ["Nicole", 19930303], ["Mallory", 19910128], ["Jennifer", 19860922], ["Samantha", 19950218], ["Victoria", 19951130], ["Maria", 19891126], ["Anne", 19850828], ["Megan", 19850311], ["Lena", 19881115], ["Katie", 19830503], ["Courtney B", 19920325], ["Kimberly", 19890509], ["Jacqueline", 19910830], ["Ester", 19930704], ["Eleanor", 19880626], ["Yasmin", 19880504], ["Anne Liz", 19960526], ["Alessondra", 19900906], ["Ryann", 19960723], ["Lucie", 19720406], ["Kelly S", 19730905], ["Kristina", 19790811], ["Wendy", 19750131], ["Julie", 19751016], ["Aurandrea", 19791121], ["Brandis", 19800213], ["Megan", 19781224], ["Alyssa", 19821119], ["Jennifer", 19780807], ["Jennifer", 19840217], ["Candice", 19820331], ["Michelle", 19780119], ["Kristy", 19790517], ["Andrea", 19881006], ["Lauren", 19800829], ["Iris", 19850613], ["Jennifer", 19810718], ["Ali", 19870923], ["Nicole", 19851124], ["Kaysie", 19800411], ["Krystina", 19880510], ["Riza", 19860210], ["Sarah", 19810627], ["Megan", 19830326], ["Story", 19830502], ["Christina", 19801127], ["Stacia", 19850921], ["Kaitlyn", 19920113], ["Chloe", 19900201], ["Amanda", 19870902], ["Kelcy", 19890411], ["June", 19950619], ["Krista", 19940914], ["Adria", 19791221], ["Susie", 19721210], ["Kori", 19731101], ["Elizabeth", 19770823], ["Agnes", 19800801], ["Courtenay", 19770227], ["Dee Dee", 19790211], ["Aurora", 19741107], ["Keirsten", 19730917], ["Ingrid", 19730602], ["Stephanie", 19761207], ["Sara", 19770113], ["Lori", 19810731], ["Milangela", 19811209], ["Brooke", 19790101], ["Lauren", 19820521], ["Amanda", 19780119], ["Kelley", 19850922], ["Meredith", 19720604], ["Jackie", 19840111], ["Megan", 19780427], ["Amanda", 19811126], ["Cammy", 19701225], ["Ditta", 19751226], ["Jennifer", 19731228], ["Krissy", 19791211], ["Annica", 19780902], ["Tory", 19850618], ["Whitney", 19860123], ["Sarah", 19801121], ["Jessyca", 19800826], ["Beau", 19800626], ["Katrina", 19880707], ["Stephanie", 19790129], ["Jennifer", 19881123], ["Jessica", 19871124], ["Sarah", 19880209], ["Kim Anh", 19831004], ["Ellah", 19881122], ["Lauren", 19820914], ["Link", 19861125], ["Aleke", 19820427], ["Kendra", 19831118], ["Arpi", 19830612], ["Erin", 19900328], ["Tiffany", 19820909], ["Robin", 19830621], ["Kristi", 19851222], ["Jennifer Lee", 19870227], ["Veronica Ruo Qi", 19891110], ["Danielle", 19910328], ["Shilpa", 19840412], ["Elizabeth", 19880526], ["Megan", 19870701], ["Melissa", 19880408], ["Lauren", 19890522], ["Alana", 19851031], ["Riley", 19901114], ["Kristen", 19880323], ["Mami", 19790715], ["Kit", 19810726], ["Stacey", 19910718], ["Elizabeth", 19810315], ["Nina", 19890707], ["Nadja", 19900607], ["Erica", 19901127], ["Jenna", 19851126], ["Tiya", 19860611], ["Natalie", 19850322], ["Courtney", 19820929], ["Kristy", 19900108], ["Susanna", 19831103], ["Alexa", 19901117], ["Aeriel", 19900928], ["Maureen", 19820528], ["Allie", 19910420], ["Sanaz", 19880621], ["Lauren", 19760912], ["Alexis", 19840927], ["Libby", 19940124], ["Lauren", 19930723], ["Michaela", 19880722], ["Tori", 19871124], ["Gabrielle", 19930227], ["Danielle Rose", 19931213], ["Tarakaa", 19860811], ["Danielle", 19910528], ["Ellen", 19931008], ["Brooke", 19920408], ["Mccall", 19900315], ["Macall", 19860205], ["Megan", 19880705], ["Nicole", 19930729], ["Alexandra", 19911130], ["Elizabeth", 19860524], ["Jade", 19921028], ["Brie", 19890507], ["Jan", 19950301], ["Simone", 19891230], ["Elizabeth", 19860731], ["Gabrielle Faith", 19961223], ["Sachia", 19950511], ["Taylor", 19960416], ["Lindsey", 19900104], ["Alexandra", 19950630], ["Alexandra", 19910213], ["Robin", 19930412], ["Brianna", 19940219], ["Olivia", 19960122], ["Whitney", 19860811], ["Emily J", 19910615], ["Caroline B", 19941031], ["Chalena", 19950818], ["Elizabeth Anita Alexandria", 19960806], ["Breanna Alexa Bachini", 19930521], ["Mary", 19950817], ["Betsy", 19600427], ["Eve", 19621028], ["Janet", 19670405], ["Jaime", 19611001], ["Angel", 19610830], ["Donna", 19550626], ["Valerie", 19540813], ["Lucinda", 19520717], ["J", ""], ["J", ""], ["D", ""], ["K", ""], ["B", ""], ["J", ""], ["R", ""], ["N", ""], ["E", ""], ["F", ""], ["Caroline", 19560622], ["D", ""], ["Wendy", ""], ["Nancy", 19530830], ["Susan", 19570107], ["Gretchen", 19560201], ["Anne", ""], ["Holly", 19690811], ["Margaret", 19601012], ["Clare", 19671008], ["Kathy", 19641104], ["Rita", 19660512], ["Marlene", 19810731], ["Linda", 19570701], ["Beverly", 19530124], ["Ann", 19551013], ["Robin", 19540923], ["A", ""], ["Maria", ""], ["Karen", ""], ["Karen", ""], ["Jenny", ""], ["Lisa", ""], ["Kathy", ""], ["Maria", 19600424], ["Judith", ""], ["Becky", ""], ["Connie", ""], ["Lori", ""], ["Joni", 19651125], ["Lisa", ""], ["Suzanne", ""], ["Shandra", 19680519], ["Merrilee", ""], ["Jennifer", 19660615], ["Chris", ""], ["Trisha", 19690203], ["Stephanie", 19690818], ["Sonya", 19670825], ["Susan", 19710412], ["Tanya", 19690302], ["Tonya", 19690821], ["Kara", 19730105], ["Melissa", 19740402], ["Victoria", 19761230], ["Trina", 19821230], ["Kristine", 19720623], ["Martha", 19691215], ["Candice", 19800207], ["Cindy", 19790422], ["Elizabeth", 19740824], ["Valerie", 19731228], ["Tracey", 19710129], ["Diana", 19680410], ["Alice", 19770830], ["Allison", 19660804], ["Vickie", 19710827], ["Stacey", 19750105], ["Marissa", 19780613], ["Susanna", 19720303], ["Rebecca", 19721119], ["Ashley", 19720408], ["Varalee", 19760502], ["Stephanie", 19770408], ["Elizabeth", 19631112], ["Bridget", 19740207], ["Leslie", 19720209], ["Traci", 19780805], ["Alison", 19741125], ["Amy", 19681007], ["Vanessa", 19760513], ["Laura", 19720426], ["Anna", 19761021], ["Betsy", 19751127], ["Kristen", 19781002], ["Mugette", 19810424], ["Tu", 19780208], ["Irene", 19790612], ["Jennifer", 19720416], ["Diana", 19751029], ["Jody", 19711122], ["Samantha", 19890509], ["Tristen Z", 19940501], ["Rachel", 19920719], ["Ashley", 19871106], ["Alexandra", 19920223], ["Natalie", 19910801], ["Lindsay", 19880226], ["Amelia", 19920802], ["Caroline", 19930313], ["Camila", 19950929], ["Josie", 19951105], ["Skylar Alexandra", 19940424], ["Brooke", 19960212], ["Alexandra", 19910413], ["Daniella", 19971105], ["Hayley", 19950517], ["Jody", 19780930], ["Ella", 19760917], ["Emily Ann", 19820328], ["Jacquelyn", 19801117], ["Lesley", 19781011], ["Kristen", 19770518], ["Cara", 19720421], ["Zuzanna", 19800403], ["Katie", 19800911], ["Marilyn", 19740114], ["Lena", 19830510], ["Brandi", 19770612], ["Andrea", 19780204], ["Sara", 19801022], ["Hillary", 19820417], ["Mariel", 19800220], ["Whitney", 19800508], ["Darian", 19790615], ["Alexandra", 19820310], ["Prim", 19810115], ["Janet", 19800628], ["Rachel", 19690211], ["Lindsay", 19821207], ["Kirsty", 19780517], ["Raluca Daniela", 19830717], ["Mindy", 19720322], ["Erin", 19830419], ["Mary Carlisle", 19780716], ["Erin", 19800116], ["Keiko", 19800429], ["Maiko", 19820623], ["Paige", 19740714], ["Janet", 19790529], ["Briana", 19781221], ["Stacey", 19721219], ["Kristin", 19720204], ["Julia", 19810518], ["Rochelle", 19800430], ["Selin", 19780706], ["Jennifer", 19730117], ["Luana", 19821205], ["Whitney", 19850811], ["Paloma", 19720823], ["Tumeka", 19761226], ["Maria", 19830319], ["Hyacinth", 19610809], ["Eva", 19840706], ["Kara", 19790920], ["Katie", 19841110], ["Melissa", 19840613], ["Emmy", 19870722], ["Alexandria", 19860310], ["Shari", 19641103], ["Michelle", 19791212], ["Alexandra", 19841228], ["Nicole", 19860203], ["Monica", 19851212], ["Caitlin", 19850517], ["Lia", 19800922], ["Michelle", 19870304], ["Sybil", 19770106], ["Jodi", 19810822], ["Liberty", 19870409], ["Mimi", 19841030], ["Melissa", 19861211], ["Jessi", 19870221], ["Courtney", 19880501], ["Chrissie", 19870902], ["Yvette", 19880612], ["Audra", 19830331], ["Leila", 19860206], ["Tamara", 19790924], ["Rebekah", 19791012], ["Sabita", 19840927], ["Shannon", 19870109], ["Courtney", 19851011], ["Polina", 19860408], ["Anamika", 19890413], ["Jie", 19871101], ["Georgette", 19840709], ["Christy", 19871212], ["Suzanne", 19880117], ["Courtney", 19900327], ["Cammie", 19871122], ["Nelly", 19901113], ["Veronica", 19870514], ["Keilly", 19900505], ["Kate", 19831111], ["Reka", 19890708], ["Bianca", 19890514], ["Thien Trang", 19910918], ["Pamela", 19910101], ["Morgan", 19920220], ["Julianna", 19850107], ["Subbadharmi", 19890708], ["Stephanie", 19930216], ["Kelsey", 19910408], ["Alexandra", 19870719], ["Amanda", 19880314], ["Chelsea", 19891211], ["Anna", 19840821], ["Jill M", 19910313], ["Kady", 19860317], ["Phoebe", 19880520], ["Emily", 19921201], ["Christian", 19840913], ["Keri", 19891225], ["Sabrina", 19860112], ["Nataly", 19900913], ["Maria", 19920619], ["Noel", 19930203], ["April", 19920508], ["Ellie", 19930808], ["Stephanie", 19901027], ["Nicole", 19911031], ["Anna", 19940308], ["Veronika", 19900920], ["Annie", 19930330], ["Kyle", 19940405], ["Chanelle", 19940119], ["Yawna", 19860801], ["Hilary", 19910513], ["Ivana", 19861108], ["Gira", 19860829], ["Claire", 19891129], ["Erin", 19880609], ["Caitlin", 19880219], ["Alexandra", 19850703], ["Jennifer", 19950412], ["Kimberly", 19961015], ["Natalie", 19891102], ["Elizaveta Anna", 19930831], ["Veronica M", 19911207], ["Karina", 19950706], ["Sylvia", 19860904], ["Sherry", 19950208], ["Katrine Isabel", 19960315], ["Denise", 19950417], ["Courtney", 19940325], ["Christina", 19960529], ["Noelle", 19881205], ["Lauren", 19950517], ["Breaunna", 19941222], ["Nicole", 19941230], ["Meredith", 19970521], ["Nadia", 19950114], ["Jackie", 19710922], ["Antoinette", 19850107], ["Kathleen", 19740511], ["Kylene", 19790725], ["Dana", 19730725], ["Audra", 19720605], ["Tracee", 19731009], ["Amie", 19800517], ["Jennifer", 19811128], ["Lashawnn", 19740602], ["Jacqueline", 19820209], ["Jennifer", 19770119], ["Kristy", 19741230], ["Susan", 19741201], ["Bridget", 19761018], ["Amy", 19690628], ["Sandra", 19750116], ["Khristen", 19750803], ["Stefanie", 19810322], ["Barrie", 19730724], ["Kate", 19820415], ["Amy", 19731107], ["Anne", 19780520], ["Lauren", 19740830], ["Dewonder", 19590127], ["Kendra", 19790828], ["Jamie", 19801106], ["Jennifer", 19750823], ["Audrey", 19850430], ["Marjorie", 19750503], ["Katie", 19770527], ["Aimee", 19820110], ["Megan", 19810519], ["April", 19781129], ["Maren", 19791106], ["Sarah", 19780514], ["Marie Ange", 19780114], ["Dina", 19680406], ["Margaret", 19760707], ["Mary Beth", 19760329], ["Patricia", 19841020], ["Ashley", 19821229], ["Kathryn", 19790225], ["Leslie", 19810718], ["Becky", 19640801], ["Julie", 19811223], ["Danielle", 19781110], ["Terri", 19650402], ["Amy", 19681215], ["Douglas", 19840522], ["Sara", 19850621], ["Karla", 19770318], ["Kristin", 19841130], ["Kristin", 19810705], ["Bonnie", 19850503], ["Natalie", 19830401], ["Jennifer", 19830702], ["Claire", 19700527], ["Lauren", 19780316], ["Alison", 19791129], ["Laura", 19710624], ["Katia", 19810816], ["Kara", 19771202], ["Violette", 19790927], ["Lisa", 19740221], ["Evonne", 19740923], ["Mandy", 19790312], ["Jessica", 19800415], ["Emily", 19811119], ["Callie", 19770711], ["Maggie", 19750529], ["Elina", 19820521], ["Terry Ann", 19740428], ["Kimberly", 19790725], ["Bettina", 19820718], ["Lindsay", 19800519], ["Johanna", 19750518], ["Amy", 19790124], ["Meiling", 19791112], ["Jennifer", 19781020], ["Vania", 19810428], ["Megan", 19831014], ["Lindsey", 19800201], ["Megan", 19820411], ["Angela", 19840329], ["Megan", 19840920], ["Nicolette", 19831108], ["Anita", 19860219], ["Alessandra", 19870112], ["Aradhana", 19820709], ["Tiffany", 19831228], ["Macey", 19830224], ["Kelcy", 19861225], ["Caylan", 19820701], ["Stephanie", 19820923], ["Jan", 19580317], ["Kate", 19830530], ["Karen", 19671205], ["Sarah Jane", 19820802], ["Catrina", 19840913], ["Bethany", 19821129], ["Lindsay", 19820811], ["Kathleen", 19820917], ["Amy", 19810415], ["Emilia", 19820204], ["Colleen", 19790212], ["Ashlee", 19850522], ["Saras", 19830726], ["Brittany", 19850420], ["Laila", 19810805], ["Natalie", 19851103], ["Celena", 19790130], ["Marine", 19780929], ["Cara", 19730424], ["Loni", 19810928], ["Christyn", 19850210], ["Cassy", 19850802], ["Manisha", 19770513], ["Jennifer", 19811121], ["Michelle", 19801002], ["Brook", 19851231], ["Samantha", 19840807], ["Stephanie", 19870411], ["Courtney", 19820502], ["Melissa", 19840112], ["Kristin", 19790227], ["Adriana", 19780902], ["Christine", 19831216], ["Julie", 19840521], ["Cristina", 19860826], ["Nadia", 19850209], ["Amanda", 19821020], ["Camelia", 19860406], ["Emily", 19850201], ["Danielle", 19840717], ["Rochelle", 19800627], ["Brianna", 19851215], ["Zena", 19880717], ["Adina", 19870619], ["Lauren", 19880204], ["Lauren", 19870928], ["Meg", 19870811], ["Ristine", 19850116], ["Jennifer", 19841115], ["Lindsey", 19860101], ["Lindsay", 19880524], ["Gloriann", 19840228], ["Patricia", 19740119], ["Kelly", 19820223], ["Amanda", 19870813], ["Elizabeth", 19860128], ["Whitney", 19851225], ["Laura", 19850506], ["Masha", 19840211], ["Karina", 19880811], ["Erin", 19850113], ["Randi", 19870211], ["Kewa", 19860701], ["Hala", 19850809], ["Dasha", 19870606], ["Suzanna", 19861013], ["Colleen", 19880209], ["Blair", 19830904], ["Simone", 19881010], ["Jessica", 19870304], ["Austin", 19860601], ["Preethi", 19850629], ["Christala", 19890709], ["Krista", 19900423], ["Marie", 19830721], ["Ashley", 19861113], ["Latrell", 19891212], ["Sheryl", 19850920], ["Amanda", 19850319], ["Blakeley", 19841114], ["Ashley", 19870917], ["Whitney", 19890109], ["Marlene", 19880329], ["Melissa", 19860801], ["Alex", 19870117], ["Jessica", 19811223], ["Megan", 19890204], ["Jacqueline", 19830608], ["Melody", 19830708], ["Sarah", 19910314], ["Marie", 19910614], ["Daron", 19851128], ["Amy", 19790324], ["Dina", 19871014], ["Mia", 19910312], ["Valerie", 19851231], ["Amanda", 19880523], ["Connor", 19870922], ["Elizabeth", 19920114], ["Brittany", 19870208], ["Kristen A", 19880325], ["Julie", 19880331], ["Sarah", 19880129], ["Emily", 19890724], ["Christine", 19871225], ["Amanda", 19850511], ["Nicole", 19880620], ["Laurianne", 19881018], ["Pamela", 19901124], ["Miya", 19871114], ["Rachel", 19830708], ["Joanna", 19891009], ["Lynn", 19791216], ["Claire", 19871108], ["Paola", 19920827], ["Lauren", 19890512], ["Erin Carol", 19930506], ["Cameron", 19881224], ["Julie", 19870627], ["Stefanie", 19890130], ["Hannah", 19910812], ["Katherine", 19860305], ["Olivia", 19880423], ["Christina", 19880426], ["Christina", 19881212], ["Cierra", 19910927], ["Milena", 19850506], ["Christin J", 19870731], ["Stephanie", 19900327], ["Kaysara", 19910623], ["Nina", 19900115], ["Deirdre", 19901205], ["Kristin", 19841024], ["Jacqueline", 19900913], ["Stephany", 19900609], ["Erica", 19900702], ["Julia", 19910916], ["Grace", 19891211], ["C C", 19911009], ["Sarah", 19910422], ["Marianne", 19850906], ["Monica", 19920622], ["Kate", 19920109], ["Amanda Marie", 19860106], ["Alexa", 19900824], ["Denise", 19890731], ["Molly", 19890525], ["Nelo", 19920705], ["Farwa", 19891101], ["Millie", 19641005], ["Brooke Lindsey", 19940622], ["Lilly F", 19911101], ["Brynn", 19910801], ["Karina", 19831112], ["Tracy", 19740827], ["Desiree", 19931110], ["Rachael", 19910427], ["Alrissa", 19920724], ["Amanda", 19870317], ["Olivia", 19910711], ["Caryssa L", 19920413], ["Monica", 19930108], ["Joelle", 19910606], ["Malika", 19910709], ["Theresa", 19930607], ["Mary Anne", 19920215], ["Morocco", 19921107], ["Mara", 19920222], ["Alejandra Maria", 19950228], ["Catherine", 19880430], ["Kate", 19901106], ["Abigail", 19900209], ["Sabrina", 19930224], ["Heatherm", 19890925], ["Stephanie", 19940511], ["Leighann", 19931204], ["Lauren", 19880816], ["Kayla", 19920921], ["Kir", 19891031], ["Skylar", 19930914], ["Julia", 19931207], ["Meghan", 19930621], ["Nida", 19911029], ["Lauren", 19880905], ["Kelly K", 19910531], ["Alyssa Grace", 19950215], ["Mary", 19911122], ["Madeleine", 19920319], ["Rachel", 19840302], ["Alex", 19911229], ["Kyra", 19960510], ["Suzy", 19940830], ["Remeice", 19891112], ["Kate", 19940201], ["Courtney", 19891015], ["Molly", 19930810], ["Stephanie", 19940131], ["Alexandra M", 19870719], ["Aleksandra", 19960409], ["Erin", 19880709], ["Jessica", 19930428], ["Spencer", 19950125], ["Anik", 19910405], ["Simone", 19920717], ["Emma", 19930623], ["Melissa", 19921004], ["Tina", 19950427], ["Julia", 19940613], ["Rachael", 19931209], ["Shelby", 19930114], ["Epiphany B", 19921217], ["Kaitlin", 19921215], ["Mariana", 19950927], ["Hannah", 19951103], ["Casey", 19910613], ["Deborah", 19940514], ["Jessica", 19931117], ["Kelsey", 19940821], ["Samantha", 19930126], ["Blair", 19940814], ["Martha V", 19900628], ["Amanda", 19930322], ["Sarah", 19920729], ["Emily", 19931112], ["Jamie", 19950308], ["Kelly", 19770505], ["Quinn", 19941110], ["Sophia", 19930330], ["Sierra A", 19900816], ["Mckenzie", 19940107], ["Stacey", 19900117], ["Courtney", 19910226], ["Rosalia", 19900208], ["Sydney", 19950207], ["Mia", 19950406], ["Erin Kane", 19960512], ["Laura", 19841119], ["Eva", 19921222], ["Elizabeth", 19940706], ["Sarah", 19930713], ["Elyse", 19870910], ["Sabrina", 19920912], ["Julia", 19890114], ["Gabriella", 19951208], ["Tanya", 19930914], ["Nyla", 19960730], ["Louisa", 19960516], ["Zina", 19980402], ["Tornado Alicia", 19980512], ["Madison", 19970919], ["Rima", 19951116], ["Kourtney J", 19940907], ["Natasha", 19940823], ["Erin", 19901230], ["Rachel May", 19941113], ["Jillian", 19941210], ["Caroline", 19960315], ["Dominique", 19870203], ["Trelsie", 19890707], ["Angela", 19950604], ["Nicole", 19980429], ["Kim", 19951027], ["Emina", 19930330], ["Lynda", 19921123], ["Joanna Mary", 19930201], ["Caroline", 19960103], ["Julia", 19940403], ["Callie", 19910904], ["Maxine", 19910710], ["Katie", 19921211], ["Emma Christine", 19980201], ["Johnnise", 19960510], ["Katerina", 19970717], ["Jessica", 19970105], ["Marjorie", 19880420], ["Maci", 19931007], ["Kaitlyn", 19971204], ["Jacqueline", 19941203], ["Charity", 19870711], ["Parris", 19980708], ["Jamie", 19930819], ["Miriam Ruth", 19940724], ["Elizabeth", 19910118], ["Amanda", 19860130], ["Lindsay", 19780708], ["Erica", 19860327], ["Dina", 19711211], ["Robyn", 19850111], ["Anita", 19810402], ["Casey", 19840501], ["Emily", 19850224], ["Jamie", 19880415], ["Brittany", 19880627], ["Elizabeth", 19550921], ["Carolyn", 19900415], ["Cassandra", 19891211], ["Prissy", 19910807], ["Kristin", 19830420], ["Diamond", 19901226], ["Celia", 19860527], ["Tiffany", 19891126], ["Jennifer", 19890531], ["Komal", 19930108], ["Roxanne", 19890826], ["Mandy", 19810914], ["Amanda", 19800324], ["Alissa", 19671209], ["Kay", 19570927], ["Jane", 19661222], ["Tracie", 19610116], ["Elizabeth", 19630811], ["Cinda", 19710410], ["Tracy", 19611021], ["Dena", 19650928], ["Hemel", 19660108], ["Karen", 19630803], ["Reka", 19670612], ["Vincenza", 19660820], ["Lisa", 19640803], ["Lynn", 19661018], ["Jill", 19731226], ["Julie", 19710609], ["Kilmeny", 19660218], ["Kay", 19690131], ["Debbie", 19651129], ["Anne Marie", 19660720], ["Leslie", 19660908], ["Lisa", 19630604], ["Lisa", 19611106], ["Tory", 19660712], ["Kylie", 19700509], ["Anya", 19690220], ["Jennifer", 19670106], ["Diana", 19721007], ["Betsy", 19671127], ["Katrina", 19671129], ["Karen", 19701102], ["Susan", 19710206], ["Sherri", 19730118], ["Tonya", 19691110], ["Julie", 19680817], ["Susan", 19710206], ["Jamie", 19691029], ["Alita", 19630112], ["Tara", 19681223], ["Erika", 19720516], ["Kellie", 19670601], ["Happy", 19680605], ["Angie", 19710323], ["Bonnie", 19770412], ["Farley", 19741212], ["Tunecia", 19701023], ["Roseann", 19710227], ["Allison", 19710927], ["Hillery", 19610619], ["La Shawnn", 19740206], ["Sylvia", 19610419], ["Kathy", 19741105], ["Zuzanna", 19790726], ["Cassi", 19850902], ["Lejla", 19870206], ["Danielle", 19820120], ["Geneva", 19871225], ["Katie", 19891023], ["Katie", 19881216], ["Brittany", 19940406], ["Allie", 19950630], ["Sofia", 19981114], ["Mia", 19970723], ["Ty Ana", 19970313], ["Karina Kristina", 19981021], ["Jessica", 19890916], ["Trisha", 19981027], ["Ashley", 19881017], ["Tina", 19920831], ["Tatijana", 19971116], ["Taylor L", 19950117], ["Alexa", 19980707], ["Emerald", 19970905], ["Marie", 19970611], ["Alexandra", 19950224], ["Aleah", 19910923], ["Sarah", 19941219], ["Usue Maitane", 19981028], ["Ellie", 19970710], ["Maia A", 19960921], ["Raquel", 19980128], ["Peggy", 19951110], ["Rebecca", 19971004], ["Camila", 19961125], ["Karyn", 19940912], ["Ayla", 19960715], ["Rasheeda", 19950630], ["Amy", 19941028], ["Ariana", 19960126], ["Luisa", 19951005], ["Mary", 19910802], ["Kristi", 19900427], ["Ronit", 19931203], ["Julia Christine", 19921027], ["Kristina N", 19910125], ["Macie", 19941023], ["Jessica", 19950102], ["Rhiann", 19940622], ["Frances", 19940222], ["Kelly", 19960221], ["Hanna", 19980225], ["Natalie", 19960508], ["Dasha", 19961011], ["Elizabeth", 19910218], ["Brianna", 19951012], ["Kristin", 19951122], ["Kristina", 19951204], ["Maddie", 19971117], ["Raveena", 19980723], ["Daniella", 19971027], ["Laura", 19970305], ["Idia", 19930922], ["Chloe Michele", 19970905], ["Morgan", 19941219], ["Nikki", 19960418], ["Sianna", 19900804], ["Nicole", 19990508], ["Mercedes", 19970525], ["Lourdes", 19990531], ["Adi", 19951213], ["Anna", 19971103], ["Alexandra", 19980719], ["Katarina", 19960704], ["Michaela", 19990726], ["Ena", 19980212], ["Catherine Cartan", 19990408], ["Hadley", 19960311], ["Madison", 19960402], ["Jaeda", 19990728], ["Jeannez", 19960707], ["Erica", 19980316], ["Jessie", 19980419], ["Andie K", 19970107], ["Alexandria", 19960511], ["Gabriella", 19960709], ["Kelly", 19990509], ["Terri", 19960723], ["Angel", 19850125], ["Maria", 19970506], ["Alexis", 19980809], ["Rianna", 19960903], ["Megen", 19960709], ["Caroline", 19980905], ["Sophie", 19970528], ["Nicole", 19960504], ["Jacqueline", 19970531], ["Jessica", 19970709], ["Adriana", 19890308], ["Kylie", 19970606], ["Yuki Kristina", 19950819], ["Lexi", 19950525], ["Caroline", 19970726], ["Ingrid", 19980616], ["Alexandra", 19970301], ["Nada", 20000308], ["Alexis", 19950606], ["Felicity", 19970313], ["Tory", 19930105], ["Aimee", 19940907], ["Alli", 19961203], ["Claudia", 19961206], ["Brooke", 19951010], ["Marina", 19981123], ["Zoe Adeline", 19941217], ["Jessica", 19970605], ["Ashley", 19920829], ["Valerie", 19971122], ["Ashley", 19990208], ["Brittany", 19920303], ["Olivia", 19940623], ["Taylor", 19950731], ["Alexis", 19950724], ["Sara", 19971217], ["Lindsay", 19930107], ["Liza", 19950317], ["Jayci", 20000517], ["Marina", 19920314], ["Sydney", 19990430], ["Alyza", 19951122], ["Sophia", 19920113], ["Riley", 19990615], ["Delaney", 19981028], ["Jane", 19961112], ["Valerie Ann", 19980801], ["Carolyn", 19970524], ["Maegan", 19950416], ["Tamara", 19971129], ["Mary", 19981025], ["Victoria", 19990401], ["Kennedy", 19970521], ["Amy", 19970120], ["Makenna", 19980226], ["Stephanie", 19980415], ["Nicole Taylor", 19990426], ["Claire", 20000525], ["Jada", 19990129], ["Sara", 19970723], ["Hannah", 19960923], ["Sophia", 19971005], ["Akiko", 19930913], ["Karina", 19970808], ["Haley", 19910403], ["Paige", 19970222], ["Kayla", 19990928], ["Carson", 20000909], ["Amanda", 19940813], ["Maria", 19990721], ["Kylie", 19990321], ["Luciana", 19981001], ["Zoe", 20010308], ["Sachi", 19981129], ["Audrey", 19951029], ["Anna", 19970319], ["Abigail", 20010122], ["Cameron", 19990920], ["Katelyn", 19921211], ["Katharine", 19961019], ["Elyse", 19981014], ["Mimi", 19930430], ["Bess", 19971029], ["Ines Karmen", 19970615], ["Taylor", 19990615], ["Kristen", 19970407], ["Sabrina", 19971003], ["Desirae", 19940111], ["Sarah", 19960418], ["Rachel", 19961108], ["Victoria", 19990807], ["Nini", 19950909], ["Francesca", 19970722], ["Makenzie", 19990610], ["Chiara", 19980826], ["Melissa", 19930602], ["Morgan", 19990416], ["Jerricka", 19950116], ["Eva", 19961102], ["Miranda", 19990307], ["Teresia", 19990529], ["Julia", 19971217], ["Malkia", 20000808], ["Lorraine M", 19930615], ["Carol", 19960218], ["Jocelyn", 19900526], ["Roosh", 19920321], ["Alexa", 19980703], ["Alyvia", 20000503], ["Katie", 19990929], ["Meible", 19990519], ["Elizabeth", 20010712], ["Emma", 20010518], ["Arianna", 19950206], ["Kiah", 19950117], ["Alyssa", 20000210], ["Stephanie", 19880402], ["Sofia", 19990722], ["Sarah", 19930814], ["Melan", 19970406], ["Alexandra", 19990105], ["Dilara", 19990911], ["Hurricane Tyra", 20010302], ["Taylor", 19980222], ["Nami", 19980827], ["Marcella", 20001012], ["Sophia", 20010630], ["Delisha", ""], ["Haley", ""], ["Jenna", ""], ["Nikita", 19931021], ["Hoda", ""], ["Meredith", 19990310], ["Morgan", 19950317], ["Kirsten", 19940508], ["Maya", 19940527], ["Kat", 19930215], ["Alexandra", 19930215], ["Meghan", 19971028], ["Salma", 20000828], ["Madeline", 19990307], ["Lindsay", 19981217], ["Alexa", 20010908], ["Mary Catherine", 19971104], ["Cheyenne", 19960326], ["Neri", 19990902], ["Jesse", 20011004], ["Ann", 20000626], ["Natalia", 19930929], ["Whitney", 20020417], ["Christina", 19970725], ["Sofia", 19980703], ["Nicole", 20000805], ["Kenadi", 19970313], ["Paiton", 19980808], ["Shannon", 19950915], ["Elysia", 20000324], ["Ashley", 19991026], ["Alexis", 19970314], ["Caty", 20011120], ["Isabella", 20010706], ["Elizabeth", 20010519], ["Anna", 20020306], ["Dakota", 20020508], ["Janice", 19990105], ["Amanda", 20010831], ["Jada", 19980319], ["Hind", 19990228], ["Mikaela", 19890801], ["Micheline", 19970428], ["Kendal", 19940106], ["Anna", 19991008], ["Mia", 19981021], ["Chloe", 20010830], ["Abigail", 20010310], ["Ryan", 19990510], ["Maia", ""], ["Jana", 19941110], ["Shale", 20011015], ["Helen Abigail", 19980520], ["Kariann", 19990116], ["Kennedy", 19980903], ["Caroline", 19980929], ["Allison", 19981031], ["Melissa", 19970624], ["Ellyse", 19961109], ["Charleen", 19410918], ["Doris", 19250620], ["Patricia", 19370601], ["Pauline", 19190806], ["Helen", 19290507], ["Mary", ""], ["Althea", 19270825], ["Carrie", 19571026], ["Cathy", 19510822], ["Karen", 19570408], ["", ""], ["Barbara", ""], ["Susan", 19611219], ["Jan", 19630609], ["Diane", 19650626], ["Carol", 19620605], ["Leanne", ""], ["Shelley", 19631120], ["Maureen", ""], ["Lorrie", 19601015], ["Tiffany", 19600417], ["Sarah", 19741010], ["Meg", ""], ["Wendy", ""], ["Lynn", 19660819], ["Heidi", 19640507], ["Jacqueline", 19620329], ["Sheri", 19690629], ["Diane", 19710121], ["Angela", 19641211], ["Nancy", ""], ["Liz", 19640423], ["Jamie", 19630530], ["", ""], ["Laura", 19681210], ["Jill", ""], ["Courtney", 19560622], ["Tiffany", 19810121], ["Kristen", 19810501], ["Wendy", 19681001], ["Sheila", ""], ["Heidi", 19601007], ["Julie", 19610523], ["Deborah", 19701129], ["Jennifer", ""], ["Cindy", 19591207], ["Lynn", ""], ["I", ""], ["Lisa", 19600808], ["Jill", 19540907], ["Aschara", ""], ["Heidi", 19720713], ["Julie", 19710609], ["", ""], ["G", ""], ["Stephanie", 19661010], ["Lucy", 19540402], ["Cathy", ""], ["", ""], ["Emmy", ""], ["", ""], ["Claudette", ""], ["Lisa", ""], ["Lynn", 19631114], ["Lindsay", ""], ["Lisa", 19630218], ["Virginia", ""], ["Lloyd", 19451208], ["Suzanne", 19750612], ["Caren", 19611110], ["Allegra", 19720113], ["Molly", 19630215], ["Lori", 19600112], ["Lindsay", 19780417], ["Adrienne", 19680903], ["Quynh", 19710627], ["Kari", 19810120], ["Lisa", 19590212], ["Christa", 19790115], ["Kelly", 19770505], ["Massoumeh", 19770803], ["Louise", 19500119], ["Jayne", 19741006], ["Christine", ""], ["Kim", 19780329], ["Lani", 19600808], ["Julie", 19690425], ["Ruth Ann", 19700506], ["Lauren", 19830423], ["Tasha", 19760223], ["Kealy", 19801030], ["Courtney", 19721230], ["Julie Ann", 19750618], ["Nicole", 19741001], ["Ashlee", 19801005], ["Kelly", 19751106], ["Alexandra", 19790210], ["Mary", 19730912], ["Lisa", 19660204], ["Monty", 19650506], ["Julie Anne", 19800911], ["Lorrie", 19651203], ["Kendra", 19760621], ["Chris", 19610706], ["Christine", 19850303], ["Rankin", 19840126], ["Julia", 19850721], ["Sabaea", 19811125], ["Nicole", 19750602], ["Joyce", 19800628], ["Sarah", 19820410], ["Jean Marie", 19651109], ["Stacey", 19720110], ["Varita", 19820702], ["Shera", 19780910], ["Trisha", 19710617], ["Suzanne", 19680921], ["Lisa", 19801119], ["Martha", 19551005], ["Kandiss", 19770221], ["Brooke", 19780413], ["Cristina", 19750825], ["Jasmine", 19810102], ["Kathleen", 19830125], ["Melissa", 19770524], ["Michelle", 19731114], ["April", 19831011], ["Olivia", 19810310], ["Melissa", 19650221], ["Cami", 19720314], ["Marissa", 19780318], ["Kristin", 19720204], ["Christi", 19610509], ["Cindy", ""], ["Ashley", 19830506], ["Leigh", 19831014], ["Natalia", 19831110], ["Nikhila", 19850208], ["Rachel", 19820916], ["Alison", 19850118], ["Cameron", 19830328], ["Gretchen", 19820304], ["Cackie", 19661107], ["Stephanie", 19650104], ["Miriam", 19850925], ["Nicole", 19880219], ["Lilivette", 19800225], ["Jonni", 19791203], ["Amanda", 19850102], ["Weyli", 19800722], ["Helene", 19841215], ["Amanda", 19841101], ["Nicole", 19870615], ["Stefani", 19841215], ["Laura", 19860217], ["Tifanie", 19880920], ["Mary", 19651124], ["Katherine", 19730414], ["Monica", 19800204], ["Nicole", 19850105], ["Shanna", 19750428], ["Jane", 19890926], ["Estelle", 19890503], ["Maria", 19820204], ["Jessica", 19860812], ["Renata", 19650224], ["Laura", 19830408], ["Lindsey", 19840313], ["Christy", 19850925], ["Timberly", 19831209], ["Brooke", 19850423], ["Kelli Elizabeth", 19940409], ["Melanie", ""], ["Whitney P", 19930625], ["Sydni", 19880612], ["Jasmine Nicole", 19930826], ["Alexandra", 19920812], ["Amber", 19870605], ["Kelsey", 19920610], ["Alex", 19920225], ["Ashley M", 19940304], ["Lauren", 19940828], ["Stacia", 19930914], ["Alexandria", 19900111], ["Rozel Asuncion", 19950616], ["Bolan", 19890908], ["Annie", 19920829], ["Eva", 19941007], ["Whitney", 19900909], ["Hanna", 19911107], ["Mandy", 19910501], ["Gia", 19900614], ["Brooke", 19951105], ["Lisa", 19680519], ["Alexandra M", 19930120], ["Sonya Sheeran", 19940816], ["Shinann", 19900608], ["Nicolette", 19950824], ["Rebecca", 19921125], ["Ashley", 19960430], ["Savannah", 19950115], ["Margaret", 19570423], ["Carlee", 19950724], ["Sarah", 19850718], ["Caroline", 19840926], ["Alexia", 19940421], ["Micaela", 19890311], ["Tina", 19810116], ["Manon Cristina", 19941224], ["Hailey M", 19930127], ["Tiffany", 19911216], ["Devan", 19940528], ["Courtenay", 19770227], ["Christine", 19931110], ["Emily", 19900517], ["Leyla", 19930423], ["Alexis", 19880722], ["Di Andrea", 19950730], ["Jandayia", 19960303], ["Margarita", 19950317], ["Olivia", 19941211], ["Caitlin", 19910905], ["Kara", 19910629], ["Paloma", 19890313], ["Susie", 19491114], ["Emily", 19861118], ["Abbie", 19951121], ["Alanna", 19950107], ["Siobhan", 19871110], ["Kayla Symone", 19960110], ["Margie", 19901106], ["Jamie", 19820521], ["Adria", 19791221], ["Lynn", 19941106], ["Nadege", 19960527], ["Lauren", 19941203], ["Tiffany", 19881204], ["Sarah", 19880907], ["Victoria", 19941214], ["Natalia", 19950325], ["Alexandra", 19931013], ["Montana", 19970219], ["Samantha Rose", 19940410], ["Angela", 19980331], ["Samantha", 19950527], ["Elizabeth", 19890419], ["Sarah", 19941121], ["Gabriela", 19950418], ["Tina", 19911222], ["Mia", 19920116], ["Stephanie", 19920831], ["Kennan", 19960317], ["Madison", 19930602], ["Whitney", 19910815], ["Sarah", 19960925], ["Brooke", 19980614], ["Jessie Lynn", 19951228], ["Brittany", 19941212], ["Kylie", 19870826], ["Erin", 19861102], ["Lindsay", 19821118], ["Jessica", 19801107], ["Yuliya", 19860609], ["Kathryn", 19831129], ["Lyndsey", 19820509], ["Tiana", 19841014], ["Keri", 19870310], ["Sarah", 19871201], ["Alyssa", 19841006], ["Rachel", 19870205], ["Angelina", 19521229], ["Amy", 19540720], ["Bernadette", 19821015], ["Tarrin", 19820423], ["Christine", 19670817], ["Christian", 19870108], ["Emily", 19820728], ["Kelly", 19700330], ["Courtney", 19900729], ["Taylor", 19900818], ["Carissa", 19900507], ["Heather", 19810210], ["Georgiana", 19880624], ["Michelle", 19910127], ["Brintney", 19871008], ["Chisako", 19870720], ["Kristen", 19890819], ["Jessica", 19910223], ["Susie", 19700212], ["Ashley", 19830410], ["Megan", 19890818], ["Larraine", 19910713], ["Courtney", 19920503], ["Tiffany", 19860519], ["Olga", 19880819], ["Shauna", 19900424], ["Canna", 19860515], ["Jennifer", 19890525], ["Keri", ""], ["Lauren", 19890922], ["Whitney", 19880108], ["Caitlyn", 19891220], ["Stephanie", 19890627], ["Jacqueline", 19910905], ["Natalia Maria", 19880414], ["Katie", 19921222], ["Stephanie", 19880527], ["Kirsten", 19810703], ["Taylor", 19881121], ["Rebecca", 19880627], ["Maggie", 19881230], ["Arianna", 19910421], ["Katrina", 19860415], ["Jennifer", 19851029], ["Amber", 19920313], ["Kali A", 19880211], ["Merritt", 19890702], ["Whitney", 19860409], ["Jovana", 19900831], ["Daisy", 19841010], ["Danice", 19801001], ["Dana", 19870713], ["Kellie", 19871004], ["Magdalena", 19880701], ["Alison", 19900425], ["Myke", 19610608], ["Isadora", 19920421], ["Kelly", 19900622], ["Kristina", 19890516], ["Lindsey", 19930106], ["Emily Theresa", 19901123], ["Lauren", 19900423], ["Jenna", 19931127], ["Elizabeth", 19831216], ["Kelly", 19891215], ["Chelsea", 19880701], ["Sabrina", 19930104], ["Jamila", 19920114], ["Tracy", 19860926], ["Whitney", 19870831], ["Margaret", 19910927], ["Alexandra", 19920422], ["Mikayla", 19880525], ["Hailee", 19880530], ["Maureen", 19900314], ["Catherine R", 19910609], ["Erin", 19900530], ["Maryam", 19930203], ["Shabnam", 19910726], ["Caitlyn", 19931013], ["Chelsea", 19850919], ["Ashley", 19820703], ["Christina", 19890331], ["Chanel", 19930618], ["Amanda", 19890125], ["Alexandra", 19891129], ["Monica", 19901123], ["Lauren", 19890811], ["Jacquelyn", 19870304], ["Jacquelynn", 19890111], ["Courtney M", 19880916], ["Courtney", 19820114], ["Kristen", 19820114], ["Cameron", 19881217], ["Caroline", 19900110], ["Susanne", 19750213], ["Sarah", 19920801], ["Niltooli", 19900411], ["Victoria", 19891231], ["Hiromi", 19900510], ["Rachel", 19900209], ["Sena", 19970605], ["Christi", 19960204], ["Tatum", 19970428], ["Madeline", 19940911], ["Julia", 19890628], ["Kelly", 19941021], ["Jasmine Janelle", 19920519], ["Maria", 19950924], ["Monet", 19960106], ["Cordelia Currey", 19930607], ["Millie", 19911004], ["Madison", 19941227], ["Zaina", 19970519], ["Katelyn", 19870608], ["Amanda", 19961028], ["Anna Kate", 19941011], ["Tamijean", 19980616], ["Victoria", 19961202], ["Christiana", 19951116], ["Angie", 19750716], ["Kerry", 19680528], ["Anna", 19960128], ["Sabrina", 19920113], ["Brienne", 19971125], ["Sarah", 19960513], ["Stephanie J", 19960305], ["Alexus", 19970206], ["Alexandra", 19990630], ["Chloe", 19900921], ["Megan", 19960122], ["Erin", 19941226], ["Sydney", 19950909], ["Katherine", ""], ["Lauren", 19990905], ["Teresa", 19941010], ["Alix", 19950718], ["Alaina", 19980809], ["Cassie", 19950201], ["Morgan", 19940208], ["Kenna", 19930918], ["Kelli", 19931202], ["Lauren", 19940618], ["Katrina", 19920314], ["Taylor", 19921208], ["Sara Catherine", 19970130], ["Tamara", 19850418], ["Mckenna Alexandra", 19970303], ["Caroline", 19990809], ["Hada", 19980710], ["Lauren", 19970108], ["Jacara", 19980704], ["Ndindi Inziani", 19971224], ["Susanne", 19980505], ["Bianca", 19960804], ["Caitlin", 19960406], ["Iesha", 19911109], ["Chelsie Marie", 19920321], ["Aurora", 19921204], ["Alexandra", 19950811], ["Karolina", 19990305], ["Skylar", 19950616], ["Jillian", 20010513], ["Gabrielle", 19960114], ["Gabriella", 19971216], ["Allison", 19980324], ["Madeline", 19970403], ["Darya", 19981019], ["Seriana", 19980227], ["Erin", 19960312], ["Katherine", 20001206], ["Vivian", 20000111], ["Stephanie M", 19931110], ["Sabrina", 19971216], ["Kate", 19971013], ["Emma", 20000212], ["Lauren", 20010728], ["Kayla", 19930220], ["Khume", 19961023], ["Christiana", 19970614], ["Candace Olivia", 19800101], ["Alycia", 20001231], ["Mikayla", 19990722], ["Tiffany", 19971009], ["Sanyukta", 20010928], ["Karly", 19850115], ["Emma", 19940624], ["Arielle", 20000910], ["Marjorie", 19980202], ["Anastasiya", 19990324], ["Natasha", ""], ["Addison", ""], ["Mbalia", 19980107], ["Safiya", ""], ["Taylor", 20010406], ["Natasha", 19920609], ["Katherine", 20010213], ["Madison", 19961215], ["Omolola", 19840818], ["Reagan", 19980505], ["Katelyn", 19960909], ["Sophie", 20021031], ["Gabrielle", 19920202], ["Taylor", 19981203], ["Andrea", 19940728], ["Annie", 19870905], ["Olivia", 19990308], ["Imani", 20011220], ["Lauren", 20020523], ["Taylor", 20000807], ["Nicole", 20000304], ["Jane", 19881118], ["Chelsea", 20000819], ["Peyton", 19990915], ["Ellie", 20000523], ["Jane", 19931227], ["Anna", 20010815], ["Rosalyn", 19930622], ["Madison", 19990419], ["Sophia", 20010718], ["Jasmine", 19990813], ["Theresa", 19701102], ["Spirit", 19941027], ["Najah", 20010909], ["Sharmada", 19990810], ["Nicole", 20000812], ["Nina", 20020117], ["Alexa", 20020906], ["Naomi", 20020516], ["Sabina", 20010406], ["Katie", 20011231], ["Nikki", 20011019], ["Mccartney", 19990708], ["Tricia", 19920706], ["Peyton", 20011008], ["Anika", 20010807], ["Dalayna", 20001216], ["Kolie", 20000317], ["Cassie", 19960225], ["Anna", 20020102], ["Monica", 19950419], ["Taysia", 20000708], ["Kathleen", 19940728], ["Amanda", 19990718], ["Jimena", 20000707], ["Cassidy", 19950510], ["Brittany", 19950405]], "trigger_words": ["First Name", "Birth Date"], "Prediction": "first_name, birth_date FROM players WHERE country_code = 'USA';"}
{"db_id": "wta_1", "query": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches", "query_toks": ["SELECT", "avg", "(", "loser_age", ")", ",", "avg", "(", "winner_age", ")", "FROM", "matches"], "query_toks_no_value": ["select", "avg", "(", "loser_age", ")", ",", "avg", "(", "winner_age", ")", "from", "matches"], "question": "Find the average age of losers and winners of all matches.", "question_toks": ["Find", "the", "average", "age", "of", "losers", "and", "winners", "of", "all", "matches", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 9, false], null]], [5, [0, [0, 28, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "435", "answer_text": [[27.31121386258453, 27.062177773183823]], "trigger_words": ["Average Number", "Average Number"], "Prediction": "AVG(loser_age) AS avg_loser_age, AVG(winner_age) AS avg_winner_age FROM matches;"}
{"db_id": "wta_1", "query": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches", "query_toks": ["SELECT", "avg", "(", "loser_age", ")", ",", "avg", "(", "winner_age", ")", "FROM", "matches"], "query_toks_no_value": ["select", "avg", "(", "loser_age", ")", ",", "avg", "(", "winner_age", ")", "from", "matches"], "question": "What are the average ages of losers and winners across matches?", "question_toks": ["What", "are", "the", "average", "ages", "of", "losers", "and", "winners", "across", "matches", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 9, false], null]], [5, [0, [0, 28, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "436", "answer_text": [[27.31121386258453, 27.062177773183823]], "trigger_words": ["Average Number", "Average Number"], "Prediction": "AVG(loser_age), AVG(winner_age) FROM matches;"}
{"db_id": "wta_1", "query": "SELECT avg(winner_rank) FROM matches", "query_toks": ["SELECT", "avg", "(", "winner_rank", ")", "FROM", "matches"], "query_toks_no_value": ["select", "avg", "(", "winner_rank", ")", "from", "matches"], "question": "Find the average rank of winners in all matches.", "question_toks": ["Find", "the", "average", "rank", "of", "winners", "in", "all", "matches", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "437", "answer_text": [[13.715827338129497]], "trigger_words": ["Average Number"], "Prediction": "AVG(winner_rank) FROM matches;"}
{"db_id": "wta_1", "query": "SELECT avg(winner_rank) FROM matches", "query_toks": ["SELECT", "avg", "(", "winner_rank", ")", "FROM", "matches"], "query_toks_no_value": ["select", "avg", "(", "winner_rank", ")", "from", "matches"], "question": "What is the average rank for winners in all matches?", "question_toks": ["What", "is", "the", "average", "rank", "for", "winners", "in", "all", "matches", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "438", "answer_text": [[13.715827338129497]], "trigger_words": ["Average Number"], "Prediction": "AVG(winner_rank) FROM matches;"}
{"db_id": "wta_1", "query": "SELECT min(loser_rank) FROM matches", "query_toks": ["SELECT", "min", "(", "loser_rank", ")", "FROM", "matches"], "query_toks_no_value": ["select", "min", "(", "loser_rank", ")", "from", "matches"], "question": "Find the highest rank of losers in all matches.", "question_toks": ["Find", "the", "highest", "rank", "of", "losers", "in", "all", "matches", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "439", "answer_text": [[1]], "trigger_words": ["Minimal Number"], "Prediction": "MAX(loser_rank) FROM matches;"}
{"db_id": "wta_1", "query": "SELECT min(loser_rank) FROM matches", "query_toks": ["SELECT", "min", "(", "loser_rank", ")", "FROM", "matches"], "query_toks_no_value": ["select", "min", "(", "loser_rank", ")", "from", "matches"], "question": "What is the best rank of losers across all matches?", "question_toks": ["What", "is", "the", "best", "rank", "of", "losers", "across", "all", "matches", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "440", "answer_text": [[1]], "trigger_words": ["Minimal Number"], "Prediction": "MAX(loser_rank) FROM matches;"}
{"db_id": "wta_1", "query": "SELECT count(DISTINCT country_code) FROM players", "query_toks": ["SELECT", "count", "(", "DISTINCT", "country_code", ")", "FROM", "players"], "query_toks_no_value": ["select", "count", "(", "distinct", "country_code", ")", "from", "players"], "question": "find the number of distinct country codes of all players.", "question_toks": ["find", "the", "number", "of", "distinct", "country", "codes", "of", "all", "players", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 6, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "441", "answer_text": [[153]], "trigger_words": ["Number Of Country Code"], "Prediction": "COUNT(DISTINCT country_code) FROM players;"}
{"db_id": "wta_1", "query": "SELECT count(DISTINCT country_code) FROM players", "query_toks": ["SELECT", "count", "(", "DISTINCT", "country_code", ")", "FROM", "players"], "query_toks_no_value": ["select", "count", "(", "distinct", "country_code", ")", "from", "players"], "question": "How many distinct countries do players come from?", "question_toks": ["How", "many", "distinct", "countries", "do", "players", "come", "from", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 6, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "442", "answer_text": [[153]], "trigger_words": ["Number Of Country Code"], "Prediction": "COUNT(DISTINCT country_code) FROM players;"}
{"db_id": "wta_1", "query": "SELECT count(DISTINCT loser_name) FROM matches", "query_toks": ["SELECT", "count", "(", "DISTINCT", "loser_name", ")", "FROM", "matches"], "query_toks_no_value": ["select", "count", "(", "distinct", "loser_name", ")", "from", "matches"], "question": "Find the number of distinct name of losers.", "question_toks": ["Find", "the", "number", "of", "distinct", "name", "of", "losers", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 15, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "443", "answer_text": [[49]], "trigger_words": ["Number Of Loser Name"], "Prediction": "COUNT(DISTINCT loser_name) FROM matches;"}
{"db_id": "wta_1", "query": "SELECT count(DISTINCT loser_name) FROM matches", "query_toks": ["SELECT", "count", "(", "DISTINCT", "loser_name", ")", "FROM", "matches"], "query_toks_no_value": ["select", "count", "(", "distinct", "loser_name", ")", "from", "matches"], "question": "How many different loser names are there?", "question_toks": ["How", "many", "different", "loser", "names", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 15, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "444", "answer_text": [[49]], "trigger_words": ["Number Of Loser Name"], "Prediction": "COUNT(DISTINCT loser_name) FROM matches;"}
{"db_id": "wta_1", "query": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10", "query_toks": ["SELECT", "tourney_name", "FROM", "matches", "GROUP", "BY", "tourney_name", "HAVING", "count", "(", "*", ")", ">", "10"], "query_toks_no_value": ["select", "tourney_name", "from", "matches", "group", "by", "tourney_name", "having", "count", "(", "*", ")", ">", "value"], "question": "Find the name of tourney that has more than 10 matches.", "question_toks": ["Find", "the", "name", "of", "tourney", "that", "has", "more", "than", "10", "matches", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [], "groupBy": [[0, 27, false]], "having": [[false, 3, [0, [3, 0, false], null], 10.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "445", "answer_text": [["Australian Open"], ["Cincinnati"], ["French Open"], ["Indian Wells"], ["Miami"], ["Singapore"], ["Us Open"], ["WTA Championships"], ["Wimbledon"]], "trigger_words": ["Tourney Name"], "Prediction": "tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;"}
{"db_id": "wta_1", "query": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10", "query_toks": ["SELECT", "tourney_name", "FROM", "matches", "GROUP", "BY", "tourney_name", "HAVING", "count", "(", "*", ")", ">", "10"], "query_toks_no_value": ["select", "tourney_name", "from", "matches", "group", "by", "tourney_name", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the names of tournaments that have more than 10 matches?", "question_toks": ["What", "are", "the", "names", "of", "tournaments", "that", "have", "more", "than", "10", "matches", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [], "groupBy": [[0, 27, false]], "having": [[false, 3, [0, [3, 0, false], null], 10.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "446", "answer_text": [["Australian Open"], ["Cincinnati"], ["French Open"], ["Indian Wells"], ["Miami"], ["Singapore"], ["Us Open"], ["WTA Championships"], ["Wimbledon"]], "trigger_words": ["Tourney Name"], "Prediction": "tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;"}
{"db_id": "wta_1", "query": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016", "query_toks": ["SELECT", "winner_name", "FROM", "matches", "WHERE", "YEAR", "=", "2013", "INTERSECT", "SELECT", "winner_name", "FROM", "matches", "WHERE", "YEAR", "=", "2016"], "query_toks_no_value": ["select", "winner_name", "from", "matches", "where", "year", "=", "value", "intersect", "select", "winner_name", "from", "matches", "where", "year", "=", "value"], "question": "List the names of all winners who played in both 2013 and 2016.", "question_toks": ["List", "the", "names", "of", "all", "winners", "who", "played", "in", "both", "2013", "and", "2016", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], 2013.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], 2016.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "447", "answer_text": [["Angelique Kerber"], ["Petra Kvitova"], ["Sara Errani"], ["Serena Williams"], ["Victoria Azarenka"]], "trigger_words": ["Winner Name"], "Prediction": "winner_name \nFROM matches \nWHERE year = 2013 AND winner_name IN (SELECT winner_name FROM matches WHERE year = 2016);"}
{"db_id": "wta_1", "query": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016", "query_toks": ["SELECT", "winner_name", "FROM", "matches", "WHERE", "YEAR", "=", "2013", "INTERSECT", "SELECT", "winner_name", "FROM", "matches", "WHERE", "YEAR", "=", "2016"], "query_toks_no_value": ["select", "winner_name", "from", "matches", "where", "year", "=", "value", "intersect", "select", "winner_name", "from", "matches", "where", "year", "=", "value"], "question": "What are the names of players who won in both 2013 and 2016?", "question_toks": ["What", "are", "the", "names", "of", "players", "who", "won", "in", "both", "2013", "and", "2016", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], 2013.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], 2016.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "448", "answer_text": [["Angelique Kerber"], ["Petra Kvitova"], ["Sara Errani"], ["Serena Williams"], ["Victoria Azarenka"]], "trigger_words": ["Winner Name"], "Prediction": "winner_name \nFROM matches \nJOIN players ON matches.winner_id=players.player_id \nWHERE year=2013 AND winner_name IN (SELECT winner_name FROM matches WHERE year=2016);"}
{"db_id": "wta_1", "query": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "matches", "WHERE", "YEAR", "=", "2013", "OR", "YEAR", "=", "2016"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "matches", "where", "year", "=", "value", "or", "year", "=", "value"], "question": "List the number of all matches who played in years of 2013 or 2016.", "question_toks": ["List", "the", "number", "of", "all", "matches", "who", "played", "in", "years", "of", "2013", "or", "2016", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], 2013.0, null], "or", [false, 2, [0, [0, 38, false], null], 2016.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "449", "answer_text": [[170]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM matches WHERE year=2013 OR year=2016;"}
{"db_id": "wta_1", "query": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "matches", "WHERE", "YEAR", "=", "2013", "OR", "YEAR", "=", "2016"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "matches", "where", "year", "=", "value", "or", "year", "=", "value"], "question": "How many matches were played in 2013 or 2016?", "question_toks": ["How", "many", "matches", "were", "played", "in", "2013", "or", "2016", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], 2013.0, null], "or", [false, 2, [0, [0, 38, false], null], 2016.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "450", "answer_text": [[170]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM matches WHERE year = 2013 OR year = 2016;"}
{"db_id": "wta_1", "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'", "query_toks": ["SELECT", "T1.country_code", ",", "T1.first_name", "FROM", "players", "AS", "T1", "JOIN", "matches", "AS", "T2", "ON", "T1.player_id", "=", "T2.winner_id", "WHERE", "T2.tourney_name", "=", "'WTA", "Championships", "'", "INTERSECT", "SELECT", "T1.country_code", ",", "T1.first_name", "FROM", "players", "AS", "T1", "JOIN", "matches", "AS", "T2", "ON", "T1.player_id", "=", "T2.winner_id", "WHERE", "T2.tourney_name", "=", "'Australian", "Open", "'"], "query_toks_no_value": ["select", "t1", ".", "country_code", ",", "t1", ".", "first_name", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "winner_id", "where", "t2", ".", "tourney_name", "=", "value", "intersect", "select", "t1", ".", "country_code", ",", "t1", ".", "first_name", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "winner_id", "where", "t2", ".", "tourney_name", "=", "value"], "question": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?", "question_toks": ["What", "are", "the", "country", "code", "and", "first", "name", "of", "the", "players", "who", "won", "in", "both", "tourney", "WTA", "Championships", "and", "Australian", "Open", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"WTA Championships\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Australian Open\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "451", "answer_text": [["GER", "Angelique"], ["USA", "Serena"]], "trigger_words": ["Country Code", "First Name"], "Prediction": "players.country_code, players.first_name\n FROM matches\n JOIN players ON matches.winner_id=players.player_id\n WHERE matches.tourney_name='WTA Championships' AND matches.year IN (2019,2020)\n AND EXISTS (SELECT 1 FROM matches WHERE tourney_name='Australian Open' AND year IN (2019,2020) AND winner_id=matches.winner_id);"}
{"db_id": "wta_1", "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'", "query_toks": ["SELECT", "T1.country_code", ",", "T1.first_name", "FROM", "players", "AS", "T1", "JOIN", "matches", "AS", "T2", "ON", "T1.player_id", "=", "T2.winner_id", "WHERE", "T2.tourney_name", "=", "'WTA", "Championships", "'", "INTERSECT", "SELECT", "T1.country_code", ",", "T1.first_name", "FROM", "players", "AS", "T1", "JOIN", "matches", "AS", "T2", "ON", "T1.player_id", "=", "T2.winner_id", "WHERE", "T2.tourney_name", "=", "'Australian", "Open", "'"], "query_toks_no_value": ["select", "t1", ".", "country_code", ",", "t1", ".", "first_name", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "winner_id", "where", "t2", ".", "tourney_name", "=", "value", "intersect", "select", "t1", ".", "country_code", ",", "t1", ".", "first_name", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "winner_id", "where", "t2", ".", "tourney_name", "=", "value"], "question": "What are the first names and country codes for players who won both the WTA Championships and the Australian Open?", "question_toks": ["What", "are", "the", "first", "names", "and", "country", "codes", "for", "players", "who", "won", "both", "the", "WTA", "Championships", "and", "the", "Australian", "Open", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"WTA Championships\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Australian Open\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "452", "answer_text": [["GER", "Angelique"], ["USA", "Serena"]], "trigger_words": ["Country Code", "First Name"], "Prediction": "players.first_name, players.country_code\n FROM players\n JOIN matches ON matches.winner_id = players.player_id\n WHERE matches.tourney_name = 'WTA Championships' AND matches.best_of = 3\n AND EXISTS (\n SELECT 1 FROM matches\n WHERE matches.winner_id = players.player_id AND matches.tourney_name = 'Australian Open' AND matches.best_of = 5\n );"}
{"db_id": "wta_1", "query": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1", "query_toks": ["SELECT", "first_name", ",", "country_code", "FROM", "players", "ORDER", "BY", "birth_date", "LIMIT", "1"], "query_toks_no_value": ["select", "first_name", ",", "country_code", "from", "players", "order", "by", "birth_date", "limit", "value"], "question": "Find the first name and country code of the oldest player.", "question_toks": ["Find", "the", "first", "name", "and", "country", "code", "of", "the", "oldest", "player", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "453", "answer_text": [["Thelma", "AUS"]], "trigger_words": ["First Name", "Country Code"], "Prediction": "first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1;"}
{"db_id": "wta_1", "query": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1", "query_toks": ["SELECT", "first_name", ",", "country_code", "FROM", "players", "ORDER", "BY", "birth_date", "LIMIT", "1"], "query_toks_no_value": ["select", "first_name", ",", "country_code", "from", "players", "order", "by", "birth_date", "limit", "value"], "question": "What is the first name and country code of the oldest player?", "question_toks": ["What", "is", "the", "first", "name", "and", "country", "code", "of", "the", "oldest", "player", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "454", "answer_text": [["Thelma", "AUS"]], "trigger_words": ["First Name", "Country Code"], "Prediction": "players.first_name, players.country_code \n FROM players \n WHERE players.birth_date = (SELECT MIN(birth_date) FROM players);"}
{"db_id": "wta_1", "query": "SELECT first_name ,  last_name FROM players ORDER BY birth_date", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "players", "ORDER", "BY", "birth_date"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "players", "order", "by", "birth_date"], "question": "List the first and last name of all players in the order of birth date.", "question_toks": ["List", "the", "first", "and", "last", "name", "of", "all", "players", "in", "the", "order", "of", "birth", "date", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "455", "answer_text": [["Thelma", "Long"], ["Pauline", "Addie"], ["Milly", "Vagn Nielsen"], ["Vera", "Johansen"], ["Reiko", "Miyagi"], ["Louise", "Brown"], ["Gertrude", "Moran"], ["Zsuzsa", "Kormoczy"], ["Peggy", "Brixhe"], ["Betty", "Pratt"], ["Doris", "Hart"], ["Dorothy", "Knode"], ["Ruth", "Hauknes"], ["Althea", "Gibson"], ["Suzanne", "Le Besnerais"], ["Margarita", "De Zuleta"], ["Helen", "Parez"], ["Beverley", "Rae"], ["Nora", "Somoza"], ["Vera", "Sukova"], ["Rita", "Lauder"], ["Heather", "Segal"], ["Benita", "Senn"], ["Christiane", "Mercelis"], ["Angela", "Barrett"], ["Monique", "Bedoret"], ["Florence", "De La Courtie Billat"], ["Lorna", "Greville Collins"], ["Shiu Man", "Chan"], ["Tova", "Epstein"], ["Nancy", "Reed"], ["Ana Maria", "Estalella Manso"], ["Sylvana", "Lazzarino"], ["Jennifer", "Hoad"], ["Shirley", "Brasher"], ["Pat", "Stewart"], ["Renee", "Richards"], ["Yolande", "Ramirez"], ["Lea", "Pericoli"], ["Zsofia", "Broszmann"], ["Yu Lan", "Liu"], ["Jeanne", "Arth"], ["Margot", "Dittmeyer"], ["Francoise", "Repoux"], ["Jacqueline", "Rees Lewis"], ["Darlene", "Hard"], ["Norma", "Marsh"], ["Ruia", "Morrison Davy"], ["Irene", "Fraisse"], ["Jelena", "Gencic"], ["Jenny", "Ridderhof"], ["Edda", "Buding"], ["Lucia", "Bassi"], ["Patricia", "Mattes"], ["Renata", "Ostermann"], ["Lorraine", "Robinson"], ["Judy", "Dalton"], ["Bernice", "Vukovich"], ["Anne Marie", "Rouchon"], ["Maria", "Chakarova"], ["Susan", "Butt"], ["Janine", "Lieffrig"], ["Roberta", "Beltrame"], ["Elizabeth", "Starkie"], ["Danuta", "Rylska"], ["Ann", "Jones"], ["Michele", "Kahn"], ["Rosy", "Darmon"], ["Claudine", "Rouire"], ["Mimi", "Kanarek"], ["Jean", "Drysdale"], ["Maria", "Bueno"], ["Renee", "Schuurman"], ["Patricia", "Cody"], ["Ann", "Barclay"], ["Helga", "Hosl"], ["Edda", "Herdy"], ["Carmen", "Mandarino"], ["Pia", "Balling"], ["Deidre", "Keller"], ["Andrea", "Winkler"], ["Daniele", "Bouteleux"], ["Anna", "Dmitrieva"], ["Christine", "Janes"], ["Katarina", "Bartholdson"], ["Almut", "Sturm"], ["Yohko", "Obata"], ["Sonja", "Pachta"], ["Tone", "Schirmer"], ["Yuen Yuen", "Ling"], ["Jan", "Oneill"], ["Virginia", "Caceres"], ["Kazuko", "Kuromatsu"], ["Patricia", "Reese"], ["Brenda", "Dale"], ["Charleen", "Hillebrand"], ["Gillian", "Kay"], ["Helga", "Masthoff"], ["Mary", "Puljak"], ["Joyce", "Davenport"], ["Jacqueline", "Le Boubennec"], ["Margaret", "Hunt"], ["Lynne", "Nette"], ["Margaret", "Court"], ["Tory Ann", "Fretz"], ["Heide", "Schildknecht"], ["Lesley", "Bowrey"], ["Nancy", "Richey"], ["Vincerzo", "Napolio"], ["Geraldine", "Barniville"], ["Alice", "Tym"], ["Karen", "Susman"], ["Francoise", "Durr"], ["Ulla", "Sandulf"], ["Liv", "Jagge"], ["Carol Ann", "Kalogeropoulos"], ["Judy", "Alvarez"], ["Maria Jose", "Aubet"], ["Carole", "Graebner"], ["Maylis", "Burel"], ["Kerstin", "Seelbach"], ["Jennifer", "Waggott"], ["Leena", "Mutanen"], ["Annette", "Du Plooy"], ["Billie Jean", "King"], ["Maria Victoria", "De Moggio"], ["Barbara", "Olszewska"], ["Gill", "Butterfield"], ["Ingrid", "Bentzer"], ["Elsie", "Veentjer Spruyt"], ["Faye", "Moore"], ["Ana Maria", "Bocio"], ["Frances", "Maclennan"], ["Gitte", "Ejlerskov"], ["Gertruida", "Walhof"], ["Sally", "Holdsworth"], ["Robin", "Lloyd"], ["Monique", "Krecke"], ["Vlasta", "Kodesova"], ["Marketa", "Wallenfels"], ["Kimiyo", "Yagahara"], ["Joy", "Emerson"], ["Robyn", "Ebbern"], ["Madeleine", "Pegel"], ["Joyce", "Williams"], ["Maryna", "Proctor"], ["Evelyne", "Terras"], ["Yulia", "Berberian"], ["Nadine", "Netter"], ["Marijke", "Schaar"], ["Maria Carmen", "Arnoso"], ["Pamela", "Brand"], ["Eva", "Lundquist"], ["Liv", "Hubert"], ["Elizabeth", "Terry"], ["Alena", "Palmeova West"], ["Hsiu", "Lee"], ["Margaret", "Harris"], ["Lubka", "Radkova"], ["Gail", "Benedetti"], ["Christiane", "Spinoza"], ["Kerryl", "Chute"], ["Kirsten", "Robsahm"], ["Judith", "Gohn"], ["Monique", "Di Maso"], ["Betty", "Stove"], ["Greta", "Delport"], ["Virginia", "Wade"], ["Galina", "Baksheeva"], ["Vicky", "Berner"], ["Patricia", "Faulkner"], ["Maria Eugenia", "Guzman"], ["Nancy", "Spelman"], ["Brenda", "Nunns"], ["Mary", "Mclean"], ["Christina", "Lindstrom"], ["Faye", "Urban"], ["Eva", "Szabo"], ["Glenda", "Swan"], ["Erzsebet", "Szell"], ["Julie", "Heldman"], ["Lloyd", "Hatcher"], ["Nell", "Truman"], ["Johanne", "Venturino"], ["Monica", "Giorgi"], ["Irena", "Skulj"], ["Marilyn", "Greenwood"], ["Mabel", "Vrancovich"], ["Patricia", "Walkden"], ["Lita", "Sugiarto"], ["Martha", "Wolf Peterdy"], ["Stephanie", "Johnson"], ["Dianne", "Berkinshaw"], ["Patricia", "Reyes"], ["Mara", "Cohen Mintz"], ["Helen", "Lennon"], ["Elizabeth", "James"], ["Fiona", "Mckenzie"], ["Susi", "Eichenberger"], ["Laura", "Rossouw"], ["Ana Maria", "Arias"], ["Bunny", "Smith"], ["Yolanda", "Sumarno"], ["Ellen", "Grindvold"], ["Ingrid", "Sadlon"], ["Marie", "Pinterova"], ["Lidy", "Venneboer"], ["Marta", "Galli"], ["Carol", "Zeeman"], ["Lucia", "Gongora"], ["Kathleen", "Harter"], ["Mary Ann", "Beattie"], ["Elizabeth", "Allan"], ["Kathy", "Blake"], ["Helen", "Cawley"], ["Rita", "Felix"], ["Estela", "Benavides"], ["Gail", "Falkenberg"], ["Winnie", "Wooldridge"], ["Karen", "Krantzcke"], ["Astrid", "Suurbeck"], ["Jeong Soon", "Yang"], ["Penelope", "Hardgrave"], ["Toshiko", "Sade"], ["Louise", "Gonnerman"], ["Wendy", "Overton"], ["Mari Ann", "Klougart"], ["Edith", "Winkens"], ["Alex", "Cowie"], ["Cecilia", "Martinez"], ["Janice", "Wainwright"], ["Esme", "Emanuel"], ["Tine", "Zwaan"], ["Conceicao", "Rio"], ["Anne Mette", "Sorensen"], ["Sue", "Mappin"], ["Maria Teresa", "Nasuelli"], ["Kerry", "Reid"], ["Beverley", "Billington"], ["Suzana", "Gesteira"], ["Loanita", "Rachman"], ["Violette", "Percy"], ["Leonora", "Peralta"], ["Elena", "Subirats"], ["Christina", "Sandberg"], ["Ingrid", "Palmieri"], ["Julie", "Anthony"], ["Birgitta", "Lindstrom"], ["Graciela", "Moran"], ["Marilyn", "Aschner"], ["Ada", "Bakker"], ["Junko", "Sawamatsu"], ["Josiane", "Graas"], ["Evagreth", "Emmenegger"], ["Katja", "Ebbinghaus"], ["Daphne", "Pattison"], ["Helen", "Amos"], ["Marianne", "Kindler"], ["Barbara", "Kral"], ["Monique", "Van Haver"], ["Rosie", "Casals"], ["Nicole", "Bimes"], ["Odile", "De Roubin"], ["Ching Ling", "Chang"], ["Leyla", "Musalem"], ["Mona", "Guerrant"], ["Judy", "Congdon"], ["Peggy", "Michel"], ["Ivona", "Matulikova"], ["Judith", "Salome"], ["Maria Teresa", "Salvidea Diaz"], ["Olga", "Morozova"], ["Andree", "Martin"], ["Veronika", "Buche"], ["Hideko", "Goto"], ["Jill", "Cooper"], ["Peaches", "Bartkowicz"], ["Lany", "Kaligis"], ["Danuta", "Wieczorek"], ["Laura", "Du Pont"], ["Raquel", "Giscafre"], ["Gina", "Genovese"], ["Roylee", "Bailey"], ["Wanda", "Ferraz De Oliveira"], ["Di", "Riste"], ["Corinne", "Molesworth"], ["Valerie", "Ziegenfuss"], ["Kayoko", "Fukuoka"], ["Judy", "Dixon"], ["Biljana", "Kostic"], ["Sonoe", "Yonezawa"], ["Alex", "Rotas"], ["Kerry", "Harris"], ["Miroslava", "Holubova"], ["Sue", "Roux"], ["Heidi", "Eisterlehner"], ["Susie", "Witwer"], ["Marianna", "Brummer"], ["Judith", "Szorenyi"], ["Kerry", "Ballard"], ["Patti", "Hogan"], ["Elvira", "Weisenberger"], ["Lindsey", "Beaven"], ["Louise", "Bysiek"], ["Diana", "Moskova"], ["Susan", "Stone"], ["Ines", "Roget"], ["Betty Ann", "Dent"], ["Yoshiro", "Tanaka"], ["Pamela", "Austin"], ["Vera Lucia", "Giugni"], ["Margaret", "Cooper"], ["Paulina", "Peled"], ["Agnes", "Graczol"], ["Helen", "Worland"], ["Wendy", "Gilchrist"], ["Lesley", "Hunt"], ["Daniela", "Marzano"], ["Jenny", "Helliar"], ["Shelby", "Torrance"], ["Stephanie", "Grant"], ["Janice", "Tindle"], ["Mary", "Struthers"], ["Denise", "Carter Triolo"], ["Flore", "Wagner"], ["Kristy", "Pigeon"], ["Wendy", "Tomlinson"], ["Isabel", "Fernandez De Soto"], ["Kerry", "Young"], ["Ana", "Cavadini"], ["Alenka", "Pipan"], ["Barbara", "Hawcroft"], ["Christina", "Sotirova"], ["Linda", "Tuero"], ["Carol", "Baily"], ["Patricia", "Rivera"], ["Pam", "Richmond"], ["Adrienne", "Avis"], ["Janine", "Strauss"], ["Marlie", "Buehler"], ["Robyn", "Hunt"], ["Kazuko", "Sawamatsu"], ["Brenda", "Kirk"], ["Zaiga", "Yansone"], ["Vicki", "Lancaster Kerr"], ["Cynthia", "Doerner"], ["Jane", "Kincaid"], ["Nora", "Lauteslager"], ["Anne Marie", "Cassaigne"], ["Margareta", "Forsgardh"], ["Pam", "Teeguarden"], ["Gail", "Hansen"], ["Dorte", "Ekner"], ["Marjorie", "Gengler"], ["Ann", "Lebedeff"], ["Ana Maria", "Ycaza"], ["Connie", "Capozzi"], ["Janice", "Rapp"], ["Jackie", "Fayter"], ["Laila", "Pirila"], ["Maria Cristina", "Borba Dias"], ["Penny", "Moor"], ["Jane", "Ohara"], ["Evonne", "Cawley"], ["Cathy", "Beene"], ["Lucia", "Bruce"], ["Eva", "Fridenzi"], ["Janet", "Young"], ["Christine", "Dorey"], ["Rita", "Krombach"], ["Patricia", "Bostrom"], ["Miroslava", "Bendlova"], ["Fiorella", "Bonicelli"], ["Nellemieke", "Brouwer"], ["Susan", "Hagey"], ["Mi Ok", "Lee"], ["Gilda", "Robleto"], ["Katalin", "Borka"], ["Veronica", "Burton"], ["Tam", "Oshaughnessy"], ["Clare", "Colman"], ["Sharon", "Walsh Pete"], ["Wendy", "Appleby"], ["Lotte", "Solbeck"], ["Carmen", "Perea Alcala"], ["Marilyn", "Pryde"], ["Ann", "Flint"], ["Janice", "Metcalf"], ["Maria", "Geyer"], ["Lesley", "Charles"], ["Lucinda", "Crosby"], ["Kristien", "Shaw"], ["Elly", "Appel"], ["Nancy", "Ornstein"], ["Patricia", "Montano"], ["Nathalie", "Fuchs"], ["Helena", "Laitinen"], ["Barbara", "Brankovska"], ["Cecilia", "Rosado"], ["Kate", "Latham"], ["Linda", "Thomas"], ["Cynthia Ann", "Thomas"], ["Tina", "Mochizuki"], ["Wendy", "Turnbull"], ["Michele", "Gurdal"], ["Eugenia", "Birioukova"], ["Kathy", "Kraft"], ["Angelina", "Colquitt"], ["Eliza", "Pande"], ["Rosalba", "Vido"], ["Maya", "Kerschbaum"], ["Margaret", "Riley"], ["Beatrix", "Klein"], ["Beverly", "Buckley"], ["Maria Victoria", "Baldovinos Cibeira"], ["Beatrice", "Chrystman"], ["Lindsay", "Blachford"], ["Marina", "Kroschina"], ["Yvona", "Brzakova"], ["Yoko", "Kobayashi"], ["Patricia", "Coleman"], ["Karin", "Boshoff"], ["Janet", "Haas"], ["Rowena", "Sanders"], ["Duk Hee", "Lee"], ["Sabine", "Lavrerotte"], ["Alcira", "Acevedo"], ["Janet", "Wright"], ["Anna", "Nemeth"], ["Silvia", "Blume Bruns"], ["Jane", "Stratton"], ["Nancy", "Weigel"], ["Marcie", "Harper"], ["Sirikanya", "Hoonsiri"], ["Soon Oh", "Lee"], ["Patricia", "Brailsford"], ["Sally", "Hudson Beck"], ["Suthasini", "Sirikaya"], ["Susan", "Vinton"], ["Judy", "Chaloner"], ["Pam", "Whytcross"], ["Jane", "Preyer"], ["Marion", "De Witte"], ["Jan", "Blackstad"], ["Elzbieta", "Slesicka"], ["Brenda", "Garcia"], ["Walena", "White"], ["Glynis", "Coles"], ["Barbara", "Downs"], ["Annette", "Coe"], ["Patricia", "Bianchi"], ["Iris", "Riedel Kuhn"], ["Lucy", "Fendig"], ["Rosa Maria", "Togores Colom"], ["Mihoka", "Matshushima"], ["Mimi", "Wikstedt"], ["Betsy", "Blaney"], ["Glaucia", "Langela"], ["Daryl", "Gralka"], ["Jill", "Schwikert"], ["Joy", "Schwikert"], ["Frederique", "Thibault"], ["Sue", "Stap"], ["Linda", "Geeves"], ["Amy", "Goldfarb"], ["Maria", "Mendonca"], ["Valerie", "Franta"], ["Deborah", "Fiuza"], ["Sabine", "Bernegger"], ["Mary", "Hamm"], ["Jill", "Hamilton"], ["Robin", "Khan"], ["Joanne", "Russell"], ["Donna", "Ganz"], ["Elizabeth", "Vlotman"], ["Debra", "Darrell"], ["Kiyoko", "Nomura"], ["Susan", "Minford"], ["Florence", "Guedy"], ["Renata", "Tomanova"], ["Chris", "Evert"], ["Yolanda", "Vallejo"], ["Naoko", "Sato"], ["Lindsay", "Morse"], ["Virginia", "Ruzici"], ["Susana Maria", "Villaverde"], ["Silvana", "Urroz"], ["Michiko", "Saji"], ["Candy", "Reynolds"], ["Sally", "Greer"], ["Jane", "Plackett"], ["Kyeong Mi", "Choi"], ["Bente", "Kjolstad"], ["Silvana", "Belardinelli"], ["Andrea", "Whitmore"], ["Nancy", "Yeargin"], ["Dominique", "Beillan"], ["Jean", "Nachand"], ["Magdalena", "Gual Pascual"], ["Laurie", "Rowley"], ["Diane", "Desfor"], ["Aleida", "Spex"], ["Donna", "Stockton"], ["Beatriz", "Araujo"], ["Kym", "Ruddell"], ["Carol", "Draper"], ["Erin", "Dignam"], ["Ann", "Kiyomura Hayashi"], ["Carrie", "Meyer"], ["Penny", "Johnson"], ["Florenta", "Mihai"], ["Elsa", "Rodriguez"], ["Elizabeth", "Freeman Young"], ["Gina", "Diaz Ponce"], ["Anabel", "Luna De Infante"], ["Martha", "Morrison"], ["Jutta", "Diesslin"], ["Ann", "Etheredge"], ["Pauline", "Elliott"], ["Joni", "Van Ryck De Groot"], ["Monica", "Rho"], ["Gwynn", "Sammel"], ["Maria Julia", "Roverano"], ["Laurie", "Tenney"], ["Jenny", "Dimond"], ["Ruta", "Gerulaitis"], ["Terry", "Holladay"], ["Marcela Viviana", "Cataldi"], ["Brigette", "Cuypers"], ["Monica", "Alvarez"], ["Genevieve", "Etienne"], ["Vera", "Tere"], ["Kiyomi", "Nakagawa"], ["Ros", "Lewis"], ["Sylvia", "Koning"], ["Gretchen", "Galt"], ["Carla", "Guarino De Galeazzi"], ["Chris", "Newton"], ["Irina", "Shevchenko"], ["Marita", "Redondo"], ["Brenda", "Remilton"], ["Ilana", "Kloss"], ["Birgitte", "Hermansen"], ["Chris", "Oneil"], ["Stephanie", "Tolleson"], ["Jenny", "Walker"], ["Robin", "Harris"], ["Sue", "Barker"], ["Mary Ann", "Colville"], ["Sandy", "Stap"], ["Belinda", "Thompson"], ["Nerida", "Gregory"], ["Beatrice", "Guery"], ["Rayni", "Fox"], ["Elena", "Samoilo"], ["Kathy", "May Teacher Paben"], ["Caroline", "Lane"], ["Courtney", "Lord"], ["Helle", "Viragh"], ["Roberta", "Stark"], ["Jody", "Appelbaum"], ["Marillia", "Matte"], ["Mima", "Jausovec"], ["Annina", "Von Planta"], ["Adriana", "Villagran Reami"], ["Dianne", "Balestrat"], ["Lea", "Plchova"], ["Cathy", "Griffiths"], ["Lele", "Forood"], ["Bernadette", "Davy"], ["Helena", "Anliot"], ["Kim", "Sands"], ["Martina", "Navratilova"], ["Betsy", "Nagelsen"], ["Chris", "Penn"], ["Brigitte", "Simon Glinel"], ["Diane", "Evers"], ["Linky", "Boshoff"], ["Kathy", "Kuykendall"], ["Elina", "Durchman"], ["Patricia", "Medrado"], ["Katerleen", "Szeman"], ["Mariana", "Simionescu"], ["Iluminada", "Concepcion"], ["Andrea", "Galloway"], ["Simone", "Wolter"], ["Sylvie", "Rual Faulty"], ["Yvonne", "Vermaak"], ["Susan", "Zaro"], ["Paula", "Smith"], ["Ponamporn", "Samawanthana"], ["Antonella", "Rosa"], ["Lotta", "Stenberg"], ["Greer", "Stevens"], ["Eva", "Rozsavolgyi"], ["Dora", "Alavantic"], ["Leslie", "Allen"], ["Mary", "Carillo"], ["Cathleen", "Farrell"], ["Kaye", "Hallam"], ["Vicki", "Beggs"], ["Phyllis", "Blackwell"], ["Ludmila", "Makarova"], ["Barbara", "Jordan"], ["Anna", "Iuale"], ["Karen", "Feldman"], ["Margaret", "Lumia"], ["Jan", "Wilton"], ["Barbara", "Hallquist"], ["Marjorie", "Blackwood"], ["Rene", "Blount"], ["Linda", "Mottram"], ["Christine", "Gimmig"], ["Lorna", "Whitfield"], ["Mary", "Sawyer"], ["Beth", "Norton"], ["Julie", "Filkoff"], ["Maria", "Mateo"], ["Linda", "Siegleman"], ["Felicia", "Hutnick"], ["Lorna", "Simmons"], ["Huey Ying", "Chen"], ["Yoon Ja", "Han"], ["Malgorzata", "Rejdych"], ["Bunny", "Bruning"], ["Susie", "Mehmedbasich"], ["Donna", "Bradshaw"], ["Kay", "Mcdaniel"], ["Kay", "McDaniel"], ["Kim", "Jones Shaefer"], ["Veronica", "Martinez"], ["Brenda", "Perry"], ["Jeanne", "Evert"], ["Sue", "Saliba"], ["Carrie", "Fleming"], ["Maria", "Bolster"], ["Li Qiao", "Yu"], ["Antonella", "Canapi"], ["Alina", "Baraldi"], ["Emilse", "Rapponi Longo"], ["Kim", "Steinmetz"], ["Eiko", "Katayama"], ["Katerina", "Bohmova"], ["Yukie", "Koizumi"], ["Elisabeth", "Ekblom"], ["Mara", "Eijkenboom"], ["Sheila", "Mcinerney"], ["Naoko", "Matsuki"], ["Yasuka", "Shiba"], ["Cathy", "Fink"], ["Lisette", "Senn"], ["Jan", "Bardot"], ["Jo", "Sheridan"], ["Sue", "Bartlett"], ["Gleici", "Silva Do Espirito Santo"], ["Lynne", "Epstein"], ["Anne Marie", "Ruegg"], ["Leanne", "Harrison Austin"], ["Perrine", "Du Puy"], ["Nancy", "Neviaser"], ["Viviana", "Segal"], ["Nina", "Bohm"], ["Joyce", "Portman"], ["Robin", "Tenney"], ["Lisa", "Yap Sam"], ["Patricia", "Shoolman"], ["Chalada", "Wattana"], ["Natasha", "Chmyreva"], ["Beatriz", "Villaverde"], ["Cynthia", "Ashling"], ["Michelle", "Tyler"], ["Monica", "Simmen"], ["Marise", "Kruger"], ["Dianne", "Morrison"], ["Christine", "Ricour Catella"], ["Helena", "Wimmer"], ["Nosheen", "Ehtesham"], ["Mariette", "Pakker"], ["Sandy", "Collins"], ["Alejandra", "Vallejo"], ["Jean", "Hepner"], ["Pat", "Henderson"], ["Nam Sook", "Kim"], ["Pamela", "Baily"], ["Lindsay", "Standen"], ["Roberta", "Mccallum"], ["Judita", "Papista"], ["Eun Jeong", "Cha"], ["Tanya", "Harford"], ["Regina", "Marsikova"], ["Helene", "Pelletier"], ["Lea", "Antonoplis"], ["Dewonder", "Davis"], ["Anthea", "Stewart"], ["Lisa", "Moldrem"], ["Ellinore", "Lightbody"], ["Elke", "Renz"], ["Sally Ann", "Lewis"], ["Lisa", "Doherty"], ["Eleni", "Pilava Papanikolaou"], ["Petra", "Delhees Jauch"], ["Stacy", "Margolin"], ["Susan", "Rimes"], ["Zhen Zhen", "Xiang"], ["Froydis", "Forberg"], ["Nina", "Bland"], ["Fumiko", "Furuhashi"], ["Liliana", "Giussani"], ["Lucia", "Romanov"], ["Maria", "Romanov"], ["Elena", "Eliseenko"], ["Marcella", "Mesker"], ["Clare", "Harrison"], ["Helen", "Park"], ["Sherry", "Acker"], ["Keryn", "Pratt"], ["Christa", "Pickwick"], ["Sedigheh", "Hassani"], ["Anne", "Smith"], ["Annette", "Smith"], ["Patricia", "Armet Sanpere"], ["Uschi", "Ulrich"], ["Anne", "Hobbs"], ["Kristin", "Kinney"], ["Elfia", "Nizarwan"], ["Graciela", "Peraza"], ["Brigitte", "Lorang"], ["Catherine", "Suire"], ["Caroline", "Young"], ["Donna", "Rubin"], ["Xin Fen", "Pu"], ["Qing Qing", "Gong"], ["Ann", "Henricksson"], ["Soon Ho", "Shin"], ["Masako", "Yanagi"], ["Tamar", "Levin"], ["Carol", "Daniels"], ["Dana", "Gilbert"], ["Trey", "Lewis"], ["Sylvia", "Hanika"], ["Ingrid", "Willems"], ["Kathy", "Jordan"], ["Graca", "Cardoso"], ["Jeanne", "Duvall"], ["Cindy", "Davis"], ["Zenda", "Liess"], ["Sharon", "Green"], ["Kathy", "Obrien"], ["Cissie", "Donigan"], ["Lori", "Robertson"], ["Hagit", "Zubary"], ["Fiona", "Moffitt"], ["Michelle", "Berrigan"], ["Silvia", "Campius Pinas"], ["Claudia", "Casabianca"], ["Cathy", "Drury"], ["Kate", "Glancy"], ["Jennifer", "Balent"], ["Wendy", "Burkhart"], ["Debbie", "Stewart"], ["Gabriela", "Dinu"], ["Sabina", "Simmonds"], ["Tiffany", "Silveria"], ["Maria", "Rothschild"], ["Betsy", "Heidenberger"], ["Wendy", "Barlow"], ["Deborah", "Jevans"], ["Suzanne", "Bakewell"], ["Amanda", "Tobin Dingwall"], ["Debbie", "Chesterton"], ["Jill", "Davis"], ["Helen", "Davis"], ["Martine", "Bureau"], ["Maria Manuel", "Cabral Lencastre"], ["Hamidan", "Bibi"], ["Lynn", "Jacobs"], ["Judy", "Rich"], ["Danielle", "Meunier"], ["Jo", "Durie"], ["Iva", "Budarova"], ["Teng Lian", "Kwong"], ["Lisa", "Wilcox"], ["Lani", "Wilcox"], ["Mareen", "Louie Harper"], ["Betona", "Pellon Fernandez"], ["Beatriz", "Pellon"], ["Saida", "Berthe"], ["Wendy", "Prausa"], ["Elizabeth", "Little"], ["Heidi", "Allsmiller"], ["Denise", "Parnell"], ["Manuela", "Zoni"], ["Margaret", "Redfearn"], ["Lorrie", "Zacharias"], ["Marcelle", "Voyame"], ["Rita", "Agassi"], ["Themis", "Zambrzycki"], ["Anna Maria", "Fernandez"], ["Lucia", "Fernandez"], ["Amreeta", "Ahluwalia"], ["Rosalyn", "Nideffer"], ["Caroline", "Stoll"], ["Min Kyung", "Seol"], ["Micki", "Schillig"], ["Angela", "Walker"], ["Marianne", "De Crop"], ["Hana", "Strachonova"], ["Michelle", "Weiss"], ["Tracie", "Blumentritt"], ["Caroline", "Franch"], ["Ivanna", "Madruga Osses"], ["Helena", "Manset"], ["Nina", "Voydat"], ["Neissa", "Doumbia"], ["Eva", "Pfaff"], ["Maria Paula", "Abreu"], ["Marcela", "Skuherska"], ["Alycia", "Moulton"], ["Iwona", "Kuczynska"], ["Jeong Soon", "Lee"], ["Karin", "Moos"], ["Cornelia", "Dries"], ["Caryn", "Copeland Wilson"], ["Nicole", "Mabille"], ["Mariela", "Clavijo"], ["Sylvia", "Clayton"], ["Petra", "Van Oyen"], ["Cricket", "Manuel"], ["Claudia", "Monteiro"], ["Christi", "Turdo"], ["Barbara", "Rossi"], ["Kylie", "Copeland"], ["Simonetta", "Bozzano"], ["Julie", "Walther"], ["Joy", "Tacon"], ["Linda", "Siegel"], ["Lena", "Sandin"], ["Myke", "Loomis"], ["Heather", "Ludloff"], ["Beverly", "Corbie"], ["Hillery", "Royer"], ["Carol", "Watson"], ["Chris", "Payne"], ["Heather", "Crowe"], ["Eun Sook", "Han"], ["Helga", "Lutten"], ["Lone", "Vandborg"], ["Mary Lou", "Daniels"], ["Hyacinth", "Yorke"], ["Pirjo", "Ojala"], ["Soo Ok", "Kim"], ["Marianne", "Van Der Torre"], ["Susan", "Rollinson"], ["Angel", "Cobbs"], ["Louise", "Tuff"], ["Kathleen", "Cummings"], ["Nicole", "Lorenzetti"], ["Christiane", "Jolissaint"], ["Jacquie", "Dobson"], ["Anne", "White"], ["Jaime", "Kaplan"], ["Nancy", "Loeffler Caro"], ["Patricia", "Hermeda"], ["Patricia", "Alvarenga"], ["Karen", "Smith"], ["Sri", "Utaminingsih"], ["Tracy", "Houk"], ["Barbara", "Potter"], ["Andrea", "Pesak"], ["Ingrid", "Sommerauer"], ["Diane", "Farrell"], ["Lisa", "Dunner"], ["Blanca", "Borbolla"], ["Claudia", "Van Der Weck"], ["Caren", "Schindler"], ["Susan", "Pendo"], ["Felicia", "Raschiatore"], ["Brenda", "Catton"], ["Louise", "Allen"], ["Christine", "Lukalo"], ["Lisa", "Seemann"], ["Malgorzata", "Sieradzka"], ["Marina", "Kondova"], ["Sriningdiah", "Sutarniati"], ["Jennifer", "Mundel"], ["Jillian", "Muller"], ["Jamie", "Golder"], ["Jane", "Forman"], ["Mary", "Dailey"], ["Emmanuelle", "Folcher"], ["Jeom Re", "Park"], ["Pia", "Tamayo"], ["Julie", "Harrington"], ["Dorota", "Dziekonska"], ["Hana", "Mandlikova"], ["Xiao Yu", "Zhu"], ["Elise", "Burgin"], ["Olga", "Zaitseva"], ["Beverly", "Mould"], ["Florence", "Gauvain"], ["Patrizia", "Murgo"], ["Susie", "Jaeger"], ["Jacqueline", "Geller"], ["Gloria", "Escobar"], ["Nanette", "Schutte"], ["Natalia", "Leipus"], ["Kelly", "Henry"], ["Eun Ok", "Cho"], ["Linda", "Cassell"], ["Jennifer", "Goodling"], ["Linley", "Tanner"], ["Mesenbete", "Shenkutee"], ["Judy", "Newman"], ["Isabel", "Moure"], ["Ni", "Zhong"], ["Chongrak", "Sri Ud"], ["Debbie", "Freeman"], ["Carol", "Neeld Lang"], ["Liliana", "Fernandez"], ["Dee Ann", "Hansel"], ["Xin Yi", "Li"], ["Li Lan", "Duan"], ["Pam", "Shriver"], ["Ilse", "De Ruysscher"], ["Lisa", "Spain Short"], ["Caitriona", "Ruane"], ["Debbie", "Robb"], ["Carin", "Bakkum"], ["Nora", "Bajchikova"], ["Lindsay", "Bartlett"], ["Kate", "Brasher"], ["Maluca", "Llamas"], ["Susan", "Leo"], ["Maria Elena", "Ruiz"], ["Chiu Mei", "Ho"], ["Mari Carmen", "Espinosa"], ["Karen", "Dewis"], ["Sylvia", "Vay"], ["Vicki", "Nelson Dunbar"], ["Joy", "Cummings"], ["Svetlana", "Cherneva"], ["Carol", "Christian"], ["Christina", "Rozwadowski"], ["Eve", "Zimmerman"], ["Luciana", "Alfaro"], ["Anne", "Happonen"], ["Jo", "Griffiths"], ["Laura", "Murgo"], ["Sally Anne", "Mcdonald"], ["Isabelle", "Villiger"], ["Irma", "Novakova Spurny"], ["Kathrin", "Keil"], ["Germaine", "Ohaco"], ["Tracy", "Austin"], ["Stina", "Almgren"], ["Ginette", "Kaempf"], ["Ginette", "Huberty"], ["Karla", "Umana"], ["Raquel", "Contreras"], ["Kate", "Gompert"], ["Linda", "Stewart"], ["Alita", "Rumsey"], ["Michaela", "Pazderova"], ["Jane", "Jarosz"], ["Helen", "Asciak"], ["Li Chuan", "Hsieh"], ["Molly", "Mcgrath"], ["Asa", "Flodin"], ["Catrin", "Jexell"], ["Marlene", "De Wouters"], ["Lisa", "Sassano"], ["Lisa", "Pennington"], ["King See", "Lee"], ["Maria", "Lindstrom"], ["Karla", "Lehnoff"], ["Sylma", "Phillip"], ["Lily", "Aguirre"], ["Laura", "Bernstein"], ["Sadia", "Berthe Hoffman"], ["Anne", "Minter"], ["Liz", "Smylie"], ["Ruth", "Seeman"], ["Hu", "Na"], ["Anne", "Moller"], ["Nadine", "Schmit"], ["Karin", "Hinterwirth"], ["Pilar", "Vasquez"], ["Barbara", "Pollet"], ["Berit", "Bjork"], ["Anneli", "Bjork"], ["Sylvie", "Tetreault"], ["Claudia", "Pasquale"], ["Virginia", "Oteiza"], ["Jamie", "Pisarcik"], ["Sylvie", "Gardette"], ["Adriana", "Velcheva"], ["Lisa", "Lusteg"], ["Natasha", "Piskakova"], ["Ionita", "Nesti"], ["Jan", "Martin"], ["Clare", "Thompson"], ["Bettina", "Bunge"], ["Catarina", "Lindqvist Ryan"], ["Shelley", "Solomon"], ["June", "Ferestein"], ["Cecilia", "Fernandez Parker"], ["Pamela", "Jung"], ["Cheryl", "Lewis"], ["Karen", "Buchholz"], ["Julia", "Kashevarova"], ["Elizabeth", "Burger"], ["Ann", "Gabriel"], ["Genevieve", "Greiwe"], ["Hatsuhi", "Isowa"], ["Kazuko", "Ito"], ["Hsiu Tsuan", "Wen"], ["Ana", "Almansa"], ["Lise", "Gregory"], ["Karin", "Stampfli"], ["Bonnie", "Gadusek"], ["Carina", "Karlsson"], ["Corinne", "Vanier"], ["Jacinta", "Ayers"], ["Kathy", "Holton"], ["Allyson", "Ingram"], ["Erika", "Smith"], ["Begonia", "Erana"], ["Linda", "Howell"], ["Sophie", "Amiach"], ["Elizabeth", "Cameron"], ["Liza", "Riefkohl"], ["Lynn", "Lewis"], ["Zina", "Garrison"], ["Ivana", "Jankovska"], ["Shelley", "Aguero"], ["Suzanna", "Anggarkusuma"], ["Yan", "Sun"], ["Miranda", "Yates"], ["Robin", "White"], ["Claudia", "Kohde Kilsch"], ["Hiromi", "Yoshihara"], ["Lori", "Mcneil"], ["Rebecca", "Bryant"], ["Pam", "Casale Telford"], ["Karina", "Heck"], ["Robyn", "Lamb"], ["Jackie", "Joseph"], ["Leigh Anne", "Thompson"], ["Adriana", "Florido"], ["Laura", "Gildemeister"], ["Marie Christine", "Calleja"], ["Andrea", "Leand"], ["Jackie", "Castillejo"], ["Sylvia", "Schenck"], ["Qin Di", "Weng"], ["Sherri", "Norris"], ["Sharon", "Norgren"], ["Cristina", "Wallis"], ["Tita", "Zea"], ["Gretchen", "Magers"], ["Hana", "Fukarkova"], ["Britta", "Schneider"], ["Gigi", "Fernandez"], ["Annette", "Gulley"], ["Astrid", "Sunde"], ["Anita", "Aggarwal"], ["Kelly", "Holland"], ["Sharon", "Hodgkin"], ["Karen", "Huebner"], ["Cynthia", "Macgregor"], ["Collette", "Oreilly"], ["Elizabeth", "Jones"], ["Marisa", "Sanchez Vicario"], ["Eun Sook", "Huang"], ["Manon", "Bollegraf"], ["Penny", "Barg Mager"], ["Molly", "Ulvin"], ["Wendy", "Wood"], ["Liz", "Wachter"], ["Sue", "Hatch"], ["Mayumi", "Yamada"], ["Cheryl", "Jones"], ["Heidi", "Rosenbaum"], ["Sara", "Gomer"], ["Isabel", "Casso"], ["Diane", "Craig"], ["Kjersti", "Jensen"], ["Catherine", "Berry"], ["Beth", "Herr"], ["Socorro", "Trumpeta"], ["Renata", "Sasak"], ["Denise", "Panagopoulou"], ["Therese", "Arildsen"], ["Susan", "Mascarin"], ["Carol", "Bertrand"], ["Barbara", "Gerken"], ["Sally", "Reeves"], ["Isabelle", "Vernhes"], ["Heliane", "Steden"], ["Maya", "Hajjar"], ["Fiona", "Martin"], ["Rene", "Uys"], ["Becky", "Brown"], ["Lisa", "Bobby"], ["Nancy", "Arendt"], ["Julia", "Apostoli"], ["Marlene", "Zuleta"], ["Frederique", "Mauger"], ["Jill", "Smoller"], ["Klaartje", "Van Baarle"], ["Barbi", "Bramblett"], ["Rafeket", "Binyamini"], ["Orly", "Bialistozky"], ["Millie", "Didio"], ["Etsuko", "Inoue"], ["Nicola", "Lusty"], ["Jill", "Hetherington"], ["Jackie", "Van Wijk"], ["Shari", "Bucklin"], ["Kathy", "Foxworth"], ["Maeve", "Quinlan"], ["Monica", "Weber"], ["Vicki", "Marler"], ["Kim", "Cartwright"], ["Andrea", "Tiezzi"], ["Simone", "Vasconcellos Calves"], ["Daniela", "Moise"], ["Immaculada", "Varas Caro"], ["Katherine", "Camilleri"], ["Angela", "Farley Wilson"], ["Leigh Anne", "Eldredge"], ["Emiko", "Okagawa"], ["Emiko", "Sakaguchi"], ["Helena", "Olsson"], ["Stephanie", "Sipe"], ["Barbara", "Romano"], ["Jeanette", "Gomez"], ["Svetlana", "Sinitsyna"], ["Silvana", "Casaretto"], ["Stephanie", "Savides"], ["Rina", "Caniza"], ["Kumiko", "Okamoto"], ["Melissa", "Nodvin"], ["Jeong Ok", "Choi"], ["Marilda", "Julia"], ["Helena", "Sukova"], ["Lorena", "Sandoval"], ["Renata", "Baranski"], ["Renata", "Marcinkowska"], ["Sandra", "Cecchini"], ["Catherine", "Bonnet"], ["Akemi", "Nishiya"], ["Masako", "Nishina"], ["Molly", "Van Nostrand"], ["Fiona", "Keasberry"], ["Rhona", "Howett"], ["Maria Jose", "Paniagua"], ["Helene", "Cedet"], ["Petra", "Keppeler"], ["Judith", "Warringa"], ["Susanne", "Schmid"], ["Rina", "Einy"], ["Lori", "Kosten"], ["Patty", "Fendick"], ["Annelie", "Bjork"], ["Terri", "Gaskill"], ["Amy", "Holton"], ["Haruko", "Shigekawa"], ["Jenny", "Klitch"], ["Shelley", "Bartlett"], ["Carmela", "Vitali"], ["Sagit", "Doron"], ["Amanda", "Brown"], ["Monty", "Morrison"], ["Kim", "Simmons"], ["Miki", "Mizokuchi"], ["Belkis", "Rodriguez"], ["Lilian", "Kelaidis"], ["Anne", "Chevalier"], ["Maija", "Suonpaa"], ["Martina", "Reinhardt"], ["Catherine", "Tanvier"], ["Jane", "Young"], ["Sabrina", "Goles"], ["Andrea", "Jaeger"], ["Marianne", "Groat"], ["Jane", "Porfirio"], ["Gretchen", "Doninger"], ["Diane", "Donnelly"], ["Jennifer", "Thornton"], ["Julie", "Salmon"], ["Mal Sim", "Park"], ["Lucila", "Becerra"], ["Urmi", "Negi"], ["Reeka", "Szikszay"], ["Wei", "Hua"], ["Ruth", "Sverdloff"], ["Natasha", "Reva"], ["Andrea", "Muller"], ["Natalia", "Riva"], ["Patricia", "Hy Boulais"], ["Elizabeth", "Minter"], ["Kathy", "Horvath"], ["Naoko", "Kinoshita"], ["Yvette", "Flu"], ["Beverly", "Bowes Hackney"], ["Monica", "Kowalewski"], ["Dyan", "Castillejo"], ["Shelly", "Walpole"], ["Belinda", "Cordwell"], ["Elizabeth", "Daly"], ["Karin", "Dallwitz"], ["Liz", "Finlayson"], ["Bernadette", "Randall"], ["Dena", "Levy"], ["Emiko", "Takahashi"], ["Marta", "Varanda"], ["Margarita", "Vaquero"], ["Tammy", "Whittington"], ["Lisa", "Bonder Kreiss"], ["Yvonne", "Der Kinderen"], ["Ann", "Hulbert"], ["Sobhini", "De Silva"], ["Lesley", "OHalloran"], ["Andrea", "Ritecz"], ["Jean Marie", "Sterling"], ["Jana", "Koran"], ["Mary", "Stevens"], ["Susan", "Russo"], ["Joni", "Urban"], ["Raffaella", "Reggi Concato"], ["Caroline", "Hagey"], ["Debbie", "Ladig"], ["Lorrie", "Major"], ["Angelika", "Kanellopoulou"], ["Maricela", "Morales"], ["Heidi", "Narborough"], ["Tamaka", "Takagi"], ["Ilana", "Berger"], ["Ku Maizan", "Shak"], ["Hemel", "Meghani"], ["Rosa", "Bielsa Hierro"], ["Ann", "Ehrmann"], ["Masako", "Morikawa"], ["Linda", "Ferrando"], ["Sarah", "Sullivan"], ["Rene", "Collins"], ["Eva", "Krapl"], ["Anna", "Ivan"], ["Angela", "Longo"], ["Claudia", "Hernandez Salas"], ["Luciana", "Corsato Owsianka"], ["Ivonne", "Lorher"], ["Sook Ja", "Im"], ["Elizma", "Nortje"], ["Teresa", "Dobson"], ["Lisa", "Lillemoe"], ["Anne", "Grousbeck"], ["Claudia", "Borgiani"], ["Marianna", "Ansio"], ["Petra", "Huber"], ["Dai Hwa", "Wang"], ["Kilmeny", "Waterman"], ["Michaela", "Washington"], ["Judith", "Wiesner"], ["Tine", "Scheuer Larsen"], ["Ralene", "Fourie"], ["Alice", "Danila"], ["Carin", "Anderholm"], ["Kim", "Staunton"], ["Jane", "Thomas"], ["Nathalie", "Herreman"], ["Csilla", "Cserepy"], ["Susanna", "Lee"], ["Elizabeth", "Alexander"], ["Renata", "Skrzypczynska"], ["Sarit", "Shalev"], ["Maria Antonietta", "Trupia"], ["Pascale", "Paradis Mangon"], ["Andrea", "Temesvari"], ["Myriam", "Schropp"], ["Catherine", "Odea"], ["Mary", "Norwood"], ["Ronni", "Reis"], ["Silvana", "Campos"], ["Rita", "Winebarger"], ["Shu Shin", "Kam"], ["Lourdes", "Manulat"], ["Rene", "Mentz"], ["Karolina", "Karlsson"], ["Camille", "Benjamin"], ["Pascale", "Etchemendy"], ["Michele", "Wreem"], ["Siobhan", "Nicholson"], ["Veronica", "Platz"], ["Jennifer", "Prah"], ["Silvia", "Ludorf"], ["Shonette", "Wilson"], ["Elena", "Guerra"], ["Mercedes", "Paz"], ["Robyn", "Field"], ["Kathleen", "Schuurmans"], ["Andrea", "Betzner"], ["Olga", "Votavova"], ["Colette", "Sely"], ["Gabriela", "Castro"], ["Annabel", "Croft"], ["Stefania", "Dalla Valle"], ["Tory", "Plunkett"], ["Anne Marie", "Walson"], ["Larisa", "Savchenko"], ["Merike", "Stamberg"], ["Mei Chu", "Hsu"], ["Allison", "Cooper"], ["Claire", "Pollard"], ["Michelle", "Garth"], ["Miriam", "Ponce De Leon"], ["Lynn", "Henderson"], ["Vincenza", "Procacci"], ["Caroline", "Kuhlman"], ["Vanya", "Kelleher"], ["Leslie", "Hakala"], ["Valerie", "Ledroff"], ["Natalia", "Egorova"], ["Maria Marta", "Gallinal"], ["Isabelle", "Demongeot"], ["Sharon", "Mcnamara"], ["Lucia", "Peria"], ["Monica", "Reinach"], ["Sabine", "Krein Auer"], ["Annika", "Karlsson"], ["Maria Josefina", "Rojo"], ["Stephanie", "Givens"], ["Lynn", "Nabors"], ["Michelle", "Parun"], ["Cackie", "Germic"], ["Belinda", "Borneo"], ["Cornelia", "Lechner"], ["Ginny", "Purdy"], ["Eileen", "Tell"], ["Neige", "Dias"], ["Monica", "Munoz"], ["Maria Christine", "Damas"], ["Terry", "Phelps"], ["Maria Ines", "Leal"], ["Jane", "Holden"], ["Nora", "Kovarcikova"], ["Jennifer", "Larking Dawson"], ["Beate", "Knauber"], ["Agnes", "Lempereur"], ["Edna", "Olivarez"], ["Colleen", "Carney"], ["Su Lin", "Lai"], ["Masami", "Nakai"], ["Nicole", "Simon"], ["Silvia", "Batista"], ["Manuela", "Maleeva Fragniere"], ["Annette", "Singer"], ["Jenny", "Byrne"], ["Louise", "Field"], ["Philippa", "Palmer"], ["Amanda", "Grunfeld"], ["Magdalena", "Wiese"], ["Celine", "Cohen"], ["Carrie Lynn", "Cohen"], ["Araceli", "Montero"], ["Kathy", "Rinaldi Stunkel"], ["Tessa", "Price"], ["Julie", "Richardson"], ["Nathalie", "Phan Thanh"], ["Janet", "Craig"], ["Yasuyo", "Kajita"], ["Simone", "Schilder"], ["Irina", "Zvereva"], ["Monica", "Lundqvist"], ["Fukiko", "Osawa"], ["Monika", "Lundqvist"], ["Viktoria", "Milvidskaia"], ["Lydie", "Van Hille"], ["Sonia", "Tiberi"], ["Joanne", "Louis"], ["Anke", "Marchl"], ["Lupita", "Novelo"], ["Nathalie", "Ballet"], ["Pauline", "Chan"], ["Virginie", "Paquet"], ["Aida", "Khalatian"], ["Monika", "Waniek"], ["Anna Karin", "Olsson"], ["Fatima", "Santiago"], ["Laura", "Glitz"], ["Beate", "Reinstadler"], ["Laura", "Falconieri"], ["Karen", "Schimper"], ["Lisa", "Gould"], ["Shannon", "Gordon"], ["Kellie", "Dorman Tyrone"], ["Josephine", "Paguyo"], ["Amy", "Jonsson Raaholt"], ["Reka", "Monoki"], ["Lukky", "Tedjamukti"], ["Alice", "Nohacova"], ["Juliet", "Drew"], ["Louise", "Pleming"], ["Jackie", "Holden"], ["Michelle", "Torres"], ["Caterina", "Nozzoli"], ["Kaja", "Kond"], ["Jennifer", "Fuchs"], ["Loretta", "Sheales"], ["Hester", "Witvoet"], ["Ledna", "Martin"], ["Caroline", "Billingham"], ["Anne", "Aallonen"], ["Monique", "Javer"], ["Nicole", "Krijger Jagerman"], ["Ana Luiza", "Alencar"], ["Debbie", "Spence Nasim"], ["Digna", "Ketelaar"], ["Christine", "Iandolo"], ["Chris Anne", "Aston"], ["Ann", "Stephenson"], ["Sonya", "Hahn"], ["Florentina", "Curpene"], ["Linda", "Harley"], ["Dora", "Rangelova"], ["Kathy", "Hofer"], ["Jeong Myung", "Lee"], ["Ei", "Iida"], ["Kim", "Labuschagne"], ["Janine", "Tremelling"], ["Lilia Carla", "Azevedo"], ["Ingelise", "Driehuis"], ["Cynthia", "Mitchell"], ["Michelle", "Turk"], ["Ewa", "Zerdecka"], ["Ana", "Larrakoetxea"], ["Claire", "Wegink"], ["Alejandra", "Perez Jimenez"], ["Annette", "Gerber"], ["Mariana", "Perez Roldan"], ["Clare", "Evert"], ["Carling", "Bassett Seguso"], ["Simona", "Isidori"], ["Jill", "Waldman"], ["Nathalie", "Tauziat"], ["Marianne", "Werdel Witmeyer"], ["Amanda", "Tate"], ["Kirsty", "Wenzel"], ["Yvonne", "Klompenhouver"], ["Myriam", "Berthe"], ["Jean Marie", "Lozano"], ["Eleni", "Rossides"], ["Nahia", "Abou Khalil"], ["Silvia", "La Fratta"], ["Laura", "Garrone"], ["Federica", "Bonsignori"], ["Janet", "Souto Garcia"], ["Maite", "Martinez Perez"], ["Karmen", "Skulj"], ["Suzie", "Mair"], ["Atsuko", "Shima"], ["Laura", "Golarsa"], ["Betsy", "Somerville"], ["Katrina", "Crawford"], ["Karen", "Fodera"], ["Alissa", "Finerman"], ["Milena", "Leiva"], ["Tracey", "Morton Rodgers"], ["Jane", "Morro"], ["Shawn", "Foltz"], ["Denisa", "Kristofova"], ["Stine", "Vogt Andersen"], ["Leila", "Meskhi"], ["Sohini", "Kumari"], ["Anna", "Benzon"], ["Su Jen", "Lai"], ["Andrea", "Holikova"], ["Regina", "Wieser"], ["Laurence", "Garcia Clement"], ["Patty", "Oreilly"], ["Christine", "Oreilly"], ["Terri", "Oreilly"], ["Kersten", "Renneissen"], ["Kristina", "Grunberg"], ["Claudia", "Inchanstegui"], ["Regina", "Rajchrtova"], ["Yu Yu", "Zhu"], ["Alison", "Scott"], ["Adriana", "Sandoval"], ["Henrietta", "Harris"], ["Fang Ling", "Lin"], ["Lisa", "Weerasekera"], ["Cristina", "Casini"], ["Dianne", "Van Rensburg"], ["Isabelle", "Crudo"], ["Fiona", "Long"], ["Mi Jeong", "Lee"], ["Clare", "Wood"], ["Elizabeth", "Gibson"], ["Pascalle", "Druyts"], ["Karin", "Oberleitner"], ["Chanrisa", "Rareang"], ["Stacey", "Schefflin"], ["Jane", "Wood"], ["Yoshiko", "Wauke"], ["Jenny", "Reeves"], ["Jillian", "Alexander Brower"], ["Caroline", "Bhaguandas"], ["Dina", "Basil"], ["I Jin", "Chew"], ["Diana", "Valenti"], ["Mayuko", "Ebina"], ["Melissa", "Brown"], ["Justine", "Brown"], ["Grace", "Kim"], ["Adriana", "Isaza"], ["Akiko", "Kijimuta"], ["Yael", "Shavit"], ["Madeline", "Sanchez"], ["Helena", "Dahlstrom"], ["Eugenia", "Maniokova"], ["Shandra", "Livingston"], ["Tanya", "Soemarno"], ["Mi Ae", "Sohn"], ["Lisa", "Harding"], ["Dorothy Jane", "Suarez"], ["Jackie", "Masters"], ["Kerry", "Kendrick"], ["Claudia", "Piccini"], ["Happy", "Ho"], ["Jodi", "Saunders"], ["Luciene", "Sapienza Muro"], ["Olga", "Tsarbopoulou"], ["Hellas", "Ter Riet"], ["Cecille", "Calmette"], ["Karen", "Shin"], ["Nathalie", "Guerree Spitzer"], ["Annette", "Patchen"], ["Silke", "Meier"], ["Mimouschka", "Kion"], ["Jeom Sang", "Choi"], ["Wendy", "Ouwendijk"], ["In Sook", "Park"], ["Lisa", "Green"], ["Grazia", "Greco"], ["Cecilia", "Dahlman"], ["Carol", "Cassar Torreggiani"], ["Christina", "Singer"], ["Nicolette", "Rooimans"], ["Marielle", "Rooimans"], ["Nathalie", "Housset Gilbert"], ["Katrina", "Adams"], ["Paola", "Voli"], ["Patricia", "Tarabini"], ["Lisa", "Oneill"], ["Maria Jose", "Olave"], ["Linda", "Barnard"], ["Yan Ling", "Li"], ["Laura", "Liong"], ["Agustina", "Wibisono"], ["Augustina", "Wibisono"], ["Voralak", "Vichienchai"], ["Tania", "Zaitouni"], ["Sabrina", "Lucchi"], ["Gisele", "Faria"], ["Julie", "De Armond"], ["Katie", "Rickett"], ["Elizabeth", "Galphin"], ["Karen", "Hunter"], ["Jolene", "Watanabe Giltz"], ["Adrienne", "Green"], ["Edith", "Tatana"], ["Sarah", "Mitten"], ["Karin", "Kschwendt"], ["Ginger", "Helgeson Nielsen"], ["Paulina", "Sepulveda"], ["Allison", "Tolson"], ["Xochitl", "Escobedo"], ["Lettica", "Venter"], ["Suzanne", "White"], ["Norzahara", "Zainal"], ["Dagmar", "Schafer"], ["Teodora", "Tache"], ["Kerri", "Reiter"], ["Titia", "Wilmink"], ["Wendy", "Nelson"], ["Eun Young", "Kim"], ["Jana", "Novotna"], ["Kaye", "Marfini Hand"], ["Amy", "De Lone"], ["Marlene", "Chumbez"], ["Cammy", "Macgregor"], ["Valda", "Lake"], ["Petra", "Holubova"], ["Denisa", "Krajcovicova"], ["Nozelina", "Lukeman"], ["Bettina", "Fulco Villella"], ["Lorenza", "Jachia"], ["Tossaporn", "Summa"], ["Karen", "Deed"], ["Gisele", "Miro"], ["Heike", "Thoms"], ["Katrina", "Greenman"], ["Yuko", "Hosoki"], ["Tami", "Whitlinger Jones"], ["Claudia", "Porwik"], ["Xanthe", "Adams"], ["Kana", "Hatakeyama"], ["Denisa", "Szabova"], ["Sylvie", "Baccarani"], ["Elna", "Reinach"], ["Isabel", "Cueto"], ["Ninoska", "Souto"], ["Henriette", "Gemer"], ["Laura", "Hudson"], ["Christiane", "Hofmann"], ["Shaun", "Stafford"], ["Amy", "Alcini"], ["Anabella", "Radics"], ["Carla", "Bazzon"], ["Tara", "Collins"], ["Heidi", "Sprung"], ["Sylvie", "Metlef"], ["Katarzyna", "Nowak"], ["Jennifer", "Saberon"], ["Ayako", "Hirose"], ["Katrin", "Scheer"], ["Il Soon", "Kim"], ["Genevieve", "Dwyer"], ["Paulette", "Roux"], ["Frederique", "Martin"], ["Flora", "Perfetti"], ["Simona", "Dandrea"], ["Sally", "Godman"], ["Kay", "Louthian"], ["Julie", "Scott"], ["Trisha", "Laux"], ["Donna", "Millington"], ["Ana Maria", "Segura Perez"], ["Tracey", "Moyle"], ["Andrea", "Martinelli"], ["Isabela", "Listowska"], ["Rachel", "Gale"], ["Susannah", "Dart"], ["Teresa", "Edgar"], ["Cecile", "Bourdais"], ["Anya", "Kochoff"], ["Marie", "Croin"], ["Jennifer", "Santrock"], ["Malin", "Nilsson"], ["Cristina", "Cavina"], ["Tanya", "Stasiuk"], ["Danielle", "Jones"], ["Stella", "Sampras"], ["Agnes", "Romand"], ["Cornelia", "Marty"], ["Hijiri", "Nakazaka"], ["Paulette", "Moreno"], ["Tessa", "Shapovalova"], ["Emilie", "Viqueira"], ["Kirsten", "Dreyer"], ["Renata", "Smekalova"], ["Esmir", "Hoogendoorn"], ["Anne", "Meredith"], ["Astrid", "Ruhr"], ["Sally", "McCann"], ["Elvira", "Yussupova"], ["Miyako", "Ataka"], ["Maria Elena", "Gittens"], ["Alison", "Fleming"], ["Niurka", "Sodupe"], ["Elena", "Ordinaga"], ["Alexia", "Gera"], ["Julie", "Coles"], ["Sally", "Mccann"], ["Danila", "Imbriani"], ["Claudia", "Faillace"], ["Linda", "Allred"], ["Vera Carina", "Elter"], ["Susan", "Gadroen"], ["Michelle", "Jaggard Lai"], ["Fumiko", "Yamazaki"], ["Katerina", "Maleeva"], ["Shannon", "Peters"], ["Alexia Llysel", "Marquez"], ["Stephanie", "Faulkner"], ["Andrea", "Vopat"], ["Maya", "Kidowaki"], ["Roberta", "Caldas"], ["Amy", "Van Buuren"], ["Wendy", "Frazer"], ["Marina", "Bottazzi"], ["Wiltrud", "Probst"], ["Andrea", "Kohrt"], ["Florea De Maria", "Urrea"], ["Hana", "Adamkova Guy"], ["Mahela", "Gartner Ockernahl"], ["Steffi", "Graf"], ["Melissa", "Gurney"], ["Natalie", "Rodriguez"], ["Pauline", "Rodriguez"], ["Amy", "Dillingham"], ["Sheri", "Yandle"], ["Birgit", "Dopfer"], ["Li Hua", "Yang"], ["Louise", "Wekesa"], ["Rona", "Daniels"], ["Eva Lena", "Olsson"], ["Sabine", "Hack"], ["Lorna May", "Lewis"], ["Jennifer", "Young"], ["Lisa", "Keller"], ["Erica", "Adams"], ["Jonna", "Jonerup"], ["Aila", "Winkler"], ["Sally", "Timms"], ["Chris Lynne", "Kuhlke"], ["Zelda", "Kuhn"], ["Halle", "Cioffi"], ["Petra", "Thoren"], ["Holly", "Danforth"], ["Gabriela", "Mosca"], ["Susan", "King"], ["Giovanna", "Carotenuto"], ["Maria", "Strandlund Tomsvik"], ["Gail", "Boon"], ["Stephanie", "London"], ["Heike", "Roloff"], ["Virginie", "Buisson"], ["Tonya", "Evans"], ["Elly", "Hakami"], ["Carolina", "Espinoza"], ["Nicole", "Arendt"], ["Antonia", "Homolya"], ["Amy", "Schwartz"], ["Sandra", "Birch"], ["Federica", "Lentini"], ["Kristi", "Bastian"], ["Liliana", "Rodriguez"], ["Nicole", "Bradtke"], ["Yeon Sook", "Kim"], ["Silvia", "Freye Steur"], ["Evelyn", "Larwig"], ["Renate", "Wachtler"], ["Mandy", "Wilson"], ["Caroline", "Delisle"], ["Daniela", "Ivana"], ["Jin", "Choi"], ["Valerie", "Batut"], ["Sybille", "Niox Chateau"], ["Karine", "Quentrec"], ["Donna", "Littleton"], ["Jamie", "Henikoff"], ["Irawati", "Moerid"], ["Irawati", "Iskandar"], ["Karim", "Strohmeier Merino"], ["Cecilia", "Bargagni"], ["Stephanie", "Rehe"], ["Dalia", "Koriat"], ["Cornelia", "Grunes"], ["Tonya", "Fuller"], ["Helen", "Kelesi"], ["Paula", "Parentich"], ["Pilar", "Santibanez Gomez Ull"], ["Gaby", "Coorengel"], ["Monica", "Wiese"], ["Ivonne", "Sonderegger"], ["Ya Hui", "Lin"], ["Martina", "Pawlik"], ["Eva Maria", "Schurhoff"], ["Rita", "Kowacsics"], ["Michelle", "Beadman"], ["Martha", "Garzon Elkins"], ["Mayuko", "Koshiba"], ["Jennifer", "Obrien"], ["Caroline", "Bodart"], ["Gisela", "Quental"], ["Marianne", "Colon"], ["Linda", "Gates"], ["Luciana", "Tella"], ["Sandra", "Bernal"], ["Henriette", "Kjaer Nielsen"], ["Andrea", "Noszaly"], ["Laurence", "Bois"], ["Denia", "Salu"], ["Sarah", "Rafael"], ["Helen", "Odea"], ["Andrea", "Berger"], ["Lorena", "Rodriguez Di Laura"], ["Cora", "Linneman"], ["Maria", "Ekstrand"], ["Amanda", "Gesualdi"], ["Alice", "Lamport"], ["Bettina", "Diesner"], ["Ying", "Bi"], ["Susie", "Scott"], ["Paula", "Iversen"], ["Eva", "Melicharova"], ["Corinne", "Bousmans"], ["Ann", "Devries"], ["Claudine", "Toleafoa"], ["Maria", "Capistrano Bjorklund"], ["Ning", "Lin"], ["Corinne Marie", "Demey Bousm"], ["Kristine", "Kunce"], ["Maria Jose", "Llorca"], ["Maria Elena", "Llamas"], ["Caroline", "Vis"], ["Sylvia", "Stefkova"], ["Sandra", "Wasserman"], ["Helen", "Jonsson"], ["Amanda", "Gregory"], ["Monika", "De Lenart"], ["Kate", "Mcdonald"], ["Metamin", "Sharijah"], ["Danielle", "Scott"], ["Lisa", "Kwok"], ["Jana", "Pospisilova"], ["Ryoko", "Yamaguchi"], ["Lisa", "Albano"], ["Ingrid", "Peltzer"], ["Kelly", "Story"], ["Marie Jose", "Llorca"], ["Barbara", "Oddone"], ["Lindsay", "Matthews"], ["Cathrin", "Caspary"], ["Leona", "Laskova"], ["Alison", "Smith"], ["Hind", "Tajeddine"], ["Rosa Maria", "Llaneras"], ["Pascale", "Welter"], ["Emanuela", "Zardo"], ["Michelle", "Strebel"], ["Stephanie", "Reece"], ["Sylvia", "Czopek"], ["Silvana Lorena", "Celorio"], ["Emmanuelle", "Derly"], ["Stela", "Penciu"], ["Alexia", "Dechaume Balleret"], ["Elba", "Pinero"], ["Jorgelina", "Moreno"], ["Ruth Ann", "Escobedo"], ["Kim Trang", "Nguyen"], ["Kylie", "Johnson"], ["Jean", "Ceniza"], ["Sabina", "Pellas"], ["Nicole", "Welte"], ["Cristina", "Salvi"], ["Su Ying", "Lai"], ["Gabriela", "Sabatini"], ["Anissa", "Groves"], ["Silvia Carina", "Mazzeo Da Silva"], ["Maider", "Laval"], ["Shannan", "Mccarthy"], ["Nicole", "Wagstaff"], ["Rita", "Pichardo"], ["Sandra", "Dopfer"], ["Orawan", "Thampensri"], ["Sophie", "Didelot"], ["Ayoola", "Shelle"], ["Ayoola", "Odiah"], ["Claire", "Sessions Bailey"], ["Silke", "Frankl"], ["Katalin", "Darvas"], ["Ouarda", "Bouchabou"], ["Yvette", "Castillejo"], ["Catherine", "Mothes Jobkel"], ["Rosa Maria", "Peso Aldaz"], ["Nina", "Erickson"], ["Zarina", "Galvan"], ["Susan", "Katzen"], ["Pascal", "Engel"], ["Piret", "Ilves"], ["Joanna", "Rossi"], ["Vita", "Kaminskiate"], ["Bong Soon", "Choi"], ["Petra", "Pichalova Langrova"], ["Anat", "Varon"], ["Laura", "Mannisto"], ["Nadja", "Beik"], ["Michelle", "Bowrey"], ["Su Chen", "Lin"], ["Anja", "Elsen"], ["Shiho", "Okada"], ["Hye Jeong", "Pyo"], ["Maria", "Salsgard"], ["Gudrun", "Levers"], ["Louise", "Fitzgerald"], ["Maria Eugenia", "Vento"], ["Louise", "Venter"], ["Els", "Callens"], ["Magdalena", "Feistel"], ["Alexandra", "Niepel"], ["Debbie", "Graham"], ["Gail", "Biggs"], ["Alessia", "Vesuvio"], ["Ivana", "Ratkovic"], ["Claudia", "Brause"], ["Kateryna", "Filyus"], ["Talina", "Beiko"], ["Barbara", "Paulus"], ["Marzia", "Grossi"], ["Rosario", "Barea De Lara"], ["Tania", "Everoll"], ["Corina", "Martinez Pastur"], ["Nanne", "Dahlman"], ["Julie", "Halard Decugis"], ["Laura", "Lapi"], ["Karen", "Losch"], ["Karen", "Theck"], ["Jessica", "Emmons"], ["Jane", "Yates"], ["Michaela", "Frimmelova"], ["Yumi", "Kitano"], ["Agnes", "Anwar"], ["Natasha", "Marcucci"], ["Joanna", "Meagher"], ["Kimiko", "Date Krumm"], ["Rita", "Degliesposti"], ["Hagit", "Ohayon"], ["Renata", "Della"], ["Gigi", "Gonzalez"], ["Tanti", "Trayono"], ["Mary", "Innes"], ["Patricia", "Valadas"], ["Ann", "Wunderlich"], ["Anna", "Mirza"], ["Alison", "Hill"], ["Kathryn", "Katibi"], ["Lori", "Feingold"], ["Tunecia", "Sheffield"], ["Ying", "Wu"], ["Karen", "Gallego"], ["Theresa", "Anderson"], ["Leisa", "Dunn"], ["Stacey", "Martin"], ["Julia", "Muir"], ["Paola", "De Cunto"], ["Stefanie", "Rehmke"], ["Deborah", "Edelman"], ["Yayuk", "Basuki"], ["Susan", "Sloane Lundy"], ["Merete", "Stockmann Balling"], ["Jeri", "Ingram"], ["Dyphany", "Wilkinson"], ["Tanja", "Weigl"], ["Naoko", "Kurimata"], ["Noelle", "Porter"], ["Holly Ann", "Lloyd"], ["Dorien", "Wamelink"], ["Cammy", "Foley"], ["Radomira", "Zrubakova"], ["Caroline", "Stassen"], ["Elaine", "Gibrayl"], ["Brenda", "Schultz Mccarthy"], ["Steffi", "Menning"], ["Fiona", "Reid"], ["Michaela", "Kriebel"], ["Silvia", "Correa"], ["Bilynda", "Potter"], ["Jo Anne", "Faull"], ["Zuzana", "Witzova"], ["Diane", "Mckeon"], ["Min", "Tang"], ["Pretty", "Marot"], ["Tracey", "Hiete"], ["Kim", "Brandford"], ["Simone", "Hermann"], ["Alysia", "May"], ["Rachel", "King"], ["Varmila", "Trneckova"], ["Andrea", "Vieira"], ["Waya", "Walalangi"], ["Mana", "Endo"], ["Eun Ju", "Han"], ["Susan", "Sommerville"], ["Susan", "Klingenberg"], ["Francesca", "Romano"], ["Karla", "Golfin"], ["Katja", "Oeljeklaus"], ["Linda", "Wild"], ["Lesley", "Barbour"], ["Chrystalla", "Tritti"], ["Naira", "Santrosian"], ["Luciana", "Della Casa"], ["Annalia", "Dellorso"], ["Jenny", "Whalen"], ["Roseann", "Alva"], ["Celine", "Menain"], ["Yukiko", "Fukuzawa"], ["Stephanie", "Mayorkis"], ["Samantha", "Ewart"], ["Kerstin", "Taube"], ["Li Ling", "Chen"], ["Claudia", "Chabalgoity"], ["Anne", "Degioanni"], ["Anne", "Larsen"], ["Magdalena", "Simkova"], ["Mariaan", "De Swardt"], ["Susheel", "Gulati"], ["Cristina", "Beber"], ["Maureen", "Drake"], ["Angie", "Ealy"], ["Tomoko", "Ishida"], ["Jing", "Sung"], ["Rennae", "Stubbs"], ["Monica", "Aguero"], ["Reiko", "Noguchi"], ["Dewi", "Fortuna"], ["Laurence", "Neuville"], ["Kirsten", "Moeller"], ["Yuko", "Miyajima"], ["Andrea", "Paredes"], ["Agnese", "Gustmane"], ["Katja", "Kokko"], ["Nana", "Smith"], ["Tanja", "Cerne"], ["Cinda", "Gurney"], ["Susan", "Gilchrist"], ["Vanessa", "Erlan"], ["Ingrid", "Gonzalez"], ["Sandrine", "Jaquet"], ["Mirijam", "Schweda"], ["Natalia", "Zvereva"], ["Yumiko", "Kitamura"], ["Vlasta", "Dammova"], ["Margarita", "Andonegui"], ["Anjy", "Fahmy"], ["Meredith", "Mcgrath"], ["Kim", "Grant"], ["Margherita", "Naso"], ["Tomoko", "Tazawa"], ["Robyn", "Mawdsley"], ["Raminta", "Mackeviciute"], ["Machika", "Tsuji"], ["Karin", "Lusnic"], ["Yasmin", "Kaya"], ["Elizabeth", "Nieto"], ["Ana", "Carotini"], ["Julie", "Fidler"], ["Patricia", "Quisoboni"], ["Nathalie", "Van Dierendonck"], ["Pamela", "Wallenfels"], ["Henrike", "Kadzidroga"], ["Evica", "Koljanin"], ["Teresa", "Stromberg"], ["Mari Liis", "Parmas"], ["Gabrielle", "Villiger"], ["Elena", "Brioukhovets"], ["Julie", "McKeon"], ["Julie", "Mckeon"], ["Florencia", "Labat"], ["Nora", "Koves"], ["Sarah", "Loosemore"], ["Iwalani", "Mccalla"], ["Trisha", "Holloway"], ["Jitka", "Dubcova"], ["Sandra", "Reichel"], ["Laura", "Ritchey"], ["Sandra", "De Rafael Esteban"], ["Yoannis", "Montesino"], ["Debora", "Garat"], ["Quynh", "Le"], ["Janine", "Humphreys"], ["Caroline", "Wuillot"], ["Solihati", "Moerid"], ["Donna", "Faber"], ["Eva", "Sviglerova"], ["Tracey", "King"], ["Hiromi", "Nagano"], ["Fumiko", "Masuda"], ["Ralitza", "Milorieva"], ["Marianne", "Vallin"], ["Neus", "Avila Bonastre"], ["Donna", "Fields Gibbs"], ["Macarena", "Miranda"], ["Tzvetelina", "Havren"], ["Marie Pierre", "Villani"], ["Pamela", "Buehler"], ["Nanette", "Flichtbeil"], ["Natalia", "Bogacova"], ["Anu", "Varpula"], ["Kawana", "Ishijima"], ["Mary Joe", "Fernandez"], ["Gillian", "Smith"], ["Tracy", "Smith"], ["Vickie", "Paynter"], ["Sabrina", "Giusto"], ["Samantha", "Knight"], ["Rikki", "Gaddie"], ["Marta", "Alastruez Ruiz"], ["Karen", "Van Der Merwe"], ["Misumi", "Miyauchi"], ["Erda", "Crous"], ["Monica", "Rey"], ["Rita", "Cruz Lima"], ["Jackie", "Moe"], ["Allison", "Kinsey"], ["Sanna", "Miestamo"], ["Andrea", "Farley"], ["Ismet Duygu", "Aksit Oal"], ["Caryn", "Moss"], ["Shira", "Gafni"], ["Annika", "Narbe"], ["Diedre", "Herman"], ["Heather", "Willens"], ["Eugenia", "Escarate"], ["Carolina", "Boscardin"], ["Natalie", "Tschan"], ["Simone", "Eberlein"], ["Lisa", "Low"], ["Shi Min", "Lin"], ["Hui", "Zhang"], ["Kimberly", "Po Messerli"], ["Amanda", "Coetzer"], ["Nelly", "Pardo"], ["Ana Belen", "Quintana"], ["Petra", "Schmitt"], ["Andrea", "Peterman"], ["Maria Teresa", "Ruiz"], ["Emma", "Taikie"], ["Juliana", "Gorka"], ["Mareke", "Plocher"], ["Elizabeth", "Osborne"], ["Orathai", "Thampensri"], ["Amalia", "Mitropoulou"], ["Seiko", "Ichioka"], ["Nao", "Akahori"], ["Natalia", "Medvedeva"], ["Sabine", "Gerke"], ["Audra", "Keller"], ["Aida", "Khalatyan"], ["Helen", "Crook"], ["Yone", "Kamio"], ["Jody", "Yin"], ["Samantha", "Smith"], ["Rachel", "Mcquillan"], ["Kat", "Bailey"], ["Rika", "Hiraki"], ["Cinzia", "Coppini"], ["Sarah", "Castillejo"], ["Dina", "Mcbride"], ["Claudia", "Mucino"], ["Sofia", "Kelbert"], ["Arantxa", "Sanchez Vicario"], ["Karin", "Ptaszek"], ["Michelle", "Mair"], ["Birgit", "Arming"], ["Regina", "Chladkova"], ["Nadine", "Batliner"], ["Adriana", "Gonzalez"], ["Karen", "Fisher"], ["Li", "Liu"], ["Maria Pilar", "Valls"], ["Virginia", "Humphreys Davies"], ["Alessandra", "Kaul"], ["Louise", "Stacey"], ["Stacey", "Anderson"], ["Gabriella", "Boschiero"], ["Evangeline", "Olivarez"], ["Giulia", "Toschi"], ["Allegra", "Milholland"], ["Roongnapha", "Surachet"], ["Angela", "Kerek"], ["Atsuko", "Shintani"], ["Michelle", "Anderson"], ["Julie", "Sinkins"], ["Kirsi", "Lampinen"], ["Kelly", "Press"], ["Caroline", "Van Renterghem"], ["Patricia", "Miller"], ["Sara", "Valverde"], ["Esther", "Markenstein"], ["Kristin", "Osmond"], ["Isabela", "Martin"], ["Kristin", "Reed"], ["Anja", "Kostecki"], ["Amanda", "Trail"], ["Leslie", "Cavanaugh   Rose"], ["Hiroko", "Hara"], ["Catarina", "Bernstein"], ["Rachel", "Viollet"], ["Darija", "Deskovic"], ["Akiko", "Gooden"], ["Laura", "Randmaa"], ["Sylvie", "Sabas"], ["Lihini", "Weerasuriya"], ["Helen", "Van Den Berg"], ["Giuliana", "Atzori"], ["Sandra", "Begijn"], ["Janice", "Tilbrook"], ["Susanna", "Modric"], ["Tonia", "Cook"], ["Justine", "Hodder"], ["Angela", "Bernal"], ["Petra", "Winzenholler"], ["Yoriko", "Yamagishi"], ["Tatiana", "Buss"], ["Cami", "Stewart"], ["Rosario", "Gracia Abad"], ["Helena", "Vildova"], ["Gaobolae", "Seleka"], ["Gabriela", "Vesela"], ["Mindy", "Weiner"], ["Gesualda", "Marra"], ["Evelia", "Alvarez"], ["Naoko", "Kijimuta"], ["Yvonne", "Grubben"], ["Natasha", "Sciolti"], ["Kirsten", "Joern"], ["Michelle", "Oldham"], ["Sandrine", "Testud"], ["Veronika", "Martinek"], ["Brenda", "Thomas"], ["Ainhoa", "Torrens"], ["Angela", "Lettiere"], ["Anja", "Franken"], ["Lucie", "Schmidhauser"], ["Aki", "Fujii"], ["Ashley", "Miller"], ["Lela", "Zainal"], ["Katia", "Labourey"], ["Sara", "Migliori"], ["Conchita", "Martinez"], ["Jennifer", "Callen"], ["Simone", "Hoormaert"], ["Lorrae", "Guse"], ["Lily", "Nejasmic"], ["Mary", "Nejasmic"], ["Claudia", "Rodriguez"], ["Maria", "Hardling"], ["Cara", "Abe"], ["Sabine", "Appelmans"], ["Elke", "Escreet"], ["Laura", "Richards"], ["Hortensia", "Hernandez"], ["Silvia", "Farina Elia"], ["Nicole", "Gadanyi"], ["Carrie", "Cunningham"], ["Yiching", "Wu"], ["Petra", "Johansson"], ["Marja Liisa", "Kuurne"], ["Elitza", "Paunova"], ["Alison", "Reid"], ["Hye Jin", "Park"], ["Barbara", "Garassino"], ["Julie", "Exum"], ["Kelli Ann", "Johnston"], ["Tatiana", "Matohniuk"], ["Agnes", "Zugasti"], ["Erika", "Kuttler"], ["Elena", "Pampoulova"], ["Elena", "Wagner"], ["Olivia", "De Camaret"], ["Olivia", "Ponchet"], ["Barbara", "Griffiths"], ["Pavlina", "Rajzlova"], ["Petra", "Schwarz"], ["Jana", "Strnadova"], ["Lizette", "Roncagliolo"], ["Andrea", "Strnadova"], ["Carla", "Rodriguez"], ["Medi", "Dadoch"], ["Meredith", "Geiger"], ["Audra", "Brannon"], ["Heather", "Lockhart"], ["Valerie", "Tan"], ["Nuria", "Niemes"], ["Karen", "Bacon"], ["Nathalie", "Leschi"], ["Melissa", "Mazzotta"], ["Kristine", "Kurth"], ["Loredana", "Bujor"], ["Kerstin", "Kretschmann"], ["Megali", "Gence"], ["Hye Jeong", "Kim"], ["Tanja", "Stegkamper"], ["Sandra", "Van Der Aa"], ["Tania", "Couto"], ["Noelle", "Van Lottum"], ["Natalia", "Baudone Furlan"], ["Ana", "Salas Lozano"], ["Heidi", "Djanogly"], ["Christine", "Neuman"], ["Olivia", "Cappelletti"], ["Anouschka", "Popp"], ["Stefania", "Casi"], ["Cristina", "Tessi"], ["Yael", "Segal"], ["Eva", "Haslinghuis"], ["Caroline", "Schuck"], ["Lorenza", "Romano"], ["Gabriella", "Molnaar"], ["Natasha", "Villarroel"], ["Mika", "Todo"], ["Shahira", "Tawfik"], ["Victoria", "Davies"], ["Kiyoko", "Yazawa"], ["Nadia", "Choqri"], ["Leena", "Singarajah"], ["Silvia", "Ramon Cortes"], ["Gemma", "Magin"], ["Jane", "Harper"], ["Paula", "Cabezas"], ["Natalia", "Chasovaya"], ["Ellen", "Nelissen"], ["Paloma", "Collantes"], ["Issem", "Essaies"], ["Katrina", "Saarinen"], ["Melisa", "Castro"], ["Denise", "Sukup"], ["Katarina", "Studenikova"], ["Brenda", "Rojas"], ["Manuela", "Bargis"], ["Yamile", "Cordova"], ["Sabrina", "Favini"], ["Caroline", "Marchetti"], ["Aranka", "Huyberts"], ["Miriam", "Oremans"], ["Cora", "Hofmann"], ["Marilia", "Andrade"], ["Amy", "Frazier"], ["Sofie", "Albinus"], ["Gina", "Niland"], ["Rosalba", "Caporuscio"], ["Cathy", "Caverzasio"], ["Julie", "Shiflet"], ["Aurelia", "Gheorghe"], ["Diana", "Gardner"], ["Agata", "Werblinska"], ["Maria Claudia", "Negri"], ["Maria", "Purcell"], ["Mmaphala", "Letsatle"], ["Erika", "De Lone"], ["Junko", "Watanabe"], ["Helma", "Leeuwen"], ["Merete", "Lindahl"], ["Julia", "Boden"], ["Alix", "Creek"], ["Ruxandra", "Dragomir Ilie"], ["Brenda", "Santos"], ["Edna", "Espinosa"], ["Natalia", "Biletskaia"], ["Jane", "Taylor"], ["Nimota", "Kadiri"], ["Svenja", "Truelsen"], ["Toni", "Gaddie"], ["Laxmi", "Poruri"], ["Virag", "Csurgo"], ["Galia", "Angelova"], ["Elena", "Savoldi"], ["Desiree", "Leupold"], ["Plamena", "Gogovska"], ["Amy", "Mascotti"], ["Karin", "Balekova"], ["Rachel Ann", "Jensen"], ["Rebecca", "Jensen"], ["Su Peng", "Ng"], ["Melissa", "McFarlane"], ["Carole", "Lucarelli"], ["Margarita", "Amelina"], ["Jindra", "Gabrisova"], ["Katarzyna", "Teodorowicz Lisowska"], ["Erica", "Oneill"], ["Kerry Anne", "Guse"], ["Federica", "Haumuller"], ["Noelia", "Perez Penate"], ["Catherine", "Turinsky"], ["Susie", "Starrett"], ["Lidia", "Soulti"], ["Marion", "Maruska"], ["Stacey", "Sheppard"], ["Monika", "Starosta"], ["Wendy", "Brown"], ["Luanne", "Spadea"], ["Tanja", "Hauschildt"], ["Catalina", "Ramirez"], ["Courtney", "Roberts"], ["Fang", "Li"], ["Natalia", "Noreiko"], ["Patricia", "Rogulski"], ["Kara", "Schertzer"], ["Il Sook", "Kim"], ["Katja", "Meichelbock"], ["Julie", "Foillard"], ["Alexandra", "Scheider"], ["Ulrike", "Priller"], ["Mika", "Kanaya"], ["Vajira", "Premaratne"], ["Olga", "Cosic"], ["Robyn", "Farrington"], ["Daniella", "Blanke"], ["Helga", "Grille"], ["Eva", "Bes Ostariz"], ["Katia", "Piccolini"], ["Jennifer", "Baker"], ["Sherri", "Vitale"], ["Eleonora", "Agnolozzi"], ["Janaina", "Mercadante"], ["Cristina", "Casale"], ["Camille", "Walter"], ["Natalia", "Anisimova"], ["Janaki", "Krishnamoorthy"], ["Elena", "Makarova"], ["Petra", "Crimmel"], ["Pernilla", "Sorensen"], ["Nadin", "Ercegovic"], ["Angie", "Woolcock"], ["Krisna", "Summa"], ["Kristin", "Godridge"], ["Greta", "Schmitt"], ["Rachel", "Clark"], ["Paula", "Boccia"], ["Gabriela", "Calderon"], ["Camille", "Baldrich"], ["Radka", "Bobkova"], ["Ivona", "Horvat"], ["Maria", "Marfina"], ["Elana", "Clark"], ["Marina", "Stets"], ["Christine", "Njeuma"], ["Christina", "Papadaki"], ["Nicoletta", "Iaccarino"], ["Kirrily", "Sharpe"], ["Natalia", "Narenko"], ["Petra", "Raclavska"], ["Nicole", "Pratt"], ["Susanna", "Attili"], ["Sarah", "Bentley"], ["Jenny", "Klemm"], ["Sabine", "Lohmann"], ["Joelle", "Schad"], ["Elke", "Juul"], ["Helene", "Kappler"], ["Francesca", "Morini"], ["Nicole", "Kenneally"], ["Suzanne", "Italiano"], ["Francine", "Harvey"], ["Naoko", "Sawamatsu"], ["Maribel", "Amadeo"], ["Maja", "Palaversic Cooper Smith"], ["Elena", "Pogorelova"], ["Farah", "Mahmood"], ["Jette", "Wilhelmsen"], ["Irina", "Stoilova"], ["Marie Christine", "Goy"], ["Kimberly", "Kessaris"], ["Susi", "Fortun Lohrmann"], ["Ines", "Drumond"], ["Mariana", "Randrup"], ["Diana", "Mills"], ["Ilona", "Poljakova"], ["Klara", "Blahova"], ["Ginevra", "Mugniani"], ["Klara", "Tomsu"], ["Keiko", "Ishida"], ["Claudia", "Timm"], ["Alexandra", "Henningsson"], ["Katharina", "Duell"], ["Barbara", "Navarro"], ["Francesca", "Guardigli"], ["Ulrike", "Przysucha"], ["Lisa", "Poole"], ["Renata", "Kochta"], ["Katherine", "Gladding"], ["Esther", "Rekasch"], ["Claire", "Adamini"], ["Eva", "Borras"], ["Tzipi", "Obziler"], ["Emanuela", "Brusati"], ["Cristina", "Lopez De Subijana"], ["Masami", "Nakamura"], ["Danielle", "Thomas"], ["Cara", "Robinette"], ["Barbara", "Rittner"], ["Olivia", "Fery"], ["Rieneke", "Kusters"], ["Claudia", "Hoffmann Timm"], ["Liat", "Cohen"], ["Anna Laura", "Baraldi"], ["Marlies", "Reinders"], ["Rima", "Taki"], ["Theresa", "Swart"], ["Anne Marie", "Mikkers"], ["Laurence", "Andretto"], ["Roberta", "Burzagli"], ["Lamsriati", "Moerid"], ["Daniela", "Cigna"], ["Maria Jose", "Gaidano"], ["Alicia", "Meraz"], ["Dominique", "Monami"], ["Helene", "Holter"], ["Caroline", "Schneider"], ["Ingrid", "Kurta"], ["Christelle", "Fauche"], ["Isabela", "Petrov"], ["Catherine", "Barclay"], ["Ines", "Gorrochategui"], ["Caroline", "Dhenin"], ["Patrizia", "Mirtillo"], ["Alison", "Moverley"], ["Vera", "Turkhaneli"], ["Vanina", "Casanova"], ["Galina", "Misiuriova"], ["Nancy", "Van Erp"], ["Kaoru", "Shibata"], ["Wendy", "Shipp"], ["Carolina", "Torres"], ["Irene", "Gonzalez Gonzalez"], ["Hikari", "Abe"], ["Siri", "Mittet"], ["Colette", "Caple"], ["Alison", "Vaughan"], ["Monica", "Mraz"], ["Katrien", "De Craemer"], ["Limor", "Zaltz"], ["Sussy", "Boyanovich"], ["Cristina", "Sanz Aguirre"], ["Rona", "Mayer"], ["Ma Carmen", "Garcia"], ["Fiona", "Stoner"], ["Oksana", "Bushevitsa"], ["Eleonora", "Vegliante"], ["Barrie", "Bernstein"], ["Dana", "Evans"], ["Anna", "Anastasiou"], ["Helena", "Franko"], ["Gillian", "Carter"], ["Dilshani", "Manawadu"], ["Karina", "Habsudova"], ["Anneli", "Ornstedt"], ["Lisa", "Raymond"], ["Cristina", "Rodriguez"], ["Natsuko", "Kurita"], ["Mareze", "Joubert"], ["Elexia", "Stivala"], ["Ivana", "Havrlikova"], ["Heidi", "Hogh"], ["Elissa", "Burton"], ["Rebecca", "Edwards"], ["Caroline", "Hunt"], ["Astrid", "Parlachy"], ["Joannette", "Kruger"], ["Sophie", "Woorons"], ["Kelly S", "Wilson"], ["Caroline", "Herbert"], ["Mary", "Quasney"], ["Alexandra", "Kelly"], ["Anique", "Snijders"], ["Keirsten", "Alley"], ["Reyna", "Alvarado"], ["Virginia", "Ruano Pascual"], ["Pilar", "Perez"], ["Natalja", "Vojinovic"], ["Soon Mi", "Kim"], ["Maja", "Zivec Skulj"], ["Sasano", "Yoshiko"], ["Stefania", "Indemini"], ["Patricia", "Sandagorda"], ["Patty", "Murren"], ["Aranzazu", "Gallardo"], ["Tanja", "Tsiganii"], ["Stephanie", "Martin"], ["Alexandra", "Schmitt"], ["Su Haiza", "Wan"], ["Angelica", "Gavaldon"], ["Andreea", "Ehritt Vanc"], ["Ana", "Perez"], ["Tracee", "Lee"], ["Natasha", "Giles Mellon"], ["Shieh Yen", "Leong"], ["Holyn", "Lord"], ["Michelle", "Likibi"], ["Emily", "Bond"], ["Christina", "Fischler"], ["Anzela", "Zguna"], ["Yoshiko", "Sasano"], ["Shi Ting", "Wang"], ["Nuria", "Tabernero Garin"], ["Marianne", "Ward"], ["Gorana", "Matic"], ["Marcia", "Paganini"], ["Kori", "Davidson"], ["Paula", "Astrini"], ["Amy", "Chiminello"], ["Claire", "Gatt"], ["Martie", "De Villiers"], ["Kerry Ann", "Lim"], ["Michelle", "Morris Berg"], ["Maria De Los Angeles", "Ycaza"], ["Ana", "Rojas"], ["Ninel", "Barkan"], ["Carolina", "Conte"], ["Ingrid", "Lucak"], ["Alexandra", "Fusai"], ["Cathrine", "Instebo"], ["Valerie", "De La Noye"], ["Monica", "Seles"], ["Nike", "Dobrovits"], ["Annette", "Falkenberg"], ["Nabila", "Bouchabou"], ["Kyung Sook", "Yoo"], ["Miyako", "Nakanishi"], ["Miki", "Miyauchi"], ["Svetlana", "Komleva"], ["Kristie", "Boogert"], ["Anori", "Fukuda"], ["Yuki", "Fujii"], ["Gala", "Leon Garcia"], ["Amanda", "Parson Siegel"], ["Gianfranca", "Devercelli"], ["Jill", "Brenner"], ["Michelle", "Jackson Nobrega"], ["Jennifer", "Poulos"], ["Valerie", "Poulos"], ["Svetlana", "Krivencheva"], ["Lisa", "Annebro"], ["Sofia", "Hiort"], ["Valentina", "Balzotti"], ["Altie", "Barnard"], ["Olga", "Lugina"], ["Camilla", "Persson"], ["Mia", "Leino"], ["Mirielle", "Dittmann"], ["Geraldine", "Ibrac"], ["Marilyn", "Baker"], ["Patricia", "Zerdan"], ["Candida", "Beaumont"], ["Stephanie", "Rottier"], ["Li Yao", "Tang"], ["Catriona", "Mccarthy"], ["Min Hui", "Chan"], ["Liako", "Selokoma"], ["Maria Florencia", "Cianfagna"], ["Maryla", "Madura"], ["Katerina", "Vlckova"], ["Estefania", "Bottini"], ["Aicha", "Ferjani"], ["Lucy", "Needham"], ["Alessia", "Sciarpelletti"], ["Joana", "Pedroso"], ["La Shawnn", "Jones"], ["Bridget", "Mikysa"], ["Viviana", "Valdovinos"], ["Irina", "Sukhova"], ["Lea", "Ghirardi"], ["Barbara", "Collet"], ["Kaisaran", "Siewrattan"], ["Stephanie", "Gomperts"], ["Karen", "Cross"], ["Beatriz", "Luna"], ["Johanna", "Pana"], ["Katerina", "Kroupova"], ["Lisa", "Pugliese"], ["Kyoko", "Nagatsuka"], ["Niki", "Ninaus"], ["Kati", "Kocsis"], ["Shu Ping", "Lin"], ["Maja", "Muric"], ["Monika", "Kratochvilova"], ["Jing Qian", "Yi"], ["Nadia", "Streltsova"], ["Dyane", "Aixendri"], ["Cecile", "Dorey"], ["Karina", "Kuregian"], ["Jeanette", "Bhaguandas"], ["Maria Alejandra", "Quezada"], ["Simona", "Petru"], ["Yee Hong", "Tan"], ["Shareen", "Bottrell"], ["Laurence", "Giroud"], ["Limor", "Gabai"], ["Petra", "Kamstra"], ["Tina", "Krizan"], ["Raphaella", "Liziero"], ["Sumara", "Passos"], ["Maria Virginia", "Francesca"], ["Irina", "Spirlea"], ["Joanne", "Limmer"], ["Ngozi", "Okwudike"], ["Line", "Ullring"], ["Germana", "Di Natale"], ["Melissa", "Zimpfer"], ["Silvia", "Plasin Peral"], ["Gulberk", "Gultekin"], ["Kaoru", "Yagi"], ["Vera", "Vitels"], ["Lee Ann", "Van Den Berg"], ["Amy", "Berthe"], ["Marketa", "Stuskova"], ["Suvimol", "Duangchan"], ["Danica", "Kovacova"], ["Samantha", "Etienne"], ["Svetlana", "Zakharchenko"], ["Valeria", "Madaro"], ["Hanneke", "Ketelaars"], ["Caterina", "Cerquaglia"], ["Eugenia", "Maia"], ["Terry Ann", "Zawacki"], ["Beatriz", "Andonegui"], ["Helena", "Nordwall"], ["Keri", "Phebus"], ["Vanessa", "Matthys"], ["Melissa", "Golfin"], ["Vicky", "Maes"], ["Anna Karin", "Svensson"], ["Esther", "Ruiz De Ona Plaza"], ["Kathleen", "Odaly"], ["Jane", "Legge"], ["Nipada", "Kaewborisut"], ["Tamsin", "Wainwright"], ["Anna", "Moll"], ["Gabriela", "Villanueva"], ["Riei", "Kawamata"], ["Seda", "Noorlander"], ["Axelle", "Thomas"], ["Chinatsu", "Ito"], ["Maria", "Zsoldos"], ["Carolina", "Somalo"], ["Maria", "Vento Kabchi"], ["Emily", "Leonardi"], ["Ana Karina", "Saldivar"], ["Barbara", "Mulej"], ["Rosabel", "Moyen"], ["Marisa", "Georgitsi"], ["Jan", "Barrett"], ["Lashawnn", "Jones"], ["Janette", "Husarova"], ["Alejandra", "Gomez"], ["Joice Riana", "Sutedja"], ["Jean", "Okada"], ["Jana", "Nejedly"], ["Tatiana", "Ignatieva"], ["Alexia", "Ferrand"], ["Shizuka", "Tokiwa"], ["Stephanie", "Devisme"], ["Ching Li", "Chen"], ["Barbara", "Bathory"], ["Sofia", "Prazeres"], ["Katharina", "Buche"], ["Shirli Ann", "Siddall"], ["Jane", "Chi"], ["Florence", "Mbugua"], ["Page", "Bartelt"], ["Martine", "Vosseberg"], ["Mariko", "Kaneko"], ["Ljudmila", "Pavlov"], ["Ninfa", "Marra"], ["Jill", "Craybas"], ["Jacqueline", "Dickinson"], ["Pavlina", "Nola"], ["Paige", "Yaroshuk"], ["Maja", "Wittke"], ["Daniela", "Or Shahar"], ["Michaela", "Soukupova Peterova"], ["Daphne", "Van De Zande"], ["Renata", "Diez"], ["Anna Maria", "Hollo"], ["Hui Na", "Liu"], ["Lucie", "Ahl"], ["Arthi", "Venkataraman"], ["Tina", "Samara"], ["Lamia", "Hameurlaine"], ["Marie", "Linusson"], ["Nicole", "Hummel"], ["Dominika", "Gorecka"], ["Satoko", "Nakano"], ["Kazue", "Takuma"], ["Monique", "Kiene"], ["Franke", "Joosten"], ["Natsumi", "Yuki"], ["Sabine", "Pawelec"], ["Yu Hsien", "Liu"], ["Simona", "Nedorostova"], ["Yuka", "Tanaka"], ["Anna", "Foldenyi Dicker"], ["Marie", "Arkbrant"], ["Bixia", "Li"], ["Elizabeth", "Alina"], ["Lebogang", "Seitshiro"], ["Tracy", "Schroeder"], ["Christina", "Zachariadou"], ["Agnes", "Gee"], ["Lauren", "Gavaris"], ["Cecilia", "Ampuero"], ["Monica", "Guglielmi"], ["Yuki", "Kitamura"], ["Sandra", "Cacic"], ["Linda", "Jansson"], ["Paula", "Umana"], ["Cristina", "Torrens Valero"], ["Maria Carmen", "Leon"], ["Melanie", "Bernard"], ["Luciana", "Barbosa"], ["Delene", "Ackron"], ["Sally", "Boulding"], ["Evonne", "Allerkamp"], ["Yoke", "Virliana"], ["Akiko", "Kazama"], ["Federica", "Fortuni"], ["Nicole", "Elliott"], ["Chie", "Kudo"], ["Alaa", "A A Ali"], ["Anousjka", "Van Exel"], ["Jayne", "Demichele"], ["Sarah", "Brown"], ["Anouska", "Van Exel"], ["Celine", "Regnier"], ["Cindy", "Summers"], ["Tatjana", "Vuckovic"], ["Sofia", "Kalavria"], ["Lisa", "Mcshea"], ["Kathy", "ODaly"], ["Aurora", "Gima"], ["Laura", "Medei"], ["Mimma", "Chernovita"], ["Stephanie", "Content Tardieu"], ["Marie Pierre", "Attali"], ["Eleni", "Kangalou"], ["Martine", "Bunschoten"], ["Elisabeth", "Habeler"], ["Hitomi", "Isomura"], ["Meike", "Babel"], ["Keiko", "Nagatomi"], ["Divya", "Merchant"], ["Alison", "Cohen"], ["Susan", "Bowman"], ["Jenny", "Sotomayor"], ["Valentina", "Bonacorsi"], ["Marcela", "Demilio"], ["Anke", "Huber"], ["Shiri", "Burstein"], ["Maria", "Popescu"], ["Yvonne", "Doyle"], ["Julia", "Mertins"], ["Anne", "Mall"], ["Linda", "Niemantsverdriet"], ["Jennifer", "Saret"], ["Farley", "Taylor"], ["Sheung", "Pang"], ["Tanja", "Lang"], ["Simone", "Bock"], ["Paiao Asinata", "Short"], ["Lee", "Whitwell"], ["Akemi", "Hasegawa"], ["Kylie", "Gottsche"], ["Evelyn", "Otula"], ["Margaret", "Olagundoye"], ["Kristy", "Bayer"], ["Daria", "Chernova"], ["Kimberley", "Risson"], ["Stacey", "Jellen"], ["Carina", "Lopez"], ["Simona", "Galik"], ["Caroline", "Gideskog"], ["Julia", "Lutrova"], ["Ayako", "Noda"], ["Asami", "Tsuda"], ["Benjamas", "Sangaram"], ["Mary", "Pierce"], ["Susanna", "Locher"], ["Sandra", "De Silva"], ["Marjorie", "Ferrand"], ["Zdenka", "Malkova"], ["Antonela", "Voina Timmerbeil"], ["Aiko", "Suzuki"], ["Martina", "Hautova"], ["Alexandra", "Rentzoula"], ["Kelesitse", "Makgale"], ["Lamia", "Alami"], ["Gabriela", "Beleni"], ["Melanie", "Kay"], ["Wendy", "Fix"], ["Mair", "Hughes"], ["Virginie", "Van Der Meersch"], ["Katrin", "Kilsch"], ["Sara", "Tse"], ["Paola", "Cespedes"], ["Uju", "Ben"], ["Stephanie", "Barfeld"], ["Hong Lan", "Liu"], ["Aafje", "Evers"], ["Susanne", "Depka"], ["Karolina", "Bulat"], ["Kyoko", "Hirano"], ["Sung Hee", "Park"], ["Claire", "Taylor"], ["Zsofia", "Csapo"], ["Patricia", "Aznar"], ["Aiko", "Matsuda"], ["Bi Xia", "Li"], ["Edith", "Nunes Bersot"], ["Anne", "Ollevier"], ["Laura", "Olave"], ["Michele", "Wagner"], ["Celine", "Beigbeder"], ["Celine", "Bannmeyer"], ["Stephanie", "Tibbits"], ["Stephania", "Gehrke"], ["Maria Fernanda", "Sainz"], ["Hiromi", "Sasano"], ["Hyun A", "Shin"], ["Eva", "Martincova"], ["Sandra", "Waechtershauser"], ["Hwa Ju", "Jeung"], ["Maite", "Vila"], ["Alona", "Nakamura"], ["Lubomira", "Bacheva"], ["Eun Ha", "Kim"], ["Mami", "Donoshiro"], ["Andrea", "Tunko"], ["Sophie", "Cortina"], ["Caroline", "Hora"], ["Yi", "Liu"], ["Ande", "Tulp"], ["Mariana", "Eberle"], ["Hyun Hee", "Sohn"], ["Stefania", "Pifferi"], ["Saira", "Sanchinelli"], ["Rita", "Grande"], ["Patricia", "Rodriguez"], ["Valeria", "Valente"], ["Amanda", "Weinhold"], ["Mette", "Sigmundstad"], ["Julia", "Jehs"], ["Magdalena", "Maleeva"], ["Amanda", "Browne"], ["Estelle", "Gevers"], ["Beatriz", "Miravete"], ["Maria Dolores", "Campana"], ["Yumiko", "Nakazima"], ["Sherry", "Buller"], ["Kelly", "Duns"], ["Maija", "Avotins"], ["Olga", "Hostakova"], ["Alexandra", "Scholer"], ["Petra", "Begerow"], ["Vlada", "Kirilovska"], ["Larissa", "Schaerer"], ["Eva", "Diez"], ["Tomoe", "Hotta"], ["Ai", "Haigo"], ["Victoria", "Voznesenskaya"], ["Rieko", "Noda"], ["Sabine", "Haas"], ["Lara", "Bitter"], ["Yolanda", "Clemot Lerendegui"], ["Paola", "Tampieri"], ["Carine", "Bornu"], ["Shanna", "Strong"], ["Katie", "Schlukebir"], ["Imogen", "Wyatt"], ["Debbie", "Carr"], ["Marjorie", "Gantman"], ["Rita", "Degli Esposti"], ["Christine", "Joseph"], ["Jennie", "McMahon"], ["Laurence", "Duffaud"], ["Stefanie", "Meyer"], ["Kate", "Warne Holland"], ["Sandra", "Olsen"], ["Branislava", "Ivanovic"], ["Johanna", "Sones"], ["Eva", "Jimenez Sanz"], ["Maja", "Ipsa"], ["Magdalena", "Gargulakova"], ["Martina", "Nejedly"], ["Linda", "Engblom"], ["Nicole", "Strnadova"], ["Kirstin", "Freye"], ["Maggie", "Harris"], ["Young Ja", "Choi"], ["Esra", "Bayburt"], ["Sang Hoon", "Chung"], ["Catalina", "Cristea"], ["Nicole", "Roth"], ["Sylva", "Nesvadbova"], ["Gabriela", "Radu"], ["Nejla", "Gunay Karoglu"], ["Farah", "Dayoub"], ["Andrea", "Bilic"], ["Tze May", "Lee"], ["Ayami", "Akiyama"], ["Natalia", "Nemchinova"], ["Maria Jose", "Capuano"], ["Daniela", "Agostinone"], ["Angelique", "Olivier"], ["Suzanne", "Olson"], ["Noriko", "Miyamoto"], ["Asa", "Svensson"], ["Lesia", "Bilak"], ["Julie Ann", "Baird"], ["Petra", "Hradecka"], ["Petra", "Douderova"], ["Maaike", "Koutstaal"], ["Dominique", "Bovey"], ["Alison", "Bell"], ["Joanne", "Ward"], ["Bontshetse", "Seleka"], ["Eliana", "Della Vedova"], ["Marcia", "Senn"], ["Pam", "Nelson"], ["Marta", "Cruells Lopez"], ["Ai", "Sugiyama"], ["Johanna", "Bihr"], ["Kveta", "Peschke"], ["Christina", "Habernigg"], ["Marketa", "Kochta"], ["Olga", "Arevalo"], ["Hiroko", "Ishizaki"], ["Angie", "Guillette"], ["Melody", "Falco"], ["Tiffini", "Huggins"], ["Maria Lovella", "Catalan"], ["Nathaly", "Tijssen"], ["Ryouko", "Yamada"], ["Hiroko", "Mochizuki"], ["Gloria", "Pizzichini"], ["Katerina", "Zajacova"], ["Hye Jin", "Seo"], ["Marijana", "Randjelovic"], ["Cynthia", "Ojeda"], ["Maria Fernanda", "Landa"], ["Melissa", "Beadman"], ["Sandra", "Costa Corral"], ["Khristen", "Pietrucha"], ["Sandrella", "Droubi"], ["Angeles", "Montolio"], ["Lara", "Howes"], ["Zara", "Wolseley"], ["Jasmine", "Angeli"], ["Joanna", "Bauza"], ["Maria", "Hernandez"], ["Mariela", "Marinaro"], ["Michaela", "Seibold"], ["Katarzyna", "Malec"], ["Jing Jing", "Chen"], ["Zorica", "Glisic"], ["Jennifer", "Fiers"], ["Valeria", "Strappa"], ["Cristina", "Caparis"], ["Kylie", "Hunt"], ["Carla", "Santini"], ["Claudia", "Harrison"], ["Ma Eugenia", "Abrate"], ["Patamika", "Phongsuramas"], ["Tina", "Vukasovic"], ["Elena", "Likhovtseva"], ["Heather", "Bates"], ["Barbara", "Castro"], ["Kata", "Gyorke"], ["Petra", "Studnicka"], ["Rosana", "De Los Rios"], ["Natalia", "Bondarenko"], ["Dina", "Dajani"], ["Maylani", "Ah Hoy"], ["Marta", "Cano"], ["Margarita", "Mejia"], ["Karen", "Anderson"], ["Dewi", "Wijayanthi"], ["Manuela", "Grosskopf"], ["Olesya", "Artemeva"], ["Kym", "Hazzard"], ["Tankiso", "Letseka"], ["Natalie", "Adsuar"], ["Karine", "Preaud"], ["Monica", "Chornet Velasco"], ["Julie", "Thu"], ["Anne", "Kremer"], ["Berengere", "Karpenschif"], ["Monique", "Fitters"], ["Christina", "Weiss"], ["Soon Nam", "Kim"], ["Pao Hua", "Huang"], ["Sue", "Kocsis"], ["Diana", "Spadea"], ["Valerie", "Feger"], ["Leanne", "Melgaard"], ["Julie", "Pullin"], ["Angie", "Marik"], ["Kelly", "Rudolph"], ["Alena", "Nesticka"], ["Ines", "Heise"], ["Cristina", "Cortes"], ["Suzana", "Rodrigues"], ["Gabriela Aura", "Zarnoveanu"], ["Denisa", "Legac"], ["Mihaela", "Ghica"], ["Sarah", "Pitkowski Malcor"], ["Aradhana", "Reddy"], ["Anne", "Puissant"], ["Ju Yeon", "Choi"], ["Natalia", "De Cola"], ["Yasmin", "Attia Abdalla"], ["Yoriko", "Kokubun"], ["Betsy", "Miringoff"], ["Natalie", "Nagyova"], ["Emanuela", "Falleti"], ["Martina", "Schiavo"], ["Ana", "Laso"], ["Anna", "Klim"], ["Lorena", "Romano"], ["Magali", "Benitez"], ["Isabell", "Quast"], ["Jeong Hee", "Paek"], ["Ana", "Gasparyan"], ["Soumia", "Islami"], ["Ana Maria", "Hartweg"], ["Martina", "Zichova"], ["Laura", "Nurminen"], ["Ditta", "Huber"], ["Akemi", "Sato"], ["Sissy", "Carvin"], ["Jutta", "Ribitsch"], ["Lucinda", "Gibbs"], ["Sophie", "De Taxis"], ["Shaila", "Ali"], ["Esme", "De Villiers"], ["Yeon Hee", "Cho"], ["Ana Valeria", "Rolon"], ["Natalia", "Soetrisno"], ["Sonal", "Marker"], ["Martina", "Crha"], ["Alenka", "Ovin"], ["Floor", "Vioen"], ["Claudia", "Marsili"], ["Miia", "Kohtala"], ["Dora", "Djilianova"], ["Cristiana", "Marradi"], ["Katherine", "Costain"], ["Audrey", "Ludwig"], ["Laurence", "Courtois"], ["Conchita", "Martinez Granados"], ["Marie Christine", "Caron"], ["Ma Llanos", "Soriano"], ["Vanessa", "Webb"], ["Olga", "Vymetalkova"], ["Ai", "Ozawa"], ["Subhra", "Shukla"], ["Lusy", "Kumala"], ["Hanako", "Kamiya"], ["Nicole", "London"], ["Nancy", "Feber"], ["Katarina", "Misic"], ["Linda Beate", "Andersen"], ["Silvia", "Aneiros"], ["Evelyn", "Platzer"], ["Nina", "Murn"], ["Eiko", "Toba"], ["Maria Luciana", "Reynares"], ["Viktoria", "Gimberg"], ["Amanda", "Hopmans"], ["Thea", "De Weerd"], ["Elpis", "Alexandrou"], ["Dionne", "Lim"], ["Tomoko", "Sekiguchi"], ["Chanda", "Rubin"], ["Giorgia", "Capanni"], ["Charlotte", "Ruitenberg"], ["Stefanie", "Kolar"], ["Cindy", "Xu"], ["Tasha", "Jackson"], ["Audrey", "Cocuaud"], ["Maria Noel", "Losada"], ["Severine", "Augros"], ["Valentina", "Terio"], ["Carolina", "Azcui"], ["Saranga", "Sangakkara"], ["Mariam", "Rahim"], ["Catrin", "Mueller"], ["Mireille", "Bink"], ["Adriana", "Serra Zanetti"], ["Seon Young", "Park"], ["Natascha", "De Kramer"], ["Joanne", "Moore"], ["Marielle", "Bruens"], ["Cheah Sui", "Kim"], ["Barbara", "Schett"], ["Asli", "Kocaoemer"], ["Mariana", "Diaz Oliva"], ["Severine", "Arpajou"], ["Caroline", "Rossel"], ["Elena", "Tsagalidou"], ["Csilla", "Dobo"], ["Caroline", "Germar"], ["Corinne", "Ng Tung Hing"], ["Miho", "Saeki"], ["Catrin", "Muller"], ["Vera", "Zhukovets"], ["Rurika", "Maruse"], ["Amanda", "Wainwright"], ["Meang", "Liew"], ["Mariska", "Steenkamp"], ["Andrea", "Behalova"], ["Ellen", "Muller"], ["Jennifer", "Capriati"], ["Laura", "Montalvo"], ["Elisa", "Penalvo"], ["Mary Beth", "Maggart"], ["Manuela", "Kostner"], ["Yuka", "Yoshida"], ["Sudsobhi", "Chatsuthiphan"], ["Oksana", "Yarikova"], ["Pia Lena", "Ander"], ["Nadine", "Plaizier"], ["Jennifer", "Carter"], ["Lei", "Chen"], ["Eugenia", "Lopez Ascarte"], ["Edita", "Liachoviciute"], ["Noa", "Horovitz"], ["Ralitza", "Doneva"], ["Gabriele", "Masiliunaite"], ["Kim", "De Weille"], ["Lorena", "Brain"], ["Ines", "Buermeyer"], ["Geraldine", "Dondit"], ["Caroline", "Toyre"], ["Henriette", "Van Aalderen"], ["Manon", "Savelkouls"], ["Eva", "Erbova"], ["Barbara", "De Wilde"], ["Roberta", "Zandarin"], ["Virginie", "Massart"], ["Laura", "Sham"], ["Lenka", "Nemeckova"], ["Sharon", "Russell"], ["Alessaundra", "De Perini"], ["Karen", "Gebauer"], ["Sonya", "Jeyaseelan"], ["Julie", "Steven"], ["Alexandra", "Schneider"], ["Sara", "Ventura"], ["Maia", "Stankova"], ["Alicia", "Ortuno"], ["Varalee", "Sureephong"], ["Svetlana", "Soldatenkova"], ["Gisela", "Riera Roura"], ["Francesca", "LaO"], ["Patricia", "Segala"], ["Ursula", "Svetlik"], ["Cristina", "Portas Soy"], ["Sally Ann", "Cuttler"], ["Natalie", "Frawley"], ["Simona", "Porchia"], ["Vanessa", "Rooks"], ["Annette", "Zweck"], ["Carolina", "Molins"], ["Yael", "Beckman"], ["Niki", "Tippins"], ["Sofia", "Finer"], ["Maria Jose", "Likibi"], ["Milena", "Kornil"], ["Divina", "Escala"], ["Julia", "Abe"], ["Motoe", "Uchida"], ["An Qi", "Ge"], ["Alessia", "Lombardi"], ["Natalia", "Gonzalez Quintero"], ["Pingkan", "Lumenta"], ["Dawn", "Buth"], ["Katrin", "Ittensohn"], ["Ekaterina", "Nossik"], ["Giana", "Gutierrez"], ["Mashona", "Washington"], ["Sabina", "Radevicova"], ["Chamsi", "Filali"], ["Gabriela", "Chmelinova"], ["Ryoko", "Takemura"], ["Antonella", "Pozzi"], ["Lindsay", "Davenport"], ["Jodie", "Lynn"], ["Shizu", "Katsumi"], ["Sylwia", "Rynarzewska"], ["Nina", "Nittinger"], ["Karin", "Asberg"], ["Magda", "Leal"], ["Madoka", "Kuki"], ["Katja", "Pohlmann"], ["Irina", "Komarova"], ["Andrea", "Montoya"], ["Nadia", "Bibarss"], ["Kendra", "Howard"], ["Blanka", "Kumbarova"], ["Christina", "Ferreira"], ["Peggy", "Rouquier"], ["Paola", "Suarez"], ["Suvikukka", "Forsius"], ["Adriana", "Gersi"], ["Nicole", "Funk"], ["Malgorzata", "Jankowska"], ["Shinobu", "Asagoe"], ["Valentina", "Murgo"], ["Karen", "Nugent"], ["Natalia", "Garcia"], ["Karoline", "Borgersen"], ["Anita", "Buggins"], ["Heike", "Rusch"], ["Helena", "Fremuthova"], ["Margaret", "Schnakenburg"], ["Emmanuelle", "Gagliardi"], ["Audrey", "Pierrich"], ["Sandra", "Kellemberger"], ["Helen", "Parsons"], ["Anna", "Smashnova"], ["Andrea", "Glass"], ["Romana", "Tedjakusuma"], ["Stephanie", "De Ville"], ["Anke", "Roos"], ["Amanda", "Dundas"], ["Lizzy", "Jelfs"], ["Khady NDeye", "Diop"], ["Renata", "Kolbovic"], ["Arati", "Ponnappa"], ["Yuan", "Wen"], ["Valeria", "Cecchetti"], ["Manuela", "Schwerzmann"], ["Katalin", "Miskolczi"], ["Carmina", "Giraldo"], ["Pavlina", "Bartunkova"], ["Jane", "White"], ["Soon Hye", "Lee"], ["Tatiana", "Panova"], ["Virginia", "Gollut"], ["Thea", "Ivanisevic"], ["Emanuela", "Sangiorgi"], ["Julie", "Mansour"], ["Emmanuelle", "Zowczak"], ["Maren", "Muller"], ["Lorna", "Woodroffe"], ["Diana", "Foldenyi"], ["Jennifer", "Duncan"], ["Liezel", "Huber"], ["Monita", "Horn"], ["Elena", "Tatarkova"], ["Sabine", "Resch"], ["Jarita", "Selenius"], ["Alica", "Herda"], ["Mariam", "Ramon Climent"], ["Mihaela", "Vulpe"], ["Helen", "Laupa"], ["Sarka", "Snorova"], ["Gabija", "Talberga"], ["Nicole", "Wist"], ["Martina", "Schaller"], ["Nina", "Miu"], ["Annie", "Trepanier"], ["Sandra", "Angerer"], ["Lucie", "Steflova"], ["Saori", "Honda"], ["Satoko", "Kurioka"], ["Tonka", "Doric"], ["Rieka", "Ito"], ["Nozipho Gloria", "Sithole"], ["Melitta", "Miklosi"], ["Lauren", "Nikolaus Zink"], ["Vanessa", "Castellano"], ["Ana Carola", "Guzman"], ["Zuzana", "Nemsakova"], ["Julie", "Hanger"], ["Ximena", "Rodriguez"], ["Ingy", "El Taweel"], ["Ella", "Ionescu"], ["Manisha", "Malhotra"], ["Nicoletta", "Pericleous"], ["Maria Ines", "Araiz"], ["Tina Helen", "Soderstrom"], ["Jana", "Kandarr"], ["Vicky", "Barker"], ["Michaela", "Hasanova"], ["Noriko", "Miyazaki"], ["Patricia", "Camina"], ["Yu Chun", "Huang"], ["Michaila", "Hasanova"], ["Liora", "Levin"], ["Gaye", "Mcmanus"], ["Mina", "Abdul Rahman"], ["Li", "Li"], ["Lonny", "Young"], ["Magdalena", "Kucerova"], ["Stephanie", "Testard"], ["Sandrine", "Chevy"], ["Maria Laura", "Bertolo"], ["Bridget", "Merrick"], ["Guadalupe", "Bugallo"], ["Vanessa", "Menga"], ["Manuela", "Costa"], ["Patty", "Van Acker"], ["Anna", "Bleszynski"], ["Janet", "Lee"], ["Deepa", "Engade"], ["Masako", "Naito"], ["Kerstin", "Marent"], ["Eun Jeong", "Lee"], ["Helina", "Lill"], ["Jana", "Dorodnova"], ["Rachel", "Dive"], ["Maria Teresa", "Guell"], ["Natalie", "Dittmann"], ["Pamela", "Zingman"], ["Mariela", "Cornejo"], ["Andrea", "Hoch"], ["Marwa", "El Wany"], ["Rachael", "Mcardle"], ["Carlotta", "Stasi"], ["Eva", "Krejcova"], ["Elena", "Krutko"], ["Karolina", "Petrikova"], ["Michaela", "Lincoln"], ["Marissa", "Lincoln"], ["Cecilia", "Hincapie"], ["Evelyn", "Fauth"], ["Cecile", "De Winne"], ["Anouschka", "Boralessa"], ["Stephanie", "Chi"], ["Nirupama", "Sanjeev"], ["Aminat", "Balogun"], ["Ishraq", "Salman"], ["Cintia", "Tortorella"], ["Alex", "Napier"], ["Daria", "Turpak"], ["Madalina", "Niculaita"], ["Tumeka", "Harris"], ["Victoria", "Hunt"], ["Elise", "Crozier"], ["Carine", "Maisonnave"], ["Marina", "Novelli"], ["Yumi", "Yokoi"], ["Seung Yeon", "Kang"], ["Vanessa", "Brilleman"], ["Wei", "Qie"], ["Sybil", "Parker"], ["Lotty", "Seelen"], ["Julia", "Carballal Fernandez"], ["Sara", "Pritchard"], ["Miriam", "Schnitzer"], ["Susana", "De Andres Therond"], ["Lisa", "Camenzuli"], ["Caroline", "Hall"], ["Alina", "Jidkova"], ["Ana Paula", "Zannoni"], ["Margarita", "Medina"], ["Anne", "Miller"], ["Jennifer", "Hall"], ["Delphine", "Costantini Benoit"], ["Daniela", "Cocos"], ["Anna", "Linkova"], ["Monika", "Mastalirova"], ["Lenka", "Cenkova"], ["Maria Francesca", "Bentivoglio"], ["Ruta", "Deduraite"], ["Kum Ok", "Im"], ["Mai", "Tanii"], ["Cindy", "Dock"], ["Nadine", "Van De Walle"], ["Lee", "Chan"], ["Marina", "Escobar Martinez"], ["Aarthi", "Venkatesan"], ["Nino", "Louarsabishvili"], ["Olga", "Ivanova"], ["Amira", "Segaoula"], ["Ana Elizabeth", "Jimenez Garcia"], ["Candida", "Reid"], ["Frances", "Hearn"], ["Ditte", "Hougaard"], ["Sophie", "Georges"], ["Charlotta", "Aronsson"], ["Anthonia", "Onwochie"], ["Cristina", "Moros"], ["Norma", "Aules"], ["Petra", "Gaspar"], ["Sai Jayalakshmy", "Jayaram"], ["Monica", "Bonilla"], ["Barbara", "Urbanska"], ["Amaranta", "Spinelli"], ["Diana", "Sutedja"], ["Kandiss", "Creighton"], ["Melanie", "Schnell"], ["Dally", "Randriantefy"], ["Silvia", "Schiavetti"], ["Clelia", "Anfuso"], ["Raffaella", "Valentino"], ["Debby", "Haak"], ["Misae", "Sakai"], ["Courtenay", "Chapman"], ["Courtenay", "Middleton"], ["Zoe", "Mellis"], ["Ana Paula", "Mores"], ["Arthi", "Venkatesan"], ["Jennifer", "Aubernon"], ["Ludmila", "Richterova"], ["Audrey", "Sidot"], ["Siobhan", "Munro"], ["Mehry", "Shawki"], ["Mirela", "Vladulescu"], ["Camila", "Andolfato"], ["Tamara", "Rollenberg"], ["Maria", "Geznenge"], ["Tanja", "Karsten"], ["Maria", "Gusheva"], ["Anat", "Ashtamkar"], ["Ludivine", "Laville"], ["Karla", "Porter"], ["Jennifer", "Ligator"], ["Oksana", "Enik"], ["Kyoko", "Kojima"], ["Ivana", "Beli"], ["Celeste", "Frey"], ["Monika", "Kasianiuk"], ["Timea", "Ferenczy"], ["Kirsten", "Schenk"], ["Susanna", "Bostanjyan"], ["Yolanda", "Civit Canals"], ["Kristina", "Brandi"], ["Karine", "Gallet"], ["Ivana", "Belancic"], ["Radka", "Pelikanova"], ["Adriana", "Mingireanu"], ["Juliana", "Piumatti"], ["Jenny", "Rolf"], ["Laura", "Austin"], ["Rosa Maria", "Perez"], ["Hsueh Li", "Hsu"], ["Stephanie", "Nickitas"], ["Linda", "Smaira"], ["Noelia", "Serra"], ["Sasha", "Mattu"], ["Yan", "Chen"], ["Bonnie", "Bleecker"], ["Sasha", "Hanna"], ["Ciska", "Kramer"], ["Keiko", "Tameishi"], ["Teodora", "Nedeva"], ["Georgia", "Fernandes"], ["Yi Ching", "Wu"], ["Zuzana", "Hejdova"], ["Alina", "Wyganowska"], ["Jiang", "Yu"], ["Chin Bee", "Khoo"], ["Freekje", "Maas"], ["Kelly", "Callahan"], ["Kelly", "Brown"], ["Katia", "Altilia"], ["Rosanna", "Valerio"], ["Laura", "Garcia Pacual"], ["Milena", "Nekvapilova"], ["Cristina", "Portas"], ["Chie", "Nagano"], ["Yamile", "Fors Guerra"], ["Monica", "Rebolledo"], ["Shalini", "Perera"], ["Sara", "Haider"], ["Patrycja", "Gajdzik"], ["Manisha", "Patel"], ["Anca", "Barna"], ["Karolina", "Bakalarova"], ["Carmen", "Madden"], ["Tomomi", "Sumi"], ["Kristen", "Sanderson"], ["Jumoke", "Ajulo"], ["Carlijn", "Buis"], ["Janina", "Tajkovsky"], ["Katrin", "Meiss"], ["Lenka", "Humenikova"], ["Surabhi", "Singh"], ["Francois", "Ramos"], ["Tamarine", "Tanasugarn"], ["Polina", "Galanina"], ["Melissa", "Avants"], ["Anna", "Mogilnicka"], ["Dominika", "Gerwin"], ["Coral", "Orpi"], ["Tara", "Snyder"], ["Ruth", "Diaz"], ["Katie", "Mcglennen"], ["Rosa Maria", "Andres Rodriguez"], ["Nathalie", "Callen"], ["Metasebeya", "Temesgen"], ["Anna Sabrina", "Ferrari"], ["Kumi", "Hagino"], ["Nezha", "Saber"], ["Tanja", "Buchheim"], ["Irene", "Macia"], ["Maria Paola", "Zavagli"], ["Cintia", "Seaton"], ["Haruka", "Inoue"], ["Victoria", "Courmes Benedetti"], ["Yvette", "Basting"], ["Angelika", "Roesch"], ["Dorota", "Glowacka"], ["Hadas", "Ronen"], ["Nadine", "Raidt"], ["Sachiyo", "Hirayama"], ["Temesgen", "Metasebeya"], ["Andressa", "Bornschein"], ["Brandi", "Freudenberg"], ["Katya", "Zenklusen"], ["Alena", "Havrlikova"], ["Michelle", "Smith"], ["Ruth Tekle", "Andemariam"], ["Tjasa", "Jezernik"], ["Chern Yi", "Chiew"], ["Mariana", "Lopez Palacios"], ["Raluca", "Gheorghe"], ["Maria Eliana", "Castro"], ["Antoaneta", "Pandjerova"], ["Inga", "Bertschmann"], ["Virginia", "Tournebise"], ["Amira", "El Borolossy"], ["Claudia", "Reimering"], ["Valentina", "Solari"], ["Kym", "Laver"], ["Lindsay", "Lee Waters"], ["Graciela", "Velez"], ["Tathiana", "Garbin"], ["Athina", "Briegel"], ["Lana", "Scardigno"], ["Lobena", "Cherif"], ["Federica", "Maldini"], ["Andrea", "Piski"], ["Adriana", "Thaggard"], ["Petra", "Spaar"], ["Selima", "Sfar"], ["Cristina", "Lopez Santos"], ["Fernanda", "Tsucamoto"], ["Eleonora", "Dickinger"], ["Callie", "Creighton"], ["Francesca", "Lubiani"], ["Laura Mirabela", "Teodorescu"], ["Mirabela", "Teodorescu"], ["Nicole", "Kaiser"], ["Samira", "Takourabet"], ["Georgina", "Palombo"], ["Frida", "Flores"], ["Sylvia", "Plischke"], ["Paula", "Racedo"], ["Nicola", "Kaiwai"], ["Assmae", "Jabri"], ["Barbara", "Fuzesi"], ["Joana", "Manta"], ["Megumi", "Katakura"], ["Yvonne", "Flynn"], ["Mariana", "Moreno"], ["Barbara", "Lado"], ["Olga", "Ivlieva"], ["Zuzana", "Lesenarova"], ["Dragana", "Zaric"], ["Mira", "Veghova"], ["Massoumeh", "Emami"], ["Eva", "Teruel Jover"], ["Maria Elena", "Jimenez"], ["Iva", "Majoli"], ["Jodi", "Richardson"], ["Mariana", "Faustinelli"], ["Li", "Chen"], ["Gabriela", "Lancman"], ["Giselle", "Swart"], ["Jenny Ann", "Fetch"], ["Elizabeth", "Schmidt"], ["Veronika", "Safarova"], ["Sasithorn", "Tangthienkul"], ["Tari Ann", "Toro"], ["Alice", "Rangsithienchai"], ["Milena", "Stanoycheva"], ["Nicole", "Oomens"], ["Victoria", "Bakhtadze"], ["Hila", "Rosen"], ["Sanaa", "Ziadi"], ["Sirilux", "Mingmolee"], ["Noelia", "Serra Djamdjean"], ["Trudi", "Musgrave"], ["Sandrine", "Bouilleau"], ["Hiroko", "Komori"], ["Brigitte", "Loogen"], ["Maria Soledad", "Coppari"], ["Leyla", "Ogan"], ["Ajda", "Klevisar"], ["Vanessa", "Kendall"], ["Megan", "Miller"], ["Elizabeth", "Fletcher"], ["Saida", "Hared"], ["Emi", "Sakurai"], ["Carolina", "Melicoff"], ["Dominique", "Glinzler"], ["Paola", "Martinez"], ["Radka", "Surova"], ["Lilly", "Raffa"], ["Nicola", "Payne"], ["Miranda", "Ball"], ["Julie", "Huang"], ["Hsiao Chuan", "Fan"], ["Esther", "Knox"], ["Rushmi", "Chakravarthi"], ["Karina", "Miguenz"], ["Jorgelina", "Torti"], ["Rute", "Almeida"], ["Ji Young", "Yoo"], ["Yu Min", "Fan Chiang"], ["Mariela", "Brunello"], ["Paola", "Almeida"], ["Martina", "Nedelkova"], ["Martina", "Somoano"], ["Andrea", "Hardegger"], ["Shivani", "Bhatt"], ["Nadia", "Johnston"], ["Akiko", "Kinebuchi"], ["Paula", "Hermida Velo"], ["Cecilia", "Simon"], ["Lenka", "Zacharova"], ["Camilla", "Kremer"], ["Kaori", "Kuki"], ["Katerina", "Hladka"], ["Linda", "Sentis"], ["Lilian", "Ighodaro"], ["Miroslava", "Veghova"], ["Monica", "Toledo"], ["Anastasia", "Pozdnyakova"], ["Maria", "Sanchez Lorenzo"], ["Lucie", "Dvorakova"], ["Eva", "Slaninkova"], ["Maria Veronica", "Widyadharma"], ["Sadiya", "Pathan"], ["Mirva", "Maenpaa"], ["Gaelle", "Adda"], ["Yu Mei", "Chen"], ["Stefanie", "Haidner"], ["Veronica", "Stele"], ["Gabriela", "Netikova"], ["Sandra", "Deamelio"], ["Anne Sophie", "Bittighoffer"], ["Birgit", "Riederer"], ["Tara Deen", "Moore"], ["Alison", "Nash"], ["Pimpisamai", "Kansuthi"], ["Gabriela", "Kucerova"], ["Charlotte", "Aagaard"], ["Kara", "Warkentin"], ["Anna Maria", "Doan"], ["Sidonia", "Wolfinger"], ["Veronica", "Goude"], ["Marta", "Peman"], ["Patricia", "Mongauzi"], ["Gabriella", "Somers"], ["Aleksandra", "Olsza"], ["Vanessa", "Caddick"], ["Karin", "Miller"], ["Nena", "Vukasovic"], ["Ana", "Friganovic"], ["Ivona", "Mihailova"], ["Irena", "Mihailova"], ["Fiona", "Barrett"], ["Diana", "Escalante"], ["Imen", "Ben Larbi"], ["Murjana", "Boskova"], ["Magali", "Partyka"], ["Leloba", "Seitshiro"], ["Jung Hua", "Kuo"], ["Sandra", "Mantler"], ["Pei Jung", "Wu"], ["Gaelle", "Widmer"], ["Adrienn", "Hegedus"], ["Karin", "Palme"], ["Maria Eugenia", "Rojas"], ["Sarah", "Stanley"], ["Tanja", "Magoc"], ["Shareen Rena", "Lai"], ["Kyra", "Nagy"], ["Hrafuhildur", "Hannesdotter"], ["Julia", "Adlbrecht"], ["You Shu", "Wu"], ["Oshri", "Shashua"], ["Eugenia", "Silantieva"], ["Josien", "Boverhof"], ["Lilit", "Teloumian"], ["Isabel", "Horkmans"], ["Inga", "Albers"], ["Vanessa", "Basora"], ["Laura", "Fodorean"], ["Daniela", "Forti"], ["Susana", "Carreras"], ["Lucia", "Curielli"], ["Lucy", "Altman"], ["Jana", "Staskova"], ["Lui Li", "Shen"], ["Lorena", "Martinez"], ["Upeka", "Wijeratne"], ["Lydia", "Perkins"], ["Silvija", "Talaja"], ["Marie Ange", "Koami"], ["Mercedes", "Del Valle Prieto"], ["Amanda", "Keen"], ["Aurea", "Castella"], ["Irina", "Kornienko"], ["Angela", "Geib"], ["Petra", "Mandula"], ["Meilen", "Tu"], ["Yin", "Chen"], ["Louise", "Latimer"], ["Michelle", "Faucher"], ["Amanda", "Augustus"], ["Alexandra", "Guzman"], ["Zuzana", "Rakicka"], ["Yenny", "Kumalawati"], ["Biljana", "Pawlowa Dimitrova"], ["Maria", "Pavlidou"], ["Nadia", "Chvanova"], ["Sylvia", "Lokollo"], ["Lizeth", "Asuaje"], ["Daria", "Ovsyannikova"], ["Petra", "Plackova"], ["Yumi", "Kawakita"], ["Olga", "Glouschenko"], ["Maria Rene", "Espinosa"], ["Joanna", "Gozdek"], ["Corina", "Morariu"], ["Laura", "Bernal"], ["Geraldine", "Aizenberg"], ["Claudia", "Oliveira"], ["Clara", "Udofa"], ["Annabel", "Ellwood"], ["Ingrid", "Meeus"], ["Jolanda", "Mens"], ["Andrea", "Nathan"], ["Jenny", "Falcon Manrique"], ["Mi Ra", "Jeon"], ["Tu", "Dong"], ["Anne", "Stueckle"], ["Karina", "Karner"], ["Maria Florica", "Pandele"], ["Michaela", "Lazerova"], ["Jana", "Bourova"], ["Isabella", "Kling"], ["Rita", "Kuti Kis"], ["Valentine", "Vernaz"], ["Hiromi", "Okazaki"], ["Celeste", "Contin"], ["Isil", "Cayirli"], ["Cristina", "Bengzon"], ["Futaba", "Kubota"], ["Shalini", "Thakar"], ["Agata", "Odachowska"], ["Maiken", "Pape"], ["Adeyinka Elisabeth", "Thompson"], ["Magali", "Lamarre"], ["Claudia", "Perolini"], ["Natyanee", "Tanawsri"], ["Kylie", "Moulds"], ["Dorothee", "Kurz"], ["Luisa", "Fantola"], ["Nina", "Wenger"], ["Joanna", "Phang"], ["Stephanie", "Koderisch"], ["Habiba", "Ifrakh"], ["Iva", "Berankova"], ["Tagifano", "Soonalole"], ["Alexandra", "Kleffel"], ["Akiko", "Gunji"], ["Claire", "Curran"], ["Antonina", "Grib"], ["Izaskun", "Bernal"], ["Seiko", "Okamoto"], ["Natacha", "Randriantefy"], ["Lauren", "Rose"], ["Vivian", "Acra"], ["Marissa", "Gildemeister"], ["Anca", "Vasiloaica"], ["Alexandra", "Charles"], ["Adriana", "Lopez"], ["Cindy", "Watson"], ["Zuzana", "Demeterova"], ["Zuzana", "Lindner"], ["Katarina", "Lindner"], ["Ludivine", "Nicolas"], ["Caroline", "Marret"], ["Segolene", "Berger"], ["Amelie", "Cocheteux"], ["Agustina", "Saenz"], ["Tina", "Plivelitsch"], ["Aoife", "ONeill"], ["Kim", "Kelly"], ["Cassia", "Sigle"], ["Tsarina", "Domacasse"], ["Fiana", "Meineck"], ["Saskia", "Meineck"], ["Miroslava", "Vavrinec"], ["Aurelie", "Freysz"], ["Giulia", "De Muro"], ["Na", "Fan"], ["Beatriz", "Aguilar"], ["Melinda", "Glenister"], ["Jasmine", "Choudhury"], ["Natalia", "Nikitina"], ["Lilia", "Osterloh"], ["Siobhan", "Drake Brockman"], ["Bojana", "Borovnica"], ["Geraldine", "Figueiredo"], ["Amelie", "Castera"], ["Anne Laurence", "Bilenne"], ["Gisele", "Ferreira"], ["Spela", "Kobetic"], ["Hana", "Sromova"], ["Reiko", "Ino"], ["Leonie", "Odriscoll"], ["Galina", "Dimitrova"], ["Katarina", "Markovski"], ["Guadalupe", "Hernandez"], ["Bianca", "Cremer"], ["Camilla", "Hsu"], ["Annica", "Lindstedt"], ["Hye Young", "Bae"], ["Yi Dan", "Liu"], ["Brooke", "Siebel"], ["Grace", "Sorbello"], ["Petrona", "Bantay"], ["Lindsay", "Bruce"], ["Qi", "Tuo"], ["Belen", "Berbel Soriano"], ["Natalia", "Pellegrini"], ["Giulia", "Casoni"], ["Stephanie", "Sheppard"], ["Monica", "Scartoni"], ["Isabelle", "Taesch"], ["Anja", "Tragardh"], ["Luciana", "Ullmann"], ["Eva", "Sestakova"], ["Saori", "Obata"], ["Kingkaew", "Niroj"], ["Olga", "Timofeeva"], ["Tamara", "Aranda Nunez"], ["Milena", "Gadjanova"], ["Megan", "Dorney"], ["Irina", "Zhdanova"], ["Nicole", "Melch"], ["Alice", "Canepa"], ["Eva", "Belbl"], ["Michelle", "Summerside"], ["Vladimira", "Uhlirova"], ["Chantal", "Reuter"], ["Hye Jeong", "Chang"], ["Laura", "Frias"], ["Sara", "Bonomi"], ["Sandra", "Kleinova"], ["Mirja", "Wagner"], ["Orit", "Strauss"], ["Laura", "Rossi"], ["Anna", "Kazakevitch"], ["Monica", "Baez"], ["Jana", "Ondrouchova"], ["Ewa", "Grusiecka"], ["Sarah", "Scaringe"], ["Yoko", "Torii"], ["Ana Paola", "Gonzalez Diaz"], ["Magdelena", "Zdenovcova"], ["Kirsty", "Blumberg"], ["Lynette", "Tay"], ["Anne", "Plessinger"], ["Adriana", "Barna"], ["Magdalena", "Rejniak"], ["Typhaine", "Cottenier"], ["Michelle", "Buess"], ["Anna", "White"], ["Hanna Katri", "Aalto"], ["Ambreen", "Rana"], ["Jana", "Benova"], ["Katia", "Roubanova"], ["Raquel", "Ortega Herran"], ["Tamara", "Pavlov"], ["Kristina", "Pojatina"], ["Eva", "Januskova"], ["Andreea", "Petrisor"], ["Nathalie", "Jarlan"], ["Renee", "Reid"], ["Izumi", "Sugimoto"], ["Karolina", "Glowacka"], ["Moriyo", "Adachi"], ["Marina", "Petrovic"], ["Karina", "Rinaldi"], ["Anna", "Persson"], ["Desislava", "Topalova"], ["Sofia", "Managadze"], ["Eveline", "Wouters"], ["Sofia", "Quaglia"], ["Marissa", "Catlin"], ["Laura", "Gotarredona"], ["Kyoko", "Iida"], ["Romina", "Ottoboni"], ["Melinda", "Petkes"], ["Laura", "Aguero"], ["Amanda", "Basica"], ["Stefania", "Stefansdottir"], ["Linda", "Mattsson"], ["Maria Andrea", "Quintero"], ["Hong Hui", "Liu"], ["Biljana", "Joketovic"], ["Anita", "Kurimay"], ["Veneta", "Karatchomakova"], ["Monika", "Pimentel"], ["Surina", "De Beer"], ["Tokiyo", "Ikeda"], ["Ana Maria", "Moura"], ["Yasuko", "Nishimata"], ["Tzu Ting", "Weng"], ["Tatjana", "Jecmenica"], ["Selin", "Nassi Tekikbas"], ["Meirav", "Duek"], ["Lindsay", "Alpert"], ["Melania", "Mirambell"], ["Matilda", "David"], ["Si Yiah", "Ling"], ["Mary Carlisle", "White"], ["Natasha", "Papadopoulou"], ["Marijana", "Kovacevic"], ["Dalia", "El Sheikh"], ["Maria", "Lindberg"], ["Lilian", "Silva"], ["Melanie", "Schneider"], ["Katherine", "Tessier"], ["Kiriaki", "Karaproimou"], ["Carolina", "Kanacri"], ["Shelley", "Bryce"], ["Marina", "Lazarovska"], ["Ivona", "Grujic"], ["Mamotebang", "Molise"], ["Amy", "Jensen"], ["Hisayo", "Unno"], ["Emeka", "Mayes"], ["Carolina", "Mayorga"], ["Monica", "Massarella"], ["Adriana", "Rodriguez"], ["Edurne", "Tabernero"], ["Sabine", "Oristil"], ["Tatiana", "Babina"], ["Agustine", "Limanto"], ["Ekaterina", "Kavoun"], ["Kaoutar", "Yazghi"], ["Nadeja", "Karpol"], ["Patricia", "Wartusch"], ["Traci", "Green"], ["Jessica", "Steck"], ["Laurence", "Combes"], ["Veronika", "Jakimicova"], ["Jennifer", "Russell"], ["Sun Young", "Kim"], ["Nuria", "Martinez"], ["Jana", "Sokolenko"], ["Maria", "Persson"], ["Keiko", "Nagai"], ["Irina", "Kakoulia"], ["Veronica", "Castro"], ["Maria Shirley", "Valler"], ["Martini", "Pospisilova"], ["Miriam", "Dagostini"], ["Darina", "Mecova"], ["Zana", "Zlebnik"], ["Ann", "Simons"], ["Ding", "Ding"], ["Silvina", "Saulo"], ["Tamami", "Kamiyama"], ["Jenny", "Kuhlin"], ["Phorhathai", "Suksamran"], ["Caroline", "Leens"], ["Marina", "Raic"], ["Maria", "Rasmussen"], ["Laura", "Smith"], ["Sonja", "Foks"], ["Lechia", "Trewick"], ["Susan", "Huang"], ["Irina", "Nossenko"], ["Nina", "Schwarz"], ["Julieta", "Calabrese"], ["So Yeon", "Im"], ["Maria Julieta", "Lillo"], ["Nami", "Urabe"], ["Sara", "Taweel"], ["Carla", "Jimenez"], ["Annica", "Cooper"], ["Virginia", "Sadi"], ["Adriana", "Garuolis"], ["Isabel", "Santos"], ["Priyanka", "Contractor"], ["Nikoleta", "Pritargova"], ["Padma Preetham", "Mahalingam"], ["Kyung Joo", "Won"], ["Charlotte", "Feasby"], ["Ya Chi", "Yang"], ["Wei", "Ni"], ["Shera", "Wiegler"], ["Carolina", "Gago Fuentes"], ["Delphine", "Baudin"], ["Electra", "Henry"], ["Denisa", "Sobotkova"], ["Alina", "Stroiu"], ["Sally", "Bogaert Morel"], ["Barbora", "Zahnova"], ["Ana Catarina", "Nogueira"], ["Renata", "Brito"], ["Maria Fernanda", "Carrillo"], ["Gizella", "Turbok"], ["Isabel", "Dominguez Munaiz"], ["Kibibi", "Moseley"], ["Claire", "Lyte"], ["Dominika", "Olszewska"], ["Marine", "Nizri Spiegel"], ["Jody", "Anglin"], ["Mi Ok", "Kim"], ["Chia Yi", "Wu"], ["Kristen", "Radford"], ["Ana", "Sans"], ["Romina", "Labrador"], ["Kristina", "Irwan"], ["Nuria", "Montero"], ["Renata", "Martins"], ["Evi", "Murtiningsih"], ["Kadi", "Hilpus"], ["Archana", "Venkataraman"], ["Lesley", "Kramer"], ["Yun Ning", "Fu"], ["Nosa", "Esorae"], ["Jana", "Macurova"], ["Marieke", "Gunawan"], ["Sylvie", "Sallaberry"], ["Reina", "Oda"], ["Phyllis", "Wilunda"], ["Maja", "Mise"], ["Sona", "Saringulyan"], ["Jennifer", "De Spain"], ["Ariadne", "Katsouli"], ["Eve", "Langley"], ["Zsofia", "Golopencza"], ["Catherine", "Valantin"], ["Carolina", "Sanabria"], ["Anne Laure", "Le Guennec"], ["Helene", "Louvet"], ["Rafaela", "Boero"], ["Sarah", "Gillespie Jones"], ["Anneliese", "Rose"], ["Fotini", "Kapetanaki"], ["Stephanie", "Lobner"], ["Marina", "Andreoni"], ["Naoko", "Ishikawa"], ["Paola", "Gonzales"], ["Alida", "Gallovits"], ["Yang Jin", "Chung"], ["Juthika", "Chokshi"], ["Zhi Rong", "Liu"], ["Danielle", "Lund"], ["Ingrid", "Siegrist"], ["Monica", "Saffie"], ["Alessandra", "Dellaversana"], ["Carole", "Soubis"], ["Deborah", "Gaviria"], ["Marilia", "Fritelli"], ["Kim", "Niggemeyer"], ["Pamela", "Gonzalez"], ["Hanna", "Puustinen"], ["Brankica", "Stankovic"], ["Syna", "Schreiber"], ["Magdalena", "Grzybowska"], ["Francesca", "Maggi"], ["Patricia", "Marci"], ["Denise", "Doring"], ["Sachie", "Umehara"], ["Ya Fang", "Tsai"], ["Eszter", "Molnar"], ["April", "Gabler"], ["Paula", "Cantarutti"], ["Reetu", "Sethi"], ["Eun Kyung", "Kim"], ["Natalie", "Cahana"], ["Luciana", "Masante"], ["Jahnavi", "Parekh"], ["Ninani", "Coyne"], ["Magdalena", "Taltavull Fernandez"], ["Ilda", "Saulic"], ["Andrea", "Schwarz"], ["Chotika", "Wannachinda"], ["Nanely", "Vallejo"], ["Teryn", "Ashley"], ["Kalina", "Diankova"], ["Onalenna", "Leepile"], ["Ayami", "Takase"], ["Patty", "Schnyder"], ["Henrieta", "Nagyova"], ["Emmanuelle", "Curutchet"], ["Eugenia", "Kulikovskaya"], ["Audrey", "Wilmart"], ["Briana", "Harris"], ["Manuela", "Borzi"], ["Chiho", "Kobayashi"], ["Megan", "Russell"], ["Asja", "Tankic"], ["Szandra", "Fuzesi"], ["Beauty", "Macleod"], ["Jennifer", "Sans"], ["Steffi", "Keim"], ["Aneta", "Soukup"], ["Maria Alejandra", "Claure"], ["Brooke", "Skeen"], ["Olga", "Teplynska"], ["Berenice", "Alvarez"], ["Irina", "Anikina"], ["Julie", "Ditty"], ["Monique", "Le Sueur"], ["Monica", "Poveda"], ["Alena", "Paulenkova"], ["Rebecca", "Spurr"], ["Fabiola", "Zuluaga"], ["Jheni", "Osman"], ["Tatiana", "Poutchek"], ["Yessica", "Garcia"], ["Tabitha", "Blackburn"], ["Vinitha", "Dikshit"], ["Monika", "Vinterova"], ["Irene", "Fernandez Cabe"], ["Joana", "Cortez"], ["Sabina", "Da Ponte"], ["Oksana", "Melnichenko"], ["Etsuko", "Yamada"], ["Stephanie", "Sajbert"], ["Morya", "Peres"], ["Cindy", "Schuurmans"], ["Christa", "Grey"], ["Caroline", "Christian"], ["Adriana", "Radic"], ["Monica", "Amador Pons"], ["Barbara", "Keller"], ["Samantha", "Reeves"], ["Spela", "Rajh"], ["Laurence", "Pont"], ["Daria", "Soukirno"], ["Elisabeth", "Unge"], ["Lenka", "Novotna"], ["Irma", "Vizcaino"], ["Nannette", "Duxin"], ["Alejandra", "Hernandez Quiroz"], ["Kelly", "Toa"], ["Karen", "Black"], ["Virginia", "Colmenero"], ["Axelle", "Alquier"], ["Amy", "Newman"], ["Amanda", "Peros"], ["Barbara", "Schwartz"], ["Laura", "Andrei"], ["Ursula", "Albizuri"], ["Stephanie", "Hazlett"], ["Ana", "Knezovic"], ["Celena", "Mccoury"], ["Silvia", "Sosnarova"], ["Lilia", "Biktyakova"], ["Amelie", "Philippe"], ["Noswazi", "Tshabalala"], ["Kelly", "Liggan"], ["Maiko", "Inoue"], ["Katja", "Kovac"], ["Denisa", "Chladkova"], ["Holly", "Parkinson"], ["Liliana", "Avola"], ["Alexandra", "Ramirez"], ["Olena", "Kuzmyk"], ["Dee Dee", "Herring"], ["Liza", "Andriyani"], ["Natalie", "Fracassi"], ["Colleen", "Cheng"], ["Alena", "Jecminkova"], ["Jie", "Xu"], ["Asri Nursanti", "Ebo"], ["Lucy", "Mcdonald"], ["Cara", "Black"], ["Eva", "Doman"], ["Esther", "Brunn"], ["Nicola", "Woodhouse"], ["Lyndsay", "Reilly"], ["Cristina", "Correia"], ["Nathalie", "Dechy"], ["Lisa", "Sendelbach"], ["Maria Eugenia", "Fernandez"], ["Francesca", "Volonte"], ["Sheau Shan", "Liew"], ["Ludmilla", "Varmuza"], ["Kathryn", "Sell"], ["Keiko", "Taguchi"], ["Ana", "Skafar"], ["Rosa Maria", "Morazan"], ["Elena", "Villatoro"], ["Kristin", "Koenig"], ["Evgenia", "Tarasova"], ["Chiaki", "Nakajima"], ["Magui", "Serna"], ["Evelyn", "Moser"], ["Justyna", "Richter"], ["Vanessa", "Manya Arranz"], ["Silvia", "Bayon"], ["Seden", "Ozlu"], ["Saskia", "Simon"], ["Julie", "White"], ["Yu Jin", "Wang"], ["Sophie", "Turine"], ["Mandy", "Carvalho"], ["Catherine", "Campbell"], ["Carolina", "Lillo Carrazon"], ["Johanna", "Isokangas"], ["Paola", "Palencia"], ["Pilar", "Andres"], ["Silvana", "Barna"], ["Kim", "Gysbertse"], ["Julia", "Kryoukova"], ["Maria", "Wolfbrandt"], ["Raffaella", "Bindi"], ["Laura", "Tuzzi"], ["Paula", "Garcia"], ["Olena", "Antypina"], ["Maria De Los Angeles", "Montoya"], ["Barbara", "Privrel"], ["Christine", "Vogt"], ["Stanka", "Ilkova"], ["Irene", "Stavridou"], ["Roberta", "Lamagni"], ["Amy", "Wachenheim"], ["Amanda", "Grahame"], ["Janisse", "Mota"], ["Ana Maria", "Franco Lopez"], ["Virpi", "John"], ["Paola", "Arrangoiz"], ["Kim", "Kilsdonk"], ["Simge", "Resmor"], ["Viviana", "Mracnova Burgess"], ["Fiona", "Lishman"], ["Yoon Jeong", "Cho"], ["Ikram", "El Aarej"], ["Maria Carolina", "Torres"], ["Julieta", "Robin"], ["Eun Young", "Ban"], ["Jyotsna", "Vasisht"], ["Ana", "Gaspar"], ["Romana", "Cernoskova"], ["Julia", "Freitas"], ["Sophie", "Erre"], ["Nina", "Wennerstrom"], ["Fabienne", "Thill"], ["Francesca", "Vaghetti"], ["Francesca", "Guastella"], ["Naoko", "Kanai"], ["Tina", "Kotter"], ["Pauline", "Trinchant"], ["Meghann", "Shaughnessy"], ["Greta", "Arn"], ["Marjorie", "Muller"], ["Katarina", "Balan"], ["Natalia", "Rubio"], ["Anabella", "Sansostri"], ["Solange", "Rasoarivelo"], ["Janelle", "Watson"], ["Mariola", "Prado"], ["Nina", "Janzekovic"], ["Fruzsina", "Siklosi"], ["Cindy", "Tow"], ["Laurence", "Poujoulat"], ["Kristin", "Gunnarsdottir"], ["Karem", "Harboe"], ["Elisa", "Scarpetta"], ["Katherine", "Frame"], ["Ana", "Katanic"], ["Marissa", "Niroj"], ["Juliana", "Jonsdottir"], ["Neza", "Globocnik"], ["Chia Hui", "Feng"], ["Meritxell", "Mimo Bravo"], ["Magali", "Denayer"], ["Petra", "Russegger"], ["Silvana", "Vargas"], ["Maria Elena", "Torres"], ["Clarissa", "Martinessi"], ["Elena", "Arabadji"], ["Yvonne", "Stratmann"], ["Veronika", "Mayer"], ["Anna", "Macia"], ["Lindsay", "Rawling"], ["Min Fang", "Chang"], ["Gloria", "Guntinas"], ["Sonia", "Perez"], ["Bettina", "Horvath"], ["Fanny Fatima", "Vasquez Soza"], ["Dita", "Kochloffelova"], ["Marisue", "Jacutin"], ["Monia", "Belghith"], ["Rita", "Horvath"], ["Elena", "Salvador Reja"], ["Liana", "Skordopoulou"], ["Maria", "Chavez"], ["Angelika", "Bachmann"], ["Evagelia", "Roussi"], ["Alice", "Pirsu"], ["Alla", "Goncharenko"], ["Kristy", "Dascoli"], ["Renata", "Hlavova"], ["Natalia", "Ganna"], ["Suzanne", "Tolu"], ["Lucie", "Vecerova"], ["Elena", "Pioppo"], ["Marianne", "Bakken"], ["Angelina", "Zdorovitskaia"], ["Maria", "Boboedova"], ["Sommer", "Bisagas"], ["Carolina", "Maurer"], ["Mei Hua", "Hsu"], ["Janet", "Walker"], ["Stephanie", "Zenklusen"], ["Iva", "Puflerova"], ["Lucie", "Soumarova"], ["Kwon Hee", "Kim"], ["Young Eun", "Shin"], ["Min Hee", "Lee"], ["Karolina", "Jagieniak"], ["Ekaterina", "Tikhankina"], ["Yi Chieh", "Chen"], ["Maria", "Goloviznina"], ["Shiho", "Mochida"], ["Nikola", "Hubnerova"], ["Yulia", "Rudavska"], ["Ana", "Alcazar"], ["Ipek", "Senoglu"], ["Erika", "Ohlsson"], ["Ayano", "Oishi"], ["Emilie", "Loit"], ["Francoise", "Gillis"], ["Odeta", "Naujokaite"], ["Carolina", "Rojas Jimenez"], ["Irene", "Adsuar"], ["Martina", "Ondrejkova"], ["Katja", "Karrento"], ["Berangere", "Quillot"], ["Darian", "Chappel"], ["Maria", "Tasheva"], ["Sarah", "Pestieau"], ["Tereza", "Stenclava"], ["Andrea", "Ho"], ["Carmen", "Gajo Torrell"], ["Ianes", "Moreira"], ["Sandra", "Kloesel"], ["Dragana", "Ilic"], ["Tamara", "Davis"], ["Sofie", "Werckx"], ["Ashleigh", "Dolman"], ["Andrea", "Van Den Hurk"], ["Ratricia", "Diaz"], ["Annette", "Oosters"], ["Isabella", "Mitterlehner"], ["Amelie", "Detriviere"], ["Erika", "Pineider"], ["Krisztina", "Kovacs"], ["Malika", "Oberoi"], ["Mabel", "Roviti"], ["Galina", "Selyunina"], ["Shiho", "Hisamatsu"], ["Diana", "Ospina"], ["Amelie", "Mauresmo"], ["Yan", "Tang"], ["Ana Maria", "Zarta"], ["Majdouline", "Idrissi"], ["Kornelia", "Varro"], ["Monika", "Brzuskiewicz"], ["Catalina", "Castano"], ["Candela", "Novoa"], ["Meike", "Frohlich"], ["Marina", "Capin"], ["Juliana", "Marques"], ["Libuse", "Prusova"], ["Sorana", "Mastan"], ["Zuzana", "Prusova"], ["Renata", "Kucerova"], ["Mami", "Inoue"], ["Tarminder", "Grover"], ["Jasleen", "Randhawa"], ["Abigail", "Tordoff"], ["Chia Hsuan", "Fu"], ["Reka", "Vidats"], ["Jessica", "Fernandez"], ["Gaelle", "Taton"], ["Linda", "Faltynkova"], ["Anna", "Bielen Zarska"], ["Maricris", "Gentz"], ["Maija", "Lamu"], ["Anne Gaelle", "Sidot"], ["Tatiana", "Kovaltchouk"], ["Verenisse", "Munguia"], ["Kylene", "Wong Simunyola"], ["Kimberly", "Gates"], ["Zuzana", "Filipova"], ["Lucie", "Zaruba"], ["Zuzanna", "Liskovcova"], ["Shubha", "Srinivasan"], ["Geraldine", "Bimes"], ["Jessica", "Tribula"], ["Alena", "Mitackova"], ["Liudmila", "Nikoyan"], ["Christiane", "Hoppmann"], ["Luisa Fernanda", "Velez"], ["Sonia", "Colomina"], ["Lianasari", "Batubara"], ["Ainhoa", "Goni Blanco"], ["Yaiza", "Goni Blanco"], ["Kun", "Zhang"], ["Vanessa", "De Los Heros"], ["Anna", "Zaporozhanova"], ["Seon Ja", "Yoo"], ["Laura", "Gatti"], ["Kristina", "Kraszewski"], ["Johanna", "Pesola"], ["Severine", "Beltrame"], ["Susanne", "Filipp"], ["Sabine", "Neteler"], ["Frida", "Engblom"], ["Pamela", "Floro"], ["Sarah", "Borwell"], ["Carmen", "Gajo"], ["Marie Claude", "Ostiguy"], ["Bahia", "Mouhtassine"], ["Zuzana", "Valekova"], ["Jin Young", "Choi"], ["Rebeccah", "Rosenfield"], ["Alejandra", "Medrano"], ["Kendra", "Segura"], ["Romina", "Fonda"], ["Ana", "Radeljevic"], ["Lisa", "Mackey"], ["Rebecca", "Leftherioti"], ["Mojca", "Pavlinic"], ["Sabina", "Kochan"], ["Diana", "Vasquez"], ["Nana", "Wada"], ["Mateja", "Ogrizek"], ["Subhashini", "Kalyanasundaram"], ["Elena", "Juricich"], ["Susanne", "Trik"], ["Karina", "Maliska"], ["Cinta", "Princep"], ["Fabienne", "Gmeiner"], ["Martha", "Montano"], ["Tamara", "Mol"], ["Megumi", "Todoroki"], ["Judit", "Trunkos"], ["Alessia", "Baracchini"], ["Natalia", "Pishchaeva"], ["Delphine", "De Winne"], ["Aleksandra", "Radosavljevic"], ["Marina", "Gojkovic"], ["Kara", "Molony Hussey"], ["Milena", "Stojanovic"], ["Marianne", "Sibille"], ["Maria Cristina", "Campana"], ["Tamara", "Encina"], ["Danila", "Prevuznakova"], ["Charlotta", "Larsson"], ["Alexandra", "Greabu"], ["Violette", "Ahn"], ["Silvia", "Navarro Orgilles"], ["Diana", "Ramirez"], ["Andreia", "Pires"], ["Louise", "Lilleso"], ["Magdalena", "Wojcik"], ["Lamia", "Essaadi"], ["Sandra", "Martinovic"], ["Anna", "Barinova"], ["Florence", "Boucard"], ["Helen", "Richardson"], ["Tracy", "Almeda Singian"], ["Marcela", "Duarte"], ["Johanna", "Engstrom"], ["Rebekah", "Rhodes"], ["Juleya", "Semenets"], ["Li", "Tong"], ["Ludmila", "Cervanova"], ["Francesca", "Frappi"], ["Napaporn", "Tongsalee"], ["Sally", "Turner"], ["Eun Young", "Ha"], ["Stephanie", "Halsell"], ["Alina", "Tecsor"], ["Rachel", "Dean"], ["Rebecca", "Turner"], ["Lenka", "Vlachynska"], ["Tali", "Fink"], ["Katarina", "Valkyova"], ["Reina", "Alexander"], ["Sujitra", "Duangchan"], ["Tzveta", "Panajotova"], ["Esther", "Boyle"], ["Laura", "Pena"], ["Min Jie", "Shi"], ["Olga", "Barabanschikova"], ["Angela", "Buergis"], ["Diana", "Gherghi"], ["Anouk", "Sterk"], ["Assa", "Berthe"], ["Maren", "Haus"], ["Irina", "Selyutina"], ["Simone", "Jardim"], ["Vinca", "Rampen"], ["Youliya", "Dimitrova"], ["Stephanie", "Schaer"], ["Mari", "Toro"], ["Katalin", "Marosi"], ["Naomi", "Callow"], ["Meiling", "Parks"], ["Josefina", "Vega"], ["Lauren", "Martin"], ["Daphne", "Nicolatou"], ["Aurandrea", "Narvaez"], ["Jana", "Lubasova"], ["Ewa", "Radzikowska"], ["Bianca", "Catay"], ["Soledad", "Lucero"], ["Maria Virginia", "Moreno Heredia"], ["Katarzyna", "Straczy"], ["Magalie", "Portel"], ["Jovana", "Krsikapa"], ["Minna", "Rautajoki"], ["Alison", "Ojeda"], ["Debora", "Carvalho"], ["Claire", "Jalade"], ["Jonni", "Seymour"], ["Lara", "Van Rooyen"], ["Anne", "Jamers"], ["Marisol", "Berengeno"], ["Sihem", "Ben Youcef"], ["Ines", "Zouabi"], ["Daniela", "Bolanos"], ["Kristina", "Curic"], ["Anna", "Nordell"], ["Bryanne", "Stewart"], ["Judith", "Czigany"], ["Sabine", "Lutter"], ["Krissy", "Hamilton Heinberg"], ["Karolina", "Zmyslowska"], ["Michelle", "Dasso"], ["Leslie", "Thile"], ["Valerie", "Pavlickova"], ["Martina", "Nedorostova"], ["Analia", "Baca"], ["Lynn", "Novack"], ["Vesna", "Sevsek"], ["Daniela", "Groseanu"], ["Tatiana", "Semenova"], ["Michelle", "Gough"], ["Christina", "Popescu"], ["Adria", "Engel"], ["Adria", "Raines"], ["Jasmin", "Halbauer"], ["Laila", "Karim"], ["Ingrid", "Peltier"], ["Jana", "Sedivec"], ["Sian Arie", "Staria"], ["Karina Ildor", "Jacobsgaard"], ["Candace Olivia", "Pedro"], ["Mette", "Iversen"], ["Mehvish", "Chishtie"], ["Nicole", "Seitenbecher"], ["Claudia", "Castro"], ["Maria Carmen", "Escuder"], ["Eva", "Escribano Poveda"], ["Ting", "Li"], ["Sabrina", "Valenti"], ["Phornsarin", "Tovisitchai"], ["Chantel", "Skulskyj"], ["Nicola", "Seltenbecher"], ["Andrea", "Masarykova"], ["Julia", "Podgorochna"], ["Anna Patricia", "Santos"], ["Diane", "Asensio"], ["Gioconda", "Pinzon"], ["Cristina", "Fontelles"], ["Akiko", "Morigami"], ["Faratiana", "Rasoarilalao"], ["Bettina", "Auer"], ["Martina", "Miklosava"], ["Eny", "Sulistyowati"], ["Melisa", "Arevalo"], ["Wei Yen", "Lai"], ["Romy", "Hutchins"], ["Monthika", "Anuchan"], ["Anna", "Font Estrada"], ["Erin", "Boisclair"], ["Kadija", "Richards"], ["Gabriela Alejandra", "Tamasi"], ["Magalie", "Gaillot"], ["Daria", "Neretina"], ["Petra", "Rampre"], ["Brie", "Rippner"], ["Catalina", "Acosta"], ["Ana Lucia", "Pereyra"], ["Diana", "Monsivaiz"], ["Cristina", "Coletto"], ["Anna", "Savitskaya"], ["Roberta", "Radin"], ["Katrina", "Mihaere"], ["Miki", "Kuramochi"], ["Nicole", "Remis"], ["Diana", "Majkic"], ["Sophie", "Regnier"], ["Marcelle", "Hirt"], ["Alexa", "De Bont"], ["Marlene", "Weingartner"], ["Naheeda", "Noormohamed"], ["Yulia", "Ikonnikova"], ["Lindsey", "Stead"], ["Isabel", "Fonts"], ["Verena", "Cerny"], ["Raluca", "Sandu"], ["Azra", "Resic"], ["Tara", "Kanbargimath"], ["Monica", "Rincon"], ["Naoko", "Horikawa"], ["Pallavi", "Ravikumar"], ["Candice", "De La Torre"], ["Katerina", "Chuda"], ["Cintia", "Perez"], ["Susanne", "Losel"], ["Michou", "Tulfer"], ["Laetitia", "Renault"], ["Jung Chi", "Tsai"], ["Silvia", "Tozzi"], ["Elodie", "Le Bescond"], ["Mariela", "Salinas"], ["Brandis", "Braverman"], ["Raluca", "Ciulei"], ["Andrea", "Rose"], ["Daniela", "Muscolino"], ["Varsha", "Reddy"], ["Pilar", "Piana"], ["Marja", "Znidar"], ["Simona", "Krausova"], ["Eva", "Dyrberg"], ["Antoaneta", "Neykova"], ["Adisa", "Salibasic"], ["Erica", "Biro"], ["Mariel", "Verban"], ["Kasturi", "Bhat"], ["Maria Gabriela", "Giacomin"], ["Inga", "Mueller"], ["Paola", "Stephen"], ["Elsa", "Morel"], ["Sanja", "Bajin"], ["Ana Carolina", "Martinez"], ["Simone", "Wichman"], ["Elodie", "Rouzier"], ["Jeannine", "Kuratli"], ["Marylene", "Losey"], ["Minette", "Weirich"], ["Lilivette", "Rivera"], ["Kelly", "Blanch"], ["Mindy", "Salas"], ["Manisha", "Abeywardene"], ["Stephanie", "Kovacic"], ["Keiko", "Fujiwara"], ["Szilvia", "Kelemen"], ["Natalia", "Jung"], ["Claudia", "Herbas"], ["Kristina", "Triska"], ["Petia", "Marinova"], ["Lynn Yin", "Tan"], ["Sarah", "Kadi"], ["Marion", "Walter"], ["Tamara", "Kaftalovich"], ["Julie", "Zanin"], ["Kika", "Hogendoorn"], ["Marie Claire", "Mathot"], ["Joanne", "Keene"], ["Tiffany", "Dabek"], ["Susan", "Okocha"], ["Jessica", "Lehnhoff"], ["Qin", "Yang"], ["Lan", "Yao"], ["Katrin", "Gaber"], ["Karin", "Cislikowski"], ["Alienor", "Tricerri"], ["Ellen", "Delie"], ["Cecilia", "Ortiz"], ["Lioudmila", "Skavronskaia"], ["Esther", "Jimoh"], ["Carmen", "Arredondo"], ["Alicia", "Pillay"], ["Jil Lin", "Leong"], ["Amanda", "Reyes"], ["Abimbola", "Showole"], ["Claudia", "Cortes De Maldonado"], ["Michaela", "Pastikova"], ["Sabrina", "Corazza"], ["Ana", "Serrot Geminelli"], ["Valentina", "Ronchi"], ["Georgina", "Dinham"], ["Natasha", "Galouza"], ["Natalia", "Galouza"], ["Mariana", "Mesa"], ["Renata", "Suarez"], ["Angela", "Ruchin"], ["Emma", "Kidd"], ["Haleema", "Rahim"], ["Zuzanna", "Liskocova"], ["Evy", "Last"], ["Alberta", "Brianti"], ["Francisca", "Sintes Martin"], ["Talula", "Guralnek"], ["Anda", "Perianu"], ["Ewelina", "Augustyniak"], ["Patrycja", "Bandurowska"], ["Raquel", "Rodrigues"], ["Indre", "Kastanauskaite"], ["Karen", "Butler"], ["Carmen", "Linder"], ["Kaysie", "Smashey"], ["Roberta", "Borrelli"], ["Sandra", "Gloria"], ["Anna", "Mitina"], ["Sabrina", "Lindemann"], ["Silvina", "Ronsisvalli"], ["Jessica", "Balbuena"], ["Patricia", "Perez De Vinaspre"], ["Anne Laure", "Brochard"], ["Catalina", "Paz"], ["Patricia", "Garcia"], ["Ana", "Jagerfeld Juric"], ["Michaela", "Tennant"], ["Capucine", "Rousseau"], ["Alessia", "Biffi"], ["Naoko", "Teramachi"], ["Neus", "Barbera Flores"], ["Irina", "Yarikova"], ["Agata", "Kurowska"], ["Yuko", "Kurata"], ["Renate", "Stoop"], ["Sybille", "Bammer"], ["Lisa", "Fritz"], ["Aleksandra", "Durska"], ["Keiko", "Tokuda"], ["Maria Cristina", "Bentivoglio"], ["Angelika", "Schadler"], ["Rochelle", "Raiss"], ["Yu An", "Chen"], ["Bree", "Calderwood"], ["Mariana", "Macia"], ["Zuzana", "Ondraskova"], ["Rie", "Saiki"], ["Jennifer", "Radman"], ["Esther", "Stasi"], ["Vida", "Mulec"], ["Whitney", "Laiho"], ["Dong Ling", "Zou"], ["Jasmina", "Davidovic"], ["Fleur", "Broughton"], ["Alix", "La Celarie"], ["Busrin", "Boontemleaw"], ["Angela", "Cardoso"], ["Tina", "Parits"], ["Marketa", "Langerova"], ["Sara", "Grechi"], ["Mervana", "Jugic Salkic"], ["Isabelle", "Godfroy"], ["Virginie", "Favory"], ["Susi", "Bensch"], ["Paulina", "Janus"], ["Cecile", "Leclere"], ["Nuria", "Llagostera Vives"], ["Marta", "Jedrzejak"], ["Amie", "Garcia"], ["Birgit", "Pirker"], ["Lindsay", "Blau"], ["Sophie", "Cockell"], ["Manami", "Tsuji"], ["Claire", "Maiolini"], ["Lynsey", "Davison"], ["Oana Elena", "Golimbioschi"], ["Junko", "Nishida"], ["Katerina", "Zlebkova"], ["Michaela", "Havelkova"], ["Magdalena", "Cibils"], ["Marina", "Caiazzo"], ["Ioana", "Dragan"], ["Carmen", "Maas"], ["Arina", "Uratani"], ["Doriane", "Caporusso"], ["Silvia", "Urickova"], ["Vanessa", "Lima"], ["Sara", "Lydon"], ["Marketa", "Blazkova"], ["Marcela", "Monroy"], ["Christi", "Wagenaar"], ["Evie", "Dominikovic"], ["Emilia", "Desiderio"], ["Katrina", "Nimmers"], ["Maria Lorena", "Alcetegaray"], ["Violetta", "Rankic"], ["Maria", "Galoustova"], ["Tamar", "Keren"], ["Alessia", "Risuleo"], ["Barbora", "Machovska"], ["Araceli", "Borbolla"], ["Gabriela", "Lastra"], ["Melisa", "Lemus"], ["Marcela", "Gonzalez"], ["Argyro", "Zika"], ["Jenny", "Trettin"], ["Remi", "Tezuka"], ["Elisa", "Villa"], ["Lenka", "Hladikova"], ["Maria Victoria", "Beortegui"], ["Jeannine", "Niedhardt"], ["Maja", "Matevzic"], ["Kati", "Wolner"], ["Sahan", "Shetty"], ["Sonia", "Delgado Tardif"], ["Venus", "Williams"], ["Ilona", "Kordonskaya"], ["Hilke", "Wilt"], ["Karine", "Etienne"], ["Nina", "Aigner"], ["Tara", "Reid"], ["Puja", "Deshmukh"], ["Marissa", "Gould"], ["Francesca", "Schiavone"], ["Nina", "Duebbers"], ["Marta", "Kostrhounova"], ["Angie", "Wilkinson"], ["Beau", "Jones"], ["Jeanine", "Baillie"], ["Ana Carolina", "Santoro"], ["Carla", "Bruno"], ["Rochelle", "Goldthreate"], ["Elizabeth", "Wright"], ["Janet", "Bergman"], ["Monika", "Horvath"], ["Joyce", "Bergman"], ["Brenda", "Martinez"], ["Kildine", "Chevalier"], ["Vicky", "Lee"], ["Rachmawati", "Siregar"], ["Laura", "White"], ["Cynthia", "Perez Gil"], ["Orie", "Sasaki"], ["Teodora", "Doncheva"], ["Charlotte", "Smith"], ["Leoni", "Weirich"], ["Archana", "Reddy"], ["Ana Maria", "Viera Teixtera"], ["Magdalena", "Kurzacz"], ["Elya", "Constanta"], ["Desiree", "Galvan Suarez"], ["Helga", "Vieira"], ["Kago", "Phatshwane"], ["Sarah", "Wetz"], ["Valentina", "Sassi"], ["Dorothy", "Zerbst"], ["Paula", "Iturbide"], ["Maria Belen", "Rojas"], ["Elena", "Fontelles"], ["Akila", "Bouchabou"], ["Ying Shi", "Huang"], ["Janine", "Lanser"], ["Eldina", "Fazlic"], ["Oindrila", "Majumder"], ["Eun Sook", "Kim"], ["Alessia", "Ignatieva"], ["Sabrina", "Moser"], ["Justyna", "Wojas"], ["Eva", "Sanz"], ["Weyli", "Chang"], ["Raffaella", "Gambadoro"], ["Sandra", "Mihajlovic"], ["Antonella", "Serra Zanetti"], ["Elena", "Voropaeva"], ["Magdalena", "Marszalek"], ["Maria Laura", "Fernandez"], ["Lydia", "Steinbach"], ["Louise", "Herbert"], ["Karin", "Schlapbach"], ["Agnes", "Wiski"], ["Barbara", "Brauchle"], ["Thamara", "Jonkman"], ["Catherine", "Henuzet"], ["Lauren", "Rookledge"], ["Linda", "Akkerman"], ["Jing Hua", "He"], ["Coral", "Silverstone"], ["Frances", "Giron"], ["Sabine", "Klaschka"], ["Lorena", "Porras"], ["Jitka", "Schonfeldova"], ["Maria Claudia", "Alves"], ["Carolina", "Uriarte"], ["Aurore", "Esteve"], ["Mira", "Radu"], ["Bretchtje", "Bruls"], ["Tatiana", "Lopez"], ["Sandra", "Nacuk"], ["Karen", "Faus"], ["Alanna", "Broderick"], ["Meryem", "El Haddad"], ["Edna", "Vasquez"], ["Elena", "Bouloux"], ["Jasmin", "Woehr"], ["Shiri", "Zlotikamin"], ["Nicola", "Corn"], ["Fernanda", "Sala"], ["Jessyca", "Arthur"], ["Masika", "Williams"], ["Alejandra", "Lopez"], ["Rikke", "Faurfelt"], ["Valeria", "Dag"], ["Rocio", "Mora"], ["Lauren", "Kalvaria"], ["Florencia", "Basile"], ["Simona", "Petrutiu"], ["Chira", "Niemela"], ["Diana", "Bobkova"], ["Radoslava", "Topalova"], ["Rosalie", "Tranchot"], ["Kate", "Elliott"], ["Pei Jyue", "Lo"], ["Andrea", "Sebova"], ["Shadi", "Tabatabai"], ["Therina", "Steenkamp"], ["Dearbhia", "Kelly"], ["Jennifer", "Thorpe"], ["Polina", "Ordanskaya"], ["Jennifer", "Adrien"], ["Renata", "Dias"], ["Fatima", "Olaso De La Rica"], ["Katie", "Granson"], ["Julie Anne", "Chidley"], ["Rewa", "Harriman"], ["Daniela", "Ilieva"], ["Viktoria", "Bucalic"], ["May", "Emara"], ["Mariana", "Gonzalez Moreno"], ["Natalia", "Testa"], ["Uzma", "Khan"], ["Svetla", "Bozicnik"], ["Barbora", "Stejskalova"], ["Edit", "Pakay"], ["Svenja", "Weidemann"], ["Lia", "Jackson"], ["Blotza", "Gutierrez"], ["Katerina", "Traykova"], ["Simona", "Farenza"], ["Stutti", "Smit"], ["Ninisita", "Srihadi"], ["Vanessa", "Devesa"], ["Iris", "Staub"], ["Natasha", "Kelly"], ["Hao", "Zhang"], ["Said Basiuny", "Hend"], ["Cassandra", "Godfrey"], ["Martina", "Hingis"], ["Milagros", "Sequera"], ["Hiroko", "Nishikawa"], ["Victoria", "Hall"], ["Rani", "Cestari Setia"], ["Danice", "Shackelford"], ["Kyung Yee", "Chae"], ["Michelle", "Colaninni"], ["Caroline", "Woerle"], ["Ikumi", "Akasaka"], ["Petra", "Puheloinen"], ["Carla", "Arguelles"], ["Ashlee", "Callahan"], ["Jun", "Zhang"], ["Ivana", "Visic"], ["Katie", "Miles"], ["Anouk", "Sinnige"], ["Satomi", "Kinjo"], ["Bruna", "Colosio"], ["Olga", "Gorzelak"], ["Evelina", "Scalise"], ["Julieta", "Guimaraes"], ["Liina", "Suurvarik"], ["Ana", "Santelises"], ["Chutima", "Toma"], ["Natalia", "Romashina"], ["Eva Maria", "Petschnig"], ["Nisha", "Naraynsingh"], ["Ilona", "Vichnevskaya"], ["Juliana", "Garcia"], ["Ana", "Viglione"], ["Anat", "Katz"], ["Sara", "Walker"], ["Claudia", "Filippini"], ["Sabrina", "Damario"], ["Silvana", "Reis"], ["Catalina", "Martinez"], ["Claire", "Bourgault"], ["Nadejda", "Ostrovskaya"], ["Delphine", "Troch"], ["Marcia", "Gaspar"], ["Kealy", "Carter"], ["Natalie", "Ayton"], ["Maria Rian", "Pila"], ["Nhu Quynh", "Phan"], ["Elena", "Petrenko"], ["Emilie", "Scribot"], ["Uta", "Grabinger"], ["Kyla", "Hunte"], ["Nathalie", "Du Vigneaud"], ["Salima Esmat", "Salman"], ["Gitte", "Moeller"], ["Jamie", "Macias"], ["Maribel", "Ramirez"], ["Jessica", "Johnson Guyaux"], ["Genevieve", "Houle"], ["Penka", "Fileva"], ["Radka", "Hovorkova"], ["Joo Young", "Woo"], ["Allison", "Bradshaw"], ["Clementina", "Rovere"], ["Laura", "Cartwright"], ["Natasha", "Watts"], ["Jacquelyn", "Rosen"], ["Eman", "Shahab"], ["Lisa", "Broadie"], ["Martina", "Sucha"], ["Wukirasih", "Sawondari"], ["Sarah", "Witten"], ["Rocio", "Fantilli"], ["Chiara", "Dal Bon"], ["Claudia", "Candado"], ["Layla", "Tohme"], ["Jacqueline", "Trail"], ["Christina", "Fusano"], ["Paula", "Wakefield"], ["Bea", "Bielik"], ["Lesedi", "Ramocha"], ["Ngozi", "Dirisu"], ["Britta", "Mohlmann"], ["Claudia", "Nieto"], ["Anna", "Aggelopoulou"], ["Mutsuko", "Hirose"], ["Tomoko", "Sugano"], ["Leticia", "Sobral"], ["Tina", "Aryani"], ["Manana", "Dueli"], ["Marie Eva", "Vrba"], ["Valentina", "Mortello"], ["Daniela", "Olivera"], ["Susan", "Cowan"], ["Sophie", "Cremers"], ["Catherine", "Alain"], ["Bao Wen", "Pu"], ["Marta", "Plumitallo"], ["Alexandra", "Stevenson"], ["Yvona", "Cindric"], ["Victoria", "Hooper"], ["Veronica", "Rizhik Urteaga"], ["Rebeca", "Llorente"], ["Ioana", "Plesu"], ["Virginia", "Prato"], ["Nicola", "Koopman"], ["Medina", "Bajrambasic"], ["Olga", "Nin"], ["Johanna", "De Leon"], ["Senait", "Gebreail"], ["Isabelle", "Soucy"], ["Jovana", "Stanisljevic"], ["Lizeth", "Fourie"], ["Sabath", "Ibrahim"], ["Mihaela", "Stefan"], ["Tsedey", "Kifle"], ["Trishna", "Williams"], ["Flavia", "Rezende"], ["Virginia", "Zaffaroni"], ["Camille", "Sesanker"], ["Marketa", "Cizova"], ["Gemma", "Selga"], ["Eudoxia", "Karaproimou"], ["Cristina", "Meilicke"], ["Jasmine", "Wolcott"], ["Helena", "Ejeson"], ["Nicole", "Sewell"], ["Diana", "Tchkouasselli"], ["Nicole", "Havlicek"], ["Leanne", "Baker"], ["Cynthia", "Dewi"], ["Shweta", "Ravji"], ["Paulina", "Castillejos"], ["Shivani", "Oberoi"], ["Vanessa", "Henke"], ["Prim", "Siripipat"], ["Kirsty", "Thomas"], ["Anna", "Komarova"], ["Anna", "Wilander"], ["Tina", "Hojnik"], ["Annette", "Tronning"], ["Maria Noel", "Ruiz"], ["Tina", "Steinmetz"], ["Sofie", "Borgions"], ["Meray", "Malouf"], ["Eva", "Trujillo"], ["Esther", "Mbugua"], ["Alena", "Scharfschwert"], ["Kari", "Olsen"], ["Emelie", "Akerbrandt Bengtsson"], ["Sara", "Abaza"], ["Petra", "Bercik"], ["Tiffany", "Brymer"], ["Eka", "Zhvania"], ["Alissa", "Velts"], ["Charisma", "Billings"], ["Marcela", "Ferrari"], ["Ziva", "Grasic"], ["Laetitia", "Sanchez"], ["Sawitre", "Naree"], ["Samantha", "Schoeffel"], ["Cecilia", "Guillenea"], ["Beata", "Wajdzik"], ["Viktoria", "Stoklasova"], ["Monica", "Gonzalez Gordo"], ["Carolina", "Aristimuno"], ["Susan", "Durst"], ["Kanako", "Yano"], ["Alicia", "Molik"], ["Nuria", "Rivas"], ["Simona", "Graniceru"], ["Lucy", "Wood"], ["Iva", "Kirac"], ["Ekaterina", "Paniouchkina"], ["Wei Na", "Liu"], ["Maria Adelaida", "Agudelo"], ["Shaza", "Tinawi"], ["Monika", "Gieczys"], ["Sonia", "Shelar"], ["Yi Chun", "Lan"], ["Sara", "Mueller"], ["Bo Ra", "Choi"], ["Ilona", "Vishnevskaya"], ["Elizabeth", "Meyer"], ["Andrea", "Nickel"], ["Tereza", "Sykorova"], ["Aurelie", "Vedy"], ["Veronica", "Sartini"], ["Jennifer", "Hopkins"], ["Heather", "Shelby"], ["Petra", "Navratilova"], ["Anya", "Loncaric"], ["Harisa", "Delic"], ["Martina", "Janska"], ["Milauni", "Vibhakar"], ["Marta", "Ribalta"], ["Luisa Elfride", "Lopez"], ["Zheng", "Wang"], ["Yulia", "Davidyuk"], ["Sonia", "Vickers"], ["Leonne", "Muller Van Moppe"], ["Maria Elena", "Del Valle"], ["Tina", "Pisnik"], ["Rochelle", "Rosenfield"], ["Ratih", "Zanida"], ["Sasha", "Edelstein"], ["Radhika", "Mandke"], ["Gabriella", "Reiner"], ["Meng", "Wang"], ["Donna", "Calvert"], ["Sophie", "Lefevre"], ["Simona", "Morici"], ["Anne", "Valle"], ["Dorra", "Hammami"], ["Natalie", "Grandin"], ["Ildiko", "Stadler"], ["Kate", "Pinchbeck"], ["Karishma", "Patel"], ["Agnes", "Palvolgyi"], ["Min", "Fan"], ["Hsiung Ching", "Lin"], ["Emilie", "Vanhuysberghe"], ["Valentina", "Imperio"], ["Lana", "Miholcek"], ["Radka", "Sottova"], ["Jenny", "Timoney"], ["Jennifer", "Tinnacher"], ["Natacha", "Gosset"], ["Natalia", "Rojas"], ["Monika", "Malinska"], ["Anca", "Dumitrescu"], ["Serena", "Carsughi"], ["Frederika", "Girsang"], ["Mariana", "Petrasova"], ["Gabriela", "Volekova"], ["Gianina", "Enuta"], ["Tatjana", "Scheel"], ["Olivia", "Dubovikov"], ["Claudia", "Di Trapani"], ["Katarina", "Srebotnik"], ["Theodora", "Patsourakou"], ["Yanelis", "Jimenez Estevez"], ["Daniela", "Puplinkhuisen"], ["Elizabeth", "Kaufman"], ["Katia", "Ceracchi"], ["Eva", "Fislova"], ["Ka Po", "Tong"], ["Francesca", "Agazzi"], ["Lara", "De Angelis"], ["Eva", "Alves Comesana"], ["Rotem", "Tepperberg"], ["Ariadna", "Junyent"], ["Anna", "Sholuh"], ["Vilmarie", "Castellvi"], ["Daniela", "Torres"], ["Ina Maria", "Range"], ["Stefanie", "Hershfield"], ["Mihaela", "Moldovan"], ["Annabel", "Kelynack"], ["Julia", "Kondratovskaia"], ["Igna", "De Villiers"], ["Neha", "Bhardwaj"], ["Daniela", "Canepa"], ["Anne", "Carmans"], ["Romana", "Valenta"], ["Elena", "Jirnova"], ["Viviana", "Ferencak"], ["Karolina", "Roubickova"], ["Lourdes", "Dominguez Lino"], ["Alena", "Bencova"], ["Valeria", "Khazova"], ["Petra", "Sedlmajerova"], ["Monica", "Peets"], ["Agnieszka", "Abram"], ["Emilia", "Kopczynska"], ["Madita", "Suer"], ["Monica", "Ribero"], ["Vanessa", "Rebelo"], ["Valeria", "Lapis"], ["Anita", "Loyola"], ["Yi Wei", "Chen"], ["Anne", "Bannfy"], ["Rakel", "Petursdottir"], ["Laetitia", "Bonny"], ["Mi Ran", "Shin"], ["Elena", "Stoilova"], ["Marta", "Insausti"], ["Adrianna", "Gallo"], ["Zsofia", "Gubacsi"], ["Nazli", "Gencsoy"], ["Patricia", "Aburto"], ["Hyun Sook", "Park"], ["Rotem", "Magnagni"], ["Danielle", "Paynter"], ["Perrine", "Pernin"], ["Silke", "Martin"], ["Jennifer", "Black"], ["Glenny", "Cepeda"], ["Anna", "De Bruyn"], ["Amy", "Burson"], ["Remi", "Uda"], ["Tania", "Martin"], ["Suzanne", "Wright"], ["Anne", "Nguyen"], ["Inga", "Burger"], ["Stefania", "Pacella"], ["Christine", "Silaghi"], ["Marine", "Piriou"], ["Silvia", "Torne Ortiz"], ["Carien", "Venter"], ["Gillian", "Assad"], ["Bettina", "Hafner"], ["Mugette", "Ahn"], ["Wei", "Na"], ["Ana", "Buraku"], ["Johanna", "Ingnas"], ["Tara", "Lambert"], ["Wynne", "Prakusya"], ["Julie", "De Roo"], ["Kristin", "Gyaki"], ["Aina", "Rafolomanantsiatosika"], ["Khushcher", "Italia"], ["Vania", "Apodaca"], ["Laetitia", "Gassis"], ["Karine", "Redon"], ["Yolanda", "Rowe"], ["Laurence", "Jayet"], ["Cecilia", "Perez"], ["Monica", "Londono"], ["Yi Ying", "Lai"], ["Kristen", "Stubbs"], ["Zdenka", "Videnova"], ["Celia", "Sutton"], ["Stephanie", "Foretz Gacon"], ["Elena", "De Mendoza"], ["Zeynep", "Gurkaynak"], ["Vanessa", "Elmendorp"], ["Evelien", "Bostyn"], ["Daniella", "Kastamoniti"], ["Daniela", "Peyrot"], ["Kinga", "Berecz"], ["Mirte", "Ros"], ["Olga", "Nefedova"], ["Laura", "Granville"], ["Kelly", "Simkin"], ["Claudia", "Lepore"], ["Katerina", "Zupancic"], ["Carla", "Tiene"], ["Natalia", "Nusshold"], ["Anna", "Andersson"], ["Vishnu Preetham", "Mahalingam"], ["Gabriela", "Duarte"], ["Laura", "Dellangelo"], ["Julia", "Scaringe"], ["Megan", "Yeats"], ["Vanessa", "Krauth"], ["Erica", "Krauth"], ["Leigh", "Bradwell"], ["Evangelina Silvia", "Migliavacca"], ["Marta", "Rubina"], ["Jana", "Hlavackova"], ["Jelena", "Ganic"], ["Madoka", "Suzuki"], ["Raffaella", "Coffa"], ["Svatava", "Prorokova"], ["Geminesse", "Co"], ["Marina", "Tasheva"], ["Tania", "Tzartzeva"], ["Patricia", "Almudever Folch"], ["Marlene", "Dirnstorfer"], ["Nabila", "Yasri"], ["Irem", "Saram"], ["Denise", "Hofer"], ["Lia", "Fabiano"], ["Agathe", "Belibi"], ["Ekaterina", "Sysoeva"], ["Alessia", "Nikolaeva"], ["Delphine", "Froidevaux"], ["Nazh", "Gencsoy"], ["Natasha", "Van Der Merwe"], ["Nicola", "Manley"], ["Sheethal", "Goutham"], ["Anna", "Kournikova"], ["Maria", "Djordjio"], ["Anne Marie", "Hogan"], ["Erika", "Venere"], ["Arianna", "Di Gennaro"], ["Nicole", "Rencken"], ["Sarah", "Abaza"], ["Jin Hee", "Kim"], ["Ines", "Moura"], ["Fernanda", "Vlasak"], ["Yonca", "Gonen"], ["Rossi", "Thomas"], ["Fanny", "Cardenas"], ["Murielle", "Methon"], ["Nora", "Veiga Gil"], ["Dora", "Krstulovic"], ["Napanant", "Montkhongtham"], ["Emily", "Haylock"], ["Tomoko", "Dokei"], ["Dominique", "Reynolds"], ["Vaida", "Martinkute"], ["Emmanuelle", "Duval"], ["Aline", "Pinheiro"], ["Martine", "Poos"], ["Sarah", "Riske"], ["Mara", "Santangelo"], ["Bucke Enda", "Yavuz"], ["Anne", "Meritel"], ["Francesca", "Calabrese"], ["Lisa", "Gebert"], ["Danira", "Penic"], ["Chantal", "Coombs"], ["Yanet", "Nunez Mojarena"], ["Anna", "Oehme"], ["Kirsten", "Harris"], ["Dorothee", "Buschhuter"], ["Elena", "Cordano"], ["Bianca", "Kamper"], ["Delila", "Causevic"], ["Victoria", "Livanova"], ["Kristin", "Lam"], ["Cassandra", "Swanepoel"], ["Jelena", "Kostanic Tosic"], ["Magda", "Mihalache"], ["Carolina", "Aravena"], ["Laura", "Mangunsong"], ["Stella", "Kristjansdottir"], ["Jetpisit", "Lertsirisumpan"], ["Anastasia", "Myskina"], ["Tjasa", "Suvak"], ["Chisayo", "Ito"], ["Shizuko", "Matsuda"], ["Natsuko", "Matsuda"], ["Aitana", "Minambres"], ["Wan Ting", "Lin"], ["Abigail", "Spears"], ["Claire", "Carter"], ["Sabrina", "Diniz"], ["Anastasia", "Ponomarenko"], ["Hye Jeong", "Yoo"], ["Zeynep", "Inanli"], ["Ana", "Martin Ramirez"], ["Jahnavi", "Sunderarajan"], ["Valentina", "Castro"], ["Natalie", "Marz"], ["Xer Li", "Woo"], ["Riina", "Veiram"], ["Jennifer", "Tuchband"], ["Giorgia", "Poggi"], ["Leslie", "Harvey"], ["Karin", "Urbin"], ["Nazan", "Arsal"], ["Pirada", "Witoonpanich"], ["Lazarina", "Sazdova"], ["Tomoko", "Taira"], ["Maria Paola", "Arcos"], ["Sheila", "Guerberg"], ["Sonia", "Lagos"], ["Ana", "Sanz Castro"], ["Millie", "Begovic"], ["Kit", "Carson"], ["Deanna", "Roberts"], ["Alexandra", "Chong"], ["Lori", "Grey"], ["Marlene", "Mejia"], ["Ivana", "Bracun"], ["Eriko", "Mizuno"], ["Maria Claudia", "Romo"], ["Ljiljana", "Nanusevic"], ["Kyung Won", "Kim"], ["Laila", "Shetty"], ["Rebecca", "Hawkins"], ["Yumi", "Ueda"], ["Maria", "Ilieva"], ["Lies", "Budiharto"], ["Virginia", "Varga"], ["Marie", "Yamabe"], ["Visnja", "Visnjic"], ["Stephanie", "Kamberi"], ["Julia", "Romanova"], ["Donna", "Mcintyre"], ["Ana", "Stiglic"], ["Maria Victoria", "Domina"], ["Ines", "Khelefi"], ["Rossana", "Hidalgo"], ["Sedef", "Ozkan"], ["Katia", "Bogomolova"], ["Julia", "Klein"], ["Jacqueline", "Nieto"], ["Erika", "Clarke Magana"], ["Nuraeni", "Batubara"], ["Melissa", "Mendieta"], ["Maria", "Guijarro"], ["Sara", "Pasquinoni"], ["Jodi", "Kenoyer"], ["Stephanie", "Rizzi"], ["Katarzyna", "Kolodynska"], ["Mariana", "Duarte"], ["Elizabeth", "Schranz"], ["Natalia", "Gussoni"], ["Eun Joo", "Kang"], ["Chiara", "Lucacchioni"], ["Camille", "Pin"], ["Orawan", "Wongkamalasai"], ["Francesca", "Mancini"], ["Simona", "Jozova"], ["Ivana", "Mark"], ["Kaori", "Aoyama"], ["Ayako", "Suzuki"], ["Verica", "Spirovska"], ["Marjorie", "Ceppo"], ["Lara", "Arnaout"], ["Clarisa", "Fernandez"], ["Maria Karina", "Lomena"], ["Oana", "Creanga"], ["Daniela", "Santamato"], ["Aleksandra", "Vucenovic"], ["Monica", "Mastan"], ["Kim", "Freebairn"], ["Nanci", "Lemuz"], ["Ji Sun", "Ha"], ["Annika", "Bengtsson"], ["Marialice", "Alonso"], ["Melanie Ann", "Clayton"], ["Pia", "De Robertis"], ["Marinet", "Morgan"], ["Victoria", "Broyak"], ["Michino", "Meguro"], ["Olga", "Ramirez"], ["Oyuki", "Cruz"], ["Andrea", "Munch Hermansen"], ["Jewel", "Peterson"], ["Ivona", "Sereja"], ["Evelyne", "Gmeiner"], ["Mikaele", "Zaykine"], ["Yeon", "Kim"], ["Giulia", "Schivo"], ["Karla", "Alvarado"], ["Linda", "Tajnai"], ["Mandy", "Stegman"], ["Carina", "Kaempfer"], ["Nela", "Bogdanovich"], ["Magdalena", "Mrozek"], ["Cristina", "Maiz"], ["Saloni", "Kantaria"], ["Kristen", "Van Elden"], ["Ina", "Sartz"], ["Vroni", "Hinterseer"], ["Rika", "Fujiwara"], ["Elena", "Rutigliano"], ["Agata", "Cioroch"], ["Tanja", "Schugt"], ["Nato", "Kachkachishvili"], ["Sareewan", "Wattanadechachan"], ["Serena", "Williams"], ["May", "Kabani"], ["Loni", "Worsley"], ["Aileen", "Rogan"], ["Kristina", "Barrois"], ["Yu", "Sun"], ["Carla", "Bastos"], ["Anita", "Csendes"], ["Wibeke", "Clifford"], ["Amina", "Choqri"], ["Osaro", "Amadin"], ["Orawan", "Lamangthong"], ["Sarah", "Stallard"], ["Tian Tian", "Sun"], ["Kristina", "Pesatova"], ["Nadia", "Dzuganova"], ["Elena", "Dementieva"], ["Hanna", "Krampe"], ["Imke", "Kusgen"], ["Vanesa Rut", "Ansotegui"], ["Julie", "Tremblay"], ["Tina", "Hergold"], ["Kavitha", "Krishnamurthy"], ["Diana", "Laksono"], ["Virginia", "Trifonova"], ["Kaori", "Goto"], ["Urska", "Juric"], ["Lejla", "Husic"], ["Monica", "Canevaro"], ["Ekaterina", "Makarenko"], ["Jennifer", "Klaschka"], ["Julia", "Henninger"], ["Ilke", "Gers"], ["Lara", "Ercegovic"], ["Evghenia", "Ablovatchi"], ["Dayana", "Mora"], ["Ana Paula", "Novaes"], ["Ariadna", "Berdala Grive"], ["Niyati", "Shetty"], ["Denitza", "Alexandrova"], ["Deniz", "Emre"], ["Elena", "Caldes Marques"], ["Montserrat", "Palacios"], ["Carly", "Homewood"], ["Sarah", "Taylor"], ["Clare", "Warner"], ["Sara", "Martinez Martos"], ["Manon", "Van Den Beek"], ["Renska", "Hiemstra"], ["Adriana", "Burz"], ["Olga", "Duran"], ["Simmi", "Rani"], ["Nathalie", "Aizenberg"], ["Lisa", "Damelio"], ["Paco", "Heredia"], ["Maria Florencia", "Rivolta"], ["Natalia", "Stoudyanaya"], ["Yukiko", "Yabe"], ["Natalia", "Kostova"], ["Mobina", "Saimwala"], ["Dorota", "Zaboklicka"], ["Emily", "Jacobs"], ["Jeong A", "Cho"], ["I Ting", "Wang"], ["Alenka", "Kacunko"], ["Jennifer", "Mcgaffigan"], ["Diana", "De Salvador"], ["Stephanie", "Kimura"], ["Cecilia", "Wilander"], ["Hannah", "Parker"], ["Dagmara", "Bednarczyk"], ["Sonia", "Orellana"], ["Sabaea", "Carrington"], ["Amanda", "Johnson"], ["Christin", "Potsch"], ["Branka", "Bojovic"], ["Jennifer", "Mitchell"], ["Beatriz", "Fraga"], ["Veronica", "Garcia"], ["Katia", "Rodrigues"], ["Olga", "Lazarchuk"], ["Ana Luisa", "Torres"], ["Paula", "Oliveira"], ["Jacqueline", "Lorne"], ["Anuja", "Rithi"], ["Anujapathy", "Pasupathy"], ["Denise", "Vock"], ["Elena", "Yaryshka"], ["Diana", "Brunel"], ["Cacilia", "Charbonnier"], ["Milangela", "Morales"], ["Gabriela", "Salloum"], ["Ariana", "Rojas"], ["Tricia Ann", "Greaves"], ["Estefania", "Martinez"], ["Marina", "Soukholitko"], ["Julie", "Rotondi"], ["Jessica", "Ferguson"], ["Patricia", "Zurita"], ["Carolina", "Rodriguez"], ["Gertruda", "Nagtzaam"], ["Akane", "Yasui"], ["Sanny", "Harsono"], ["Alessandra", "Gandossi"], ["Ines", "Mzoughi"], ["Ansley", "Cargill"], ["Carlota", "Plantier Santos"], ["Aysu", "Cuhaci"], ["Natalia", "Savchenko"], ["Ida", "Sutedja"], ["Iroda", "Tulyaganova"], ["Boyana", "Perich"], ["Visnja", "Vuletic"], ["Ana", "Radak Trampetic"], ["Ellen", "Svensson"], ["Stephanie", "Balzert"], ["Emma", "Gott"], ["Daniela", "Dessolis"], ["Christina", "Fitz"], ["Francesca", "Lorenzoni"], ["Aimee", "Smith"], ["Maria", "Gil"], ["Vadali", "Kameswari"], ["Emily", "Dowdeswell Koti"], ["Sylvie", "Bohmova"], ["Fleida Jan", "Pila"], ["Courtney", "Steinbock"], ["Kristen", "Steinbock"], ["Sarah", "Gregg"], ["Sonora", "Fontaine"], ["Jenny", "Lindstrom"], ["Sandra", "Leborgne"], ["Maria", "Kondratieva"], ["Lisa", "Quiller"], ["Ikuko", "Hirata"], ["Anais Marie", "Moreno"], ["Danielle", "Spacek"], ["Ya Ming", "Lin"], ["Rani Smita", "Jain"], ["Kaori", "Oishi"], ["Barbara", "Soares"], ["Jorgelina", "Cravero"], ["Veronika", "Raimrova"], ["Paulina", "Slitrova"], ["Camila", "Sagae"], ["Inge", "Weirich"], ["Fabienne", "Vieille Grosjean"], ["Marielle", "Hoogland"], ["Andria", "Hadjioannou"], ["Mariona", "Gallifa Puig Desens"], ["Natalia", "Volcova"], ["Jimena", "Fernandez"], ["Sonja", "Vidas"], ["Laura", "Lechi"], ["Svetlana", "Mossiakova"], ["Analia", "Longoni"], ["Nona", "Wagh"], ["Sabine", "Herdegen"], ["Laura", "Cebrian"], ["Natasha", "Van Jaarsveld"], ["Maret", "Ani"], ["Silvia", "Cribellati"], ["Heidi", "Farr"], ["En Yue", "Ma"], ["Emilia", "Anderson"], ["Maria", "Ruiz Fabrega"], ["Lucie", "Mazinova"], ["Karolina", "Sadaj"], ["Rekha", "Natrajan"], ["Radhika", "Tulpule"], ["Jacqueline", "Hagen"], ["Carolina", "Sadaj"], ["Ayca", "Gumuscu"], ["Valerie", "Menob"], ["Yolandi", "Rogers"], ["Nathalie", "Sienkob"], ["Magali", "Risoleo"], ["Lenka", "Tvaroskova"], ["Chrisdula", "Kagga"], ["Kateryna", "Vasylyeva"], ["Marcela", "Evangelista"], ["Bojana", "Damnjanovic"], ["Ying", "Yu"], ["Darija", "Klaic"], ["Jessica", "Ortiz Diaz Oliver"], ["Adriana", "Basaric"], ["Susanne", "Kirsch"], ["Hannah", "Collin"], ["Danielle", "Hock"], ["Furuza", "Gafurova"], ["Celine", "Cattaneo"], ["Helen", "Staresinic"], ["Victoria", "Beck"], ["Dora", "Bechliwanis"], ["Marta", "Bechliwanis"], ["Katerina", "Sevcikova"], ["Sai Swapna", "Ramakrishnan"], ["Petra", "Novotnikova"], ["Kelly", "Schmandt"], ["Klara", "Koukalova"], ["Stefanie", "Weis"], ["Flavia", "Pennetta"], ["Kyung Mi", "Chang"], ["Gyorgyi", "Zsiros"], ["Julia", "Beconi"], ["Na", "Li"], ["Anna", "Dolinska"], ["Amira", "Samara"], ["Cornelia", "Villemur"], ["Helene", "Mygind"], ["Mhairi", "Brown"], ["Gorana", "Marsic"], ["Barbara", "Hellwig"], ["Eri", "Ohmi"], ["Chloe", "Carlotti"], ["Barbara", "Rosenberger"], ["Elena", "Manevska"], ["Mariam", "Galal Hafez"], ["Dacil", "Alvarado"], ["Diana", "Olave"], ["Gemma", "Gallo Gomez"], ["Ilge", "Alpay"], ["Gretchen", "Haynor"], ["Stephanie", "Sagaspe"], ["Doris", "Kurtela"], ["Dagmar", "Denkova"], ["Laura", "Pretin"], ["Laura", "Bao"], ["Andrea", "Plackova"], ["Sandra", "Kvelstein"], ["Linn", "Ronnberg"], ["Elena", "Branker"], ["Mirjana", "Lucic"], ["Katherine", "Boyanovich"], ["Alexandra", "Smith"], ["Ming Hui", "Wu"], ["Lan Lan", "Tai"], ["Diana", "Muller"], ["Olga", "Mikhailova"], ["Ana", "Maslesa"], ["Anne Laure", "Heitz"], ["Idalina", "Franca"], ["Stanislava", "Hrozenska"], ["Sricharanya", "Thiagarajan"], ["Sumitra", "Rao"], ["Angela", "Szymanowski"], ["Yolandi", "Beukes"], ["Meritxell", "Balbas"], ["Manar", "Akkar"], ["Nino", "Chichinadze"], ["Maria Elena", "Camerin"], ["Claire", "Seal"], ["Amandine", "Dulon"], ["Henrike", "Voigt"], ["Sarah", "Stone"], ["Veronika", "Koksova"], ["Monika", "Dybicz"], ["Aurore", "Desert"], ["Nicole", "Weber"], ["Magdalena", "Wojdylok"], ["Petra", "Halastova"], ["Dimana", "Krastevitch"], ["Filipa", "Gabrovska"], ["Monika", "Serrano"], ["Cristina", "Arribas"], ["Vanessa", "Flores"], ["Shruti", "Dhawan"], ["Barbora", "Blahutiakova"], ["Emily Ann", "Marker"], ["Biljana", "Trpeska"], ["Agnes", "Buronyi"], ["Pei Yuin", "Keng"], ["Sabina", "Mediano Alvarez"], ["Candice", "Fuchs"], ["Joo Hee", "Lee"], ["Marina", "Cardoso"], ["Jenny", "Zachrisson"], ["Vera", "Kostelnikova"], ["Sato", "Fujigo"], ["Gamze", "Basaran"], ["Natalia", "Yatsenka"], ["Gabriela", "Coello"], ["Safae", "Kchich"], ["Funke", "Adekola"], ["Nicole", "Angat"], ["Viktoria", "Tepluk"], ["Stephanie", "Gehrlein"], ["Sarah", "Suitor"], ["Luiza", "Biktyakova"], ["Megan", "Marton"], ["Irina", "Voskanyan"], ["Natalia", "Drabova"], ["Christina", "Wheeler"], ["Kate", "Lutgert"], ["Milica", "Stamenic"], ["Claudia", "Salgues"], ["Bernadette", "Audra"], ["Mirja", "Cuntz"], ["Belen", "Guajardo"], ["Hillary", "Adams"], ["Lucia", "Tallova"], ["Anna", "Eriksson"], ["Tiziana", "Iezza"], ["Po Kuen", "Lam"], ["Fabiana", "Taverna"], ["Vanessa", "Wellauer"], ["Andrea", "Hofinger"], ["Megan", "Ferreira"], ["Rui Jing", "Wong"], ["Dita", "Hauerlandova"], ["Sandy", "Lukowski"], ["Tarrin", "Dougery"], ["Eva", "Arteche"], ["Melissa", "Dowse"], ["Aleke", "Tsoubanos"], ["Ivana", "Kekez"], ["Caroline", "Tidemand"], ["Ksenia", "Orehova"], ["Hyun Sook", "Bae"], ["Pragya", "Yadav"], ["Sandhya", "Kanury"], ["Olivia", "Tudor"], ["Mira", "Rainshtein"], ["Courtney", "Bergman"], ["Wan Ching", "Tuan"], ["Helen", "Lawson"], ["Laura", "Bolet"], ["Kun", "Deng"], ["Begona", "De Toro Sanz"], ["Haruka", "Yamamoto"], ["Atsumi", "Mitsumine"], ["Ramona", "But"], ["Elisa", "Innocenti"], ["Alina", "Bileca"], ["Jihan", "Patel"], ["Lyndsey", "Molony"], ["Amelia", "Lincaru"], ["Martina", "Strussova"], ["Anastasia", "Rodionova"], ["Marinela", "Antonic"], ["Anna", "Floris"], ["Djamila", "Khaldi"], ["Jenny", "Andrade"], ["Shelley", "Panford Gyaaba"], ["Carolina", "Rodriguez Magdalena"], ["Marie Eve", "Pelletier"], ["Karen", "Paterson"], ["Minou", "Jancso"], ["Stephanie", "Serruys"], ["Ines", "Trickovic"], ["Katharina", "Scholtisek"], ["Karina", "Gamonal"], ["Dikla", "Dadon"], ["Lauren", "Barnikow"], ["Maria", "Rivas"], ["Elina", "Bairos"], ["Jamie", "Buterbaugh"], ["Ofra", "Friedman"], ["Yang", "Liu"], ["Mia", "Buric"], ["Deborah", "Saxer"], ["Nathalia", "Bellizia"], ["Dragica", "Joksimovic"], ["Daysi", "Espinal"], ["Victoria", "Cservenyak"], ["Marina", "Samolenko"], ["Leslie", "Butkiewicz"], ["Silvia", "Hegedis"], ["Belinda", "Kelly"], ["Se Na", "Lee"], ["Maureen", "Diaz"], ["Suzanne", "Van Hartingsveldt"], ["Sivan", "Ozana"], ["Carolyn", "Mcgann"], ["Emily", "Stellato"], ["Veronika", "Ctvrtnickova"], ["Anastasia", "Dvornikova"], ["Justine", "Henin"], ["Jessica", "Roland Rosario"], ["Jenny", "Belobrajdic"], ["Hana", "Debevec"], ["Hadjira", "Slimani"], ["Frederica", "Piedade"], ["Melissa", "Middleton"], ["Maja", "Pauk"], ["Noelia", "Furno"], ["Nadia", "Petrova"], ["Helen", "Reesby"], ["Tuyet Minh", "Tran"], ["Cristina", "Madrid"], ["Karla", "Mancinas"], ["Sonal", "Phadke"], ["Nives", "Culum"], ["Nathalie", "Banday"], ["Tunde", "Nemeth"], ["Diana", "Quevedo"], ["Hanae", "Rhazi"], ["Vanessa", "Pallucci"], ["Mirina", "Rajaoarisoa"], ["Anabelle", "Espinosa Rodriguez"], ["Olivia", "Crouchent"], ["Claudia", "Ivone"], ["Biljana", "Dimovska"], ["Claire", "Webb"], ["Aniela", "Mojzis"], ["Sasiwan", "Pimonrat"], ["Sabrina", "Jolk"], ["Dewi Monica", "Siregar"], ["Amandine", "Singla"], ["Kristel", "Van Der Perre"], ["Valeria", "Bondarenko"], ["Valeri", "Zatulko"], ["Nadia", "Kilani"], ["Karmelina", "Rivera"], ["Anna", "Cowan"], ["Nadine", "Sanfilippo"], ["Maiko", "Cook"], ["Zuzana", "Kucova"], ["Valentina", "Rossi"], ["Marisa", "Tseng"], ["Tekeme", "Ekios"], ["Lucy", "Francis"], ["Sivan", "Paz"], ["Dina", "Khalil"], ["Tomoko", "Yonemura"], ["Eun Mi", "Oh"], ["Caylan", "Leslie"], ["Magdalena", "Bilova"], ["Michaela", "Larsson"], ["Christine", "Pape Nielsen"], ["Varita", "Sureephong"], ["Ashley", "Nations Raju"], ["Junri", "Namigata"], ["Leonita", "Girsang"], ["Aradhana", "Sarohia"], ["Sanela", "Kunovac"], ["Lucia", "Halty Barrutieta"], ["Isha", "Chopra"], ["Arithzi", "Vanzzini"], ["Katherine", "Laidler"], ["Ioana", "Paun"], ["Katerina", "Stamatopoulou"], ["Aparna", "Singh"], ["Elizabeth", "Brito"], ["Mariana", "Quintanilla"], ["Daria", "Panova"], ["Dominika", "Luzarova"], ["Camille", "Gely"], ["Bettina", "Roberts"], ["Nelyuri", "Calvo"], ["Marie", "Combemorel"], ["Lucy", "Ikic"], ["Harmonie", "Fiacchi"], ["Nikhila", "Palat"], ["Li", "Huang"], ["Rosangela", "Martinez"], ["Karla", "Jana"], ["Alejandra", "Franco"], ["Karla", "Mraz"], ["Francesca", "Tancredi"], ["Emily", "Foster"], ["Anabel", "Medina Garrigues"], ["Emily", "Hewson"], ["Giulia", "Meruzzi"], ["Elena", "Kovalchuk"], ["Salma", "Ben Mahmoud"], ["Sarah Jane", "Connelly"], ["Natalie", "Neri"], ["Jemima", "King"], ["Audrey", "Hernandez"], ["Carla", "Prieto"], ["Barbara", "Orlai"], ["Dominique", "Rosenberg"], ["Nicola", "Trinder"], ["Rosa", "Gajic"], ["Lindsay", "Ferrell"], ["Maria Jose", "Martinez Sanchez"], ["Maria", "Nieto"], ["Utako", "Suzuki"], ["Celine", "Francois"], ["Marine", "Petit"], ["Anna", "Pogosova"], ["Joanna", "Furdyna"], ["Kasumi", "Aiko"], ["Julia", "Schruff"], ["Elodie", "Naegellen"], ["Zerene", "Reyes"], ["Mylie", "Gillet"], ["Harsimran Kaur", "Bedi"], ["Rocio", "Cupeiro"], ["Eka", "Vepkhvadze"], ["Katerina", "Romanenko"], ["Charlotte", "Wallace"], ["Cattaleeya", "Wisesrat"], ["Bianka", "Lamade"], ["Veronika", "Subertova"], ["Tereza", "Simonian"], ["In Young", "Chang"], ["Jinal", "Patel"], ["Lama", "Daouk"], ["Yulia", "Mirna"], ["Nadine", "Schlotterer"], ["Sarah", "Dinkelmann"], ["Despina", "Toulgaridou"], ["Beatriz", "Cabrera Rosendo"], ["Edit", "Bagoly"], ["Thu Tuyen", "Pham Nhu"], ["Lucie", "Ruskova"], ["Anna", "Markovich"], ["Emma", "Tullett"], ["Tiffany", "Eklov"], ["Claudia", "Oliva"], ["Sanja", "Jukic"], ["Urska", "Vesenjak"], ["Masa", "Vesenjak"], ["Catherine", "Hortala"], ["Elisa", "Belleri"], ["Lauren", "Fisher"], ["An Na", "Lee"], ["Jennifer", "Longin"], ["Maike", "Kampschulte"], ["Rachel", "Shweky"], ["Kathleen", "Blaszak"], ["Sabrina", "Vogt"], ["Samantha", "Lucas"], ["Ilona", "Jarkova"], ["Eleni", "Daniilidou"], ["Elsa", "Oriain"], ["Niki", "Williams"], ["Neus", "Sole"], ["Stephanie", "Price"], ["Xia", "Sheng"], ["Tracey", "Oconnor"], ["Marina", "Fileva"], ["Bridget", "Chidi"], ["Davina", "Mendiburu"], ["Mounia", "Hassib"], ["Courtney", "Nagle"], ["Eunice", "Paravicini"], ["Tereza", "Szafnerova"], ["Jasmin", "Notdurfter"], ["Alexandra", "Zotta"], ["Chattida", "Thimjapo"], ["Francesca", "Cicciu"], ["Maja", "Mlakar"], ["Lucia", "Halty"], ["Dominika", "Nemcovicova"], ["Lucia", "Struharova"], ["Annat", "El Azari"], ["Blessing", "Anuna"], ["Wendy", "Galan Dominguez"], ["Dolunay", "Soykan"], ["Mayumi", "Yamamoto"], ["Carolina", "Guilliano"], ["Martina", "Muller"], ["Razalia", "Phethu"], ["Katarina", "Basternakova"], ["Goulnara", "Fattakhetdinova"], ["Vlatka", "Jovanovic"], ["Valeria", "Macloughlin"], ["Etsuko", "Kitazaki"], ["Albertina", "Gandara"], ["Mudarwati", "Mudarwati"], ["Rakha", "Mohan"], ["Nathalie", "Vierin"], ["Stephanie", "Bernadel"], ["Bernadette", "Bayani"], ["Isabel", "Collischonn"], ["Raadhae", "Svarupa"], ["Cassandra", "Barr"], ["Pamela", "Van Boekel"], ["Pascale", "Veraverbeke"], ["Yasmin", "El Kashef"], ["Amanda", "Mang"], ["Diana", "Martin"], ["Melinda", "Czink"], ["Kumiko", "Iijima"], ["Gabriela", "Zingman"], ["Johanna", "Zingman"], ["Safa", "Safar"], ["Diana", "Vuchinger"], ["Simone", "Stohr"], ["Anna", "Bentzer"], ["Tatyana", "Bezukladnikova"], ["Anna", "Nefedova"], ["Mia", "Paavilainen"], ["Violeta", "Fabe Martin"], ["Mitsuko", "Ise"], ["Kerry", "Rudman"], ["Rocio", "Gonzalez"], ["Bettina", "Niedhart"], ["Veronika", "Levchenko"], ["Kim", "Kambic"], ["Nida", "Waseem"], ["Goda", "Kuliesyte"], ["Rita", "Tarjan"], ["Barbora", "Sukova"], ["Tajana", "Mlakar"], ["Lourdes", "Gaona Gonzalez"], ["Ana", "Mise"], ["Erika", "Villalobos Morsink"], ["Ekaterina", "Kuznetsova"], ["Arantxa", "Parra Santonja"], ["Caroline", "Maes"], ["Katiuscia", "Del Vecchio"], ["Kate", "Hole"], ["Christie", "Agugbom"], ["Zorana", "Stefanovic"], ["Christy", "Mbadiwe"], ["Sandra", "Klemenschits"], ["Daniela", "Klemenschits"], ["Enrica", "Ditta"], ["Annalisa", "Bona"], ["Deborah", "Hill"], ["Thuy Linh", "Tran"], ["Olivia", "Sanchez"], ["Carla", "Andrade"], ["Aleksandra", "Srndovic"], ["Lindsay", "Martin"], ["Alyssa", "Cohen"], ["Irena", "Noc"], ["Anisoara", "Popescu"], ["Rose", "Onoja"], ["Agnese", "Zucchini"], ["Dan Dan", "Jiang"], ["Angela", "Arean"], ["Melinda", "Malouli"], ["Lauren", "Colalillo"], ["Viviana", "Rojas Millan"], ["Fabienne", "Vielle Grosjean"], ["Estefania", "Rolon"], ["Erina", "Akizu"], ["Tamara", "Kikaleishvili"], ["Isabelle", "Declercq"], ["Ekaterina", "Kouznetchenkova"], ["Bethany", "Griffin"], ["Alexandra", "Mayrat"], ["Mariko", "Fritz Krockow"], ["Kristina", "Georgieva"], ["Tinatin", "Turmanidze"], ["Lorena", "Barbero"], ["Esther", "Muscat"], ["Julie", "Coin"], ["Femi", "Odeyemi Musa"], ["Anna", "Koumantou"], ["Luana", "Magnani"], ["Maria Letizia", "Zavagli"], ["Anushka", "Rajiyah"], ["Lindsay", "Dawaf"], ["Raquel", "Kops Jones"], ["Margalita", "Chakhnashvili"], ["Adriana", "Ruiz"], ["Susanne", "Wild"], ["Eman", "Metwaly"], ["Tatiana", "Perebiynis"], ["Ivana", "Zupa"], ["Livia", "Azzi"], ["Olga", "Kalyuzhnaya"], ["Aleksandra", "Kujawska"], ["Meriem", "Addou"], ["Silvia", "Gabba"], ["Anna", "Yenyk"], ["Maki", "Arai"], ["Jennifer", "Schmidt"], ["Candice", "Meyer"], ["Rachael", "Irelewuyi"], ["Maria Alejandra", "Garcia"], ["Ashley", "Robards"], ["Ana", "Timotic"], ["Trina", "Singian"], ["Suchanun", "Viratprasert"], ["Ceylan", "Konuk"], ["Antonia", "Steinmetz"], ["Asha", "Burns"], ["Fernanda", "Bini"], ["Jasna", "Brnjakovic"], ["Gabriela", "Moreira"], ["Annika", "Weisse"], ["Marija", "Serdarusic"], ["Isoke", "Perry"], ["Lorenza", "Vaschetto"], ["Gulay", "Torgay"], ["Cristina", "Santos"], ["Maria Elizabeth", "Lopez"], ["Salome", "Llaguno"], ["Julia Octavia", "Groblewski"], ["Anna", "Alexeeva"], ["Andreea", "Fusea"], ["Dina", "Milosevic"], ["Ana", "Cetnik"], ["Tania", "Rivera"], ["Marie Perrine", "Baudouin"], ["Jenny", "Kuhn"], ["Suzi", "Becvinovska"], ["Richele", "Le Saldo"], ["Antonie", "Steinmetz"], ["Sara", "Sabry"], ["Marta", "Marrero"], ["Lindsay", "Cox"], ["Tamar", "Zedginidze"], ["Thais", "Schenck"], ["Mari", "Mizuno"], ["Nina", "Joksovic"], ["Ana Maria", "Simanca"], ["Dea", "Sumantri"], ["Monique", "Adamczak"], ["Chris", "Martinez Hernandez"], ["Viviana", "Rivero"], ["Dan", "Xiong"], ["Emmanuelle", "Poncetta"], ["Marion", "Lecas"], ["Dragana", "Ognenovska"], ["Beatrice", "Banila"], ["Lorena Ivette", "Arias Rodriguez"], ["Stephanie", "Chu"], ["Kathleen", "Mcgaffigan"], ["Cristina", "Tonelli"], ["Virginie", "Pichet"], ["Vivien", "Weber"], ["Ji Fei", "Yu"], ["Irene", "Gutierrez"], ["Cristelle", "Grier"], ["Katarzyna", "Walukiewicz"], ["Jenneta", "Halliyeva"], ["Milena", "Schulz Gartner"], ["Sae", "Kato"], ["Iveta", "Benesova"], ["Yolandi", "Terblanche Ward"], ["Shirley", "Bernal"], ["Kristina", "Jarkenstedt"], ["Wioletta", "Kaczmarek"], ["Hana", "Kraftova"], ["Kristina", "Dundov"], ["Anna", "Shchupak"], ["Alet", "Boonzaaier"], ["Sandra", "Jillyova"], ["Gulvona", "Khodjaeva"], ["Monica", "Acosta"], ["Diana", "Costa"], ["Simona", "Arghire"], ["Zuzana", "Cerna"], ["Maria", "Kravcenko"], ["Lourdes", "Lopez"], ["Roberta", "Frizzo"], ["Asami", "Nishio"], ["Violetta", "Bagrova"], ["Anuli", "Okafor"], ["Anete", "Rozkalne"], ["Silvia", "Gutierrez Quiroga"], ["Beatrice", "Spiganti"], ["Andre", "Polasek"], ["Raluca", "Ciochina"], ["Roberta", "Vinci"], ["Cindra", "Maharaj"], ["Cecilia", "Helland"], ["Eugenia", "Chialvo"], ["Harriet", "Piercy"], ["Irena", "Khomyk"], ["Jennie", "Loow"], ["Trine", "Bassett"], ["Jaslyn", "Hewitt"], ["Melanie", "Cohen"], ["Maryam", "Mazaheri"], ["Macey", "Breece"], ["Sari", "Stegmann"], ["Maria Isabella", "Ariza Sanz"], ["Katherine", "Vymetal"], ["Davina", "Duronio"], ["Lucie", "Podskubova"], ["Wei Juan", "Liu"], ["Nicole", "Bouffler"], ["Lorena", "Aparicio Vargas"], ["Daniela", "Bertolo"], ["Inge", "De Geest"], ["Linda", "Fallon"], ["Priscila", "Ortega"], ["Martina", "Reiser"], ["Milica", "Koprivica"], ["Irina", "Bobrysheva"], ["Dong Bo", "Lei"], ["Branka", "Savic"], ["Maritza", "Villalba Castro"], ["Jackeline", "Jacome"], ["Nicole", "Clerico"], ["Beauty", "Oghenekevwe"], ["Daja", "Bedanova"], ["Elena", "Bovina"], ["Ana", "Sismondini"], ["Anna", "Rynarzewska"], ["Ariela", "Primo"], ["Nato", "Dolitze"], ["Deena Rose", "Cruz"], ["Paloma", "Castillo"], ["Magalie", "Girard"], ["Rebecca", "Pike"], ["Alejandra", "Rivero"], ["Christelle", "Antille"], ["Lyle", "Cupido"], ["Mao", "Yamanaka"], ["Daniela", "Hebertova"], ["Jelena", "Pandzic"], ["Lejla", "Popobic"], ["Karin", "Kues"], ["Stephanie", "Cohen Aloro"], ["Kelly", "Mccain"], ["Valerie", "Verrier Diaconescu"], ["Barbara", "Galletto"], ["Amanda", "Sanches"], ["Maria", "Husain"], ["Michela", "Comune"], ["Vrushali", "Gawankar"], ["Laurette", "Van Den Knaap"], ["Ignacia", "Marin"], ["Eugenia", "Lepchenko"], ["Vanessa", "Alonso Rodriguez"], ["Virginia", "Romero Barrio"], ["Debbie", "Larocque"], ["Ester", "Lasheras Varade"], ["Suci", "Bungaran"], ["Malgorzata", "Kanabus"], ["Megan", "Bradley"], ["Irini", "Alevizopoulou"], ["Sheri", "Esrock"], ["Anne", "Lucas"], ["Virginie", "Rabeau"], ["Segun", "Lesi"], ["Cameron", "Benjamin"], ["Jane", "Odonoghue"], ["Ayano", "Takeuchi"], ["Lenka", "Potocarova"], ["Julie", "Salla"], ["Marie Lisa", "Loriga"], ["Teresa", "Veneruso"], ["Alexis", "King"], ["Audra", "Falk"], ["Karla", "Hall Gonzalez"], ["Chanelle", "Kruger"], ["Liliana", "Hung"], ["Nina", "Zlender"], ["Natalie", "Mikolich"], ["Kristel", "Van Den Tillaart"], ["Sarah", "Mcintyre"], ["Claudia", "Argumedo"], ["Valentina", "Caronti"], ["Shikha", "Uberoi"], ["Stefania", "Chieppa"], ["Mirem", "Rico Nogales"], ["Eugenia", "Subbotina"], ["Noemie", "Ruffin"], ["Kellie", "Browne"], ["Helena", "Norfeldt"], ["Teodora", "Mircheva"], ["Laura", "Levan"], ["Ashley", "Sims"], ["Bettina", "Resch"], ["Vida Lina", "Alpuerto"], ["Jelena", "Dokic"], ["Georgia", "Akrivopoulou"], ["Chun Yan", "He"], ["Mia", "Zecevic"], ["Mariem Nissaf", "Bouchlaka"], ["Ioanna", "Petratou"], ["Maria Fernanda", "Alves"], ["Ioana", "Gaspar"], ["Martina", "Babakova"], ["Olga", "Dzuba"], ["Daniela", "Salomon"], ["Erin", "Burdette"], ["Margarita", "Akbacheva"], ["Jordanna", "Seymour"], ["Kristin", "Martinez"], ["Anja", "Margetic"], ["Marina", "Parashkevova"], ["Daniela", "Hantuchova"], ["Florencia", "Salvadores"], ["Petra", "Vojtaskova"], ["Lauren", "Stephens"], ["Lana", "Popadic"], ["Cecilia", "Cardenas"], ["Simin", "Liu"], ["Tassia", "Sono"], ["Nele", "Landrieux"], ["Ekaterina", "Kozhokhina"], ["Aline", "Quintal"], ["Laetitia", "Zembski"], ["Katrien", "Scott"], ["Renata", "Del Barco Matto"], ["Yoshiko", "Kobayashi"], ["Tomoko", "Nagahisa"], ["Evy", "De Mesmaecker"], ["Anna", "Chachua"], ["Mariana", "Lopez Terribile"], ["Avril", "Martinez"], ["Rocio", "Lopez Pimentel"], ["Bettina", "Pirker"], ["Giorgia", "Brunetti"], ["Story", "Tweedie Yates"], ["Suheil", "Lizana"], ["Rachel", "Cruickshank"], ["Andrea", "Cooper"], ["Katie", "Ruckert"], ["Neuza", "Silva"], ["Kristel", "Izquierdo"], ["Sofia", "Brun"], ["Daniela", "Covello"], ["Anne Valerie", "Evain"], ["Vivian", "Torrez"], ["Ashley", "Kroh"], ["Giorgia", "Nespoli"], ["Eudoxia", "Delisavva"], ["Emily", "Quin"], ["Lena", "Sherbakov"], ["Laura", "Puch"], ["Nishtha", "Yadav"], ["Dianne", "Hollands"], ["Tanja", "Hirschauer"], ["Carmen", "Torres"], ["Virginie", "Razzano"], ["Irina", "Delitz"], ["Maria Emilia", "Salerni"], ["Constanze", "Glockner"], ["Beti", "Sekulovski"], ["Denise", "Ferreira"], ["Judith", "Diaz"], ["Yan Hua", "Dong"], ["Natasha", "Lucki"], ["Giulia", "Baldoni"], ["Patricia", "Starzyk"], ["Liga", "Dekmeijere"], ["Elena", "Tudor"], ["Barbara", "Hoflinger"], ["Magdolna", "Rekasi"], ["Yamini", "Thukkaiandi"], ["Summer", "Bhullar"], ["Norma", "Flautero"], ["Kate", "Boomershine"], ["Lauren", "Breadmore"], ["Marta", "Mir Portell"], ["Dinka", "Hadzic"], ["Michela", "Sala"], ["Desanka", "Jovanovic"], ["Samanthi", "Wijesekera"], ["Petia", "Vousheva"], ["Zvezdelina", "Mladenova"], ["Evgenia", "Subbotina"], ["Borka", "Majstorovic"], ["Petia", "Voucheva"], ["Ceyda", "Keyman"], ["Jane", "Ioaba"], ["Paola", "Guerrero"], ["Kanako", "Kozawa"], ["Kim", "Clijsters"], ["Yuliana", "Fedak"], ["Carolina", "Ojeda"], ["Jacqueline", "Bohannon"], ["Rachel", "Magory"], ["Eun Hye", "Cho"], ["Melanie", "Gerbasi"], ["Davilyn", "Godinet"], ["Bethzabe", "Magadan"], ["Arpi", "Kojian"], ["Ivana", "Sokac"], ["Regina", "Temez"], ["Sophie", "Douchet"], ["Ana Maria", "Zuleta"], ["Hande", "Gorur"], ["Krisel", "Sverko"], ["Monique", "Groen"], ["Carmen", "Marquez"], ["Nan Nan", "Liu"], ["Natalia", "Lifshitz"], ["Anna", "Ioannou"], ["Robin", "Stephenson"], ["Fernanda", "Oliveira Da Silva"], ["Estefania", "Daubiol"], ["Ilona", "Somers"], ["Lore", "De Lille"], ["Teresina", "Paz Soldan"], ["Sayaka", "Yoshino"], ["Yulia", "Klimchenko"], ["Florencia", "Romani"], ["Yuri", "Kasuya"], ["Ketino", "Akhvlediani"], ["Jessica", "Mckeown"], ["Ami", "Fujiwara"], ["Urszula", "Owsiak"], ["Yomna", "Farid"], ["Genevieve", "Charron"], ["Leanne", "Rutherford"], ["Amandine", "Clio"], ["Melissa", "Berry"], ["Jae Eun", "Kim"], ["Sohvi", "Sundqvist"], ["Annabel", "Blow"], ["Joanna", "Zyndzo"], ["Jennifer", "Langer"], ["Natalia", "Tsitouras"], ["Jacqueline", "Frohlich"], ["Cecilia", "Varela"], ["Flor", "Bayon"], ["Jie", "Zheng"], ["Tihana", "Pochobradsky"], ["Chiara", "Gonnelli"], ["Daria", "Potapova"], ["Klara", "Hladka"], ["Tessy", "Van De Ven"], ["Melody", "Paschal"], ["Rachel", "Crismond"], ["Francesca", "Lancini"], ["Danielle", "Plant"], ["Leire", "Etayo"], ["Julia", "Vakulenko"], ["Silvia", "Disderi"], ["Martina", "Dettore"], ["Yukari", "Ochiai"], ["Julia", "Nogueira"], ["Oksana", "Karyshkova"], ["Belen", "Pandre"], ["Patricia", "Van Worcum"], ["Mariela", "Castro"], ["Boglarka", "Berecz"], ["Maria Paz", "Orellana"], ["Raluca Daniela", "Gheorghe"], ["Celine", "Parun"], ["Tijana", "Stojkovic"], ["Erika", "Valdes"], ["Emma", "Murphy"], ["Marie", "Vallety"], ["Caroline Ann", "Basu"], ["Mamiko", "Kawaguchi"], ["Lucia", "Lazo"], ["Marie", "Matrka"], ["Raluca", "Moldovan"], ["Masayo", "Hosokawa"], ["Irina", "Mourachkintseva"], ["Saras", "Arasu"], ["Alena", "Dvornikova"], ["Julia", "Smith"], ["Tadeja", "Sibila"], ["Kimberly", "Buick"], ["Romina", "Sceats"], ["Marcella", "Campana"], ["Marisa", "Howell"], ["Victoria", "Chavleishvili"], ["Debora", "Carmassi"], ["Lucia", "Obysovska"], ["Milica", "Jeremic"], ["Jennifer", "Miccoli"], ["Nikita", "Bhardwaj"], ["Siham Soumeya", "Ben Nacer"], ["Karin", "Ionesco"], ["Agathe", "Macarez"], ["Thi Kim Loi", "Tran"], ["Lisette", "Pereira Aguilar"], ["Elisa", "Balsamo"], ["Paule Andree", "Levasseur"], ["Monika", "Schneider"], ["Suzana", "Maksovic"], ["Donna", "Mc Intyre"], ["Nandini", "Perumal"], ["Lavinia", "Toader"], ["Tatjana", "Nossik"], ["Elena", "Baltacha"], ["Edina", "Gobol"], ["Line", "Elvstrom Ekner"], ["Yuka", "Hatano"], ["Alima", "Mohamed"], ["Christine", "Alford"], ["Laura", "Figuerola Foix"], ["Catherine", "Gunn"], ["Claudine", "Schaul"], ["Hong Thanh", "Tang"], ["Maria Paz", "Orero"], ["Ayaka", "Maekawa"], ["Lucila", "Di Carlo"], ["Anya", "Moyston"], ["Anabella", "Duque"], ["Adriana", "Jerabek"], ["Maja", "Kovacek"], ["Komugi", "Matsui"], ["Michelle", "Grobby"], ["Leeza", "Rooks"], ["Aditi", "Karanjkar"], ["Serra", "Olgac"], ["Daniela", "Murselovic"], ["Aika", "Nonaka"], ["Klara", "Jarova"], ["Ruxandra", "Marin"], ["Chiari", "Aragaki"], ["Jing Jing", "Liu"], ["Ivana", "Abramovic"], ["Elodie", "Rogge Dietrich"], ["Ziarla", "Battad"], ["Esther", "Hijosa Basarte"], ["Ena", "Brankovic"], ["Margit", "Ruutel"], ["Julia", "Biffar"], ["Blair", "Di Sesa"], ["Miroslava", "Velevska"], ["Yimara", "Figueroa"], ["Nadine", "Hassinger"], ["Marta", "Simic"], ["Mitsumi", "Kawasaki"], ["Maria Paola", "Aranguren"], ["Olga", "Borisova"], ["Cheli", "Bargil"], ["Ryoko", "Watanabe"], ["Annette", "Kolb"], ["Zihaida", "Shantalova"], ["Hsin Chieh", "Chang"], ["Anne", "Keothavong"], ["Zita", "Horanyi"], ["Radhika", "Ravji"], ["Ksenia", "Gorbunova"], ["Maria Teresa", "Scott"], ["Sukriti", "Patnaik"], ["Iva", "Saric"], ["Angelica Maria", "Torres"], ["Katri", "Miller"], ["Nichala", "Reddy Boda"], ["Orobosa", "Amadin"], ["Jessica", "Weyreuter"], ["Alexia", "Malbran"], ["Eri", "Nozawa"], ["Alexandra", "Nieto"], ["Karin", "Coetzee"], ["Alexandra", "Popa"], ["Cristina", "Sampaio"], ["Alina Iuliana", "Virsa"], ["Sangaram", "Shangamitra"], ["Cecilia", "Poveda"], ["Marina", "Stanimirov"], ["Yvonne", "Meusburger"], ["Prapaiphan", "Kansuthi"], ["Kim Anh", "Nguyen"], ["Elena", "Poliakova"], ["Liza", "Viplav"], ["Selma", "Andrade"], ["Renata", "Voracova"], ["Kamila", "Dadakhodjaeva"], ["Jitske", "Frankenhuis"], ["Diana", "Espinal"], ["Catalina", "Isaza"], ["Irene", "Mani"], ["Lubomira", "Kurhajcova"], ["April", "Pfannestiel"], ["Vishika", "Chhetri"], ["Myriam", "Cueva"], ["Megan", "Racette"], ["Leigh", "Shelton"], ["Yevgeniya", "Barysheva"], ["Veronica", "Spiegel"], ["Pavia", "Schnattingerova"], ["Yen Hua", "Lu"], ["Yuliya", "Beygelzimer"], ["Ghita", "Mhaoud"], ["Lidia", "Lopez Companys"], ["Eveline", "Rusdianto"], ["Juan Juan", "Cheng"], ["Asimina", "Kaplani"], ["Ana Maria", "Mora"], ["Feriel", "Esseghir"], ["Alexandra", "Kravets"], ["Maria", "Pes"], ["Petra", "Kostelnikova"], ["Neyssa", "Etienne"], ["Brenda", "Coassolo"], ["Nina", "Egger"], ["Ekaterina", "Chatzisavidou"], ["Susanna", "Lingman"], ["Neda", "Mihneva"], ["Maria", "Vlachou"], ["Andreea Mihaela", "Matei"], ["Rattiya", "Hiranrat"], ["Nicolette", "Mechem"], ["Giulia", "Cesari"], ["Natalia", "Dziamidzenka"], ["Irene", "George"], ["Natalia", "Zabala"], ["Aniko", "Kapros"], ["Leonie", "Mekel"], ["Kate", "Jolson"], ["Maria", "Ivanov"], ["Naoe", "Nabetani"], ["Sladana", "Stankovic"], ["Alessandra", "Esposito"], ["Karina", "Torres Ferrer"], ["Dalia", "Coutry"], ["Nermien", "Abaza"], ["Elena", "Kokkinaki"], ["Klara", "Petersson"], ["Kendra", "Strohm"], ["Christina", "Horiatopoulos"], ["Maria Eugenia", "Brito"], ["Barbara", "Murga"], ["Ana Cecilia", "Trevino"], ["Ekaterina", "Ostapenko"], ["Cecilia", "Quarracino"], ["Doria", "Khetib"], ["Kathryn", "Bentley"], ["Gianna", "Doz"], ["Julia", "Acs"], ["Anna", "Anikanova"], ["Sabrina", "Peppl"], ["Nargisa", "Akramova"], ["Adriana", "Herran Giraldo"], ["Julia", "Oussanova"], ["Imane", "Bachi"], ["Berveine", "Mohammed"], ["Rati", "Kumar"], ["Bharathy", "Parthasarathy"], ["Patricia", "Alonso"], ["Zsuzsanna", "Fodor"], ["Timberly", "Greenly"], ["Deborah", "Montero"], ["Joanna", "Carlson"], ["Nicole", "Kriz"], ["Maria Rosa", "Sitja Gibert"], ["Sabrina", "Eisenberg"], ["Barbara", "Polidoro"], ["Lenka", "Snajdrova"], ["Susanne", "Aigner"], ["Hadas", "Zabusky"], ["Ana Lucia", "Migliarini De Leon"], ["Christine", "Stastny"], ["Monica", "Purice"], ["Elizabeth", "Bondi"], ["Sana", "Ben Salah"], ["Renata", "Caceres"], ["Luisa", "Cowper"], ["Hitomi", "Konno"], ["Mia", "Marovic"], ["Jimena", "Alvarez"], ["Kalpita", "Raje"], ["Monika", "Hohenecker"], ["Franziska", "Etzel"], ["Danielle", "Moita"], ["Beatriz", "Becker"], ["Ingeborg", "Kerkhoven"], ["Karina", "Koche"], ["Maria Vanina", "Garcia Sokol"], ["Michelle", "Giang"], ["Aiko", "Nakamura"], ["Geeta", "Manohar"], ["Daniela", "Alvarez"], ["Tiffany", "Smith"], ["Ridhina", "Parekh"], ["Asha", "Jaja"], ["Carmen Raluca", "Tibuleac"], ["Iulia", "Rozgon"], ["Klara", "Zrustova"], ["Ancuta", "Gadalean"], ["Prariyawan", "Ratanakrong"], ["Rachel", "Halligan"], ["Maria Jose", "Dronda Prados"], ["Radha", "Devendrappa"], ["Sevia", "Gonca"], ["Emmanuelle", "Edon"], ["Mareen", "Beermann"], ["Giorgia", "Buchanan"], ["Anupama", "Rajur"], ["Gloria", "Perfetti"], ["Carlotta", "Campus"], ["Tatevik", "Babayan"], ["Nandita", "Chandrasekar"], ["Ji Youn", "Lee"], ["Bruna", "Discordia"], ["Mika", "Tanaka"], ["Yan Ze", "Xie"], ["Jackie", "Carleton"], ["Anne Priska", "Schaefer"], ["Marie France", "Lord Andrade"], ["Melissa", "Schaub"], ["Yan Sr", "Zhang"], ["Tina", "Schiechtl"], ["Cynthia", "Goulet"], ["Marianna", "Laasanen"], ["Yukiyo", "Hara"], ["Li", "Yan"], ["Galina", "Fokina"], ["Sylwia", "Domanska"], ["Ayumi", "Ichikawa"], ["Francesca", "Savinelli"], ["Petroena", "Fong"], ["Elise", "Tamaela"], ["Alice", "Barnes"], ["Alice", "Joy"], ["Akiko", "Yonemura"], ["Zuzana", "Melicherova"], ["Ingunn", "Eiriksdottir"], ["Wen Hao", "Wu"], ["Jessie", "De Vries"], ["Sara", "Badran"], ["Rankin", "Williams"], ["Dan", "Yu"], ["Clara", "Rios"], ["Petra", "Baksa"], ["Daniela", "Munoz Gallegos"], ["Vanessa", "Nieto"], ["Andrea", "Liniger"], ["Justine", "Walsh"], ["Marie Pier", "Pouliot"], ["Natalia", "Garbellotto"], ["Mouna", "Sabri"], ["Melissa", "Torres Sandoval"], ["Marta", "Sanchez Soto"], ["Caroline", "Neves"], ["Rocio", "Villar Gonzalez"], ["Mia", "Van Rooyen"], ["Bit Na", "Lee"], ["Nancy", "Cazares"], ["Nadezda", "Samoylo"], ["Dvora", "Marsha"], ["Julia", "Roca Valverde"], ["Rebecca", "Rankin"], ["Yao", "Zhang"], ["Emily", "Arnott"], ["Hea Mi", "Kim"], ["Catarina", "Ferreira"], ["Merve", "Koksal"], ["Maarit", "Nieminen"], ["Ludivine", "Cassagne"], ["Silvia", "Tiscareno"], ["Masha", "Bayser"], ["Rocio", "Govantes"], ["Erika", "Miyamoto"], ["Chantelle", "Simpson"], ["Paula", "Marama"], ["Natalia", "Coronel"], ["Diana", "Julianto"], ["Assia", "Halo"], ["Clodagh", "Mcmorrow"], ["Elena", "Vianello"], ["Helen", "Broome"], ["Sofia", "Arvidsson"], ["Rossella", "Sartore"], ["Mio", "Kinjo"], ["Cheng Jie", "Lu"], ["Severine", "Dhondt"], ["Jennifer", "Magley"], ["Sayaka", "Takahara"], ["Kathrin", "Woerle"], ["Yulia", "Ustyuzhanina"], ["Daniela", "Martinez"], ["Gergana", "Ganeva"], ["Holly", "Mckee"], ["Crystel", "Mulder"], ["Yevheniia", "Savranska"], ["Sofia", "Holden"], ["Hsiao Han", "Chao"], ["Matulanda", "Lumanauw"], ["Rediet", "Kefyalew"], ["Laura", "Morales Hernandez"], ["Virginie", "Oulevay"], ["Camille", "Dubois"], ["Sonia", "Iacovacci"], ["Elena", "Toulgaridou"], ["Majen", "Immink"], ["Kei", "Sekine"], ["Tanya", "Volkova"], ["Vana", "Mrazovic"], ["Mansi", "Majeji"], ["Bronwyn", "Williams"], ["Noelia", "Leon"], ["Jenny", "Zambrano"], ["Jessica", "Simosa"], ["Gloriann", "Lopez"], ["Megan", "Emmett"], ["Raissa", "Gourevitch"], ["Jana", "Cabak"], ["Nathalie", "Roels"], ["Shu Jin", "Xie"], ["Aminat", "Taiwo"], ["Rachel", "Janssen"], ["Marie Gaiane", "Mikaelian"], ["Kira", "Bezverkova"], ["Tereza", "Sandova"], ["Tsitsi", "Masviba"], ["Nikolina", "Hrankova"], ["Patricia", "Munoz Santana"], ["Ninja", "Pfuetzenreuter"], ["Hanna", "Nooni"], ["Melanie", "Marois"], ["Haruka", "Nakamura"], ["Hollie", "Bees"], ["Merve", "Asimgil"], ["Marzia", "Carchesio"], ["Jaclyn", "Lucas"], ["Karin", "Lems"], ["Audrey", "Wahl"], ["Chanelle", "Scheepers"], ["Mi Hee", "Jung"], ["Yik Hui", "Leow"], ["Lindsey", "Puchyr"], ["Ana Milena", "Ramirez"], ["Michaela", "Bjornstrom"], ["Erika", "Reggiane"], ["Charise", "Godoy"], ["Caroline", "Raba"], ["Elena", "Mitrofanova"], ["Eveline", "Vanhyfte"], ["Monika", "Peciulionyte"], ["Nelly", "Maillard"], ["Caroline", "Skrzypczyk"], ["Giorgia", "Mortello"], ["Mariana", "Junqueira"], ["Nikkita", "Fountain"], ["Veronica", "Grigis"], ["Bintou", "Barry"], ["Maretha", "Van Niekerk"], ["Mayu", "Araki"], ["Laura", "Vignoni"], ["Mariana Pires", "Junqueira"], ["Christina", "Obermoser"], ["Magdalena", "Von Geyr"], ["Marianna", "Keranen"], ["Angela", "Piedrahita"], ["Samantha", "Stosur"], ["Kim", "Rudman"], ["Marion", "Leuillier"], ["Jean", "Willmann"], ["Yuka", "Matsumoto"], ["Melanie", "Roy"], ["Rowena", "Baierl"], ["Ema", "Janaskova"], ["Dorian", "Driessen"], ["Bo", "Verhulsdonk"], ["Pascale", "Leroy"], ["Yael", "Glitzenstein"], ["Alexandra", "Zerkalova"], ["Nisrine", "Hajbane"], ["Diana Nur", "Fatimah"], ["Darija", "Jurak"], ["Vanessa", "Valdivia"], ["Caroline", "Hartmann"], ["Michaela", "Beck"], ["Aleksandra", "Kostikova"], ["Tatiana", "Tamburini"], ["Hazar", "Sidki"], ["Miki", "Mori"], ["Haruka", "Fujishiro"], ["Jorgelina", "Barrera"], ["Samrita", "Sekar"], ["Elena", "Silina"], ["Cristina", "Cabello Gonzalez"], ["Seble", "Woldegebriel"], ["Mamatha", "Nandakumar"], ["Monika", "Krauze"], ["Lauren", "Cheung"], ["Kyung Mi", "Noh"], ["Ashlesha", "Lokhande"], ["Shilpa", "Joshi"], ["Emelie", "Reutersward"], ["Dominika", "Nociarova"], ["Alexandra", "Zadoryn"], ["Sue", "Rossano"], ["Sheenagh", "Cosgrove"], ["Volha", "Dubovik"], ["Ragini", "Vimal"], ["Zarah", "De Silva"], ["Yoo Mi", "Jung"], ["Wilawan", "Choptang"], ["Sunna Kristina", "Barthel"], ["Maria", "Perez Garcia"], ["Nuria", "Roig Tost"], ["Emilie", "Bacquet"], ["Celina", "Grondin"], ["Miho", "Tanaka"], ["Katy", "Sauboi"], ["Frederique", "Desire"], ["Katherine", "Rammo"], ["Andrea", "Riedlmajerova"], ["Zuzana", "Palovic"], ["Nino", "Esebua"], ["Mojca", "Mileta"], ["Inga", "Prodinger"], ["Daniela", "Lopez"], ["Julie", "Merle"], ["Lina", "Krasnoroutskaya"], ["Virginia", "Tomatis"], ["Giorgia", "Mondani"], ["Christelle", "Gerin"], ["Nelly", "Iglesias Vazquez"], ["Joanna", "Sakowicz Kostecka"], ["Casey", "Cross"], ["Mireia", "Gol Alamo"], ["Davinia", "Lobbinger"], ["Marketa", "Pastikova"], ["Aspasia", "Sotiriadou"], ["Martina", "Matouskova"], ["Ryo", "Takahashi"], ["Nasheli", "Martinez"], ["Sanja", "Todorovic"], ["Pornrampha", "Pramualsuk"], ["Bianca", "Acquistapace"], ["Desire", "Roset Torres"], ["Mariana", "Melo"], ["Miriam", "Sommer"], ["Daniela", "Casanova"], ["Natasa", "Sijakovic"], ["Sofia", "Haggstrom"], ["Dominique", "Van Boekel"], ["Bojana", "Minic"], ["Paula", "Fondevila Castro"], ["Estefania", "Aldana Estremera"], ["Gaia", "Tanganelli"], ["Sayuri", "Takeshima"], ["Judit", "Llorens"], ["Irina", "Bulykina"], ["Nicoleta", "Ratiu"], ["Julie", "Smekodub"], ["Douglas", "Wink"], ["Kana", "Okawa"], ["Luisa", "Obando"], ["Sabrina", "Echavarria"], ["Kelly", "Taylor"], ["Katharina", "Alberti"], ["Natalia", "Bogdanova"], ["Rebecca", "Dandeniya"], ["Meryem", "Lahlou"], ["Mia", "Kurek"], ["Eleftheria", "Makromaridou"], ["Bruna", "Gelbecke"], ["Raquel", "Martins"], ["Joneca", "Meurling"], ["Barbora", "Strnadova"], ["Karishma", "Mulay"], ["Chen", "Li"], ["Priyanka", "Mehta"], ["Caroline", "Korsawe"], ["Rebecca", "Fong"], ["Bettina", "Cremasco"], ["Carine", "Vermeulen"], ["Shereen", "Youssef"], ["Aibika", "Kalsarieva"], ["Amani", "Khalifa"], ["Katharina", "Jacob"], ["Lucia", "Henkle Gomez"], ["Melissa", "Applebaum"], ["Claudia", "Corral"], ["Iveta", "Gerlova"], ["Anca", "Anastasiu"], ["Carmela", "Carro"], ["Eva", "Hrdinova"], ["Tereza", "Veverkova"], ["Sarah", "Tami Masi"], ["Katherina", "Trumpf"], ["Laura", "Ganzer"], ["Sae Mi", "Lim"], ["Elizaveta", "Avdeeva"], ["Ani", "Nazari"], ["Sarah", "Wright"], ["Kirsty", "Mcrae"], ["Maria Pilar", "Sanchez Alayeto"], ["Maria Jose", "Sanchez Alayeto"], ["Jessica", "Stein"], ["Fernanda", "Luiz"], ["Abiodun", "Bamigbade"], ["Constanze", "Steiner"], ["Akgul", "Amanmuradova"], ["Mariapia", "Quagliozzi"], ["Iulia", "Dogarescu"], ["Maria", "Penkova"], ["Thelara", "Louw"], ["Angelina", "Minova"], ["Aurelie", "Bejar"], ["Kristen", "Schlukebir"], ["Sharon", "Marin"], ["Natsumi", "Hamamura"], ["Elena", "Baranova"], ["Petra", "Dizdar"], ["Vanessa", "Ridolfo"], ["Elisabeth", "Bahn"], ["Nelly", "Dvornicka"], ["Julie Ann", "Cadiente"], ["Daniela", "Kocetkova"], ["Carolina", "Pimenta"], ["Yulia", "Fitri"], ["Elena", "Uzunova"], ["Sayaka", "Yoshimoto"], ["Lizanne", "Marais"], ["Amber", "Liu"], ["Shenay", "Perry"], ["Eva", "Wang"], ["Claudia", "Calderon"], ["Anna", "Hawkins"], ["Daniela", "Bercek"], ["Jeong Eun", "Park"], ["Uschi", "Van Doren"], ["Lucy", "Brooks"], ["Michelle", "Gerards"], ["Piia", "Suomalainen"], ["Georgette", "Wright"], ["Milana", "Borisev"], ["Marjorie", "Sindal"], ["Marina", "Tishkova"], ["Hayley", "Rudman"], ["Elin", "Stahl Johansson"], ["Mai", "Fujii"], ["Lenka", "Dlhopolcova"], ["Emily", "Webley Smith"], ["Julia", "Babilon"], ["Dominika", "Dieskova"], ["Sophie Anne", "Cerbon"], ["Khushleen", "Bains"], ["Alexandra", "Mikhailova"], ["Maria Jose", "Argeri"], ["Tomoyo", "Takagishi"], ["Gabrielle", "Baker"], ["Danielle", "Wiggins"], ["Patrizia", "Cacciaguerra"], ["Noriko", "Saruta"], ["Irina", "Smirnova"], ["Azusa", "Konishi"], ["Diana", "Srebrovic"], ["Ajda", "Brumen"], ["Nadzeya", "Lysak"], ["Sylwia", "Ziolkowska"], ["Nina", "Suvak"], ["Saray", "Pino Vega"], ["Karolina", "Nowak"], ["Gabriela", "Amezaga"], ["Reina", "Ishihara"], ["Essi", "Laine"], ["Viola", "Wacker"], ["Aleksandra", "Cekic"], ["Ana", "Vrljic"], ["Servane", "Delobelle"], ["Asli", "Turksoy"], ["Jana", "Deylova"], ["Tanner", "Cochran"], ["Rocio", "Amadio"], ["Miranda", "Foley"], ["Sandra", "Spadzinski"], ["Verena", "Beller"], ["Danielle", "Steinberg"], ["Eva Maria", "Hoch"], ["Nathalie", "Garcia Jaminet"], ["Samantha", "Hammond"], ["Azzurra", "Fonsmorti"], ["Tamara", "Day"], ["Hitomi", "Fujii"], ["Tania", "Aguirre"], ["Alona", "Bondarenko"], ["Eva", "Birnerova"], ["Nicola", "Slater"], ["Shayma Seif", "El Sisi"], ["Pamela", "Fogel"], ["Dorottya", "Magas"], ["Kelly", "Mcnabney"], ["Lara", "Del Saz"], ["Valentina", "Sulpizio"], ["Lara", "Del Saz De Soto"], ["Omolola", "Oredugba"], ["Zsofia", "Szabo"], ["Danielle", "Downey"], ["Mihaela", "Sicoe"], ["Katja", "Blocker"], ["Ling", "Yan"], ["Montserrat", "Ferrer"], ["Cristina", "Mecho Ruiz"], ["Anna", "Lubinsky"], ["Lilly", "Cal Fong"], ["Petra", "Bajerovska"], ["Pavlina", "Ticha"], ["Dina", "Naffa"], ["Svetlana", "Kouzmenko"], ["Elena", "Besedova"], ["Meghha", "Vakaria"], ["Helena", "Besovic"], ["Patricia", "Holzman"], ["Chullaluck", "Phocharoen"], ["Farida", "Agustina"], ["Purnima", "Shakaalya"], ["Tetiana", "Luzhanska"], ["Zuzana", "Zemenova"], ["Vera", "Zvonareva"], ["Ji Young", "Lee"], ["Mariana", "Conde"], ["Natasa", "Krklec Jerinkic"], ["Iza", "Ferreira"], ["Stephanie", "Greau"], ["Angela", "Ahtemenciuc"], ["Laura", "Harkness"], ["Muattar", "Abdukhalikova"], ["Georgia", "Gonzalez Massot"], ["Yuko", "Uchida"], ["Hilda", "Zuleta Cabrera"], ["Christian", "Thompson"], ["Catrina", "Thompson"], ["Mariona", "Nadal Ribelles"], ["Rebecca", "Cooper"], ["Arianne", "Gajasan"], ["Nathalie", "Wallin"], ["Annabel", "Youthed"], ["Sakiko", "Shimizu"], ["Iyabo", "Ogunwole"], ["Anna", "Korotkova"], ["Megan", "Schmulbach"], ["Saori", "Kaneko"], ["Minori", "Takemoto"], ["Anne Sophie", "Vidal"], ["Dan Feng", "Liu"], ["Kazusa", "Ito"], ["Klaudia", "Jans Ignacik"], ["Noha", "Mohsen"], ["Mai Huynh", "Huynh"], ["Alexa", "Geldenhuys"], ["Anna Lee", "Bryant"], ["Irina", "Lykina"], ["Ornela", "Basaric"], ["Caroline", "Hammond"], ["Angela", "Haynes"], ["Alexis", "Prousis"], ["Sabita", "Maharaj"], ["Analia", "Hermida"], ["Monika", "Goel"], ["Al", "Sasaki"], ["Laura", "Pous Tio"], ["Maria", "Jedlickova"], ["Clemence", "Castel"], ["Marion", "Bartoli"], ["Marina", "Bernshtein"], ["Jelena", "Bukulin"], ["Iryna", "Bremond"], ["Shu Jing", "Yang"], ["Lucia", "Sainz Pelegri"], ["Monique", "Viele"], ["Milene", "Souza"], ["Alyssa", "Rodriguez"], ["Christa", "Magister"], ["Mija", "Kresic"], ["Maria Jose", "Lopez Herrera"], ["Denisa", "Pavlikova"], ["Katrina", "Bandere"], ["Pamela", "Fernandez"], ["Daisy", "Ames"], ["Pilar", "Escandell Planells"], ["Dragica", "Lozina"], ["Tiana", "Lum Tucker"], ["Jie", "Hao"], ["Preeti", "Rao"], ["Jana", "Simurkova"], ["Medhini", "Sharma"], ["Stephanie", "Krappl"], ["Noopur", "Desai"], ["Yee", "Wong"], ["Elizabeth", "Thomas"], ["Patricia", "Chang"], ["Michala", "Bzdusekova"], ["Kristina", "Bezakova"], ["Paola", "Dominguez"], ["Kokoro", "Takehara"], ["Meriem", "Zitouni"], ["Kumi", "Fukui"], ["Kristin", "Messmer"], ["Anna", "Berlin"], ["Karolina", "Sprem"], ["Maika", "Ozaki"], ["Lisa", "Tognetti"], ["Nicola", "Mooney"], ["Sandra", "Denis"], ["Mimi", "Renaudin"], ["Maral Khachik", "Awanes"], ["Agustina", "Arechavaleta"], ["Liliana", "Aguilera"], ["Dominique", "Toliravo"], ["Amanda", "Pratzel"], ["Laura Ramona", "Husaru"], ["Miriam", "Palacios"], ["Ntswaki", "Mawela"], ["Mariana", "Correa"], ["Gurianna", "Korinihona"], ["Leila", "Salek"], ["Jessica", "Iniguez"], ["Rijana", "Puljic"], ["Valisoa", "Rafolomanantsiatosika"], ["Andrea", "Di Leo"], ["Katie", "Robinette"], ["Andrea", "Martinez"], ["Gabriela", "Marcu"], ["Daniela", "Kix"], ["Manami", "Fukada"], ["Megumi", "Sugimura"], ["Zi", "Yan"], ["Estefania", "Vela"], ["Margaretha", "Novianti"], ["Helena", "Sinitshin"], ["Blakeley", "Griffith"], ["Paola", "Gamarra"], ["Jennifer", "Chay"], ["Claudia", "Kuleszka"], ["Marina", "Tavares"], ["Aleksandra", "Rosolska"], ["Laura", "Gordon"], ["Ilona", "Giberte"], ["Scarlett", "Werner"], ["Jenny", "Zika"], ["Sanem", "Irem"], ["Valentina", "Salani"], ["Renee", "Lampret"], ["Luisa", "Barcaui"], ["Kim", "Coventry"], ["Steffi", "Bachofer"], ["Margot", "Carter"], ["Ly Huong", "Dinh"], ["Novianti", "Warsono"], ["Kristin", "Cargill"], ["Maria", "Serra"], ["Ilaria", "Pibiri"], ["Elena", "Luri"], ["Daniela", "Caljkusic"], ["Klaudia", "Wlodarczyk"], ["Vanja", "Mikovic"], ["Maria Paz", "Jimenez Barquero"], ["Karina", "Jarlkaganova"], ["Lucy", "Johnson"], ["Edina", "Gallovits Hall"], ["Norie", "Kojima"], ["Tenille", "Elias"], ["Johann", "Fernandes"], ["Angelique", "Widjaja"], ["Lakschmi", "Van Der Wart"], ["Marcela", "Arroyo Vergara"], ["Kanistha", "Sritawan"], ["Karamontree", "Siriluethaiwattana"], ["Helene", "Stephens"], ["Stefani", "Falconi"], ["Naoko", "Eto"], ["Kesy", "Moison"], ["Galina", "Voskoboeva"], ["Aleta", "Sungkono"], ["Debbrich", "Feys"], ["Azza", "Abbou"], ["Lucia", "Krzelj"], ["Mari", "Inoue"], ["Amy", "Toth"], ["Ana", "Jovanovic"], ["Alexandra", "Mcgoodwin"], ["Maria Angela", "Ferreira"], ["Ivana", "Platenikova"], ["Antonia", "Matic"], ["Anne Linn", "Perez"], ["Nuria", "Hernandez"], ["Shahlio", "Ibadullaeva"], ["Liana Gabriela", "Ungur"], ["Hermione", "Roukassian"], ["Adriana", "Bedoya"], ["Amanda", "Saiontz"], ["Romy", "Farah"], ["Pavlina", "Akritas"], ["Nicole", "Fintell"], ["Adriana", "Szili"], ["Samia", "Medjahdi"], ["Astrid", "Waernes Garcia"], ["Ji Sook", "Kim"], ["Julianna", "Gates"], ["Antoinette", "Mmoh"], ["Phemelo", "Mogapi"], ["Chin Wei", "Chan"], ["Marcela Ivon", "Rodezno Hernandez"], ["Marina", "Chaves Moledo"], ["Gulshah", "Esen"], ["Paola", "Ravano"], ["Magdalena", "Costa"], ["Andreea", "Horobeanu"], ["Eleni", "Karakeke"], ["Malika", "Bouakel"], ["Chia Jung", "Chuang"], ["Eugenia", "Kranioti"], ["Margarita", "Karnaukhova"], ["Robyn", "Baker"], ["Mateja", "Spes"], ["Alessia", "Zinga"], ["Erin", "Heeder"], ["Agnes", "Paischer"], ["Hsiu Ting", "Huang"], ["Nadja", "Kusterer"], ["Jacinta", "Agim"], ["Nivin", "Kezbari"], ["Karly", "Olson"], ["Natalie", "Ko"], ["Ristine", "Olson"], ["Samantha", "Galinier"], ["Tsukasa", "Yamaguchi"], ["Sarah", "Andrews"], ["Elke", "Clijsters"], ["Nora", "Quintal"], ["Alison", "Silverio"], ["Feila", "Mahiddiene"], ["Laetitia", "Allegrini"], ["Ilaria", "Ziche"], ["Stella", "Sondang"], ["Cory Ann", "Avants"], ["Andreea", "Seserman"], ["Magdalena", "Tokarska"], ["Jessica", "Hubbard"], ["Moe", "Tsubuku"], ["Jessica", "Orselli"], ["Marise", "Botha"], ["Roxana", "Abdurakhmonova"], ["Angel", "Saleh"], ["Swetha", "Devaraj"], ["Lianne", "Supperstone"], ["Paula", "Zabala"], ["Victoria", "Zabala"], ["Catalina", "Angeleri"], ["Marcia", "Secondo"], ["Andrea", "Pazmino"], ["Stefanie", "Halder"], ["Gisela", "Dulko"], ["Fatima Zohra", "Benboubker"], ["Ciara", "Finucane"], ["Audrey", "Bergot"], ["Kamini", "Murugaboopathy"], ["Emily", "Mowery"], ["Dianne Kenneth", "Matias"], ["Sladjana", "Kos"], ["Nino", "Szownadze"], ["Nadejda", "Vassileva"], ["Marta", "Fraga Perez"], ["Dan", "Li"], ["Jessie", "Rochefort"], ["Petra", "Cetkovska"], ["Soledad", "Esperon"], ["Veronica", "Del Piano"], ["Nikhila", "Narra"], ["Nadia", "Pope"], ["Natalie", "Luft"], ["Tea", "Popaja"], ["Christyn", "Lucas"], ["Laura", "Fernandez"], ["Casey", "Dellacqua"], ["Leda", "Pesatova"], ["Lizette", "Carrillo Morales"], ["Sevvy", "Gallios"], ["Sabrina", "Piccolo"], ["Kathrin", "Hegel"], ["Chen Chen", "Gao"], ["Cristina", "Celani"], ["Karin", "Zibar"], ["Carla", "Barciela Rodriguez"], ["Isabel", "Barciela Rodriguez"], ["Julia", "Efremova"], ["Suzanne", "Jones"], ["Vicky", "Navia"], ["Joanne", "Akl"], ["Nathalia", "Papadopolou"], ["Kristina", "Geraniou"], ["Milica", "Veselinovic"], ["Karina", "Grigorian"], ["Jessica", "Obi"], ["Yuri", "Kurashima"], ["Beatrix", "Csordas"], ["Sanne", "Van Den Biggelaar"], ["Bieke", "Serruys"], ["Gabriela", "Duch"], ["Zsuzsanna", "Babos"], ["Emily", "Applegate"], ["Audrey", "Moronval"], ["Alice", "Covatta"], ["Linda", "Mair"], ["Caroline", "Forstner"], ["Ganna", "Butkevych"], ["Larikah", "Russell"], ["Jelena", "Jankovic"], ["Verena", "Amesbauer"], ["Natalia", "Cretu"], ["Vanessa", "Guerrero"], ["Shaniek", "Pinder"], ["Su Jin", "Kim"], ["Christine", "Simpson"], ["Natalie", "Castro"], ["Juanas", "Miras Navarro"], ["Matea", "Mezak"], ["Olga", "Pasichnichenko"], ["Elena", "Volobueva"], ["Giovanna", "Di Lauro"], ["Ariana", "Marshall"], ["Sarah", "Pang"], ["Lucie", "Kriegsmannova"], ["Janja", "Gersic"], ["Aine", "Leonard"], ["Sabrina", "Lopes"], ["Larissa", "Carvalho"], ["Theresa", "Logar"], ["Jin A", "Lee"], ["Megan", "Moulton Levy"], ["Zeynep Melis", "Altinay"], ["Isioma", "Usoegbu"], ["Hannah", "Kuervers"], ["Miria", "Bartels"], ["Sun Jung", "Kim"], ["Klara", "Jagosova"], ["Hitomi", "Sugata"], ["Federica", "Quercia"], ["Anna", "Vitosinskaya"], ["Cristina", "Condon"], ["Joana", "Laranjinha"], ["Sadvika", "Saboo"], ["Laura", "Heckler"], ["Carla", "Genovese"], ["Monika", "Kolbovic"], ["Eri", "Mikami"], ["Amanda", "Fish"], ["Klaudia", "Halasz"], ["Simone", "Wienbeck"], ["Martine", "Belle"], ["Erica", "Tironi"], ["Ahsha", "Rolle"], ["Claire", "Ricketts"], ["Maia", "Ram"], ["Sanda", "Mamic"], ["Natalie", "Frazier"], ["Bethanie", "Mattek Sands"], ["Sandra", "Gwiggner"], ["Lata", "Assudani"], ["Andreea", "Novaceanu"], ["Chloe", "Gambey"], ["Martine", "Castonguay"], ["Ivana", "Jovanovic"], ["Micaela", "Moran"], ["Eva", "Valkova"], ["Ene", "Ogbu"], ["Udanthi", "Narahenpitage"], ["Marielle", "Wallin"], ["Claudia", "Kardys"], ["Elisabetta", "Gianella"], ["Cinthia", "Saucedo"], ["Tsippy", "Waterman"], ["Olivia", "Salgi"], ["Maria", "Castanera Rodriguez"], ["Rachael", "Porsz"], ["Thuy Dan", "Nguyen"], ["Gabriela", "Velasco Andreu"], ["Henrietta", "Ogude"], ["Eun Jeong", "Hwang"], ["Juana", "Miras Navarro"], ["Lisa", "Fung Kee Fung"], ["Kai Feng", "Yi"], ["Covadonga", "Garcia Calvo"], ["Olga", "Carrasco"], ["Ana", "Abad"], ["Valentina", "Tizzano"], ["Carolina", "Olmo"], ["Hermine", "Sukiasyan"], ["Helen", "Fritche"], ["Temitope", "Bamidele"], ["Tiffany", "Welford"], ["Breda", "Kovac"], ["Vivien", "Sepuka"], ["Eva", "De Block"], ["Anais", "Laurendon"], ["Sandra", "Sasidharan"], ["Ekaterina", "Burduli"], ["Anabela", "Plasencia"], ["Mariana", "Cutuk"], ["Tamara", "Tanner"], ["Jelena", "Djordjevic"], ["Kelly", "Anderson"], ["Brittany", "Brown"], ["Sigurlaug", "Sigurdardottir"], ["Kveta", "Hajkova"], ["Tereza", "Kotasova"], ["Brooke", "Rogers"], ["Kristina", "Kormuthova"], ["Chiara", "Gatto"], ["Chen", "Shen"], ["Iva", "Plachkova"], ["Andrea", "Koch Benvenuto"], ["Katerina", "Teplizki"], ["Nivedita", "Venkatesh"], ["Mathilde", "Johansson"], ["Isha", "Lakhani"], ["Joanne", "Mayne"], ["Yenisleydis", "Calana Rodriguez"], ["Montinee", "Tangphong"], ["Veronika", "Litvinskaya"], ["Villa", "Daniella"], ["Audrey", "Banada"], ["Gabriela", "Ziliotto"], ["Ashley", "Harkleroad"], ["Zineb", "Ibnmajdoub"], ["Nina", "Spaeth"], ["Gemma", "Olle Poma"], ["Sayaka", "Umeda"], ["Bonnie", "Baird"], ["Serena", "Bergomi"], ["Maja", "Sundac"], ["Mhari", "Neish"], ["Xi", "Jin"], ["Mai", "Hatanaka"], ["Anna", "Blagodarova"], ["Laura", "Mcgaffigan"], ["Milena", "Kachar"], ["Johanna", "Dahlback"], ["Anastasia", "Shevchenko"], ["Darya", "Ivanov"], ["Annabella", "Weigert"], ["Elsa", "Trigueros Sanchez"], ["Khanita", "Sritawan"], ["Madina", "Rakhim"], ["Kristyna", "Horakova"], ["Amanda", "Hellberg"], ["Gabriella", "Rowe"], ["Olivia", "Beltrame"], ["Fleur", "Van Haasteren"], ["Czarina Mae", "Arevalo"], ["Smaranda", "Stan"], ["Maria Jose", "Sastre Comas"], ["Maria", "Zivcicova"], ["Karen", "Rombouts"], ["Ummarahmat", "Hummetova"], ["Anuradha", "Gurung"], ["Antonia", "Aposteanu"], ["Caitlin", "Collins"], ["Weronika", "Bloczynska"], ["Dominika", "Wojtal"], ["Alicia", "Serrano"], ["Krishna", "Logeswari"], ["Anna", "Tyshing"], ["Nika", "Ozegovic"], ["Lucie", "Hradecka"], ["Egle", "Petrauskaite"], ["Jasmina", "Hamzic"], ["Krushmi", "Chheda"], ["Ashlee", "Davis"], ["Maria Belen", "Corbalan"], ["Anica", "Wuensche"], ["Mariya", "Koryttseva"], ["Nadege", "Vergos"], ["Andra", "Stanculescu"], ["Gal Li", "Kaplan"], ["Sasha", "Abraham"], ["Vittoria", "Maglio"], ["Eleonora", "Punzo"], ["Danielle", "Brown"], ["Maria Clara", "Fernandez Bruera"], ["Kristina", "Michalakova"], ["Sandra", "Beltran"], ["Natalia", "Pervitskaya"], ["Hayley", "St Leger"], ["Natalie", "Dean"], ["Romy", "Lion"], ["Agni", "Patsourakou"], ["Andreea", "Nitescu"], ["Katarina", "Kachlikova"], ["Maria", "Arkhipova"], ["Ljubica", "Avramovic"], ["Elli", "Kokoliou"], ["Maria Jesus", "Sol Hernandez"], ["Yuka", "Hosoya"], ["Isabel", "Jarosz"], ["Anna Lena", "Groenefeld"], ["Katerina", "Kocibova"], ["Luz Maria", "Lafranconi"], ["Ekaterina", "Bychkova"], ["Tanja", "Markovic"], ["Tina", "Jacob"], ["Natasha", "Kersten"], ["Damilola", "Olufeko"], ["Anca", "Vladean"], ["Sunthree", "Arphanukul"], ["Marina", "Pantovic"], ["Kaia", "Kanepi"], ["Iris", "Ichim"], ["Carolina", "Franco"], ["Patricia", "Huelin Alvarez"], ["Linsey", "Jacks"], ["Tarryn", "Rudman"], ["Patricia", "Manzur"], ["Blanca", "Martinez Perez"], ["Kartika", "Halim"], ["Tereza", "Svicova"], ["Naia", "Lartategui Uriarte"], ["Latavra", "Andriashvili"], ["Nina", "Knavs"], ["Tory", "Zawacki"], ["Devina", "Saedi"], ["Virag", "Nemeth"], ["Anna", "Spivakovski"], ["Cintha Karrie Shanaz", "Putri"], ["Zuzanna", "Grochocka"], ["Myriam", "Casanova"], ["Linda", "Agazzi"], ["Sara", "Anundsen"], ["Graciela", "Ailloud"], ["Martina", "Sedivec"], ["Atsumi", "Koga"], ["Monica", "Hoz De Vila"], ["Zobaida", "Mottola"], ["Tania", "Martinez Jimenez"], ["Avel Romaly", "Coronado"], ["Karen", "Saravia"], ["Svetlana", "Kuznetsova"], ["Nina", "Bratchikova"], ["Bettina", "Gabbe"], ["Preethi", "Mukundan"], ["Elena", "Gantcheva"], ["Sylvia", "Montero"], ["Julia", "Gandia Gomez"], ["Eleonora", "Fornai"], ["Marutha", "Devi"], ["Cayetana", "Barbed Isusi"], ["Annita", "Stylianidou"], ["Anna", "Anoufrieva"], ["Nancy", "Rustignoli"], ["Anna", "Powaska"], ["Alexandra", "Hirsch"], ["Bianca", "Dulgheru"], ["Malin", "Grimshorn"], ["Amal", "Basha"], ["Meryem", "Tazi"], ["Nai Yu", "Wang"], ["Sveta", "Kaladzko"], ["Simona Iulia", "Matei"], ["Alicia", "Espinoza"], ["Hanne", "Camassa"], ["Xenia", "Roman"], ["Guadalupe", "Ubeda"], ["Oksana", "Uzhylovska"], ["Claudia", "Strauss"], ["Shadisha", "Robinson"], ["Yasmin", "Ulrich"], ["Federica", "Balzani"], ["Jelena", "Jovic"], ["Guadalupe", "Padilla"], ["Hsiao Wen", "Chao"], ["Caroline", "Haider"], ["Kanaka", "Tsujimura"], ["Valeria", "Galouza"], ["Lubica", "Nadasska"], ["Melissa", "Dakkak"], ["Sarah", "Gray"], ["Megan", "Falcon"], ["Emma", "Tomlinson"], ["Liz", "Cruz"], ["Miriam", "Cruz"], ["Alejandra", "Ripoll"], ["Julia", "Roach"], ["Anita", "Jordan"], ["Patricia", "Miro"], ["Tatsiana", "Uvarova"], ["Nana", "Tsuchiya"], ["Virginie", "Cappoen"], ["Petra", "Teller"], ["Patricia", "Miro Bussman"], ["Yuri", "Nagano"], ["Lucia", "Gonzalez"], ["Dian", "Anggraini"], ["Olga", "Boulytcheva"], ["Alexis", "Panton"], ["Ana", "Kovacevic"], ["Martina", "Alabiso"], ["Ilham", "Nadir"], ["Maria Joao", "Antunes"], ["Marcela", "Montanha"], ["Yukiko", "Nakanishi"], ["Fernanda", "Caputi"], ["Cassy", "Fabiani"], ["Shiho", "Tanaka"], ["Julia Maria", "Arguello"], ["Viktoria", "Konstantinova"], ["Marieke", "De Jong"], ["Houda", "Yasri"], ["Nathalia", "Rodrigues"], ["Carla", "Zabaleta"], ["Linda", "Smolenakova"], ["Hala", "Sufi"], ["Steffi", "Van Elten"], ["Julia", "Matojan"], ["Whitney", "Benik"], ["Carmel", "Meachen"], ["Zuzana", "Valicekova"], ["Fabienne", "Clavel"], ["Silvia", "Genisova"], ["Priyanka", "Parekh"], ["Elizabeth", "Walker"], ["Marina", "Khomenko"], ["Emilie", "Trouche"], ["Marija", "Miladinovic"], ["Aleksandra", "Jecmenica"], ["Emily", "Kwok"], ["Emma", "Zuleta"], ["Simona", "Patti"], ["Mandy", "Septoe"], ["Milena", "Chisaca"], ["Philippa", "Taul"], ["Asami", "Satozaki"], ["Paola", "Gamboa"], ["Anne", "Yelsey"], ["Elodie", "Navarro"], ["Sonali", "Sanap"], ["Olena", "Tsutskova"], ["Ting Wen", "Wang"], ["Julia", "Gandia"], ["Alexandra", "Podkolzina"], ["Diana", "Arutyunova"], ["Chirashanthi", "Rajur"], ["Cassi", "Fabiani"], ["Hedvig", "Lofdahl"], ["Emi", "Hirayama"], ["Matilde", "Munoz Gonzalves"], ["Samia", "Jalali"], ["Elena", "Ryabtseva"], ["Jin Jie", "Gong"], ["Veera", "Nurmi"], ["Julie", "Fratoni"], ["Marianna", "Yuferova"], ["Ebere", "Fortune"], ["Kumiko", "Anzai"], ["Agata", "Komorowska"], ["Marianne", "Baker"], ["Alexandra Alina", "Petcu"], ["Yuka", "Kuroda"], ["Nikoleta", "Kipritidou"], ["Julia", "Wieckowski"], ["Larisa", "Gorodetsky"], ["Natsumi", "Tsubo"], ["Lucie", "Telinova"], ["Oxana", "Lyubtsova"], ["Nadja", "Pavic"], ["Elena", "Stoianova"], ["Jennifer", "De Bodt"], ["Pallavi", "Sharma"], ["Alice", "Botto"], ["Ji Young", "Kim"], ["Marnie", "Mahler"], ["Anastasia", "Michail"], ["Anastasia", "Belova"], ["Pascale", "Schnitzer"], ["Aneta", "Turaj"], ["Siobhan", "Oneill"], ["Chelsea", "Orr"], ["Sirma Aysen", "Bingeli"], ["Sheryl", "Gershon"], ["Victoria", "Sharpley"], ["Stacia", "Fonseca"], ["Kelley", "Hyndman"], ["Viviana", "Yrureta"], ["Carina", "Bjornstrom"], ["Kristin", "Schuler"], ["Katharina", "Rath"], ["Deepanwita", "Chakrabarty"], ["Jae Hee", "Lyoo"], ["Miriam", "Rahali"], ["Christy", "Greenly"], ["Ria", "Sabay"], ["Tajna", "Lukas"], ["Yoshimi", "Tanaka"], ["Lourdes", "Pascual Rodriguez"], ["Alessandra", "Carta"], ["Kristina", "Movsesyan"], ["Reem", "Raouf"], ["Pichaya", "Laosirichon"], ["Maryori", "Franco"], ["Claudia", "Hirt"], ["Florence", "Haring"], ["Michal", "Amir"], ["Vasiliki", "Simouli"], ["Bojana", "Cecez"], ["Diana", "Cardenas Azcarate"], ["Rebecca", "Llewellyn"], ["Haruka", "Tachiki"], ["Miglana", "Nenova"], ["Asami", "Saeki"], ["Andrea", "Ryan"], ["Laura", "Moares"], ["Maria", "Rakhmanina"], ["Bianca", "Itner"], ["Sandra", "Zahlavova"], ["Marina", "Aniutin"], ["Courtney", "Vernon"], ["Tanya", "Sharma"], ["Natalia", "Gordeeva"], ["Dayane", "Silva"], ["Daiany", "Luchi"], ["Katie", "Muller"], ["Christina", "Birtchnell"], ["Flavia", "Mignola"], ["Kuburat", "Akintunde"], ["Laura", "Quintanilla Vidal"], ["Yasemin", "Elgi"], ["Jovana", "Jakouliev"], ["Irina", "Smislova"], ["Ana", "Higer"], ["Anna", "Karavayeva"], ["Iciri", "Rai"], ["Moe", "Kawatoko"], ["Aiko", "Yamada"], ["Sunitha", "Rao"], ["Sandra", "Volk"], ["Julia", "Paetow"], ["Yuka", "Izumi"], ["Zorayma", "Arreola"], ["Rosanne", "Dimech"], ["Anna", "Jaen Seire"], ["Michaela", "Michalkova"], ["Gisel", "Brito"], ["Betty", "Tesfu"], ["Jennifer", "Seide"], ["Ekaterina", "Koubinina"], ["Cecile", "Baijot"], ["Alana", "Van Der Vort"], ["Joyce", "Ardies"], ["Ekaterina", "Hirtopanu"], ["Maja", "Mesanovic"], ["Liu Ling", "Wang"], ["Natalie", "Beck"], ["Caroline", "Martin"], ["Saffet Seden", "Soyalp"], ["Miki", "Miyamura"], ["Frances", "Hendry"], ["Asami", "Suzuki"], ["Tinesta", "Rowe"], ["Kristina", "Solodovnikova"], ["Vonjiniana", "Rasamuel"], ["Laura", "Rocchi"], ["Cornelia", "Lassonczyk"], ["Birgit", "Ritschka"], ["Martina", "Stigliano"], ["Ana Carolina", "Pancia"], ["Danielle", "Kypreos"], ["Tega", "Richard"], ["Joanne", "Schickerling"], ["Anna", "Bastrikova"], ["Darina", "Berkova"], ["Renee", "Mullinger"], ["Kyung Mi", "Park"], ["Rawya", "Seif"], ["Lindsey", "Nelson"], ["Maya", "Wakui"], ["Lena", "Keothavong"], ["Neda", "Kozic"], ["Nosrat", "Zeidan"], ["Karin", "Hamanaka"], ["Mandy", "Minella"], ["Pauline", "Wong"], ["Nicole", "Leimbach"], ["Zuzana", "Zalabska"], ["Antonia", "Nugent"], ["Vanessa", "Esteves"], ["Jenna", "Long"], ["Maria Sol", "Rotondo"], ["Daron", "Moore"], ["Cassandra", "Chan"], ["Hristiana", "Gocheva"], ["Krystel", "Sauvageau"], ["Jelena", "Zivanovic"], ["Alicja", "Rosolska"], ["Beatriz", "Belda Mullor"], ["Krizia", "Borgarello"], ["Alesa", "Bagola"], ["Miina", "Luebbe"], ["Adriana", "Solarova"], ["Nian Ze", "Liu"], ["Svenja", "Haymann"], ["Darina", "Sedenkova"], ["Jessica", "Lopez Lopez"], ["Si Nga", "Lee"], ["Larissa", "Deschamps"], ["Aya", "Oasa"], ["Katy", "Shaw"], ["Anja", "Prislan"], ["Sarah", "Wray"], ["Monica", "Wiesener"], ["Rebecca", "Spinello"], ["Lara", "Garcia"], ["Lucia", "Jimenez Almendros"], ["Brianna", "Williams"], ["Renata", "Ljukovcan"], ["Lucia", "Garcia"], ["Gala", "Gasset Pinon"], ["Jharna", "Nansi"], ["Yuka", "Inoue"], ["Iva", "Roj"], ["Katie", "Taylor"], ["Martina", "Bartosova"], ["Renata", "Veiga"], ["Kristi", "Miller"], ["Ana", "Corbett"], ["Doo Ri", "Na"], ["Olakunbi", "Abass"], ["Whitney", "Robards"], ["Marion", "Gaud"], ["Katarina", "Panakova"], ["Magdalena", "Maranda"], ["Brook", "Connelly"], ["Marcela", "Vanegas Bello"], ["Valerie", "Chin"], ["Lindsey", "Pereira"], ["Karen", "Kozangian"], ["Chiara", "Marraghini"], ["Elena", "Marraghini"], ["Salome", "Devidze"], ["Andrea", "Vargas"], ["Ruya", "Inalpulat"], ["Madelaine", "Madelaire"], ["Carolina", "Seixas"], ["Su Wei", "Hsieh"], ["Anna Maria", "Miller"], ["Ronak", "Shah"], ["Barbara", "Costa"], ["Dima", "Al Saadi"], ["Sarah", "Schulze"], ["Amanda Marie", "Taylor"], ["Romina", "Manas Rodriguez"], ["Shuai", "Peng"], ["Martina", "Bregola"], ["Kirsten", "Flipkens"], ["Jovana", "Stankovic"], ["Diana", "Salas"], ["Virginia", "Bigliardi"], ["Marina", "Viliamovskaia"], ["Sonya", "Kumar"], ["Darya", "Kryvets"], ["Daniela", "Bracaglia"], ["Sabrina", "Capannolo"], ["Eleonora", "Taddei"], ["Nina", "Maglatyuk"], ["Carolina", "Salge"], ["Renata", "De Sanctis"], ["Jae Hee", "Joung"], ["Daria", "Chemarda"], ["Stefanie", "Leushuis"], ["Maria", "Bordons Ortiz"], ["Linda", "Svarena"], ["Marta", "Domachowska"], ["Irina", "Kuzmina"], ["Ana Lilia", "Salas"], ["Lisa", "Nystrom Skold"], ["Almira", "Hallyeva"], ["Sarah", "Raab"], ["Rie", "Imai"], ["Karla", "Portillo"], ["Yue", "Yu"], ["Astrid", "Tixier"], ["Varinia", "Soler Bravo"], ["Holly", "Bagshaw"], ["Anzhelika", "Balyuk"], ["Whitney", "Deason"], ["Luci", "Barlow"], ["Danielle", "Harmsen"], ["Arantxa", "Garcia Millan"], ["Olga", "Brozda"], ["Fatimah", "Abinu"], ["Mar", "Gonzalez Perez"], ["Shu Hwei", "Huang"], ["Kristel Ann", "Samala"], ["Melissa", "Gibb"], ["Nina", "Jauch"], ["Dubravka", "Cupac"], ["Elizabeth", "Dolan"], ["Ana", "Brandusan"], ["Claire", "Carnez"], ["Yang Guang", "Zhao"], ["Alejandra", "Obregon"], ["Amanda", "Jasso"], ["Marina", "Garcia Vertiz"], ["Pauline", "Parmentier"], ["Kaori", "Onishi"], ["Soo Mi", "Yoo"], ["Luciana", "Sarmenti"], ["Angelita", "Detudamo"], ["Yadira", "Geara"], ["Ana", "Abramovic"], ["Olexandra", "Verkhniatska"], ["Da Jung", "Hong"], ["Lara", "Giltinan"], ["Nicole", "Shabaz"], ["Ariela", "Perez"], ["Ivanna", "Israilova"], ["Macall", "Harkins"], ["Neha", "Uberoi"], ["Vasilisa", "Davydova"], ["Leila", "Hodzic"], ["Giada", "Calabretta"], ["Estefania", "Salvador Martinez"], ["Lina", "Stanciute"], ["Celine", "Beermann"], ["Paula", "Arevalo"], ["Laura", "Popescu"], ["Sabina", "Korsunova"], ["Vera", "Leontieva"], ["Chen Yee", "Liaw"], ["Riza", "Zalameda"], ["Bianca", "Chidrawi"], ["Pernille", "Orloff Sattari"], ["Eden", "Marama"], ["Charlene", "Tsangamwe"], ["Michaela", "Carvanova"], ["Chun Mei", "Ji"], ["Emilia", "Yorio"], ["Joanie", "Macken"], ["Alexandra", "Orasanu"], ["Laura", "Bredniak"], ["Hagar", "Caro"], ["Veronica", "Saucedo"], ["Anita", "Ivancevic"], ["Georgina", "Hingley"], ["Fernanda", "Vargas"], ["Linda", "Blank"], ["Ghadihela", "Flores"], ["Caroline", "Lagedamont"], ["Katarzyna", "Siwosz"], ["Sarah", "Benad"], ["Tamar", "Akhobadze"], ["Kelly", "De Beer"], ["Lizaan", "Du Plessis"], ["Elsa", "Serrano Eduards"], ["Alba", "Esteve Blanch"], ["Maria Antonia", "Vives Barquiel"], ["Sarah", "Coles"], ["Claire", "Feuerstein"], ["Melanie", "Oosterhof"], ["Margaryta", "Dolzhenko"], ["Dragana", "Jakovljevic"], ["Julia", "Dziedzic"], ["Ludivine", "Choisel"], ["Bracha", "Weisman"], ["Virginie", "Ayassamy"], ["Dominika", "Zuzulova"], ["Harpreet", "Gill"], ["Marta", "Brandani"], ["Katherine", "Laporta"], ["Beatriz", "Fernandez"], ["Zora", "Mark"], ["Katrin", "Glatz"], ["Natalia", "Yakimovich"], ["Maria Ignacia", "Gioria"], ["Lei", "Huang"], ["Alexandria", "Liles"], ["Helene", "Lindstrand"], ["Roxana", "Dragan"], ["Pynar", "Nergiz"], ["Imke", "Reimers"], ["Andreja", "Klepac"], ["Ayumi", "Oka"], ["Sabrina", "Wist"], ["Katharine", "Baker"], ["Michal", "Bar"], ["Annette", "Pohjalainen"], ["Yasmin", "Del Arco"], ["Delia", "Sescioreanu"], ["Nisha", "Nair"], ["Kady", "Pooler"], ["So Jung", "Kim"], ["Megan", "Sandwith"], ["Sophie", "Ferguson"], ["Sylwia", "Niedbalo"], ["Jolanta", "Twarowska"], ["Tarryn", "Terblanche"], ["Anna", "Niemiec"], ["Anne Marie", "Brodeur Fontaine"], ["Paola", "Iovino"], ["Sarah", "Gbadamosi"], ["Valerie", "Meise"], ["Emma", "Laine"], ["Tara", "Wigan"], ["Laura", "Bastos"], ["Melanie", "Hafner"], ["Erica", "Sauer"], ["Barbora", "Zahlavova Strycova"], ["Chinenye Ndidi", "Izuogu"], ["Romina", "Oprandi"], ["Geraldine", "Roma"], ["Adriana", "Gonzalez Penas"], ["Quan", "Gao"], ["Roxana Ianula", "Dragan"], ["Sandy", "Gumulya"], ["Galina", "Kostova"], ["Chihiro", "Tan"], ["Aya", "El Akkad"], ["Alexandra", "Kazanova"], ["Lolita", "Frangulyan"], ["Clelia", "Melena"], ["Diana", "Vranceanu"], ["Barbara", "Pocza"], ["Camelia", "Todorova"], ["Eleni", "Betsiou"], ["Alexandra", "Korotkevich"], ["Polina", "Zaretser"], ["Ana Cristina", "Moreno"], ["Whitney", "Mccray"], ["Allison", "Baker"], ["Patricia", "Ribeiro"], ["Ela", "Kaludjer"], ["Maria Laura", "Zarza"], ["Pavlina", "Smatova"], ["Varsha", "Meena"], ["Silvana", "Bauer"], ["Elena", "Grazioso"], ["Katrina", "Elder Bush"], ["Varvara", "Galanina"], ["Lucy", "Fletcher"], ["Jennifer", "Migan"], ["Cristina", "Matera"], ["Varvara", "Timofeeva"], ["I Hui", "Chang"], ["Sanne", "Holtkamp"], ["Audra", "Cohen"], ["Tina", "Obrez"], ["Anna Viktoria", "Lind"], ["Beatriz", "Pena Lueza"], ["Jennifer", "Poskitt"], ["Yasuko", "Saruta"], ["Marinne", "Giraud"], ["Christina", "Zgera"], ["Aurelija", "Miseviciute"], ["Stephanie", "De Laet"], ["Rosidah", "Kusuma Dewi"], ["Ann Marie", "Modric"], ["Dinara", "Safina"], ["Timna", "Ticic"], ["Ana Cecilia", "Olivos"], ["Monika", "Musilova"], ["Katarina", "Tuohimaa"], ["Esther", "Van Londen"], ["Hanne Skak", "Jensen"], ["Sofia", "Canarte"], ["Virginia", "Donda"], ["Mariana", "Aconcha"], ["Maria", "Krasnova"], ["Ana Paula", "Saviole"], ["Katie", "Obrien"], ["Melanie", "South"], ["Ekaterina", "Dzehalevich"], ["Julia", "Hodes"], ["Elina", "Sichakova"], ["Malvina", "De La Canal"], ["Eva", "Fernandez Brugues"], ["Andrea", "Davidova"], ["Cigdem", "Duru"], ["Miray", "Eshak"], ["Caroline", "Oduor"], ["Pemra", "Ozgen"], ["Lumay", "Diaz Hernandez"], ["Marion", "Fleury"], ["Meng", "Yuan"], ["Mi", "Yoo"], ["Andrea", "Benitez"], ["Ana Luna", "Gonzalez Munoz"], ["Ginte", "Pociute"], ["Anastasia", "Sourkova"], ["Sofia", "Avakova"], ["Daniela", "Krejsova"], ["Natasa", "Vuckovic"], ["Jitka", "Gavdunova"], ["Vanessa", "Gutierrez"], ["Canna", "Furuta"], ["Nandia", "Tenni"], ["Elena", "Petrucciano"], ["Catalina", "Cruz Gomez"], ["Vanessa", "Heute"], ["Tiffany", "Tucker"], ["Varvara", "Lepchenko"], ["Andrea", "Morgado"], ["Dora", "Kiss"], ["Elizabeth", "Lumpkin"], ["Laura", "Ferreira"], ["Celia", "Durkin"], ["Margot", "Torre"], ["Vendula", "Plechata"], ["Maia", "Semerdjieva"], ["Darya", "Kustova"], ["Natalie", "Solevski"], ["Austin", "Smith"], ["Dora", "Delgadillo"], ["Carolina", "Ardila Cuervo"], ["Masa", "Pozar"], ["Yana", "Zavialova"], ["Andreea Laura", "Niculescu"], ["Anett", "Kaasik"], ["Dragica", "Stanojlovic"], ["Rita", "Esteves De Freitas"], ["Gabriela", "Niculescu"], ["Viktoria", "Lytovchenko"], ["Iginia", "Tilocca"], ["Alessia", "La Monaca"], ["Ping", "Jia"], ["Klara", "Kufova"], ["Liudmyla", "Latysheva"], ["Tina", "Schmassmann"], ["Yuliya", "Kulbitskaya"], ["Thassha", "Vitayaviroj"], ["Vanessa", "Masalles"], ["Tiya", "Rolle"], ["Janette", "Bejlkova"], ["Karolina", "Rejniak"], ["Elna", "De Villiers"], ["Maiko", "Ohmi"], ["Pauline", "Bourdet Fontaine"], ["Mareike", "Molchin"], ["Irina", "Tkachenko"], ["Alaknanda", "Jadhav"], ["Manuela", "Santos"], ["Michelle", "Aybar"], ["Tanya", "Klenkoski"], ["Alexandra", "Demidova"], ["Alisee", "Hirt"], ["Clelia", "Deltour"], ["Ludmila", "Stavila"], ["Maria", "Alvaro"], ["Karolina", "Kosinska"], ["Kana", "Watanabe"], ["Yuka", "Mori"], ["Hee Sun", "Lyoo Suh"], ["Mariana", "Weschenfelder"], ["Nidhi", "Shah"], ["Marta", "Melis"], ["Nana", "Urotadze"], ["Alyssa Ann", "Labay"], ["Vilma", "Macheda"], ["Gabriela", "Cazares"], ["Julia", "Pugach"], ["Carly", "Petit"], ["Lenka", "Jaloviecova"], ["Anna", "Gil Mares"], ["Selen", "Surel"], ["Jenny", "Broughall"], ["Valentina", "Franchini"], ["Henrietta", "Habler"], ["Constanza", "Politi"], ["Emi", "Nozaki"], ["Valeria", "Muratori"], ["Svetlana", "Tsykhanskaya"], ["Miyoko", "Takahashi"], ["Ji Sun", "Kim"], ["Bianca", "Nocella"], ["Alina", "Sufiarova"], ["Ana Maria", "Gonzalez Leon"], ["Morena", "De Bernardi"], ["Tanya", "Ridzevskaya"], ["Kewa", "Nichols"], ["Antonia Xenia", "Tout"], ["Anne", "Dickhardt"], ["Antonia", "Toth"], ["Ghazaleh", "Torkaman"], ["Michelle", "Snyman"], ["Maria Rossana", "Vega Saguier"], ["Bertille", "Van Marque"], ["Irina", "Buryachok"], ["Mari", "Andersson"], ["Angela", "Garcia Mosquera"], ["Jaclyn", "Schokman"], ["Sarah", "Gronert"], ["Yana", "Nemerovski"], ["Adriana", "Fonseca Villarroel"], ["Juliana", "Cordero"], ["Katherine", "Wittgruber"], ["Paloma", "Ruiz Blanco"], ["Caroline", "Carpentier"], ["Vanja", "Corovic"], ["Ana", "Tomasevic"], ["Kaja", "Smole"], ["Naina", "Karsolia"], ["Mahesha", "Seneviratne"], ["Fernanda", "Martins"], ["Sara", "Simbula"], ["Liliana", "Pereira"], ["Edita", "Milos"], ["Natalia", "Sanchez"], ["Pasquale", "Jansma"], ["Min Jung", "Jeon"], ["Larissa", "Wuehrl"], ["Beier", "Ko"], ["Hye Min", "Lee"], ["Celine", "Vaure"], ["Lika", "Chkuaseli"], ["Claire", "De Gubernatis"], ["Ayako", "Isogai"], ["Tatiana", "Zhukovskaya"], ["Saranya", "Pattabhi"], ["Andrea", "Pera"], ["Tina", "Trautmann"], ["Andrea", "Brenes"], ["Saori", "Hosogai"], ["Patience", "Otali"], ["Seheno", "Razafindramaso"], ["Shilpa", "Goel"], ["Lucy", "Scott"], ["Lisa", "Sabino"], ["Claudia", "Jorda Fernandez"], ["Charlene", "Vanneste"], ["Fang", "Liu"], ["Mabel", "Rodriguez"], ["Sarina", "Mueller"], ["Michaela", "Babicova"], ["Karolina", "Soor"], ["Wing Shan", "Cheung"], ["Rita", "Gerecz"], ["Elizabeth", "Ferris"], ["Zhanna", "Nemykina"], ["Roxana", "Martinez"], ["Elena", "Vesnina"], ["Yawna", "Allen"], ["Melissa", "Ryan"], ["Lara", "Picone"], ["Asako", "Sato"], ["Jana", "Bielikova"], ["Irina", "Malashok"], ["Amanpreet", "Kaur"], ["Deniz", "Atas"], ["Lorena", "Villalobos Cruz"], ["Julia", "Sack"], ["Melissa", "Silva"], ["Kateryna", "Bondarenko"], ["Catalina", "Villegas Garcia"], ["Anca", "Dumitru"], ["Veronique", "Parke Bedard"], ["Andrea", "Hlavackova"], ["Milena", "Araujo"], ["Tarakaa", "Bertrand"], ["Whitney", "Jones"], ["Melanie", "Wolkersberger"], ["Jessica", "Leitch"], ["Savi", "Sehrawat"], ["Maya", "Rosa"], ["Patricia", "Lopez Illan"], ["Melisa", "Cabrera Handt"], ["Laura", "Hernandez"], ["Katerina", "Mazackova"], ["Shraddha", "Lodha"], ["Kinga", "Kozlowska"], ["Swathika", "Kandhaswany"], ["Ya Wen", "Lee"], ["Stephanie", "Pace"], ["Alexandra", "Glushenko"], ["Cristina", "Visico"], ["Krista", "Sanders"], ["Jessica", "Mezo"], ["Ina", "Sireteanu"], ["Gira", "Schofield"], ["Natalie", "Orourke"], ["Lilian", "Asuaje"], ["Marina", "Spakova"], ["Yukako", "Kato"], ["Carmen", "Pinto"], ["Andreia", "Ribeiro"], ["Sylvia", "Krywacz"], ["Jolien", "Kroese"], ["Sonia", "Fondevila Castro"], ["Jamea", "Jackson"], ["Paola", "Doldan Gonzalez"], ["Maria Aless", "Termini"], ["Sharon Nosipho", "Makhanya"], ["Ruchita", "Shetty"], ["Paulina", "Zuniga"], ["Pakrpa", "Pramualsuk"], ["Michelle", "Blattler"], ["Kim", "Stierli"], ["Yulia", "Stupak"], ["Alice", "Balducci"], ["Maiara", "Olivera"], ["Anna Maria", "Zubori"], ["Alice", "Mackenzie"], ["Yeon Ju", "Kim"], ["Elena", "Bavassano"], ["Fabiana", "Ferraro Arce"], ["Julia", "Chergova"], ["Sarah", "Mclaren"], ["Kirsty", "Woolley"], ["Hanane", "Toumi"], ["Giorgia", "Pontoglio"], ["Marcia", "Almada"], ["Manjot", "Marwah"], ["Amina", "El Sahn"], ["Irina", "Kotkina"], ["Roni", "Gilboa"], ["Tamar", "Kvaratskhelia"], ["Hendrike Lea", "Heitmann"], ["Georgia", "Rose"], ["Septi", "Mende"], ["Jennifer", "Elie"], ["Beatris", "Simion"], ["Tamara", "Bartkowiak"], ["Heidi", "El Tabakh"], ["Katerina", "Avdiyenko"], ["Osariemen", "Airhunmwunde"], ["Tracy", "Lin"], ["Karima", "Ait Ali Yahia"], ["Sara", "Abutovic"], ["Martina", "Braun Schultz"], ["Kristina", "Nedelcheva"], ["Patricia", "Coimbra"], ["Shannon", "Golds"], ["Parul", "Goswami"], ["Marissa", "Espinoza"], ["Maria Emma", "Quiroz"], ["Vera", "Dushevina"], ["Laila", "Abdala"], ["Bianca", "Salame"], ["Vindya", "Dayananda"], ["Sonia", "Eguizabal Saracho"], ["Federica", "Van Adrichem"], ["Bethan", "Lewis"], ["Annette", "Aksdal"], ["Claudia", "Puddu"], ["Lara", "Alexander"], ["Evelyn", "Enunwah"], ["Dunja", "Antunovic"], ["Juri", "Komatsu"], ["Katy", "Scarisbrook"], ["Suzanna", "Mansour"], ["Yuka", "Higashi"], ["Iris", "Elias"], ["Daniela", "Ciganikova"], ["Tamara", "Bunic"], ["Tong", "Gao"], ["Daowadueng", "Phonkan"], ["Nicole", "Buitoni"], ["Anastasia", "Cherkashin"], ["Micaela", "Acosta"], ["Rebecca", "Dare Mccann"], ["Anna", "Lapushchenkova"], ["Chia Li", "Chen"], ["Diana", "Santillan Fernandez"], ["Sara", "Tarraso Barber"], ["Ryoko", "Fuda"], ["Marielle", "Weihs"], ["Valentina", "Bontempi"], ["Adriana", "Jaskova"], ["Yoo Ri", "Bae"], ["Ankita", "Bhambri"], ["Biljana", "Gajic"], ["Chiaki", "Okadaue"], ["Nel", "Ben Ami"], ["Francesca", "Flavell"], ["Stephanie", "Dubois"], ["Yumi", "Miyazaki"], ["Anastasia", "Yakimova"], ["Erica", "Kosova"], ["Erin", "Jobe"], ["Nicole", "Pitts"], ["Alexia", "Virgili"], ["Stamatia", "Fafaliou"], ["Marta", "Torres Torres"], ["Barbara", "Krzesinska"], ["Rebeca", "Molina"], ["Cora", "Vasilescu"], ["Alba", "Berdala Grive"], ["Danielle", "Cosgrove"], ["Gabriela", "Matekova"], ["Pichnita", "Songsanu"], ["Patricia", "Mayr Achleitner"], ["Ivana", "King"], ["Mihaela Alina", "Stanila"], ["Alina", "Stanila"], ["Mai", "Takeda"], ["Karina", "Tomaszewska"], ["Nozomi", "Aiba"], ["Monika", "Lesniakova"], ["Luiza", "Borges"], ["Susana", "Hernandez"], ["Ana", "Jerman"], ["Ana Catalina", "Guerrero"], ["Yi", "Chen"], ["Tania", "Miro Garcia Pozuelo"], ["Patrycja", "Komarska"], ["Ashley", "Joelson"], ["Shu Yi", "Zhang"], ["Velena", "Mamutova"], ["Sania", "Mirza"], ["Malin", "Sjoqvist"], ["Ketevan", "Okruashvili"], ["Monika", "Dancevic"], ["Laura", "Zelder"], ["Katerina", "Bohmova"], ["Emily", "Ottsen"], ["Michaela", "Bartlova"], ["Andreea Patricia", "Braica"], ["Nadezda", "Gorbachkova"], ["Caroline", "Bailly"], ["Eva", "Pera"], ["Alice", "Izomor"], ["Patrycja", "Sanduska"], ["Link", "Leskosky"], ["Teodora Lavinia", "Cazan"], ["Michela", "Trabalioni"], ["Carly", "Gullickson"], ["Daria", "Holodnik"], ["Ivana", "Gelo"], ["Carina", "Hirsch"], ["Tatiana", "Grechukhina"], ["Rebekka", "Haenle"], ["Ainsley", "Fairhead"], ["Diane", "Filip"], ["Tamara", "Jugo"], ["Ashel", "Dimi"], ["Evgenia", "Linetskaya"], ["Veronika", "Kapshay"], ["Amanda", "Fink"], ["Mirella", "Ramic"], ["Jung Eun", "Kim"], ["Audrey", "Robert Bordeleau"], ["Jenifer", "Widjaja"], ["Maria Del Mar", "Ceron"], ["Tania", "Hernandez"], ["Ana", "Milosavljevic"], ["Amy", "Robinson"], ["Fabiana", "Gomez"], ["Catherine", "Grotz"], ["Melissa", "Mang"], ["Anna", "Egorova"], ["Tammy", "Kevey"], ["Larisa", "Bekmetova"], ["Andrea", "Lipovska"], ["Meritxell", "Gol Alamo"], ["Bianca", "Gorbea"], ["Claire", "Ilcinkas"], ["Ileana Camelia", "Necea"], ["Roseta", "Navarro Pons"], ["Filomena", "Nisi"], ["Yurika", "Sema"], ["Abiodun", "Oyegoke"], ["Kelcy", "Tefft"], ["Nadia", "Solomon"], ["Tamara", "Novoselac"], ["Airi", "Hagimoto"], ["Frances", "Miller"], ["Monika", "Drabkova"], ["Mariel", "Rosales Martinez"], ["Maria", "Moya"], ["Irina", "Steirer"], ["Sonja", "Viskovich"], ["Yoshimi", "Kakuta"], ["Mathilde", "Cor"], ["Estefania", "Craciun"], ["Anastasia", "Antoniadou"], ["Carla", "Bell"], ["Rui", "Du"], ["Maria", "Stepanova"], ["Norzafira", "Taufik"], ["Jasmin", "Jessenk"], ["Alexandra", "Recio Linares"], ["Arancha", "Recio Linares"], ["Olga", "Panova"], ["Bruna", "Paes"], ["Ghizela", "Schutte"], ["Neda", "Katalina"], ["Carmen", "Klaschka"], ["Isabela", "Kulaif"], ["Doris", "Graus"], ["Christian", "Tara"], ["Katarina", "Zoricic"], ["Shannon", "Robinson"], ["Makere", "Bradnam"], ["Seika", "Takahara"], ["Suzana", "Kuffner"], ["Minami", "Endo"], ["Mari", "Tanaka"], ["Jia", "Lin"], ["Daniella", "Jeflea"], ["Alessandra", "Jordan"], ["Pavlina", "Glosova"], ["He Wen Fei", "Li"], ["Michaela", "Schumichrastova"], ["Ekaterina", "Afinogenova"], ["Michaela", "Bressan"], ["Paola", "Cervantes"], ["Jessica", "Homberg"], ["Alex", "Graebe"], ["Anna", "Klebleeva"], ["Elina", "Arutyunova"], ["Soizette", "Simmons"], ["Masa", "Zec Peskiric"], ["Sheng Nan", "Sun"], ["Zeynep Asli", "Naibi"], ["Claudia", "Smolders"], ["Katerina", "Sidorovich"], ["Maria", "Kirilenko"], ["Renata", "Kucerkova"], ["Aleksandra", "Zdeb"], ["Lerissa", "Maurice"], ["Kanae", "Hisami"], ["Maria Paula", "Aguirre"], ["Flor", "Reyes"], ["Karin", "Vodickova"], ["Yuna", "Kikawa"], ["Laura", "Rodriguez Navas"], ["Eunice", "David"], ["Elvira", "Serrot Geminelli"], ["Alexandra Iulia", "Iacob"], ["Stephanie", "Bengson"], ["Elenora", "Pedonese"], ["Anna Marie", "Atelj"], ["Elena", "Oslyakova"], ["Wiveca", "Swarting"], ["Alla", "Ivanova"], ["Sagarika", "Phadke"], ["Tanja", "Kovacevic"], ["Dominique", "Damian"], ["Rohini", "Das"], ["Lucie", "Safarova"], ["Ann Kathrin", "Gerk"], ["Isamarie", "Perez"], ["Jia Bao", "Yin"], ["Kartiki Vijay", "Bhat"], ["Hind", "Belkarmouss"], ["Sasha", "Fisher"], ["Kara", "Fisher"], ["Pamela", "Russo"], ["Rachel", "Wilhelm"], ["Lejla", "Hodzic"], ["Maria", "Babich"], ["Lina", "Benkirane"], ["Olga", "Alexeeva"], ["Nika", "Kukharchuk"], ["Stefania", "Pesce"], ["Angelina", "Ledovskaya"], ["Alexandra", "Valarezo"], ["Brittany", "Baldy"], ["Tinatin", "Kavlashvili"], ["Polona", "Rebersak"], ["Claire", "Peterzan"], ["Bruna", "Cunha"], ["Varsha", "Shivashankar"], ["Sariya", "Khairova"], ["Randi", "Schuler"], ["Nargiza", "Ibragmova"], ["Alejandra", "Guerra"], ["Kunigunda", "Dorn"], ["Michaela", "Matejickova"], ["Nan", "Dong"], ["Elisa", "Salis"], ["Katrine", "Christensen"], ["Lisanne", "Balk"], ["Misato", "Tashiro"], ["Lina", "Fettah"], ["Kanisha", "Mehta"], ["Pamela", "Duran Vinueza"], ["Vanesa", "Furlanetto"], ["Estrella", "Cabeza Candela"], ["Giulia", "Gabba"], ["Alina", "Sullivan"], ["Aleksa", "Costa"], ["Jessi", "Robinson"], ["Yuka", "Ueda"], ["Maren", "Kassens"], ["Marketa", "Postranecka"], ["Catriona", "Stewart"], ["Lei", "Feng"], ["Natalia", "Bubien"], ["Zuzana", "Chmelarova"], ["Tijana", "Koprivica"], ["Kelli", "Zahnel"], ["Natia", "Tsiklauri"], ["Nudnida", "Luangnam"], ["Jennifer Lee", "Heinser"], ["Eun Hee", "Sung"], ["Marlena", "Metzinger"], ["Valentina", "Vasilieva"], ["Saskia", "Adomat"], ["Megumi", "Takahashi"], ["Alanna", "Rodgers"], ["Anne", "Schaefer"], ["Danica", "Krstajic"], ["Jessica", "Engels"], ["Jovana", "Rasovic"], ["Olga", "Tsoi"], ["Kristina", "Barysheva"], ["Ji Hyun", "Oh"], ["Alba", "Ramos Segarra"], ["Laura", "Haberkorn"], ["Jitka", "Kleisnerova"], ["Michelle", "Mitchell"], ["Jessica", "Williams"], ["Jacquelyn", "Visinski"], ["Anna", "Chakvetadze"], ["Akiko", "Yoshizawa"], ["Nanis", "El Essaily"], ["Rebeca", "Bou Nogueiro"], ["Julia", "Doci"], ["Abby", "Hedges"], ["Carolina", "Escamilla"], ["Maria", "Garcia Planas"], ["Jana", "Mackova"], ["Keri", "Robison"], ["Haruna", "Shimizu"], ["Coral", "Morales"], ["Melodia", "Morales"], ["Asli", "Semizoglu"], ["Preethi", "Subramaniam"], ["Milana", "Yusupov"], ["Laura", "Viquez"], ["Aravane", "Rezai"], ["Julia", "Sloboda"], ["Ludmila", "Arias Moreno"], ["Yana", "Sadovskaya"], ["Ewa", "Losinski"], ["Preethi", "Shravan"], ["Ivana", "Lisjak"], ["Amanda", "Rales"], ["Fabiana", "Mak"], ["Anna", "Berezka"], ["Dalia Primaver", "Garza"], ["Anna", "Amato"], ["Thaddea", "Lock"], ["Caroline", "Larsson"], ["Ara", "Micayabas"], ["Sonya", "Haggstrom"], ["Marta", "Salgueiro Freixenet"], ["Sarah", "Schneider"], ["Anna", "Sidorovitch"], ["Shan Shan", "Song"], ["Sandra", "Zmak"], ["Anne", "Gylling"], ["Paulina", "Bigos"], ["Dina", "Senkina"], ["Monica", "Mir Daud"], ["Chandra", "Capozzi"], ["Jung Ha", "Lee"], ["Anna", "Novo"], ["Romina", "Mrochen"], ["Yu Ting", "Lin"], ["Nuria", "Sanchez Garcia"], ["Amanda", "Melgarejo"], ["Veronika", "Chvojkova"], ["Vojislava", "Lukic"], ["Akiko", "Kato"], ["Anna Lena", "Hansen"], ["Myrella", "De Paula"], ["Yan Chong", "Chen"], ["Sara", "Savarise"], ["Maja", "Vuzem"], ["Irina", "Cybina"], ["Nicole", "Ludwig"], ["Stefanie", "Alfery"], ["Elena", "Micheloni"], ["Liberty", "Sveke"], ["Sara", "Del Barrio Aragon"], ["Sofia", "Dinis"], ["Carola", "Gonzalez King Garibo"], ["Yanchong", "Chen"], ["Jenna", "Rayner"], ["Stephanie", "Kusano"], ["Monia", "Pederzoli"], ["Ana Gloria", "Osorio Pena"], ["Anete", "Bandere"], ["Vanessa", "Pinto"], ["Maja", "Petrovic"], ["Oormila", "Ram"], ["Lara", "Alsamman"], ["Pichittra", "Thongdach"], ["Korina", "Perkovic"], ["Hae Youm", "Bae"], ["Perrine", "Gauthier"], ["Meghana", "Paritala"], ["Ira", "Aleksova"], ["Eloah", "Lopes"], ["Kristina", "Andlovic"], ["Rebeca", "Estupina Ibanez"], ["Sonia", "Corominas Plaja"], ["Barbara", "Maciocha"], ["Maria", "Sharapova"], ["Ju Hee", "You"], ["Li Li", "Ding"], ["Jana", "Votrubcova"], ["Romina", "Raonic"], ["Naoko", "Ushiyama"], ["Maria", "Calbeto"], ["Laura", "Vallverdu Zafra"], ["Natalia", "Baez"], ["Jennifer", "Carati Del Nogal"], ["Vicky", "Michaud"], ["Anjuri", "Nagalia"], ["Jarmila", "Gajdosova"], ["Sofia", "Ayala"], ["Martha Carolina", "Bello Urbina"], ["Costanza", "Pallme Konig"], ["Sara", "Errani"], ["Wen", "Zhao"], ["Dia", "Evtimova"], ["Sheila", "Solsona Carcasona"], ["Tatiana", "Cutrona"], ["Tapiwa", "Marobela"], ["Shahar", "Peer"], ["Sandra", "Canrom"], ["Oxana", "Zhuchenko"], ["Laura", "Gence"], ["Gajane", "Vage"], ["Yuka", "Higuchi"], ["Sara", "Amo Flores"], ["Olena", "Leonchuk"], ["Leigh", "Walsh"], ["Beatriz", "Rios"], ["Claire", "Mesnil"], ["Ana", "Lipartia"], ["Leen", "Irani"], ["Anya", "Villanueva"], ["Claire", "Lablans"], ["Ivana", "Gala"], ["Ioana", "Ignat"], ["Hana", "Vaculinova"], ["Vita", "Moskaliova"], ["Natalia", "Zamolotskikh"], ["Sofia", "Melikishvili"], ["Loriane", "Favoretto"], ["Natasha", "Khan"], ["Jing", "Zhou"], ["Mariangela", "Avola"], ["Veronica", "Queen"], ["Ivana", "Karolyiova"], ["Elena", "Chalova"], ["Olawaseun", "Ogundare"], ["Evgeniya", "Guba"], ["Anastasia", "Balafouta"], ["Melissa", "Percy"], ["Daniella", "Cohen"], ["Aleksandra", "Lukic"], ["Camilla", "Lundberg"], ["Francesca", "Piu"], ["Laura", "Thorpe"], ["Leslie", "Koffi"], ["Misa", "Kinoshita"], ["Cynthia", "Tornil Marclay"], ["Sonia", "Bernal"], ["Fadzai", "Masiyazi"], ["Stanca", "Muresan"], ["Candelaria", "Rizzuto"], ["Valerie", "Saillant"], ["Josanne", "Van Bennekom"], ["Luboslava", "Hiresova"], ["Ekaterina", "Shulaeva"], ["Inna", "Kuzmenko"], ["Edith", "Tosner"], ["Anna", "Sydorska"], ["Maria Dolores", "Pazo"], ["Jennifer", "Woyke"], ["Sophia", "Marks"], ["Natalia", "Guitler"], ["Martina", "Pavelec"], ["Juliana", "Botelho"], ["Amber", "Brightly"], ["Yu Lin", "Dai"], ["Dasha", "Cherkasova"], ["Lizeth", "King"], ["Rocio", "Juarez"], ["Katelyn", "Ross"], ["Helen", "Wisnienski"], ["Anna", "Sharp"], ["Joanna", "Zajac"], ["Pooja", "Kommireddi"], ["Bianca", "Schulz"], ["Gabriella", "Polito"], ["Nina", "Henkel"], ["Efrat", "Zlotikamin"], ["Amanda", "Mankovits"], ["Irina", "Tsymbal"], ["Magali", "De Lattre"], ["Ani", "Mijacika"], ["Nicole", "Briceno"], ["Julie", "Wijnakker"], ["Alejandra", "Saavedra"], ["Stephanie", "Vock"], ["Marta", "Oliva Lopez"], ["Atsumi", "Dohi"], ["Melanie", "Gloria"], ["Nikol", "Dimitrova"], ["Alizee", "Paradis"], ["Aimi", "Koga"], ["Adina", "Neustein"], ["Ola", "Abou Zekry"], ["Chie", "Hayasaka"], ["Eleonora", "Luciani"], ["Andrea", "Sieveke"], ["Ola", "Abou Zekri"], ["Kamalpreet", "Bhullar"], ["Marah", "Calvo"], ["Maria", "Irigoyen"], ["Simona", "Dobra"], ["Punam", "Reddy"], ["Lenore", "Lazaroiu"], ["Maria", "Seppi"], ["Karolina", "Wlodarczak"], ["Rotem", "Goldstein"], ["Julie", "Vo"], ["Karin", "Knapp"], ["Agnes", "Szatmari"], ["Etti", "Gans"], ["Helene", "Tribolet"], ["Maria Jose", "Vallasciani"], ["Kasumi", "Hattori"], ["Estefania", "Balda Alvarez"], ["Megan", "Alexander"], ["Tania", "Varela Alvarado"], ["Paulina", "Ojeda"], ["Clara", "Schuhmacher Terron"], ["Christine", "Kainzmeier"], ["Ekaterina", "Dranets"], ["Meta", "Sevsek"], ["Marisa", "Gianotti"], ["Maria", "Milic"], ["Kaori", "Sano"], ["Karolina", "Filipiak"], ["Teresa", "Oberti"], ["Nantenaina", "Ramalalaharivololona"], ["Nicole", "Agostini"], ["Christelle", "Prato"], ["Ekaterina", "Pogrebniak"], ["Andra Iulia", "Savu"], ["Charity", "Johns"], ["Katarina", "Vranic"], ["Dana", "Hartman"], ["Elisabetta", "Monduzzi"], ["Ji Ae", "Kim"], ["Qing", "Yue"], ["Julianne", "Welford"], ["Laone", "Botshoma"], ["Daria", "Bykodarova"], ["Kunkanda", "Pukjumpa"], ["Esha", "Sanghvi"], ["Dede Tari", "Kusrini"], ["Alexandra", "Hernandez Vallant"], ["Eva", "Brozova"], ["Ute", "Schnoy"], ["Alexandra M", "Haney"], ["Chisako", "Sugiyama"], ["Shuang", "Liu"], ["Santa", "Sushinska"], ["Sarah", "Braun"], ["Hirono", "Watanabe"], ["Emmy", "Fritz Krockow"], ["Lenka", "Broosova"], ["Olga", "Khrapkova"], ["Rosanna", "Hatch"], ["Ana", "Gonzalez Herreros"], ["Maraike", "Biglmaier"], ["Sandra", "Hribar"], ["Selima", "Frioui"], ["Cho Won", "Lee"], ["Adriana", "Fernandez"], ["Samantha", "Cowan"], ["Tatjana", "Priachin"], ["Katia", "Sabate Orera"], ["Ingrid", "Cseh"], ["Andrea", "Bonilla"], ["Christin J", "Thompson"], ["Rumi", "Abe"], ["Juliana", "Voigt"], ["Csilla", "Borsanyi"], ["Yuliya", "Hnateyko"], ["Nihal", "Tarek Saleh"], ["Julija", "Sabanov"], ["Marina", "Shamayko"], ["Jovana", "Miletic"], ["Lara", "Wittmann"], ["Thuy Dung", "Nguyen"], ["Despina", "Matsaridou"], ["Lenka", "Hojckova"], ["Silvia", "Fassione"], ["Seema", "Maybud"], ["Kamila", "Mirzaalimova"], ["Aglaya", "Kokurina"], ["Tatjana", "Malek"], ["Tatjana", "Maria"], ["Dijana", "Srbinoska"], ["Prim", "Buaklee"], ["Mega", "Sukmawati"], ["Sophie", "Jacobeit"], ["Meg", "Fanjoy"], ["Lusine", "Davtyan"], ["Stephanie", "Dalmacio"], ["Keva", "Palmer"], ["Amanda", "Avedissian"], ["Alejandra", "Del Rey Guardiola"], ["Hannah", "Eke"], ["Chiaki", "Matsumoto"], ["Victoria", "Valls Comamala"], ["Alejandra", "Meza Cuadra"], ["Esperanza", "Vinals Rebassa"], ["Agustina", "Llaver"], ["Maria", "Abramovic"], ["Florencia", "Camperchioli"], ["Malgorzata", "Silka"], ["Karin", "Conti"], ["Pei", "Peng"], ["Claudia", "Spincke"], ["Maria", "Soo"], ["Madalina", "Gojnea"], ["Sara", "Di Paolo"], ["Stephanie", "Lim"], ["Shana", "Claes"], ["Katia", "Alarcon"], ["Simona", "Kralikova"], ["Kylie", "Moore"], ["Fani", "Chifchieva"], ["Lisa", "Haegele"], ["Afreen", "Jahan"], ["Olesia", "Nazarova"], ["Mariana", "Majic"], ["Yeniseik", "Gomez"], ["Whitney", "Chappell"], ["Amanda", "Mcdowell"], ["Chrissie", "Seredni"], ["Ia", "Appelberg"], ["Francesca", "Kinsella"], ["Vittoria", "Perugini"], ["Monica", "Tomas Lopes"], ["Julie", "Jacobs"], ["Gabriela", "Robledo Loza"], ["Annie", "Wise"], ["Aleksandra", "Wozniak"], ["Monica", "Neveklovska"], ["Andrea", "Petkovic"], ["Mika", "Kawamura"], ["Elyse", "Steiner"], ["Andrada Lacramioara", "Dinu"], ["Seira", "Etori"], ["Michelle", "Sammons"], ["Yaroslava", "Shvedova"], ["Jia", "Zhao"], ["Lisa", "Marshall"], ["Guillermina", "Torre"], ["Carmen Maria", "Ortiz Law"], ["Miho", "Ishida"], ["Tsvetana", "Pironkova"], ["Stephanie", "Vieira"], ["Ye Ra", "Lee"], ["Jelena", "Rajic"], ["Jing", "Ren"], ["Ayumi", "Yamamoto"], ["Andrina", "Laegerler"], ["Ashley", "Spicer"], ["Aurelie", "Caffa"], ["Mi Seon", "Lee"], ["Florentina", "Hanisch"], ["Olga", "Savchuk"], ["Maria Teresa", "Salame"], ["Agnes", "Liepina"], ["Apurvika", "Shukla"], ["Laura", "Bel Franquesa"], ["Svetlana", "Smirnova"], ["Hae Sung", "Kim"], ["Connor", "Vogel"], ["Aleksandra", "Zakrzynska"], ["Ali", "Van Horne"], ["Susanna", "Mussi"], ["Razilya", "Galayamova"], ["Stella", "Kyradji"], ["Joana Alexandra", "Comsa"], ["Maria", "Gomez"], ["Monica", "Niculescu"], ["Berengere", "Teix"], ["Maria Irene", "Squillaci Sandoval"], ["Maria", "Temez Fernandez"], ["Aoi", "Hatanaka"], ["Daria", "Titkina"], ["Tanja", "Ostertag"], ["Yana", "Mathias"], ["Francesca", "Recalcati"], ["Olga", "Puchkova"], ["Lauren", "Imre"], ["Graziana", "Di Giuseppe"], ["Emilia", "Arnaudovska"], ["Astri", "Purnawati"], ["Yui", "Nagasawa"], ["Bojana", "Bobusic"], ["Holly", "Richards"], ["Ortansa Nicoleta", "Danciu"], ["Annelise", "Fernandez"], ["Micaela", "Moroni"], ["Kellie", "Schmitt"], ["Alexandra", "Karavaeva"], ["Chiara", "Petrazzuolo"], ["Thalia", "Diaz Barriga"], ["Hikari", "Matsuo"], ["Talitha", "De Groot"], ["Maria", "Hoyos"], ["Daniela", "Lovera"], ["Brintney", "Larson"], ["Samantha", "Murray"], ["Asha", "Nanda Kumar"], ["Dariana", "Kozmina"], ["Junko", "Yamada"], ["Tatiana", "Kotelnikova"], ["Yui", "Takeshima"], ["Erika", "Takao"], ["Mary", "Tenu Michael Christon"], ["Laura", "Barbu"], ["Carolina", "Gutierrez"], ["Dina", "Bajramovic"], ["Anna", "Gerasimou"], ["Miljana", "Adanko"], ["Gina", "Fahaiyena"], ["Ozge", "Atalay"], ["Marcela", "Vojtiskova"], ["Sina", "Ladage"], ["Anna", "Vines Milian"], ["Rebekka", "Petursdottir"], ["Mireia", "Cano Guirao"], ["Maria Jose", "Andres Gomez"], ["Gabbi", "Tepic"], ["Alice Maria", "Tunaru"], ["Anjani", "Tandon"], ["Sarah", "Aulombard"], ["Luci", "Gonzalez Puch"], ["Federica", "Suess"], ["Ana Maria", "Henriquez"], ["Celina", "Grissi"], ["Martina", "Gerlova"], ["Wei Fang", "Kung"], ["Chieh Ju", "Wang"], ["Naoko", "Ueshima"], ["Jie", "Zeng"], ["Hirono", "Yoshikawa"], ["Andrea", "Portillo"], ["Alla", "Kudryavtseva"], ["Lavinia", "Tananta"], ["Bianca", "Smith"], ["Ana", "Ivanovic"], ["Ashley", "Murdock"], ["Nazli", "Kutuk"], ["Lyubov", "Slovtsova"], ["Carla Lorena", "Martinez"], ["Victoria", "Quintero"], ["Claire", "Soper"], ["Stine", "Sebakk"], ["Alexandra", "Aleksieva"], ["Jessica", "Kirkland"], ["Siobhan", "Finicane"], ["Varanya", "Vijuksanaboon"], ["Catalina", "Arancibia"], ["Eliza", "Rustandar"], ["Seul Ki", "Chin"], ["Andrea", "Herrera"], ["Tania", "Salas"], ["Miya", "Solic"], ["Maria", "Gatalskaya"], ["Maria Paulina", "Gamboa"], ["Montserrat", "Gonzalez"], ["Giulia", "Gatto Monticone"], ["Yuri", "Fujii"], ["Silvia", "Soler Espinosa"], ["Natalia", "Kolat"], ["Alexandra", "Kichoutkin"], ["Irina", "Strigalova"], ["Simone", "Frank"], ["Cammie", "Gray"], ["Laura", "Fisher"], ["Yana", "Levchenko"], ["Jessica", "Nguyen"], ["Tori", "Kinard"], ["Iuliia", "Sandrakova"], ["Nina", "Munch Soegaard"], ["Aislinn", "Oneill"], ["Sandrine", "Jabra"], ["Hannah", "Grady"], ["Zineb", "El Ouazzani"], ["Irena", "Mykytyn"], ["Vasilisa", "Bardina"], ["Ekaterina", "Kirianova"], ["Mailyne", "Andrieux"], ["Natalie", "Tanevska"], ["Janina", "Peters"], ["Sarah", "Lancaster"], ["Fabiola", "Alvarez Carbajo"], ["Eveline", "Widiger"], ["Viktorya", "Gorodetsky"], ["Lucy", "Warburton"], ["Charlotte", "Douwma"], ["Maria Sol", "Mezio"], ["Jana", "Juricova"], ["Viviane", "Marani"], ["Kaoru", "Maezawa"], ["Totinkoa", "Djanguenane"], ["Rachael", "Dillon"], ["Clothilde", "Falconetti"], ["Sophie", "Quist"], ["Diana", "Buzean"], ["Christy", "Striplin"], ["Tamara", "Orwa"], ["Adrienn", "Hidvegi"], ["Verdiana", "Verardi"], ["Evgenia", "Stupak"], ["Nina", "Beljajevova"], ["Morgan", "Lightbourne"], ["Ekaterina", "Ivanova"], ["Ekaterina", "Lopes"], ["Shuko", "Aoyama"], ["Anna", "Khvedelidze"], ["Rita", "Vukov"], ["Yoshi", "Nagano"], ["Denise", "Giler"], ["Aishwarya", "Jadhav"], ["Magy", "Aziz"], ["Maria", "Sorbello"], ["Christine", "Wilson"], ["Geneva", "Gnam"], ["Luiza", "Barcaui"], ["Ilham", "Zouaoui"], ["Nargiza", "Rakhmanova"], ["Joana", "Pangaio Pereira"], ["Andrea", "Popovic"], ["Marta", "Smiechowska"], ["Mihaela", "Duna"], ["Yui", "Saikai"], ["Paulina", "Vargas"], ["Merve", "Gultekinler"], ["Claudia", "Sanua"], ["Seema", "Kumari"], ["Veronika", "Dostalova"], ["Lu Ling", "Chen"], ["Natalia", "Rakhmanina"], ["Brina", "Spegel"], ["Valeria", "Pertsukhova"], ["Alexandra", "Kiesl"], ["Kim", "Rus"], ["Jutta", "Bornefeld"], ["Therese", "Tisseverasinghe"], ["Laura", "Burns"], ["Huan", "Xia"], ["Jessica", "Omeara"], ["Caterina", "Marusic"], ["Whitney", "Byrd"], ["Amparo", "Iglesias"], ["Karen", "Castiblanco"], ["Yumi", "Nakano"], ["Arijana", "Begovic"], ["Aliaa", "Fakhry"], ["Soledad", "Podlipnik"], ["Yun Qiao", "Ren"], ["Tamar", "Milevskaya"], ["Joyce", "Martinez"], ["Zeynep Aysu", "Yavuz"], ["Georgie", "Gent"], ["Maria Fernanda", "Riveroll"], ["Jana", "Albers"], ["Kelly", "Holtzhausen"], ["Keren", "Shlomo"], ["Julie", "Bensilum"], ["Emese", "Kardhordo"], ["Viktoriya", "Agryutenkova"], ["Denise", "Harijanto"], ["Jessica", "Zok"], ["Maribel", "Vicente Joyera"], ["Suzanne", "Matzenauer"], ["Angelique", "Kerber"], ["Olga", "Sarli"], ["Blanca", "Guallart Lain"], ["Andrea", "Giraldo"], ["Ieva", "Irbe"], ["Sayyara", "Mammadova"], ["Manami", "Miura"], ["Katrin", "Klein"], ["Julija", "Gotovskyte"], ["Hye Mi", "Byun"], ["Maria Isabel", "Camberos"], ["Sophie", "Wilkinson"], ["Valerie", "Tetreault"], ["Ye Ji", "Seo"], ["Jesica", "Brys"], ["Kseniia", "Tokarieva"], ["Caroline", "Nothnagel"], ["Annalisa", "Salvatelli"], ["Shi Tong", "Shao"], ["Shuang", "Wu"], ["Saskia", "Monien"], ["Anushree", "Thammanna"], ["Tatiana", "Golovin"], ["Andrea", "Espinosa"], ["Karin", "Hechenberger"], ["Anna", "Saltanova"], ["Nancy", "Metriya"], ["Vandana", "Murali"], ["Kateryna", "Malakhova"], ["Josipa", "Bek"], ["Beatriz", "Salazar Ruiz"], ["Natalie", "Toporowski"], ["Bermet", "Duvanaeva"], ["Ronke", "Akingbade"], ["Sofia", "Mitrokhin"], ["Xia Ling", "Li"], ["Ina", "Hadziselimovic"], ["Sarah", "Huah"], ["Sara", "Mansoor"], ["Justine", "Ozga"], ["Mateja", "Horvat"], ["Vanessa", "Kretsch"], ["Bo Ram", "Kim"], ["Moira", "Torrisi"], ["Marija", "Olujic"], ["Ana Cristina", "Reyes"], ["Eleonora", "Iannozzi"], ["Febri", "Joana"], ["Yekaterina", "Morozova"], ["Lauren", "Lui"], ["Anna", "Bartenstein"], ["Ivy Kristel", "De Castro"], ["Natasha", "Karolyi"], ["Claudia", "Pontoglio"], ["Desiree", "Alesiani"], ["Stefanie", "Kaindl"], ["Nikola", "Frankova"], ["Maja", "Kambic"], ["Oksana", "Khomyk"], ["Corina Claudia", "Corduneanu"], ["Christine", "Sperling"], ["Sarah", "Fansler"], ["Colleen", "Rielley"], ["Eugenia", "Grebenyuk"], ["Ha Yang", "Choi"], ["Belfin", "Sumbul"], ["Rana", "Tharwat Hafez"], ["Kali A", "Krisik"], ["Sabina", "Gunnarsson"], ["Tuule", "Tani"], ["Neena", "Sharma"], ["Teele", "Tani"], ["Karolina", "Jovanovic"], ["Imane", "Maloufi"], ["Fadzai", "Mawisire"], ["Alexandra", "Mueller"], ["Lara", "Fakhoury"], ["Thuy Trang", "Le Nguyen"], ["Raquel", "Seijo Rodriguez"], ["Victoria", "Abbassi"], ["Mariana", "Muci Torres"], ["Nicole", "Monteiro"], ["Idunn", "Hertzberg"], ["Veronika", "Adami"], ["Jelena", "Stanivuk"], ["Dagmara", "Siara"], ["Sabrina", "Allaut"], ["Stella", "Menna"], ["Martina", "Ondrackova"], ["Desiree", "Bastianon"], ["Pauline", "Bisset"], ["Caitlin", "Whoriskey"], ["Manar", "Al Jazzaf"], ["Nicole", "Grunwald"], ["Yana", "Zvarich"], ["Ana Laura", "Ochoa Magana"], ["Valeria", "Faccinetti"], ["Angelica", "Chavez"], ["Ana", "Veselinovic"], ["Katharina", "Siller"], ["Francisca", "Salas"], ["Emma", "Hiles"], ["Anna", "Boixader Martinez"], ["Jessica", "Schaer"], ["Emma", "Hayman"], ["Irina", "Tregub"], ["Gaelle", "Desperrier"], ["Daniela", "Leyria Moreno"], ["Lindsay", "Burdette"], ["Grace", "Hutson"], ["Camila", "Deluchi"], ["Misato", "Fujita"], ["Sonia", "Sandano"], ["Veronica", "Coslovich"], ["Yuan Yuan", "Zhong"], ["Anastasia", "Zvereva"], ["Julia", "Parasyuk"], ["Nadia", "Adnani"], ["Nicola", "Geuer"], ["Mari", "Yamauchi"], ["Sofie", "Kofoed Thomsen"], ["Teodora", "Mircic"], ["Katerina", "Polunina"], ["Karen Natalia", "Martinez Bernal"], ["Daniela", "Gudelj"], ["Sampada", "Kanede"], ["Laura", "Siegemund"], ["Diana", "Woodcock"], ["Marina", "Erakovic"], ["Michaela", "Johansson"], ["Suzelle", "Davin"], ["Sanaa", "Bhambri"], ["Diana Andreea", "Gae"], ["Antia", "Ghiorghiu"], ["Simona", "Demont"], ["Elodie", "Caillat"], ["Zeynep", "Ozbarlas"], ["Erin", "Liefeld"], ["Marisol", "Aguilar"], ["Ana", "Beltran Trigueros"], ["Anastasiya", "Slyusarchyk"], ["Sara", "Meghoufel"], ["Amanda", "Granson"], ["Barbora", "Bozkova"], ["Lili", "Grebinuk"], ["Marta", "Lesniak"], ["Elze", "Potgieter"], ["Camila", "Belassi"], ["Yuvanna", "Montalvo"], ["Lucie", "Kabacova"], ["Violette", "Huck"], ["Louise", "Doutrelant"], ["Aleksandra", "Malovic"], ["Eun Jung", "Kim"], ["Kalliopi", "Katsoupi"], ["Diana", "Eriksson"], ["Anahi", "Navarro Ruano"], ["Megumi", "Fukui"], ["Kristen", "Mcvitty"], ["Inna", "Tchepournaya"], ["Raluca", "Nedelea"], ["Jung Yoon", "Shin"], ["Cristina", "Martinez"], ["Min Hwa", "Yu"], ["Kristen A", "Bleakley"], ["Ruxandra Floriana", "Tudosoiu"], ["Tatia", "Mikadze"], ["Cristiana", "Marotta"], ["Andra", "Gavril"], ["Marlene", "Ryan"], ["Sophie", "Kobuch"], ["Sanja", "Racic"], ["Diana", "Torres"], ["Bianca", "Eichkorn"], ["Marta", "Torbarina"], ["Julie", "Chao"], ["Joohyoung", "Kim"], ["Salome", "Aladashvili"], ["Stephanie", "Luk"], ["Porntip", "Mulsap"], ["Ineke", "Mergaert"], ["Belen", "Perez De Juan Glez"], ["Anne", "Le Gall"], ["Karin", "Lundmark"], ["Thiyumi", "Abeysinghe"], ["Bianca", "Koch"], ["Roxana", "Alexandru"], ["Melissa", "Saiontz"], ["Ashley", "Neumann"], ["Sara", "Nael"], ["Yasmin", "Enrich"], ["Kyung Hwa", "Lee"], ["Yi Fan", "Chen"], ["Lucia", "Jara Lozano"], ["Doina Nicoleta", "Lovin"], ["Sandra", "Liebl"], ["Celia", "Gil Mateo Sasieta"], ["Patricia", "Soesilo"], ["Tereza", "Hladikova"], ["Magdalena", "Kiszczynska"], ["Soon Mi", "Seo"], ["Shatel", "Tavita"], ["Yukiko", "Terai"], ["Maria", "Perevoschikova"], ["Natalia Maria", "Christenson"], ["Lorena", "Rebolledo"], ["Jasmin", "Heckel"], ["Jamie", "Lieberman"], ["Yevgenia", "Nudga"], ["Maria Lavinia", "Piva"], ["Gluay", "Kampookaew"], ["Anne Marie", "Simonsen"], ["Yan", "Zhang"], ["Iva", "Velkovska"], ["Franziska", "Klotz"], ["Valentina", "Ponomartseva"], ["Ewa", "Szatkowska"], ["Alise", "Vaidere"], ["Milica", "Tomic"], ["Tina", "Akaegbusi"], ["Elly", "Strother"], ["Marjorie", "Ondeck"], ["Sarah", "Harding"], ["Iris", "Khanna"], ["Irene", "Rehberger Bescos"], ["Laura", "Borza"], ["Edilyn", "Balanga Margate"], ["Nicoleta Mihaela", "Negru"], ["Dora", "Somossy"], ["Evgeniya", "Kim"], ["Lenka", "Wienerova"], ["Tania", "Rice"], ["Roberta", "Martellini"], ["Olivia", "Marshall"], ["Catrin", "Deck"], ["Julia", "Trunk"], ["Rita", "Gouveia"], ["Lenka", "Danielova"], ["Christina", "Amo"], ["Melisa", "Miranda Otarola"], ["Stephanie", "Wetmore"], ["Katariina", "Tuohimaa"], ["Urska", "Klemenc"], ["Benedicte", "Vliegen"], ["Tomo", "Akutsu"], ["Olivia", "Vrettas"], ["Bernadetta", "Birkas"], ["Priyanka", "Tohan"], ["Ksenia", "Lopina"], ["Magdalena", "Ekert"], ["Catherine", "Newman"], ["Courtney", "Ulery"], ["Ana", "Miguel Ivern"], ["Emilie", "Van Boekel"], ["Mihaela", "Buzarnescu"], ["Yasmin", "Schnack"], ["Laia", "Santamaria Colomer"], ["Juanita", "Munoz"], ["Maria", "Zharkova"], ["Diana", "Nakic"], ["Dian", "Mayasari"], ["Nina", "Makarova"], ["Ellen", "Yeung"], ["Wakana", "Ichikawa"], ["Daniela", "Suarez"], ["Krystina", "Marcio"], ["Victoria", "Tseitlin"], ["Michelle", "Pang"], ["Miriam", "Steinhilber"], ["Kamonthip", "Saovana"], ["Bibiane", "Schoofs"], ["Barbara", "Kvelstein"], ["Diana", "Toma"], ["Yurina", "Koshino"], ["Rui", "Bao"], ["Daniela", "Scivetti"], ["Megumi", "Matsuyama"], ["Carolina Magalhaes", "Malheiros"], ["Maria Fernanda", "Hernandez"], ["Zineb", "Hilali"], ["Manuela", "Esposito"], ["Ashley", "Brooks"], ["Alexandra", "Gwizdowski"], ["Veronika", "Babayan"], ["Sandra Mirela", "Rus"], ["Phoebe", "Di Leo"], ["Trina", "Slapeka"], ["Julie", "Stas"], ["Alina", "Orcholska"], ["Gozde", "Unkaya"], ["Makiho", "Kozawa"], ["Amanda", "Craddock"], ["Anna", "Jugeli"], ["Lindsay", "Jones"], ["Miljana", "Jocic"], ["Katja", "Stemmer"], ["Natalia", "Rudnouskaya"], ["Sahar", "Amini Hajibashi"], ["Anne", "Redfern"], ["Mikayla", "Rogers"], ["Elizabeth", "Plotkin"], ["Cecile", "Bardoux"], ["Marcella", "Koek"], ["Erin", "Boast"], ["Eun Jung", "Yang"], ["Stephanie", "Jasper"], ["Nikolina", "Renic"], ["Ying", "Qian"], ["Gangothri", "Sandri"], ["Luisa", "Cantu"], ["Edit Katalin", "Suhajda"], ["Juliana", "Fernandes"], ["Hailee", "Elmore"], ["Laura Ioana", "Andrei"], ["Liset", "Brito Herrera"], ["Sara", "Pujals Perez"], ["Julia", "Helbet"], ["Petra", "Pajalic"], ["Saori", "Karikomi"], ["Paola", "Sprovieri"], ["Elizabeth", "Kobak"], ["Ilina", "Kroushovski"], ["Jana", "Derkasova"], ["Nicole", "Thyssen"], ["Romana", "Janshen"], ["Sabrina", "Mendez Dominguez"], ["Paulina", "Jorquera"], ["Elisa", "Mansell"], ["Amelia", "Frendo"], ["Ekaterina", "Makarova"], ["Zorica", "Petrov"], ["Katarina", "Krpan"], ["Erin", "Clark"], ["Hadjer", "Bouali"], ["Yamila", "Halle"], ["Shao Yuan", "Kao"], ["Claudina", "Covarrubias"], ["Yvette", "Hyndman"], ["Lauren", "Dossor"], ["Jessica", "Weeks"], ["Maha", "Berty"], ["Sydni", "Katz"], ["Wen Hsin", "Hsu"], ["Natalie", "Handler"], ["Paola", "Alvarado"], ["Michaela", "Vogel"], ["Juliana", "Franco"], ["Kim", "Roberts"], ["Stefania", "Vizireanu"], ["Anna", "Korzeniak"], ["Puleng", "Tlhophane"], ["Jana", "Kulova"], ["Sara", "Catarain Ruiz"], ["Aniko", "Kiss"], ["Nerea", "Irisarri Duran"], ["Maria", "Melihova"], ["Diane", "Cheymol"], ["Natasha", "Vieira"], ["Diana", "Popescu"], ["Nicole", "Kantor"], ["Eliana", "Bazan"], ["Dessislava", "Mladenova"], ["Sanaz", "Marand"], ["Daiana", "Negreanu"], ["Jazmin", "Hernandez"], ["Cristina Diana", "Ghinda"], ["Inga", "Beermann"], ["Anastasia", "Solomko"], ["Charlotte", "Martin"], ["Ekaterina", "Kosminskaya"], ["Barbara", "Oliveira"], ["Michela", "Pizzo"], ["Erica", "Tedoldi"], ["Georgiana", "Smyser"], ["Eleanor", "Peters"], ["Yulia", "Pilnik"], ["Ting Ting", "Lu"], ["Cristina", "Greco Naccarato"], ["Karen", "Nijssen"], ["Brittany", "Blalock"], ["Rebecca", "Parks"], ["Anna", "Kechko"], ["Maria Sole", "Barbieri"], ["Marika", "Petrosino"], ["Gabriela", "Necea"], ["Maria", "Miziouk"], ["Di", "Hu"], ["Yulia", "Fedossova"], ["Aleksandra", "Marjanovic"], ["Yuan Yuan", "Shi"], ["Katarina", "Milinkovic"], ["Mai", "Fujiwara"], ["Magdalena", "Bresson"], ["Chelsea", "Jones"], ["Beatriz", "Vall Cava De Llan"], ["Handra Anabela", "Mangulea"], ["Mariam", "Mikuchadze"], ["Sara", "Tegner"], ["Lavinia", "Timme"], ["Maria", "Gugel"], ["Fernanda", "Zacouteguy"], ["Miki", "Chinen"], ["Megan", "Broderick"], ["Sophie", "Cornerotte"], ["Roxanne", "Sammel"], ["Elena Stela", "Latea"], ["Da Hye", "Jeong"], ["Julia", "Bone"], ["Radana", "Holusova"], ["Aldana", "Caroleo"], ["Katrina", "Tsang"], ["Ceylan", "Engin"], ["Tara", "Iyer"], ["Laurene", "Fayol"], ["Joanna", "Carswell"], ["Jenny", "Frisell"], ["Erin", "Paul"], ["Marina", "Cossou"], ["Olivia", "Scarfi"], ["Manon", "Garcia"], ["Golda", "Rubina"], ["Elana", "Agranovich"], ["Cagla", "Urcu"], ["Maja", "Tadic"], ["Elrien", "De Villiers"], ["Sadietou Biguedenam", "Mayou"], ["Liege", "Vieira"], ["Rana", "El Derwy"], ["Linda", "Zahlavova"], ["Anna", "Movsisyan"], ["Dijana", "Stojic"], ["Lema", "Ateba"], ["Edita", "Raca"], ["Zena", "Williams"], ["Mireia", "Gonzalez Bosch"], ["Sanja", "Ancic"], ["Sofia", "Kvatsabaia"], ["Martina", "Lautenschlager"], ["Martina", "Andornino"], ["Anastasia", "Ivanina"], ["Teliana", "Pereira"], ["Lutfiye", "Esen"], ["Tatiany", "Tangerino"], ["Laura", "Peterzan"], ["Berta", "Morata Flaquer"], ["Selma", "Babic"], ["Michaela", "Kissell"], ["Sofia", "Thomaidou"], ["Nitisha", "Deodhar"], ["Alexis", "Dorr"], ["Ahinara", "Ramos"], ["Joanna", "Dobrowolska"], ["Mailen", "Auroux"], ["Ana Paula", "De La Pena"], ["Olga", "Koutseridi"], ["Cristina Mirela", "Prodanel"], ["Nadja", "Roma"], ["Raquel", "Castro"], ["Alice", "Hall"], ["Wen Ling", "Wang"], ["Irina", "Matiychyk"], ["Yurika", "Moriya"], ["Anja", "Poglajen"], ["Angela", "Werschel"], ["Chang", "Xu"], ["Natalia", "Niemiec"], ["Barbora", "Bachmanova"], ["Jessica", "Sweeting"], ["Akari", "Inoue"], ["Anastasia", "Poltoratskaya"], ["Laia", "Gonzalez Garrido"], ["Teresa", "Ferrer Lopez Cuervo"], ["Cecilia", "Lainez"], ["Yi Fan", "Xu"], ["Eloisa Maria", "Compostizo De Andres"], ["Silvia Elena", "Irimescu"], ["Stefania", "Boffa"], ["Megan", "Sporndli"], ["Jesica", "Escobar"], ["Justine", "Bourdon"], ["Alena", "Bayarchyk"], ["Jessica", "Mcclintock"], ["Katherine", "White"], ["Karina", "Porushkevich"], ["Caroline", "Dedering"], ["Oksana", "Djulai"], ["Maeva", "Thiebaud"], ["Kirsten", "Flower"], ["Nadia", "Abdala"], ["Anna", "Smith"], ["Avgusta", "Tsybysheva"], ["Melissa", "Laharrague"], ["Suhaila", "Jad Gomez"], ["Eirini", "Vasileiadou"], ["Justine", "Sutherland"], ["Lauren", "Sabacinski"], ["Johanna", "Larsson"], ["Chayenne", "Ewijk"], ["Anna", "Radova"], ["Cynthia", "Prieto Garcia"], ["Maja", "Milas"], ["Viktoria", "Kutuzova"], ["Shona", "Lee"], ["Juri", "Fukushima"], ["Olga", "Elkin"], ["Pola", "Olczak"], ["Lisa", "Wilkinson"], ["Caroline", "Courmont"], ["Anum", "Saeed"], ["Ophelie", "Vergnes"], ["Punchanok", "Khunpitak"], ["Maren", "Sundermeier"], ["Olga", "Govortsova"], ["Misleydis", "Diaz Gonzalez"], ["Ana", "Curto"], ["Alexandra", "Kudryavtseva"], ["Olusola", "Gbadamosi"], ["Selma", "Salkovic"], ["Lucie", "Pazderova"], ["Maria", "Spenceley"], ["Marit", "Nordfors"], ["Sandhya", "Nagaraj"], ["Audrey", "Laib"], ["Lucie", "Makrlikova"], ["Audrey", "Dujardin"], ["Nastja", "Recnik"], ["Daria", "Galyanova"], ["Alexandra", "Poorta"], ["Carla", "Suarez Navarro"], ["Alisa", "Kagukina"], ["Emilia", "Bindi"], ["Nadia", "Lee"], ["Desiree", "Schelenz"], ["Lauren", "Macfarlane"], ["Soetkin", "Van Deun"], ["Letizia", "Lo Re"], ["Petra", "Viskovic"], ["Lorena", "Valente"], ["Ketravee", "Attachoo"], ["Sarah", "Summerfield"], ["Laura", "Cuddon Large"], ["Wendy", "Kong"], ["Betina", "Jozami"], ["Agustina", "Lepore"], ["Hande", "Yesil"], ["Kristina", "Ufimtseva"], ["Ornella", "Gentile"], ["Juliana", "Umeki"], ["Yuki", "Shinada"], ["Aurelia", "Janeczek"], ["Liene", "Linina"], ["Rachael", "Hall"], ["Francesca", "Bonomelli"], ["Camilla", "Bortolon"], ["Gaia", "Lazzaroni"], ["Madura", "Ranganathan"], ["Alessia", "Cecchini"], ["Olivia", "Lukaszewicz"], ["Stephanie", "Vongsouthi"], ["Anja Vanessa", "Peter"], ["Jenny", "Saarnilina"], ["Courtney M", "Petero"], ["Yuka", "Yamaguchi"], ["Natalie", "Piquion"], ["Laila", "Ben Abderrahman"], ["Denise", "Mascherini"], ["Nina", "Septrita"], ["Paulina", "Pokorna"], ["Ivana", "Tomaic"], ["Agnieszka", "Zak"], ["Yuliya", "Lyndina"], ["Irina", "Adetu"], ["Natasha", "Hillyer"], ["Bo Ra", "Kwak"], ["Yasmine", "Sahyoun"], ["Sofi Helene", "Weckman"], ["Tifanie", "Treece"], ["I Hsuan", "Hwang"], ["Eleonora", "Sidjemileva"], ["Jenna", "Webster"], ["Kunykei", "Koichumananova"], ["Marrit", "Boonstra"], ["Jenna May", "Osborne"], ["Jacklyn", "Lambert"], ["Iva", "Buljubasic"], ["Irena", "Pavlovic"], ["Radoslava", "Serakova"], ["Laura", "Bsoul"], ["Veronika", "Ovcacikova"], ["Magdalena", "Rybarikova"], ["Chloe", "West"], ["Aleksandra", "Stankovic"], ["Andrea", "Remynse"], ["Anine Cornelius", "Lovdal"], ["Gabriela", "Gonzalez"], ["Kristiina", "Eskola"], ["Galyna", "Kosyk"], ["Yue", "Wan"], ["Marcela Guimaraes", "Bueno"], ["Katarina", "Anic"], ["Katsarina", "Zheltova"], ["Simone", "Templeton"], ["Ramona", "Erb"], ["Benedetta", "Davato"], ["Valeria", "Casillo"], ["Rebecca", "Bran"], ["Amanda", "Bran"], ["Ana Maria", "Gherman"], ["Magdalena", "Plucinski"], ["Fernanda", "Hermenegildo"], ["Freya", "Younes"], ["Viky", "Nunez Fuentes"], ["Rocio", "Galan"], ["Joana", "Roda"], ["Erina", "Nomiya"], ["Florentine", "Wengler"], ["Jasmin", "Mertens"], ["Stephanie", "Macfarlane"], ["Ashley", "Anderson"], ["Filipa", "Ribeiro"], ["Laurianne", "Henry"], ["Anja", "Nowak"], ["Shiran", "Ben Nun"], ["Catalina", "Vigener"], ["Maud", "Vigne"], ["Kehinde", "Amusan"], ["Raquel", "Pina"], ["Mao", "Suzuki"], ["Daria", "Petrovic"], ["In Young", "Hwang"], ["Wen Tzu", "Lai"], ["Bianca Ioana", "Bonifate"], ["Rocio", "Frausto"], ["Maria Gabriela", "Linares"], ["Slavina", "Kaplanska"], ["Patricia", "La Rovere"], ["Sargam", "Gupta"], ["Insa", "Villnow"], ["Martina", "Sebastiani"], ["Widhi", "Setyorini"], ["Ksenia", "Sidorova"], ["Tamara", "Madjeric"], ["Julia", "Goerges"], ["Laura", "Van De Stroet"], ["Hania", "Bouakel"], ["Daria", "Babushkina"], ["Jasmin", "Steinherr"], ["Patricia", "Vollmeier"], ["Tatsiana", "Kapshay"], ["Joana", "Santiago"], ["Mariana", "Gonzalez"], ["Catherine", "Fall"], ["Lena", "Litvak"], ["Amanat", "Thind"], ["Franci", "Betancourt"], ["Sandra", "Wikstrom"], ["Stephanie", "Sullivan"], ["Hilary", "Barte"], ["Beatriz", "Garcia Vidagany"], ["Patricia", "Cortes"], ["Injie", "Fawzy"], ["Jane", "Melichar"], ["Julie", "Uwague"], ["Alessandra", "Ferrazzi"], ["Daiana", "Bazzano"], ["Milica", "Zivanovic"], ["Guillermina", "Zukerman"], ["Raquel", "Guede Estevez"], ["Chantal", "Beetham"], ["Taylor", "Marable"], ["Ellah", "Nze"], ["Rose", "Ojonimi"], ["Danira", "Fabijanovic"], ["Sandra", "Mente Ladanai"], ["Carolina", "Petrelli"], ["Jennifer", "Stevens"], ["Erika", "Sema"], ["Lu", "Guo"], ["Daniela", "Castillo"], ["Franziska", "Goetz"], ["Veronika", "Kolarova"], ["Larissa", "Ferreira Melo"], ["Natia", "Gegia"], ["Arthi", "Duraisamy"], ["Verena", "Piccolo"], ["Saba", "Aziz"], ["Jessica", "Brouwer"], ["Ena", "Shimomura"], ["Florencia", "Molinero"], ["Carla", "Caetano"], ["Ayu Fani", "Damayanti"], ["Claudia", "Wasilewski"], ["Daniela", "Vukadinovic"], ["Wiem", "Ben Sedrine"], ["Lynn", "Philippe"], ["Anna", "Boada Plade Llorens"], ["Michelle", "Russ"], ["Julia", "Moriarty"], ["Ji Hyun", "Kim"], ["Tatiana", "Silbereisen"], ["Ofelya", "Poghosyan"], ["Yuliya", "Trubachova"], ["Tiffany", "Welcher"], ["Noelle", "Hickey"], ["Serena", "Strano"], ["Sara", "Jamil"], ["Angelina", "Gabueva"], ["Amoolya", "Raghunath"], ["Nicoleta Ana Maria", "Bara"], ["Tejashwi", "Narayana"], ["Anukriti", "Prasad"], ["Andra Elena", "Voinea"], ["Mathilda", "Engstrom"], ["Joanna", "Kacprzyk"], ["Elizabeth", "Akutsiya"], ["Magdalena", "Tokarczyk"], ["Christina", "Liles"], ["Sylwia", "Huminska"], ["Anamaria Alexandra", "Sere"], ["Yun Ling", "Ng"], ["Musangu", "Muchunga"], ["Manon", "Veldhorst"], ["Katie", "Orletsky"], ["Cameron", "Hubbs"], ["Mary", "Gambale"], ["Jennifer", "Holmberg"], ["Natalia", "Garay"], ["Ana Rosa", "Cabeza Candela"], ["Joanna", "Craven"], ["Melanie", "Gomila Bengtsson"], ["Rym", "Cherni"], ["Cameron", "Ellis"], ["Mahault", "De Claviere"], ["Sheena", "Jain"], ["Volha", "Duko"], ["Katerina", "Kramperova"], ["Karolina", "Domanski"], ["Dominika", "Kocwin"], ["Sarah", "Andrew"], ["Phillipa", "Reakes"], ["Agnes", "Szavay"], ["Ylva", "Kaiser"], ["Cristina", "Bala Abella"], ["Kristyna", "Sramkova"], ["Maggie", "Mello"], ["Erin", "Billett"], ["Elne", "Barnard"], ["Aleksandra", "Malyarchikova"], ["Hila", "Elster"], ["Andrea", "Ferrari"], ["Lais", "Souza"], ["Mia", "Gordon"], ["Maria", "Zlydnikova"], ["Vivian", "Segnini"], ["Tegan", "Edwards"], ["Martina", "Caciotti"], ["Beate", "Giller"], ["Ayushi", "Sinha"], ["Lea Katharina", "Jacob"], ["Shan Shan", "Li"], ["Ewa", "Kopczynska"], ["Michaella", "Krajicek"], ["Alexandra", "Glebova"], ["Whitney", "Wilson"], ["Jacquelynn", "Tang"], ["Sofia", "Shapatava"], ["Olga", "Ippolitova"], ["Andra Mihaela", "Coprean"], ["Tiffany", "Cornelius"], ["Simona", "Struzzolino"], ["Joanne", "Karaitiana"], ["Marianne", "Van Oppen"], ["Noemie", "Scharle"], ["Nikola", "Vajdova"], ["Monika", "Lalewicz"], ["Michaela", "Kopacin"], ["Stefanie", "Rath"], ["Julia", "Browne"], ["Kristina", "Radan"], ["Anais", "Van Cauter"], ["Ruth", "Sabbe"], ["Deborah", "Armstrong"], ["Bettina", "Mittermeier"], ["Alice", "Bellicha"], ["Antonia", "Kontozoudaki"], ["Jessica", "Palma"], ["Paula", "Hors Comadira"], ["Magdalena", "Wiecha"], ["Xi", "Lu"], ["Margarita", "Spicin"], ["Maibel", "Quintana"], ["Shuai", "Zhang"], ["Fernanda", "Ferreira"], ["Federica", "Grazioso"], ["Noriko", "Uehara"], ["Katarina", "Barclay"], ["Nadine", "Sabbagh"], ["Carlotta", "Lehner"], ["Amanda", "Marrow"], ["Florence", "De Vrye"], ["Ekaterina", "Jeritsheva"], ["Sonia", "Klamczynska"], ["Victoria", "Zotter"], ["Seo Kyung", "Kang"], ["Regina", "Kulikova"], ["Carmen", "Lopez Sanchez"], ["Stefanie", "Nunic"], ["Elizaveta", "Tochilovskaya"], ["Eylul", "Benli"], ["Maite", "Gabarrus Alonso"], ["Laura", "Manfredonia"], ["Sara", "Nilsson"], ["Federica", "Limone"], ["Ana Luiza", "Ferreira"], ["Evgeniya", "Rodina"], ["Megan", "Garcia"], ["Marina", "Melnikova"], ["Cecilia", "Gratian"], ["Erika", "Zanchetta"], ["Tanya", "Stoimenova"], ["Yi Jing", "Zhao"], ["Yanet", "Blanco Puentes"], ["Maddie", "Brooks"], ["Laura", "Noguera Aparicio"], ["Tatyana", "Ignatchenko"], ["Alja", "Zec Peskiric"], ["Lucia", "Sariscanova"], ["Martina", "Agarici"], ["Penporn", "Chantawannop"], ["Yu Xin", "Miao"], ["Petra", "Sunic"], ["Neus", "Rodriguez Menendez"], ["Haruka", "Suga"], ["Ellen", "Barry"], ["Amy", "Anstey"], ["Heinar", "Boltea"], ["Aleksandra", "Markovic"], ["Fleur", "Goedkoop"], ["Manami", "Hirata"], ["Wan Ting", "Liu"], ["Doron", "Muravnik"], ["Monika", "Kochanova"], ["Yuki", "Kusunose"], ["Stefania", "Carrizo"], ["Abbie", "Probert"], ["Ayaka", "Ito"], ["Kaja", "Podobnik"], ["Kirsten Andrea", "Weedon"], ["Sona", "Novakova"], ["Nuria", "Cascon Lapido"], ["Sara", "Perez Gonzalez"], ["Eugeniya", "Pashkova"], ["Gabriela", "Mejia Tenorio"], ["Monika", "Hadvigerova"], ["Dominique", "Wimmer"], ["Natalia", "Guevara"], ["Amina", "Rakhim"], ["Ashlee", "Brown"], ["Si Si", "Qiu"], ["Ellen", "Linsenbolz"], ["Rebecca", "Alessi"], ["Meera", "Kantaria"], ["Chen", "Liang"], ["Amandine", "Cazeaux"], ["Gabriela", "Vergara"], ["Gracia", "Fuentes"], ["Ekaterina", "Prozorova"], ["Romina", "Palmisano"], ["Elena", "Giurgiu Dorina"], ["Martina", "Sallusti"], ["Jara", "Ghadri"], ["Thavindra", "Ekanayake"], ["Maria Fernanda", "Alvarez Teran"], ["Giannina", "Minieri"], ["Nikola", "Matovicova"], ["Petra", "Putnik"], ["Alexandra", "Panova"], ["Maritza", "Hernandez"], ["Vania", "King"], ["Raluca", "Olaru"], ["Nevena", "Selakovic"], ["Florella", "Moggia"], ["Sanjana", "Kapur"], ["Agnieszka", "Radwanska"], ["Charlotte", "Soubrie"], ["Jillian", "Oneill"], ["Adriana", "Alvarez Tostado"], ["Steffi", "Weterings"], ["Yasmin", "Hamza"], ["Jenny", "Drummond"], ["Pauline", "Ribot"], ["Jessica", "Gardefjord"], ["Julia Maria", "Navarro Navarro"], ["Karoline", "Steiro"], ["Marne", "Roos"], ["Micaela", "Hein"], ["Lara", "Conrad"], ["Estefania", "Plaza"], ["Paloma", "Escobedo"], ["Vlada", "Ekshibarova"], ["Karla", "Gallardo"], ["Hanna", "Andreyeva"], ["Tina", "Pieger"], ["Laura", "Milner"], ["Melissa", "Ravestein"], ["Sara", "Neto"], ["Carina", "Weisser"], ["Raphaela", "Chaves Borges"], ["April", "Albertini"], ["Selina", "Guns"], ["Hedda", "Wolmarans"], ["Giulia", "Gardani"], ["Brittany", "Teei"], ["Florina", "Nosca"], ["Mariella", "Greschik"], ["Alexandra", "Sakalaridi"], ["Federica", "Dambrosio"], ["Sofi", "Papadopoulou"], ["Valentina", "Piccolo"], ["Conchita Corazon", "Zoleta"], ["Julia", "Cohen"], ["Gabriela", "Vieira"], ["Zorana", "Anastasijevic"], ["Linfeifei", "Fan"], ["Mikaela", "Hockman"], ["Celine", "Rolly"], ["Mariya", "Tverdikova"], ["Cristina", "Sanchez Quintanar"], ["Karina", "Venditti"], ["Natalia", "Orlova"], ["Aline", "Berkenbrock"], ["Elisaveta", "Pironkova"], ["Fatima", "El Allami"], ["Lalatiana", "Randriamanantena"], ["Neha", "Rana"], ["Komang Sri", "Maryati"], ["Simonetta", "Miori"], ["Joanna", "Matuszczyk"], ["Farida", "Karaieva"], ["Anna", "Wishink"], ["Florence", "Fleury"], ["Gabriela", "Roux"], ["Katarina", "Mlcochova"], ["Mona", "Mansour"], ["Beatriz", "Juan Miranzo"], ["Myriam", "Sopel"], ["Christina", "Tan"], ["Maria Daniela", "Yanez"], ["Leonie", "Guijt"], ["Ekaterina", "Tsiklauri"], ["Sherazad", "Benamar"], ["Valerie", "Verhamme"], ["Sherazad", "Reix"], ["Geanina", "Mircea"], ["Anastasia", "Petukhova"], ["Claire", "Birnie"], ["Xenia", "Tsilimigra"], ["Ivana", "Culkovic"], ["Estelle", "Guisard"], ["Anna", "Fitzpatrick"], ["Carlota", "Schwartz Caballe"], ["Ornella", "Caron"], ["Daria", "Razarenova"], ["Engela", "Olivier"], ["Karina", "Ahuja"], ["Stacey", "Grant"], ["Rie", "Koganei"], ["Aodhnait", "Lombard"], ["Joanna", "Szymczyk"], ["Sarai", "Torres"], ["Patience", "Onebamhoin"], ["Kelcy", "Mckenna"], ["Maksymiliana", "Wandel"], ["Anna", "Geissler"], ["Navodi", "De Zoysa"], ["Delia", "Damaschin"], ["Yuriko", "Sakai"], ["Jelena", "Durisic"], ["Kamilia", "Daya"], ["Anamika", "Bhargava"], ["Kimberley", "Ruxton"], ["Maya", "Pitenina"], ["Helene", "Auensen"], ["Shayna", "Mcdowell"], ["Karolina", "Navratilova"], ["Paulina", "Luquin"], ["Evelyn", "Ploner"], ["Ashley", "Silva"], ["Dilara", "Naibi"], ["Grace", "Hannah"], ["Hui", "Chen"], ["Catarina", "Muller"], ["Prudence", "Teitzel"], ["Elizabeth", "Adams"], ["Zora", "Vlckova"], ["Marlot", "Meddens"], ["Letizia", "Lardani"], ["Jessica", "Aguilera"], ["Nicole", "Vaidisova"], ["Klaudia", "Malenovska"], ["Paulina", "Velarde Magana"], ["Naomi", "Cavaday"], ["Taja", "Mohorcic"], ["Dania", "Navarro"], ["Vishakha", "Sheoran"], ["Josefin", "Hjertquist"], ["Marina", "Kojanova"], ["Rika", "Tatsuno"], ["Abigail", "Royston"], ["Paola", "Cigui"], ["Jenny", "Swift"], ["Alison", "Shemon"], ["Nathalia", "Rossi"], ["Ayana", "Tajima"], ["Marie Pier", "Huet"], ["Oana", "Archip"], ["Fabiana", "Chiaparini"], ["Ebelechukwu", "Chukwuweteli"], ["Sylwia", "Zagorska"], ["Vassiliki", "Doriza"], ["Ana", "Ruiz Fernandez"], ["Estelle", "La Porte"], ["Maria Eugenia", "Roca Recarey"], ["Verusa", "Dias"], ["Marta", "De Pablo Bota"], ["Jing Jing", "Lu"], ["Ariane", "Masschelein"], ["Mariaryeni", "Gutierrez"], ["Dominika", "Cibulkova"], ["Amra", "Sadikovic"], ["Alessia", "Bertoia"], ["Elizaveta", "Titova"], ["Barbara", "Rush"], ["Michaela", "Ince"], ["Madona", "Najarian"], ["Paola", "Capella"], ["Marina", "Ferreira"], ["Aleksandra", "Razumova"], ["Brie", "Whitehead"], ["Paulina", "Mielewczyk"], ["Alessandra", "Pennesi"], ["Lucia", "Gatti"], ["Kimberly", "Couts"], ["Samantha", "Powers"], ["Stephanie", "Jeanes"], ["Megan", "Price"], ["Maya", "Gaverova"], ["Olivia", "Mislov"], ["Ezgi", "Albayrak"], ["Tatsiana", "Teterina"], ["Emma Sofia", "Helisten"], ["Camille", "Maisonnave"], ["Evelyn", "Mayr"], ["Lauren", "Jones"], ["Mirna", "Marinovic"], ["Lydia", "Lopez Lopez"], ["Maria Elena", "Badillo"], ["Maria", "Sinigaglia"], ["Xi Jing", "Hong"], ["Bianca", "Aboubakare"], ["Zina", "Bretzel"], ["Ekaterina", "Krylova"], ["Denise", "Dy"], ["Elisabeth", "Pleyer"], ["Ines", "Santos"], ["Kristina", "Doerr"], ["Loredana", "Serbu"], ["Mia", "Kasih"], ["Dorotea", "Kraljevic"], ["Rayssa", "Haddad"], ["Aleksandra", "Madzik"], ["Lauren", "Shumate"], ["Goele", "Lemmens"], ["Agni", "Stefanou"], ["Adina Maria", "Gabor"], ["Mihaela", "Giban"], ["Ji Hee", "Lee"], ["Marina", "Skvortsova"], ["Natasha", "Swanepoel"], ["Estefiana", "Greco"], ["Molly", "Scott"], ["Wanjika", "Ngaruiya"], ["Jennifer", "Meredith"], ["Aleksandra", "Kulikova"], ["Olivia", "Matuszak"], ["Juliana", "Alzate"], ["Prerana", "Prathap"], ["Prathana", "Prathap"], ["Eva", "Pigova"], ["Mia", "Sacca"], ["Rita", "Bengelloun Touimy"], ["Nadira", "Burikhodjaeva"], ["Salome", "Chachkhunashvili"], ["Akshitha", "Basavaraju"], ["Vanja", "Galijasevic"], ["Alexandra", "Dulgheru"], ["Lesia", "Tsurenko"], ["Wing Yau Venise", "Chan"], ["Daksha", "Mulay"], ["Leticia", "Demichelli"], ["Matilde", "Herrera Govantes"], ["Patrycja", "Chackiewicz"], ["Patricia", "Veresova"], ["Jennifer", "Yen"], ["Anna Giulia", "Remondina"], ["Zoe", "Bambridge"], ["Ah Ren", "Han"], ["Lais", "Ogata"], ["Natasha", "Lotuffo"], ["Doris", "Kuselj"], ["Adla", "Mahic"], ["Ying Ying", "Duan"], ["Maya", "Kato"], ["Shweta", "Kakhandki Gadigeppa"], ["Chloe", "Mielgo Herrera"], ["Kanako", "Ishida"], ["Jelena", "Savic"], ["Giorgia", "Pozzan"], ["Macarena", "Rodriguez Capilla"], ["Vanja", "Radunovic"], ["Ina", "Kauppila"], ["Ana Lilyan", "Guzman"], ["Timea", "Bacsinszky"], ["Katharina", "Killi"], ["Anahita", "Jagtiani"], ["Melissa Rose", "Orteza"], ["Stefania", "Imolesi"], ["Raja Rajeshwari", "Pamidimukkala Venkata"], ["Martina", "Fratini"], ["Anna", "Gorunovich"], ["Carolina", "Garcia"], ["Ana Clara", "Duarte"], ["Pei Ling", "Tong"], ["Nazari", "Urbina"], ["Laura", "Morrill"], ["Tamsyn", "Briscoe"], ["Rana", "Zafer"], ["Francesca", "Dubras"], ["Elena", "Kazakova"], ["Kate", "Antosik"], ["Ximena", "Aguilar"], ["Mirna", "Cicak"], ["Yoshimi", "Kawasaki"], ["Shanki", "Dandeniya"], ["Ioana", "Boronea"], ["Emiko", "Ito"], ["Ashley", "Weinhold"], ["Anastasia", "Revzina"], ["Marta", "Arnes Cacho"], ["Sung Hee", "Shin"], ["Alexandra", "Derungs"], ["Michelle", "Jlilati"], ["Mariana", "Fernandez Larrandaburu"], ["Sabina", "Warta"], ["Maria Paula", "Bagnati"], ["Carolina", "Bokenhans"], ["Jessica", "Jackson"], ["Fernanda", "Perrotta"], ["Ines", "Pereira"], ["Tea", "Faber"], ["Hana", "Birnerova"], ["Milena", "Tona"], ["Stephanie", "Brown"], ["Nicole", "Rottmann"], ["Julia", "Huschke"], ["Tatiana", "Illova"], ["Mirte", "De Bakker"], ["Cristina", "Valladares Nunez"], ["Stanislava", "Cozirscaia"], ["Tanya", "Germanlieva"], ["Merritt", "Emery"], ["Shani", "Arnon"], ["Estefania", "Donnet"], ["Anthea", "Murfet"], ["Galina", "Vishnikina"], ["Sirui", "He"], ["Alona", "Fomina"], ["Saori", "Miyamoto"], ["Nina", "Pantic"], ["Elizaveta", "Zaytseva"], ["Trelsie", "Sadler"], ["Reka", "Zsilinszka"], ["Subbadharmi", "Sundaram"], ["Appollonia", "Melzani"], ["Hui Chi", "Huang"], ["Christala", "Andrews"], ["Natalia", "Cheng"], ["Latifah", "Al Sayed Omar"], ["Agatha", "Zmijak"], ["Kinnie", "Laisne"], ["Elena", "Jetcheva"], ["Kamonwan", "Thongsaner"], ["Nancy", "El Molla"], ["Erina", "Kikuchi"], ["Linda", "Hricistova"], ["Hannah", "Fick"], ["Alisa", "Kleybanova"], ["Paula", "Dinuta"], ["Florence", "Na"], ["Ashmitha", "Easwaramurthi"], ["Katia", "Viera Erbach"], ["Diana", "Narzikulova"], ["Andrea", "Rebrova"], ["Paula Catalina", "Robles Garcia"], ["Machiko", "Shigefuji"], ["Kate", "Zueva"], ["Holly", "Cao"], ["Ondine", "Trompette"], ["Anastasia", "Meglinskaya"], ["Ghizlane", "Hatim"], ["Vesna", "Dolonc"], ["Elina", "Gasanova"], ["Chu", "Chu"], ["Dania", "Musina"], ["Eva", "Kadlecova"], ["Daniela", "Amelunge"], ["Kristina", "Bozinovska"], ["Taylor", "Ormond"], ["Manumea", "Durie"], ["Emily", "Fraser"], ["Roxane", "Vaisemberg"], ["Aude", "Vermoezen"], ["Mary", "Liu"], ["Andra Edith", "Marinescu"], ["Ivana", "Belejova"], ["Suncica", "Strkic"], ["Carolin", "Weikard"], ["Maria Anna", "Koutaniti"], ["Kim", "Van Der Horst"], ["Petra", "Vogel"], ["Alexandra", "Tufa"], ["Maria Luz", "Perlini"], ["Corinna", "Dentoni"], ["Majdouline", "Akrate"], ["Chika", "Terasawa"], ["Kateryna", "Nezhura"], ["Tshidiso", "Mosinyi"], ["Victoria", "Azarenka"], ["Sousan", "Massi"], ["Laura", "Sadria"], ["Rebecka", "Persson"], ["Denise", "Muresan"], ["Mikaela", "Martinez"], ["Carla", "Lorenzo Jodar"], ["Vana", "Sutalo"], ["Denise", "Kirbijikian"], ["Hulya", "Esen"], ["Maja", "Sujica"], ["Laura", "Morales"], ["Sesil", "Karatantcheva"], ["Karolyn", "Grymel"], ["Erika", "Perez"], ["Ajla", "Behram"], ["Dena", "Laadan"], ["Melissa", "Garcia"], ["Lauren", "Hankle"], ["Mariana", "Duque Marino"], ["Ia", "Jikia"], ["Valentina", "Ramirez"], ["Alessandra", "Caprara"], ["Anna", "Simkova"], ["Imane", "Toubal"], ["Andrea", "Kwong"], ["Martina", "Gregoric"], ["Krystina", "Titz"], ["Saori", "Nakamura"], ["Irene", "Santos Bravo"], ["Lynn", "Blau"], ["Barbora", "Vykydalova"], ["Sara", "Secco"], ["Yung Jan", "Chan"], ["Maria Laura", "Scapigliati"], ["Megan", "Toole"], ["Annie", "Goransson"], ["Arianna", "Magagnoli"], ["Yevgeniya", "Rezepkina"], ["Natalia", "Gonzalez Martinez"], ["Kristen", "Rafael"], ["Anna", "Mydlowska"], ["Vivien", "Silfany Tony"], ["Silvia", "Bastici"], ["Ai", "Yamamoto"], ["Mariya", "Kovaleva"], ["Roxanne", "Ellison"], ["Alexandra", "Kovacs"], ["Melanie", "Delsart"], ["Lucia", "Huber"], ["Maria", "Christensen"], ["Astrid", "Besser"], ["Kerstin", "Peckl"], ["Jennifer", "Furnari"], ["Nicole", "Smith"], ["Kari", "Wig"], ["Lisa", "Sutton"], ["Zlatka", "Petrova"], ["Paola", "Orozco"], ["Alexandra", "Odell Michels"], ["Myrte", "Molenveld"], ["Sandra", "Fornes Marques"], ["Varatchaya", "Wongteanchai"], ["Ana Maria", "Constantinescu"], ["Sofia", "Barletta"], ["Anastasia", "Zhovtiuk"], ["Bolan", "Tarkoe"], ["Natsumi", "Yokota"], ["Oana Alexandra", "Stanica"], ["Maria", "Barboutova"], ["Marietta", "Bigus"], ["Ines", "Kreilinger"], ["Alexa", "Glatch"], ["Natalia", "Semenenko"], ["Michelle", "Brycki"], ["Lenka", "Dzygovska"], ["Yulia", "Kulikova"], ["Meli", "Garcia Truchado"], ["Neha Sujit", "Nair"], ["Annabel", "Bann"], ["Bin Jie", "Luo"], ["Manana", "Shapakidze"], ["Jennifer", "Rabot"], ["Guadalupe", "Moreno"], ["Joanna", "Zwirbulis"], ["Bhavani", "Tirumurti"], ["Stephanie", "Weinstein"], ["Jessica", "Young"], ["Eliza Adriana", "Matache"], ["Nicky", "Van Dyck"], ["Nivea", "Bezich Cavinta"], ["Lucie", "Sipkova"], ["Katalin", "Szekely"], ["Lacey Jo", "Coleman"], ["Michaela", "Silesova"], ["Sabine", "Lisicki"], ["Alessandra", "Di Batte"], ["Zuzana", "Michalicova"], ["Alina", "Gershman"], ["Lauren", "Greco"], ["Galina", "Semenova"], ["Romina", "Puglia"], ["Xenia", "Samoilova"], ["Anna", "Larkina"], ["Ana Regina", "Buenviaje"], ["Line", "Al Ghannam"], ["Heatherm", "Steinbauer"], ["Mia", "Drobnjak"], ["Jane", "Huh"], ["Ramona", "Sarba"], ["Szu Yu", "Lin"], ["Yi", "Yang"], ["Maria", "Guerreiro"], ["Antonia", "Fohse"], ["Cagla", "Buyukakcay"], ["Angelica", "Torres"], ["Nadina", "Secerbegovic"], ["Tracy", "Castillo"], ["Maria Eugenia", "Torres"], ["Ana", "Bezjak"], ["Lauren", "Albanese"], ["Gabriela", "Rangel"], ["Yukari", "Kishiro"], ["Mihaela Florina", "Bunea"], ["Jilke", "Nelord"], ["Insa", "Wickmann"], ["Tinusha", "Sivaganam"], ["Yoko", "Naito"], ["Alexandra", "Levianska"], ["Camila", "Munoz Quintanilla"], ["Tatiana", "Varela"], ["Madalina", "Florea"], ["Miki", "Ueno"], ["Ana", "Savic"], ["Sara", "Celma Boix"], ["Joanna", "Mather"], ["Alexandra", "Ulbrichtova"], ["Nadine", "Fahoum"], ["Benedetta", "Sabatini"], ["Hanna", "Malakhovich"], ["Kun Hee", "Kim"], ["Courtney", "Spafford"], ["Yuri", "Gonto"], ["Michaela", "Pochabova"], ["Sharani", "Gaini"], ["Priscila", "Martinez"], ["Yuan", "Jia"], ["Marina", "Yudanov"], ["Andrea", "Strasakova"], ["Sara", "Julio"], ["Tuvana", "Denizci"], ["Maria", "Mosolova"], ["Sophia", "Bergner"], ["Yanina", "Wickmayer"], ["Shivika", "Burman"], ["Yana", "Shulaeva"], ["Niroshita", "Madanala"], ["Abigail", "Olivier"], ["Eve", "Castaing"], ["Katie", "Welch"], ["Ratchaya", "Chaichanachaicharn"], ["Denisa", "Chiriacu"], ["Anouk", "Tigu"], ["Maria Alexandra", "Maldonado"], ["Julia", "Sagan"], ["Ling", "Zhang"], ["Michaela", "Kucharova"], ["Fumi", "Kawatoko"], ["Kir", "Kemp"], ["Amanda", "Elliott"], ["Farwa", "Husain"], ["Alicia", "De La Capilla"], ["Bing Jie", "Luo"], ["Natalie", "Pluskota"], ["Sarah", "Behbehani"], ["Parija", "Maloo"], ["Ariane", "Maack"], ["Madlen", "Kadur"], ["Renee", "Binnie"], ["Marina", "Nicolas Chueca"], ["Kairangi", "Vano"], ["Andrea", "Hernandez"], ["Isabel", "Mas Breto"], ["Veronika", "Sepp"], ["Niamh", "Coveney"], ["Veronica Ruo Qi", "Li"], ["Clarisse", "Baca"], ["Yuki", "Hasegawa"], ["Emelyn", "Starr"], ["Nungnadda", "Wannasuk"], ["Debora", "Castany Muniente"], ["Uthumporn", "Pudtra"], ["Remeice", "Ellis"], ["Rana", "Ramez"], ["Inge", "Spronk"], ["Karina", "Kedzo"], ["Ayumi", "Okuma"], ["Kotomi", "Takahata"], ["Katherine", "Hoepelman"], ["Jia Jing", "Lu"], ["Lara", "Albini"], ["Malgorzata", "Glodkowska"], ["Natalia", "Glodkowska"], ["Tereza", "Belblova"], ["Wei Ping", "Lee"], ["Ginebra", "Mostajo Estrada"], ["Juliet", "Bocklet"], ["Aya", "Sato"], ["Shinobu", "Kiribayashi"], ["Shalini", "Sahoo"], ["Andrea", "Oates"], ["Jodie", "Mckinnon"], ["Dominika", "Zaprazna"], ["Chi Fan", "Liu"], ["Amel", "Benhaj"], ["Katarina", "Lerga"], ["Maria", "Sanchez"], ["Tiffany", "Kurniawan"], ["Natasa", "Zoric"], ["Asmaa", "Salah Hassan"], ["Claire", "Bartlett"], ["Sara", "Marcionni"], ["Alexandra", "Dachos"], ["Stephanie", "Theiler"], ["Monique", "Lynch"], ["Linda", "Aqvist"], ["Anna", "Agamennone"], ["Miyu", "Date"], ["Marta", "Ruiz Fernandez De Castro"], ["Samantha", "Noble"], ["Ester", "Baschirotto"], ["Caroline", "Beaulieu"], ["Elisa", "Sarmiento Aranda"], ["Natalie", "Fehse"], ["Maria", "Prishlyak"], ["Shilpi", "Jaiswal"], ["Margaryta", "Pashket"], ["Judit", "Nagy"], ["Vivian", "Cassimer"], ["Natalie", "Kolganova"], ["Valeria", "Petrovich"], ["Anastasia", "Ulikhina"], ["Amy", "Sargeant"], ["Nives", "Pavlovic"], ["Chelsea", "Preeg"], ["Grace", "Leake"], ["Cassandra", "Herzberg"], ["Dominice", "Ripoll"], ["Anastasia", "Kharchenko"], ["Anastasia", "Malhotra"], ["Ioana Alexandra", "Oprea"], ["Latrell", "Reed"], ["Ksenia", "Palkina"], ["Pairin", "Panjasilpa"], ["Mika", "Urbancic"], ["Briggitt", "Marcovich"], ["Amparo", "Botella Boix"], ["Ludovica", "Perri"], ["Elisa", "Peth"], ["Ioana Alexandra", "Bara"], ["Paloma", "Navarro Montes De Oca"], ["Arina", "Rodionova"], ["Kelly", "Gebert"], ["Julia", "Livotova"], ["Karla", "Miranda"], ["Irina", "Letseva"], ["Amira", "Benaissa"], ["Tzu Chen", "Hsu"], ["Cristina", "Vasco"], ["Naoko", "Suzuki"], ["Efrat", "Mishor"], ["Caitlyn", "Baines"], ["Margarita", "Vasileva"], ["Kelsey", "Anonsen"], ["Maria", "Komissarova"], ["Yu Chu", "Juan"], ["Nikki", "Prosser"], ["Natasha", "Marks"], ["Keri", "Wong"], ["Ester", "Masuri"], ["Ingrid Esperanza", "Vargas Calvo"], ["Sanne", "Bakker"], ["Ana", "Perlain"], ["Katerina", "Vankova"], ["Simone", "Kalhorn"], ["Darya", "Nakidaylo"], ["Melinda", "Akerbrant Bengtsson"], ["Victoria", "Ford"], ["Julia", "Glushko"], ["Valeria", "Pulido Velasco"], ["Caroline", "Magnusson"], ["Ece", "Firat"], ["Caroline", "Stevens"], ["Victoria", "Brook"], ["Tammi", "Patterson"], ["Marcela", "Fonseca Villarreal"], ["Carmen", "Lopez Rueda"], ["Julia", "Osmolets"], ["Tamara", "Dobrovolna"], ["Ni", "Zhou"], ["Lindsey", "Hardenbergh"], ["Laura", "Gilbert"], ["Ceara", "Oneill"], ["Andrea", "Yacaman"], ["Yoon Young", "Jeong"], ["Yi Ju", "Chen"], ["Dan Ni", "Jiang"], ["Jennifer", "Allan"], ["Irina Alexandra", "Paraschiv"], ["Alina", "Petras"], ["Maria", "Bru Ballara"], ["Jamie", "Hampton"], ["Kristy", "Frilling"], ["Saori", "Oda"], ["Sindy", "Lochon"], ["Bianca", "Spinassi"], ["Jovana", "Petrov"], ["Stefana", "Petrov"], ["Ghizlene", "Douballah"], ["Thi Tam Hao", "Tran"], ["Caroline", "Lilley"], ["Yanisleidis", "Fernandez"], ["Marina", "Canals Bennassar"], ["Alexandria", "Walters"], ["Haruka", "Terashi"], ["Elitsa", "Mileva"], ["Maria", "Shalaeva"], ["Patricia", "Salles Rousseau Guedes"], ["Stefi", "Gjine"], ["Janine", "Weinreich"], ["Roana", "Schiopu"], ["Zhanna", "Panfilkina"], ["Burce", "Kurkan"], ["Teona", "Tsertsvadze"], ["Marcela", "Rivero"], ["Nina", "Vulovich"], ["Jin", "Huang"], ["Mariam", "Kurdadze"], ["Kristina", "Bogacheva"], ["Stacey", "Lee"], ["Ramona", "Czakon"], ["Juliana", "Moscoso"], ["Alison", "Bai"], ["Shiho", "Akita"], ["Regina", "Husak"], ["Emma", "Smith"], ["Tatiana", "Bua"], ["Shiori", "Araki"], ["Antonia", "Kolovou"], ["Carolina", "Delgado"], ["Zhi Xian", "Guo"], ["Dayna", "Grazette"], ["Meutia", "Sabrina"], ["Trudie", "Du Toit"], ["Andjela", "Kankaras"], ["Alejandra", "Gamboa"], ["Paola", "Villalon"], ["Alize", "Cornet"], ["Chu Xian", "Huang"], ["Laura Zsofia", "Biro"], ["Stephanie", "Parker"], ["Mariana", "Diaz De Leon"], ["Risa", "Hasegawa"], ["Zuzana", "Zlochova"], ["Valentina", "Novelo"], ["Nina", "Zander"], ["Astrid", "Thomsen"], ["Mireia", "Recasens Horta"], ["Madeleine", "Dax"], ["Julie", "Verdy"], ["Kai Lin", "Zhang"], ["Ya Ying", "Wang"], ["Dilyara", "Saidkhodjaeva"], ["Marina", "Takimura"], ["Yana", "Kireeva"], ["Esther", "Scheirlynck"], ["Aya", "Minokoshi"], ["Stephanie", "Herz"], ["Bridget", "Healy"], ["Anastasia", "Kontratevidi"], ["May", "El Wardany"], ["Daria", "Tuaeva"], ["Denisa", "Dumitrescu"], ["Eirini", "Georgatou"], ["Chloe", "Jones"], ["Daniela", "Cociorba"], ["Olivia", "Smith"], ["Martina", "Granatelli"], ["Meng", "Liu"], ["Chane", "Hines"], ["Anna", "Tatishvili"], ["Marta", "Espigado Delgado"], ["Lavinia", "Sereteanu"], ["Chiao Fang", "Lo"], ["Yagmur Basak", "Gone"], ["Laura", "Moll Bagur"], ["Alena", "Nogolova"], ["Lara", "Rafful"], ["Alejandra", "Garcia"], ["Christina", "Seib"], ["Anastasia", "Balyuk"], ["Rachel", "Houpapa"], ["Mu Ying", "Chen"], ["Zi Jun", "Yang"], ["Rosalia", "Alda"], ["Mia", "Liimatainen"], ["Fabiana", "Palcic"], ["Abigail", "Greif"], ["Rachel", "Manasse"], ["Andrea Fernanda", "Flores"], ["Natascha", "Kennis"], ["Daniela", "Islamaj"], ["Deisy", "Bolivar Espinosa"], ["Stephanie", "Vogt"], ["Mara", "Zovko"], ["Dwi", "Ariyana"], ["Nina", "Sertic"], ["Ekaterina", "Zapadalova"], ["Natalie", "Barbir"], ["Natalia", "Lozano Anton"], ["Julia", "Gavenko"], ["Ksenija", "Grinshpun"], ["Teresa", "Araujo"], ["Anastasia", "Usova"], ["Paula", "Jaime Agramon"], ["Yulia", "Solonitskaya"], ["Xuan Yu", "Guo"], ["Marija", "Mirkovic"], ["Alice", "Tisset"], ["Sasirin", "Borwornchokchai"], ["Luiza", "Coman"], ["Martha", "Sanchez"], ["Daniela", "Carp"], ["Shivani", "Mysore Sreekantiah"], ["Chen", "Astrogo"], ["Mariya", "Ryzhova"], ["Maryna", "Kariuk"], ["Kelly", "Couturier"], ["Sara", "Czubak"], ["Anastasia", "Butcovscaia"], ["Naomi", "Broady"], ["Paula", "Alvarez Pino"], ["Mariana", "Demichelli Vergara"], ["Justina", "Derungs"], ["Melanie", "Delannoy"], ["Maria Emilia", "Ponton Caamano"], ["Antonia", "Smallbone"], ["Ruo Nan", "Zhang"], ["Esmira", "Gheisary"], ["Artijeta", "Goxhuli"], ["Ai", "Taira"], ["Busra", "Demirtas"], ["Michelle", "Schroeder"], ["Yuuki", "Tanaka"], ["Hye Jin", "Byun"], ["Arletis", "Fernandez"], ["Aliaa", "Kamal"], ["Roberta", "Gerovac"], ["Petra", "Kvitova"], ["Kara", "Knight"], ["Qian", "Wang"], ["Stefanie", "Voegele"], ["Cristina Madalina", "Stancu"], ["Judith", "Collado"], ["Claudine", "Paulson"], ["Ayumi", "Morita"], ["Juliette", "Coupez"], ["Sophie", "Proctor"], ["Yue Yue", "Hu"], ["Ivana", "Milutinovic"], ["Elena", "Nartsissova"], ["Lisa", "Weidenbruck"], ["Katharina", "Brown"], ["Anita", "Paliiska"], ["Dinali", "De Silva"], ["Maureen", "Rielley"], ["Mccall", "Jones"], ["Eugenia", "Vertesheva"], ["Marta", "Rodriguez Carbajo"], ["Renee", "Reinhard"], ["Parvathy", "Vijayan"], ["Inga", "Audrina"], ["Oriana", "Escalante"], ["Olfa", "Dhaoui"], ["So Hyun", "Bae"], ["Julia", "Chernyaeva"], ["Lara", "Pujol Rotger"], ["Roberta", "Greco"], ["Anastasia", "Wagner"], ["Kamolnadda", "Thumrongluck"], ["Ekin", "Koca"], ["Leticia", "Costas"], ["Farah", "Abougeib Selo"], ["Martina", "Erceg"], ["Kateryna", "Byelcheva"], ["Sandra", "Dynka"], ["Paola", "Calderon"], ["Sofiko", "Sharangia"], ["Kirsten", "Magi"], ["Sofia", "Vignau"], ["Emily", "Zanussi"], ["Iveta", "Guneva"], ["Laura", "Babet"], ["Huan", "Li"], ["Charlotte", "Bossy"], ["Mariana", "Levova"], ["Ji Hye", "Shin"], ["Yuliya", "Kalabina"], ["Janina", "Toljan"], ["Courtney", "Clayton"], ["Maria", "Bayon"], ["Lisa", "Brinkmann"], ["Stephanie", "Kent"], ["Erin", "Wilbert"], ["Hitomi", "Saito"], ["Anabel", "Pollan"], ["Tamara", "Stojkovic"], ["Maria Paula", "Hernandez"], ["Sandra", "Podolak"], ["Sandra", "Roma"], ["Paloma", "Diaz Sada"], ["Malena", "Gordo"], ["Lisa", "Wagner"], ["Dredi Inia", "Ghinda"], ["Bianca", "Dumitrascu"], ["Amitha", "Arudpragasam"], ["Pavla", "Smidova"], ["Martina", "Trierweiler"], ["Montserrat", "Blasco Fernandez"], ["Madison", "Brengle"], ["Louise", "Grangette"], ["Carlota", "Calve Munoz"], ["Na Ri", "Kim"], ["Nikolina", "Dominikovic"], ["Lillian", "Aviles"], ["Petra", "Mokra"], ["Harshini", "Reddy"], ["Genevieve", "Lorbergs"], ["Aleksandra", "Zawadzka"], ["Alexandra", "Martin Sanchez"], ["Juan Rosalia", "Tejoprayitno"], ["Sorana", "Cirstea"], ["Martina", "Santoni"], ["Frederike", "Putthoff"], ["Rosaura", "Ramirez Vega"], ["Ekaterina", "Pushkareva"], ["Kana", "Aoki"], ["Elitsa", "Kostova"], ["Julie", "Herve"], ["Hayley", "Ericksen"], ["Anja", "Vreg"], ["Niltooli", "Wilkins"], ["Nina", "Mujezinovic"], ["Anastasija", "Sevastova"], ["Michelle", "Suarez"], ["Jessy", "Rompies"], ["Deyanirr", "Solorio"], ["Diana Madalina", "Zainea"], ["Marina", "Lazic"], ["Carolyn", "Mcveigh"], ["Naa Shika", "Adu"], ["Denisa", "Dolejsova"], ["Ayse Ece", "Yavuz"], ["Barbora", "Matusova"], ["Bibiana", "Almeida"], ["Katarina", "Gajic"], ["Martyna", "Majewska"], ["Ine", "Nowe"], ["Madalina", "Lupu"], ["Sladjana", "Saveljic"], ["Manuela", "Pietzuch"], ["Marlena", "Pietzuch"], ["Carlista", "Mohammed"], ["Jade", "Windley"], ["Laura", "Pola"], ["Krista", "Damico"], ["Aleksandra", "Djokic"], ["Alena", "Luef"], ["Fabienne", "Holz"], ["Luana Georgiana", "Rednic"], ["Lauren", "Mchale"], ["Andrea", "Berkova"], ["Shauna", "Morgan"], ["Kerstin", "Kreis"], ["Stella", "Papaspyrou"], ["Sushrutha", "Reddy Chintala"], ["Alison", "Ramos"], ["Simona", "Synkova"], ["Dania Bianca", "Payer"], ["Fatima Zorah", "Bouabdallah"], ["Sybille", "Khayat"], ["Kristi", "Boxx"], ["Paula", "Appezzato"], ["Nadia", "Lalami"], ["Fiona", "Gracia Tjipto"], ["Sonja", "Molnar"], ["Lisa", "Summerer"], ["Monika", "Sirilova"], ["Marina", "Sato"], ["Aimee", "Jarratt"], ["Sarah", "Makki"], ["Cristiana", "Narchi"], ["Nicole", "Stanziola"], ["Carolin", "Kottutz"], ["Jade", "Curtis"], ["Janna", "Hildebrand"], ["Alexandra", "Cadantu"], ["Sarah", "Jones"], ["Irina", "Falconi"], ["Klio", "Manolopoulou"], ["Syna", "Kayser"], ["Keilly", "Ulery"], ["Stephanie", "Scimone"], ["Julia", "Wais"], ["Dragana", "Pojuzina"], ["Andreea Daniela", "Georgescu"], ["Jane", "Sushkova"], ["Radhika", "Jadhav"], ["Carissa", "Aboubakare"], ["Carolina", "De Los Santos"], ["Chinami", "Ogi"], ["Zina", "Monteiro"], ["Andrea", "Rivera"], ["Salome", "Ugrekhelidze"], ["Hiromi", "Takeuchi"], ["Gabriela", "Barreto"], ["Julia", "Spiridonova"], ["Galina", "Mihaylova"], ["Yingying", "Xi"], ["Adriana", "Pereira"], ["Federica", "Di Sarra"], ["Amanda", "Carreras"], ["Khristina", "Kazimova"], ["Mika", "Morimoto"], ["Aleksandra", "Krupina"], ["Martina", "Balogova"], ["Emily", "Wolf"], ["Marie Claude", "Ndzoudja"], ["Deepna", "Vazirani"], ["Melanie", "Klaffner"], ["Begona", "Garcia Soto"], ["Kristina", "Kucova"], ["Katharina", "Negrin"], ["Dina", "El Farouk"], ["Sandra", "Soler Sola"], ["Rebeca", "Delgado Gerardo"], ["Katarina", "Poljakova"], ["Manon", "Arnaud"], ["Claudia", "Franze"], ["Alina", "Tseplukhova"], ["Jocelyn", "Ffriend"], ["Polina", "Dzyuba"], ["Petra", "Babakova"], ["Irina", "Khatsko"], ["Marsela", "Gunawan"], ["Vivien", "Laszloffy"], ["Daniela Alexandra", "Ilcu"], ["Bianca", "Schlumberger"], ["Carla", "Beltrami"], ["Karola", "Diaconescu"], ["Xinyun", "Han"], ["Erin", "Troedson"], ["Ericka", "Penaranda"], ["Alessa", "Waibel"], ["Achiraya", "Sriprome"], ["Ines", "Ferrer Suarez"], ["Ekaterina", "Komarova"], ["Shiho", "Otake"], ["Rieke", "Honiball"], ["Ekaterina", "Lukomskaya"], ["Claudia", "Hidalgo"], ["Elizabeth", "Ullathorne"], ["Olivia", "Howlett"], ["Yera", "Campos Molina"], ["Magdalena", "Smejova"], ["Franziska", "Goettsching"], ["Sophia", "Mulsap"], ["Andrea", "Quintana"], ["Daniela", "Noceto"], ["Laura", "Claus"], ["Nadja", "Gilchrist"], ["Fabiana", "Mersan"], ["Hanna", "Kapustka"], ["Plamena", "Kurteva"], ["Fernanda", "Dias"], ["Shinann", "Featherston"], ["Christina", "Scherndl"], ["Julia", "Klackenberg"], ["Zeljka", "Gavrilovic"], ["Stephany", "Chang"], ["Anastasia", "Bukhanko"], ["Carolina", "Larco"], ["Edyta", "Cieplucha"], ["Lisa", "Jamais"], ["Silvia", "Cevoli"], ["Nelly", "Ciolkowski"], ["Zaruhi", "Harutyunyan"], ["Priscilla", "Heise"], ["Antonela", "Marincic"], ["Veronika", "Ciganikova"], ["Nicole", "Riner"], ["Haruka", "Naito"], ["Valentina", "Fauviau"], ["Gia", "Mcknight"], ["Lara", "Meccico"], ["Yolanda", "Nieto"], ["Marina", "Gallo"], ["Anastasia", "Pivovarova"], ["Katarina", "Marackova"], ["Unnati", "Purushotham"], ["Yoshiko", "Koizumi"], ["Yi Run", "Han"], ["Ksenia", "Lykina"], ["Magda", "Okruashvili"], ["Alla", "Aleksandrova"], ["Joany", "Pontjodikromo"], ["Alessia", "Bianchi"], ["Orian", "Ben Haim"], ["Yukari", "Nakashima"], ["Veronika", "Sigutova"], ["Abigail", "Guthrie"], ["Nathalie", "Elgales"], ["Kelly", "Irving"], ["Caitlin", "Steel"], ["Kateryna", "Yergina"], ["Sitong", "Yan"], ["Anna", "Voronkova"], ["Marcela", "Gomez"], ["Eva Maria", "Altenburger"], ["Lucia Ioana", "Crisan"], ["Andreea Roxana", "Vaideanu"], ["Marcela", "Cuderman"], ["Martha V", "Blakely"], ["Maria De Los Angeles", "Cardenas"], ["Giulia", "Zambaiti"], ["Petra", "Krejsova"], ["Daria", "Novosad"], ["Yi Ching", "Chen"], ["Mayumi", "Seki"], ["Diana", "Viteri"], ["Giorgia", "Sampietro"], ["Erica", "Krisan"], ["Alison", "Riske"], ["Maria Luiza", "Craciun"], ["Alisa", "Buslayeva"], ["Omlata Rai", "Kumari"], ["Julia", "Thiem"], ["Larn", "Mcshane"], ["Ayano", "Nakamura"], ["Madeleine", "Saari Bystrom"], ["Jeannine", "Prentner"], ["Viet Ha", "Ngo"], ["Carolina", "Kubicska"], ["Tina", "Zimmermann"], ["Dhara Bharat", "Thakor"], ["Trudy Gine", "Amoranto"], ["Carla", "Lindlar"], ["Maria Jose", "Arechavaleta"], ["Claudia Marcela", "Silva Aragon"], ["Caroline", "Wozniacki"], ["Mona", "Barthel"], ["Lisa Maria", "Reichmann"], ["Yaimaris", "Paterson Crespo"], ["Anastasia", "Grymalska"], ["Ivette", "Lopez"], ["Inna", "Sokolova"], ["Astrid", "Quintero"], ["Aziza", "Butoyi"], ["Camila", "Bernal"], ["Alize", "Lim"], ["Audrey", "Van Wolde"], ["Veronica", "Garcia Herrera"], ["Mallory", "Cecil"], ["Claudia", "Giovine"], ["Leyla Esther", "Cabrera"], ["Angela", "Roesler"], ["Maria Cristina", "Selis"], ["Karen", "Filippou"], ["Ana", "Belzunce Crompin"], ["Miku", "Bando"], ["Breanna", "Tilly"], ["Nahoko", "Tanaka"], ["Maria Fernanda", "Macedo"], ["Ionela Andreea", "Iova"], ["Jana", "Jandova"], ["Ioana", "Ivan"], ["Vivian", "Janecki"], ["Marina", "Lysenko"], ["Mai", "Iwasaki"], ["Lorena", "Piedras"], ["Martina", "Vitulli"], ["Jenny", "Claffey"], ["Viktoriya", "Semyrodenko"], ["Poojashree", "Venkatesha"], ["Wen Bo", "Wang"], ["Iuliana", "Oante"], ["Renuka", "Keswani"], ["Shao Fang", "Ong"], ["Barbara", "Lormeau"], ["Courtney", "Byron"], ["Vanessa", "Boey"], ["Betty", "Dautriat"], ["Kalinina", "Sandoval"], ["Chang", "Liu"], ["Chinatsu", "Maeda"], ["Vitalia", "Diatchenko"], ["Ima", "Bohush"], ["Stephanie", "Roy"], ["Sandra", "Ion"], ["Romina", "Gualtieri"], ["Camilla", "Franco"], ["Yasmin", "Clarke"], ["Klara", "Vyskocilova"], ["Sianna", "Simmons"], ["Karina", "Bradnam"], ["Eugenia", "Yordanova"], ["Sanda", "Omerovic"], ["Nour", "Abou Saleh"], ["Rosa Maria", "Mendoza"], ["Maria Gracia", "Ycaza"], ["Anne Christine", "Voicu"], ["Daleidis", "Borrego"], ["Laura", "Bosneag"], ["Emma", "Isberg"], ["Rasika", "Sankpal"], ["Ksenia", "Milevskaya"], ["Sayali", "Bhilare"], ["Se Jin", "Lee"], ["Sara", "Guglielminotti"], ["Mazluma", "Turdyeva"], ["Carolina", "Castro"], ["Lenka", "Jurikova"], ["Paula Cristina", "Goncalves"], ["Franziska", "Koenig"], ["Anastassiya", "Zherdeva"], ["Nini", "Lagvilava"], ["Marine", "Tirel"], ["Ana Sofia", "Camberos"], ["Vanja", "Tomic"], ["Stephanie", "Wiltshire"], ["Jessica", "Moore"], ["Maxi", "Ehmer"], ["Nour", "Kaddour"], ["Sierra A", "Ellison"], ["Marketa", "Havelkova"], ["Anneliese", "Tepper"], ["Lara", "Kamnik"], ["Laura Alicia", "Aguilar"], ["Taylor", "Lindsey"], ["Petra", "Padalikova"], ["Lora", "Stancheva"], ["Maria", "Babanova"], ["Florencia", "Sanchez Gil"], ["Josefin", "Andersson"], ["Nicole", "Arosemena"], ["Narisa", "Luanporn"], ["Mikaela", "Kristofersson"], ["Hermon", "Brhane"], ["Kristina", "Schleich"], ["Alexa", "Wimes"], ["Ganna", "Akhinko"], ["Maria", "Voscekova"], ["Irina Camelia", "Begu"], ["Ivana", "Crnogorac"], ["Yaroslava", "Zhishchenko"], ["Chelsey", "Gullickson"], ["Kate", "Rodger"], ["Tadeja", "Majeric"], ["Lutfiana Aris", "Budiharto"], ["Alexandra", "Vukota"], ["Jovana", "Vasic"], ["Camilla", "Margaroli"], ["Janelle", "Cuthbertson"], ["Amelia", "Harris"], ["Caitlin", "Gordon"], ["Kristina", "Antoniychuk"], ["Marina", "Giral Lores"], ["Ruth", "Markov"], ["Oksana", "Kalashnikova"], ["Francesca", "Segarelli"], ["You Jin", "Kang"], ["Susan", "Darnel"], ["Carla", "Nava"], ["Alessondra", "Parra"], ["Martina", "Gaemperle"], ["Jade", "Schoelink"], ["Anastasia", "Nebojanko"], ["Whitney", "Wolf"], ["Valentina", "Kecman"], ["Zana", "Gospodnetic"], ["Jelena", "Trailovic"], ["Yael", "Anays"], ["Ema", "Polic"], ["Dahilmar", "Saez"], ["Elison", "Amadio"], ["Ami", "Nakano"], ["Nataly", "Yoo"], ["Federica", "Denti"], ["Jacqueline", "Wu"], ["Belma", "Beslagic"], ["Jing Jue", "Lu"], ["Anais", "Dallara"], ["Bronwyn", "Davidson"], ["Dipti", "Srivastava"], ["Maja", "Kazimieruk"], ["Laetitia", "Prat"], ["Helen", "Parish"], ["Odalis", "Sardinas"], ["Lorena", "Vincenzini"], ["Tyra", "Calderwood"], ["Natasha", "Pawlowski"], ["Li", "Xi"], ["Veronika", "Birioukova"], ["Aika", "Osawa"], ["Sarah Marija", "Merlic"], ["Puntila", "Namwong"], ["Veronica", "Popovici"], ["Yadira", "Padilla"], ["Chloe", "Smith"], ["Josefine", "Strom"], ["Amanda", "Cunningham"], ["Morgane", "Zowczak"], ["Montserrat", "De Castro"], ["Maria", "Toncheva"], ["Mariya", "Malkhasyan"], ["Natalie", "Proese"], ["Aeriel", "Ellis"], ["Anggrenny", "Oky Suconong"], ["Asha Saravana", "Mohan"], ["Alexandra", "Zaniewski"], ["Claudia", "Mercado"], ["Anastasia", "Savkina"], ["Rita", "Obasigie"], ["Vladlena", "Petushkova"], ["Yvanna", "Kurlak"], ["Beatrice", "Parolai"], ["Shenelle", "Mohammed"], ["Sina", "Hartmann"], ["Daphne", "Staelens"], ["Jawairiah", "Noordin"], ["Ines", "Janbakhsh"], ["Margarita", "Lazareva"], ["Fernanda", "Aranda"], ["Sindy", "Cespedes"], ["Sahar", "Al Disi"], ["Emma", "Flood"], ["Regina", "Shtyagina"], ["Claire", "Valentin"], ["Amie", "Shyu"], ["Rininta", "Hidayat"], ["Shahin", "Ansari"], ["Alexandra", "Whitehead"], ["Rocio", "De La Torre Sanchez"], ["Elena", "Chernyakova"], ["Romina", "Brante"], ["Arabela", "Fernandez Rabener"], ["Pamela", "Amon"], ["Katharina", "Knoebl"], ["Sandra", "Kristjansdottir"], ["Neira", "Fatic"], ["Dagmar", "Dudlakova"], ["Olga", "Kirpicheva"], ["Barbara", "Sobaszkiewicz"], ["Carla", "Murguia"], ["Martina", "Kostalova"], ["Nancy", "Ferguson"], ["Rocio", "Galarza"], ["Monica", "Cantele"], ["Carlota", "Cartes Andres"], ["Sinika", "Jezkova"], ["Christina", "Bonneau"], ["Carla", "Lucero"], ["Stephanie", "Hoffpauir"], ["Clemence", "Terol"], ["Marina", "Lebrao"], ["Nicolette", "Van Uitert"], ["Sandra", "Vukojicic"], ["Audrey", "Leitz"], ["Shaozhuo", "Liu"], ["Barbora", "Krtickova"], ["Karla", "Bonacic"], ["I Pei", "Cheng"], ["Mi Rae", "Ham"], ["Ana Maria", "Chavez Franco"], ["Maria", "Mokh"], ["Naoko", "Masuda"], ["Monika", "Galikova"], ["Kathrin", "Weinwurm"], ["Kate", "Turvy"], ["Margie", "Milliken"], ["Anne", "Blawatt"], ["Kesica", "Jayapalan"], ["Grace", "Cadona"], ["Sacha", "Jones"], ["Elodie", "Erakovic"], ["Constance", "Sibille"], ["Stefana", "Lakicevic"], ["Csilla", "Argyelan"], ["Nada", "Sghyar"], ["Natasha", "Starling"], ["Imke", "Jagau"], ["Charlotte", "Laevens"], ["Sung Hee", "Han"], ["Nelly", "Radeva"], ["Lidia", "Llanos De La Fuente"], ["Tereza", "Mrdeza"], ["Riley", "Blanks"], ["Yoshie", "Yoshihara"], ["Maria Fernanda", "Alvarez A"], ["Mariam", "Kupreishvili"], ["Alexa", "Guarachi"], ["Zuzana", "Linhova"], ["Jordana", "Lujan"], ["Ajda", "Kolmancic"], ["Veronika", "Maksimchyk"], ["Katie", "Gouyette"], ["Monica", "Pezzotti"], ["Virginia", "Ugrcyc"], ["Emily Theresa", "Weiland"], ["Monica", "Chow"], ["Alenka", "Hubacek"], ["Ielyzaveta", "Rybakova"], ["Pamela", "Salas"], ["Alina", "Wessel"], ["Babs", "Van Kampen"], ["Kristina", "Steiert"], ["Ayram", "Edery"], ["Erica", "Robertson"], ["Carolina", "Zeballos"], ["Fanny", "Fracassi"], ["Petra", "Niedermayerova"], ["Vivien", "Svirkovska"], ["Anouk", "Delefortrie"], ["Maria", "Martinez Romero"], ["Alexandra Andreea", "Oancea"], ["Maria", "Kouvatsos"], ["Kjersti", "Lund"], ["Marisela", "Aviles"], ["Natalia", "Piszczkiewicz"], ["Yasmine", "Guimaraes"], ["Kristina", "Benashvili"], ["Xenia", "Suworowa"], ["Magda", "Riutort Bou"], ["Laura", "Heinrichs"], ["Sharon", "Fichman"], ["Elzyata", "Sovaeva"], ["Melisa", "Morales"], ["Laura", "Gambarini"], ["Tatiana", "Carpio"], ["Deirdre", "Cienki"], ["Tamira", "Paszek"], ["Urszula", "Radwanska"], ["Nathalie", "Gunthard"], ["Nigora", "Sirojiddinova"], ["Benita", "Milenkiewicz"], ["Maria", "Nivia"], ["Blessing", "Samuel"], ["Caroline", "Hitimana"], ["Carolina", "Camargo De Luca"], ["Bianca", "Bonotto"], ["Karen Johanna", "Ramirez Rivera"], ["Ana Paula", "Antelo"], ["Bryony", "Hunter"], ["Arantxa", "Rus"], ["Raphaela", "Cordeiro"], ["Nimom", "Segodo"], ["Tina", "Potisk"], ["Rebecca", "Marino"], ["Anais", "Gomar Isart"], ["Ekaterina", "Kamendova"], ["Hiroko", "Kuwata"], ["Aleksandra", "Tucakov"], ["Andra", "Cornea"], ["Ginet", "Pinero"], ["Reka", "Rohonyi"], ["Myrtille", "Georges"], ["Parichart", "Charoensukployphol"], ["Klaudia", "Boczova"], ["Micaela", "Silva"], ["Tatevik", "Yedigaryan"], ["Anna", "Lukashevich"], ["Conny", "Perrin"], ["Irina", "Carrillo Marti"], ["Daniela", "Gonzalez Martinez"], ["Diamond", "Jackson"], ["Silvia", "Carvajal"], ["Daria", "Shilina"], ["Angelina", "Gordienko"], ["Zaida", "Abreu"], ["Rebeca", "Neves"], ["Jaklin", "Alawi"], ["Dilara", "Ahmetagic"], ["Inna", "Gavrilenko"], ["Marine", "Verbeken"], ["Anna", "Jeczmionka"], ["Erin", "Vierra"], ["Julia", "Zakharova"], ["Beatrice", "Gumulya"], ["Pamela", "Montez"], ["A Ram", "Sim"], ["Wen", "Sun"], ["Jennie", "Brobeck"], ["Ji Hye", "Kim"], ["Monika", "Tumova"], ["Dajana", "Csongradyova"], ["Kristina", "Bekavac"], ["Gabriella", "Boboc"], ["Ilaria", "Alessi"], ["Bianca", "Swanepoel"], ["Muriel", "Wacker"], ["Yara", "Abou El Ghar"], ["Menanteau", "Moolman"], ["Yolande", "Leacock"], ["Idil", "Haciraifoglu"], ["Olivia", "Bennett"], ["Lauren", "Embree"], ["Linda", "Fritschken"], ["Elien", "Crombez"], ["Adeline", "Goncalves"], ["Eleonor", "Picot"], ["Elaine", "Genovese"], ["Sankriti", "Sinha"], ["Kai Chen", "Chang"], ["Yun Hee", "Kim"], ["Chutharat", "Rungtein"], ["Yasmine", "Alkema"], ["Kristina", "Pejkovic"], ["Vivian", "Hansen"], ["Silvia Priscila", "Montoya"], ["Karen Elena", "Montoya"], ["Maria", "Klein"], ["Elizabeth", "Johnson"], ["Mo", "Cao"], ["Anna", "Vidgof"], ["Petra", "Martic"], ["Polona", "Hercog"], ["Lorena", "Aviles"], ["Laura", "Beltran"], ["Dilara", "Yurtkuran"], ["Inna", "Agaeva"], ["Lucia", "Kovarcikova"], ["Xiao", "Zhou"], ["Ana", "Quevedo"], ["Andrea", "Popluharova"], ["Veronika", "Studena"], ["Diana", "Kyllmann"], ["Katrin", "Schmidt"], ["Nicole", "Herzog"], ["Jun Yi", "Zheng"], ["Shereen", "Peterson Paul"], ["Celine", "Ghesquiere"], ["Melissa", "Mcqueen"], ["Kristina N", "Smith"], ["Maria Agustina", "Reyes Molina"], ["Prerana Mythri", "Appineni"], ["Martina", "Pradova"], ["Anastasia", "Shchilinskaya"], ["Angie", "Solorzano"], ["Hae Jin", "Jeong"], ["Michelle", "Green"], ["Mallory", "Burdette"], ["Valentina", "Parrilla"], ["Taij Mishma", "Kumar"], ["Patricia", "Vilas Ibanez"], ["Niku", "Amin"], ["Lisa", "Piller"], ["Mona", "Piller"], ["Charlotte", "Rodier"], ["Gabriella", "Bongiovanni"], ["Palma", "Kiraly"], ["Katharina", "Jobst"], ["Surama", "Gotera"], ["Theresa", "Jobst"], ["Nikola", "Hofmanova"], ["Lena Marie", "Hofmann"], ["Camelia Elena", "Hristea"], ["Giuliana", "Pino"], ["Hanna", "Albowicz"], ["Narumi", "Kakegawa"], ["Eugenia", "Dubitshkaya"], ["Victoria", "Rode Bager"], ["Eva", "Wacanno"], ["Ganna", "Lukianchykova"], ["Yi Miao", "Zhou"], ["Eden", "Doliveira"], ["Dildora", "Rakhimova"], ["Verena", "Santos"], ["Sarah", "Mahboob Khan"], ["Sofia", "Medina"], ["Kamila", "Marchocka"], ["Martina", "Di Giuseppe"], ["Chihiro", "Takayama"], ["Ji Hyun", "Lee"], ["Christine", "Masite"], ["Raiza", "Verdecia"], ["Serena", "Frazzitta"], ["Tanisha", "Rohira"], ["Ines", "Carabetta"], ["Katerina", "Ilyina"], ["Alexandra", "Kelleher"], ["Sakiko", "Namba"], ["Dina", "Azwar"], ["Alexandra", "Damaschin"], ["Ekaterina", "Abaeva"], ["Lenah Hatsumi", "Sakai"], ["Veronica", "Seruca"], ["Adeline", "Chiang"], ["Katharina", "Braeutigam"], ["Ting Jr", "Li"], ["Katarzyna", "Piter"], ["Anna", "Tajima"], ["Andressa", "Garcia"], ["Maike", "Zeppernick"], ["Alona", "Shubina"], ["Elizabeth", "Kilborn"], ["Slavica", "Milanovic"], ["Irina", "Dementyeva"], ["Olga", "Fischer"], ["Solveig", "Fosser"], ["Tereza", "Vancurova"], ["Ritwika", "Sen"], ["Juliette", "Surlemont"], ["Valeria", "Savinykh"], ["Jocelyn", "Rae"], ["Valentina", "Stephan"], ["Angelique", "Van Der Meet"], ["Alexandra", "Stuparu"], ["Alice", "Moroni"], ["Linda", "Berlinecke"], ["Evelin", "Barboutova"], ["Jessica", "Alexander"], ["Eveliina", "Virtanen"], ["Maria Elena", "Recalde"], ["Dominika", "Kanakova"], ["Ivana", "Klepic"], ["Josephine", "Haraldsson"], ["Jasmina", "Kajtazovic"], ["Josymar", "Escalona"], ["Danijela", "Tomic"], ["Courtney", "Collins"], ["Simona", "Weymar"], ["Jasmina", "Tinjic"], ["Maria", "Knott"], ["Rebecca", "Cook"], ["Chun Wing", "Sher"], ["Ulker", "Yuregir"], ["Lynsey", "Mccullough"], ["Lucia", "Batta"], ["Lucia", "Vrskova"], ["Alina", "Saracin"], ["Alina", "Shazhko"], ["Martina", "Darczuk"], ["Almudena", "Sanz Llaneza Fernandez"], ["Petra", "Januskova"], ["Kirsten", "Willems"], ["Montana", "Grenfell"], ["Dunja", "Sunkic"], ["Chihiro", "Oasa"], ["Barbara", "Montiel"], ["Marion", "Cammilleri"], ["Darja", "Pribitkow"], ["Taylor", "Douglas"], ["Elisabeth", "Fournier"], ["Nastasiya", "Kipina"], ["Tetyana", "Arefyeva"], ["Jodie", "Williams"], ["Daniella", "Rabkin"], ["Lauren", "Townrow"], ["Martina", "Gledacheva"], ["Giulia", "Bruzzone"], ["Mia", "Fiocca"], ["Alexandra", "Ban"], ["Malou", "Ejdesgaard"], ["Yevgeniya", "Kryvoruchko"], ["Jill M", "Saunders"], ["Camila", "Quesada"], ["Miki", "Kanehira"], ["Karina", "Pimkina"], ["Sarah", "Serrano"], ["Isabel M", "Brito Cardoso"], ["Catarina", "Morais"], ["Yun", "Ku"], ["Tomoko", "Iyori"], ["Gabi", "Rojas"], ["Wanrong", "Li"], ["Camilla", "Boniek"], ["Sasarin", "Borwornchokchai"], ["Geraldine", "Salazar"], ["Adrianna", "Daszkiewicz"], ["Liya", "Tsanava"], ["Tajda", "Bestijanic"], ["Marta", "Sirotkina"], ["Sevil", "Aliyeva"], ["Dana", "Adelson"], ["Chizuru", "Yamazaki"], ["Dalila", "Jakupovic"], ["Jessica", "Picas"], ["Emilie", "Logiacco"], ["Nozomi", "Matsuda"], ["Kumari Sweta", "Solanki"], ["Catia", "Rodrigues"], ["Raquel", "Perez Ruescas"], ["Danielle", "Mills"], ["Lisa Maria", "Moser"], ["Michelle", "De Groot"], ["Monica", "Gorny"], ["Kim Alice", "Grajdek"], ["Carmen", "Lopez Blanco"], ["Charlotte", "Pires"], ["Gracia", "Radovanovic"], ["Catalina", "Maya"], ["Catalina", "Ucros"], ["Yana", "Orlova"], ["Radka", "Jarosova"], ["Alice", "Watter"], ["Hymke", "Maurick"], ["Dalia", "Zafirova"], ["Paulina", "Schippers"], ["Camille", "Sapene"], ["Elyne", "Boeykens"], ["Maria Florencia", "Novillo"], ["Haley", "Gay"], ["Van Ai Ngog", "Nguyen"], ["Asia", "Muhammed"], ["Natalia", "Ryzhonkova"], ["Maria", "Fagerstrom"], ["Jasmine Pernill", "Shankar"], ["Perrine", "Fouche"], ["Anik", "Cepeda"], ["Ilse", "Pacheco"], ["Luana", "Flessak"], ["Tanya", "Raykova"], ["Yuko", "Adachi"], ["Kelsey", "Sundaram"], ["Ksenia", "Mikhaylova"], ["Maria Grazia", "Tonani"], ["Daria", "Maslennikova"], ["Ana", "Gomez Aleman"], ["Maria", "Meliuk"], ["Karin", "Morgosova"], ["Jade", "Pondicas"], ["Fiorella", "Nocino"], ["Vivienne", "Vierin"], ["Alexandra", "Riley"], ["Rocio", "Lopez Alberca"], ["Catalina", "Diaz"], ["Lucy", "Bird"], ["Andrea", "Eskauriatza Ruiz"], ["Daniela", "Trigo"], ["Stefania", "Postorino"], ["Carolina", "Barboza"], ["Giadagiovanna", "Dortona"], ["Maria", "Petrova"], ["Flavia", "Borges"], ["Claudia", "Razzeto"], ["Hannah", "James"], ["Olga", "Blank"], ["Lizeth", "Ramirez"], ["Allie", "Will"], ["Arianna", "Colffer"], ["Sarah", "Leonard"], ["Leire", "Martinez Barredo"], ["Karolina", "Vlachova"], ["Jessica", "Courtnell"], ["Lucia", "Cervera Vazquez"], ["Amira", "Pirovani"], ["Nilupul", "Goonasekera"], ["Nevena", "Arsic"], ["Gabriela", "Scaff Haddad"], ["Lynn", "Schonhage"], ["Theresa Maria", "Braun"], ["Miyu", "Terada"], ["Yu Xuan", "Liu"], ["Aleksandra", "Kecman"], ["Lucie", "Fleischmannov"], ["Marina", "Galkina"], ["Clarissa", "Chen"], ["Rachael", "White"], ["Ximena", "Hermoso"], ["Giulia", "Bruschi"], ["Misaki", "Doi"], ["Afroditi", "Latinopoulou"], ["Margarita", "Edinarova"], ["Francesca", "Mazzali"], ["Kelly", "Blake"], ["Adriana", "Quezada"], ["Bouwiena", "Boer"], ["Veronika", "Domagala"], ["Puja", "Patel"], ["Mandy", "Brown"], ["Victoria", "Larriere"], ["Satjaporn", "Mahajaroenkul"], ["Ofir", "Morag"], ["Aleksandra", "Josifoska"], ["Sandra Mihaela", "Sida"], ["Jelena", "Tomasovic"], ["Jana", "Bezbradica"], ["Marissa", "Armienta"], ["Amaia", "Ormazabal Oregui"], ["Valeria", "Filiaeva"], ["Elena", "Kulikova"], ["Elena", "Andrei"], ["Natalia", "Ziminova"], ["Romana Caroline", "Tabak"], ["Mariana", "Sonnervig"], ["Katie", "Gater"], ["Luiza", "Sonnervig"], ["Karina", "Gootman"], ["Laura", "Apaolaza Miradevilla"], ["Marcela", "Henriques Brandao"], ["Ju Eun", "Kim"], ["Michaela", "Bezdickova"], ["Anne", "Luijpen"], ["Lisa", "Whybourn"], ["Sandra", "Herrera"], ["Julia", "Gragera Cano"], ["Denise", "Atzinger"], ["Kanoko", "Ohara"], ["Victoria", "Vaara"], ["Gabriela", "Coglitore"], ["Melanie", "Junod"], ["Hilary", "Toole"], ["Candice", "Laurent"], ["Rafaela", "Efstathiou"], ["Maria", "Kiparenko"], ["Isabel", "Rapisarda Calvo"], ["Lucia", "Martinez Gomez"], ["Marina", "Jozipovic"], ["Marcella", "Jones"], ["Daphne", "Charalambous"], ["Carlotta", "Sartori"], ["Charlotte", "Fabricius"], ["Johanna", "Konta"], ["Cindy", "Chala"], ["Martina", "Borecka"], ["Khunpak", "Issara"], ["Paloma", "Cuervo"], ["Vivian Mayumi", "Toma"], ["Fatma", "Al Nabhani"], ["Laura", "Collins"], ["Kristina", "Huba"], ["Andree", "Sime"], ["Deeon", "Mladin"], ["Nana", "Miyakawa"], ["Masa", "Grgan"], ["Eda", "Bora"], ["Caroline", "Gherega"], ["Carmen", "Sandor"], ["Lucia", "Bosio"], ["Ida", "Alfredsson"], ["Arantxa", "Andrady"], ["Ksenia", "Pervak"], ["Regina Marica", "Matyak"], ["Danielle", "Lao"], ["Laura", "Revert Oroz"], ["Alexandra", "Skripkina"], ["Magdalena", "Sekrecka"], ["Yuka", "Ito"], ["Carolin", "Habich"], ["Maria Victoria", "Puga"], ["Marina", "Novak"], ["Paula", "Espinoza Pena"], ["Maria Tania", "Abraham"], ["Julie", "Bigot"], ["Karolina", "Dziubanii"], ["Cagla", "Azgari"], ["Kelly K", "Barry"], ["Geraldine", "Leong"], ["Annaelle", "Bejar"], ["Sally", "Peers"], ["Alejandra", "Granillo"], ["Giovanna", "Portiolli"], ["Gabriela", "Horackova"], ["Iuliia", "Kiriienko"], ["Gail", "Brodsky"], ["Selina", "Scheffer"], ["Bianca", "Botto"], ["Joelle", "Kissell"], ["Malika", "Arifjanova"], ["Simona", "Horsikyan"], ["Olivia", "Rogowska"], ["Jithmie", "Jayawickrema"], ["Kristina", "Shishkina"], ["Karolina", "Zamiela"], ["Irina", "Ramialison"], ["Elora", "Dabija"], ["Daria", "Abdrakhmanova"], ["Carlotta", "Ripa"], ["Salma", "El Semary"], ["Catherine R", "Isip"], ["Madalina Daniela", "Gugila"], ["Ioana Laura", "Alecsiu"], ["Hana", "Ritterova"], ["Ana", "Grindeanu"], ["Tanya", "Murtagh"], ["Shiori", "Kikukawa"], ["Tugce", "Dogan"], ["Natali", "Balige"], ["Alice Andrada", "Radu"], ["Casey", "Robinson"], ["Tereza", "Svecova"], ["Alexandra", "Gracova"], ["Victoria", "Lozano"], ["Alejandra", "Lozano"], ["Raquel", "Piltcher"], ["Marie", "Zalameda"], ["Jasmin", "Ladurner"], ["Emily J", "Harman"], ["Ranim", "Mkahal"], ["Velina", "Ivanova"], ["Sofia", "Espana"], ["Lisanne", "Van Riet"], ["Kristyna", "Kucianova"], ["Henrietta", "Alton"], ["Menna", "El Nagdy"], ["Maryna", "Chumak"], ["Christie Ann", "Hale"], ["Marion", "Pereira"], ["Desislava", "Lazarova"], ["Marianna", "Natali"], ["Othilia", "Lindqvist"], ["Mariya", "Slupska"], ["Greta", "Joksyte"], ["Sofia", "Pacifico"], ["Mariana", "Charalambous"], ["Tanvi", "Shah"], ["Julia", "Kushnereva"], ["Kaysara", "Mandry"], ["Indire", "Akiki"], ["Anna", "Zaja"], ["Angelina", "Jogasuria"], ["Angelika", "Jogasuria"], ["Julia", "Comas Espona"], ["Natalia", "Alvarez Bilbao"], ["Rebecka", "Tarnstrom"], ["Stefania Cristina", "Nicolae"], ["Yue", "Yuan"], ["Sandra", "Milojevic"], ["Kara", "Cecil"], ["Krishnali", "Bhonsle"], ["Zuzana", "Luknarova"], ["Magdalena", "Osterle"], ["Leonie", "Athanasiadis"], ["Anastasia", "Pavlyuchenkova"], ["Ana", "Jikia"], ["Tereza", "Bekerova"], ["Lina", "Bennani"], ["Carolina", "Orsi"], ["Michaela", "Boev"], ["Swetha", "Nalikala"], ["Volha", "Kalodzitsa"], ["Ofri", "Lankri"], ["Dragana", "Bozovic"], ["Camila", "San Martin"], ["Victoria Corina", "Mirea"], ["Samantha", "Vickers"], ["Josella Francisca", "Valderrama Ahumada"], ["Simona", "Syleouni"], ["Gioia", "Barbieri"], ["Violetta", "Degtiareva"], ["Katerina", "Petrenko"], ["Malika", "Rose"], ["Gabriella", "Barbosa Costa Silva"], ["Maxine", "Thomas"], ["Milica", "Milosavljevic"], ["Stina", "Kailaheimo"], ["Ilinca Thea", "Anghel"], ["Olivia", "Janowicz"], ["Laura", "Oates"], ["Shradha", "Dali"], ["Bianca", "Sousa"], ["Aranza", "Salut"], ["Yvett", "Imre"], ["Alina", "Baronova"], ["Veronique", "Luksich"], ["Jade", "Hopper"], ["Tereza", "Malikova"], ["Larraine", "Saavedra"], ["Brittany", "Sheed"], ["Carla", "Venticinque Torres"], ["Nuria", "Parrizas Diaz"], ["Jennifer", "Smith"], ["Ljubica", "Stojanovic"], ["Stacey", "Lock"], ["Stacey", "Tan"], ["Carolyn", "Monson"], ["Francesca", "Lewis"], ["Julie", "Gervais"], ["Selma", "Dahbi"], ["Viktoria", "Yemialyanava"], ["Iris", "Michailidou"], ["Veronika", "Makovey"], ["Marie Louise", "Schuetz"], ["Shabnam", "Eslami"], ["Juliana", "Pires"], ["Aleksandra", "Vukadinovic"], ["Natasha", "Bredl"], ["Alexandra", "Perper"], ["Kristen", "Lopez"], ["Reka Luca", "Jani"], ["Ros Polly", "Nguyen"], ["Natalie", "Dillon"], ["Nilgen", "Ahmetspahic"], ["Ana Gabriela", "Llera"], ["Anette", "Munozova"], ["Brynn", "Boren"], ["Diana", "Batista"], ["Nadja", "Barz"], ["Jeanna", "Schmidt"], ["Celina", "Goetti"], ["Mary", "Weatherholt"], ["Marie Christine", "Chartier"], ["Preethi", "Srinivasan"], ["Veronika", "Blaskova"], ["Prissy", "Annoual"], ["Stacey", "Kyriakopoulos"], ["Dominika", "Jasova"], ["Aleksandra", "Ludvig"], ["Julia", "Mayr"], ["Hannah", "Berner"], ["Nicha", "Lertpitaksinchai"], ["Angelika", "Aliev"], ["Elanqua", "Griffin"], ["Whitney", "Ritchie"], ["Andjela", "Nemcevic"], ["Justine", "Lo Presti"], ["Isabella", "Reibmayr"], ["Lam Anh", "Tran"], ["Karis", "Ryan"], ["Marine", "Sorg"], ["Benyapa", "Phumtip"], ["Anna", "Morgina"], ["Aimee", "Gibson"], ["Talissa", "Kucera"], ["Romy", "Koelzer"], ["Guntisa", "Boonlaing"], ["Ines", "Kertesz"], ["Marika", "Kobayashi"], ["Anett", "Schutting"], ["Olga", "Makhova"], ["Janine", "Tiszolczy"], ["Charline", "Braidy"], ["Sarah Ellen", "Hofmann"], ["Stephanie", "Baldinucci"], ["Eva", "Husakova"], ["Daniela", "Kraberger"], ["Sabrina", "Meier"], ["Isabell", "Seidlitz"], ["Diana", "Rivera"], ["Viktoria", "Viduka"], ["Jacqueline", "Cako"], ["Ho Ching", "Wu"], ["Jennifer", "Betancourt Hurtado"], ["Alexandra", "Ion"], ["Arina", "Alilueva"], ["Bruna", "Macedo Soares"], ["Lucia", "Gallego Jover"], ["Elixane", "Lechemia"], ["Weijia", "Sun"], ["Rajna", "Jankovic"], ["Callie", "Craig"], ["Caitlin", "Mcgraw"], ["Jacqueline", "Kasler"], ["Vidushi", "Gupta"], ["Olga", "Tatarchenko"], ["Blanca", "Garcia"], ["Mary", "Malkin"], ["Martina", "Mikulcikova"], ["Stefanie", "Mikesz"], ["Susita", "Das"], ["Julia", "Boserup"], ["Gisella", "Pere"], ["Estelle", "Suys"], ["Michelle", "Farley"], ["Jenny", "Jullien"], ["Monique", "Albuquerque"], ["Maria Paula", "Sanchez"], ["Kennedy", "Scott"], ["Carol", "Fernandez"], ["Sakina", "Nshimirimana"], ["Anastasia", "Aleshcheva"], ["Jung Eun", "Nam"], ["Julia", "Courter"], ["Line", "Jouayed"], ["Diana", "Bukajeva"], ["Justyna", "Jegiolka"], ["Urszula", "Kolodziejczak"], ["Thien Trang", "Nguyen"], ["Gabriela", "Pintos"], ["Brittany", "Augustine"], ["Ayano", "Honda"], ["Lisa", "Grosselius"], ["Sinead", "Disaya"], ["Anzhelika", "Adzhamyan"], ["Rebecca", "Leahy"], ["Paulina", "Hinojosa"], ["So Yeon", "Kim"], ["Jennifer", "Hadjieva"], ["Cristina Andreea", "Mitu"], ["Sonya", "Dayal"], ["Melanie", "Oudin"], ["Aleah", "Marrow"], ["Aki", "Yamasoto"], ["Aline", "Laurioux"], ["Yoko", "Nagai"], ["Veronika", "Tobolova"], ["Bistra", "Otashliyska"], ["Julia", "Jagodzinska"], ["Josselin", "Lattanzio"], ["Simona", "Halep"], ["Ksenia", "Moskal"], ["Maho", "Kowase"], ["Cierra", "Gaytan Leach"], ["Margaret", "Boyette"], ["Anastasiya", "Lytovchenko"], ["Gabriela", "Paz"], ["Julie", "Queval"], ["Daria", "Yakauleva"], ["Ai", "Koga"], ["Marcela", "Jimenez Ramos"], ["Filipa", "Correia"], ["Anna", "Brazhnikova"], ["Maria", "Fedosyuk"], ["Haruka", "Yoshida"], ["Millie", "Nichols"], ["Jessica", "Green"], ["Nathaly", "Miranda"], ["Paulina", "Milosavljevic"], ["Arezou", "Youlghouni"], ["Elzbieta", "Kowalczyk"], ["Patricia", "Chirea"], ["Jenny", "Lunde"], ["Alexandra", "Apostu"], ["Cayla", "Cross"], ["Shiho", "Sakagawa"], ["C C", "Sardinha"], ["Yoo Ri", "Song"], ["Sabina", "Kovtunova"], ["Mia", "Ramic"], ["Ruxandra Gabriela", "Costov"], ["Ekaterina", "Strogonova"], ["Stefania", "Di Vasto"], ["Alisa Juliana", "Caluseriu"], ["Alice", "Grilli"], ["Shoko", "Yamamoto"], ["Marketa", "Placha"], ["Mawuena", "Ankutse"], ["Lucia", "Zavarcikova"], ["Pamela", "Adom Mendez"], ["Gally", "De Wael"], ["Francesca", "Campigotto"], ["Lucie", "Rey"], ["Elizabeth", "Tapia"], ["Ana", "Puerto Jaimez"], ["Camila Vital", "De Castro"], ["Federica", "Severi"], ["Sofia", "Vaynberg"], ["Loveth", "Nnadozie"], ["Monique", "Zuur"], ["Sina", "Bader"], ["Natchanok", "Saenyaukhot"], ["Hui", "Li"], ["Daniela", "Lozano"], ["Disha", "Saigal"], ["Bernice", "Van De Velde"], ["Carina", "Paulitsch"], ["Roxana", "Rabago"], ["Isabella", "Shinikova"], ["Cecilia", "Crevani"], ["Victoire", "Mfoumouangana"], ["Ana Claudia", "Carbajal Espinosa"], ["Lisa", "Borckink"], ["Raphaela", "Zotter"], ["Cristina Bianca", "Danaila"], ["Nida", "Hamilton"], ["Nicole", "Bartnik"], ["Giulia", "Gasparri"], ["Francesca", "Gonzalez"], ["Lilly F", "Kimbell"], ["Beatriz Magdalena", "Flores"], ["Kanako", "Ootsuka"], ["Ai", "Kamiyoshihara"], ["Ya Qi", "Deng"], ["Lesley", "Kerkhove"], ["Olga", "Zaicenco"], ["Diana", "Marcu"], ["Argyro", "Christofi"], ["Lilija", "Sabirzjanova"], ["Maria", "Kuznetsova"], ["Sally", "Dischmann"], ["Anna", "Saito"], ["Hanna", "Mar"], ["Karolina", "Kostro"], ["Alexandra", "Wetterstrom"], ["Hope", "Johnson"], ["Ashleigh", "Richardson"], ["Iesha", "Holton"], ["Aleksandra", "Grela"], ["Jessica Marie", "Agra"], ["Carolina", "Viteri"], ["Dalya", "Pupchenok"], ["Anastasia", "Putilina"], ["Magali", "Van Landegem"], ["Demi", "Barao Rodrigues"], ["Prang", "Pantusart"], ["Ludmila", "Vasilieva"], ["Sandra", "Arsovska"], ["Claudia Gianina", "Dumitrescu"], ["Le", "Ma"], ["Sabina", "Ramirez"], ["Emma", "Reyes Baca"], ["Bianca", "Ambros"], ["Noppawan", "Lertcheewakarn"], ["Valentina", "Starkova"], ["Margarita Greta", "Skripnik"], ["Constance", "Alexander"], ["Miyabi", "Inoue"], ["Prachi", "Nadkarni"], ["Jana", "Mihalovicova"], ["Stephanie", "Cornish"], ["Raquel", "Barcala Lopez"], ["Yessica", "Medina"], ["Giulia", "Coletti"], ["Nathalie", "Mohn"], ["Hannah", "Toro"], ["Luca", "Pump"], ["Mary", "Clayton"], ["Melissa", "Bolivar"], ["Milica", "Stepanovic"], ["Tereza", "Budilova"], ["Milana", "Spremo"], ["Viktoria", "Kamenskaya"], ["Ana Paula", "Folch"], ["Julieta Soledad", "Rodriguez"], ["Gemma", "Praditngam"], ["Maria Claudia", "Santos Santanna"], ["Elisa", "Tassotti"], ["Gayeong", "Back"], ["Cristina", "Bachiller Madrono"], ["Alexandra", "Cercone"], ["Hilda", "Melander"], ["Maria", "Pulido"], ["Ekaterine", "Gorgodze"], ["Maria", "Jespersen"], ["Fernanda", "Faria"], ["Antonina", "Rafikova"], ["Manuela", "Leme"], ["Maria Fernanda", "Aguirre Arteaga"], ["Dejana", "Raickovic"], ["Janaki", "Gunuganti"], ["Coco", "Vandeweghe"], ["Veronica M", "Corning"], ["Yen Ling", "Chen"], ["Kaede", "Hayase"], ["Sandra", "Herrera Gonzalez"], ["Kiki", "Bertens"], ["Aleksandra", "Filipovski"], ["Mariona", "Del Peral Francin"], ["Sophia", "Bouganga"], ["Martina", "Kubicikova"], ["Verena", "Joechle"], ["Eduarda", "Piai"], ["Sandra", "Bellver Fructuoso"], ["Raquel", "Martini"], ["Brittany", "Wowchuk"], ["Elisa", "Brentino"], ["Tiffany", "Tran"], ["Maria Andreina", "Varela"], ["Anna", "Naumova"], ["Shahzodaxon", "Hatamova"], ["Chantelle", "Rigozzi"], ["Gabriella", "Witdarmono"], ["Jessica", "Cohen"], ["Leah", "Daw"], ["Treta", "Bhattacharyya"], ["Charlotte", "Van Der Meij"], ["Neesha", "Thirumalaichelvam"], ["Yui", "Takauchi"], ["Sabrina", "Baumgarten"], ["Pauline", "Paire"], ["Laura", "Slater"], ["Yan Tung", "Ki"], ["Nadine", "Ruegg"], ["Alexandra", "Cannizzaro"], ["Hyun Hee", "Jang"], ["Alena", "Gerasimova"], ["Tina", "Miller"], ["Lara", "Michel"], ["Quirine", "Lemoine"], ["Anastacia", "Simons"], ["Mohana", "Chintala"], ["Larissa", "Horat"], ["Hyun Hui", "Hong"], ["Belen", "Tajmuch"], ["Jessica", "Brito"], ["Marifer", "Abreu"], ["Anna Christine", "Patrimonio"], ["Alex", "Geremia"], ["Kurumi", "Nara"], ["Camila", "Giorgi"], ["Nimisha", "Mohan"], ["Bojana", "Jovanovski"], ["Tanja", "Winkler"], ["Mariami", "Samkanashvili"], ["Marilia", "Camara"], ["Nazil", "Ander"], ["Sonia Stefania", "Negrila"], ["Isabella", "Holland"], ["Elena", "Kuznetsova"], ["Nataliya", "Pintusova"], ["Anna Arina", "Marenko"], ["Sandra", "Zaniewska"], ["Carla", "Roset Franco"], ["Nutwadee", "Suthiprapha"], ["Petra", "Capin"], ["Alia", "Nour"], ["Iris", "Verboven"], ["Anastasia", "Vivdenko"], ["Ioana Andreea", "Cristea"], ["Nanuli", "Pipiya"], ["Adnya", "Naik"], ["Victoria", "Schweizer"], ["Xin Tong", "Liu"], ["Oksana", "Pavlova"], ["Rocio Maria", "Diaz"], ["Ursa", "Jerman"], ["Melina", "Gonzalez Morganti"], ["Natasha", "Bertolucci"], ["Bella", "Destriana"], ["Joanna", "Horne"], ["Tea", "Palandacic"], ["Tara", "Vasovic"], ["Rashmi", "Teltumbde"], ["Nan Nan", "Zhang"], ["Jana", "Urbanova"], ["Kate", "Fuller"], ["Elena", "Corsini"], ["Ekaterina", "Verho"], ["Nadejda", "Guskova"], ["Alejandra", "Sala Juste"], ["Thanyarat", "Karnjanapong"], ["Ale", "Rojas"], ["Elyse", "Edwards"], ["Lavanya", "Nath"], ["Daria", "Kuchmina"], ["Amreetha", "Muttiah"], ["Maria", "Barbed Isusi"], ["Ze Xin", "Pu"], ["Bhavani", "Ravisankar"], ["Dinah", "Pfizenmaier"], ["Kaitlyn", "Christian"], ["Emily", "Askew"], ["Sophia", "Bursulaya"], ["Sabrina", "Man Son Hing"], ["Chieh Yu", "Hsu"], ["Qiang", "Wang"], ["Ganna", "Piven"], ["Elizabeth", "Begley"], ["Fiorella Maria", "Jarufe"], ["Mia", "Radulovic"], ["Jamila", "Paul"], ["Trivena Monika", "Putri"], ["Jovanna", "Pecovski"], ["Yui Lynn", "Miao"], ["Karolina", "Cechova"], ["Paula Natalia", "Orlini Campos"], ["Cody", "Morris"], ["Mia", "Lancaster"], ["Simona", "Pascau"], ["Biljana", "Milosevska"], ["Minori", "Tamura"], ["Anastasiya", "Vasylyeva"], ["Ania", "Mazor"], ["Yang", "Shen"], ["Veronica", "Cepede Royg"], ["Ann Sophie", "Porry"], ["Boyan", "Wang"], ["Andrea", "Konjuh"], ["Barbara", "Pietrkiewicz"], ["Andrea", "Lopez Seco"], ["Irina", "Repede"], ["Dominique", "Harmath"], ["Risako", "Sugihara"], ["Liana", "Todorova"], ["Sylwia", "Mikolajczuk"], ["Deborah", "Paulo Lamelas"], ["Talia", "Rojas"], ["Jihye", "Choi"], ["Tatiana", "Postnikova"], ["Gabrielle", "Zambotto Interlich"], ["Rina", "Fujiwara"], ["Alexia", "Quartetto"], ["Katarena", "Paliivets"], ["Thais", "Xavier"], ["Sheila", "Moradian"], ["Anezka", "Makovickova"], ["Anastasia", "Koroliova"], ["Isadora", "Busch"], ["Samara", "Amour"], ["Ana Maria", "Nedelcu"], ["Emily", "Crowe"], ["Leia", "Kaukonen"], ["Nicole", "Saracino"], ["Diana Carolina", "Casas"], ["Kristina", "Korochinskaya"], ["Gabrielle", "Alford"], ["Ajeng", "Aquinia"], ["Martina", "Krischkeova"], ["Maya", "Milosevic"], ["Sofie", "Oyen"], ["Garima", "Vatwani"], ["Saadgi", "Rajani"], ["Kanae", "Iha"], ["Xi", "Bai"], ["Yasmina", "Demane"], ["Katharina", "Morth"], ["Yana", "Buchina"], ["Oriana", "Nowicki"], ["Alicia", "Perez Gonzalez"], ["Julia", "Landauer"], ["Polina", "Rodionova"], ["Magda", "Linette"], ["Kristina", "Kinarkina"], ["Camila", "Basto"], ["Mina", "Gardic"], ["Fernanda", "Brito"], ["Johanna", "Hyoty"], ["Nilaya", "Tarimela"], ["Mary Anne", "Macfarlane"], ["Yu Ting", "Deng"], ["Elen", "Chelidze"], ["Zsofia", "Susanyi"], ["Viktoriya", "Serenkova"], ["Alina Silvana", "Moise"], ["Hui I", "Huang"], ["Jelena", "Simic"], ["Ashvarya", "Shrivastava"], ["Nastassja", "Burnett"], ["Morgan", "Basil"], ["Ekin", "Gunaysu"], ["Marie", "Menacer"], ["Milica", "Hadzi Tanovic"], ["Maria Clara", "Bernardez"], ["Andrea", "Blazevic"], ["Vicky", "Stuckey"], ["Giulia", "Pasini"], ["Mara", "Schmidt"], ["Alexandra", "Anghelescu"], ["Maria", "Biryukova"], ["Rebecca", "Horompoliova"], ["Fernanda", "Soares"], ["Giorgia", "Pinto"], ["Kurumi", "Sensui"], ["Jasmin", "Matter"], ["Alex", "Martin"], ["Lola", "Azimova"], ["Cecilia", "Estlander"], ["Alexandra", "Borovina"], ["Aleksandrina", "Naydenova"], ["Shakhnoza", "Karieva"], ["Marta", "Stoyanova"], ["Giulia", "Lambiase"], ["Brittany", "Dubins"], ["Maria", "Lawton"], ["Nikolina", "Rimac"], ["Bao Yi", "Xu"], ["Diana", "Davitaia"], ["Oleksandra", "Piskun"], ["Nadja", "Teufel"], ["Roshenka", "Fernando"], ["Chloe", "Babet"], ["Karina", "Isayan"], ["Margarida", "Fernandes"], ["Sarah Lynn", "Du Plessis"], ["Julie", "Tringa"], ["Martina", "Puglierin"], ["Paola", "Garrido Rodriguez"], ["Amina", "El Khattabi"], ["Helena", "Martinez Soler"], ["Natalia", "Berezhnaya"], ["Nikki Camille", "Zoleta"], ["Patricia", "Avramescu"], ["Joanna", "Bougon"], ["Jolien", "De Wulf"], ["Neus", "Bestard Pomar"], ["Kirsten", "Mcarthur"], ["Klara", "Koprivova"], ["Ana Izabela", "Oliveira"], ["Vanessa", "Foltinger Garcia"], ["Amber", "Walker"], ["Joyce", "Van Der Linden"], ["Carolina", "Abello"], ["Johana", "Hernandez"], ["Anastasia", "Golovatch"], ["Marina", "Raicevic"], ["Malak", "Demerdash"], ["Katrina", "Raicevic"], ["Rebeca", "Mitrea"], ["Sabine", "Van Der Sar"], ["Soledad", "Blanco"], ["Giulia", "Porcu"], ["Beatriz Maria", "Martins Cecato"], ["Nuria", "Sanjurjo"], ["Anna", "Momot"], ["Marcela", "Costa Quintas"], ["Michika", "Ozeki"], ["Laili", "Rahmawati Ulfa"], ["Karni", "Cohen"], ["Zulema", "Zelaya"], ["Emilia", "Banos Gregorians"], ["Madeleine", "Kobelt"], ["Gabriela", "Vazquez"], ["Lara", "Arruabarrena"], ["Aya", "Bara"], ["Costanza", "Mecchi"], ["Sofia", "Hager"], ["Karolina", "Pliskova"], ["Kristyna", "Pliskova"], ["Polina", "Pekhova"], ["Laura", "Perez"], ["Roosh", "Wijesundera"], ["Chelsie Marie", "Yacks"], ["Martina", "Toto"], ["Karen", "Hernandez"], ["Sabastiani", "Leon"], ["Lisa", "Canova"], ["Giovanna", "Palumbo"], ["Nadine", "Klug"], ["Francesca", "Aureli"], ["Courtney B", "Dolehide"], ["Lizette", "Gomez"], ["Mami", "Hasegawa"], ["Gabriela Alejandra", "Carrillo Palacios"], ["Isaura", "Enrique Aguilar"], ["Deborah", "Pagani"], ["Fumika", "Kumagai"], ["Bitna", "Lee"], ["Ji Su", "Bae"], ["Elena", "Bogdan"], ["Carolina", "Pillot"], ["Anastasia", "Etkin"], ["Dominique", "Bruce"], ["Kaja", "Rajh"], ["Isabella", "Robbiani"], ["Panoria", "Tsekoura"], ["Iris", "Mannarino"], ["Silvia", "Ranocchi"], ["Natalia", "Marques Melibeu"], ["Gabriela", "Dabrowski"], ["Klaudia", "Gawlik"], ["Gaia", "Sanesi"], ["Bianca", "Brasoveanu"], ["Amel", "Ouahab"], ["Giulia", "Calafiore"], ["Sanne", "Lemmers"], ["Antonela", "Susak"], ["Milagros", "Abal"], ["Rocio", "Portela"], ["Jia Bei", "Mei"], ["Morgane", "Pons"], ["Lucia", "Kovalova"], ["Monika", "Wejnert"], ["Beatrice", "Capra"], ["Alexandra", "Hietaniemi"], ["Flora", "Birnbaum"], ["Klara", "Ellingerova"], ["Lise", "Marbach"], ["Greta", "Veinberga"], ["Brooke", "Bolender"], ["Marie Frederique", "Bedard"], ["Alessia", "Carrozzo"], ["Marlen", "Hacke"], ["Ekaterina", "Mitroshina"], ["Laura", "Maisonnave"], ["Rocio", "Benavent Rojas"], ["Alexandra", "Reboul"], ["Caroline", "Rohde Moe"], ["Ksenia", "Kolesnikova"], ["Fiorella", "Zecchino"], ["Gesa", "Focke"], ["Tanja", "Rebholz"], ["Kerrie", "Cartwright"], ["Mayka", "Zima"], ["Ilaria", "Popovic"], ["Anastasia", "Erofeeva"], ["Katarina", "Baranova"], ["Or", "Meir"], ["Lorena", "Gheorghe"], ["Caryssa L", "Peretz"], ["Sandra", "Andriamarosoa"], ["Ya", "Zhou"], ["Georgina", "Bastick"], ["Teresa", "Pladevall Oroz"], ["Roberta", "Di Rosa"], ["Richel", "Hogenkamp"], ["Mai", "Minokoshi"], ["Aranxta", "Portugal"], ["Seung Yeon", "Hong"], ["Lina", "Lileikite"], ["Misa", "Eguchi"], ["Mai", "Grage"], ["Malak", "Elazze"], ["Susan", "Mcrann"], ["Noura", "Abdul Aal"], ["Viviana", "Bolivar"], ["Rita", "Oliveira"], ["Barbara", "Ferreira"], ["Chinami", "Takada"], ["Tania", "Alaby"], ["Yamini", "Reddy"], ["Anna", "Depenau"], ["Mayna", "Andrade"], ["Isadora", "Bickham"], ["Alexandra", "Clay"], ["Lolia", "Kienka"], ["Saya", "Yoshimi"], ["Mariana", "Perez Saaibi"], ["Anastasiya", "Kyrylova"], ["Daniela Lucia", "Sierra Jurado"], ["Estelle", "Mehta"], ["Irina Mihaela", "Giusca"], ["Andrea", "Ka"], ["Imogen", "Golder"], ["Carolyn Ann", "Lim Hui"], ["Laura", "Lim"], ["Sun Young", "Choi"], ["Valentine", "Confalonieri"], ["Ema", "Mikulcic"], ["Flavia", "Nagayama"], ["Kaede", "Ikuma"], ["Vladislava", "Kuzmenkova"], ["Lorena", "Arandia"], ["Valeria", "Podda"], ["Emmerentia", "Marx"], ["Maria Teresa", "Torro Flor"], ["Courtney", "Gulihur"], ["Alyona", "Sotnikova"], ["Davina", "Meza"], ["Joke", "De Kok"], ["Feronika", "Katarina"], ["Mara", "Nowak"], ["Christina", "Auer"], ["Kimberley", "Cassar"], ["Simone Lindsay", "Krog"], ["Charlotte", "Windley"], ["Khristina", "Blajkevitch"], ["April", "Bisharat"], ["Dinka", "Lujinovic"], ["Kadi Liis", "Saar"], ["Gabriela", "Eufrasio"], ["Christina", "Mchale"], ["Albina", "Khabibulina"], ["Clara", "Matias"], ["Martina", "Spigarelli"], ["Hong Kyung", "Shin"], ["Zi Xuan", "Ma"], ["Hana", "Kovacova"], ["Georgina", "Garcia Perez"], ["Flavia", "Guimaraes Bueno"], ["Ana Paula", "Molero"], ["Katy", "Oshea"], ["Angela", "Dishkova"], ["Emily", "Southall"], ["Tamara", "Alvarado"], ["Lorena", "Hernandez"], ["Alessia", "Piran"], ["Thi Thanh Binh", "Phan"], ["Caroline", "Huberty"], ["Lottie", "Fox"], ["Marta", "Bertolaso"], ["Daphne", "Friedrichs"], ["Karyn", "Emeralda"], ["Natasha Natalia", "Shigina"], ["Dana", "Ihsanova"], ["Elin", "Winkler"], ["Heather", "Watson"], ["Martina", "Caregaro"], ["Jasmine Janelle", "Williams"], ["Welma", "Luus"], ["Miharu", "Imanishi"], ["Yuliya", "Artsiomava"], ["Ivonne", "Cavalle Reimers"], ["Derly", "Cunya"], ["Julija", "Lukac"], ["Ivana", "Spasojevic"], ["Zane", "Zarina"], ["Fiorella", "Jerardino"], ["Anastasia", "Mukhametova"], ["Diane", "Trebalag"], ["Elizaveta", "Kuzmina"], ["Ayaka", "Terashi"], ["Marion", "Dupuy"], ["Sarah", "Moundir"], ["Giulia", "Sussarello"], ["Julie", "Gonzalez Rodriguez"], ["Mila", "Marinkovic"], ["Isel", "Martinez Marcos"], ["Danny", "Engel"], ["Constanza Lara", "Tempone"], ["Sibel", "Ruzkar"], ["Seven", "Oral"], ["Este", "Potgieter"], ["Sabrina", "Stewart"], ["Barbara", "Bonic"], ["Shir", "Aharon"], ["Carolina", "Maso"], ["Martina", "Furlanetto"], ["Elena", "Mandzhukova"], ["Adriana", "Chavez"], ["Dana", "Machalkova"], ["Isabella", "Aumueller"], ["Arushi", "Sharma"], ["Yasmine", "Abou Farah Trigueros"], ["Ye Ji", "Mun"], ["Pilar", "Quintana"], ["Natasha", "Yonan"], ["Carolin", "Daniels"], ["Nupur", "Kaul"], ["Kelsey", "Lawson"], ["Amanda", "Bertani"], ["Lilien", "Pacheco"], ["Marcela", "Rosales"], ["Jovana", "Karac"], ["Alejandra", "Barragan"], ["Alyssa", "Hibberd"], ["Valeria", "Osadchenko"], ["Irene", "Gonzalez Olivar"], ["Alexandra Alina", "Tincu"], ["Anastasia", "Burmistrova"], ["Ida", "Krnic"], ["Kristie", "Ahn"], ["Clara", "Perez Marcos"], ["Marina", "Lushchina"], ["Christina", "Mathis"], ["Louise", "Johansson"], ["Suzy", "Larkin"], ["Alice", "Savoretti"], ["Ghislaine", "Van Baal"], ["Ivana", "Filipi"], ["Nina", "Pfahler"], ["Renata", "Bakieva"], ["Genevieve", "Barnes"], ["Maria", "Belaya"], ["Maria Jose", "Rodriguez"], ["Gvantsa", "Robakidze"], ["Milena", "Vujanovic"], ["Anna", "Mangano"], ["Ashley", "Krysiak"], ["Yi", "Zhong"], ["Monica", "Yajima"], ["Sandy", "Marti"], ["Maiko", "Yamashita"], ["Harriet", "Sheahan"], ["Tomoko", "Hagita"], ["Carla", "Manzi"], ["Jolien", "Gadeyne"], ["Chihiro", "Nunome"], ["Ecaterina", "Vasenina"], ["Pui Wing", "Sher"], ["Ayna", "Ereshova"], ["Yamit", "Vodovoz"], ["Paloma", "Mielgo"], ["Georgina", "Campins Schonofer"], ["Alejandra", "Renda Bouzada"], ["Gemma", "Triay Pons"], ["Adelaide", "Wood"], ["Adriana", "Guzman"], ["Carolina", "Barrionuevo"], ["Nerea", "Piquer Albisu"], ["Elena", "Burrone"], ["Katharina", "Hock"], ["Petra", "Jaskova"], ["Veronica", "Virseda Sanchez"], ["Noemi", "Novo Pereira"], ["Jin", "Yoo"], ["Cristina", "Melgarejo"], ["Karen", "Barbat"], ["Sarah Rebecca", "Sekulic"], ["Tamara", "Stanic"], ["Daria", "Kulbikova"], ["Chi Chi", "Scholl"], ["Nelo", "Phiri"], ["Na Lae", "Han"], ["Tricia", "Mar"], ["Xin", "Wen"], ["Majoly", "De Wilde"], ["Kamila", "Rafkat"], ["Alina", "Jerjomina"], ["Abi", "Claydon"], ["Yurina", "Tago"], ["Natalia", "Kozel"], ["Aselya", "Arginbayeva"], ["Kotchamon", "Kongkerd"], ["Abigail", "Tere Apisah"], ["Olivia", "Rich"], ["Natali", "Coronel"], ["Alexandra", "Walters"], ["Marina", "Kachar"], ["Alyssa", "Fuentes"], ["Dominika", "Schlehoferova"], ["Rachel", "Michell"], ["Simone", "Vranov Brown"], ["Claudia", "Ortiz Albert"], ["Nadine", "Pauli"], ["Rachel", "Kahan"], ["Lyudmyla", "Kichenok"], ["Nadiya", "Kichenok"], ["Francesca", "Franco"], ["Bianca", "Hincu"], ["Indra", "Bigi"], ["Catrin", "Levers"], ["Carina", "Litfin"], ["Alrissa", "Tobe"], ["Marie", "Temin"], ["Hyun Jung", "Kim"], ["Yu", "Nakashima"], ["Sarah", "Seiderer"], ["Mafalda", "Lhorca"], ["Sarah", "Mclean"], ["Kristyna", "Hancarova"], ["Oana", "Danescu"], ["Raye Ann", "Sandy"], ["Marina", "Kozachenko"], ["Doroteja", "Eric"], ["Sarah", "Pham"], ["Amelia", "Herring"], ["Diana", "Marcinkevica"], ["Rowie", "Kouw"], ["Dijana", "Banovec"], ["Yvonne", "Neuwirth"], ["Anja", "Koell"], ["Fanny", "Lundsgard"], ["Tara", "Moore"], ["Anna", "Velica"], ["Ana Maria", "Szilagyi"], ["Yvonne Elizabeth", "Tirado Tejeda"], ["Chanel", "Simmonds"], ["Kobkanok", "Upapong"], ["Natalia", "Escobar"], ["Franziska Louise", "Koehler"], ["Bianca", "Tepper"], ["Tamaryn", "Hendler"], ["Isabella", "Escobar"], ["Alexandra", "Leatu"], ["Giulia", "Mecca"], ["Jimena", "Wu"], ["Hannah", "Hume"], ["Manisha", "Chowdhury"], ["Song Yee", "You"], ["Elliesa", "Ball"], ["Yuri", "Okada"], ["Kim", "Berghaus"], ["Amit", "Berkovitz"], ["Karina", "Fiamenghi"], ["Matilda", "Hamlin"], ["Barbara", "Gueno"], ["Dagmara", "Baskova"], ["Ema", "Burgic"], ["Karolina", "Lisiecka"], ["Mia", "Vriens"], ["Sena", "Bensafi"], ["Ivana", "Kubickova"], ["Mariya", "Sukhareva"], ["Nicola", "George"], ["Yuliana", "Umanets"], ["Agathe", "Timsit"], ["Andrea", "Tabachnik"], ["Agata", "Bachanek"], ["Emily", "Madill"], ["Julianna Barbosa", "Bacelar"], ["Karina", "Goia"], ["Raquel", "Diaz"], ["Paola", "Cos"], ["Ting Fei", "Juan"], ["Elisha", "Hande"], ["Fanni", "Varga"], ["Ashley", "Mackey"], ["Akilah", "James"], ["Annie", "Sullivan"], ["Hadar", "Ostashinsky"], ["Maria Jesus", "Ibanez Galindo"], ["Sandra", "Gonzalez Salas"], ["Kristina", "Vesse"], ["Tina", "Tehrani"], ["Stephanie", "Fox"], ["Yuliana", "Motyl"], ["Jenny Thuy", "Le"], ["Xenia", "Knoll"], ["Laura", "Antonana Iriarte"], ["Sachie", "Ishizu"], ["Julia", "Samuseva"], ["Vanessa", "Moor"], ["Claudia Irene", "Ponton Caamano"], ["Sibilla", "Fiorentino"], ["Sasha", "Khabibulina"], ["Andrea", "Lippe"], ["Lu", "Lin"], ["Violetta", "Milkova"], ["Houda", "Bellamine"], ["Chantal", "Brutschin"], ["Rebecca", "Kaineder"], ["Nino", "Mebuke"], ["Sindhu Nila", "Partheepan"], ["Anna", "Rapoport"], ["Melina", "Ferrero"], ["Natasha", "Afridi"], ["Anastasia", "Stepu"], ["Ursula", "Castillejos"], ["Petra Maria", "Kulhova"], ["Petra", "Jurova"], ["Miruki", "Kugai"], ["Stephanie", "Slaveski"], ["Prerna", "Bhambri"], ["Sviatlana", "Pirazhenka"], ["Sabrina", "Kierberg"], ["Francisca", "Matos"], ["Alexandra", "Mitrovska"], ["Melissa", "Lutring"], ["Seyedeh", "Saadat"], ["Anastasia", "Kriz"], ["Kanyapat", "Narattana"], ["Rebecca", "Pedrazzi"], ["Mako", "Mizunuma"], ["Virginia Eliana", "Tica"], ["Christina", "Madenoglou"], ["Silviya", "Zhelyazkova"], ["Maria Fernanda", "Jimenez"], ["Vincenza", "Ciraolo"], ["Rani Fitriya", "Wardhani"], ["Stefanie", "Tan"], ["Maria Angelica", "Tangarife"], ["Laura Sofia", "Sanchez Perez"], ["Martina", "Frantova"], ["Chelsea", "Te Tai"], ["Michele Ayomide", "Idera"], ["Alexandra", "Avirvarei"], ["Christina Lavinia", "Badan"], ["Karina Natalia", "Lojo"], ["Fernanda", "Guilhaume Correa"], ["Priscila", "Nunez"], ["Isabela", "Espinosa Davila"], ["Hitomi", "Ozaki"], ["Sina", "Haas"], ["Alexandra", "Walker"], ["Kayla", "Rizzolo"], ["Alessia", "Camplone"], ["Claudia", "Basciani"], ["Andrea", "Gomez Carus"], ["Pia", "Rygh"], ["Nikola", "Horakova"], ["Xi Yao", "Wang"], ["Monica", "Aguado"], ["Daniel", "Hava"], ["Shukufa", "Abdullayeva"], ["Anett", "Ferenczi Bako"], ["Nayara", "Candido De Moraes"], ["Carolina", "Prats Millan"], ["Federica", "Colmari"], ["Paula", "Ormaechea"], ["Derja", "Turhan"], ["Louise", "Harbo Schmidt"], ["Tarlina", "Tipungwuti"], ["Kendal", "Drake"], ["Gorana", "Stevanovic"], ["Georgina", "Fedosenkova"], ["Jessica", "Bertoldo"], ["Daria", "Kirpicheva"], ["Irina", "Koripenko"], ["Isabella", "Assad"], ["Simonka", "Parajova"], ["Melissa", "Minniti"], ["Rubi", "Morales"], ["Dasa", "Orlic"], ["Maria Joao", "Koehler"], ["Lidziya", "Marozava"], ["Giulia", "Squadrin"], ["Andrea", "Caamano"], ["Dominique", "Wahl"], ["Hwa", "Lee"], ["Colet", "Weening"], ["Maria Daniela", "Frascini"], ["Elizabeth", "Golovkin"], ["Shelby", "Rogers"], ["Tatiana", "Rodens"], ["Andrea", "Medina Tomas"], ["Christi", "Potgieter"], ["Lee Anne", "Lingo"], ["Viktorija", "Golubic"], ["Stephanie", "Hirsch"], ["Anne Laure", "Dorseuil"], ["Inna", "Volkovich"], ["Emiliana", "Spinardi"], ["Kyra", "Shroff"], ["Janneke", "Wikkerink"], ["Greys", "Moroder"], ["Diana", "Isaeva"], ["Huai Hsuan", "Huang"], ["Aida", "Zukic"], ["Jessica", "Ginier"], ["Daniela", "Vidal"], ["Ayelen", "Quinteros"], ["Gislaine", "Conceicao Farias"], ["Verena", "Schmid"], ["Marcelina", "Cichon"], ["Anjyu", "Kanda"], ["Ebba", "Unden"], ["Ana", "Claro"], ["Helga", "Pinones"], ["Esthefhanie Darehly", "Juarez Rojo"], ["Antea", "Dedic"], ["Kiki", "Filippou"], ["Niriantsa", "Rasolomalala"], ["Aleksandra", "Treskunova"], ["Julia Christine", "Fellerhoff"], ["Rocio", "Sanchez Palacio"], ["Jade", "Frampton"], ["Isabela", "Miro"], ["Julia", "Rissanen"], ["Dalma Maria", "Rojas Rodas"], ["Evelyne", "Dom"], ["Kristina", "Horsikyan"], ["Moe", "Aoki"], ["Camila", "Silva"], ["Andrea", "Gamiz"], ["Kim", "Stubbe"], ["Katarzyna", "Kaleta"], ["Adelina Georgiana", "Lipan"], ["Tanja", "Grzan"], ["Sabrina", "Xu"], ["Valeria", "Solovieva"], ["Marta", "Lewandowska"], ["Nicole", "Peterson"], ["Khrystyna", "Pavlyuk"], ["Ioana", "Dinescu"], ["Amala", "Amol Warrick"], ["Leona", "Masuoka"], ["Paula", "Kania"], ["Anna Benita", "Fuchs"], ["Santina", "Mushtakova"], ["Polina", "Konop"], ["Morocco", "Hitt"], ["Belen", "Luduena"], ["Sofia", "Luini"], ["Alessandra", "Bonte"], ["Riko", "Fujioka"], ["Peangtarn", "Plipuech"], ["Daniela", "Seguel"], ["Marta", "Hnatyshyn"], ["Nikolina", "Grbac"], ["Emily", "Leenen"], ["Alexandra", "Moreno Kaste"], ["Katarzyna", "Kawa"], ["Ran", "Meng"], ["Ana Maria", "Stroe"], ["Alexandra", "Artamonova"], ["Adriana", "Perez"], ["Amina", "Berdieva"], ["Lynda", "Xepoleas"], ["Julia", "Goloborodko"], ["Michela", "Casanova"], ["Ana", "Bogdan"], ["Cindy", "Burger"], ["Irina", "Chaukina"], ["Jennifer", "Witthoeft"], ["Rebecca", "Siegler"], ["Macarena", "Acuna"], ["Nadia", "Frederika"], ["Cielo Marisol", "Castro Chao"], ["Leticia", "Sanchez"], ["Maria", "Navarro Cruz"], ["Eliana Elizabeth", "Pistone"], ["Sophie", "Letcher"], ["Anna", "Livadaru"], ["Maria Patricia", "Cordova"], ["Juliette", "Sapene"], ["Emily", "Gelber"], ["Hannah", "Mueller"], ["Amina", "St Hill"], ["Maryna", "Zhytska"], ["Alena", "Gizdic"], ["Aurora", "Davis"], ["Ana Victoria", "Pimienta"], ["Varvara", "Kuznetsova"], ["Stefania", "Rubini"], ["Shalaka", "Uddur Manjunath"], ["Loreto", "Alonso Martinez"], ["Vanda", "Lukacs"], ["Taylor", "Hollander"], ["Olga", "Serbyn"], ["Marina", "Cernea"], ["Johana Maria", "Vitanzo Maravi"], ["Alicia", "Doms Golobart"], ["Katie", "Le"], ["Katelyn", "Stokes"], ["Andrea Natalia", "Martin"], ["Julieta Evangelina", "Bidahorria"], ["Francesca", "Bernardi"], ["Charo", "Bintureira"], ["Alexandra", "Kolesnichenko"], ["Rozike", "Janzen Van Rensburg"], ["Farah", "Baracat"], ["Kaitlin", "Ray"], ["Nigina", "Rahmanova"], ["Ulrikke", "Eikeri"], ["Erika", "Sugamura"], ["Sarah", "Urbanek"], ["Epiphany B", "Turner"], ["Kataraina", "Hunia"], ["Yana", "Koroleva"], ["Iveta", "Masarova"], ["Cynthia Alejandra", "Lopez"], ["Michaela", "Frlicka"], ["Michaela", "Honcova"], ["Gopika", "Kapoor"], ["Nika", "Kovac"], ["Patricia", "Guerreiro"], ["Eva", "Raszkiewicz"], ["Katie", "Goepel"], ["Linda", "Prenkovic"], ["Alina", "Yanovskaya"], ["Ashling", "Sumner"], ["Jitsupang", "Samrej"], ["Arisa", "Murakami"], ["Cecilia", "Costa Melgar"], ["Sabina", "Stilu"], ["Claudia Noemi", "Cascella"], ["Flavia", "Dechandt Araujo"], ["Ann Sophie", "Rufyikiri"], ["Amy", "Hoburn"], ["Louise", "Brunskog"], ["Karolina", "Chernaya"], ["Nives", "Baric"], ["Diana", "Makki"], ["Laura", "Hornsby"], ["Chloe", "Murphy"], ["Janina", "Ruhstaller"], ["Yisel", "Nodarse Darvois"], ["Milena", "Zubkov"], ["Anastasia", "Poliakova"], ["Sabrina", "Tahir"], ["Di", "Zhao"], ["Tory", "Parravi"], ["Sederique", "Merola"], ["Ece", "Unlu"], ["Tamara", "Alvarez Riobo"], ["Caroline", "Wegner"], ["Lindsey", "Lyles"], ["Fernanda", "Sandoval"], ["Varunya", "Wongteanchai"], ["Mariana", "Salvador"], ["Lindsay", "Graff"], ["Hana", "Shimokawa"], ["Michelle", "Fischer"], ["Monica", "Turewicz"], ["Maria Florencia", "Albertalli"], ["Komal", "Safdar"], ["Laura", "Fiala"], ["Costanza", "Bruno De Lisi"], ["Paula", "Lopez"], ["Martina", "Zerbola"], ["Roisin", "Mullins"], ["Lucy", "Brown"], ["Ankita", "Raina"], ["Cassidy", "Crawford"], ["Amanda", "Belgini Franchi"], ["Jana", "Stankovicova"], ["Chiara", "Basso Basset"], ["Marianne", "Jodoin"], ["Naomi", "Bleisch"], ["Mashaal", "Hameed"], ["Charlotte", "Phillips"], ["Sabrina", "Dos Reis"], ["Thais", "Romero"], ["Linnea", "Pedersen"], ["Maria Sol", "Carrasco"], ["Livia", "Turiano"], ["Shelby", "Talcott"], ["Yunjun", "Wu"], ["Sofia Giantvigka", "Zengou Nieviantomska"], ["Aida", "Martinez Sanjuan"], ["Amandine", "Hesse"], ["Rosie", "Bird"], ["Ramona", "Ghermani"], ["Cristina", "Dinu"], ["Jainy", "Scheepens"], ["Nadiya", "Kolb"], ["Meheq", "Khokhar"], ["Rebecca", "Poikajarvi"], ["Midori", "Yamamoto"], ["Alexandra M", "Sheeran"], ["Jennifer", "Ren"], ["Valeria", "Detogni"], ["Laurie", "Gingras"], ["Violetta", "Tosmuk"], ["Gabriela", "Markova"], ["Mishel", "Kenin"], ["Samira", "Giger"], ["Nicol", "Signorini"], ["Jessica", "Gomez Galloso"], ["Kaori", "Yamazaki"], ["Mayte", "Cuellar"], ["Eleanor", "Lika"], ["Rachael", "Tredoux"], ["Candela", "Munoz Giron"], ["Ruxandra", "Ababii"], ["Elisha", "Gabb"], ["Samantha", "Lieb"], ["Maria Paula", "Ribero"], ["Hailey M", "Johnson"], ["Chisato", "Kobayashi"], ["Michelle", "Larcher De Brito"], ["Akiko", "Omae"], ["Iveta", "Dapkute"], ["Alena", "Shichkova"], ["Nina", "Nagode"], ["Margot", "De Haan"], ["Veronika", "Bacikova"], ["Catalina", "Pella"], ["Rosaline Zafir", "Chavez Tello"], ["Mirjam", "Gamperli"], ["Clotilde", "Barriere"], ["Marija", "Mirosavljevic"], ["Joanna Mary", "Smith"], ["Beladora", "Matallah"], ["Kim Alena", "Twelker"], ["Zsofia", "Miko"], ["Misaki", "Yoshimoto"], ["Noel", "Scott"], ["Florencia", "Di Biasi"], ["Maryam", "Eslami"], ["Natalla", "Khaniejo"], ["Daniella", "Patton"], ["Min", "Liu"], ["Berat Sena", "Dogru"], ["Ladina", "Soler"], ["Namita", "Bal"], ["Claire Cynthia", "Mulyadi"], ["Isabella", "Williams"], ["Sian", "Bayliss"], ["Anastasia", "Trubich"], ["Jil", "Wagner"], ["Chiara", "Mossi"], ["Anna", "Peregudova"], ["Anjana", "Kompally"], ["Despina", "Papamichail"], ["Veronika", "Zavodska"], ["Judit", "Domingo Casas"], ["Lisa", "Bastianello"], ["Nathaly", "Kurata"], ["Briar", "Preston"], ["Antonella", "Galeano"], ["Maria Del Rosario", "Rodriguez Arias"], ["Tamara", "Blum"], ["Sandy", "Vo"], ["Saana", "Saarteinen"], ["Kalliopi", "Zamanoudi"], ["Nicole", "Martinez"], ["Alejandra", "Hernandez Medel"], ["Beatrice", "Cedermark"], ["Lucia", "Paz Monteagudo"], ["Natasha", "Kanvinde"], ["Romilda", "Zitarosa"], ["Sanne", "Louwers"], ["Sanskriti", "Sinha"], ["Dane", "Vorster"], ["Mishel", "Okhremchuk"], ["Ekaterina", "Kiseleva"], ["Kat", "Facey"], ["Alexandra", "Facey"], ["Desiree", "Jakle"], ["Stephanie", "Vidov"], ["Viktoriya", "Bon"], ["Eva Maria", "Sjolund"], ["Natalia", "Lysova"], ["Stefania", "Haddad"], ["Juliana", "Gajic"], ["Mora", "Eshak"], ["Maja", "Jovic"], ["Jeni", "Patel"], ["Ana Mihaela", "Vladutu"], ["Zhen", "Yan"], ["Jazmin", "Britos"], ["Ziqi", "Hou"], ["Anamaria", "Candanoza"], ["Natasha Mayumi", "Tomishima"], ["Chisato", "Nakagawa"], ["Kayla", "Gammie"], ["Cristina", "Gimenez Pena"], ["Alicia", "Robinson"], ["Xiao Jing", "Lu"], ["Vassiliki", "Giannakaki"], ["Hsin Ting", "Tsai"], ["Yuka", "Sadakane"], ["Mara", "Benz"], ["Sabrina", "Santamaria"], ["Alexandra", "Petrzalkova"], ["Vaszilisza", "Bulgakova"], ["Hisaimet", "Mendez Gonzalez"], ["Nina", "Wellnitz"], ["Marina", "Danzini"], ["Elisa", "Celi"], ["Natela", "Dzalamidze"], ["Gabrielle", "Desimone"], ["Iulia", "Vodislav"], ["Yuka", "Iijima"], ["Serena", "Venica"], ["Jasmin", "Kling"], ["Se Won", "Lee"], ["Michaela", "Meszarosova"], ["Debora", "Echeverria"], ["Paula", "Montoya"], ["Nicole", "Gibbs"], ["Gabriela", "Ce"], ["Giuliana", "Olmos"], ["Milagros", "Cubelli"], ["Ekin", "Bahitli"], ["Karina", "Saeri Ono"], ["Anna", "Orlik"], ["Hana", "Umek"], ["Marina Raluca", "Tudorache"], ["Marion", "Codino"], ["Eleni", "Kordolaimi"], ["Denisa", "Allertova"], ["Ruth", "Seaborne"], ["Marcella", "Cucca"], ["Dora", "Andrejszki"], ["Christina", "Laskaridou"], ["Elizaveta", "Ianchuk"], ["Laetitia", "Sarrazin"], ["Diana", "Stomlega"], ["Sara", "Pilic"], ["Ellina", "Kornilova"], ["Denise", "Scheiflinger"], ["Adreanna", "Christopoulou"], ["Camilia", "Benabdeljalil"], ["Sara", "Benabdeljalil"], ["Anna", "Smirnova"], ["Katharina", "Holert"], ["Larisa", "Sporea"], ["Nozomi", "Fujioka"], ["Taro", "Keens"], ["Anastasiya", "Prenko"], ["Sayaka", "Koumura"], ["Caroline", "Price"], ["Suzana", "Sava"], ["Antigoni", "Kleftouri"], ["Katherine", "Westbury"], ["Sheila Bertha", "Aquino Aragon"], ["You Na", "Sul"], ["Aleksandra", "Krunic"], ["Paula", "Rincon Otero"], ["Johanna", "Skoglund"], ["Beatriz", "Nallar"], ["Elena", "Garcia Garrido"], ["Alix", "Collombon"], ["Ekaterina", "Yakovleva"], ["Nicole Theresa", "Leisher"], ["Janine", "Erasmus"], ["Danica", "Milinkovicova"], ["Besarta", "Avdullahi"], ["Kirsten", "Scott"], ["Mercedes", "Giner Gasco"], ["Catherine", "Chantraine"], ["Leyla", "Taracena"], ["Sloane", "Stephens"], ["Esther", "Santiago"], ["Sharni", "Stocker Jones"], ["Mukhabbat", "Saidova"], ["Ekaterina", "Nikitina"], ["Amanda", "Rodgers"], ["Nihal", "El Aasar"], ["Rebeca", "Pereira"], ["Kadi", "Ilves"], ["Veronika", "Zatekova"], ["Antonella", "La Viola"], ["Dora", "Vajdic"], ["Olga", "Parres Azcoitia"], ["Ke Hsin", "Chen"], ["Elisaveta", "Baer"], ["Monika", "Magusiak"], ["Cecilia Maria", "Barbiero"], ["Annie", "Mulholland"], ["Tal", "Gorenstein"], ["Helene", "Meuleman"], ["Sophia", "Dzulynsky"], ["Emina", "Bektas"], ["Carolina", "Betancourt"], ["Dunja", "Stamenkovic"], ["Priscila", "Garcia"], ["Daniela", "Degano"], ["Charlene", "Monterrain"], ["Yang", "Pang"], ["Ainhoa", "Zamora Rubio"], ["Martina", "Natali"], ["Sarah", "Mateo"], ["Giovanna", "Tomita"], ["Jennifer", "Rink"], ["Na Hee", "Lee"], ["Ksenia", "Chimpoake"], ["Louise", "Boinay"], ["Saya", "Nishi"], ["Polina", "Monova"], ["Helena", "Bel Franquesa"], ["Alisa", "Danilova"], ["Ines", "Martins"], ["Rut Ester", "Prudencio Csapek"], ["Daria", "Mironova"], ["Catalina", "Ronco"], ["Brigith Alejandra", "Teran"], ["Dominique Chante", "Mclean"], ["Adi", "Ella"], ["Sofia", "Holmberg"], ["Robin", "Anderson"], ["Liat", "Zimmermann"], ["Irini", "Papageorgiou"], ["Anastasia", "Matyukhina"], ["Isabella", "Dale"], ["Federica", "Arcidiacono"], ["Nadiia", "Baryshpolets"], ["Nova", "Patel"], ["Jeong Min", "Jeon"], ["Mehreen", "Izhar"], ["Melita", "Ferjanic"], ["Laura", "Ubeda Lopez"], ["Natalia", "Zamora Jimenez"], ["Ksenia", "Gospodinova"], ["Marta", "Stojanovic"], ["Olga", "Terteac"], ["Brenda", "Moreira"], ["Leyla", "Erkan"], ["Sarah", "Hellstern"], ["Aishwarya", "Agrawal"], ["Karen Johana", "Martinez"], ["Laura", "Bernard"], ["Laura", "Schaeder"], ["Viktoria", "Matejevic"], ["Xianghong", "Yin"], ["Jessica", "Wacnik"], ["Oana", "Ionescu"], ["Silvia", "Tumova"], ["Seunghyun", "Lee"], ["Alexandra", "Romanova"], ["Thale", "Myhre"], ["Dajana", "Ognjenovic"], ["Mimi", "Fotopoulos"], ["Alina", "Savchuk"], ["Lisa", "Vallone"], ["Constanze", "Lotz"], ["Lina", "Padegimaite"], ["Clare", "Fong"], ["Karolina", "Pondusova"], ["Erika", "Faba Lopez"], ["Niu Xuan", "Zhou"], ["Lucia", "Butkovska"], ["Melina", "Gonzalez"], ["Dana", "Nussralla"], ["Katerina", "Popova"], ["Erin Carol", "Stephens"], ["Nicole", "Meyer"], ["Julia", "Schiller"], ["Ajla", "Tomljanovic"], ["Gloire", "Mfoumouangana"], ["Natasa", "Vukovic"], ["Maria", "Bengtsson"], ["Madina", "Yekubjanova"], ["Andrea", "Pavlovic"], ["Viktoria", "Stojanova"], ["Denise", "Konig"], ["Timea", "Babos"], ["Grace Sari", "Ysidora"], ["Paula", "Mocete Talamantes"], ["Carla", "Mocete Talamantes"], ["Ji Yun", "Park"], ["Kristina", "Mladenovic"], ["Rishika", "Sunkara"], ["Pia", "Konig"], ["Daneika", "Borthwick"], ["Mikele", "Irazusta"], ["Klara", "Dohnalova"], ["Haruka", "Yamaura"], ["Divija", "Mandava"], ["Elena", "Zenko"], ["Chiara", "Mendo"], ["Raluca", "Mita"], ["Ivana", "Vukovic"], ["Ma Regina", "Santiago"], ["Mizuki", "Konakawa"], ["Romina", "Aufieri"], ["Ana Maria", "Ayala Villacorta"], ["Breanna Alexa Bachini", "Bachini"], ["Michal", "Yogev"], ["Laura", "Deigman"], ["Cyntia Soledad", "Gimenez"], ["Jaruwadee", "Kaewma"], ["Yuliana", "Lizarazo"], ["Verena", "Gantschnig"], ["Marina", "Cunningham Pereira"], ["Andrea", "Murillo"], ["Sabrina", "Bamburac"], ["Abbi", "Melrose"], ["Ainhoa", "Atucha Gomez"], ["Steffi", "Carruthers"], ["Matea", "Curic"], ["Ireen", "Kuipers"], ["Lok Sze", "Leung"], ["Katarzyna", "Kossowska"], ["Kseniia", "Berestetskaya"], ["Su San Na", "Sim"], ["Melanie", "Maietti"], ["Julia", "Lorca"], ["Barbara", "Luz"], ["Siriporn", "Phakamad"], ["Shir", "Perkis"], ["Jana", "Cepelova"], ["Sonia", "Daggou"], ["Yekaterina", "Sagitova"], ["Beatriz", "Prieto Cabrera"], ["Alejandra", "Reyes Menacho"], ["Ingrid Alexandra", "Radu"], ["Steffi", "Distelmans"], ["Melis", "Sezer"], ["Farangiz", "Shamsieva"], ["Paula", "Feitosa"], ["Marija", "Milutinovic"], ["Melissa", "Kopinski"], ["Madison", "Craft"], ["Lisa", "Ehrensberger"], ["Ksenya", "Bardabush"], ["Julia", "Stamatova"], ["Elizabeth", "Rafailidis"], ["Viktoria", "Bjork"], ["Mari", "Mahoni"], ["Tine", "Maertens"], ["Lesbia", "Zuniga"], ["Shruti", "Archita"], ["Theresa", "Smith"], ["Vorranavaporn", "Vorrarattanamongkol"], ["Cordelia Currey", "Witten"], ["Sofia", "Baptista"], ["Kana", "Okada"], ["Jessica", "Sabeshinskaja"], ["Catherine", "Leduc"], ["Michaela", "Jasenakova"], ["Pauline", "Lollia"], ["Dane", "Joubert"], ["Raluca Elena", "Platon"], ["Tamara", "Mihajlovic"], ["Yuriko", "Shinmura"], ["Maria Jose", "Marino Calvino"], ["Amy", "Askew"], ["Dan Ni", "Wang"], ["Renata", "Kuricova"], ["Abhilasha", "Ahuja"], ["Xuanshuo", "Ou"], ["Eliana Maria", "Lopez Pappalardo"], ["Lorraine M", "Guillermo"], ["Matilda", "Hurst"], ["Svetlana", "Piquerez"], ["Irina", "Glimakova"], ["Giulia", "Andreazza"], ["Hyejin", "Lee"], ["Marina", "Prosenica"], ["Chanel", "Glasper"], ["Machika", "Miyaji"], ["Marta", "Dallosso"], ["Lidiia", "Dashchenko"], ["Ksenia", "Kirillova"], ["Nour", "Abbes"], ["Meghan", "Blevins"], ["Ashleigh", "De Wet"], ["Rosalyn", "Small"], ["Silvia", "Miguel"], ["Ivanna", "Slobodian"], ["Emma", "Marti"], ["Romina Soledad", "Sanio Juarez"], ["Patricia", "Cyranowski"], ["Whitney P", "Kay"], ["Oceane", "Adam"], ["Ushna", "Suhail"], ["Nikoleta", "Vlaikoudi"], ["Amonica", "Arcos"], ["Ikttesh", "Chahal"], ["Valentyna", "Ivakhnenko"], ["Camelia", "Abdellah"], ["Katja", "Milas"], ["Miu", "Hongo"], ["Agustina Sol", "Eskenazi"], ["Or", "Sasson"], ["Ana Lorena", "Belmar"], ["Ester", "Goldfeld"], ["Pauline", "Clavel"], ["Ivana", "Kopsova"], ["Lauren", "Mcminn"], ["Hanna", "Tolonen"], ["Ivana", "Kafedjiyska"], ["Fausthyara", "Pietersz"], ["Satomi", "Fujitani"], ["Yasemin", "Cetinel"], ["Sayako", "Matsunaga"], ["Silvia", "Njiric"], ["Nikolette", "Budai"], ["Andreea", "Zabrac"], ["Marina", "Lidiya"], ["Cynthia", "Melita"], ["Yasmin", "Ebada"], ["Pilar", "Dominguez Lopez"], ["Heini", "Salonen"], ["Megumi", "Nishimoto"], ["Paula Alejandra", "Saenz"], ["Vaniya", "Dangwal"], ["Sarah", "Means"], ["Ani", "Vangelova"], ["Jana", "Matouskova"], ["Salome", "Kvitashvili"], ["Stefania", "Fadabini"], ["Vivien", "Juhaszova"], ["Michelle Paz", "Coccio Nieto"], ["Clorinda", "Wessels"], ["Georgina", "Carswell"], ["Luksika", "Kumkhum"], ["Shu Ying", "Hsieh"], ["Lauren", "Herring"], ["Nikol", "Hristova"], ["Camille", "Cheli"], ["Joanna", "Nalborska"], ["Mubina", "Vahobova"], ["Sofya", "Malysheva"], ["Hongrui", "Sun"], ["Aneliya", "Kairlenova"], ["Raquel", "Madrigal Rodriguez"], ["Nicole", "Melichar"], ["Aminat", "Kushkhova"], ["Nikolina Marija", "Turudic"], ["Lana", "Groenvynck"], ["Andela", "Brguljan"], ["Margarida", "Moura"], ["Liz Tatiane", "Koehler Bogarin"], ["Jessica", "Laing"], ["Teona", "Tatishvili"], ["Diana", "Reverte"], ["Grace", "Denga"], ["Charlene", "Seateun"], ["Trang", "Huynh Phuong Dai"], ["Demi", "Schuurs"], ["Hannah", "Liljekvist"], ["Martina", "Lombardi"], ["Adriana", "Moedano"], ["Michiru", "Furuya"], ["Stefanie", "Stemmer"], ["Maja", "Mladenovic"], ["Natasa", "Trailovic"], ["Trevine", "Sellier"], ["Giulia", "Costa"], ["Robyn", "Beddow"], ["Alina", "Mikheeva"], ["Josephine", "Boualem"], ["Alma Michelle", "Espinosa Rodriguez"], ["Satomi", "Yasuno"], ["Ekaterina", "Yashina"], ["Yurika", "Aoki"], ["Catalina", "Lopez"], ["Ellie", "Yates"], ["Sharmada", "Balu"], ["Shweta", "Rana"], ["Nadine", "Zeitoun"], ["Maria", "Zela"], ["Molly", "Okoniewski"], ["Beatrice", "Krauss Granate"], ["Karen M", "Gomez Gonzalez"], ["Lyubov", "Pogribnyak"], ["Mako", "Irie"], ["Maria", "Arenas"], ["Napatsakorn", "Sankaew"], ["Martha Paola", "Sanchez Merigo"], ["Sina", "Niketta"], ["Sarah", "Lee"], ["Sung Ah", "Park"], ["Kemalie", "Herath"], ["Valeriya", "Savina"], ["Masa", "Smic"], ["Lenka", "Filipova"], ["Jamie", "Pawid"], ["Natsumi", "Kujime"], ["Paula", "De Man"], ["Ariel", "Sulimany"], ["Manisha", "Foster"], ["Rafaela", "Orenga Panizza"], ["Yue", "Fei"], ["Francesca", "Stephenson"], ["Camila", "Franco"], ["Giovanna", "Ramos"], ["Dilyara", "Merzadinova"], ["Maryna", "Zanevska"], ["Patricia", "Fargas Osorio"], ["Yuki", "Ito"], ["Andrea", "Castillo Gutierrez"], ["Aleksandra", "Trifunovic"], ["Maria Belen", "Mosca"], ["Jasmine Nicole", "Minor"], ["Edmee", "Morin Kougoucheff"], ["Maria", "Benkirane"], ["Dide", "Beijer"], ["Grazia", "Ripepi"], ["Haine", "Ogata"], ["Elizaveta Anna", "Nemchinov"], ["Yukako", "Noi"], ["Anastasiya", "Tripolskaya"], ["Alexandra", "Nancarrow"], ["Mateja", "Kraljevic"], ["Renata", "Campagnolo"], ["Dominika", "Rozanska"], ["Marjorie", "Wladimirski"], ["Chantal", "Skamlova"], ["Laura", "Valkova"], ["Renata", "Arshavskaya"], ["Sandra", "Garriga Catala"], ["Iva", "Jancevski"], ["Lucia", "Soulie"], ["Pascalle", "Thenoux Acuna"], ["Chen Lu", "Wu"], ["Rita", "Vilaca"], ["Elena", "Bertoia"], ["Zanmarie", "Pienaar"], ["Karoline", "Grieshofer"], ["Luisanna", "Rodriguez"], ["Linn", "Timmermann"], ["Ankita", "Bhatia"], ["Luicelena", "Perez"], ["Chihiro", "Matsumoto"], ["Soumeya", "Anane"], ["Patricia", "Haas"], ["Agustina", "Valenzuela"], ["Smriti", "Joon"], ["Isabel", "Bischof"], ["Zi", "Yang"], ["Marie Elise", "Casares"], ["Chaimae", "Roudami"], ["Valentina", "Beccaria"], ["Akiko", "Okuda"], ["Melanie", "Benyadi"], ["Hua Chen", "Lee"], ["Skylar", "Kuykendall"], ["Denise", "Van Der Ben"], ["Viktoria", "Malova"], ["Tanya", "Noury"], ["Devon", "Kuijstermans"], ["Stacia", "Kissell"], ["Nattawadee", "Kotcha"], ["Rio", "Kitagawa"], ["Andrea", "Berzal Albaladejo"], ["Carlotta", "Orlando"], ["Amy", "Bowtell"], ["Ilinca", "Stoica"], ["Melanie", "Vlak"], ["Nikarat", "Wateenukit"], ["Kenna", "Kilgo"], ["Hao Ching", "Chan"], ["Noy", "Mor"], ["Ilijana", "Ivic"], ["Claudia", "Lorenzo Fernandez"], ["Zoe Gwen", "Scandalis"], ["Tracy", "Plant"], ["Eleni", "Konstantinidou"], ["Yaiza", "Franco"], ["Sarah", "Petrides"], ["Idia", "Amen"], ["Binasa", "Beslagic"], ["Hannah", "Martin Merchant"], ["Katarina", "Adamovic"], ["India", "Maggen"], ["Maria Eduarda", "Medeiros"], ["Aiko", "Yoshitomi"], ["Anastasia", "Klyueva"], ["Gwendolyne", "Laugier"], ["Yasmin", "Hamzawy"], ["Alexiina", "Ahonkivi"], ["Diletta", "Alessandrelli"], ["Natallia", "Vavulina"], ["Monica", "Puig"], ["Louise", "Reis De Campos"], ["Manon", "Provost"], ["Solene", "Ficheux"], ["Stephanie", "Ntcha"], ["Natalia", "Maynetto"], ["Irene", "Gandara Gonzalez"], ["Emi", "Mutaguchi"], ["Jovana", "Jaksic"], ["Caterina", "Ghedin"], ["Liv", "Geurts"], ["Flavia", "Porru"], ["Sabina", "Lupu"], ["Kim", "Sadi"], ["Karine", "Celis"], ["Gun Hee", "Kim"], ["Anna", "Vasilyeva"], ["Kinga", "Anusiewicz"], ["Paulina", "Petriskova"], ["Martha Elena", "Garza Del Alto"], ["Juliana", "Silva De Carvalho"], ["Yana", "Filyushina"], ["Maci", "Epstein"], ["Charlotte", "Villeminot"], ["Garbine", "Muguruza"], ["Ellen", "Tsay"], ["Kriszina", "Kapitany"], ["Marina", "Zhurba"], ["Wan Yi", "Sweeting"], ["Marina", "Moreno"], ["Laura Silva", "De Arruda"], ["Lauren", "Davis"], ["Ani", "Amiraghyan"], ["Emily", "Gitman"], ["Agnese", "Rella"], ["Jovana", "Blagojevic"], ["Julia", "Kimmelmann"], ["Daniela", "Garcia Diaz"], ["Reykan", "Woro"], ["Alexandra", "Aiello"], ["Caitlyn", "Williams"], ["Caroline", "Garcia"], ["Georgiana", "Patrasc"], ["Zarina", "Diyas"], ["Alicia", "Barnett"], ["Rejhana", "Mekic"], ["Daniel", "Kestenboum"], ["Ravnoor", "Kaur"], ["Kaede", "Matsuo"], ["Nikita", "Uberoi"], ["Stefana", "Andrei"], ["Charlotte", "Koning"], ["Raquel", "Fernandes"], ["Klara", "Fabikova"], ["Yanina", "Darishina"], ["Mojca", "Fijavz"], ["Blanka", "Szavay"], ["Elizabeth", "Thoms"], ["Manoela Corbellini", "Chiacchio"], ["Tijana", "Uzelac"], ["Luz Rocio", "Jara"], ["Amina", "Mrad"], ["Zeljana", "Radicevic"], ["Estelle", "Metadieu"], ["Cemre", "Anil"], ["Agnes", "Bukta"], ["Liliana", "Stoiu"], ["Valeriya", "Maksimchenko"], ["Ina", "Kaufinger"], ["Josepha", "Adam"], ["Lisa", "Ruckenbaum"], ["Felicitas", "Kastner"], ["Martina", "Trevisan"], ["Alessia", "Rossetti"], ["Jennifer", "Pusey"], ["Ainhoa", "Rico Martin"], ["Susana", "Florez"], ["Ingrid", "Vojcinakova"], ["Jil Nora", "Engelmann"], ["Nelli", "Buyuklianova"], ["Charitomeni", "Matoula"], ["Barbora", "Ruffini"], ["Beatriz", "Morales Hernandez"], ["Andreea", "Istrate"], ["Yulia", "Georgieva"], ["Matea", "Cutura"], ["Desiree", "Tran"], ["Christine", "Guerrazzi"], ["Stephanie M", "Vlad"], ["Hristina", "Dishkova"], ["Julia Mihaela", "Moldovan"], ["Emily", "Mazzola"], ["Amreen", "Chaudhary"], ["Anna", "Klasen"], ["Pleun", "Burgmans"], ["Sandra", "Roldan"], ["Ancia", "Ifill"], ["Tatiana", "Filaire"], ["Bianca", "Nicolela Susanna"], ["Jessica", "Lawrence"], ["Martina Alejandra", "Baca Villagomez"], ["Yauheniya", "Shapaval"], ["Disha Satish", "Agarwal"], ["Leticia", "Giudici"], ["Helen", "Harvey"], ["Sylwia", "Kociecka"], ["Valeria", "Campigotto"], ["Kamila", "Abdukadirova"], ["Darya", "Shulzhanok"], ["Elena", "Fayner"], ["Martina", "Demichelis"], ["Sofia", "Lozano"], ["Anna Clarice", "Patrimonio"], ["Mary Ann", "Balint"], ["Isabel", "Steger"], ["Polina", "Vinogradova"], ["Jenna", "Laroussi"], ["Sinem", "Alptekin"], ["Anastasia", "Vovk"], ["Rona", "Lavian"], ["Olga", "Kishchun"], ["Valentina", "Gemini"], ["Viktoriya", "Karmenova"], ["Adrija", "Runcha"], ["Naomi", "Holopainen"], ["Kelli", "Hine"], ["Ronit", "Yurovsky"], ["Leighann", "Sahagun"], ["Fabiana", "Araya"], ["Francesca M", "Fanchin"], ["Kateryna", "Pyatakova"], ["Julia", "Casselbury"], ["Meng Ning", "Deng"], ["Juliana", "Jofre"], ["Arney", "Johanessdottir"], ["Nadejda", "Sidorenko"], ["Belen", "Rivera"], ["Rachael", "Reed"], ["Antonia", "Markuskova"], ["Ekaterina", "Tour"], ["Polina", "Movchan"], ["Marzhan", "Kukoneva"], ["Sowjanya", "Bavisetti"], ["Mina", "Matsuba"], ["Anaeve", "Pain"], ["Nithya Raj", "Babu Raj"], ["Danielle Rose", "Collins"], ["Yongyuan", "Wang"], ["Fatima Zohra", "Boukezzi"], ["Patricia", "Ku Flores"], ["Caroline Betzave", "Lojan Cruz"], ["Nathania Ratih Putri", "Karsita"], ["Iryna", "Kyrychenko"], ["Petra", "Kubinova"], ["Risa", "Nakahara"], ["Catalina Paz", "Arce Riquelme"], ["Agata", "Baranska"], ["Jeanette", "Draeger"], ["Alina", "Pakharenko"], ["Khaoula", "Allaoui"], ["Karyna", "Alesha"], ["Gabrielle", "Moxey"], ["Eden Megan", "Chang"], ["Kana", "Natsume"], ["Haruka", "Taniguchi"], ["Vivian", "Heisen"], ["Eirdis", "Ragnarsdottir"], ["Jane", "Stewart"], ["Biola", "Akewula"], ["Viktoryia", "Kisialeva"], ["Lizeth Vanessa", "Gomez Diaz"], ["Camille", "Goodman"], ["Anna", "Makuha"], ["Bruna", "Magalhaes"], ["Kyria", "Dunford"], ["Emily", "Rodbourne"], ["Tamar", "Komakhidze"], ["Sarahi", "Garcia Carrera"], ["Aina", "Morey Juan"], ["Dora", "Pavlinic"], ["Eleanor", "Deaves"], ["Ioana Daniela", "Bighiu"], ["Kimika", "Sakamoto"], ["Lee", "Levy"], ["Aikaterini", "Stavroulaki"], ["Theresa", "Kleinsteuber"], ["Patricia", "Quintana Cerezo"], ["Nadya", "Syarifah"], ["Aggeliki", "Prezani"], ["Mina", "Saygi"], ["Lina", "Amouzoune"], ["Rebeca", "Aguilar Dominguez"], ["Fiona", "Gervais"], ["Julija", "Kulibaba"], ["Kendal", "Woodard"], ["Yujia", "Wang"], ["Mckenzie", "Thomas"], ["Ran", "Tian"], ["Simona", "Ionescu"], ["Marines", "Holguin"], ["Charlotte", "Roemer"], ["Anne Sophie", "Forget"], ["Yasuyo", "Numajiri"], ["Rachel", "Girard"], ["Carla", "Forte"], ["Camila Andrea", "Roca"], ["Shi Ying", "Li"], ["Desirae", "Krawczyk"], ["Kenia", "Vasallo Soto"], ["Stephanie", "Carmans"], ["Isidora", "Radojkovic"], ["Elizaveta", "Deykun"], ["Audrey", "Capouet"], ["Nicole", "Collie"], ["Elizabeta", "Bauer"], ["Benedetta", "Fasciani"], ["Paulina", "Czarnik"], ["Alice", "Garcia"], ["Mariangeles", "Gomez Quintana"], ["Sanae", "Ohta"], ["Tian", "Cao"], ["Angie", "Torres"], ["Brooke", "Taylor"], ["Maria Jose", "Buil Tellaeche"], ["Kerstin", "Gressmann"], ["Natasha", "Palha"], ["Ilona", "Kremen"], ["Lyuboslava", "Peruhova"], ["Chanelle", "Van Nguyen"], ["Soledad", "Calderon Arroyo"], ["Julia", "Teufel"], ["Laura", "Robson"], ["Nicole", "Hoynaski"], ["Samantha", "Pribaz"], ["Claudia Antonia", "Enache"], ["Vaibhavi", "Trivedi"], ["Libby", "Muma"], ["Aida", "Golman"], ["Seraina", "Jaeger"], ["Corina", "Jaeger"], ["Mirjam", "Zeller"], ["Aleksandra", "Nionova"], ["Karin", "Hoppler"], ["Jenya", "Plevako"], ["Robu", "Kajitani"], ["Nino G", "Sujashvili"], ["Pei Yu", "Sieh"], ["Maria", "Panaite"], ["Lin", "Zhu"], ["Maria", "Masini"], ["Alexandra", "Bykova"], ["Inna", "Bondarenko"], ["Valeryia", "Kulikouskaya"], ["Natasha", "Fourouclas"], ["Stephanie", "Nauta"], ["Antoaneta", "Tzarvulkova"], ["Diala", "Jamaleddine"], ["Anna Lena", "Friedsam"], ["Kate", "Vialle"], ["Anna", "Schubries"], ["Estelle", "Balan"], ["Elyzaveta", "Tymchenko"], ["Tessa", "Breve"], ["Saisai", "Zheng"], ["Katerina", "Kaminkova"], ["Tijana", "Rotim"], ["Fernanda Luvizotto Do", "Amaral"], ["Dariya", "Dashutina"], ["Dominika", "Toronyi"], ["Sarah", "Tremuth"], ["Ksenia", "Khatsey"], ["Camila", "Aguirri"], ["Giulia", "Ferrari"], ["Morgan", "Mccray"], ["Leela", "Beattie"], ["Danielle", "Zinn"], ["Astrid Maria", "Gehre Boettner"], ["Nelly", "Garcia Sanchez"], ["Steffany", "Bermudez"], ["Katharina", "Blik"], ["Siria Elena", "Brebenel"], ["Liubov", "Vasilyeva"], ["Katherine Gabriela", "Miranda Chang"], ["Jeannette", "Moesgen"], ["Deimante", "Bulatovaite"], ["Hyojung", "Yea"], ["Lorenza", "Stefanelli"], ["Charlene", "Favier"], ["Anais", "Deville"], ["Annika", "Beck"], ["Beatriz Valente", "De Castro Coelho"], ["Megane", "Bianco"], ["Morven", "Mcculloch"], ["Brenda", "Njuki"], ["Eri", "Hozumi"], ["Xinyi", "Jiang"], ["Katharina", "Lehnert"], ["Tijana", "Vrhovac"], ["Katerina", "Latalova"], ["Brianna", "Morgan"], ["Michala", "Kucharova"], ["Kateryna", "Kozlova"], ["Hao Chen", "Tang"], ["Mayte", "Calmet"], ["Vanessa Steffi", "Ortiz Perez"], ["Anna", "Montserrat Sanchez"], ["Elizabeth", "Arce"], ["Frances", "Altick"], ["Aminat", "Quadri"], ["Jessica", "Pegula"], ["Natalia", "Galan Gomez"], ["Elena Teodora", "Cadar"], ["Carol", "Augustine Benito"], ["Manon", "Peral"], ["Karolina", "Stuchla"], ["Eugenie", "Bouchard"], ["Caterina", "Lepore Palmisano"], ["Joanna", "Henderson"], ["Fang Chi", "Tsao"], ["Maria", "Pujol Serra"], ["Sinhee", "Kim"], ["Camila", "Acuna"], ["Michele", "Erkens"], ["Malin", "Ulvefeldt"], ["Da Un", "Lee"], ["Yuly Marcela", "Tamayo"], ["Petra", "Pokorna"], ["Elsa", "Pellegrinelli"], ["Cheng Ling", "Huang"], ["Candelaria", "Sedano Acosta"], ["Dafna", "Peleg"], ["Ekaterina", "Semenova"], ["Noemi", "Hemmerich"], ["Lize", "Leenknecht"], ["Soraya", "Moradian"], ["Sofiya", "Bogatova"], ["Maria Paula", "Deheza"], ["Maria Ines", "Deheza"], ["Jessie Felisia", "Pakaya"], ["Barbora", "Kijasova"], ["Caroline", "Van De Wijgaart"], ["Magdalena", "Cordero"], ["Ananya", "Sarkar"], ["Ashley M", "Kitchen"], ["Daria", "Gavrilova"], ["Asmae", "Benzit"], ["Deniz", "Ulutug"], ["Thaisa", "Pereira"], ["Daphne", "Van Den Heuvel"], ["An Sophie", "Mestach"], ["Andromachi", "Bakagianni"], ["Anna", "Mamalat"], ["Andreea", "Badileanu"], ["Nada", "Zaher"], ["Sofia", "Montemayor"], ["Vicki", "Saxegaard"], ["Cecilia", "Mercier"], ["Charlotte", "Pearce"], ["Daniela Renee", "Leitch"], ["Giulia", "Mastellone"], ["Carolin", "Schmidt"], ["Natalie", "Laus"], ["Ha Young", "Ji"], ["Maria", "Garoz Moreno"], ["Juliana", "Goncalves"], ["Nilushi", "Fernando"], ["Paloma Margarita", "Mereles Aranda"], ["Suzanna", "Grigoryan"], ["Carmene", "Dotto"], ["Alejandra", "Starkova"], ["Irina", "Constantinide"], ["Emma", "Onila"], ["Alisa", "Ogorodova"], ["Bruna", "Ponce"], ["Jaeyeon", "Kim"], ["Dariya", "Berezhnaya"], ["Barbara Guadalupe", "Urrutia"], ["Vlada", "Svarkovskaya"], ["Aliaksandra", "Sasnovich"], ["Elianne", "Douglas Miron"], ["Francesca", "Sella"], ["Cynthia", "Del Rey Guardiola"], ["Andrea Renee", "Villarreal"], ["Ekaterina", "Lavrikova"], ["Courtney", "Colton"], ["Maria Fernanda", "Vargas"], ["Ioana", "Posirca"], ["Janine", "Remler"], ["Alison", "Van Uytvanck"], ["Marcela", "Zacarias"], ["Qianqian", "Zhao"], ["Jana", "Boubelikova"], ["Olha", "Romanyshyn"], ["Dina", "El Harazi"], ["Ekaterina", "Tugarinova"], ["Daria", "Afanasyeva"], ["Kari", "Gunton"], ["Kamila", "Pavelkova"], ["Andrea", "Rodriguez Company"], ["Daria", "Salnikova"], ["Lena", "Specht"], ["Elisabeth", "Abanda"], ["Konstantina", "Tsadari"], ["Claudia Lazara", "Magarino Lopez"], ["Alicia", "Fernandez Galvez"], ["Waka", "Kirihata"], ["Rei", "Ikeda"], ["Elizaveta", "Ignatova"], ["Antonia", "Conze"], ["Shani", "Blecher"], ["Hanna", "Landener"], ["Julia", "Jones"], ["Olena", "Kyrpot"], ["Cristina", "Nicolae"], ["Kelly", "Southwood"], ["Kyle", "Mcphillips"], ["Eva", "Rodriguez De Las Heras"], ["Arantxa", "Sanchez"], ["Brittany", "Lashway"], ["Viktorija", "Rajicic"], ["Sarai", "Flores Diaz"], ["Silky", "Sachdeva"], ["Ganna", "Poznikhirenko"], ["Amy", "He"], ["Catherine", "Harrison"], ["Chia Hsien", "Yang"], ["Kelli Elizabeth", "Close"], ["Florencia", "Magni"], ["Risa", "Ozaki"], ["Maria Ximena", "Herrera Rea"], ["Olivia", "Larsson"], ["Samantha Rose", "Droop"], ["Yuumi", "Totsuka"], ["Maayan", "Mastey"], ["Anna", "Abadias Morales"], ["Ana Sofia", "Sanchez"], ["Julia", "Wachaczyk"], ["Natalia", "Davila"], ["Patrizia", "Fusco"], ["Daniela", "Vanko"], ["Magdalena", "Stencel"], ["Sofico", "Kadzhaya"], ["Natnicha", "Ruangsumrej"], ["So Hee", "Jung"], ["Sohinee", "Ghosh"], ["Katarzyna", "Kapustka"], ["Alejandra", "Diaz Mares"], ["Anastasia", "Vdovenco"], ["Kirandeep Kaur", "Kotade"], ["Nela", "Platkova"], ["Vera", "Tverdikova"], ["Marta", "Galka"], ["Alexia", "Rycroft"], ["Steffy", "Canals Baker"], ["Romaine", "Zenhausern"], ["Andrea", "Norlander"], ["Skylar Alexandra", "Morton"], ["Mandy", "Wagemaker"], ["Anastasiya", "Zubkova"], ["Aashima", "Garg"], ["Andjela", "Novcic"], ["Katarina", "Pavlovic"], ["Rosalie", "Willig"], ["Vannesa", "Gunawan"], ["Sung Hee", "Kim"], ["Sharifah Syafeenaz", "Syed Azmir"], ["Daria", "Shakoulina"], ["Christina", "Shakovets"], ["Stephany", "Gamiz"], ["Caty", "Santos"], ["Janina", "Mistecky"], ["Angelica", "Sepulveda"], ["Laura", "Svatikova"], ["Sophie", "Dunlop"], ["April", "Van Gennip"], ["Yafan", "Wang"], ["Tria Rizki", "Amalia"], ["Tristen Z", "Dewar"], ["Roumeila", "Zhir"], ["Carita", "Moolman"], ["Noelia", "Zeballos"], ["Simina Teodora", "Bodea"], ["Misano", "Sato"], ["Caitlin Paige", "Hindmarsh"], ["Jelena", "Lazarevic"], ["Konstantina", "Papaoikonomou"], ["Alejandra", "Obando"], ["Haruna", "Umemoto"], ["Nadejda", "Stavreva"], ["Irene", "Martinez Del Olmo"], ["Irina", "Slizovskaya"], ["Asel", "Espolova"], ["Grace", "Min"], ["Rocio", "Martin Fernandez"], ["Giada", "Clerici"], ["Reem", "Fayed"], ["Elisa", "Idini"], ["Ecaterina", "Oproiu"], ["Adina Alexandra", "Marinescu"], ["Kirsten", "Lewis"], ["Saneeya", "Singh"], ["Ellen", "Allgurin"], ["Kelsey", "King"], ["Stephanie", "Loutsenko"], ["Zalina", "Khairudinova"], ["Melissa Emile", "Kandinata"], ["Deborah", "Suarez"], ["Kathinka", "Von Deichmann"], ["Isadora Borges", "Zwetsch"], ["Andrea", "Crespo De La Concepcion"], ["Athena", "Nathalia"], ["Lisa", "Andersson"], ["Martina", "Biollo"], ["Chinatsu", "Shimizu"], ["Asya", "Latifoglu"], ["Daria", "Prytkova"], ["Camille", "Lalou"], ["Yana", "Yurchenko"], ["Georgina", "Sellyn"], ["Snigdha", "Padamata"], ["Mila", "Majtan"], ["Miu", "Ema"], ["Yara", "Abed"], ["Maeva", "Razakasoa"], ["Cornelia", "Lister"], ["Mariami", "Skhirtladze"], ["Isabella", "Catelani"], ["Maya", "Jansen"], ["Ana Maria", "Gilca"], ["Isotta", "Mancini"], ["Makoto", "Ninomiya"], ["Zainab", "Ali Sajjad"], ["Devan", "Mccluskey"], ["Paula", "Castro"], ["Cisil Buse", "Ilgazli"], ["Nina", "Catovic"], ["Gabriela", "Porubin"], ["Sara", "Castellano"], ["Maria Jose", "Samano Moreno"], ["Mariah", "Plauth"], ["Lucie", "Chrastecka"], ["Tijana", "Filipovic"], ["Samantha", "Koelliker"], ["Soo Bin", "Oh"], ["Melissa", "Missaglia"], ["Emiliya", "Gadzhieva"], ["Ann Kathrin", "Schmitz"], ["Denise", "Maxl"], ["Sharon Sanchana", "Paul"], ["Karolina", "Rozenberg"], ["Lorena", "Constantin"], ["Nadia Yahya Tear", "Tjahjana"], ["Pernilla", "Mendesova"], ["Sara", "Sherif"], ["Martina", "Chrobakova"], ["Giulia", "Riepe"], ["Julia", "Dinhof"], ["Dinara", "Khalilova"], ["Vesilina", "Ivanova"], ["Malene", "Stripp"], ["Sari", "Baba"], ["Giulia", "Guidetti"], ["Lenice", "Van Eyk"], ["Suleika", "Besser"], ["Reika", "Agata"], ["Emy", "Damiani"], ["Federica", "Spazzacampagna"], ["Naomi", "Tran"], ["Tabata Oshiro", "Coutinho"], ["Julia", "Elbaba"], ["Silvia", "Margaroli"], ["Sofia", "Garcia Morales"], ["Susan", "Niemann"], ["Valentina", "Quinones"], ["Manya", "Nagpal"], ["Michelle", "Bertolini"], ["Sonya", "Latycheva"], ["Martina", "Parmigiani"], ["Yuriko", "Ono"], ["Angelika", "Sobiecka"], ["Elizaveta", "Luzina"], ["Martina", "Zavarise"], ["Francesca", "Fusinato"], ["Darina", "Dobrovolski"], ["Bilyana", "Savova"], ["Prarthana G", "Thombare"], ["Liora", "Krasnopolski"], ["Andrea", "Mekel"], ["Lauren", "Stratman"], ["Carla", "Tur Mari"], ["Theiviya", "Selvarajoo"], ["Rana", "Sherif Ahmed"], ["Emilija", "Ceranic"], ["Rona", "Berisha"], ["Basak", "Eraydin"], ["Anastasia", "Frolova"], ["Nadia", "Ravita"], ["Kristina", "Beznakova"], ["Brooke Lindsey", "Hughes"], ["Rhiann", "Newborn"], ["Annika", "Sillanpaa"], ["Ana Paula", "Menezes Simoes"], ["Reka", "Muller"], ["Sonora", "Ijdo"], ["Olivia", "Boesing"], ["Barbara", "Rivera Rivera"], ["Olga", "Doroshina"], ["Emma", "Allen"], ["Konstantina", "Lalaouni"], ["Aldea", "Rinciari"], ["Carla", "Georgescu"], ["Anita", "Husaric"], ["Patricia", "Martins"], ["Andressa Cristina", "Souza"], ["Arushi", "Jain"], ["Maria", "Milanova"], ["Yaar Ester", "Shafir"], ["Tanaporn", "Thongsing"], ["Isabella", "Fernandez Diaz"], ["Yui", "Tomita"], ["Hui Ling", "Sun"], ["Chloe", "Paquet"], ["Montserrat", "Gonzalez"], ["Jessica", "Birowski"], ["Andrea", "Retolaza Andrade"], ["Taisiya", "Zakarlyuk"], ["Pauline", "Payet"], ["Sara", "Eccel"], ["Katya", "Malikova"], ["Giovana", "Patitucci"], ["Daiana", "Hail"], ["Elizabeth", "Means"], ["Nigina", "Abduraimova"], ["Gabriela", "Van De Graaf"], ["Daria", "Gajos"], ["Shannon", "Cox"], ["Lauren", "Chypyha"], ["Janine", "Koleta"], ["Ann Kathrin", "Wind"], ["Selma", "Husic"], ["Lobke", "Haepers"], ["Tina", "Mohorcic"], ["Camilla", "Scala"], ["Sofiya", "Kovalets"], ["Natsumi", "Kobayashi"], ["Tamitha", "Nguyen"], ["Michele", "Grimm"], ["Vimbai Patience", "Ugaro"], ["Chiara", "Pappacena"], ["Tanya Amala", "Burgula"], ["Nastja", "Kolar"], ["Abla", "Chadli"], ["Ana Helena", "De Moraes Pinto"], ["Yuka", "Hayashi"], ["Sara", "Sussarello"], ["Caroline", "Romeo"], ["Covadonga", "Muradas"], ["Maria Concepcion", "Bulilan"], ["Ratnika", "Batra"], ["Mingyang", "Liu"], ["Julia", "Valetova"], ["Abbie", "Myers"], ["Eloise", "Gournay"], ["Honoka", "Kawauchi"], ["Nicole", "Ballach"], ["Jazzamay", "Drew"], ["Tiffany", "William"], ["Luise", "Intert"], ["Natasha", "Micevski"], ["Alena", "Karpova"], ["Rachel", "Porter"], ["Erina", "Hayashi"], ["So Ra", "Lee"], ["Maria", "Palhoto"], ["Xue", "Zhang"], ["Alejandra", "Alvarez"], ["Brandy", "Mina"], ["Miriam Ruth", "Lane"], ["Antonia", "Berse"], ["Kimberley Ann", "Surin"], ["Natalija", "Kostic"], ["Chiara", "Trovi"], ["Ella", "Leivo"], ["Gussie", "Osullivan"], ["Consuelo", "Costantino"], ["Patricia Maria", "Tig"], ["Viktoria", "Laskutova"], ["Kirstie", "Pathumanun Hearn"], ["Andrea", "Duva"], ["Kathleen", "Derienzo"], ["Tjasa", "Srimpf"], ["Irem", "Ergun"], ["Eleonore", "Tchakarova"], ["Pamela", "Lopez Cervantes"], ["Ekaterina", "Donetskova"], ["Verginie", "Tchakarova"], ["Silvia", "Garcia Jimenez"], ["Loes", "Janssen"], ["Lea", "Winkler"], ["Beatriz", "Leon Hernandez"], ["Ashley", "Keir"], ["Sybille", "Gauvain"], ["Emira", "Spaho"], ["Anel", "Luus"], ["Emi", "Yamaguchi"], ["Alina", "Hoelzel"], ["Laura", "Pigossi"], ["Monica Putri Kusuma", "Wardhani"], ["Tamara", "Bizhukova"], ["Lina", "Gjorcheska"], ["Sveva", "Mazzari"], ["Noemi", "Giraudo"], ["Amrita", "Mukherjee"], ["Siyu", "Qin"], ["Beatrice Shirin", "Khosravi"], ["Seda", "Arantekin"], ["Dina", "Karina"], ["Natalie", "Novakova"], ["Hui Zhen", "Ruan"], ["Federica", "Benitez Zafra"], ["Thyra", "Taune"], ["Samantha", "Lee"], ["Ericka Roxana", "Rivero"], ["Storm", "Sanders"], ["Sofia", "Dmitrieva"], ["Alexandra", "Martinez"], ["Mariame", "Toure"], ["Vijayalakshmi", "Radhakrishnan"], ["Ximena", "Siles Luna"], ["Natalie", "Lozano"], ["Amanda", "Gilson"], ["Blair", "Shankle"], ["Stella", "Di Michele"], ["Alisa", "Kniazeva"], ["Gunjee", "Sukhbat"], ["Pauline", "Descat"], ["Jesika", "Maleckova"], ["Avni", "Jain"], ["Konstantina", "Adami"], ["Galina", "Bykova"], ["Sonya Sheeran", "Stover"], ["Eva", "Castiglioni"], ["Thais", "Castiglioni"], ["Marian", "Martin Garcia"], ["Maria", "Alvarez Aguaron"], ["Angelica", "Moratelli"], ["Preethi", "Ujjini"], ["Paloma", "Villalba"], ["Yuxuan", "Zhang"], ["Guadalupe", "Perez Rojas"], ["Svetlana", "Patakhonova"], ["Ursula", "Alvarado Camino"], ["Kelsey", "Laurente"], ["Areeporn", "Wanichayapanich"], ["Shkekyana", "Dubova"], ["Francesca", "Rescaldani"], ["Alena", "Vasilyeva"], ["Miki", "Ukai"], ["Jessica", "Ren"], ["Saray", "Sterenbach"], ["Natasha", "Prokhnevska"], ["Dael Alma", "Mckenna"], ["Zarah", "Razafimahatratra"], ["Verena Jane", "Scott"], ["Olivera", "Tadijin"], ["Solomiya", "Zinko"], ["Veronika", "Mazalova"], ["Catherine", "Parenteau St Antoine"], ["Samantha", "Czarniak Rego"], ["Joanna", "Jurca"], ["Ons", "Jabeur"], ["Manon", "Arcangioli"], ["Lauren", "Schmidt"], ["Giovanna", "Manifacio"], ["Ysaline", "Bonaventure"], ["Ayane", "Iwai"], ["Jaimy Gayle", "Van De Wal"], ["Victoria", "Pahlett"], ["Suzy", "Tan"], ["Margarita", "Gasparyan"], ["Anna", "Smolina"], ["Minori", "Himeno"], ["Alexandra", "Sigouin"], ["Elena", "Maltseva"], ["Sabina", "Sharipova"], ["Jennifer", "Slotow"], ["Melisa", "Martinov"], ["Hanna", "Victorsson"], ["Meriem", "Chaouachi"], ["Sophie", "Arnuti"], ["Diera", "Saidmukhamedova"], ["Suzuka", "Furukawa"], ["Paula", "Veza"], ["Sarie", "Swanepoel"], ["Kourtney J", "Keegan"], ["Macarena", "Asensos"], ["Aimee", "Tarun"], ["Lien", "Van Geel"], ["Mai", "El Kamash"], ["Madeline", "Lipp"], ["Silvia", "Albano"], ["Elina", "Svitolina"], ["Karyn", "Guttormsen"], ["Anna Karolina", "Schmiedlova"], ["Ki Ryang", "Kim"], ["Stefanie", "Kastner"], ["Barbora", "Trestikova"], ["Krista", "Hardebeck"], ["Mana", "Ayukawa"], ["Tamari", "Tskhakaia"], ["Gabrielle Olamide", "Idera"], ["Alana", "Parnaby"], ["Aareyalee Amrutsinh", "Chavan"], ["Misaki", "Mori"], ["Stefania", "Hristov"], ["Yana", "Erkeeva"], ["Stephanie", "Wagner"], ["Mariagiovanna", "Nanti"], ["Olga", "Saez Larra"], ["Genevieve", "Luksich"], ["Estefania Julieta", "Valli"], ["Polina", "Leykina"], ["Ornella Marcela", "Spinetta"], ["Ana Maria", "Crisan"], ["Marinel", "Rudas"], ["Camille", "Descamps"], ["Christine", "Kandler"], ["Helen", "De Cesare"], ["Ai Wen", "Zhu"], ["Gabriela", "Duca"], ["Daniella", "Daniel"], ["Likitha", "Shetty"], ["Diana", "Sumova"], ["Lisa", "Wegmair"], ["Haruka", "Kaji"], ["Sabina", "Kairanbayeva"], ["Sophie", "Watts"], ["Anneka", "Watts"], ["Clementina Eugenia", "Riobueno De Paola"], ["Marijana", "Novakovic"], ["Aina", "Hernandez Soler"], ["Laia", "Hernandez Soler"], ["Petra", "Kopic"], ["Momoka", "Hoshino"], ["Alexandra", "Clark"], ["Philippa", "Tepper"], ["Giovana", "Da Costa Rodrigues Alves"], ["Joana", "Eidukonyte"], ["Shizuka", "Hisamitsu"], ["Victoria", "Bosio"], ["Charlotte", "Swaans"], ["Xi Wei", "Cai"], ["Ivana", "Horvat"], ["Dominika", "Lackova"], ["Sabina Elena", "Preda"], ["Sabina", "Kurbanova"], ["Elpida", "Papanelopoulou"], ["Valeria", "Franco"], ["Eva", "Sung"], ["Molly", "Polak"], ["Louise", "Holtum"], ["Giulia", "Cerutti"], ["Nidhi", "Chilumula"], ["Alena", "Poletinova"], ["Raquel", "Mateus"], ["Bogna", "Nowicka"], ["Tereza", "Smitkova"], ["Karin", "Terami"], ["Yi Ping", "Chang"], ["Teresa", "Afuang Haro"], ["Sofiya", "Chekunova"], ["Luna", "Cagnoni"], ["Emilie", "Elsvad"], ["Anna Kate", "Anderson"], ["Nanami", "Masuoka"], ["Sophie", "Pismont"], ["Stella", "Crick"], ["Laura Margareta", "Luca"], ["Pei Chi", "Lee"], ["Justyna", "Pajak"], ["Tereza", "Jankovska"], ["Nune", "Khachatryan"], ["Imane Maelle", "Kocher"], ["Chiara", "Rinaldi"], ["Rebecca", "Andrade"], ["Anastasiya", "Halaburda"], ["Tanya", "Samodelok"], ["Audrey", "Jumel"], ["Hannah", "Sulz"], ["Mariana", "Ranzahuer Garcia Calderon"], ["Kelly", "Williford"], ["Laura", "Cardone"], ["Macie", "Elliott"], ["Tereza", "Martincova"], ["Deniz", "Khazaniuk"], ["Audrey", "Albie"], ["Andreea Ana", "Buiculescu"], ["Riko", "Sawayanagi"], ["Giovanna", "Lombardi"], ["Michaela", "Capannolo"], ["Olivia", "Nicholls"], ["Nastasia", "Boitier Legourd"], ["Francesca", "Palmigiano"], ["Stephanie", "Tedja Abdi"], ["Spirit", "Edley"], ["Tina", "Rupert"], ["Amy", "Zhu"], ["Salma", "Charif"], ["Mia Nicole", "Eklund"], ["Tamara", "Curovic"], ["Caroline B", "Dailey"], ["Fatem Zahra", "Erraji"], ["Puspa Ratih", "Tri Oktavira"], ["Julia", "Bochkareva"], ["Marcela", "Alves Pereira Valle"], ["Clemence", "Fayol"], ["Helga Margret", "Jeske"], ["Andrea", "Lazaro Garcia"], ["Katarzyna", "Witos"], ["Lynn", "Chi"], ["Luiza", "Sharipova"], ["Marine", "Partaud"], ["Anastasia", "Rudakova"], ["Georgia", "Craven"], ["Quinn", "Gleason"], ["Jana", "Mccord"], ["Maria Azul", "Cortiana"], ["Yana", "Sizikova"], ["Babilina", "Machaidze"], ["Giorgia", "Stridacchio"], ["Rachel May", "Pierson"], ["Darya", "Chernetsova"], ["Fatyha", "Berjane"], ["Minami", "Shuto"], ["Ekaterina", "Alexandrova"], ["Misato", "Negi"], ["Clothilde", "De Bernardi"], ["Vladyslava", "Zanosiyenko"], ["Sofia", "Benhalima"], ["Adela", "Jarosova"], ["Dorota", "Markowska"], ["Danka", "Kovinic"], ["Kelly", "Versteeg"], ["Marie", "Natroshvili"], ["Annika", "Hepp"], ["Santina", "Lange"], ["Emilija", "Kokanovic"], ["Lauren", "Harrington"], ["Adas", "Luiza Ferrari"], ["Miyu", "Kato"], ["Olga", "Babanova"], ["Sarah", "Candeloro"], ["Saroop", "Dhatt"], ["Masa", "Jovanovic"], ["Takhmina", "Burkhanova"], ["Mariajose", "Cardona"], ["Carolina", "Likhatcheva"], ["Azra", "Hadzic"], ["Mikayla", "Morkel Brink"], ["Gaelle", "Rey"], ["Cristina", "Bejarano Jimenez"], ["Mallaurie", "Noel"], ["Yukari", "Tsujimoto"], ["Borislava", "Botusharova"], ["Nao", "Hibino"], ["Si Ying Julienne", "Keong"], ["Daniella", "Arcila"], ["Amanda", "Cerda Miranda"], ["Veronica", "Lacerda"], ["Louise", "Lampla"], ["Kim", "Borg"], ["Sofia", "Araujo"], ["Jane", "Fennelly"], ["Xiaorong", "Dong"], ["Bernarda", "Pera"], ["Polina", "Lyuksheva"], ["Jacqueline", "Crawford"], ["Emily", "Burns"], ["Christina", "Oberger"], ["Lauren", "Burich"], ["Claudia", "Coppola"], ["Ipek", "Birol"], ["Alina", "Jane"], ["Susanne", "Celik"], ["Daniela", "Montoya Sierra"], ["Zerina", "Gozhdari"], ["Alena", "Tarasova"], ["Montserrat", "Alonso"], ["Annika", "Schneider"], ["Nina", "Khrisanova"], ["Rano", "Nizamova"], ["Nicoleta", "Dan"], ["Nana", "Nemoto"], ["Jillian", "Rooney"], ["Khanh Phi", "Huynh"], ["Ana", "Batiri"], ["Olivia", "Messineo"], ["Mariella", "Calderon"], ["Brittany", "Brewster"], ["Chiara", "Rebecchi"], ["Patcharin", "Cheapchandej"], ["Viktoryia", "Mun"], ["Hitomi", "Hasebe"], ["Iris Julia Antje", "Verweij"], ["Victoria", "Bensimon"], ["Viviana", "Tedino Morandi"], ["Beatrice", "Kight"], ["Alexandra", "Goncharova"], ["Emma", "Devine"], ["Maria Andrea", "Cardenas"], ["Rosalie", "Van Der Hoek"], ["Ting Ya", "Wang"], ["Elodie", "Busson"], ["Preeti", "Gokhale"], ["Ayaka", "Santo"], ["Zoe Adeline", "Katz"], ["Rowan", "Arafat"], ["Maylis", "Lafaysse"], ["Sarah", "Savedra"], ["Yana", "Sluzhiteleva"], ["Morgan", "Barnhill"], ["Sheila", "Jacobo"], ["Maria Julia", "Bernal Penteado De Lima Mendes"], ["Victoria", "Zukowski"], ["Eva", "Paalma"], ["Paula", "Insaurralde"], ["Michela", "Verpelli"], ["Breaunna", "Addison"], ["Neda", "Koprcina"], ["Sandra", "Bendlova"], ["Anna Signe", "Rasmussen"], ["Pei Chuan", "Kao"], ["Manon Cristina", "Peri"], ["Maria", "Kajikawa"], ["Erin", "Faulkner"], ["Anna", "Tyulpa"], ["Elke", "Lemmens"], ["Anna", "Woosley"], ["Madison", "Crawford"], ["Yukiho", "Yasuda"], ["Natalia L S", "Abdalla"], ["Lee", "Or"], ["Nicole", "Robinson"], ["Fatmanur", "Atilgan"], ["Gulsah", "Cetin"], ["Madina", "Khatamova"], ["Yuanyi", "Yu"], ["Ana", "Stojacic"], ["Saori", "Enmoto"], ["Inas", "Ziki"], ["Marijana", "Vlahinic"], ["Dhanielly", "Quevedo"], ["Gulnaz", "Dokey"], ["Jessica", "Perez"], ["Maree Teiwa", "Casey"], ["Elena", "Pavolucci"], ["Carol Yubitza", "Arnez  Mercado"], ["Michaela", "Marikova"], ["Zeineb", "Ben Hamida"], ["Liniques", "Theron"], ["Evy", "Van Genechten"], ["Saska", "Gavrilovska"], ["Danielle", "Konotoptseva"], ["Louise", "Kwong"], ["Angeles", "De Los Rios"], ["Lena", "Lutzeier"], ["Adriana", "Gergelyova"], ["Yulia", "Putintseva"], ["Laura", "Mueller"], ["Si Qi", "Liu"], ["Hedda", "Odegaard"], ["Greta", "Di Majo"], ["Alanna", "Wolff"], ["Mariana", "Drazic"], ["Violeta", "Jankovic"], ["Miriana", "Tona"], ["Arthi", "M"], ["Ivanka", "Mocic"], ["Nora", "Niedmers"], ["Milena", "Toseva"], ["Sitara", "Prabhu"], ["Nicole", "Cianci"], ["Klaartje", "Liebens"], ["Nicole", "Bonnaffoux"], ["Ao", "Gai"], ["Ana", "Ruiz"], ["Apichaya", "Runglerdkriangkrai"], ["Nastassia", "Rubel"], ["Nadia", "Echeverria Alam"], ["Samira", "Radjaa"], ["Marina", "Marti Hernanz"], ["Fang Ying", "Xun"], ["Khee Yen", "Wee"], ["Laksmi", "Nuraningsih"], ["Nikita", "Deshmukh"], ["Savannah", "Wood"], ["Lara", "Afonso Garcia"], ["Shivani", "Manchanda"], ["Jerricka", "Boone"], ["Sai Samhitha", "Chamarthi"], ["Taylor L", "Davidson"], ["Kiah", "Generette"], ["Miho", "Kowase"], ["Zuzanna", "Maciejewska"], ["Marnelle", "Boshoff"], ["Grace", "Orourke"], ["Silvia", "Fuentes Perez"], ["Katerina", "Baka"], ["Giorgia", "Marchetti"], ["Anushka", "Bhargava"], ["Kett", "Sadi"], ["Guadalupe", "Delgado"], ["Sonja", "Becarevic"], ["Grace Maleka", "Mpassy Nzoumba"], ["Michelle", "Erasmus"], ["Isadora", "Vieira"], ["Belinda", "Woolcock"], ["Spencer", "Liang"], ["Wing Man", "Lin"], ["Salma", "Cabrera"], ["Libi", "Mesh"], ["Carla", "Bruzzesi Avella"], ["Nuria", "Ormeno Ruiz"], ["Kristina", "Ostojic"], ["Anna", "Shkudun"], ["Julaluck", "Sae Eung"], ["Majlena", "Pedersen"], ["Maria", "Limanskaya"], ["Tamara", "Vrhovac"], ["Shanna", "Krimatschow"], ["Bhuvana", "Kalva"], ["Yuliya", "Alexsandrova"], ["Yulia", "Shupenia"], ["Nabila", "Farah"], ["Cassie", "Pough"], ["Diana", "Shevchenko"], ["Peeraya", "Charoensirisutthikul"], ["Yani", "Genesse"], ["Caroline", "Cordat Auclair"], ["Hanna", "Karczewska"], ["Laura", "Holterbosch"], ["Cecilie Lundgaard", "Melsted"], ["Alicia Andrea", "Rodriguez Castillo"], ["Mariami", "Gogelashvili"], ["Arianna", "Fardanesh"], ["Gornganok", "Tiraganok"], ["Hee Jin", "Oh"], ["Sydney", "Campbell"], ["Alina", "Soltanici"], ["Sol", "Ferrero"], ["Franziska", "Lautenschlager"], ["Ebony", "Panoho"], ["Sherry", "Li"], ["Eduarda Nardi Dos", "Santos"], ["Ksenia", "Gaydarzhi"], ["Carlotta", "Svaluto"], ["Ivana", "Andric"], ["Ji Hee", "Choi"], ["Gabriela", "Pantuckova"], ["Kim Jana", "Hausler"], ["Sinead", "Lohan"], ["Zhaoxuan", "Yang"], ["Claudia", "Gaspar"], ["Chu Chen", "Chuen"], ["Chiara", "Quattrone"], ["Jessica", "Cortes"], ["Ye Rin", "Lee"], ["Disha", "Dang"], ["Marta", "Morga Alonso"], ["Alpha", "Ambaye"], ["Saumya", "Vig"], ["Weronika", "Halicka"], ["Ana Laura", "Gutierrez"], ["Zeynep", "Nalbantoglu"], ["Francesca Dorothea", "Ciutescu"], ["Stefani", "Stojic"], ["Alyssa Grace", "Smith"], ["Alina", "Robok"], ["Yuan", "Xin"], ["Carina", "Witthoeft"], ["Katy", "Dunne"], ["Daria", "Glushich"], ["Oksana", "Koshman"], ["Anastasiya", "Saitova"], ["Madison", "Keys"], ["Natalie", "Faeh"], ["Ana Marija", "Banic"], ["Samantha", "Crawford"], ["Ana Beatriz", "Balderas"], ["Dominique", "Covington"], ["Adrianna", "Zorawska"], ["Magnolia", "Galvez"], ["Mayara", "Galvez"], ["Giulia", "Maiorana"], ["Victoria", "Jorjoliani"], ["Parminder", "Kaur"], ["Lana", "Rostiashvili"], ["Alice", "Lamaro"], ["Pattaraporn", "Salirathavibhaga"], ["Rotem", "Shveber"], ["Begum", "Dilek"], ["Zarina", "Yunusalieva"], ["Skye", "Hopper"], ["Idil", "Ozdamar"], ["Sofia", "Henning"], ["Maura", "Aveta"], ["Iva", "Mekovec"], ["Andrea", "Vosecka"], ["So Dam", "Park"], ["Fabiana", "Pitisci"], ["Alexandra", "Morozova"], ["Ima", "Nindi"], ["Viktoriya", "Tomova"], ["Lauren Joanna", "Lang"], ["Femke", "Van Diemen"], ["Coline", "Chauvet"], ["Natnicha", "Sirijariyaporn"], ["Michelle", "Werbrouck"], ["Laura", "Gulbe"], ["Ann Christin", "Nilsson"], ["Svetlana", "Zdorova"], ["Paula Estefania", "Diaz Cabrera"], ["Milena", "Vitez"], ["Alejandra Maria", "Marma Gutierrez"], ["Jialu", "Huang"], ["Katharina", "Hering"], ["Sonja", "Liasovska"], ["Jan", "Abaza"], ["Adriana", "Lavoretti"], ["Erika", "Vogelsang"], ["Mirea", "Signorini"], ["Siyu", "Chen"], ["Tess", "Sugnaux"], ["Annie", "Donaldson"], ["Zoel", "Kastelic"], ["Carmen", "Smolka"], ["Anna Maria", "Levers"], ["Xin", "Yang"], ["Claudia", "Sanchez Gonzalez"], ["Johanna", "Ranta Aho"], ["Camille", "Giacalone"], ["Nagi", "Hanatani"], ["Xu Liu", "Sun"], ["Saravinder", "Pannu"], ["Jamie", "Loeb"], ["Rongrong", "Leenabanchong"], ["Daniela", "Ciobanu"], ["Yulia", "Zakharova"], ["Farah", "Abdelaziz"], ["Anjali", "Thakur"], ["Deborah", "Kerfs"], ["Amanda", "Spindola Veiga"], ["Zineb", "Rajib"], ["Marlou", "Kluiving"], ["Su Jeong", "Jang"], ["Nahathai", "Khuntaket"], ["Sanaa", "Benkaddour"], ["Klara", "Skopac"], ["Arianna", "Tricarico"], ["Anna", "Arustamyan"], ["Marie", "Benoit"], ["Amelia", "Stuart"], ["Angela", "Sokovnikova"], ["Megha", "Sehrawat"], ["Liza", "Fieldsend"], ["Morgan", "Chumney"], ["Sanae", "Guenfoudi"], ["Margarita", "Kotok"], ["Rikako", "Suga"], ["Irina Maria", "Bara"], ["Maria", "Martin Lozano"], ["Lisa", "Schlatter"], ["Shehnaz", "Singh"], ["Caroline", "Kallberg"], ["Justine", "De Sutter"], ["Mayya", "Katsitadze"], ["Irina Elena", "Preotescu"], ["Anna", "Veleva"], ["Aggeliki", "Kokkota"], ["Andreea", "Mihai"], ["Alina", "Abdurakhimova"], ["Andrada", "Hai"], ["Aliya", "Tarpischeva"], ["Lucia", "Zelenka"], ["Marie", "Klocker"], ["Natalia", "Janowicz"], ["Tereza", "Susen"], ["Kanika", "Vaidya"], ["Vanja", "Babunski"], ["Tatiana", "Guskova"], ["Daniela", "Schippers"], ["Marina", "Hruba"], ["Olga", "Ianchuk"], ["Esther", "Zelaya"], ["Midian", "Tulio"], ["Elpida", "Malamou"], ["Julija", "Jauk"], ["Amy", "Sneath"], ["Alison Brigette", "Sanders"], ["Tanvee", "Bose"], ["Vivienne", "Kulicke"], ["Jin Li", "Tang"], ["Valeria", "Bhunu"], ["Chih Hsien", "Chu"], ["Teodora", "Stinga"], ["Alexandra", "Rey"], ["Catrine", "Landstrom"], ["Taryn", "Swanepoel"], ["Iga", "Odrzywolek"], ["Claudia", "Herrero Garcia Honorato"], ["Paula Andrea", "Puentes Jimenez"], ["Barbora", "Stefkova"], ["Christina", "Lao"], ["Shakhlo", "Saidova"], ["Brittany", "Collens"], ["Darya", "Lebesheva"], ["Sofia", "Sabljarevic"], ["Mia", "King"], ["Georgina", "Segarra Ferrer"], ["Michelle Marie", "Valdez"], ["Tyra", "Kotuwattegedera"], ["Alexandra", "Osborne"], ["Anastasiia", "Zviahintseva"], ["Soyeon", "Park"], ["Ana M", "Sanchez"], ["Nancy", "Karaky"], ["Grace Lola", "Lymer Sullivan"], ["Erin", "Routliffe"], ["Gema", "Mendoza"], ["Alina", "Ageichik"], ["Ines", "Fontanarosa"], ["Wendy Qi Wen", "Zhang"], ["Petra", "Uberalova"], ["Brigit", "Folland"], ["Jennifer", "Brady"], ["Zhamilia", "Duisheeva"], ["Donika", "Bashota"], ["Nora Luciana", "David"], ["Rocio Daniela", "Merlo"], ["Miriam", "Monsutti"], ["Valeria", "Prosperi"], ["Ines", "Nicault"], ["Lucia", "Ioli"], ["Maegan", "Manasse"], ["Miki", "Kobayashi"], ["Mengjuan", "Yi"], ["Denise", "Starr"], ["Ana", "Baran"], ["Amiru", "Shimoguchi"], ["Alejandra", "Cisneros"], ["Evangeline", "Repic"], ["Gabriela", "Srodowski"], ["Maaya", "Uno"], ["Madrie", "Le Roux"], ["Madina", "Hatamova"], ["Lisa Marie", "Maetschke"], ["Kathryn", "Hughes"], ["Monica", "Robinson"], ["Joanna Nena", "Savva"], ["Alba", "Escalona Perny"], ["Diana", "Bogoliy"], ["Akiho", "Kakuya"], ["Victoria", "Rodriguez"], ["Kassandra", "Dunser"], ["Tarrannum", "Handa"], ["Anastasia", "Pogorelskaya"], ["Sarah Inga", "Senger"], ["Nicolin", "Luecke"], ["Intissar", "Rassif"], ["Efriliya", "Herlina"], ["Amanda", "Carrillo Galera"], ["Nihel", "Adjali"], ["Sarah", "De Clercq"], ["Natalia", "Vajdova"], ["Valeria", "Salazar"], ["Jade", "Suvrijn"], ["Tina", "Jiang"], ["Valeria", "Danilova"], ["Luisa", "Rosa"], ["Alisa", "Tymofeyeva"], ["Sofia", "Santa Maria"], ["Hanna", "Sohn"], ["Brooke", "Rischbieth"], ["Minami", "Akiyama"], ["Solene", "Guyomard"], ["Aldila", "Sutjiadi"], ["Nicole", "Aragones Miro Quesada"], ["Xixi", "Feng"], ["Natella", "Nabieva"], ["Nataliya", "Naumova"], ["Valeria", "Koussenkova"], ["Rana", "Sabry"], ["Margarita", "Febrer Marza"], ["Evgeniya", "Svintsova"], ["Joy", "Yaich"], ["Izabella", "Ismailova"], ["Tsveta Konstantinova", "Dimitrova"], ["Alory Regina Elorriaga", "Pereira"], ["Fatma", "Al Janahi"], ["Andrea", "Ivanovic"], ["Lea", "Godallier"], ["Tena", "Lukas"], ["Cassidy", "Spearman"], ["Sachia", "Vickery"], ["Jieke", "Stroobant"], ["Alzbeta", "Veverkova"], ["Jenna", "Davidson"], ["Jodi", "Davidson"], ["Irina", "Khromacheva"], ["Lolade", "Ogungbesan"], ["Tamara", "Korpatsch"], ["Anabel", "Ossombi"], ["Ingrid", "Navarro Rodriguez"], ["Helena", "Phillips"], ["Corina", "Mader"], ["Yuliya", "Lysa"], ["Voni", "Darlina"], ["Stefani", "Andreeva"], ["Natalia", "Zhuravleva"], ["Vishesh", "Vkc"], ["Marine", "Beugre Guyot"], ["Maria", "Cespedes"], ["Laura", "Gibanel Velasco"], ["Michela", "Isella"], ["Hayley", "Carter"], ["Lauren", "Marker"], ["Mihoki", "Miyahara"], ["Daniela", "Vita"], ["Lou", "Brouleau"], ["Anna", "Segarra Rius"], ["Selma", "Saran"], ["Beatrice", "Caruso"], ["Tereza", "Hejlova"], ["Olaya", "Garrido Rivas"], ["Daniela", "Raygadas Dominguez"], ["Paula", "Pastor Mir"], ["Maria Paula", "Coyos"], ["Vanessa", "Dobson"], ["Nikola", "Schweinerova"], ["Nina", "Asanin"], ["Lexi", "Borr"], ["Barbara", "Capellari Abou Haikal"], ["Mouna", "Jebri"], ["Ana Carolina", "Sigaki"], ["Nicole", "Fossa Huergo"], ["Jiahui", "Chen"], ["Samantha", "Asch"], ["Camilla", "Rosatello"], ["Maurien", "Rikkert"], ["Sophie", "Blom"], ["Amanda", "Castillo"], ["Olivera", "Veskovac"], ["Victoria", "Vorontsova"], ["Sabina", "Jeresic"], ["Jessica", "Raith"], ["Isil", "Ileri"], ["Razina", "Shaibu"], ["Andrea", "Prisco"], ["Marlies", "Szupper"], ["Mariami", "Kurasbediani"], ["Sansitha", "Nandakumar"], ["Carolina", "Cuevas Bucio"], ["Angela", "Assal"], ["Caterina", "Brunamonti"], ["Thais", "Nascimento"], ["Marija", "Bogicevic"], ["Alexis", "Thoma"], ["Nataliya", "Kotova"], ["Clara", "Hoffman Loza"], ["Beatriz", "Machado Santos"], ["Natasha", "Piludu"], ["Laura", "Gamarra"], ["Valeriya", "Strakhova"], ["Eliza", "Long"], ["Aneta", "Dvorakova"], ["Mingxiu", "Du"], ["Kristin Vivien", "Rehse"], ["Marine", "Fontaine"], ["Nehel", "Sahni"], ["Carolina", "Costamagna"], ["Emily", "Fanning"], ["Laura", "Ucros"], ["Kamilla", "Galieva"], ["Maria", "Kefala"], ["Jennifer", "Zerbone"], ["Volha", "Barshcheuskaya"], ["Barbare", "Eristavi"], ["Daria", "Sharapova"], ["Eugenie", "Chapelle"], ["Marta", "Sramkova"], ["Rozel Asuncion", "Hernandez"], ["Skylar", "Holloway"], ["Antonella", "Altamirano"], ["Kamila", "Kerimbayeva"], ["Aldana", "Ciccarelli"], ["June", "Lee"], ["Jessica", "Simpson"], ["Nadja", "Stojcic"], ["Anna Maria", "Battista"], ["Tayla", "Stenta"], ["Carol", "Zhao"], ["Mi Jeong", "Kwon"], ["Anna Maria", "Heil"], ["Berta", "Bonardi"], ["Ayaka", "Okuno"], ["Giuliana", "Verbauwen"], ["Luisa Marie", "Huber"], ["Yana", "Parshina"], ["Ella", "Taylor"], ["Yuko", "Kimura"], ["Yennifer", "Delgado"], ["Leslie", "Espinoza"], ["Perrine", "Boisset"], ["Fabienne", "Vincon"], ["Vilma Y", "Gomez"], ["Ana", "Gonzalez Andrade"], ["Matea", "Zemunik"], ["Giovanna", "Fioretti"], ["Susanna", "Ciccone"], ["Adrijana", "Lekaj"], ["Alexandra", "Kiick"], ["Camila", "Tobar"], ["Emma", "Janssen"], ["Melissa", "Ullrich"], ["Allie", "Kiick"], ["Rasheeda", "Mcadoo"], ["Salma", "Chouhib"], ["Kristina", "Chasovskikh"], ["Yukiko", "Midorikawa"], ["Aleksandra", "Reljic"], ["Natalia", "Perepadenko"], ["Andrea", "Martinovska"], ["Xiao Xuan", "Guo"], ["Karin", "Kennel"], ["Maria Camila", "Trujillo Hoyos"], ["Gisele", "Dufour"], ["Yelena", "Nemchen"], ["Karina", "Rovira"], ["Jelena", "Stefanovic"], ["Camilla", "Diez"], ["Despoina", "Vogasari"], ["Maayan", "Sela"], ["Katerina", "Boiko"], ["Ilinca Teodora", "Bercaru"], ["Millie", "Radovic"], ["Megan", "Mccray"], ["Spurti", "Shivalingaiah"], ["Anna Katalina", "Alzate Esmurzaeva"], ["Claudia", "Marini"], ["Anastasia", "Tokareva"], ["Minori", "Yonehara"], ["Lu", "Yu"], ["Teodora Adina", "Ardeleanu"], ["Anabel", "Carbo Estruch"], ["Swetha", "Sree Hari"], ["Yasmine", "Rashad"], ["Natalia", "Kattah"], ["Alix", "Theodossiou"], ["Andrea", "Ternera"], ["Judit", "Vives Joan"], ["Ya Hsuan", "Lee"], ["Natsumi", "Chimura"], ["Danielle", "Wagland"], ["Ana Gabriela", "Gerbasi"], ["Eva", "Rutarova"], ["Georgiana", "Ruhrig"], ["Victoria", "Todorova"], ["Alice", "Bacquie"], ["Anna", "Zhylchuk"], ["Samantha", "Palacio"], ["Alexis", "Casati"], ["Senaida", "Kambel"], ["Carlee", "Rizzolo"], ["Maria", "Sakkari"], ["Carmen", "Blanco"], ["Adriana", "Silva"], ["Ivania", "Martinich"], ["Alena", "Mayevskaya"], ["Farah", "Mouri"], ["Natasa", "Brnovic"], ["Dasha", "Sergeeva"], ["Sujin", "Yoon"], ["Carmen", "Schauer"], ["Hanemas", "Pangestu"], ["Diana", "Ryashko"], ["Julyette Maria Josephine", "Steur"], ["Beatriz", "Abreu"], ["Ann", "Okoro"], ["Lenka", "Kuncikova"], ["Claudia", "Chavarria Perez"], ["Kana", "Daniel"], ["Angelina", "Salihbaeva"], ["Anastasiya", "Zablotskaya"], ["Ines", "Canepa"], ["Di Andrea", "Galloway"], ["Alena", "Panfilova"], ["Taylor", "Ng"], ["Sofia", "Rojas"], ["Agustina", "Serio"], ["Jana", "Haid"], ["Victoria", "Kan"], ["Tamar", "Shahaf"], ["Saule", "Valantiejute"], ["Chanikarn", "Silakul"], ["Luca", "Fabian"], ["Rebecca", "Peterson"], ["Lynn", "Kiro"], ["Ana Sofia", "Cordero"], ["Nour", "Tohamy"], ["Sarah Beth", "Askew"], ["Cristiana", "Ferrando"], ["Kristina", "Lagoda"], ["Miriam", "Rosell Canudas"], ["Andreea Maria", "Trocan"], ["Alexandra", "Zachem"], ["Claudia", "Cirillo"], ["Gozde", "Adar"], ["Petra", "Rohanova"], ["Leolia", "Jeanjean"], ["Luisa Maria", "Varon Diaz"], ["Tatiana", "Feliciano Granda"], ["Jelena", "Popovic"], ["Gabriela", "Valdes Garcia"], ["Viktoriya", "Klimushkina"], ["Zamira", "Jadue"], ["Aya", "Tanaka"], ["Mara Sofia", "Martinez Santori"], ["Mary", "Closs"], ["Yulia", "Chubarova"], ["Ka Man Carina", "Ma"], ["Yasmine", "Xantos"], ["Chalena", "Scholl"], ["Minami", "Uesugi"], ["Tiffany", "Hoberth"], ["Emilia", "Granstrom"], ["Varunya", "Chandrashekar"], ["Carolina", "Barsante"], ["Yuki Kristina", "Chiang"], ["Alice", "Zapolla"], ["Anna", "Danilina"], ["Isabella", "Kimberly"], ["Fernanda", "Rodriguez Navarro"], ["Vita", "Taher"], ["Amy", "Olivier"], ["Shangqing", "Yang"], ["Gabriela", "Talaba"], ["Katrina", "Andrzejevska"], ["Malin", "Cubukcu"], ["Nicolette", "Tran"], ["Se Hyun", "Kim"], ["Cecilia", "Barrionuevo"], ["Charlene", "Mueller"], ["Nishtha", "Dudeja"], ["Tereza", "Janatova"], ["Anastasia", "Gavryukova"], ["Anastasia", "Reimchen"], ["Madeline", "Bosnjak"], ["Fiona", "Codino"], ["Astrid", "Leclere"], ["Ximena", "Mino"], ["Yumeka", "Maeda"], ["Audrey", "Bois"], ["Ilona", "Golynker"], ["Sarah", "Finck"], ["Lea", "Tholey"], ["Bruna", "Pacheco Chaves"], ["Kalita", "Saraiva"], ["Karla", "Popovic"], ["Rika", "Yamamoto"], ["Szabina", "Szlavikovics"], ["Aissa", "Muamba"], ["Eszter", "Palinkas"], ["Yui", "Kiyohara"], ["Frederikke", "Karst"], ["Selina", "Jordi"], ["Emilia", "Tenizbaeva"], ["Wu", "Mei Qi"], ["Nini", "Guensler"], ["Sydney", "Rider"], ["Sanya", "Madan"], ["Astra", "Sharma"], ["Larissa", "Ravanini De Souza"], ["Jasmina", "Stojiljkovic"], ["Sofia", "Compostizo De Andres"], ["Sonja", "Larsen"], ["Alice Alexandra", "Banica"], ["Paula", "Sanchez"], ["Madara", "Straume"], ["Shannon", "Hudson"], ["Mieri", "Aoki"], ["Kikka", "Adachi"], ["Marian Jade", "Capadocia"], ["Katherine", "Ip"], ["Arianna", "Paules Aldrey"], ["Laura", "Enea"], ["Marina", "Albert"], ["Elke", "Tiel"], ["Dominika", "Paterova"], ["Elena", "Sava"], ["Valentina", "Lia"], ["Margarita", "Khasanova"], ["Khwanthiti", "Banthao"], ["Leonela", "Gonzalez"], ["Maria Constanza De Las Mercedes", "Vega"], ["Maria", "Avgerinos"], ["Noelia Alejandra", "Acuna"], ["Patricia", "Lancranjan"], ["Olga", "Baikoulova"], ["Mariana", "Gould"], ["Carmen", "Pestano Hernandez"], ["Ji Hey", "Lee"], ["Alice", "Wenner"], ["Rocio", "Macri"], ["Ambika", "Pande"], ["Nikki", "Luttikhuis"], ["Denisa", "Kulhankova"], ["Makoto", "Nishida"], ["Camila", "Fuentes"], ["Alice", "Matteucci"], ["Zhi Yan", "Ye"], ["Dominique", "Karregat"], ["Riko", "Tachibana"], ["Pippa", "Horn"], ["Diana", "Vlad"], ["Keiko", "Fukui"], ["Anna", "Davydova"], ["Abir", "El Fahimi"], ["Sri Vaishnavi", "Peddi Reddy"], ["Laura", "Pertusa Garcia"], ["Feruzabonu", "Saidova"], ["Helena", "Korompis"], ["Franceske", "Stroh"], ["Jana", "Nabel"], ["Hikari", "Yamamoto"], ["Luisa", "Fernandez"], ["Diana", "Tokar"], ["Ines Miren", "De Pablo"], ["Kyoka", "Okamura"], ["Liberty", "Crawford"], ["Josephine", "Jedrychowski"], ["Ayano", "Sonoda"], ["Laura", "Sanchez"], ["Melissa", "Laing"], ["Charlotte", "Klasen"], ["Ellen", "Perez"], ["Brooke", "Broda"], ["Nina", "Stadler"], ["Ayaka", "Kanai"], ["Aniek", "Van Rossum"], ["Eetee", "Maheta"], ["Brianna", "Lashway"], ["Laura", "Torres"], ["Stuti", "Singh Tomar"], ["Tamari", "Chalaganidze"], ["Rafaela Arsenia", "Alipranti"], ["Violetta", "Shatalova"], ["Julia", "Albuquerque"], ["Ana", "Glumac"], ["Amina", "Mukhametshina"], ["Sang Hee", "Park"], ["Lani", "Tuemmers"], ["Naomi", "Totka"], ["Andjela", "Stojkovic"], ["Na Young", "Lee"], ["Elena", "Cortimiglia"], ["Giovanna", "Baccarini"], ["Anastasiya", "Shestakova"], ["Alexandra", "Grinchishina"], ["Ivanka", "Karamalak"], ["Ana Gabriela", "Meis"], ["Yuliya", "Brotgal"], ["Kathrin", "Spendier"], ["Cristina", "Adamescu"], ["Danielle", "Vernier"], ["Zhi Huan Eva", "Chen"], ["Maika Jae", "Tanpoco"], ["Vladica", "Babic"], ["Kim", "Kermet"], ["Polina", "Bezsmertnaya"], ["Bridget", "Liddell"], ["Sofia", "Salimova"], ["Luize Liva", "Strike"], ["Audrey", "Marquard"], ["Burcu", "Tari"], ["Angela", "Tejedor Espinosa"], ["Joana", "Vale Costa"], ["Veronika", "Stotyka"], ["Lisanna", "Pihlak"], ["Gabriella", "De Santis"], ["Mariam", "Kiknadze"], ["Janina", "Geiss"], ["Sultan", "Gonen"], ["Hannah", "King"], ["Wallis", "Vitis"], ["Chiara", "Icardi"], ["Chompoothip", "Jandakate"], ["Cassandre", "Thebault"], ["Elena", "Cerezo Codina"], ["Deborah", "Cruciani"], ["Masa", "Marc"], ["Josie", "Kuhlman"], ["Nam Yeon", "Jun"], ["Brooke", "Harding"], ["Snezhana", "Nekrasova"], ["Elizaveta", "Kardaseva"], ["Marijana", "Acimovic"], ["Gabriela", "Bueno"], ["Marika", "Akkerman"], ["Teodora", "Djordjevic"], ["Florencia", "Dezotti"], ["Kimberley", "Zimmermann"], ["Marie", "Decamps"], ["Ivona", "Stankovic"], ["Elaine", "Van Zyl"], ["Peggy", "Porter"], ["Polina", "Merenkova"], ["Yuriko", "Miyazaki"], ["Giulia", "Perrone"], ["Brenda", "Rique"], ["Carolina", "Sa"], ["Emily", "Dunne"], ["Juli", "Raventos"], ["Liudmila", "Gazzaeva"], ["Surya", "Tejaswini"], ["Catherine", "Shulman"], ["Eva", "Zagorac"], ["Marija", "Radulovic"], ["Gabriele", "Bertasiute"], ["Yesmine", "Kharrat"], ["Rima", "Asatrian"], ["Christiana", "Brigante"], ["Elise", "Mertens"], ["Leciane", "Comparin Da Silva"], ["Juana", "Zambrano"], ["Aandrita", "Deb"], ["Sofia", "Blanco"], ["Daria", "Sapogova"], ["Mizuno", "Kijima"], ["Abbie", "Pahz"], ["Kristin", "Wiley"], ["Alyza", "Benotto"], ["Julia", "Wagner"], ["Ludivine", "Burguiere"], ["Ioanna", "Markesini"], ["Maria Vitoria", "Beirao"], ["Nikol", "Yordanova"], ["Dajana", "Cvjetkovic"], ["Nadja", "Dzafic"], ["Bolzan", "Ana Paula"], ["Elena", "Rief"], ["Ferny", "Angeles Paz"], ["Laura", "Correia"], ["Victoria", "Duval"], ["Aymet", "Uzcategui"], ["Avika", "Sagwal"], ["Agne", "Cepelyte"], ["Tatsiana", "Sakovich"], ["Breana", "Stampfli"], ["Kristina", "Mathis"], ["Shellita", "Haughton"], ["Sharon", "Biondi"], ["Camila", "Blanes"], ["Paula", "Rodriguez"], ["Ethel", "Kouniavsky"], ["Jelena", "Dzinic"], ["Ege", "Kurtoglu"], ["Selenay", "Heper"], ["Gabriella", "Castaneda"], ["Teodora", "Radosavljevic"], ["Ani", "Gogvadze"], ["Natalia", "Siedliska"], ["Anastasia", "Koveshnikova"], ["Eden", "Konorti"], ["Vera", "Bessonova"], ["Laura Sarah", "Ambrozic"], ["Fangzhou", "Liu"], ["Kristina", "Savchenkova"], ["Adi", "Milstein"], ["Anastasia", "Kuprina"], ["Hila", "Mizrahi"], ["Maria", "Zubkova"], ["Hannah", "Nagel"], ["Katrin", "Tebaldini"], ["Assem", "Myssyr"], ["Miriam", "Civera Lima"], ["Barbora", "Krejcikova"], ["Cristina", "Ene"], ["Anita", "Safronenka"], ["Ee Yi Olivia", "Koh"], ["Nicoleta Catalina", "Dascalu"], ["Nerma", "Caluk"], ["Samantha", "Harris"], ["Celina", "Bester"], ["Chiara", "Carboni"], ["Misaki", "Shuto"], ["Camila", "Valencia"], ["Shreya", "Pasricha"], ["Barbara", "Rico Godino"], ["Sofia", "Macias Mendoza"], ["Vania", "Ivanova"], ["Zongzhen", "Li"], ["Anett", "Kontaveit"], ["Yukun", "Zhang"], ["Nouha", "Ziki"], ["Maria Belen", "Da Luz"], ["Marine", "Meraut"], ["Nicol", "Padilla"], ["Macarena", "Olivares Lopez"], ["Jessie Lynn", "Paul"], ["Blaga", "Delic"], ["Alessandra", "Polese"], ["Maria", "Ouazzani"], ["Alberta", "Detogni"], ["Maftuna", "Yunusova"], ["Elif", "Turgul"], ["Yan", "Wang"], ["Paulina", "Wulcan"], ["Anna", "Bini"], ["Idhun", "Safaati"], ["Elba", "Kasum"], ["Yosr", "Elmi"], ["Caroline", "Brinson"], ["Mina", "Markovic"], ["Federica", "Prati"], ["Yuqi", "Sheng"], ["Jasmine", "Paolini"], ["Roksana", "Lukasiak"], ["Dinara", "Imazhanova"], ["Marija", "Mastilovic"], ["Sanya", "Sinha"], ["Oana Carmen", "Trus"], ["Simone", "Pratt"], ["Eleanor", "Dean"], ["Monet", "Willis"], ["Sara", "Marjanovic"], ["Trinidad Maria", "Merdeni"], ["Ioana Andreea", "Sascau"], ["Alzbeta", "Houbova"], ["Francisca", "Hernandez"], ["Helene", "Scholsen"], ["Ailen", "Crespo Azconzabal"], ["Amangul", "Mollayeva"], ["Sara", "Mitrovic"], ["Sara", "Palcic"], ["Xenia", "Oberson"], ["Ivana", "Klac"], ["Maria Paulina", "Perez Garcia"], ["Paula Andrea", "Perez Garcia"], ["Nouha", "Bazir"], ["Anke", "Poncelet"], ["Shanon", "Bronzi"], ["Kayla Symone", "Price"], ["Anastassiya", "Bessarab"], ["Suellen", "Abel"], ["Ming Ming Joy", "Chia"], ["Gabrielle", "Smith"], ["Yu Mi", "Hwang"], ["Gulben", "Guldas"], ["Aleksandra", "Zenovka"], ["Rebecca", "Smaller"], ["Giulia", "Leone"], ["Katharina", "Feldmer"], ["Mineri", "Sukegawa"], ["Victoria", "Ocheva"], ["Fanny", "Caramaro"], ["Kamilla", "Farhad"], ["Olivia", "Pimia"], ["Natalie", "Cvackova"], ["Olga", "Arruabarrena Vecino"], ["Giulia", "Pairone"], ["Irina", "Lidkovskaya"], ["Olivia", "Sneed"], ["Morgan", "Bernabe"], ["Amreen", "Naaz"], ["Mercedes", "Lopez Velez"], ["Molly", "Reed"], ["Megan", "Smith"], ["Khrystsina", "Kandratsiuk"], ["Catiana", "Kaercher"], ["Naz", "Karagoz"], ["Kanami", "Tsuji"], ["Yukino", "Emi"], ["Daniela", "Carrillo"], ["Asiya", "Dair"], ["Angelique", "Svinos"], ["Maliha", "Al Awaidy"], ["Tatiana", "Grigoryan"], ["Anna", "Grigoryan"], ["Brigitte", "Beck"], ["Angela", "Lorenzo Garrido"], ["Aslina", "Chua"], ["Ariana", "Rodriguez"], ["Jacqueline", "Cabaj Awad"], ["Hsin Min", "Chin"], ["Anna", "Sanford"], ["Elena", "Golovnyova"], ["Cristina", "Perez De La Torre Ma"], ["Jana", "Schober"], ["Zofia", "Kulig"], ["Ulyana", "Ayzatulina"], ["Sophie", "Cloessner"], ["Dominique", "Esparza Fuster"], ["Siriyakorn", "Makpoon"], ["Chiara", "Volejnicek"], ["Antonella", "Murialdo"], ["Jana", "Jablonovska"], ["Petra", "Remedio"], ["Sona", "Priscakova"], ["Christi", "Woodson"], ["Gaby Alexandra", "Fonseca Tamayo"], ["Yana", "Mogilnitskaya"], ["Daniela", "Garstea"], ["Aziza", "Berriri"], ["Yuliya", "Latokhina"], ["Roos", "Van Der Zwaan"], ["Justina", "Mikulskyte"], ["Resha", "Chandak"], ["Emma", "Haakansson"], ["Sabina", "Shaydullina"], ["Lena", "Pacholski"], ["Emily", "Casteleyn"], ["Katya", "Krivoshapov"], ["Tiare", "Rebolledo"], ["Woyla", "Waluyo"], ["Georgia", "Brescia"], ["Yeong Won", "Jeong"], ["Anja", "Bebic"], ["Kristina", "Pastukhova"], ["Brooke", "Austin"], ["Domenica", "Gonzalez"], ["Ana Filipa", "Santos"], ["Janet", "Koch"], ["Isabella", "Capato Camargo"], ["Maria", "Ahumada"], ["Anastasia", "Pribylova"], ["Verolalaina Helene", "Radilofe"], ["Emily", "Da Silva Chang"], ["Maria Del", "Prados Cid"], ["Ekaterina", "Popova"], ["Felicitas", "Runkel"], ["Kamonwan", "Buayam"], ["Beatrice", "Lombardo"], ["Lyann", "Hoang"], ["Eleonora", "Mindiyarova"], ["Julia", "Przybylska"], ["Ines", "Arfaoui"], ["Greta", "Mokrousova"], ["Carol", "Finke"], ["Sonja", "Balic"], ["Kelly", "Shaffer"], ["Angeliki", "Kairi"], ["Dajana", "Dukic"], ["Daria", "Chernyshkova"], ["Britt", "Geukens"], ["Komal", "Nagare"], ["Evita", "Febri Habsari"], ["Karolina", "Snita"], ["Sumina", "Eshiro"], ["Juliana Jose", "Parra Gomez"], ["Adriana", "Rajkovic"], ["Janaya", "Smith"], ["Cassie", "Mercer"], ["Grace", "Dixon"], ["Ayumi", "Mori"], ["Claudia", "Williams"], ["Aida", "Kalimullina"], ["Ralina", "Kalimullina"], ["Oleksandra", "Korashvili"], ["Elizaveta", "Khabarova"], ["Nikola", "Tomanova"], ["Helena", "Nyikos"], ["Laura", "Tanfin"], ["Maria Jose", "Zehnder"], ["Hayley", "Macpherson"], ["Jandayia", "Lubin"], ["Natalie", "Syme"], ["Alize", "Boccard"], ["Tatjana", "Stoll"], ["Alena", "Macharova"], ["Busra", "Kayrun"], ["Julia", "Terziyska"], ["Mahitha", "Dadi Reddy"], ["Lea", "Bruno"], ["Sarvinoz", "Sharipova"], ["Stephanie J", "Smith"], ["Monika", "Stanikova"], ["Viktoriya", "Yankovskaya"], ["Sara", "Ottomano"], ["Alba", "Carrillo Marin"], ["India", "Sanders"], ["Oana Georgeta", "Simion"], ["Mana", "Furuhashi"], ["Madison", "Frahn"], ["Sandra", "Segura Mandarino"], ["Hadley", "Berg"], ["Bianca", "Ravinis Lombardi"], ["Erin", "Larner"], ["Estelle", "Cascino"], ["Hayaka", "Murase"], ["Amanda Miguel", "Perez Franco"], ["Stephani", "Rodriguez"], ["Francesca", "Gariglio"], ["Eden", "Silva"], ["Devin", "Chypyha"], ["Katrine Isabel", "Steffensen"], ["Caroline", "Doyle"], ["Mia", "Middleton"], ["Ji Yun", "Yun"], ["Jade", "Hilton"], ["Giorgia", "Bove"], ["Kennan", "Johnson"], ["Mami", "Adachi"], ["Barbara", "Haas"], ["Julie", "Noe"], ["Klaudia", "Szabo"], ["Veronica", "Napolitano"], ["Angela", "Dahnous"], ["Raquel", "Montalvo"], ["Colomba", "Di Filippo"], ["Natalie", "Hepburn"], ["Katarzyna", "Pyka"], ["Stephanie", "Doboara"], ["Martine", "Ditlev"], ["Jeongyun", "Lee"], ["Maria", "Uvarova"], ["Anna", "Shepita"], ["Alina", "Zolotareva"], ["Chisa", "Hosonuma"], ["Regina", "Clark"], ["Alina", "Lazareva"], ["Cheyenne", "Biancheri"], ["Rutuja", "Bhosale"], ["Maria", "Gomez Saldarriaga"], ["Lise", "Brulmans"], ["Camila", "Ramos"], ["Aneta", "Miksovska"], ["Sandra", "Bolstad"], ["Nour", "Azzouz"], ["Yagmur", "Akgul"], ["Alessandra", "Vacca"], ["Man Ying Maggie", "Ng"], ["Srijita", "Ghosh"], ["Alma", "Thell Lenntorp"], ["Klara", "Thell Lenntorp"], ["Andrea", "Kulova"], ["Linda", "Dubska"], ["Giulia", "Crescenzi"], ["Ayumi", "Oishi"], ["Maria", "Martinez Martinez"], ["Viviana", "Onorato"], ["Ana", "Oparenovic"], ["Maria Elisa", "Franco"], ["Andrea", "Dikosavljevic"], ["Jin Ju", "Lee"], ["Madison", "Westby"], ["Mayo", "Hibi"], ["Mari", "Osaka"], ["Kristyna", "Hrabalova"], ["Jihene", "Benzeggouta"], ["Oana", "Irimescu"], ["Nagisa", "Nishimura"], ["Valeriya", "Boyanovska"], ["Caitlin", "Bernard"], ["Maria Regina", "Espindola Mancera"], ["Aziza", "Bhiri"], ["Damira", "Muminovic"], ["Gyung Eun", "Song"], ["Caroline", "Uebelhoer"], ["Priscilla", "Medlich Leal"], ["Mouna Naila", "Azzouni"], ["Manon", "Robine"], ["Aleksandra", "Mally"], ["Iva", "Primorac"], ["Amit", "Gavrieli"], ["Leire", "Martin Tena"], ["Marta", "Ruszczynska"], ["Pippa", "Carr"], ["Elizaveta", "Kulichkova"], ["Lou", "Adler"], ["Ilka", "Csoregi"], ["Magdalena", "Stoilkovska"], ["Hristina", "Dyankova"], ["Kelly", "Pedrazzoli"], ["Silvia", "Russo"], ["Mariia", "Tcakanian"], ["Drousile", "Dzeubou"], ["Alizee", "Michaud"], ["Ipek", "Soylu"], ["Ying", "Zhang"], ["Taylor", "Townsend"], ["Nicole", "Mingazzini"], ["Irina", "Fetecau"], ["Andrea", "Raaholdt"], ["Aliona", "Ladutska"], ["Ioana", "Ducu"], ["Aysenur", "Durmus"], ["Nikki", "Kallenberg"], ["Kathrine", "Berge"], ["Sarah", "Dvorak"], ["Daria", "Vasekina"], ["Eliana", "Antequera"], ["Alessandra", "Vargas"], ["Arianne", "Hartono"], ["Anastasiya", "Yepisheva"], ["Ilze", "Hattingh"], ["Eudice Wong", "Chong"], ["Carolina Meligeni Rodrigues", "Alves"], ["Ashleigh", "Barty"], ["Anastasiya", "Shcherbakova"], ["Rheeya", "Doshi"], ["Iana", "Tishchenko"], ["Eliana Sol", "Gonzalez"], ["Paulina", "Rustecka"], ["Da Hye", "Kim"], ["Sumeera", "Kamil"], ["Yukina", "Saigo"], ["Teertha", "Iska"], ["Lizanne", "Jinkertz"], ["Pauline", "Wuarin"], ["Meike", "Vorschel"], ["Natalie Greer Watts", "Da Silveira"], ["Claudia", "Negron"], ["Julie", "Garret"], ["Ashley", "Barron"], ["Ksenija", "Sharifova"], ["Gabriela", "Pereira Alves"], ["Silvia", "Mocciola"], ["Marta", "Bellucco"], ["Dominique", "Beauvais"], ["Angeline Devi", "Devanthiran"], ["Paula", "Smetak"], ["Stefani", "Hofer"], ["Tanja", "Tuomi"], ["Nicole", "Mitchell"], ["Mayar", "Sherif"], ["Anna", "Bryukhova"], ["Suryaningsih", "Suryaningsih"], ["Sade", "Atkinson"], ["Crystal", "Sutar"], ["Andreea", "Gradinaru Fometescu"], ["Elisa Mai", "Koonik"], ["Lujza", "Ryskova"], ["Carmen", "Blasco Robaina"], ["Natalie", "Suk"], ["Giulia", "Della Cioppa"], ["Maurine", "Lena"], ["Debora Emanuela", "Scurt"], ["Agustina Elena", "Otegui"], ["Kyra", "Wojcik"], ["Maria", "Bogdanova"], ["Katerina", "Siniakova"], ["Anelisse", "Torrico"], ["Johnnise", "Renaud"], ["Risa", "Ushijima"], ["Valeria", "Patiuk"], ["Camila", "Gil"], ["Alexandria", "Stiteler"], ["Ah", "Song"], ["Erin Kane", "Rodriguez"], ["Annabelle", "Andrinopoulos"], ["Barbara", "Kotelesova"], ["Xiaodi", "You"], ["Marine", "Dans"], ["Sarah", "Baron"], ["Dejana", "Radanovic"], ["Cory Pierina", "Molina Chenet"], ["Hannah En Xin", "Chew"], ["Sandra", "Honigova"], ["Timea", "Jaruskova"], ["Isabela", "Jovanovic"], ["Aleksandra", "Emelianova"], ["Ulrikke", "Hoyer"], ["Ana Fernanda", "Loaiza Esquivias"], ["Louisa", "Chirico"], ["Petra", "Piirtola"], ["Qian Nan", "Feng"], ["Monika", "Rajicic"], ["Martina", "Husarova"], ["Kylie", "Waschuk"], ["Dugleisy", "Linares"], ["Mila", "Popivoda"], ["Indy", "De Vroome"], ["Karoline", "Kurz"], ["Sabrina", "Federici"], ["Paola", "Gullino"], ["Michele Alexandra", "Zmau"], ["Karina", "Silkina"], ["Tereza", "Melicharkova"], ["Daniella", "Silva"], ["Bianca", "Birkenstock"], ["Mariami", "Dolashvili"], ["Yuri", "Sugimoto"], ["Nina Isabella", "Scholten"], ["Eleni", "Stamati"], ["Daria", "Lodikova"], ["Dea Ioanna", "Petropoulou"], ["Anne Liz", "Jeukeng"], ["Nadege", "Jorda"], ["Veronika", "Badurova"], ["Beatriz", "Maia"], ["Yasmina", "El Sayed"], ["Yvonne", "Bruce Tagoe"], ["Christina", "Makarova"], ["Seda", "Vardanyan"], ["Milica", "Sljukic"], ["Gracia", "Mboko"], ["Beatriz", "Haddad Maia"], ["Sara", "Djurdjevic"], ["Maria Styliani", "Botsa"], ["Koralie", "Etienne"], ["Ekaterina", "Klyueva"], ["Maria", "Zotova"], ["Milica", "Novakovic"], ["Valeria", "Cealic"], ["Mao", "Ohmine"], ["Nelise", "Verster"], ["Valeria", "Munoz Velasquez"], ["Marina", "Margulis"], ["Jennifer", "Brown"], ["Laura", "Moreno Martinez"], ["Nozomi", "Kawai"], ["Woo Keoung", "Lee"], ["Maria Jose", "Luque Moreno"], ["Sunam", "Jeong"], ["Sheetal", "Shetty"], ["Claudia", "Cianci"], ["Adel", "Musina"], ["Vanessa", "Dzmurova"], ["Izel Ece", "Yilmaz"], ["Lodovica", "Giannini"], ["Marta", "Sexmilo Pascual"], ["Stefany", "Ferigatto"], ["Ena", "Kajevic"], ["Cecilia", "Pattacini"], ["Elisabet", "Strand"], ["Deborah", "Chiesa"], ["Ines", "Miranda"], ["Huijie", "Li"], ["Sadafmoh", "Tolibova"], ["Anais", "Emelie"], ["Sara", "Quiroga"], ["Eleonore", "Barrere"], ["Mariana Mayer", "Humberg"], ["Nadia", "Mechaala Gordillo"], ["Sara", "Mechaala Gordillo"], ["Marie", "Mayerova"], ["Luana", "Stanciu"], ["Juliana Rocha", "Cardoso"], ["Viktoriya", "Bogoslovska"], ["Sarina", "Kang"], ["Petra", "Ivankovic"], ["Regina", "Lopez Ley"], ["Michelle Kerubo", "Onyancha"], ["Mia", "Jurasic"], ["Emma", "Hurst"], ["Carolina", "Monteiro Ribeiro De Lima"], ["Ning", "Hai"], ["Maria Fernanda", "Navarro Oliva"], ["Samantha", "Echevarria"], ["Simran Kaur", "Sethi"], ["Masako", "Makiba"], ["Anastasia", "Prokopenko"], ["Tjasa", "Jerse"], ["Donna", "Vekic"], ["Olaya", "Inclan Solis"], ["Ariadna", "Marti Riembau"], ["Maja", "Ornberg"], ["Francesca", "Delledera"], ["Jovana", "Kenic"], ["Yumeko", "Yoshitomi"], ["Maria Agustina", "De Carli"], ["Sarah", "Al Balushi"], ["Anastasiya", "Shleptsova"], ["Amelie", "Intert"], ["Marina", "Guinart Espana"], ["Philippine", "Gauduffe"], ["Anastasiya", "Galickaya"], ["Elizaveta", "Kamzolova"], ["Linda", "Guerzize"], ["Julia", "Grabher"], ["Gabriella Angelin", "Alves"], ["Katarina", "Guarino"], ["Ines", "Chibout"], ["Ziyue", "Sun"], ["Marli", "Van Heerden"], ["Eva", "Martinez Regalado"], ["Jeannez", "Daniel"], ["Evgeniya", "Ivanichenko"], ["Yihong", "Li"], ["Daniela Estefania", "Rosado Vega"], ["Gabriella", "Umoquit"], ["Megen", "Cochran"], ["Alina", "Silich"], ["Erica", "Braschi"], ["Misaki", "Kawamura"], ["Kristina", "Mrazova"], ["Ayla", "Aksu"], ["Pei Wen", "Kao"], ["Tomomi", "Takaichi"], ["Jennifer", "Hauer"], ["Vanessa", "Stiegner"], ["Ana", "Madcur"], ["Hanna", "Borjeson"], ["Bhavani", "Balakumar"], ["Louise", "Ronaldson"], ["Thanthita", "Suetrong"], ["Zeina", "El Tawil"], ["Natallia", "Niahrei"], ["Ryann", "Foster"], ["Terri", "Fleming"], ["Jennifer", "Moinard"], ["Nia", "Rose"], ["Chan", "Zhang"], ["Pia", "Cuk"], ["Dzina", "Milovanovic"], ["Barbara", "Rajic"], ["Tina", "Bokhua"], ["Sara", "Kalkenova"], ["Liana", "Sakvarelidze"], ["Tatjana", "Vorobjova"], ["Chatchaya", "Sakchatchawan"], ["Melena", "Lopez"], ["Yenise", "Machado"], ["Ines", "Baccouche"], ["Harriet", "Dart"], ["Angela", "Leweurs"], ["Nina", "Stojanovic"], ["Nyla", "Beenk"], ["Kana", "Kubota"], ["Katie", "Boulter"], ["Nelli", "Ponomareva"], ["Eleonora", "Maserati"], ["Vukosava", "Medojevic"], ["Suzuho", "Oshino"], ["Maria Eleni", "Charalampopoulou"], ["Bianca", "Moldovan"], ["Elizabeth Anita Alexandria", "Profit"], ["Anastasia", "Vasileiou"], ["Lara", "Glavic"], ["Wanyuanyun", "Jin"], ["Reina", "Takahashi"], ["Yolimar", "Ogando"], ["Polina", "Yuzefovich"], ["Paulina", "Lewandowska"], ["Anastasia", "Artemova"], ["Shanshan", "Guo"], ["Ines", "Teixeira"], ["Agata", "Borgman"], ["Alyssa", "Boey"], ["Dona", "Abo Habaga"], ["Jovana", "Petrovic"], ["Mariella", "Blackwell"], ["Valeriya", "Korotina"], ["Antonia", "Lottner"], ["Yusleydis", "Smith Dias"], ["Clara", "Tanielian"], ["Agustine Pangestu", "Palupi"], ["Kristyna", "Rouckova"], ["Tomoe", "Yazawa"], ["Bojana", "Petrovic"], ["Barbara", "Gatica"], ["Michelle", "Van Lier"], ["Viktoriya", "Lushkova"], ["Mathilda", "Malm"], ["Andrea", "Sanchez Sainz"], ["Iva", "Ivkovic"], ["Kimberley", "Koerner"], ["Ching Wen", "Hsu"], ["Alina", "Zubkova"], ["Ioana Florentina", "Popescu"], ["Natsuho", "Nakazawa"], ["Emma", "Ek"], ["Minami", "Sonan"], ["Diandra", "Berliana"], ["Karolina", "Muchova"], ["Giorgia", "Picano"], ["Paulina Javiera", "Obreque"], ["Jiayuan", "Xue"], ["Leticia Nayara Moura", "Monteiro"], ["Ingrid", "Gamarra Martins"], ["Sofia", "Wicker"], ["Tatiana", "Rico Viana"], ["Janina", "Braun"], ["Sharmeen", "Rizvi"], ["Larissa", "Bucher"], ["Camila", "Giangreco Campiz"], ["Gabriela", "Anzola"], ["Alessandra", "Gisonna"], ["Chiara", "Frapolli"], ["Stephanie Mariel", "Petit"], ["Shaddae", "Findley"], ["Anastasia", "Nikolaou"], ["Leslie", "Soto"], ["Jena", "Cheng"], ["Gorica", "Spasojevic"], ["Ksenia", "Laskutova"], ["Carla", "Touly"], ["Klavdija", "Bukovec"], ["Katarina", "Jovanovic"], ["Sara", "Boevska"], ["Lilla", "Barzo"], ["Tanja", "Stojanovska"], ["Habiba", "Shaker"], ["Rianna", "Valdes"], ["Hannah", "Ploner"], ["Sara", "Gimenez"], ["Kanako", "Morisaki"], ["Yassamine", "Boudjadi"], ["Yana", "Tashaev"], ["Barbora", "Kollarova"], ["Isabelle", "Wallace"], ["Ekaterina", "Ilina"], ["Nanette", "Nylund"], ["Kim Janine", "Gefeller"], ["Katelyn", "Jackson"], ["Devi", "Hasan"], ["Madeleine", "Boepple"], ["Xiao", "Fu"], ["Margaux", "Brabant"], ["Septiana", "Zahiroh"], ["Dakota", "Norton"], ["Natalia", "Zorgovska"], ["Giulia", "Cascapera"], ["Eugenia", "Sanchez"], ["Amit", "Lev Ari"], ["Irem", "Karamanoglu"], ["Jennifer", "Wacker"], ["Seohyeon", "Kim"], ["Chiara", "Pascale"], ["Maria Juliana", "Alzate"], ["Laura", "Roig Tortajada"], ["Ioana Loredana", "Rosca"], ["Theresa Alison", "Van Zyl"], ["Chiara", "Arcangeli"], ["Kristina", "Eremina"], ["Maia A", "Magill"], ["Marianna", "Zakarlyuk"], ["Alice", "Patch"], ["Gebriela", "Mihaylova"], ["Hannah", "Cseplo"], ["Anastasia", "Reshetnikova"], ["Inger", "Van Dijkman"], ["Alexis", "Prokopuik"], ["Julia", "Ascua"], ["Sarah", "Vargas"], ["Jessika", "Ponchet"], ["Magdalena", "Boado"], ["Agata Jadwiga", "Bienkowska"], ["Alena", "Gulyaeva"], ["Lyn Yuen", "Choo"], ["Guillermina", "Naya"], ["Arisha", "Ladhani"], ["Margot", "Mercier"], ["Alicia", "Smith"], ["Evelina", "Hennigor"], ["Risa", "Shimizu"], ["Alexa", "Pirok"], ["Melanie", "Stokke"], ["Lorea", "Ganboa"], ["Ema", "Barkovic"], ["Jelena Karla", "Vujicic"], ["Emmanuelle", "De Beer"], ["Jasmin", "Jebawy"], ["Maria", "Schneider"], ["Ana Bianca", "Mihaila"], ["Ke", "Mao"], ["Laura", "Sainsbury"], ["Annelou", "Nab"], ["Sara", "Sorribes Tormo"], ["Stephanie", "Yamada"], ["Tea", "Jandric"], ["Manae", "Miwa"], ["Rio", "Suzuki"], ["Rehmat", "Johal"], ["Antonia", "Sakic"], ["Dasha", "Ivanova"], ["Shannon", "Wong Hon Chan"], ["Maria Victoria", "Quinde Serrano"], ["Anna", "Koval"], ["Kalina", "Bozhilova"], ["Kimberly", "Yee"], ["Gloria", "Liang"], ["Mirna", "Curcic"], ["Mariana", "Carreira"], ["Rebecca", "Sramkova"], ["Katharine", "Fahey"], ["Alina", "Kuzmenkova"], ["Maria", "Tritou"], ["Ana", "Sirovina"], ["Tamara", "Pichkhadze"], ["Saera", "Kanda"], ["Vasilisa", "Aponasenko"], ["Camila", "Pacheco"], ["Thalia", "Martin"], ["Khume", "Herring"], ["Oceane", "Dodin"], ["Zoe", "Hives"], ["Marianna", "Petrei"], ["Ana Marcela", "Rengifo Caracas"], ["Pia", "Brglez"], ["Annely", "Pokras"], ["Josefina", "Surraco"], ["Amanda", "Rebol"], ["Vasundara", "Raju"], ["Anastasija", "Homutova"], ["Albina", "Yanko"], ["Vittoria", "Avvantaggiati"], ["Bojana", "Marinkovic"], ["Caroline", "Daxhelet"], ["Vitaliya", "Nekhoroshikh"], ["Anastasia", "Trunina"], ["Barbara", "Bacic"], ["Maria Paula", "Martinez Gelvez"], ["Melanie Isabella", "Diaz Padron"], ["Jana", "Fett"], ["Eva", "Siskova"], ["Minh Trang", "Dao"], ["Ivone", "Alvaro"], ["Anita Ance", "Detlava"], ["Kasandra", "Kozub"], ["Cyrine", "Ben Cheikh"], ["Tanasha", "Khandpur"], ["Emma Marie", "Jensen"], ["Mara", "Argyriou"], ["Karina", "Komaruk"], ["Julieta Sofia", "Canas"], ["Dea", "Herdzelas"], ["Guljahan", "Kadyrova"], ["Hye Ji", "Ju"], ["Rachel", "Chong"], ["Ellyse", "Hamlin"], ["Judith", "Bohnenkamp Serena"], ["Jane", "Wasserson"], ["Alice", "Keddie"], ["Aleksandra", "Karamanoleva"], ["Caitlin", "Herb"], ["Ana", "Yrazusta Acosta"], ["Margaux", "Deagostini"], ["Polina", "Novoselova"], ["Marie", "Villet"], ["Daniela", "Pedraza Novak"], ["Maria Paula", "Medina Blanco"], ["Tyler", "Smith"], ["Kristina", "Njegus"], ["Angelina", "Zhuravleva"], ["Rafaela", "Francisquiny"], ["Hannah", "Lehfeldt"], ["Juliana", "Pena"], ["Monica", "Matias"], ["Malak Jasim", "Fardan"], ["Maite", "Cano"], ["Abhilasha", "Vishwanath"], ["Shir", "Hornung"], ["Camila", "Wesbrooks"], ["Gizem Melisa", "Ates"], ["Laura", "Argente"], ["Sindhu", "Janagam"], ["Marketa", "Zeminova"], ["Maria Belen", "Vaz Teixeira"], ["Yunjeong", "Park"], ["Nihed", "Benkaddour"], ["Yadira", "Rubio"], ["Hitomi", "Watanabe"], ["Melina", "Lyubomirova"], ["Akvile", "Parazinskaite"], ["Stefania", "Sismanidou"], ["Anna", "Vrbenska"], ["Julia", "Jung"], ["Jasmine Kaur", "Bajaj"], ["Lee", "Ben Or"], ["Magdelini", "Lesvidou"], ["Aina", "Schaffner Riera"], ["Victoria", "Yu"], ["Kristina", "Djamalova"], ["Alli", "Hodges"], ["Francesca", "Bullani"], ["Lisa", "Phillips"], ["Sabina", "Calancea"], ["Jamilya", "Sadykzhanova"], ["Miryam", "Jabri"], ["Dina", "Hegab"], ["Milana", "Drca"], ["Oriana Belen", "Labaqui"], ["Angelina", "Kholikulova"], ["Nina", "Kalezic"], ["Claudia", "Wiktorin"], ["Lara", "Kralj"], ["Sarlota", "Cesnekova"], ["Graciela Patricia", "Rosas Alvarado"], ["Pia", "Ender"], ["Stefanie", "Vorih"], ["Alannah", "Griffin"], ["Ria", "Vaidya"], ["Ana Lorena", "Garcia Navas"], ["Costanza", "Magazzini"], ["Ana", "Lopez Camarero"], ["Martina", "Colmegna"], ["Elina", "Vikhryanova"], ["Sahar", "Najaei"], ["Natalie", "Novotna"], ["Varvara", "Flink"], ["Catalina", "Vives"], ["Cristina", "Moroi"], ["Paula", "Rives Palau"], ["Vineeta", "Singh"], ["Madison", "Harrison"], ["Sofia", "Mariotto"], ["Palina", "Dubavets"], ["Polina", "Ivanova"], ["Francesca", "Wilkes"], ["Alicja", "Zduniak"], ["Yekaterina", "Gubanova"], ["Natalija", "Sipek"], ["Barbara", "Mancera Carrillo"], ["Zarina", "Jumajanova"], ["Sara", "Ramadan"], ["Lara", "Dimmer"], ["Lais", "Carvalho De Oliveira Bicca"], ["Gabrielle Faith", "Andrews"], ["Sumitra", "Basnyat"], ["Kamilla", "Beisenova"], ["Aayushi", "Chouhan"], ["Katherine", "Lee"], ["Vivian", "Hegeman"], ["Ana Victoria", "Gobbi Monllau"], ["Amanda", "Andrade Silva"], ["Dagmar", "Janischova"], ["Sophia", "Grippo"], ["Marta", "Kowalska"], ["Giuliana", "Huerta Mercado"], ["Ariana", "Rahmanparast"], ["Ruth", "Copas"], ["Alessandra", "Lucchetta"], ["Ksenia", "Dmitrieva"], ["Maria Del Rosario", "Canero Perez"], ["Arina", "Folts"], ["Sena Lara", "Nural"], ["Lior", "Pachuorkovski"], ["Simran", "Wadhwa"], ["Yik Yan Suki", "Law"], ["Maria", "Siopacha"], ["Ana Luisa", "Perez Lopez"], ["Dabin", "Kim"], ["Martina", "Malmqvist"], ["Natsumi", "Okamoto"], ["Michela", "Piccioli"], ["Cecilia", "Bahloul"], ["Camille", "Sireix"], ["Laura", "Pimenta"], ["Yada", "Vasupongchai"], ["Lilia", "Talaboulma"], ["Arushi", "Bhasin"], ["Jasmin", "Buchta"], ["Valentina", "Losciale"], ["Jessica", "Ho"], ["Mina Guner", "Karamercan"], ["Ziyu", "Wang"], ["Theresa", "Piontek"], ["Chatmanee", "Jankiaw"], ["Napawee", "Jankiaw"], ["Isabel Veronica", "Boada"], ["Valeriya", "Solopaeva"], ["Andie K", "Daniell"], ["Uljan", "Espolova"], ["Lauren", "Proctor"], ["Dhruthi", "Tatachar Venugopal"], ["Ingy", "Hashish"], ["Pornpawee", "Premthong"], ["Lucia", "Ondrasova"], ["Yijia", "Shao"], ["Eliska", "Kleisnerova"], ["Ivona", "Cudina"], ["Ana", "Roman Dominguez"], ["Sanjana", "Sudhir"], ["Ayane", "Tachibana"], ["Esen", "Kokce"], ["Martina", "Basic"], ["Sejla", "Duzel"], ["Fernanda", "Astete"], ["Nina", "Potocnik"], ["Minja", "Gligic"], ["Anastasiya", "Rychagova"], ["Sofia", "Smagina"], ["Natalia", "Bey Barbe"], ["Clara", "Carotta"], ["Josephine", "Hofmann"], ["Maharevo", "Ramanitrarivo Rosea"], ["Ana Paula", "Neffa De Los Rios"], ["Dona", "Valihanova"], ["Sasipa", "Permpanich"], ["Karina", "Gurgenyan"], ["Raluca", "Ciufrila"], ["Anastasia", "Chikalkina"], ["Alexandra", "Bezmenova"], ["Dina", "Zhamiyeva"], ["Maria", "Patrascu"], ["Jiaqing", "Mo"], ["Josefin", "Halden"], ["Angelina", "Klimova"], ["Nikol", "Zaikin"], ["Amy", "Yang"], ["Luz Angelica", "Solano Delgado"], ["Nilufar", "Ismailova"], ["Tsvetanka", "Trifonova"], ["Rada", "Manataweewat"], ["Alexandra", "Tsereteli"], ["Victoria", "Muntean"], ["Claire", "Verwerda"], ["Isabelle", "Entenza"], ["Katerina", "Stloukalova"], ["Victoria", "Giannaccini"], ["Maria", "Novikova"], ["Isabella", "Hurtado"], ["Pamela", "Wu"], ["Nozomi", "Ohya"], ["Denisa", "Chereches"], ["Barbora", "Kosejkova"], ["Chiara", "Grimm"], ["Alona", "Puskkarevsky"], ["Imen", "Abid"], ["Anna", "Sviripa"], ["Julia", "Suzuki"], ["Melis", "Bayraktaroglu"], ["Sara Catherine", "Parker"], ["Charlotte", "Petrick"], ["Mafalda", "Fernandes"], ["Damini", "Sharma"], ["Morgane", "Michiels"], ["Vittoria", "Beolchi"], ["Paige Mary", "Hourigan"], ["Lidia", "Moreno Arias"], ["Julia", "Schepp"], ["Francoise", "Abanda"], ["Mirabelle", "Njoze"], ["Kim", "Ha Nul"], ["Stacey", "Fung"], ["Alexus", "Jones"], ["Andreina", "Pino"], ["Anhelina", "Kalinina"], ["Eeshita", "Pande"], ["Chantal", "Martinez Blanco"], ["Sthefanie", "Santos"], ["Marina", "Gennimata"], ["Valentini", "Grammatikopoulou"], ["Lana", "Rush"], ["Anja", "Dokic"], ["Evelyn Briyeeth", "Moreno Rivera"], ["Linn", "Ehrenstrom"], ["Nadia", "Podoroska"], ["Agustina", "Chlpac"], ["Nicole Caroline", "Vaz Da Silva"], ["Atlanta ", "Patsali"], ["Valeria", "Nikolaev"], ["Ana Lucia", "Carneiro Revoredo"], ["Hana", "Pektorova"], ["Kseniia", "Bekker"], ["Snehadevi S", "Reddy"], ["Laura", "Botero"], ["Nicole", "Dzenga"], ["Aparna", "Kondaveeti"], ["Vasanti", "Shinde"], ["Jelena", "Janosevic"], ["Margalita", "Tchitchashvili"], ["Muge", "Topsel"], ["Victoria", "Chehal"], ["Natalia", "Vikhlyantseva"], ["Kristina", "Kostic"], ["Tuna", "Kaya"], ["Andreia", "Beberechi"], ["Nur Gulsan", "Bicen"], ["Amanda", "Schneider"], ["Kwan Yau", "Ng"], ["Kamonluk", "Kittitanom"], ["Lin", "Ma"], ["Lamiaa", "Aziz"], ["Montana", "Moore"], ["Kristina", "Samardzic"], ["Carina", "Avram"], ["Anastasija", "Filipovic"], ["Protiksha", "Sharma"], ["Milica", "Cortanovacki"], ["Roosa", "Timonen"], ["Joanna", "Zawadzka"], ["Meng", "Qin"], ["Federica Joe", "Gardella"], ["Giorgie", "Jones"], ["Andria", "Tsaggaridou"], ["Paige", "Cline"], ["Marla", "Mesa"], ["Lucia Annette", "Davila Espejo"], ["Jelena", "Lukic"], ["Camila", "Ramazzini"], ["Lynn", "Janssens"], ["Valentina", "Gazzoli"], ["Katharina", "Herpertz"], ["Yana", "Khon"], ["Julia Mansano", "Gomide"], ["Rebeka", "Stolmar"], ["Anna Maria", "Procacci"], ["Eleonora", "Cecchinato"], ["Yu Ting", "Hsieh"], ["Magda", "Aubets Macia"], ["Jasmine Marina", "Coteanu"], ["Kateryna", "Lymar"], ["Anna", "Sokiran"], ["Yi Ming", "Huang"], ["Alexandra", "Valenstein"], ["Oceane", "Garibal"], ["Sara", "Lanca"], ["Hazal", "Unlugenc"], ["Daniela", "Farfan"], ["Rayene Nour", "Brahimi"], ["Antonella", "Bramato"], ["Jiaxi", "Lu"], ["Maren", "Helgo"], ["Gabriela", "Slavova"], ["Marija", "Kelava"], ["Mckenna Alexandra", "Root"], ["Sarah", "Schaerer"], ["Maria", "Kononova"], ["Laura", "Gomez"], ["Tatiana", "Feygina"], ["Michaela", "Odraskova"], ["Nicole", "Kadlec"], ["Marija Vera", "Stankovic"], ["Victoria Fernanda", "Angulo Pimentel"], ["Arina Gabriela", "Vasilescu"], ["Tayisiya", "Morderger"], ["Yana", "Morderger"], ["Nagisa", "Morimoto"], ["Michelle", "Yang"], ["Neus", "Torregrosa Parets"], ["Giulia", "Porzio"], ["Marta", "Garcia Gausi"], ["Belinda", "Bencic"], ["Andreea", "Ghitescu"], ["Lina", "Qostal"], ["Fiona", "Ferro"], ["Sara", "Cakarevic"], ["Viktoryia", "Viaklenka"], ["Patricia", "Valimaa"], ["Frederikke", "Svarre"], ["Leticia Garcia", "Vidal"], ["Sarra", "Boukezzi"], ["Ty Ana", "Williams"], ["Maryna", "Kolb"], ["Yu Jin", "Ahn"], ["Tamara", "Tomic"], ["Felicity", "Maltby"], ["Hae Ok", "Lee"], ["Hae Seon", "Lee"], ["Kenadi", "Hance"], ["Emel", "Abibula"], ["Julie", "Razafindranaly"], ["Alexis", "Jones"], ["Latifah Amelia", "Dinar"], ["Elvira", "Juravliova"], ["Alija", "Merdeeva"], ["Iryna", "Vardanyan"], ["Natalia", "Serrano Garcia"], ["Bianka", "Bekefi"], ["Diana", "Spissakova"], ["Ghita", "Nassik"], ["Vera", "Sakalouskaya"], ["Anna", "Hermann"], ["Anna", "Ulyashchenko"], ["Nikola", "Dolakova"], ["Siqi", "Xie"], ["Miljana", "Milojevic"], ["Lauren", "Bishop"], ["Savannah", "Sills"], ["Maria Fernanda", "Herazo Gonzalez"], ["Sharon", "Pesch"], ["Kristina", "Evtushenko"], ["Yi Chi", "Ma"], ["Liz Andrea", "Miranda"], ["Vanessa", "Zemp"], ["Francesca", "Bonometti"], ["Ayako", "Hayashi"], ["Mariana Lucia", "Bedon Burgos"], ["Lindsay", "Truscott"], ["Dominique", "Ibarra Gomez"], ["Oceane", "Razakaboana"], ["Camilla", "Fabbri"], ["Harshita", "Chugh"], ["Julia", "Izotova"], ["Anhelina", "Kalita"], ["Jiahuan", "He"], ["Nilay Gizem", "Altay"], ["Darya", "Bulatova"], ["Eliska", "Petrackova"], ["Laura", "Luedemann"], ["Dijana", "Bogicevic"], ["Matilde", "Fernandes"], ["Natalia", "De Ugarte"], ["Iulia", "Truca"], ["Hanna", "Kantenwein"], ["Alisha", "Haas"], ["Madeline", "Rolph"], ["Pauline", "Courcoux"], ["Meropi", "Parousi"], ["Laura", "Moreno Hernandez"], ["Huibre Mare", "Botes"], ["Louise Mare", "Botes"], ["Melan", "Butler"], ["Rafaela", "Gomez"], ["Eliessa", "Vanlangendonck"], ["Kristen", "Thoms"], ["Ioana Larisa", "Fuiorea"], ["Farah", "Baklouti"], ["Ivana", "Marinov"], ["Valentina", "Abrile"], ["Lidia", "Mugelli"], ["Daniela Macarena", "Lopez"], ["Blanca Elena", "Butnaru"], ["Nariman", "Abo Bakr"], ["Anna", "Fajnorova"], ["Ribana", "Roth"], ["Olivia", "Horn"], ["Britt", "Schreuder"], ["Alejandra", "Gil"], ["Miriam", "Kolodziejova"], ["Vanja", "Klaric"], ["Kateryna", "Karpiuk"], ["Jelena", "Stojanovic"], ["Tamachan", "Momkoonthod"], ["Mathilde", "Devits"], ["Dessislava", "Zlateva"], ["Vendula", "Zovincova"], ["Natalia", "Vovk"], ["Sarai Delfina", "Monarrez Yesaki"], ["Margot", "Yerolymos"], ["Yixuan", "Li"], ["Chiara", "De Vito"], ["Helen", "Ploskina"], ["Gabriela", "Ferreira Sanabria"], ["Gabriela Andrea", "Knutson"], ["Nastya", "Gordeeva"], ["Daniela", "Diez"], ["Anabel", "Martinovic"], ["Arina", "Umanskaya"], ["Veronika", "Kudermetova"], ["Jessica", "Pieri"], ["Dalila", "Spiteri"], ["Andra Maria", "Nitescu"], ["Elzbieta", "Iwaniuk"], ["Maddie", "Antoun"], ["Jennifer", "Jussi"], ["Ana Carolina Caiuby", "Mattos"], ["Defne", "Ozerden"], ["Karolina", "Porubska"], ["Anastasia", "Shaulskaya"], ["Maria Jose", "Pintos"], ["Martha", "Matoula"], ["Erika", "Drozd Pereira"], ["Melanie", "Kovacic"], ["Nathalia", "Naomy Sato"], ["Moulika", "Ram"], ["Brianna", "Thompson"], ["Micheline", "Aubuchon"], ["Tatum", "Prudhomme"], ["Anastasiya", "Fedoryshyn"], ["Qi Li", "Ma"], ["Aleksandra", "Stosic"], ["Sara", "Amiri"], ["Sol Hee", "Sim"], ["Tanja", "Gligoric"], ["Yulieth Eliana", "Blanco Molina"], ["Gulchekhra", "Muhammadsidikova"], ["Julia", "Mikulski"], ["Ksenia", "Tortsikava"], ["Lisa Marie", "Rioux"], ["Laura", "Tinello"], ["Margarida", "Abreu"], ["Kateryna", "Baranivska"], ["Ilayda", "Yondem"], ["Zina", "Mehikic"], ["Ivana", "Jorovic"], ["Maftunabonu", "Saidova"], ["Patricia", "Delicado Orihuela"], ["Anna", "Pavlova"], ["Devanshi G", "Bhimjiyani"], ["Daniela", "Ruiz"], ["Fanny", "Ostlund"], ["Ainhoa", "Ramos"], ["Talya", "Zandberg"], ["Maria", "Smith"], ["Valeriya", "Urzhumova"], ["Sabrina", "Rittberger"], ["Liisa", "Pajumets"], ["Odile", "Maesfranckx"], ["Nupur", "Umashankar"], ["Vinja", "Lehmann"], ["Darya", "Kasatkina"], ["Maria Elena", "Medina Betancourt"], ["Rafaella", "Sampaio"], ["Candice", "Paya"], ["Katerina", "Valos"], ["Lara", "Souza Soares"], ["Rui Jie", "Jiang"], ["Olivia", "Tjandramulia"], ["Melanie Azucena", "Millan Acosta"], ["Irem Talya", "Koken"], ["Arina", "Kuznetsova"], ["Aliki", "Kapella"], ["Daniela", "Kabakova"], ["Valeria", "Mishina"], ["Agustina", "Santamaria Teixeira"], ["Merve", "Gulten"], ["Antonina", "Lysakova"], ["Yuchia", "Chen"], ["Danielle", "McIntyre"], ["Valentina", "Vargas"], ["Lena", "Reichel"], ["Maho", "Hatta"], ["Katarina", "Weymouth"], ["Valentina", "Todeschin"], ["Lina", "Grabow"], ["Lorena", "Madahuar"], ["Isabella", "Calves"], ["Zaina", "Sufi"], ["Eugenia", "Todaro"], ["Liliya", "Izmaylova"], ["May", "Wanvisa Thurakitseree"], ["Milka", "Genkova"], ["Meredith", "Xepoleas"], ["Lisa", "Ponomar"], ["Kennedy", "Shaffer"], ["Lotte", "Van Leeuwen"], ["Anastasia", "Goncharova"], ["Birgit", "Burk"], ["Kanako", "Osafune"], ["Ginevra", "Chiara"], ["Pauline", "Van Herck"], ["Alexsandra", "Zhazhelo"], ["Carolyn", "Xie"], ["Mercedes", "Hammond"], ["Arezo", "Ghannadan"], ["Thanyathorn", "Putthuan"], ["Manuela Luz", "Molesini"], ["Anna", "Bondar"], ["Simona", "Heinova"], ["Sophie", "Chang"], ["Adela", "Heinova"], ["Katie", "Poluta"], ["Silvia", "Mattiolo"], ["Maria Victoria", "Valle Zimmernann"], ["Ines", "Murta"], ["Milka Emilia", "Pasanen"], ["Jacqueline", "Pelletier"], ["Mathilde", "Armitano"], ["Ekaterina", "Alekseenko"], ["Jessica", "Failla"], ["Martina", "Okalova"], ["Darta Elizabete", "Emulina"], ["Sena", "Suswam"], ["Maria", "Marfutina"], ["Kylie", "Wilcox"], ["Melissa", "Arnoldi"], ["Edith Ayelen", "Monzon"], ["Deria", "Nur Haliza"], ["Jelena", "Ostapenko"], ["Barbara", "Choon"], ["Lizaveta", "Hancharova"], ["Patricia", "Panta"], ["Meriam", "Rhallab"], ["Zuzanna", "Szuszkiewicz"], ["Madalina", "Grigoriu"], ["Marie", "Norris"], ["Gulnara", "Axmedova"], ["Natalie", "Kallmunzerova"], ["Masa", "Antonijevic"], ["Marina", "Darzyan"], ["Kiko", "Nishizato"], ["Maximiliane", "Wachall"], ["Radina", "Dimitrova"], ["Maria", "Tkachuk"], ["Ege", "Tomey"], ["Natsumi", "Koshino"], ["Camille", "Mignac Haus"], ["Yelyzaveta", "Pletnyeva"], ["Elizaveta", "Voronova"], ["Sandra", "Friedl"], ["Christiana", "Mcdonald"], ["Sneha", "Padamata"], ["Jocelijn", "Cavero Roeper"], ["Ines Karmen", "Vias"], ["Natasa", "Kosanin"], ["Haruka", "Sasaki"], ["Raluca Georgiana", "Serban"], ["Bianca", "Turati"], ["Anna", "Turati"], ["Ceire", "Mullins"], ["Imke", "Schluenzen"], ["Yasmine", "Ince"], ["Carla", "Cerdan Vives"], ["Noelia", "Lopez Lazaro"], ["Rebeca Ruth", "Scurt"], ["Hana", "Sisirak"], ["Joana", "Brites"], ["Katharina", "Hobgarski"], ["Vanessa", "Timm"], ["Lorena", "Clemente"], ["Ariana", "Saki"], ["Isidora", "Pejovic"], ["Mollie", "Crouch"], ["Emma", "Milicevic"], ["Leah", "Luboldt"], ["Maria", "Hamad"], ["Maria Giorgia", "Farrugia Sacco"], ["Tami", "Grende"], ["Diana", "Krasnova"], ["Mariagrazia", "Pedretti"], ["Mariya", "Luss"], ["Cherise", "Slocombe"], ["Francesca", "Brancato"], ["Marta", "Ruedas Burgos"], ["Emilie", "Francati"], ["Sunae", "Ji"], ["Melissa", "Lord"], ["Eliza Maria", "Dan"], ["Guzalhon", "Nizamova"], ["Hassiba", "Munoz Alcaman"], ["Olivia", "Parson"], ["Machiko", "Yahata"], ["Anastasia", "Grosheva"], ["Chloe", "Hule"], ["Joselyn Margarita", "Treyes AlbarracN"], ["Katarina", "Stresnakova"], ["Karola Patricia", "Bejenaru"], ["Iryna", "Shymanovich"], ["Vera", "Aleshcheva"], ["Anna", "Makhorkina"], ["Sasha", "Alexander"], ["Mbolatiana", "Randrianarisoa"], ["Sara", "Orellana"], ["Veronica", "Verzoletto"], ["Anna", "Abualhaj"], ["Natalia", "Ucros"], ["Florencia Sofia", "Galdo"], ["Margaryta", "Demchenko"], ["Anastasiya", "Komardina"], ["Jessica", "Golovin"], ["Lea", "Gasparovic"], ["Anna", "Popescu"], ["Raluca Adriana", "Belehuz"], ["Ellie", "Halbauer"], ["Anita", "Perez Flor"], ["Nina", "Holanova"], ["Milica", "Cubranovic"], ["Sara", "Grubac"], ["Petra", "Melounova"], ["Alexandra", "Borg"], ["Alessandra", "Amodeo"], ["Camilla", "Littlewood"], ["Julieta Lara", "Estable"], ["Jil Belen", "Teichmann"], ["Sarah", "Adegoke"], ["Dorien", "Cuypers"], ["Julie", "Byrne"], ["Nana", "Kanayama"], ["Yagmur", "Akdemir"], ["Katerina", "Stewart"], ["Viktoriia", "Fedorova"], ["Silvia", "Gualtieri"], ["Maria Juliana", "Labrador Morales"], ["Lisa", "Friess"], ["Patrycja", "Polanska"], ["Polina", "Chala"], ["Ana Lena", "Toto"], ["Jia Qi", "Kang"], ["Iman", "Qureshi"], ["Isabella", "Bizzo"], ["Mariela", "Haug"], ["Verena", "Meliss"], ["Tamar", "Kutubidze"], ["Maria", "Kompalka"], ["Alena", "Weiss"], ["Francesca", "Di Lorenzo"], ["Momoko", "Sonoda"], ["Mia", "Horvit"], ["Silvia", "Chinellato"], ["Irene", "Burillo Escorihuela"], ["Sara", "Kelly"], ["Vera", "Ploner"], ["Marta", "Dyba"], ["Sophia", "Chow"], ["Michalina", "Jedrzejczak"], ["Aleksandra", "Vostrikova"], ["Dominika", "Haldinova"], ["Christina", "Rosca"], ["Ya Ting", "Chang"], ["Alejandra", "Gutierrez"], ["Caroline", "Lampl"], ["Paula", "Del Cueto Castillo"], ["Arina", "Nozdracheva"], ["Elena", "Van Der Sypt"], ["Federica", "Sema"], ["Svetlana", "Klyuchnikova"], ["Sabrina", "Rodriguez"], ["Gyselle Ximena", "Daza"], ["Anna", "Brogan"], ["Anamarija", "Stevanovic"], ["Camila Andrea", "Velasquez Moreno"], ["Kristina", "Schmiedlova"], ["Mayu", "Okawa"], ["Chloe", "Hughes"], ["Nina", "Khmelnitckaia"], ["Elina", "Joronen"], ["Karina", "Traxler"], ["Jovana", "Peric"], ["Olesya", "Nesterovich"], ["Luisa", "Stefani"], ["Lior", "Ifergan"], ["Lisa", "Hofbauer"], ["Laura", "Pennanen"], ["Chenchen", "Feng"], ["Ayan", "Broomfield"], ["Ana Maria", "Carrion Rodriguez"], ["Rida", "Khalid"], ["Arina", "Beliaeva"], ["Greetje", "Minnen"], ["Sara Maria", "Farzat"], ["Elisabeth", "Lyukshinova"], ["Mateya", "Radisavljevic"], ["Fatima", "Bizhukova"], ["Anastasiya", "Smirnova"], ["Maria Virginia", "Bosch"], ["Margarita", "Shmeleva"], ["Maria", "Silva"], ["Karla", "Portalatin"], ["Sansriti", "Ranjan"], ["Laetitia", "Charbonnet"], ["Klara", "Alenas"], ["Mei", "Date"], ["Emily", "Smith"], ["Natividad", "Lopez Diaz"], ["Marlies", "Steiner"], ["Mahrukh", "Kokni"], ["Maria", "Mukai"], ["Neharika", "Rama"], ["Thisuri", "Molligoda"], ["Mojca", "Mejak"], ["Sae", "Haraguchi"], ["Ting Ya", "Hsu"], ["Dana", "Kremer"], ["Aleksandra", "Kulesza"], ["Siri", "Victorsson"], ["Verena", "Hofer"], ["Tiffany", "Mylonas"], ["Natsuho", "Arakawa"], ["Beatrice", "Torelli"], ["Natalia", "Jelinkova"], ["Emerald", "Able"], ["Chloe Michele", "Ouellet Pizer"], ["Mireia", "Polo"], ["Polina", "Radeva"], ["Laura", "Falceto Font"], ["Veronika", "Vlkovska"], ["Kei", "Kato"], ["Natalia", "Belova"], ["Claudia Paulina", "Lopez"], ["Chaoyi", "Chen"], ["Jasmine Amber", "Asghar"], ["Roberta Maria", "Naicu"], ["Pimpitcha", "Jattavapornvanit"], ["Manca", "Pislak"], ["Margot", "Decker"], ["Harmony", "Tan"], ["Holly", "Hutchinson"], ["Zoe", "Doronjski"], ["Anne Kathrin", "Hierl"], ["Maram", "Selim"], ["Sandra", "Jamrichova"], ["Maria", "Gutierrez Carrasco"], ["Angelica Maria", "Ochoa Martinez"], ["Ema", "Gil Pires"], ["Eleanna", "Koukouvitaki"], ["Bianca", "Monaco"], ["Anna", "Dollar"], ["Guljan", "Muhammetkuliyeva"], ["Jessica", "Hinojosa Gomez"], ["Madison", "Bourguignon"], ["Veronika", "Gardazari"], ["Paula", "Goetz"], ["Emilia", "Occhipinti"], ["Luiza", "Irismetova"], ["Pragya", "Sinha"], ["Kateryna", "Riabtseva"], ["Viktoriya", "Gogol"], ["Alina", "Mekhtieva"], ["Riya", "Bhatia"], ["Avital", "Vaysbuch"], ["Marie", "Leduc"], ["Vinciane", "Remy"], ["Sara", "Amini"], ["Tulin", "Dagilmisgul"], ["Marialuisa", "Zirilli"], ["Myriam", "Enmer"], ["Diana", "Demidova"], ["Victoria", "Naef"], ["Luca", "Nagymihaly"], ["Yifei", "Yang"], ["Laura D", "Arciniegas"], ["Maria", "Tavares"], ["Margaux", "Bovy"], ["Maria", "Chun"], ["Dayana", "Sedova"], ["Claudia", "Papi"], ["Kyla", "Jarrar"], ["Renata", "Zarazua"], ["Naima", "Karamoko"], ["Andrea", "Tomassone"], ["Lesedi Sheya", "Jacobs"], ["Giuliana", "Bestetti"], ["Yuna", "Ito"], ["Julie", "Renson Miquel"], ["Su Yeon", "Chun"], ["Iulia", "Savescu"], ["Claire Yoonkee Choi", "Spackman"], ["Emily", "Arbuthnott"], ["Rouxanne", "Janse Van Rensburg"], ["Sabrina", "Faybyshev"], ["Rebecca", "Weissmann"], ["Antonella", "Martinetti"], ["Lusine", "Avanesyan"], ["Irys", "Ekani"], ["Alexandra", "Heczey"], ["Sophia", "Kryloff"], ["Mariana", "Alvarez"], ["Lisa", "Matviyenko"], ["Valentina", "Kulikova"], ["Aleksandra", "Buczynska"], ["Sofia Daniela", "Duran Vinueza"], ["Mary Victoria", "Cancini"], ["Fernanda", "Contreras Gomez"], ["Ksenia", "Pushkareva"], ["Claudia", "Oravcova"], ["Paula", "Comella Aguilo"], ["Tiffany", "Huber"], ["Seung Hee", "Han"], ["Alexandra", "Neamtu"], ["Janine", "Hemmes"], ["Kate", "Cusick"], ["Kiana", "Marshall"], ["Mai", "Takano"], ["Kimberly", "Mpukusa"], ["Naomi", "Osaka"], ["Sabina", "Latypova"], ["Jinxuan", "Wang"], ["Andjela", "Reljic"], ["Julia", "Kapitanova"], ["Gabriela", "Tenorio"], ["Carol", "Lombardino Petrocinio"], ["Anna", "Ozerova"], ["Luana", "Daus"], ["Eunji", "Lim"], ["Salima", "Fendri"], ["Alisa", "Rudenko"], ["Rebecca", "Gustafson"], ["Elise", "Van Heuvelen"], ["Rita", "Atik"], ["Alejandra Josefina", "Benavides Lopez"], ["Elina", "Nepliy"], ["Patricia", "Boentgen"], ["Gaia", "Squarcialupi"], ["Camila", "Tumosa"], ["Ji", "Lee"], ["Carlotta", "Cima"], ["Luciene", "Benitez Boiero"], ["Mayar", "Eltony"], ["Ananya", "Jha"], ["Athalis Dimitra", "Kratouni"], ["Daniella", "Moreno Kaste"], ["Aoi", "Ishino"], ["Meghan", "Kelley"], ["Shreya", "Swarup"], ["Mariia", "Antoniuk"], ["Sarvinoz", "Saidhujaeva"], ["Bess", "Waldram"], ["Pragati", "Natraj"], ["Oktavia", "Ayu Dewi"], ["Geraldine", "Ang"], ["Reshma", "Ganapathy"], ["Michelle Li Sha", "Khoo"], ["Karolayne", "Alexandre Da Rosa"], ["Melissa", "Sehovic"], ["Ida Seljevoll", "Skancke"], ["Aline", "Thommen"], ["Ekaterina", "Manekina"], ["Nicole", "Baloescu"], ["Anna", "Collins"], ["Arevik", "Tumanyan"], ["Sandra", "Samir"], ["Mary Catherine", "Haffey"], ["Greta", "Ceccomori"], ["Charlotte", "Wellem"], ["Daniella", "Roldan"], ["Jahana", "Bayramova"], ["Monica", "Malinen"], ["Elena Gabriela", "Ruse"], ["Aliona", "Bolsova"], ["Mariana", "Otero"], ["Erika", "Hendsel"], ["Lili", "Fekete"], ["Freya", "Christie"], ["Ni Luh Sintha", "Eka"], ["Vivian", "Zlatanova"], ["Maryna", "Veksler"], ["Alisa", "Martinov"], ["Alice", "Rame"], ["Oyku", "Pekgenc"], ["Milana", "Imamniyazova"], ["Kajsa", "Rinaldo Persson"], ["Suyeon", "Choi"], ["Vanessa", "Valdez Casas"], ["Jemileth", "Aguilar"], ["Jin Sil", "Park"], ["Rebeca", "Reyes"], ["Paula", "Badosa"], ["Johanna", "Silva"], ["Federica", "Mordegan"], ["Victoria Ariadna", "Beccio"], ["Aulia", "Nur Srikandhi"], ["Tatijana", "Sheikhan"], ["Nonna", "Kurginyan"], ["Nazrin", "Jafarova"], ["Maddie", "Pothoff"], ["Maricielo", "Torres Chihuan"], ["Plobrung", "Plipuech"], ["Anna Lena", "Linden"], ["Veronica", "Miroshnichenko"], ["Martina", "Mone"], ["Ari", "Matsumoto"], ["Xinyu", "Gao"], ["Hera", "Brynjarsdottir"], ["Pamela", "Boyanov"], ["Valerie", "Quiceno"], ["Anupreet", "Bedi"], ["Holly", "Horsfall"], ["Brienne", "Minor"], ["Anna", "Bogoslavets"], ["Lauren", "Deegan"], ["Constanze", "Stepan"], ["Assel", "Jumamukhambetova"], ["Kateryna", "Sliusar"], ["Qiu Yu", "Ye"], ["Mila", "Masic"], ["Tamara", "Culibrk"], ["Emma", "Buczko"], ["Magali", "Kempen"], ["Anastasiya", "Shoshyna"], ["Florencia", "Garcia Vazquez"], ["Margita", "Sunjic"], ["Anna", "Iakovleva"], ["Srishti", "Slaria"], ["Miljana", "Ristic"], ["Kaitlyn", "Mccarthy"], ["Martina", "Capurro Taborda"], ["Candela", "Bugnon"], ["Ayano", "Minami"], ["Anna", "Speri"], ["Ekaterina", "Alay"], ["Nikoleta", "Bulatovic"], ["Emilija", "Dancetovic"], ["Minori", "Natsuka"], ["Nadja", "Manjon Mihalic"], ["Kristina", "Parviainen"], ["Camilla", "Abbate"], ["Sabina", "Machalova"], ["Giulia", "Sartori"], ["Emma", "Roenholt"], ["Alexandra Daniela", "Nicoara"], ["Paulina", "Rotaeche"], ["Lana", "Slavica"], ["Celia", "Cervino Ruiz"], ["Karina", "Kalkenova"], ["Magdalena", "Frech"], ["Natalia", "Amineva"], ["Paulina", "Jastrzebska"], ["Lize Elfrida", "Moolman"], ["Gabriella", "Pollner"], ["Sabrina", "Barkdull"], ["Jamie", "Jillissen"], ["Naiktha", "Bains"], ["Sara", "Daavettila"], ["Julia", "Fisch"], ["Klaudia", "Wira"], ["Amalia", "Beksi"], ["Anastasia", "Rentouli"], ["Anna", "Pribylova"], ["Mariana", "Galben"], ["Guzal", "Yusupova"], ["Lizette", "Cabrera"], ["Jue", "Wang"], ["Karolina", "Novotna"], ["Vlada", "Chernikova"], ["Ndindi Inziani", "Mwaruka"], ["Katarzyna", "Wysoczanska"], ["Keyla Manuela", "Cifuentes Monsalve"], ["Tamara", "Zidansek"], ["Tamara", "Teufl"], ["Ana", "Konjuh"], ["Valeria", "Mantilla"], ["Alena", "Mashtakova"], ["Lidija", "Samardzic"], ["Ruken Dilara", "Kizilay"], ["Kindha", "Nacef"], ["Jule", "Salzburg"], ["Shiori", "Fukuda"], ["Eva Pauline", "Payet"], ["Bhargavi", "Nitin Mangudkar"], ["Catalina", "Obrecht"], ["Cristina", "Bucsa"], ["Mariam", "Bolkvadze"], ["Andrada Ioana", "Surdeanu"], ["Christina", "Wolfgruber"], ["Habiba", "Lasheen"], ["Karen", "Alvarez"], ["Oyku", "Boz"], ["En Pei", "Huang"], ["Lejla", "Colic"], ["Gabriela", "Feitosa Rezende"], ["Petra", "Granic"], ["Diana", "Valverde"], ["Lucie", "Prochazkova"], ["Zhanlan", "Wei"], ["Aleyna", "Buyun"], ["Alissa", "Selivenko"], ["Valentina", "Sottile"], ["Yuki", "Ukai"], ["Mbalia", "Bangoura"], ["Anastasia", "Zarytska"], ["Julia", "Payola"], ["Ghada", "Alajeely"], ["Fanny", "Bengtsson"], ["Apolline", "Rassat"], ["Ekaterina", "Zaitseva"], ["Simone", "Alipieva"], ["Shilin", "Xu"], ["Maia", "Lumsden"], ["Adriana", "Sosnovschi"], ["Yasmine", "Ben Abdallah"], ["Alba", "Cortina Pou"], ["Megan", "Rogers"], ["Tereza", "Polanska"], ["Rosabianca", "Satta"], ["Phillis", "Vanenburg"], ["Wijitbanjong", "Pakkaro"], ["Sena", "Sahin"], ["Martina", "Pratesi"], ["Jiaqi", "Yang"], ["Tatyana", "Vialichka"], ["Zhangwenli", "Yan"], ["Teresa", "Zorrilla Medrano"], ["Daniela", "Obando"], ["Nurin Nabilah", "Roslan"], ["Maddison", "Inglis"], ["Camila", "Vargas Gomez"], ["Shuo", "Feng"], ["Barbara", "Belis"], ["Rikeetha", "Pereira"], ["Pei Hsuan", "Kuo"], ["Hristina", "Cvetkovic"], ["Shohsiyat", "Tuhtamatova"], ["Alessandra", "Simonelli"], ["Do Hee", "Bae"], ["Javiera", "Alvarez"], ["Birte", "Langenstein"], ["Margarita", "Markaki"], ["Farah", "Yasser Abd El Wahab"], ["Daniela", "Morales Beckmann"], ["Valentina", "Mokrova"], ["Shiran", "Arol Wiegand"], ["Lina", "Hohnhold"], ["Irene", "Nunez Xifre"], ["Bermet", "Talantkyzy"], ["Julia", "Keranovic"], ["Marie", "Van Aelst"], ["Akshara", "Iska"], ["Barbora", "Palcatova"], ["Saya", "Usui"], ["Lila", "Humaloja"], ["Sofya", "Gulnova"], ["Yulia", "Bryzgalova"], ["Juliana", "Valero"], ["Raquel", "Pedraza"], ["Radmila", "Djordjevic"], ["Xeniya", "Prokopchuk"], ["Dolores", "Molina Portela"], ["Emma Christine", "Higuchi"], ["Zala", "Dovnik"], ["Marjorie", "Antohi"], ["Ambre", "Boccard"], ["Tamara", "Kupkova"], ["Michelle", "Fux"], ["Kaylah", "Mcphee"], ["Constanza", "Gorches"], ["Sara", "Tomic"], ["Ksenia", "Kuznetsova"], ["Alica", "Rusova"], ["Sofia", "Ragona"], ["Yana", "Grechkina"], ["Iulia Maria", "Ivascu"], ["Laura", "Marti"], ["Aksiniya", "Miakota"], ["Ena", "Ovcina"], ["Seon Young", "Um"], ["Aloise", "Dorey"], ["Hana", "Mraz"], ["Ekaterina", "Grinevich"], ["Lucia", "Montano"], ["Girisha", "Arora"], ["Laura", "Rizzi"], ["Selyn", "Ozgur"], ["Maria Paula", "Torres"], ["Elin", "Hellberg"], ["Ena", "Shibahara"], ["Abinikka", "Renganathan"], ["Dominika", "Hrabalova"], ["Ana Luiza", "Farinha"], ["Ioana", "Gheorghita"], ["Yelyzaveta", "Aksonova"], ["Elena", "Belenova"], ["Ghita", "Benhadi"], ["Polina", "Novikova"], ["Ioana Diana", "Pietroiu"], ["Anastasija", "Cobanovic"], ["Julia", "Tozzi"], ["Yi", "Yuan"], ["Talya", "Onyer"], ["Rifanty", "Kahfiani"], ["Katharina", "Gerlach"], ["Anna", "Kraus"], ["Karen Sofia", "Romero"], ["Jasmina", "Samardzic"], ["Imren", "Kurt"], ["Tereza", "Kolarova"], ["Yessmine", "Zhir"], ["Anne Marie", "Medcalf"], ["Katerina", "Romanyuta"], ["Taylor", "Russo"], ["Nina", "Kruijer"], ["Bettina", "Kuznini"], ["Souha", "Chibout"], ["Hanna", "Chang"], ["Viktoriya", "Zheleva"], ["Makenna", "Jones"], ["Serena", "Nash"], ["Melany Solange", "Krywoj"], ["Gyulnara", "Nazarova"], ["Zeynep", "Ates"], ["Seriana", "Saltzen"], ["Jeannine", "Hopfgartner"], ["Katka", "Stach"], ["Karolina", "Silwanowicz"], ["Jelena", "Polovina"], ["Diana", "Monsalve"], ["Laura", "Maluniakova"], ["Buse", "Cehreli"], ["Anne Sophie", "Courteau"], ["Manuela", "Huckfeldt"], ["Gabriella", "Taylor"], ["Yuika", "Sano"], ["Ani", "Safaryan"], ["Yus Syazlin Nabila Binti", "Yusri"], ["Cristiana Miruna", "Tudor"], ["Duda", "Ewa"], ["Sofia", "Sualehe"], ["Bianca", "Bostrom"], ["Aleksandra", "Stakhanova"], ["Angelina", "Skidanova"], ["Florence", "Abbott"], ["Bar", "Shimoni"], ["Alissia", "Gleixner"], ["Agostina", "Zamprogno"], ["Elizaveta", "Sokolova"], ["Erica", "Oosterhout"], ["Mayu", "Iwai"], ["Rosario", "Perez Salinas"], ["Jade", "Rafalovicz"], ["Nandini", "Gupta"], ["Ramu", "Ueda"], ["Natalya", "Malenko"], ["Luisa Fernanda", "Echeverry Rodriguez"], ["Nina", "Marjanovic"], ["Jada", "Hart"], ["Alisa", "Solovieva"], ["Nida", "Shahid Kamal"], ["Jente", "Smit"], ["Pragati", "Solankar"], ["Julia", "Rosenquist"], ["Mariana", "Oliveira"], ["Allison", "Quammen"], ["Rafaella", "Baquerizo"], ["Saranya", "Nagpal"], ["Linnea", "Bjork"], ["Alma", "Garcia Valle"], ["Hanna", "Wikberg"], ["Camila", "Recalde"], ["Thanushree", "Vale"], ["Renee", "Ren"], ["Ylona Georgiana", "Ghioroaie"], ["Karolina", "Benackova"], ["Ha Eun", "Lim"], ["Beatrice", "Reda"], ["Barbora", "Miklova"], ["Sandra", "Anglesjo"], ["Zeynep", "Saricam"], ["Valeria", "Gorlats"], ["Angela", "Kulikov"], ["Elisa", "Elhadj"], ["Ghita", "Idrissi Kaitouni"], ["Kimberley", "Van Rijn"], ["Zina", "Graves"], ["Rafaela", "Rodrigues Dos Santos"], ["Josephine", "Strandfors"], ["Sonia", "Grzywocz"], ["Mayuka", "Aikawa"], ["Caroline", "Sautter"], ["Patricia", "Eftenoiu"], ["Ekaterina", "Kunina"], ["Tatiana", "Eftenoiu"], ["Alessia", "Dario"], ["Ana", "Royo Marco"], ["Satori", "Seki"], ["Angelica E", "Karlsson Hantzis"], ["Alla", "Safolova"], ["Nikolina", "Jovic"], ["Grace", "Janis"], ["Roos", "Nederstigt"], ["Andrea", "Nikic"], ["Elizabeth", "Danailova"], ["Lingwei", "Kong"], ["Sasa", "Klanecek"], ["Sandra", "Ortevall"], ["Darina", "Mueller"], ["Anastasiya", "Klymenko"], ["Vladislava", "Kutuzova"], ["Alexandra", "Lazarova"], ["Yulia", "Sokolovskaya"], ["Haluka", "Higurashi"], ["Ruth", "Artaza Martin"], ["Sem", "Wensveen"], ["Ayano", "Shimizu"], ["Oliwia", "Szymczuch"], ["Rita", "Pedroso"], ["Anastasiya", "Sukhorukova"], ["Jesica", "Audina"], ["Zhuo Ma", "Ge Rong"], ["Stephanie", "Nemtsova"], ["Aleksandra", "Draganova"], ["Andrea", "Beneroso Lacaba"], ["Jone", "Kruger"], ["Federica", "Pulcino"], ["Mihaela", "Ghioca"], ["Lusine", "Chobanyan"], ["Marleen", "Tilgner"], ["Katarina", "Jokic"], ["Jessie", "Aney"], ["Oana", "Gavrila"], ["Emmanuelle", "Salas"], ["Nadine", "De Villiers"], ["Ana", "Akhalkatsi"], ["Alexandra", "Shchipakina"], ["Kseniya", "Savenkava"], ["Amira", "Handous"], ["Aleksandra", "Pospelova"], ["Anastasiya", "Mulder Syrovatskaia"], ["Diana", "Chehoudi"], ["Lamis", "Alhussein Abdel Aziz"], ["Lamyae", "Dad"], ["Petia", "Arshinkova"], ["Polina", "Miroshnichenko"], ["Marina", "Ivanova"], ["Sofie", "Woon"], ["Ekaterina", "Tretyak"], ["Celine", "Schepers"], ["Andrina", "Peer"], ["Alessandra", "Mecchi De Oliveira Silva"], ["Shura", "Poppe"], ["Nicole", "Frenkel"], ["Juliet Jia Wen", "Zhang"], ["Kimberly", "Birrell"], ["Shir", "Azran"], ["Janja", "Kovacevic"], ["Erem", "Akyurt"], ["Darya", "Startseva"], ["Katarina", "Kozarov"], ["Yasmine", "Ansari"], ["Ema", "Mulalic"], ["Aleksandra", "Rojek"], ["Zi Yi", "Wang"], ["Anna", "Turco"], ["Amanda", "Zapata"], ["Aryna", "Sabalenka"], ["Emma", "Alos Chiquillo"], ["Adna", "Sofradzija"], ["Susanne", "Boyden"], ["Reagan", "Collins"], ["Naomi", "Jackson"], ["Laura", "Garcia Martinez"], ["Vlada", "Filinskaya"], ["Daria", "Kruzhkova"], ["Nanako", "Ono"], ["Arisa", "Abe"], ["Alejandra", "Tamayo Gomez"], ["Anna", "Ustinoff"], ["Priscilla", "Hon"], ["Viktoria", "Kuzmova"], ["Ines", "Mesquita"], ["Tornado Alicia", "Black"], ["Esther", "Thebault"], ["Ceylin", "Gunay"], ["Ahlam", "Shawkat"], ["Arianne", "De Winter"], ["Deniz", "Paykoc"], ["Judith Maria", "Barrios Rolon"], ["Lucrezia", "Stefanini"], ["Beatriz Rodrigues", "Bento"], ["Francisca", "Vasquez Pongruber"], ["Xiuyuan", "Li"], ["Juanita", "Diaz"], ["Dorota", "Szczygielska"], ["Anamarija", "Zokic"], ["Maria", "Suarez Alonso"], ["Anna", "Fischer"], ["May", "Kimhi"], ["Hanyu", "Guo"], ["Juliette", "Bastin"], ["Askin", "Arslan"], ["Ghita", "Lahjouji"], ["Nina", "Nikitovic"], ["Helen Abigail", "Altick"], ["Tatiana", "Papakanellou"], ["Chihiro", "Muramatsu"], ["Teodora Elena", "Radu"], ["Marta", "Canas Alvarez"], ["Malalasoa Jackinah", "Rakotohasy"], ["Andrea", "Garcia Fernandez"], ["Gloria", "Ceschi"], ["Natsuki", "Asakura"], ["Anna", "Gabric"], ["Swara", "Kulkarni"], ["Anjana", "Suresh"], ["Lucia", "Diaz Saez"], ["Michelle", "Pits"], ["Gaya", "Solomon"], ["Eri", "Shimizu"], ["Belen", "Calero Vega"], ["Nora", "Szoke"], ["Saadia", "Belhadj"], ["Linnea", "Malmqvist"], ["Setia Indri", "Harti"], ["Nicoli", "Attili Pereira"], ["Tereza", "Mihalikova"], ["Anastassia", "Pantelic"], ["Eliska", "Kropackova"], ["Qianting", "Yan"], ["Lijia", "Huang"], ["Lavanya", "Khanuja"], ["Jaqueline Adina", "Cristian"], ["Marija", "Curnic"], ["Leyla", "Azaeva"], ["Dafni", "Demenega"], ["Sarah", "Stoerbrauck"], ["Karine", "Sarkisova"], ["Hernanda Melia", "Cholis"], ["Florencia", "Rossi"], ["Ksenia", "Stashenkova"], ["Linda", "Sevcikova"], ["Junjuti", "Dorkkulab"], ["Elena", "Antonova"], ["Marina", "Antonova"], ["Sara", "Kostic"], ["Elisa", "Cordovani"], ["Katheryne Stephanie", "Valencia Perez"], ["Brooke", "Lashway"], ["Enni", "Zander"], ["Cindy", "Oest"], ["Ingrid", "Neel"], ["Karman", "Thandi"], ["Valentina", "Mariotto"], ["Marija", "Venta"], ["Tamijean", "Fumagalli"], ["Faiza Munabari", "Saskia"], ["Hana", "Mortagy"], ["Arrum", "Damarsari"], ["Melissa Ishuan", "Ifidzhen"], ["Anna Maria", "Kalavska"], ["Phonexay", "Chitdara"], ["Melanie", "Dveksler Celin"], ["Elisa", "Lauri"], ["Ida", "Jarlskog"], ["Hoyeon", "Nor"], ["Michelle", "Roth"], ["Gabriela", "Yakalieva"], ["Jennifer", "Ruetten"], ["Danna Valentina", "Galeano"], ["Tereza", "Koplova"], ["Sophia", "Intert"], ["Anastasia", "Khlestova"], ["Denise", "Buberl"], ["Theodora", "Soldatou"], ["Soha", "Sadiq"], ["Bianca Elena", "Mihailescu"], ["Katarzyna", "Skrzypczynska"], ["Joanna", "Skrzypczynska"], ["Elianne Magali", "Matto Chaparro"], ["Costanza", "Pera"], ["Cindy", "Castille"], ["Angella", "Raman"], ["Daria", "Ponomareva"], ["Katerina", "Brozova"], ["Victoria", "Dimuzio"], ["Diana", "Dehterevich"], ["Susan", "Bandecchi"], ["Seoin", "Choi"], ["Ana Maria Andreea", "Ileana"], ["Shira", "Goldberger"], ["Andjela", "Sebrek"], ["Mia", "Golubovic"], ["Maria Elena", "Rojas Loaiza"], ["Anamarija", "Spoljaric"], ["Alexa", "Bortles"], ["Sofia", "Booth"], ["Zaineb", "El Houari"], ["Brenda Sarahi", "Baez"], ["Jacara", "Gillis"], ["Junsai", "Wang"], ["Joana", "Ferreira"], ["Hjordis Rosa", "Gudmundsdottir"], ["Arlinda", "Herforth"], ["Alexa", "Graham"], ["Parris", "Todd"], ["Olga", "Esteve Mendez"], ["Giovanna", "Ferreira Caputo"], ["Imogen", "Magner"], ["Chiara", "Pusceddu"], ["Nataliya", "Pogribnyak"], ["Hada", "Chang"], ["Areej", "Fareh"], ["Andrea", "Perez Lopez"], ["Lena", "Babunski"], ["Giorgia", "Testa"], ["Ioana", "Toanchina"], ["Yuenu", "Li"], ["Julia", "Perez Wienese"], ["Fabiola Estefania", "Cardenas Gutierrez"], ["Jana", "Kuzovkova"], ["Lucia", "Gutierrez"], ["Anna", "Ramos Vinolas"], ["Aspasia", "Avgeri"], ["Jaipet", "Anontaweesil"], ["Sandra", "Maletin"], ["Lenka", "Antonijevic"], ["Marina", "Alcaide Bakari"], ["Olla", "Mourad"], ["Jovana", "Knezevic"], ["Nina", "Van Oost"], ["Hana", "Sakamoto"], ["Adeliya", "Zabirova"], ["Alexandra", "Champion"], ["Medea", "Petriashvili"], ["Rebecca", "Van Orshaegen"], ["Marie", "Bouzkova"], ["Sonja", "Krtenova"], ["Vicky", "Geurinckx"], ["Maria", "Shishkina"], ["Raveena", "Kingsley"], ["Chiraz", "Bechri"], ["Andrea", "Solano Jimenez"], ["Sehzade", "Gur"], ["Marina", "Olalla Abajo"], ["Mariya", "Koloney"], ["Jessica", "Bruehwiler"], ["Estela", "Perez Somarriba"], ["Costanza", "Federici"], ["Ksenia", "Slavina"], ["Lara Isis", "Teodoro De Oliveira"], ["Andreea", "Cula"], ["Victoria", "Slavina"], ["Bunyawi", "Thamchaiwat"], ["Mirjam", "Bjorklund"], ["Alba", "Conejero Gutierrez"], ["Laia", "Conejero Gutierrez"], ["Theo", "Gravouil"], ["Carla", "Soto Villalobos"], ["Veronika", "Bencova"], ["Pancha", "Aguilar Sepulveda Francisca Gisella"], ["Annabelle", "Hageman"], ["Valerie Ann", "Valencia Castillo"], ["Rosie", "Cheng"], ["Caroline", "Ilowska"], ["Sasha", "Bollweg"], ["Milena", "Achlamov"], ["Elena Madalina", "Capraru"], ["Nicole", "Gadient"], ["Alexandra", "Filip"], ["Yasmyn", "Gulman"], ["Sofia Haydee", "Nicolini"], ["Maxine", "Palmen"], ["Paiton", "Wagner"], ["Eleni", "Christofi"], ["Alexis", "Nelson"], ["Alaina", "Miller"], ["Ayaka", "Narita"], ["Maria", "Toran Ribes"], ["Nethmi Himashi", "Waduge"], ["Natsuko", "Yamada"], ["Giulia", "Cereghetti"], ["Eugenia", "Ganga"], ["Alexia", "Coutino Castillo"], ["Maria", "Figueroa"], ["Nina", "Furmaniak"], ["Dalma", "Galfi"], ["Ana Maria", "Gavrilovici"], ["Eduarda", "Ferreira"], ["Alice", "Gillan"], ["Stefy Lorena", "Varon Diaz"], ["Cassie", "Chung"], ["Elvira", "Edstrom"], ["Marina", "Rodriguez Garcia"], ["Vivien", "Teglas"], ["Arina", "Petrova"], ["Ojasvinee", "Singh"], ["Qianxin", "Kong"], ["Barbora", "Slucikova"], ["Daryna", "Gukasyan"], ["Gabija", "Druteikaite"], ["Martina", "Zerulo"], ["Misaki", "Matsuda"], ["Gozal", "Ainitdinova"], ["Paola Valentina", "Quintana Rojas"], ["Momoko", "Kobori"], ["Lena", "Rueffer"], ["Khim", "Iglupas"], ["Itzi Janikuari", "Torres Millan"], ["Valeriya", "Pogrebnyak"], ["Sabina", "Safarova"], ["Julia", "Herlogsson"], ["Chiara", "Lommer"], ["Nami", "Otsuka"], ["Rosellina", "Masala"], ["Sarah", "Fernandez Ruiz"], ["Yu", "Morishima"], ["Ju Eun", "Heo"], ["Dalila", "Pejkovic"], ["Eden", "Richardson"], ["Kennedy", "Wicker"], ["Ghazal", "Pakbaten"], ["Dewi", "Dijkman"], ["Elisa", "Gugnali"], ["Serena", "Gugnali"], ["Laura Mariana", "Montalvo"], ["Caroline", "Dolehide"], ["Nadia", "Rawson"], ["Anastasia", "Blyukhterova"], ["Ganeshi", "Aniya"], ["Ayaka", "Ozeki"], ["Laura", "Cabrera Lafuente"], ["Anna", "Blinkova"], ["Akari", "Kakizawa"], ["Jana", "Jais"], ["Shahar", "Biran"], ["Silvija", "Perosa"], ["Kumi", "So"], ["Rimi", "So"], ["Victoria", "Wuilloud"], ["Nato", "Shaburishvili"], ["Martina", "Lo Pumo"], ["Clara Patricia", "Rizea"], ["Marta Huqi", "Gonzalez Encinas"], ["Milagros", "Montero"], ["Jovana", "Bogicevic"], ["Virginia", "Ciccone"], ["Moni", "Potrc"], ["Izumi", "Asano"], ["Yuliana", "Monroy"], ["Lourdes", "Ramalle"], ["Emma", "Lioi"], ["Alessia", "Di Pietro"], ["Maria Veronica", "Jimenez Coello"], ["Yana", "Kochneva"], ["Laura Alejandra", "Gutierrez Gomez"], ["Laura", "Illanes"], ["Isabella", "Gaban"], ["Maria", "Turrillo"], ["Eleonora", "Liga"], ["Erandi Xanat", "Martinez Hernandez"], ["Katarzyna", "Pitak"], ["Clarissa", "Gai"], ["Renata", "Ivandic"], ["Ioana", "Minca"], ["Anna", "Skabelka"], ["Milana", "Gasymova"], ["Panna", "Udvardy"], ["Vera", "Lapko"], ["Caroline", "Dunleavy"], ["Anamaria", "Vladescu"], ["Olga", "Fridman"], ["Anastasia", "Smirnova"], ["Victoria", "Smirnova"], ["Chelsea May", "Samways"], ["Erika", "Yakhimovich"], ["Luciana", "Rabines"], ["Irina", "Tuturina"], ["Jessica", "Zeynel"], ["Mariana", "Gonzalez Romero"], ["Blanca", "Puig Caballero"], ["Ena", "Babic"], ["Liron", "Sasson"], ["Anna", "Savchenko"], ["Camila", "Romero"], ["Ziyi", "Yang"], ["Rosie", "Johanson"], ["Eva", "Nyikos"], ["Glauka", "Carvajal Vicente"], ["Ana Paula", "Leal"], ["Berta", "Acero Garcia"], ["Miriam Bianca", "Bulgaru"], ["Vivian", "Wolff"], ["Maria Alexandra", "Giura"], ["Tessah", "Andrianjafitrimo"], ["Irene", "Lavino"], ["Alana", "Lolaeva"], ["Ornella", "Garavani"], ["Christina", "Schoener"], ["Ana M", "Becerra"], ["Meritxell", "Perera Ros"], ["Nency", "Chipan"], ["Elyse", "Lavender"], ["Liza", "Lebedzeva"], ["Aida", "Arafa"], ["Lara", "Escauriza"], ["Teodora", "Sabljarevic"], ["Karla", "De La Luz Montalvo"], ["Mariya", "Taukumova"], ["Shamika", "Dhar"], ["Anna", "Kadagidze"], ["Michela", "Xibilia"], ["Nicole", "Petchey"], ["Laura", "Rincon"], ["Darya", "Possokhova"], ["Matea", "Mihaljevic"], ["Alessia", "Dauria"], ["Wanda", "Rodriguez"], ["Valeriya", "Zeleva"], ["Sara", "Lizariturry"], ["Karina Kristina", "Vyrlan"], ["Mia", "Rabinowitz"], ["Jovana", "Jankovic"], ["Laura", "Fitzgerald"], ["Chiara", "Merico"], ["Djasmine", "Garnacho"], ["Louise Line", "Odet"], ["Kristina Tina", "Godec"], ["Lena", "Ruppert"], ["Mary", "Lewis"], ["Maheen", "Dada"], ["Trisha", "Sundaram"], ["Usue Maitane", "Arconada"], ["Delaney", "Nothaft"], ["Viktoria", "Bardarova"], ["Jana", "Lazarevic"], ["Tasha", "Cacciato"], ["Hyojin", "Kong"], ["Allison", "Bojczuk"], ["Carolin", "Nonnenmacher"], ["Subin", "Park"], ["Anastasia", "Tsyganova"], ["Nikola", "Novotna"], ["Wl Joanne", "Koh"], ["Lola", "Asis Espuche"], ["Dorthea", "Faa Hviding"], ["Nevena", "Georgieva"], ["Karthiga", "Thavarajasingam"], ["Delfina", "Glorioso"], ["Bojana", "Jovanovic"], ["Sissi", "Kroustalaki"], ["Senay", "Ince"], ["Ludmilla", "Samsonova"], ["Livia", "Kraus"], ["Fanny", "Stollar"], ["Ziyin", "Zhu"], ["Darya", "Shevchenko"], ["Claudia", "Hoste Ferrer"], ["Franziska Anna", "Hotter"], ["Nina Rebecca", "Hotter"], ["Sofia", "Kenin"], ["Casandra", "Metzer"], ["Angelica", "Raggi"], ["Valentina", "Dancenco"], ["Mariam", "Bayatyan"], ["Sabrina", "Bouheddi"], ["Defne", "Basbakkal"], ["Florencia", "Paez"], ["Maria Del Rosario", "Vazquez"], ["Vivien", "Klein"], ["Miriam", "Siljic"], ["Kimberley", "Gintrand"], ["Marija", "Jovicic"], ["Jiaxue", "Zang"], ["Elisa", "Patta"], ["Marina", "Cozac"], ["Tamara", "Milosevic"], ["Arely Estefania", "Vilchis Sanchez"], ["Marthe Eugenie", "Sime"], ["Jessica", "Crivelletto"], ["Katarzyna", "Kubicz"], ["Rocio Macarena", "Parodi"], ["Diletta", "Paperini"], ["Wushuang", "Zheng"], ["Sachi", "Belwal"], ["Vanesa", "Pappa"], ["Mir", "Ambaye"], ["Hanna", "Yedzelkina"], ["Olga", "Zavarotnaya"], ["Anna", "Kalinskaya"], ["Mei", "Otsuka"], ["Daniela", "Vukovic"], ["Medina", "Sahinagic"], ["Prachi", "Sinha"], ["Linda", "Ohanyan"], ["Taylor", "Bridges"], ["Maria Aurelia", "Scotti"], ["Shubhi", "Dwivedi"], ["Andreea Giorgiana", "Tupan"], ["Wei", "Tang"], ["Polina", "Malykh"], ["Julia", "Candiotto"], ["Dzenita", "Zverotic"], ["Daniela", "Cozzi"], ["Shiraz", "Bronstein"], ["Nina", "Alibalic"], ["Lucia", "Bronzetti"], ["Monika", "Pavlaskova"], ["Anna", "Sedinkina"], ["Manel", "Refaa"], ["Tamar", "Shoshani"], ["Anastasia", "Detiuc"], ["Michaela", "Bayerlova"], ["Lola", "Benedetti"], ["Martina", "Fricova"], ["Magdalena", "Radkova"], ["Vanshika", "Sawhney"], ["Mira", "Antonitsch"], ["Elodie", "Leune"], ["Risa", "Fukushige"], ["Lindsay", "Song"], ["Adilya", "Isabekova"], ["Jade", "Lewis"], ["Meiting", "Liu"], ["Hanna", "Kryvatulava"], ["Phenomena", "Radovcic"], ["Mari Cruz", "Garcia Sanchez"], ["Hsiang Wen", "Huang"], ["Hanna", "Sokal"], ["Weronika Jasmina", "Forys"], ["Aylen", "Hubeaut"], ["Anastasia", "Bursa"], ["Daniela", "Ramirez"], ["Alvina", "Lai"], ["Ema", "Lazic"], ["Lauren", "Dowling"], ["Malika", "Auger Aliassime"], ["Xianlin", "Zeng"], ["Yuseung", "Suh"], ["Alicia", "Herrero Linana"], ["Keren", "Rozen"], ["Sean", "Lodzki"], ["Gorana", "Kadijevic"], ["Zhanelya", "Turarbek"], ["Sihem", "Sahli"], ["Maria", "Naoum"], ["Kristina", "Miletic"], ["Harsha Sai", "Challa"], ["Monique", "Belovukovic"], ["Ines", "Ibbou"], ["Sofiya", "Esterman"], ["Katherine", "Sebov"], ["Viktoriia", "Kalinina"], ["Alexandra", "Sanford"], ["Janice", "Shin"], ["Pei Ju", "Chien"], ["Nicole", "Bunea"], ["Zanya Manola", "Sanchez"], ["Philippine", "Picard"], ["Dominique", "Schaefer"], ["Hristina", "Djokic"], ["Monica", "Cappelletti"], ["Kelia", "Le Bihan"], ["Tamara", "Arnold"], ["Nandini", "Sharma"], ["Marta", "Bettinelli"], ["Maya", "Tahan"], ["Sara", "Cvorovic"], ["Zhou", "Mingjun"], ["Diana", "Belalova"], ["Ekaterina", "Trashchenko"], ["Wanyu", "Tang"], ["Ares", "Llobera Irun"], ["Arina", "Taluenko"], ["Tatiana", "Nikolaeva"], ["Vanessa", "Wong"], ["Stanislava", "Starostoyants"], ["Anastasia Evgenyevna", "Nefedova"], ["Muazzez", "Demirci"], ["Charlotte", "Robillard Millette"], ["Inbar", "Cohen"], ["Ekaterina", "Kazionova"], ["Niditra", "Rajmohan"], ["Tijana", "Spasojevic"], ["Maria", "Galiy"], ["Rocio", "Safont Branchadell"], ["Alisa", "Deen"], ["Carolin", "Jung"], ["Inasse", "Hamouti"], ["Kariann", "Pierre Louis"], ["Radina", "Rakic"], ["Siqi", "Cao"], ["Luisa", "Pelayo"], ["Schena", "Benamar"], ["Chen", "Wang"], ["Anna", "Makarova"], ["Laura", "Bente"], ["Vasavi", "Ganesan"], ["Rukshika", "Wijesooriya"], ["Jovana", "Gvozdenovic"], ["Bojana", "Vuksan"], ["Yufei", "Long"], ["Milena", "Amedieva"], ["Nadezhda", "Sedysheva"], ["Karla", "Contreras"], ["Maria", "Soler Valverde"], ["Laylo", "Bahodyrova"], ["Arianna Maria", "Stagni Lailla"], ["Alejandra", "Morales"], ["Hanna", "Levina"], ["Sarah", "Funedda"], ["Shauna", "Casey"], ["Natalia", "Garcia Molina"], ["Seira", "Shimizu"], ["Maria", "Toma"], ["Manuela Stephania", "Cruz Rodriguez"], ["Georgie", "Walker"], ["Catalina", "Medici"], ["Yui", "Chikaraishi"], ["Meredith G", "Jones"], ["Katharina", "Kukaras"], ["Sara", "Ramirez"], ["Magdalena", "Pantuckova"], ["Anastasiia", "Gevel"], ["Jada", "Robinson"], ["Lara", "Salden"], ["Yu Tong", "Tang"], ["Victoria", "Walter"], ["Valentina", "Gonzalez Ramirez"], ["Yi", "Wang"], ["Kassandra", "Davesne"], ["Gitte", "Heynemans"], ["Napharat", "Swangkaew"], ["Nika", "Shytkouskaya"], ["Nadia", "Justiniano"], ["Medhira", "Samarasinghe"], ["Elena", "De Santis"], ["Ingrid", "Di Carlo"], ["Shrishti", "Daas"], ["Camille", "Verden Anderson"], ["Florencia", "Devincenti"], ["Ramya", "Natarajan"], ["Ksieniia", "Rudenko"], ["Sofia", "Johansson"], ["Le", "Zhao"], ["Ashley", "Kratzer"], ["Yulia", "Almiron Solano"], ["Matilda", "Lenngren"], ["Natalie", "Kohoutkova"], ["Isabella", "Montini"], ["Tzarina", "Tuen Matthews"], ["Giana", "Cormos"], ["Nastja", "Rettich"], ["Lenka", "Piskova"], ["Eimear", "Maher"], ["Michaela", "Haet"], ["Rosanna", "Maffei"], ["Ioana", "Guna"], ["Eimi", "Friant"], ["Alina", "Karazhova"], ["Lucie", "Wargnier"], ["Mouna", "Idlkadi"], ["Aanandita", "Gupta"], ["Altea", "Ricci"], ["Nitzan", "Bruner"], ["Alexandra", "Bozovic"], ["Alona", "Kruglov"], ["Boba", "Kotlica"], ["Aza", "Petrova"], ["Sara", "Gambogi"], ["Tamara", "Bojanic"], ["Klara", "Mrcela"], ["Yuval", "Keren"], ["Momoka", "Chimura"], ["Laila", "Elnimr"], ["Daria", "Zheludchenko"], ["Mika", "Misgav"], ["Zeel", "Desai"], ["Isha", "Budwal"], ["Guiomar", "Maristany Zuleta De Reales"], ["Alessandra", "Traub"], ["Anna Lena", "Neuwirth"], ["Marta", "Magalhaes"], ["Nora Lima", "Dahl"], ["Barbara", "Huyskes"], ["Rebecca", "Ehn"], ["Tomiris", "Koshmukhanova"], ["Lorena", "Marruffo"], ["Sidal", "Ak"], ["Nermeen", "Shawky"], ["Maria Vittoria", "Viviani"], ["Olivia", "Robert"], ["Dana Katherine", "Santiago Benavides"], ["Maria", "Mikhaylova"], ["Ciney", "Bekker"], ["Catalina", "Bloch"], ["Daniela Alejandra", "La Fuente Strassburger"], ["Amelie", "Boy"], ["Daria", "Kuczer"], ["Victoria", "Tournebize"], ["Adrienn", "Zsitvay"], ["Bojana", "Markovic"], ["Iesha", "Shepherd"], ["Sofija", "Zecevic"], ["Jiatian", "Qi"], ["Hind", "Abdelouahid"], ["Esther", "Lopez Alcaraz"], ["Tina", "Sojkova"], ["Paulina", "Cota"], ["Megan", "Davies"], ["Nao", "Shimoji"], ["Marta", "Paigina"], ["Isidora", "Zivkovic"], ["Xiangruyi", "Ji"], ["Xinyu", "Jiang"], ["Sakura", "Hondo"], ["Petra", "Hule"], ["Marta", "Oliveira"], ["Karolina", "Szmit"], ["Ylena", "In Albon"], ["Natasha", "Irani"], ["Sangeeta", "Roopan"], ["Miranda", "Ramirez"], ["Madeline", "Meredith"], ["Marcelle", "Cirino"], ["Pauline", "Dore"], ["Olivia", "Rohrbacher"], ["Tara", "Damnjanovic"], ["Meredith", "Roberts"], ["Katarina", "Sasaroga"], ["Camila", "Millan Santacruz"], ["Steph", "Booth"], ["Jiakang", "Li"], ["Zoe", "Richard"], ["Tinkara", "Kovac"], ["Jia Qi", "Yang"], ["Cecilia", "Engback"], ["Shaline Doreen", "Pipa"], ["Isabel", "Iglesias Prieto"], ["Fernanda", "Labrana"], ["Mar", "Gendra Felip"], ["Anezka", "Bartosova"], ["Lee", "Barnard"], ["Zani", "Barnard"], ["Birdem", "Oz"], ["Maria Celeste", "Lamagni"], ["Camilla", "Ciaccia"], ["Florencia Natalia", "Grieco"], ["Maria Jose", "Zacarias"], ["Alexia", "Carlone"], ["Andreea Amalia", "Rosca"], ["Jo", "Weisen"], ["Sofia", "Gorovits"], ["Kylie", "Mckenzie"], ["Polina", "Golubovskaya"], ["Katie", "Swan"], ["Anastasiya", "Joyner"], ["Jenny", "Duerst"], ["Anna", "Ukolova"], ["Mixcoatl", "Trabulse Garcia"], ["Tea", "Jezidzic"], ["Eva Marie", "Voracek"], ["Itza", "Trabulse Garci"], ["Arlinda", "Rushiti"], ["Emelie Luisa", "Schwarte"], ["Valeriia", "Bazhanova"], ["Tatiana", "Pieri"], ["Mikaela", "Molina Bugarija"], ["Carolina", "Bulatovic"], ["Pranjala", "Yadlapalli"], ["Aastha", "Dargude"], ["Leia", "Balkevarn"], ["Palina", "Padabed"], ["Rachel", "Zipfel"], ["Ludovica", "Infantino"], ["Arianna", "Capogrosso"], ["Ekaterina", "Korzhova"], ["Victoria", "Flores"], ["Paola", "Exposito Diaz Delgad"], ["Milena", "Avetisyan"], ["Anna", "Slovakova"], ["Anna", "Tonoyan"], ["Mina Adelin", "Pedersen"], ["Yusta", "Dorofeeva"], ["Mihaela", "Kaftanova"], ["Snehal", "Mane"], ["Alika", "Ismailova"], ["Isolde", "De Jong"], ["Silvia", "Saccani"], ["Vivien", "Abraham"], ["Catherine Cartan", "Bellis"], ["Nicole", "De O Crispino De Souza"], ["Mia", "Mijatovic"], ["Mako", "Ganaha"], ["Halla", "Alajeely"], ["Francescamaria", "Pannarale"], ["Serena", "Buonaccorso"], ["Anastasia", "Abramyan"], ["Alexandra", "Parra"], ["Bronte", "Murgett"], ["Victoria", "Saldh"], ["Lalita", "Devarakonda"], ["Olivia Alexandra", "Placzek"], ["Nino", "Memishishi"], ["Morgan", "Coppoc"], ["Klara", "Hajkova"], ["Kristina", "Kislyak"], ["Ines", "Milosevic"], ["Dea", "Lako"], ["Tania Andrada", "Mare"], ["Eden Sophie", "Schlagenhauf"], ["Famke", "Wilhelm"], ["Madison", "Gallegos"], ["Anastasia", "Ushakova"], ["Annalisa", "Molino"], ["Evelyne Christelle Atticia", "Tiron"], ["Rana", "Essam"], ["Soomin", "Kim"], ["Yarden", "Akler"], ["Ai Qi", "Chen"], ["Adrianna", "Sosnowska"], ["Jana", "Bojovic"], ["Flavia", "Gutierrez"], ["Matea", "Mamic"], ["Polina", "Bakhmutkina"], ["Gerda", "Zykute"], ["Dominique", "Meyer"], ["Nicole Taylor", "Pafundi"], ["Mahiro", "Date"], ["Lucie", "Devier"], ["Malin", "Falk"], ["Nurseda", "Akovalier"], ["Julita", "Saner"], ["Lucelena", "Hoyo"], ["Sydney", "Van Alphen"], ["Jiaying", "He"], ["Radia", "Lalami"], ["Lixin", "Wang"], ["Annick", "Melgers"], ["Nidhi", "Surapaneni"], ["Mathilde", "Trigaux"], ["Giulia", "Turconi"], ["Elisa Teodora", "Sararu"], ["Ysabel", "Gonzalez Rico"], ["Alexandra", "Zaicenco"], ["Janina", "Scheffbuch"], ["Alena", "Kovaleva"], ["Katarina", "Marinkovikj"], ["Sofia", "Munera Sanchez"], ["Anusha", "Kondaveeti"], ["Jitasha", "Shastri M"], ["Nicole", "Coopersmith"], ["Maria Jose", "Portillo Ramirez"], ["Kelly", "Chen"], ["Ellie Rose", "Griffiths"], ["Selin GLseren", "Simsek"], ["Claudia", "Kieffer"], ["Kathleen", "Biong Percegona"], ["Ryan", "Peus"], ["Oumeima", "Charrad"], ["Ema", "Vasic"], ["Kimika", "Sakata"], ["Lilya", "Hadab"], ["Neta", "Berman"], ["Alice", "Di Matteo"], ["Andrea", "Hernando Gutierrez"], ["Thai Sa Grana", "Pedretti"], ["Mariana", "Borges"], ["Anastasia", "Gasanova"], ["Seone", "Mendez"], ["Nadia", "Van Heerden"], ["Anastasiya", "Gorbacheva"], ["Johana", "Markova"], ["Ginevra", "Peiretti"], ["Stefani", "Arsova"], ["Afroditi", "Tzanopoulou"], ["Rina", "Tateyama"], ["Meible", "Chi"], ["Maria", "Casas Blas"], ["Yuka", "Hosoki"], ["Irina", "Lapustina"], ["Fariza", "Abdullaeva"], ["Habiba", "Khaled Aly"], ["Georgina", "Axon"], ["Wiktoria", "Kulik"], ["Minette", "Van Vreden"], ["Marcelina", "Podlinska"], ["Evgeniya", "Levashova"], ["Jodie Anna", "Burrage"], ["Anastasia", "Mikheeva"], ["Anastasia", "Veselova"], ["Teresia", "Londol"], ["Lourdes", "Sprinckmoller"], ["Lucia", "Natal Gomez"], ["Martina", "Bokulic"], ["Marharyta", "Smolyak"], ["Daria", "Shelomentseva"], ["Andiyo", "Inwang"], ["Adelaide", "Maesfranckx"], ["Carmen", "Schultheiss"], ["Vilma", "Berglund"], ["Luna", "Meers"], ["Andreea", "Stanescu"], ["Francesca", "Denti"], ["Carolina", "Torrico"], ["Salma", "El Garhi"], ["Zainab", "Bendahhou"], ["Anna Soffia", "Gronholm"], ["Izabela Gabriela", "Novac"], ["Avital", "Vulf"], ["Denisa", "Pospisilova"], ["Agustina Belen", "Diaz"], ["Ulyana", "Grib"], ["Csenge", "Furak"], ["Katarina", "Ljujic"], ["Moira Valeria", "Miranda"], ["Makenzie", "Myers"], ["Ye Xin", "Ma"], ["Yanni", "Liu"], ["Sina", "Zuger"], ["Adi", "Spiegelman"], ["Angie", "Laporal"], ["Irem", "Kaftan"], ["Irma Elita", "Evania"], ["Mei", "Yamaguchi"], ["Alessandra", "Maya Thompson"], ["Valentine", "Bacher"], ["Riley", "Mcquaid"], ["Taylor", "Gruber"], ["Maria Paula", "Uhrich"], ["Kamilla", "Bolatova"], ["Aleksandra", "Kasatkina"], ["Paulina Ela", "Mihokova"], ["Sybella", "Garvin"], ["Elena", "Rybakina"], ["Aleksandra", "Kulik"], ["Mara", "Vasiliev"], ["Kintan Pratiwi", "Anwar"], ["Kateryna", "Popova"], ["Alexandra", "Almborg"], ["Sol Maria", "Terracina"], ["Carla", "Hassaine"], ["Alina", "Povidalo"], ["Tereza", "Prochazkova"], ["Brooke", "Winley"], ["Valeriya", "Denisenko"], ["Franziska Marie", "Ahrend"], ["Ellie", "Tsimbilakis"], ["Mila", "Hartig"], ["Astrid Wanja", "Brune Olsen"], ["Noa", "Lasry"], ["Nagomi", "Higashitani"], ["Maryna", "Chernyshova"], ["Sonia", "Poveda Marsal"], ["Valeriya", "Yushchenko"], ["Himani", "Mor"], ["Isabel", "Donaldson"], ["Anjelika", "Vlasenkova"], ["Veronika", "Koberlingova"], ["Erika", "Botalieva"], ["Marketa", "Vondrousova"], ["Maria Sol", "Zeyen"], ["Shuyue", "Ma"], ["Alisha", "Reayer"], ["Alexandra", "Belaya"], ["Tizia", "Brocks"], ["Yesica", "De Lucas"], ["Marion", "Chatenet"], ["Anna Marija", "Bukina"], ["Susanna", "Giovanardi"], ["Nefisa", "Berberovic"], ["Victoria", "Rey"], ["Sofiya", "Kuzina"], ["Martina", "Kudelova"], ["Suzan", "Lamens"], ["Arina", "Amaning"], ["Federica", "Bilardo"], ["Hazal", "Karaaliler"], ["Sofia", "Ayuso"], ["Emmanuelle", "Girard"], ["Ipek", "Oz"], ["Shelly", "Krolitzky"], ["Mccartney", "Kessler"], ["Ana", "Biskic"], ["Malaika Alex", "Fernandes"], ["Angela", "Fita Boluda"], ["Franziska", "Kommer"], ["Laura", "Gil Lerin"], ["Romana", "Tarajova"], ["Georgia Andreea", "Craciun"], ["Anastazja", "Rosnowska"], ["Fang Hsien", "Wu"], ["Emma", "Lene"], ["Julia", "Saving"], ["Sandra", "Azorin Vilella"], ["Yumi", "Takaichi"], ["Cagla", "Badem"], ["Claudia", "Bartolome Ortiz"], ["Ecaterina", "Ivasco"], ["Yelyzaveta", "Rachenko"], ["Dominika", "Paczena"], ["Chiara", "Catini"], ["Dami", "Lee"], ["Amanda", "Meyer"], ["Maria", "Mateas"], ["Sofia", "Sewing"], ["Mikayla", "Parks"], ["Zaklin", "Bokan"], ["Celine", "Kern"], ["Ana", "Martinez Bencomo"], ["Luna", "Milovanovic"], ["Michaela", "Gordon"], ["Sadaf", "Sadeghvaziri"], ["Lauryn", "John Baptiste"], ["Jaeda", "Daniel"], ["Rishika", "Ravindran"], ["Kim", "Fontana"], ["Somer", "Dalla Bona"], ["Michelle", "Janis"], ["Bianca", "Vitale"], ["Sabina", "Smirnova"], ["Vlada", "Medvedcova"], ["Dakshata", "Girishkumar Patel"], ["Daria", "Orichkevitch"], ["Paola", "Landin Lopez"], ["Pamela", "Hernandez"], ["Anna", "Bowtell"], ["Angeles", "Moreno Barranquero"], ["Ginelle  Michelle", "Samson"], ["Jiahe", "Cai"], ["Mariella", "Minetti"], ["Sandra", "Bozinovic"], ["Rebeka", "Masarova"], ["Natalija", "Popovic"], ["Victoria", "Emma"], ["Gaelle", "Ratianarimanana"], ["Ivon", "Mihaleva"], ["Selin", "Karaer"], ["Caroline", "Szabo"], ["Alina", "Kislitskaya"], ["Sharmada", "Iyer"], ["Diana", "Bakuta"], ["Urska", "Velec"], ["Jule", "Niemeier"], ["Nastasia", "Jedrychowski"], ["Jasmine", "Boyd"], ["Lorena", "Vano  Martin"], ["Lily", "Ghodrati"], ["Poschanun", "Warakulnukroh"], ["Leonor", "Meliveo Saragusti"], ["Camilla", "Priuli"], ["Elisa", "Visentin"], ["Yuliya", "Kim"], ["Sofija", "Mandic"], ["Merel", "Hoedt"], ["Frana", "Ugarkovic"], ["Gabriella", "Akopian"], ["Sabrina Mary", "Woll"], ["Silvia", "Bordes Caselles"], ["Eliza", "Omirou"], ["Imren", "Bilgic"], ["Malene", "Helgo"], ["Vitoria", "Okuyama"], ["Ines Belkis", "Alimoussa"], ["Mai", "Hontama"], ["Anna", "Stefani"], ["Tatiana", "Simova"], ["Emily", "Appleton"], ["Katerina", "Filip"], ["Neri", "Cohen"], ["Defne", "Olcay"], ["Eva", "Guerrero Alvarez"], ["Vasilisa", "Mikhaylova"], ["Caragh", "Courtney"], ["Angela", "Charles Alfred"], ["Magdalini", "Adaloglou"], ["Lauren", "Gish"], ["Inci", "Ogut"], ["Noelia", "Bouzo Zanotti"], ["Julieta", "Albornoz"], ["Marta", "Perez Mur"], ["Eva", "Alexandrova"], ["Ebba", "Rosberg"], ["Amina", "Anshba"], ["Zhijie", "Ma"], ["Lisa", "Zang"], ["Pareen", "Shivekar"], ["Daryna", "Kovalenko"], ["Agnes Ornella", "Biba"], ["Paula", "Baranano"], ["Shivani", "Manjanna"], ["Dilara", "Spicer"], ["Andrea", "Arratia Fernandez"], ["Zhima", "Du"], ["Alexandra", "Alegre Ferre"], ["Georgia", "Gulin"], ["Teodora", "Golubovic"], ["Adelina", "Baravi"], ["Peyton", "Pesavento"], ["Nina", "Kolar"], ["Daniela", "Flores Gerez"], ["Advaitas", "Saravanan"], ["Jaimee", "Fourlis"], ["Penelope", "Abreu"], ["Donnaroza", "Gouvernante"], ["Antje", "Rubbrecht"], ["Mathilda", "Vidgren"], ["Sofia", "Carlsson"], ["Cameron", "Morra"], ["Adriana", "Marikova"], ["Lea", "Boskovic"], ["Petra Maria", "Kerdikova"], ["Katrina", "Sammut"], ["Chelsea", "Vanhoutte"], ["Martina", "Girardi"], ["Satsuki", "Takamura"], ["Maria", "Viarkhusha"], ["Nafees Bano", "Syed"], ["Mukadas", "Yussupova"], ["Asli", "Yucebilgin"], ["Maria Gabriela", "Linares De Faria"], ["Viktoria", "Surova"], ["Kayla", "Day"], ["Alexandra", "Dubrovina"], ["Katie", "Lafrance"], ["Yunuen", "Elizarraras Bahena"], ["Karolina", "Hakala"], ["Teresa", "Franco Dias"], ["Aleksandra", "Kuznetsova"], ["Anastasia", "Konstantinova"], ["Lily", "Reynolds"], ["Madoka", "Tominaga"], ["Timea", "Pavlickova"], ["Jennifer", "Luikham"], ["Tamara", "Musulbes"], ["Nathalia", "Wolf Gasparin"], ["Nikola", "Neumannova"], ["Ajda", "Bukovec"], ["Yulia", "Shishova"], ["Milana", "Lysova"], ["Polina", "Nazarchuk"], ["Hanine", "Boudjadi"], ["Deepshikha", "Saw"], ["Monika", "Kilnarova"], ["Zorica", "Spasojevic"], ["Anna", "Bright"], ["Zarema", "Mekhtieva"], ["Angelica Maria", "Vargas Saavedra"], ["Vicky Irma Margaretha", "Oktaviana"], ["Salma", "Ziouti"], ["Noramon", "Tacharungroj"], ["Agustina", "Rimoldi Godoy"], ["Dragana", "Radisic"], ["Helene", "Heiberg"], ["Putri Sanjungan", "Insani"], ["Mouna", "Bouzgarrou"], ["Ya Yun", "Pai"], ["Lara", "Schmidt"], ["Alana", "Tuayeva"], ["Laura", "Barona"], ["Berfu", "Cengiz"], ["Komola", "Umarova"], ["Tamara", "Racine Beauchamp"], ["Sanja", "Fabijancic"], ["Marta", "Vicens Miquel"], ["Ioana", "Bogdan"], ["Rebeka Margareta", "Mertena"], ["Ashley", "Lahey"], ["Haruna", "Arakawa"], ["Jimena Paula", "Garbino"], ["Alejandra", "Garmendia"], ["Amelie Carolin", "Kurpiers"], ["Zinovia", "Vaneva"], ["Alara", "Sener"], ["Zuzanna", "Wilk"], ["Anasztazia", "Fouraev"], ["Priyachanok", "Sukkanha"], ["Nora", "Ayala Serra"], ["Sofya", "Dobronevskaya"], ["Anna", "Ureke"], ["Angelina", "Shakhraychuk"], ["Jennifer", "Timotin"], ["Albertina", "Giacomino"], ["Alina", "Gazizova"], ["Margaux", "Orange"], ["Alexandra", "Tutecky"], ["Novela Rezha", "Millenia Putri"], ["Gabriela Nicole", "Tatarus"], ["Mihika", "Yadav"], ["Naiara", "Uriarte Morillas"], ["Lillian", "Gabrielsen"], ["Kalpaka", "Pradip"], ["Bhargavi", "Kalaga"], ["Anais", "Defossez"], ["Anastassiya", "Sharapova"], ["Marie", "Vicente"], ["River", "Hart"], ["Jacqueline", "Boepple"], ["Karin", "Hiraoka"], ["Valentina", "Giavazzi"], ["Maria", "Tyrina"], ["Maria", "Ryshchina"], ["Julie", "Ball"], ["Anastasia", "Golubeva"], ["Maria Jazmin", "Amicuzi"], ["Aleksa", "Cveticanin"], ["Zuleykha", "Safarova"], ["Ekaterina", "Vishnevskaya"], ["Lea", "Romain"], ["Sophie", "Gerits"], ["Tanit", "Lopez Lopez"], ["Sofya", "Zhuk"], ["Vered", "Bert"], ["Ekaterina", "Kurtukova"], ["Miku", "Kajishita"], ["Matilda", "Vainio"], ["Shakhnoza", "Khatamova"], ["Klara", "Silka"], ["Marija", "Radosavovic"], ["Sofia", "San Jose"], ["Helena", "Jansen Figueras"], ["Laura", "Cazacu"], ["Valeria Paulina", "Humpierres Novikow"], ["Imperia", "Martinez Mora"], ["Katerina", "Krizova"], ["Marina", "Bassols Ribera"], ["Greta Louise", "Von Peschke"], ["Olivia", "Peet"], ["Alessandra", "Mazzola"], ["Valeriya", "Deminova"], ["Laura", "Rijkers"], ["Varvara", "Kuksina"], ["Barbora", "Kolackova"], ["Camila", "Andrade"], ["Mi Zhuoma", "You"], ["Yidi", "Yang"], ["Kristina", "Vasina"], ["Veronika", "Pribylova"], ["Chiara", "Giaquinta"], ["Renee", "McBryde"], ["Elizaveta", "Volodko"], ["Tingting", "Pei"], ["Maria", "Ribeiro"], ["Ekaterina", "Davletova"], ["Linda", "Puppendahl"], ["Veronika", "Erjavec"], ["Emily", "Seibold"], ["Gaia", "Bandini"], ["Alejandra", "Aguilar"], ["Irina", "Cantos Siemers"], ["Elena", "Griessner"], ["Muskaan", "Ranjan"], ["Balsen", "Kaya"], ["Teodora", "Ristic"], ["Aylin", "Abdioglu"], ["Alena", "Yurchenko"], ["Perla", "Nieuwboer"], ["Petra", "Kucerova"], ["Marie", "Mattel"], ["Vera", "Markovic"], ["Carlotta", "Romito"], ["Laura", "Raimkhanova"], ["Sara", "Raimkhanova"], ["Hortencia", "Birnbaumer"], ["Simran", "Kejriwal"], ["Meiqi", "Guo"], ["Yinglak", "Jittakoat"], ["Oceane", "Mialon"], ["Lucie", "Kankova"], ["Kaitlin", "Staines"], ["Reka", "Szalai"], ["Ana", "Giraldi Requena"], ["Vivian", "Glozman"], ["Lina", "Glushko"], ["Emilie", "Lindh Gallagher"], ["Margarita", "Skryabina"], ["Karolina", "Jaskiewicz"], ["Katarina", "Kostic"], ["Tiffany", "Lagarde"], ["Juliana", "Castellanos Fernandez"], ["Ikram", "Rassif"], ["Jovana", "Vukovic"], ["Namu", "Zeren"], ["Watsachol", "Sawasdee"], ["Joleta", "Budiman"], ["Shakhzoda", "Asimova"], ["Hsin Yuan", "Shih"], ["Alisiya", "Soto"], ["Angela", "Rinaldi"], ["Juliette", "Bertagnol"], ["Chunxi", "Xin"], ["Shoval", "Fanani"], ["Derya", "Yahe"], ["Eun Se", "Jang"], ["Katyarina", "Paulenka"], ["Stephanie Judith", "Visscher"], ["Nina", "Rudiukova"], ["Julia", "Konishi Camargo Silva"], ["Isabella", "Perez"], ["Sara", "Urquizu"], ["Hannah", "Mccolgan"], ["Summer", "Yardley"], ["Alisa", "Savina"], ["Sofia", "Bezukladova"], ["Ellen", "Ashley"], ["Karla", "Kilic"], ["Ines", "Salvador"], ["Yusra", "Hegy"], ["Camila", "Rebelo Felizzola"], ["Suzuka", "Takoi"], ["Amanda", "Citre"], ["Evaggelia", "Kokkinaki"], ["Rayen", "Turki"], ["Ece", "Tan"], ["Evgenia", "Kokkinaki"], ["Lucia", "Marzal Martinez"], ["Evelin", "Taise Baziloni Gouveia"], ["Lea", "Dubois Rebiere"], ["Reka", "Farbas"], ["Martina", "Paladini Jennings"], ["Ulyana", "Shirokova"], ["Katarina", "Zavatska"], ["Lucia", "De La Puerta Uribe"], ["Kaaviya", "Balasubramanian"], ["Arina", "Karbolina"], ["Olivia", "Alfredsson"], ["Dainah", "Cameron"], ["Julia", "Rehberg"], ["Kristina", "Sorokolet"], ["Alexis", "Tensfeldt"], ["Amit", "Miran"], ["Andreea", "Prisacariu"], ["Abigail", "Cazarez Gonzalez"], ["Laura", "Prenant"], ["Maria Lourdes", "Carle"], ["Anca", "Craciun"], ["Mila", "Mejic"], ["Alyssa", "Mayo"], ["Svenja", "Ochsner"], ["Natalia", "Nikolopoulou"], ["Axana", "Mareen"], ["Sofia", "Ramirez"], ["Darya", "Mukhina"], ["Baijing", "Lin"], ["Yulia", "Starodubtsewa"], ["Emma", "Decoste"], ["Deniza", "Marcinkevica"], ["Ilana", "Tetruashvili"], ["Vaidehi", "Chaudhari"], ["Basak", "Akbas"], ["Anna", "Titova"], ["Sofia Nami", "Samavati"], ["Tejasvi", "Kate"], ["Anastasia", "Kulikova"], ["Yu", "Shan"], ["Isabela", "Campos Bifano"], ["Warona", "Mdlulwa"], ["Natalia", "Boltinskaya"], ["Emma", "Brust"], ["Adelaida", "Allakhverdiyeva"], ["Ainur", "Suleimenova"], ["I Hsuan", "Cho"], ["Ipek", "Cevik"], ["Valeriya", "Zhupanska"], ["Emna", "Fahmia"], ["Gergana", "Topalova"], ["Meiling", "Wang"], ["Megan", "Lombardi"], ["Wing Kiu Jacqueline", "Lam"], ["Polina", "Avdzhiyan"], ["Tamari", "Sumbadze"], ["Maria Paula", "Tobias"], ["Nell", "Miller"], ["Charmaine Shi Yi", "Seah"], ["Flaminia Maria", "Valci"], ["Dariya", "Detkovskaya"], ["Paula", "Arias Manjon"], ["Jordan", "Ortega Mendez"], ["Megan", "Forster"], ["Pei Hsuan", "Chen"], ["Ella", "Husrefovic"], ["Nevena", "Sokovic"], ["Aynur Cemre", "Aka"], ["Cristina", "Moll Alles"], ["Cherry", "Kim"], ["Radka", "Buzkova"], ["Mireille", "Moreau"], ["Hili", "Kronzon"], ["Ji Min", "Park"], ["Anastasia", "Kharitonova"], ["Nicole", "Conard"], ["Nada", "Dimovska"], ["Carla", "Girbau Romero"], ["Marie Perla", "Biansumba"], ["Denise Antonela", "Stoica"], ["Magdalena", "Santer"], ["Sri Sai Shivani", "K"], ["Laura", "Lopez Giese"], ["Sihem", "Bellahouel"], ["Natalia", "Pietras"], ["Julia", "Khamula"], ["Paulina", "Bednarczyk"], ["Sofia", "Shaykis"], ["Arushi", "Gupta"], ["Ana", "Castillo"], ["Mijeong", "Park"], ["Wing Sze", "Yu"], ["Noa", "Revivo"], ["Kolie", "Allen"], ["Amparo Del Pino", "Hernandez Alonso"], ["Molly", "Helgesson"], ["Alicia Liliana", "Rahem"], ["Prakriti", "Banwani"], ["Patricia", "Zeriu"], ["Alexandra", "Pisareva"], ["Radhika", "Yadav"], ["Elysia", "Bolton"], ["Yanin", "Wisitwarapron"], ["Adeline", "Lardinois"], ["Zhibek", "Kulambayeva"], ["Carlota", "Molina Megias"], ["Ekaterina", "Kholopenko"], ["Doga Selen", "Takunyaci"], ["Yasmin", "Mansouri"], ["Olga", "Helmi"], ["Lenka", "Stara"], ["Yuliya", "Mazur"], ["Vasilisa", "Polunova"], ["Kiara", "Petrovicka"], ["Noya", "Ohana"], ["Nastassia", "Chamoun"], ["Erika Abigail", "Gauto Martinez"], ["Ghizlane", "El Amrani Tchaha"], ["Pauline", "Demel"], ["Anastasia", "Bovolskaya"], ["Serena", "Dercole"], ["Leeloo", "Obrul"], ["Sofie Bomark", "Syversen"], ["Denisa Elena", "Gheorghe"], ["Florencia", "Massardo Brain"], ["Valentina", "Likic"], ["Mariia", "Skuba"], ["Kristina", "Pukhaeva"], ["Kristina", "Baran"], ["Annick", "Verhaar"], ["Sofia", "Bruno"], ["Sonja", "Keranen"], ["Zehra Lara", "Tekbas"], ["Lucia", "Quiterio"], ["Alexandra", "Hunter"], ["Isabelle", "Boulais"], ["Emeline", "Dartron"], ["Mileva", "Cardenas Serna"], ["Eliza", "Askarova"], ["Dilara Romy", "Kubak"], ["Sofia", "Blanco Andrade"], ["Alicia", "Melosch"], ["Georgia", "Drummy"], ["Francisca", "Jorge"], ["Melis", "Yasar"], ["Yuliya", "Hatouka"], ["Emilia", "Dejonckheere"], ["Ekaterina", "Lushnikova"], ["Selma Stefania", "Cadar"], ["Draginja", "Vukovic"], ["Riddhi", "Ramesh Sharma"], ["Jiawen", "Li"], ["Ann Cathrin", "Hummel"], ["Olesya", "Pervushina"], ["Estella", "Jaeger"], ["Maria Lota", "Kaul"], ["Ida", "Ferding"], ["Margo", "Landmann"], ["Teodora", "Mitrovic"], ["Priscila", "Baptista"], ["Alyvia", "Jones"], ["Anri", "Nagata"], ["Gulsina", "Khalimullina"], ["Zoe", "Imes"], ["Laura Sofia", "Rico Garcia"], ["Nikoleta", "Antoniou Karademitrou"], ["Jessie Jiaxin", "Gong"], ["Jayden", "Nielsen"], ["Clara", "Froget"], ["Destanee", "Aiava"], ["Eunhye", "Lee"], ["Alice", "Robbe"], ["Aneta", "Laboutkova"], ["Sofya", "Golubovskaya"], ["Mayssa", "Tebourbi"], ["Alisa", "Axyanova"], ["Katerina", "Tsygourova"], ["Iva", "Krivic"], ["Louise", "Wittouck"], ["Andrijana", "Stoilkovic"], ["Han Byeol", "Lee"], ["Maria", "Oliver Sanchez"], ["Dayana", "Yastremska"], ["Wanning", "Zhu"], ["Lisa Marie", "Lausecker"], ["Lana", "Kentchiashvili"], ["Francisca Emilia", "Vergara Jofre"], ["Marta", "Del Pino Maturano"], ["Jayci", "Goldsmith"], ["Tiphanie", "Fiquet"], ["Yang", "Lee"], ["Noa", "Liauw A Fong"], ["Lungile", "Ntuli"], ["Isabella", "Tcherkes Zade"], ["Chanel", "Janssen"], ["Mei Xu", "Wu"], ["Aneta", "Kladivova"], ["Ellie", "Douglas"], ["Tatiana", "Terwindt"], ["Maileen", "Nuudi"], ["Yasmine", "Wagner"], ["Maja", "Issler"], ["Anna", "Khudoley"], ["Claire", "Liu"], ["Danica", "Malan"], ["Alisa", "Grachova"], ["Xenia", "De Luna"], ["Ali", "Collins"], ["Elena", "Malygina"], ["Daria", "Solovyeva"], ["Francesca", "Gaida"], ["Jia", "Ren"], ["Mara", "Vidal"], ["Ekaterina", "Shalimova"], ["Julia", "Iglesias"], ["Anna Maria", "Jovanovic"], ["Nadja", "Ramskogler"], ["Lucia", "Cortez Llorca"], ["Marina", "Benito"], ["Julieanne", "Bou"], ["Ye Jin", "Kim"], ["Haruna", "Sakamoto"], ["Maria", "Manilova"], ["Oxi", "Gravitas Putri"], ["Polina", "Altukhova"], ["Nicole", "Nadel"], ["Avital", "Kandelis"], ["Ambre", "Feder"], ["Ariana", "Chan Baratau"], ["Svetlana", "Iansitova"], ["Justine", "Pysson"], ["Sophie", "Muntean"], ["Dariya", "Sovich"], ["Bianca", "Andreescu"], ["Gabriela Ana Maria", "Davidescu"], ["Gabriella", "Mujan"], ["Sanjeevani", "Patil"], ["Weronika", "Falkowska"], ["Anja", "Gal"], ["Giulia", "Peoni"], ["Neli", "Sunjic"], ["Mamiko", "Harada"], ["Camille", "Corenthy"], ["Mercedes", "Aristegui"], ["Camilla", "Ceppellini"], ["Nuria", "Brancaccio"], ["Rosa", "Vicens Mas"], ["Ann", "Li"], ["Elizaveta", "Avdonina"], ["Vasiliki", "Karvouni"], ["Daniela", "Baez Friedrich"], ["Maria Jose", "Reynaldo"], ["Sara", "Gvozdenovic"], ["Ana Paula", "Melilo"], ["Azul Agustina", "Pedemonti"], ["Yuki", "Ando"], ["Yasemin Ada", "Boru"], ["Angelina", "Fedorova"], ["Elizabeth", "Popova"], ["Salma", "Abdel Rahim"], ["Ruoyu", "Chen"], ["Maria Jose", "Hernandez Magro Quiroz"], ["Jimena", "Rodriguez Benito"], ["Loretto", "Villalba Rubio"], ["Anna", "Loughlan"], ["Taysia", "Rogers"], ["Shelly", "Bereznyak"], ["Deborah", "Raia"], ["Vanessa Olimpia", "Rauta"], ["Zara", "Lennon"], ["Maria Victoria", "Negoita"], ["Domenika", "Turkovic"], ["Kamilla", "Kokeladze"], ["Silvia Paulina", "Vilchis Sanchez"], ["Viktoria", "Glotova"], ["Enola", "Chiesa"], ["Mariona", "Perez Noguera"], ["Luminita", "Tutunaru"], ["Aurora", "Ciavarelli"], ["Judith", "Van Kessel"], ["Dalia", "Ahmed"], ["Maria", "Marnellou"], ["Paula", "Veyhle"], ["Costanza", "Traversi"], ["Samanta", "Villegas"], ["Olga", "Terletska"], ["Maria", "Pereyra Sellart"], ["Tal", "Zinn"], ["Jodie Annie", "Lawrence Taylor"], ["Dyane Estefania", "Barcena Del Bosque"], ["Ana", "Makatsaria"], ["Aino", "Alkio"], ["Elinor", "Storkaas"], ["Nikoletta", "Muller"], ["Dalila", "Said"], ["Meriem", "Turki"], ["Irem", "Soylu"], ["Adriana", "Senkarova"], ["Gabriel", "Karatantcheva"], ["Ayumi", "Koshiishi"], ["Kathleen", "Kanev"], ["Yashu", "Yang"], ["Lizi", "Morgoshia"], ["Valentina", "Cvackova"], ["Natalie", "Slezakova"], ["Therese", "Ekdahl"], ["Yuxin", "Zhang"], ["Emily", "Welker"], ["Emmanouela", "Antonakis"], ["Leonarda", "Horvat"], ["Anda", "Karanusic"], ["Sabhyata", "Nihalani"], ["Varvara", "Gracheva"], ["Bianca", "Bevione"], ["Yasmine", "Bengebara"], ["Kristina", "Novak"], ["Ana", "Fernandez Villa"], ["Hei Ching Claudia", "Ng"], ["Caitlin", "Ward"], ["Bhavya", "Ramineni"], ["Renata", "Lombera"], ["Nicole", "Mossmer"], ["Elizaveta", "Zaritscaya"], ["Franziska", "Sziedat"], ["Tatiana", "Makarova"], ["Juliette", "Colard"], ["Taylor", "Johnson"], ["Benedetta", "Ivaldi"], ["Catherine", "Roche"], ["Ramona Eva", "Chivu"], ["Malkia", "Menguene"], ["Fadona Titalyana", "Kusumawati"], ["Kalliopi", "Gkouskou"], ["Hanna", "Tarlouskaya"], ["Daniela", "Vismane"], ["Eliz", "Maloney"], ["Lara", "Panfilov"], ["Rita Maria", "Bentes De Oliveira Pinto"], ["Mikaela", "Konstantinova"], ["Susan", "Salinas"], ["Nicole", "Knickerbocker"], ["Diana Maria", "Mihail"], ["Thea Sund", "Jacobsen"], ["Chelsea", "Kung"], ["Giulia", "Spicacci"], ["Danel", "Ashirova"], ["Cristina", "Torres Sanchez"], ["Gabriella", "Da Silva Fick"], ["Paula Andrea", "Coronado"], ["Chengyiyi", "Yuan"], ["Christina", "Berchtold"], ["Fidana", "Khalilzada"], ["Giulia", "La Rocca"], ["Simone", "Simas"], ["Sura", "Assadova"], ["Salma", "Ewing"], ["Katia Monserrat", "De La Garza Valdez"], ["Ana", "Stefanovic"], ["Suhana Sofia", "Mohd Adam Das"], ["Prarisa", "Rachdanone"], ["Arabella", "Koller"], ["Danai", "Petroula"], ["Kisa", "Yoshioka"], ["Julia", "Oczachowska"], ["Adela", "Joldic"], ["Ana", "Lantigua De La Nuez"], ["Eleonora", "Molinaro"], ["Alexandra", "Marina"], ["Giulia", "Carbonaro"], ["Elene", "Mchedlidze"], ["Carson", "Branstine"], ["Qianhui", "Tang"], ["Andreea", "Craciun"], ["Arielle", "Nealy"], ["Anastasia", "Iamachkine"], ["Mihaela Lorena", "Marculescu"], ["Anna", "Solovyeva"], ["Klaudia", "Fedosenkova"], ["Jessica", "Bruyns"], ["Itxaso", "Blanco Fernandez De Leceta"], ["Keyi", "Zhou"], ["Fiona", "Ganz"], ["Elizabet", "Hamaliy"], ["Lana", "Sipek"], ["Zorana", "Samardzic"], ["Francesca", "Jones"], ["Ivana", "Popovic"], ["Adele Diana", "Biba"], ["Olivia", "Sonnekus Williams"], ["Maria", "Oreshkina"], ["Barbara", "Quagliardi"], ["Shevita", "Aulana"], ["Wai Yiu", "Tsang"], ["Ilaria", "Sposetti"], ["Thitirat", "Kanaphuet"], ["Liubov", "Demidova"], ["Dina", "Chayka"], ["Tamara", "Malesevic"], ["Sofya", "Lansere"], ["Julia", "Vulpio"], ["Kanyalak", "Boonyarat"], ["Milica", "Vujovic"], ["En Shuo", "Liang"], ["Antonia", "Balzert"], ["Andrea Agostina", "Farulla Di Palma"], ["Karolina", "Berankova"], ["Adi", "Gavish"], ["Nasty", "Surkova"], ["Kanna", "Nishida"], ["Aurora", "Urso"], ["Abla", "El Kadri"], ["Zeynep", "Cakirer"], ["Manuela", "Hernandez"], ["Pamela", "Cohen"], ["Lisa", "Mays"], ["Maria", "SOLNYSHKINA"], ["Victoria", "Schnell Jacobsen"], ["Tiana", "Windbuchler"], ["Marcella", "Cruz"], ["Milana", "Semenova"], ["Alexandra", "Viktorovitch"], ["Diae", "El Jardi"], ["Paulina", "Engback"], ["Nicha", "Jitmanee"], ["Fran", "Booth"], ["Sara", "Yadav"], ["Ludovica", "Fusco"], ["Leonie", "Kung"], ["Victoria", "Mikhaylova"], ["Deeksha", "Manju Prasad"], ["Ania", "Hertel"], ["Aurora", "Zantedeschi"], ["Taisia", "Polyarush"], ["Stephanie", "Belovukovic"], ["Oleksandra", "Andrieieva"], ["Sofia", "Voll"], ["Chiara", "Fermi"], ["Viktoriia", "Dema"], ["Marily", "Canellopoulos"], ["Mila", "Saric"], ["Evangeline", "Du Toit"], ["Tuana", "Oz"], ["Yubarani", "Banerjee"], ["Syeda", "Gulras Begum"], ["Dagmar", "Zdrubecka"], ["Solomiya", "Rohovets"], ["Maria", "Fernandez Zaragoza"], ["Polina", "Goloputova"], ["Angel", "Macleod"], ["Joanne", "Zuger"], ["Akanksha A", "Bhan"], ["Lledo", "Tena Guzman"], ["Anhzelika", "Isaeva"], ["Elina", "Sharipova"], ["Alexandra Maria", "Staiculescu"], ["Lisa", "Piccinetti"], ["Kaja", "Juvan"], ["Celine", "Fritsch"], ["Lena", "Greiner"], ["Marianthi", "Tsesmetzi"], ["Emiliana", "Arango"], ["Tamara", "Barad Itzhaki"], ["Sarra", "Ata"], ["Shou Na", "Mu"], ["Alicia", "Alegre"], ["Marina", "Davtyan"], ["Shalimar", "Talbi"], ["Katherine", "Fleischman"], ["Brindtha", "Ramasamy"], ["Alice", "Viglianisi"], ["Anna", "TSELYKOVSKAYA"], ["Jennifer Rosa", "Dourado"], ["Jacquline", "Nylander Altelius"], ["Ryeong Gyeong", "Park"], ["Ekaterina", "Grib"], ["Simona", "Waltert"], ["Elisabeth", "Chantraine"], ["Sing Le", "Fan Chiang"], ["Svetlana", "Bubnova"], ["Dalayna", "Hewitt"], ["Mariya", "Ponomareva"], ["Ayumi", "Miyamoto"], ["Zejda", "Veljacic"], ["Nikolina", "Dzunov"], ["Maren", "Nordklev"], ["Sofya", "Treshcheva"], ["Anabel", "Aran Torrente"], ["Zhuoma", "Ni Ma"], ["Adrienn", "Horvath"], ["Alise", "Cernecka"], ["Priscilla", "Baron Zichar"], ["Xiaoxi", "Zhao"], ["Eleftheria", "Gkogkou"], ["Takalani", "Molaoa"], ["Alexandera", "Inozemtseva"], ["Ekaterina", "Ovcharenko"], ["Alycia", "Parks"], ["Oleksandra", "Balaba"], ["Andreea", "Velcea"], ["Irene", "Garceran"], ["Ebru Zeynep", "Yazgan"], ["Selin", "Ovunc"], ["Vitalia", "Stamat"], ["Lucianna", "Piedra"], ["Stephanie", "Bertschmann"], ["Chloe", "Cirotte"], ["Yasmeen", "Ghaoui"], ["Azaliya", "Badegyeva"], ["Saara", "Kunakunova"], ["Samantha", "Nanere"], ["Aleksandra", "Efremova"], ["Carmen Roxana", "Manu"], ["Vicky", "Van De Peer"], ["Maria Ignacia", "Yapur Lopez"], ["Nicole", "Khirin"], ["Timea", "Visontai"], ["Ares", "Teixido Garcia"], ["Maria Aran", "Teixido Garcia"], ["Evgeniya", "Burdina"], ["Emma Erin", "Kiernan"], ["Ellie", "Murphy"], ["Maayan", "Shtern"], ["Laetitia", "Pulchartova"], ["Manon", "Leonard"], ["Ines", "Benito"], ["Kseniya", "Yersh"], ["Oona", "Orpana"], ["Abigail", "Desiatnikov"], ["Zeynep", "Ay"], ["Gal", "Shemesh"], ["Martina", "Biagianti"], ["Olga", "Danilovic"], ["Rozalina", "Youseva"], ["Shir", "Bakshi"], ["Sarah", "Heckel"], ["Carmen", "Aizpurua Bernabe"], ["Adva", "Dabah"], ["Rebeca", "C Silva"], ["Alice", "Tubello"], ["Elena", "Milovanovic"], ["Angie Carolina", "Yepes Medina"], ["Christina", "Baer"], ["Heden", "Ly"], ["Nerea", "Guerra Santana"], ["Yuzuka", "Shimizu"], ["Anna", "Kubareva"], ["Daria", "Rakitskaya"], ["Sara", "Neves"], ["Raffaela", "Alhach"], ["Katherine", "Lyman"], ["Marta", "Gonzalez Ballbe"], ["Iariniaina", "Tsantaniony"], ["Yuki", "Naito"], ["Mariana", "Vargas Carrascal"], ["Catarina Castro", "Cerqueira"], ["Lavinia", "Lancellotti"], ["Lina", "Sachica"], ["Anja", "Draskovic"], ["Yaroslava", "Gadiatska"], ["Elisabeth", "Andryukhova"], ["Celine", "El Ghali"], ["Shani", "Dubinchik"], ["Carolina", "Cerowska"], ["Honami", "Sodeyama"], ["Victoria", "Allen"], ["Oleksandra", "Gorchanyuk"], ["Vivien", "Sandberg"], ["Hurricane Tyra", "Black"], ["Ayana", "Noguchi"], ["Marthina Diyani", "Schwencke"], ["Oumaima", "Aziz"], ["Zoe", "Hitt"], ["Gaini", "Ibrasheva"], ["Maria Florencia", "Urrutia"], ["Viktoria", "Morvayova"], ["Abigail", "Forbes"], ["Lynda", "Benkaddour"], ["Valeriya", "Olyanovskaya"], ["Nina", "Olyanovskaya"], ["Ting Pei", "Chang"], ["Sivan", "Raizman"], ["Andei", "Fukushige"], ["Elena", "Jamshidi"], ["Valentina Andrea", "Vasquez Pongruber"], ["Paula", "Joukanen"], ["Nesrine", "Troubia"], ["Ksenija", "Tmusic"], ["Caijsa Wilda", "Hennemann"], ["Valentina", "Gaggini"], ["Valentina", "Ryser"], ["Djihane", "Tefani"], ["Adrienn", "Nagy"], ["Clara", "Burel"], ["Avril", "Look"], ["Margaryta", "Bilokin"], ["Xiyu", "Wang"], ["Lizaveta", "Artsiomenka"], ["Iulia Bianca", "Ilinca"], ["Anastasia", "Potapova"], ["Andrea", "Cetkovic"], ["Amine", "Dik"], ["Rut", "Galindo"], ["Kristin", "Younes"], ["Marilyn", "Shekhter"], ["Taylor", "Dean"], ["Sabina", "Dadaciu"], ["Alexia", "Witthaus Vine"], ["Elena", "Di Battista"], ["Lina", "Shokry"], ["Luiza", "Fullana"], ["Sofia", "Epur"], ["Ya Hsin", "Lee"], ["Nazli Nader", "Redha"], ["Amina", "Lasheen"], ["Lulu", "Radovcic"], ["Nikol", "Dobrilova"], ["Nicole", "Bueno Sandoval"], ["Alice", "Amendola"], ["Alesya", "Yakubovich"], ["Azradeniz", "Comlek"], ["Ekin", "Ercetin"], ["Sada", "Nahimana"], ["Andjela", "Skrobonja"], ["Natalia", "Roca Ward"], ["Giorgia", "Di Muzio"], ["Hyeran", "Yun"], ["Aleksandra", "Pitak"], ["Liisa", "Vehvilainen"], ["Sherry", "Sherry Ayad Abd Elmalek Wassef"], ["Yi Tsen", "Cho"], ["Maria", "Pages Mere"], ["Riva", "Hondiashvili"], ["Anita", "Hutellier"], ["Tamara", "Cherkassova"], ["Reka", "Zadori"], ["Valentina", "Del Marco"], ["Jillian", "Taggart"], ["Camille", "Kirket"], ["Yasmine", "Mansouri"], ["Kristin", "Yordanova"], ["Anna", "Novikova"], ["Emma", "Navarro"], ["Elizabeth", "Mandlik"], ["Noor", "Omara"], ["Anamaria", "Kiszner Luca"], ["Buket", "Dogan"], ["Nicole Marlene", "Sanjon"], ["Rachida", "Berjane"], ["Laia", "Conde Monfort"], ["Karolina", "Kubanova"], ["Loudmilla", "Bencheikh"], ["Anne", "Knuettel"], ["Iga", "Swiatek"], ["Alexandra", "Vagramov"], ["Manar", "Charrouf"], ["Ana", "Shanidze"], ["Anastasiya", "Zaharova"], ["Anna", "Laguza"], ["Iveta", "Daujotaite"], ["Ruxandra", "Schech"], ["Martyna", "Habrych"], ["Kristina", "Milenkovic"], ["Salma", "Abdelbaset"], ["Mariia", "Bergen"], ["Ferdaous", "Bahri"], ["Shauna", "Heffernan"], ["Zoe", "Bourbotte"], ["Emma", "Nurgazieva"], ["Xinyu", "Cai"], ["Zeynep", "Erman"], ["Sara", "El Ghazouly"], ["Isabel", "Adrover Gallego"], ["Antonia", "Schmidt"], ["Feriel", "Mahbouli"], ["Burcak", "Ekin Yildiztekin"], ["Mahak", "Jain"], ["Oana Smaranda", "Corneanu"], ["Benedetta", "Prato"], ["Adelina", "Doguzova"], ["Funa", "Kozaki"], ["Anand Dharana", "Mudaliar"], ["Sophia", "Edwards"], ["Anna", "Siskova"], ["Katarina", "Trickovic"], ["Myriam", "Gheziel"], ["Camila Magali", "Romero"], ["Isabella", "Harvison"], ["Stefania", "Rogozinska Dzik"], ["Alexia", "Alvarez Gerochristodoulou"], ["Arina", "Solomatina"], ["Elizaveta", "Koklina"], ["Melody", "Todorova"], ["Vlada", "Koval"], ["Kexuan", "Zhou"], ["Elizabeth", "Scotty"], ["Lana", "Stefanovic"], ["Giuliana", "Liga"], ["Maram Mohamed", "Sharif"], ["Nikola", "Breckova"], ["Zoziya", "Kardava"], ["Katarina Duic", "Plumtree"], ["Eliza", "Eglit"], ["Joanna", "Garland"], ["Ksenia", "Domnina"], ["Alexandra Diana", "Braga"], ["Dorra", "Roumani"], ["Sophia", "Kermet"], ["Angela", "Diez Plagaro"], ["Nadja", "Bay Christians"], ["Nesrine", "Korso Feciane"], ["Lauren", "Cooper"], ["Aisha", "Kukushkina"], ["Alexandra", "Anttila"], ["Mariami", "Akhalaia"], ["Mana", "Kawamura"], ["Aida", "Garcia Mendez"], ["Tanysha", "Dissanayake"], ["Laura", "Ashley"], ["Anika", "Yarlagadda"], ["Caroline", "Furlaneto"], ["Mylene", "Halemai"], ["Moyuka", "Uchijima"], ["Gemma", "Heath"], ["Andreea Elena", "Iordachi"], ["Milana", "Maslenkova"], ["Zeynep Naz", "Ozturk"], ["Nicolle Andrea", "Gomez Romero"], ["Anna", "Baranovski"], ["Sai Dedeepya", "Yeddula"], ["Carolina", "Velazquez"], ["Alisa", "Yakimakho"], ["Diana", "Khodan"], ["Layne", "Sleeth"], ["Thasaporn", "Naklo"], ["Yasmina", "Karimjanova"], ["Leana", "Atlan"], ["Laure Line", "Glaude"], ["Fanni", "Gecsek"], ["Natthapat", "Piwbangruk"], ["Kamilla", "Rakhimova"], ["Ana Luiza", "Cruz"], ["Chloe", "Beck"], ["Amanda", "Anisimova"], ["Vladlena", "Samenkova"], ["Lara", "Biter"], ["Alexa", "Ryngler"], ["Koral", "Koldobski"], ["Najah", "Dawson"], ["Milica", "Bojic"], ["Alessia Beatrice", "Ciuca"], ["Alexandra", "Ferreira Da Silva"], ["Vlada", "Zvereva"], ["Nikol", "Docheva"], ["Barbara", "Dessolis"], ["Lucia", "Garrigues Melendez"], ["Xin Yu", "Wang"], ["Sanyukta", "Gawande"], ["Lilly Elida", "Haseth"], ["Jesse", "Hollins"], ["Valerie", "Litzell"], ["Peyton", "Stearns"], ["Anastasiya", "Belogrivceva"], ["Maja", "Makoric"], ["Lorena", "Alves Castellanos"], ["Maja", "Chwalinska"], ["Ivana", "Loncar Antic"], ["Shale", "Bouchard"], ["Mey", "Ayari"], ["Yekaterina", "Dmitrichenko"], ["Dana", "Ferreyra"], ["Assel", "Tuzelbekova"], ["Pilar", "Astigarraga Harper"], ["Nikki", "Redelijk"], ["Polina", "Lushnikova"], ["Laura", "Masic"], ["Nour", "Damergi"], ["Dolavee", "Tumthong"], ["Cristina", "Mayorova Bakhtina"], ["Havana", "Dauncey"], ["Daniella", "Medvedeva"], ["Ingrid Carolina", "Millan"], ["Ilay", "Yoruk"], ["Nuria", "Garrido Femenias"], ["Mariam", "Dalakishvili"], ["Anastasiya", "Poplavska"], ["Sarah", "Mar"], ["Isabella", "Bozicevic"], ["Mumtoza", "Mamadaliyeva"], ["Gozde", "Turhan"], ["Zoi", "Meers"], ["Caty", "Mcnally"], ["Selina", "Atay"], ["Jazmin", "Ortenzi"], ["Mihaela", "Djakovic"], ["Alessia", "Tagliente"], ["Jiangxue", "Han"], ["Adithya", "Karunaratne"], ["Xue", "Cao"], ["Valeriya", "Rozenkova"], ["Mariam Ashraf", "Mohamed Mostafa"], ["Imani", "Graham"], ["Maria Camila", "Osorio Serrano"], ["Jasmin", "Bruni"], ["Saara", "Orav"], ["Katie", "Volynets"], ["Anna", "Kalabukhova"], ["Tuana", "Tinaztepe"], ["Alexandra", "Vecic"], ["Ran", "Miyachi"], ["Angelina", "Melki"], ["Sevil", "Yuldasheva"], ["Alexandra", "Silna"], ["Shavit", "Kimchi"], ["Eva", "Lys"], ["Giulia", "Morlet"], ["Zeynep  Sena", "Sarioglan"], ["Nina", "Nikprelevic"], ["Anastasia", "Zakharova"], ["Lotta", "Heiskanen"], ["Fabiana", "Marmiroli"], ["Sumin", "Kim"], ["Matilde", "Mariani"], ["Judith", "Perello Saavedra"], ["Dayeon", "Back"], ["Kristyna", "Lavickova"], ["Ange Oby", "Kajuru"], ["Caterina", "Greco"], ["Luisa", "Meyer Auf Der Heide"], ["Maria Ines", "Fonte"], ["Manni", "Zhang"], ["Sara", "Ziodato"], ["Gaia", "Morganti"], ["Jana", "Knaab"], ["Elisa Andrea", "Camerano"], ["Chloe", "Compson"], ["Odul", "Okur"], ["Ludmila", "Kareisova"], ["Ana Maria", "Gonzalez Ruiz"], ["Ana Maria", "Zamfir"], ["Andrea", "Sauco Roque"], ["Valentina", "Shleyn"], ["Carol", "Plakk"], ["Lina", "Sfar"], ["Peppi", "Ramstedt"], ["Tara", "Gancev"], ["Anna", "Zhang"], ["Maria", "Petrovic"], ["Emilie", "Elde"], ["Renon", "Mano"], ["Katriin", "Saar"], ["Hong Yi Cody", "Wong"], ["Irawan", "Deewajee"], ["Maelys", "Bougrat"], ["Lorena Maria", "Danaila"], ["Daniela", "Schekaiban"], ["Jessica", "Plazas"], ["Ella", "Haavisto"], ["Supapitch", "Kuearum"], ["Isabella", "Nunez"], ["Anda", "Ghinga"], ["Marina", "Delgado Valero"], ["Himari", "Sato"], ["Monika", "Popovic"], ["Saki", "Imamura"], ["Whitney", "Osuigwe"], ["Helene", "Pellicano"], ["Miku", "Yamamoto"], ["Olivia", "Gadecki"], ["Zeynep", "Sonmez"], ["Ksenia", "Brich"], ["Wing Ka", "Lin"], ["Dakota", "Fordham"], ["Betina", "Tokac"], ["Chantal", "Sauvant"], ["Leila", "Koster"], ["Emma", "Eerola"], ["Carlota", "Martin Santana"], ["Megan", "Basson"], ["Naomi", "Cheong"], ["Lizette", "Reding"], ["Lauren", "Stein"], ["Momoko", "Nishio"], ["Hedda", "Gurholt"], ["Ana", "Geller"], ["Anastasia", "Petrova"], ["Mina", "Hodzic"], ["Fiona", "Arrese Mata"], ["Angela", "Juarez Blanco"], ["Muslima", "Akhunova"], ["Ariana", "Arseneault"], ["Angelina", "Wirges"], ["Berna", "Yahe"], ["Giulia", "Tedesco"], ["Jihane", "Megdiche"], ["Avelina", "Sayfetdinova"], ["Marta", "Kostyuk"], ["Sohyun", "Park"], ["Leonor", "Oliveira"], ["Mananchaya", "Sawangkaew"], ["Lola", "Marandel"], ["Emilia", "Salo"], ["Denisa", "Hindova"], ["Jovana", "Trickovic"], ["Lian", "Tran"], ["Federica", "Trevisan"], ["Marketa", "Panackova"], ["Zoe", "Kruger"], ["Mariana", "Zuluaga Robledo"], ["Lunda", "Kumhom"], ["Marta", "Cuevas Guerrero"], ["Nasiba", "Espolova"], ["Mai Napatt", "Nirundorn"], ["Elena", "Trencheva"], ["Miyuka", "Kimoto"], ["Diane", "Parry"], ["Leylah Annie", "Fernandez"], ["Alexa", "Noel"], ["Romana", "Cisovska"], ["Dami", "Edibson Messiah"], ["Aunchisa", "Chanta"], ["Elina", "Avanesyan"], ["Doga", "Turkmen"], ["Sophie", "Abrams"], ["Viktoriya", "Kanapatskaya"], ["Lisa", "Kung"], ["Natcharee", "Teerachodjiranon"], ["Salma", "Djoubri"], ["Nelly", "Mezan"], ["Beyda", "Baykal"], ["Rebeka", "Kern"], ["Hania", "Abouelsaad"], ["Punnin", "Kovapitukted"], ["Milana", "Zhabrailova"], ["Jimin", "Kwon"], ["Ryoko", "Ikeda"], ["Paulina Ailin", "Sainz"], ["Yuna", "Saito"], ["Yeon Woo", "Ku"], ["Sapfo", "Sakellaridi"], ["Alice", "Gubertini"], ["Noa", "Krznaric"], ["Sheena Jade", "Masuda Karrasch"], ["Maddalena", "Giordano"], ["Fernanda", "Castillo Huerta"], ["Dorothy", "Whitely"], ["Kay", "Williams"], ["Eva", "De Jong"], ["Valerie", "Caulley"], ["L", "Griffiths"], ["Sandra", "Hole"], ["Beryl", "Jenkins"], ["Loris", "Butterfield"], ["Geri", "Shepard"], ["Marilyn", "Tesch"], ["Helen", "Sheedy"], ["S", "Washbourne"], ["S", "Stephen"], ["Lexie", "Kenny"], ["Lynette", "Mansfield"], ["Janine", "Whyte"], ["Helen", "Oconnor"], ["Joan", "Johnson"], ["Patricia", "Edwards"], ["Heather", "Mckechnie"], ["Ann", "Jenkins"], ["Caroline", "Cooper"], ["Kaye", "Dening"], ["Kerry", "Wilkinson"], ["Alison", "Mckenzie"], ["Sue", "Hastings"], ["Margaret", "Starr"], ["E", "Staples"], ["Yveline", "Boy"], ["Janine", "Murdoch"], ["D", "Brennan"], ["Frances", "Luff"], ["Helen", "Kayser"], ["H", "Rush"], ["Caroline", "Langsford"], ["Sally", "Irvine"], ["Sharon", "Thomson"], ["Teresa", "Van Haren"], ["Sandra", "Walsham"], ["Judy", "Harris"], ["L", "Cameron"], ["Cheryl", "Norquay"], ["Mandy", "Morgan"], ["Norma", "Eastburn"], ["Susan", "Alexander"], ["Janet", "Fallis"], ["Helen", "Taylor"], ["Anne", "Coleman"], ["Kati", "Athorne"], ["Diane", "James"], ["Robyn", "Knobel"], ["Patricia", "Billing"], ["Brenda", "Dart"], ["Maureen", "Pratt"], ["Patricia", "King"], ["Kathy", "Walker"], ["Helen", "Young"], ["Moira", "Whitely"], ["Leslie", "Walker"], ["Marion", "Proisy"], ["Joan", "Walker"], ["Helen", "Crozier"], ["Isabelle", "Larsson"], ["Frances", "Candy"], ["Jd", "Griffiths"], ["Anneloes", "Schothurst"], ["Sally", "Arnott"], ["Gail", "Williams"], ["Miki", "Yokobori"], ["Chris", "Cerato"], ["Vivicca", "Andersson"], ["Gwen", "Stirton"], ["Ai", "Iida"], ["Lois", "Raymond"], ["Julie", "Staines"], ["Cheree", "Walker"], ["Kerry", "Neill"], ["Merrilyn", "Robinson"], ["Julie", "Hanrahan"], ["Karen", "Gulley"], ["Pamela", "Bailey"], ["Michelle", "Pekovitch"], ["Sharon", "Pinchbeck"], ["Jitka", "Volavkova"], ["Paola", "Palacios"], ["Anne Marie", "Studer"], ["Kora", "Schediwy"], ["Marion", "Cristiani"], ["Aline", "Nenot"], ["Gillian", "Dove"], ["Ann", "Phillips Moore"], ["Nicole", "Niox Chateau"], ["Eugenia", "Isopaitis"], ["Ilse", "Buding"], ["Chantal", "Langanay"], ["Janine", "Mauroy Toffier"], ["Michelle", "Rodriguez"], ["Dionissia", "Asteri"], ["Francesca", "Gordigiani"], ["Margarita", "Zuleta"], ["Erzsebet", "Polgar"], ["Yaeko", "Matsuda"], ["Tiiu", "Kivi"], ["Sharon", "Van Brandis"], ["Becky", "Vest"], ["Joan", "Koudelka"], ["Aleksandra", "Ivanova"], ["Marina", "Chuvirina"], ["Carmen", "Ibarra"], ["Alison", "Mcmillan"], ["Sylvie", "Rual"], ["Mimi", "Wheeler"], ["Pixie", "Lamm"], ["Margaret", "Lee"], ["Pauline", "Roberts"], ["Wendy", "Hall"], ["Victoria", "Rogers"], ["Maria Teresa", "Riedl"], ["Marion", "Boundy"], ["Susan", "Northen"], ["Anita", "Van Deventer"], ["Chikako", "Murakami"], ["Lisa", "Fleming"], ["Elena", "Granaturova"], ["Martina", "Walsh"], ["Elizabeth", "Gordon"], ["Shawna", "Martin"], ["Vija", "Vuskalns"], ["Farel", "Footman"], ["Peggy", "Moore"], ["Tish", "Adams"], ["Jade", "Schiffman"], ["Carole", "Herrick"], ["Emilie", "Fisher"], ["Diane", "Matzner"], ["Mary", "Lowdon"], ["Ann", "Moore"], ["Tina", "Lyman"], ["Maricaye", "Christenson"], ["Raymonde", "Jones"], ["Carol", "Hunter"], ["Carol", "Aucamp"], ["Emilie", "Burrer"], ["Pam", "Farmer"], ["Shari", "Barman"], ["Marcy", "Okeefe"], ["Sally", "Moore"], ["Lucy", "Gordon"], ["Xenia", "Anastasiados"], ["Judith", "Mercade"], ["Ana", "Aubone"], ["Iris", "Thompson"], ["Ingrid", "Jonge"], ["Nancy", "Harris"], ["Maria", "Muntanola"], ["Birthe", "Glatzel"], ["Rosemary", "Eden"], ["Patricia", "Gomez"], ["Laura", "Giussani"], ["Kathy", "Barton"], ["Kathleen", "Carey"], ["Keiko", "Morimoto"], ["Suzie", "Holm"], ["Lili", "Bell"], ["Susana", "Rojas"], ["Jane", "Holdren"], ["Darlene", "Williamson"], ["Janthe", "Cunningham"], ["Sherry", "Hull"], ["Edie", "Carell"], ["Robin", "Boss"], ["Annalisa", "Pesce"], ["Clare", "Schmoyer"], ["Marsha", "Bladel"], ["Karen", "Denman"], ["Stephanie", "Hales"], ["Glynis", "Oconnor"], ["Allegra", "Cesare"], ["Kuniyo", "Tsukamoto"], ["Natalya", "Borodina"], ["Yoko", "Mitsuko"], ["Rie", "Nakazaka"], ["Barbara", "Hambridge"], ["Maree", "Booth"], ["Susan", "Kreymborg"], ["Helen", "Middleton"], ["Helen", "Luscombe"], ["Jenny", "Combs"], ["Jackie", "Monsour"], ["Jackie", "Pinto"], ["G", "Wilson"], ["Julie", "Peters"], ["Kathy", "Mantle"], ["Kerrie", "Byrne"], ["Gwen", "Warnock"], ["Petra", "Tesarova"], ["Alison", "De Vries"], ["Gina", "Fogarty"], ["Jennifer", "Fenwick"], ["J", "Tobin"], ["Miyoko", "Sugawara"], ["Diane", "Eastburn"], ["Donna", "Kelly"], ["Sue", "Chancellor"], ["Amanda", "Pryor"], ["Rosalyn", "Mccann"], ["Eri", "Murata"], ["M", "Berta"], ["V", "Von Demleaux"], ["S", "Matthews"], ["C", "Crawford"], ["K", "Leslie"], ["Wendy", "Pearson"], ["J", "Carey"], ["Helen", "Rice"], ["Evelyn", "Lim"], ["M", "Earl"], ["C", "Mcquaide"], ["S", "Middleton"], ["G", "Thacker"], ["G", "Ayre"], ["Michele", "Mizen"], ["Stephanie", "Bardsley"], ["Jacqueline", "Berson"], ["Marie Christine", "Brochard"], ["Kumarani", "Ranga Rao"], ["T", "Novaco"], ["Maria", "Hollingsworth"], ["Christiane", "Sarrazin"], ["J", "Turner"], ["Chantal", "Puget"], ["Susanne", "Korpas"], ["Andrea", "Menezes"], ["J", "Ray"], ["Huguette", "Barat"], ["D", "Jainer"], ["K", "Bluhm"], ["Martine", "Le Rays"], ["B", "Dalzell"], ["J", "James"], ["R", "Witeker"], ["L", "Rios De Almeida"], ["Meiko", "Miyashita"], ["Patricia", "Rime"], ["Elisabeth", "Du Fresne Girard"], ["Catherine", "De Lorme"], ["Cristina", "Ribeiro Britto"], ["Martine", "Cazaux"], ["N", "Marman"], ["Soraya", "Guellas"], ["Saadia", "Mezdel"], ["E", "Kogl"], ["Satoyo", "Funaki"], ["F", "Dawson"], ["Natalie", "Scaramanga"], ["Agnes", "Figueras"], ["Elizabeth", "Dinopoulos"], ["Dominique", "Oustric"], ["Carla", "Mei"], ["Catherine", "Chevalier"], ["A", "Belladonna"], ["D", "Maccloskey"], ["Helen", "Liebenberg"], ["Martine", "Jodin"], ["Pascale", "Bonneteau"], ["", "Marine"], ["Catherine", "Alzate"], ["Ayi", "Sutarno"], ["Cecilia", "Barbat"], ["M", "Mesek"], ["Wendy", "Maccloskey"], ["Diana", "Flickier"], ["Marion", "Foldina"], ["Anne Marie", "Casado"], ["Anne", "Fritz"], ["Jeske", "Van Erven"], ["Sabine", "Mueller"], ["Kim", "Seddon"], ["Ellen", "Walliser"], ["Maria", "Mendez"], ["Ann", "Garbay"], ["Carole", "Luccarelli"], ["Lorrayne", "Gracie"], ["Susan", "Leach"], ["Tonia", "Bayley"], ["A", "Schroeder"], ["Maria", "Fernandez"], ["Karen", "Kennington"], ["Karen", "Dawson"], ["Jenny", "Gardiner"], ["Lisa", "Kearney"], ["Kathy", "Mueller"], ["Pascale", "Bernateau"], ["Judith", "Principe"], ["Becky", "Bell"], ["Connie", "Yowell"], ["Lori", "Miller"], ["Lisa", "Bublitz"], ["Suzanne", "Jarell"], ["Merrilee", "Keller"], ["Hee Jeong", "Baek"], ["Chris", "Gillis"], ["Karen", "Frawley"], ["Xiaojing", "Lu"], ["Natalia", "Vizhunova"], ["Florinda", "Videa"], ["Solma", "Norovz Najeri"], ["Joelie", "Brousseaud"], ["Geraldine", "Rimes"], ["Charlotte", "Sikorra"], ["Joy", "Rodrigues"], ["Maria Carmen", "Gaso"], ["Gabriela", "Delgado"], ["D", "ESPINAL"], ["Y", "FARID"], ["S", "BACCAR"], ["Veronica", "Osogo Nabwire"], ["Gladys", "Imperial"], ["Marisa", "Sanchez"], ["Stefania", "Sernaglia"], ["Paula", "Alvarez"], ["Cleopatra", "Lopez"], ["Monika", "Hassmann"], ["Jacqueline", "Morales"], ["Alice", "Alexandri"], ["Silvia", "Gubler"], ["Norma", "Baylon"], ["Lea", "Degen"], ["Eleanor", "Mcfadden"], ["Klara", "Bardoczy"], ["Sonja", "Fetz"], ["Xantippe", "Vassiliadou"], ["Ping Sr", "Wang"], ["Parvin", "Afshar"], ["Sadigheh", "Akbari"], ["Elza", "Bellens"], ["Ulla", "Pontoppidan"], ["Alice", "Wavre"], ["Janine", "Bourgnon"], ["Rosario", "Briones"], ["Liu Shang", "Ku"], ["Antonia", "Prado"], ["Maureen", "Schwartz"], ["Marketa", "Prochova"], ["Nenni", "Delmestre"], ["Narayanee", "Gopal"], ["Deepika", "Krishnappa"], ["Praveeni", "Srinivasan"], ["Simona", "Borisova"], ["Corin", "De Waal"], ["Eva", "Kolarovska"], ["Loveth", "Donatus"], ["Nina", "Kolar"], ["Aanu", "Ayegbusi"], ["Christie", "Nwankwo"], ["Fabienne", "Schmidt"], ["Delisha", "Guttikonda"], ["Haley", "Giavara"], ["Claudia Cecilia", "Rosas Garcia"], ["Jenna", "Friedel"], ["Hoda", "Habib"], ["Paulina", "Bakaite"], ["Karolina", "Kowall"], ["Maia", "Sosa"], ["Haina", "Franco"], ["G", "NILAND"], ["M", "POOS"], ["Analisa", "Miro"], ["Van", "Nguyen Ai Ngoc"], ["Kaoru", "Okamoto"], ["Helen", "Fraser"], ["Robin", "Lesh"], ["S", "Goot"], ["Jennifer", "Nelson"], ["Sei Rei", "Cho"], ["Robyn", "Davis"], ["Christine", "King"], ["Barbara", "Murphy"], ["Sharon", "Oconnor"], ["J", "Lin"], ["Pamela", "Southcombe"], ["Bernadette", "Heavey"], ["Patricia", "Ahern"], ["Michelle", "Arnott"], ["Jennifer", "Glynn"], ["Mary", "Liddle"], ["Judy", "Forbes"], ["Cheryl", "Germaine"], ["Suzanne", "Lundgren"], ["Jenny", "Burrows"], ["Wendy", "Moore"], ["Beatrice", "Abbas"], ["Maud", "Galtier"], ["Dominique", "Burel"], ["Eleanora", "Dumitrescu"], ["Ekaterina", "Rosianu"], ["Jean", "Knight"], ["Valerie", "Forbes"], ["Barbara", "Walsh"], ["Wendy", "Slaughter"], ["Jan", "Morton"], ["Mary", "Mcanally"], ["Mary", "Johnson"], ["Claire", "Chapman"], ["", "Brown"], ["Barbara", "Lemberg"], ["Denise", "Taylor"], ["Revonne", "Du Toit"], ["Rayleen", "Henningson"], ["Leanne", "Palmisano"], ["Maureen", "Rankine"], ["Hiroko", "Sato"], ["Meg", "Boyle"], ["B", "Rupp"], ["Tanya", "Kovachka"], ["Wendy", "Pattenden"], ["Nancy", "Killingsworth"], ["Keiko", "Hayashi"], ["Stephanie", "Meier"], ["Karen", "Hueffman"], ["", "Mckinney"], ["Ann", "Gorneva Krulevitz"], ["", "Munsell"], ["Michaela", "Masur"], ["Jill", "Patterson"], ["Sheila", "Ohlsson"], ["Aura", "Gheorge"], ["Barbel", "Wohlfahrt"], ["Jennifer", "Rothschild"], ["Akiko", "Ueda"], ["Ellen", "Drieberger"], ["Lynn", "Rolley"], ["I", "Norman"], ["Alexandra", "Boutellier"], ["", "Raimo"], ["Aschara", "Moranon"], ["", "Yoivera"], ["G", "Read"], ["Kiki", "Reuter"], ["Cathy", "Canuti"], ["", "Stafford"], ["Emmy", "Ho"], ["", "Gratton"], ["Claudette", "Laliberte"], ["Daniela", "Russino"], ["Marine", "Jacquet"], ["Ting", "Wang"], ["Lisa", "Barg"], ["Chisa", "Packard"], ["Lindsay", "Lee"], ["Virginia", "Brown"], ["Anne Sophie", "Bruner"], ["Anje", "Lauber"], ["M", "Mcgrath"], ["Christine", "Moroe"], ["Kyung Yee", "Chang"], ["Noemi", "Minzberg"], ["Skywalkie", "Raimrova"], ["Marta", "Rozas"], ["Monica", "Jimenez"], ["Nowlenn", "Peltier"], ["Anne", "Walrick"], ["Makiko", "Inekaku"], ["Grace", "Summerside"], ["Elena", "Ravnlanska"], ["Katja", "Nossik"], ["Dina", "Jovanovic"], ["Robertina", "Marcu"], ["Inna", "Brioukhovets"], ["Machiko", "Fujiwara"], ["Cindy", "Hill"], ["Yanet", "Yanez"], ["Melanie", "Tu"], ["Keri", "Preng"], ["Katherine", "Zordani"], ["Marina", "Komatsu"], ["Yasmeen", "Parviz"], ["Anastasia", "Sukhotina"], ["Hei Ching Claudia", "Ng"], ["Nina", "Knez"], ["Katsiaryna", "Skachkova"], ["Natasha", "Subhash"], ["Addison", "Brown"], ["Safiya", "Carrington"], ["Alisia Stephanie", "Manolescu"], ["Venia", "Yeung"], ["Andrea", "Gerhardt"], ["Dionissia", "Kotsia"], ["Lise", "Hahn Evers"], ["Lena", "Dvornik"], ["Carmencita", "De La Rosa"], ["Margaret", "Burns"], ["Mary", "Marechal"], ["Deanne", "Bell"], ["Meenal", "Maharwal"], ["Farah", "Khalil"], ["Anastasiia", "Chesnokova"], ["Lidya", "Yargovan"], ["Isabella", "Caballero"], ["Paola", "Cortez Vargas"], ["Liria", "Loria Pereyra"], ["Daria", "Lukyanova"], ["Shufaa Changawa", "Ruwa"], ["Katarina", "Karanja"], ["Paige Wanjiku", "Mbugua"], ["Polina", "Smolskaya"], ["Idoia", "Huerta Gallardo"], ["Paulina", "Mecho Hernandez"], ["Shani", "Gatterer"], ["Oluchukwu Jennifer", "Ibeto"], ["Nour", "Dib"], ["Viktoriya", "Petrenko"], ["Daria", "Nazarkina"], ["Anastasiya", "Khrustaleva"], ["Yasmine", "Khiri"], ["Ghita", "Courdi"], ["Hind", "Semlali"], ["Michele", "Zmau"]], "trigger_words": ["First Name", "Last Name"], "Prediction": "first_name, last_name FROM players ORDER BY birth_date;"}
{"db_id": "wta_1", "query": "SELECT first_name ,  last_name FROM players ORDER BY birth_date", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "players", "ORDER", "BY", "birth_date"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "players", "order", "by", "birth_date"], "question": "What are the full names of all players, sorted by birth date?", "question_toks": ["What", "are", "the", "full", "names", "of", "all", "players", ",", "sorted", "by", "birth", "date", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "456", "answer_text": [["Thelma", "Long"], ["Pauline", "Addie"], ["Milly", "Vagn Nielsen"], ["Vera", "Johansen"], ["Reiko", "Miyagi"], ["Louise", "Brown"], ["Gertrude", "Moran"], ["Zsuzsa", "Kormoczy"], ["Peggy", "Brixhe"], ["Betty", "Pratt"], ["Doris", "Hart"], ["Dorothy", "Knode"], ["Ruth", "Hauknes"], ["Althea", "Gibson"], ["Suzanne", "Le Besnerais"], ["Margarita", "De Zuleta"], ["Helen", "Parez"], ["Beverley", "Rae"], ["Nora", "Somoza"], ["Vera", "Sukova"], ["Rita", "Lauder"], ["Heather", "Segal"], ["Benita", "Senn"], ["Christiane", "Mercelis"], ["Angela", "Barrett"], ["Monique", "Bedoret"], ["Florence", "De La Courtie Billat"], ["Lorna", "Greville Collins"], ["Shiu Man", "Chan"], ["Tova", "Epstein"], ["Nancy", "Reed"], ["Ana Maria", "Estalella Manso"], ["Sylvana", "Lazzarino"], ["Jennifer", "Hoad"], ["Shirley", "Brasher"], ["Pat", "Stewart"], ["Renee", "Richards"], ["Yolande", "Ramirez"], ["Lea", "Pericoli"], ["Zsofia", "Broszmann"], ["Yu Lan", "Liu"], ["Jeanne", "Arth"], ["Margot", "Dittmeyer"], ["Francoise", "Repoux"], ["Jacqueline", "Rees Lewis"], ["Darlene", "Hard"], ["Norma", "Marsh"], ["Ruia", "Morrison Davy"], ["Irene", "Fraisse"], ["Jelena", "Gencic"], ["Jenny", "Ridderhof"], ["Edda", "Buding"], ["Lucia", "Bassi"], ["Patricia", "Mattes"], ["Renata", "Ostermann"], ["Lorraine", "Robinson"], ["Judy", "Dalton"], ["Bernice", "Vukovich"], ["Anne Marie", "Rouchon"], ["Maria", "Chakarova"], ["Susan", "Butt"], ["Janine", "Lieffrig"], ["Roberta", "Beltrame"], ["Elizabeth", "Starkie"], ["Danuta", "Rylska"], ["Ann", "Jones"], ["Michele", "Kahn"], ["Rosy", "Darmon"], ["Claudine", "Rouire"], ["Mimi", "Kanarek"], ["Jean", "Drysdale"], ["Maria", "Bueno"], ["Renee", "Schuurman"], ["Patricia", "Cody"], ["Ann", "Barclay"], ["Helga", "Hosl"], ["Edda", "Herdy"], ["Carmen", "Mandarino"], ["Pia", "Balling"], ["Deidre", "Keller"], ["Andrea", "Winkler"], ["Daniele", "Bouteleux"], ["Anna", "Dmitrieva"], ["Christine", "Janes"], ["Katarina", "Bartholdson"], ["Almut", "Sturm"], ["Yohko", "Obata"], ["Sonja", "Pachta"], ["Tone", "Schirmer"], ["Yuen Yuen", "Ling"], ["Jan", "Oneill"], ["Virginia", "Caceres"], ["Kazuko", "Kuromatsu"], ["Patricia", "Reese"], ["Brenda", "Dale"], ["Charleen", "Hillebrand"], ["Gillian", "Kay"], ["Helga", "Masthoff"], ["Mary", "Puljak"], ["Joyce", "Davenport"], ["Jacqueline", "Le Boubennec"], ["Margaret", "Hunt"], ["Lynne", "Nette"], ["Margaret", "Court"], ["Tory Ann", "Fretz"], ["Heide", "Schildknecht"], ["Lesley", "Bowrey"], ["Nancy", "Richey"], ["Vincerzo", "Napolio"], ["Geraldine", "Barniville"], ["Alice", "Tym"], ["Karen", "Susman"], ["Francoise", "Durr"], ["Ulla", "Sandulf"], ["Liv", "Jagge"], ["Carol Ann", "Kalogeropoulos"], ["Judy", "Alvarez"], ["Maria Jose", "Aubet"], ["Carole", "Graebner"], ["Maylis", "Burel"], ["Kerstin", "Seelbach"], ["Jennifer", "Waggott"], ["Leena", "Mutanen"], ["Annette", "Du Plooy"], ["Billie Jean", "King"], ["Maria Victoria", "De Moggio"], ["Barbara", "Olszewska"], ["Gill", "Butterfield"], ["Ingrid", "Bentzer"], ["Elsie", "Veentjer Spruyt"], ["Faye", "Moore"], ["Ana Maria", "Bocio"], ["Frances", "Maclennan"], ["Gitte", "Ejlerskov"], ["Gertruida", "Walhof"], ["Sally", "Holdsworth"], ["Robin", "Lloyd"], ["Monique", "Krecke"], ["Vlasta", "Kodesova"], ["Marketa", "Wallenfels"], ["Kimiyo", "Yagahara"], ["Joy", "Emerson"], ["Robyn", "Ebbern"], ["Madeleine", "Pegel"], ["Joyce", "Williams"], ["Maryna", "Proctor"], ["Evelyne", "Terras"], ["Yulia", "Berberian"], ["Nadine", "Netter"], ["Marijke", "Schaar"], ["Maria Carmen", "Arnoso"], ["Pamela", "Brand"], ["Eva", "Lundquist"], ["Liv", "Hubert"], ["Elizabeth", "Terry"], ["Alena", "Palmeova West"], ["Hsiu", "Lee"], ["Margaret", "Harris"], ["Lubka", "Radkova"], ["Gail", "Benedetti"], ["Christiane", "Spinoza"], ["Kerryl", "Chute"], ["Kirsten", "Robsahm"], ["Judith", "Gohn"], ["Monique", "Di Maso"], ["Betty", "Stove"], ["Greta", "Delport"], ["Virginia", "Wade"], ["Galina", "Baksheeva"], ["Vicky", "Berner"], ["Patricia", "Faulkner"], ["Maria Eugenia", "Guzman"], ["Nancy", "Spelman"], ["Brenda", "Nunns"], ["Mary", "Mclean"], ["Christina", "Lindstrom"], ["Faye", "Urban"], ["Eva", "Szabo"], ["Glenda", "Swan"], ["Erzsebet", "Szell"], ["Julie", "Heldman"], ["Lloyd", "Hatcher"], ["Nell", "Truman"], ["Johanne", "Venturino"], ["Monica", "Giorgi"], ["Irena", "Skulj"], ["Marilyn", "Greenwood"], ["Mabel", "Vrancovich"], ["Patricia", "Walkden"], ["Lita", "Sugiarto"], ["Martha", "Wolf Peterdy"], ["Stephanie", "Johnson"], ["Dianne", "Berkinshaw"], ["Patricia", "Reyes"], ["Mara", "Cohen Mintz"], ["Helen", "Lennon"], ["Elizabeth", "James"], ["Fiona", "Mckenzie"], ["Susi", "Eichenberger"], ["Laura", "Rossouw"], ["Ana Maria", "Arias"], ["Bunny", "Smith"], ["Yolanda", "Sumarno"], ["Ellen", "Grindvold"], ["Ingrid", "Sadlon"], ["Marie", "Pinterova"], ["Lidy", "Venneboer"], ["Marta", "Galli"], ["Carol", "Zeeman"], ["Lucia", "Gongora"], ["Kathleen", "Harter"], ["Mary Ann", "Beattie"], ["Elizabeth", "Allan"], ["Kathy", "Blake"], ["Helen", "Cawley"], ["Rita", "Felix"], ["Estela", "Benavides"], ["Gail", "Falkenberg"], ["Winnie", "Wooldridge"], ["Karen", "Krantzcke"], ["Astrid", "Suurbeck"], ["Jeong Soon", "Yang"], ["Penelope", "Hardgrave"], ["Toshiko", "Sade"], ["Louise", "Gonnerman"], ["Wendy", "Overton"], ["Mari Ann", "Klougart"], ["Edith", "Winkens"], ["Alex", "Cowie"], ["Cecilia", "Martinez"], ["Janice", "Wainwright"], ["Esme", "Emanuel"], ["Tine", "Zwaan"], ["Conceicao", "Rio"], ["Anne Mette", "Sorensen"], ["Sue", "Mappin"], ["Maria Teresa", "Nasuelli"], ["Kerry", "Reid"], ["Beverley", "Billington"], ["Suzana", "Gesteira"], ["Loanita", "Rachman"], ["Violette", "Percy"], ["Leonora", "Peralta"], ["Elena", "Subirats"], ["Christina", "Sandberg"], ["Ingrid", "Palmieri"], ["Julie", "Anthony"], ["Birgitta", "Lindstrom"], ["Graciela", "Moran"], ["Marilyn", "Aschner"], ["Ada", "Bakker"], ["Junko", "Sawamatsu"], ["Josiane", "Graas"], ["Evagreth", "Emmenegger"], ["Katja", "Ebbinghaus"], ["Daphne", "Pattison"], ["Helen", "Amos"], ["Marianne", "Kindler"], ["Barbara", "Kral"], ["Monique", "Van Haver"], ["Rosie", "Casals"], ["Nicole", "Bimes"], ["Odile", "De Roubin"], ["Ching Ling", "Chang"], ["Leyla", "Musalem"], ["Mona", "Guerrant"], ["Judy", "Congdon"], ["Peggy", "Michel"], ["Ivona", "Matulikova"], ["Judith", "Salome"], ["Maria Teresa", "Salvidea Diaz"], ["Olga", "Morozova"], ["Andree", "Martin"], ["Veronika", "Buche"], ["Hideko", "Goto"], ["Jill", "Cooper"], ["Peaches", "Bartkowicz"], ["Lany", "Kaligis"], ["Danuta", "Wieczorek"], ["Laura", "Du Pont"], ["Raquel", "Giscafre"], ["Gina", "Genovese"], ["Roylee", "Bailey"], ["Wanda", "Ferraz De Oliveira"], ["Di", "Riste"], ["Corinne", "Molesworth"], ["Valerie", "Ziegenfuss"], ["Kayoko", "Fukuoka"], ["Judy", "Dixon"], ["Biljana", "Kostic"], ["Sonoe", "Yonezawa"], ["Alex", "Rotas"], ["Kerry", "Harris"], ["Miroslava", "Holubova"], ["Sue", "Roux"], ["Heidi", "Eisterlehner"], ["Susie", "Witwer"], ["Marianna", "Brummer"], ["Judith", "Szorenyi"], ["Kerry", "Ballard"], ["Patti", "Hogan"], ["Elvira", "Weisenberger"], ["Lindsey", "Beaven"], ["Louise", "Bysiek"], ["Diana", "Moskova"], ["Susan", "Stone"], ["Ines", "Roget"], ["Betty Ann", "Dent"], ["Yoshiro", "Tanaka"], ["Pamela", "Austin"], ["Vera Lucia", "Giugni"], ["Margaret", "Cooper"], ["Paulina", "Peled"], ["Agnes", "Graczol"], ["Helen", "Worland"], ["Wendy", "Gilchrist"], ["Lesley", "Hunt"], ["Daniela", "Marzano"], ["Jenny", "Helliar"], ["Shelby", "Torrance"], ["Stephanie", "Grant"], ["Janice", "Tindle"], ["Mary", "Struthers"], ["Denise", "Carter Triolo"], ["Flore", "Wagner"], ["Kristy", "Pigeon"], ["Wendy", "Tomlinson"], ["Isabel", "Fernandez De Soto"], ["Kerry", "Young"], ["Ana", "Cavadini"], ["Alenka", "Pipan"], ["Barbara", "Hawcroft"], ["Christina", "Sotirova"], ["Linda", "Tuero"], ["Carol", "Baily"], ["Patricia", "Rivera"], ["Pam", "Richmond"], ["Adrienne", "Avis"], ["Janine", "Strauss"], ["Marlie", "Buehler"], ["Robyn", "Hunt"], ["Kazuko", "Sawamatsu"], ["Brenda", "Kirk"], ["Zaiga", "Yansone"], ["Vicki", "Lancaster Kerr"], ["Cynthia", "Doerner"], ["Jane", "Kincaid"], ["Nora", "Lauteslager"], ["Anne Marie", "Cassaigne"], ["Margareta", "Forsgardh"], ["Pam", "Teeguarden"], ["Gail", "Hansen"], ["Dorte", "Ekner"], ["Marjorie", "Gengler"], ["Ann", "Lebedeff"], ["Ana Maria", "Ycaza"], ["Connie", "Capozzi"], ["Janice", "Rapp"], ["Jackie", "Fayter"], ["Laila", "Pirila"], ["Maria Cristina", "Borba Dias"], ["Penny", "Moor"], ["Jane", "Ohara"], ["Evonne", "Cawley"], ["Cathy", "Beene"], ["Lucia", "Bruce"], ["Eva", "Fridenzi"], ["Janet", "Young"], ["Christine", "Dorey"], ["Rita", "Krombach"], ["Patricia", "Bostrom"], ["Miroslava", "Bendlova"], ["Fiorella", "Bonicelli"], ["Nellemieke", "Brouwer"], ["Susan", "Hagey"], ["Mi Ok", "Lee"], ["Gilda", "Robleto"], ["Katalin", "Borka"], ["Veronica", "Burton"], ["Tam", "Oshaughnessy"], ["Clare", "Colman"], ["Sharon", "Walsh Pete"], ["Wendy", "Appleby"], ["Lotte", "Solbeck"], ["Carmen", "Perea Alcala"], ["Marilyn", "Pryde"], ["Ann", "Flint"], ["Janice", "Metcalf"], ["Maria", "Geyer"], ["Lesley", "Charles"], ["Lucinda", "Crosby"], ["Kristien", "Shaw"], ["Elly", "Appel"], ["Nancy", "Ornstein"], ["Patricia", "Montano"], ["Nathalie", "Fuchs"], ["Helena", "Laitinen"], ["Barbara", "Brankovska"], ["Cecilia", "Rosado"], ["Kate", "Latham"], ["Linda", "Thomas"], ["Cynthia Ann", "Thomas"], ["Tina", "Mochizuki"], ["Wendy", "Turnbull"], ["Michele", "Gurdal"], ["Eugenia", "Birioukova"], ["Kathy", "Kraft"], ["Angelina", "Colquitt"], ["Eliza", "Pande"], ["Rosalba", "Vido"], ["Maya", "Kerschbaum"], ["Margaret", "Riley"], ["Beatrix", "Klein"], ["Beverly", "Buckley"], ["Maria Victoria", "Baldovinos Cibeira"], ["Beatrice", "Chrystman"], ["Lindsay", "Blachford"], ["Marina", "Kroschina"], ["Yvona", "Brzakova"], ["Yoko", "Kobayashi"], ["Patricia", "Coleman"], ["Karin", "Boshoff"], ["Janet", "Haas"], ["Rowena", "Sanders"], ["Duk Hee", "Lee"], ["Sabine", "Lavrerotte"], ["Alcira", "Acevedo"], ["Janet", "Wright"], ["Anna", "Nemeth"], ["Silvia", "Blume Bruns"], ["Jane", "Stratton"], ["Nancy", "Weigel"], ["Marcie", "Harper"], ["Sirikanya", "Hoonsiri"], ["Soon Oh", "Lee"], ["Patricia", "Brailsford"], ["Sally", "Hudson Beck"], ["Suthasini", "Sirikaya"], ["Susan", "Vinton"], ["Judy", "Chaloner"], ["Pam", "Whytcross"], ["Jane", "Preyer"], ["Marion", "De Witte"], ["Jan", "Blackstad"], ["Elzbieta", "Slesicka"], ["Brenda", "Garcia"], ["Walena", "White"], ["Glynis", "Coles"], ["Barbara", "Downs"], ["Annette", "Coe"], ["Patricia", "Bianchi"], ["Iris", "Riedel Kuhn"], ["Lucy", "Fendig"], ["Rosa Maria", "Togores Colom"], ["Mihoka", "Matshushima"], ["Mimi", "Wikstedt"], ["Betsy", "Blaney"], ["Glaucia", "Langela"], ["Daryl", "Gralka"], ["Jill", "Schwikert"], ["Joy", "Schwikert"], ["Frederique", "Thibault"], ["Sue", "Stap"], ["Linda", "Geeves"], ["Amy", "Goldfarb"], ["Maria", "Mendonca"], ["Valerie", "Franta"], ["Deborah", "Fiuza"], ["Sabine", "Bernegger"], ["Mary", "Hamm"], ["Jill", "Hamilton"], ["Robin", "Khan"], ["Joanne", "Russell"], ["Donna", "Ganz"], ["Elizabeth", "Vlotman"], ["Debra", "Darrell"], ["Kiyoko", "Nomura"], ["Susan", "Minford"], ["Florence", "Guedy"], ["Renata", "Tomanova"], ["Chris", "Evert"], ["Yolanda", "Vallejo"], ["Naoko", "Sato"], ["Lindsay", "Morse"], ["Virginia", "Ruzici"], ["Susana Maria", "Villaverde"], ["Silvana", "Urroz"], ["Michiko", "Saji"], ["Candy", "Reynolds"], ["Sally", "Greer"], ["Jane", "Plackett"], ["Kyeong Mi", "Choi"], ["Bente", "Kjolstad"], ["Silvana", "Belardinelli"], ["Andrea", "Whitmore"], ["Nancy", "Yeargin"], ["Dominique", "Beillan"], ["Jean", "Nachand"], ["Magdalena", "Gual Pascual"], ["Laurie", "Rowley"], ["Diane", "Desfor"], ["Aleida", "Spex"], ["Donna", "Stockton"], ["Beatriz", "Araujo"], ["Kym", "Ruddell"], ["Carol", "Draper"], ["Erin", "Dignam"], ["Ann", "Kiyomura Hayashi"], ["Carrie", "Meyer"], ["Penny", "Johnson"], ["Florenta", "Mihai"], ["Elsa", "Rodriguez"], ["Elizabeth", "Freeman Young"], ["Gina", "Diaz Ponce"], ["Anabel", "Luna De Infante"], ["Martha", "Morrison"], ["Jutta", "Diesslin"], ["Ann", "Etheredge"], ["Pauline", "Elliott"], ["Joni", "Van Ryck De Groot"], ["Monica", "Rho"], ["Gwynn", "Sammel"], ["Maria Julia", "Roverano"], ["Laurie", "Tenney"], ["Jenny", "Dimond"], ["Ruta", "Gerulaitis"], ["Terry", "Holladay"], ["Marcela Viviana", "Cataldi"], ["Brigette", "Cuypers"], ["Monica", "Alvarez"], ["Genevieve", "Etienne"], ["Vera", "Tere"], ["Kiyomi", "Nakagawa"], ["Ros", "Lewis"], ["Sylvia", "Koning"], ["Gretchen", "Galt"], ["Carla", "Guarino De Galeazzi"], ["Chris", "Newton"], ["Irina", "Shevchenko"], ["Marita", "Redondo"], ["Brenda", "Remilton"], ["Ilana", "Kloss"], ["Birgitte", "Hermansen"], ["Chris", "Oneil"], ["Stephanie", "Tolleson"], ["Jenny", "Walker"], ["Robin", "Harris"], ["Sue", "Barker"], ["Mary Ann", "Colville"], ["Sandy", "Stap"], ["Belinda", "Thompson"], ["Nerida", "Gregory"], ["Beatrice", "Guery"], ["Rayni", "Fox"], ["Elena", "Samoilo"], ["Kathy", "May Teacher Paben"], ["Caroline", "Lane"], ["Courtney", "Lord"], ["Helle", "Viragh"], ["Roberta", "Stark"], ["Jody", "Appelbaum"], ["Marillia", "Matte"], ["Mima", "Jausovec"], ["Annina", "Von Planta"], ["Adriana", "Villagran Reami"], ["Dianne", "Balestrat"], ["Lea", "Plchova"], ["Cathy", "Griffiths"], ["Lele", "Forood"], ["Bernadette", "Davy"], ["Helena", "Anliot"], ["Kim", "Sands"], ["Martina", "Navratilova"], ["Betsy", "Nagelsen"], ["Chris", "Penn"], ["Brigitte", "Simon Glinel"], ["Diane", "Evers"], ["Linky", "Boshoff"], ["Kathy", "Kuykendall"], ["Elina", "Durchman"], ["Patricia", "Medrado"], ["Katerleen", "Szeman"], ["Mariana", "Simionescu"], ["Iluminada", "Concepcion"], ["Andrea", "Galloway"], ["Simone", "Wolter"], ["Sylvie", "Rual Faulty"], ["Yvonne", "Vermaak"], ["Susan", "Zaro"], ["Paula", "Smith"], ["Ponamporn", "Samawanthana"], ["Antonella", "Rosa"], ["Lotta", "Stenberg"], ["Greer", "Stevens"], ["Eva", "Rozsavolgyi"], ["Dora", "Alavantic"], ["Leslie", "Allen"], ["Mary", "Carillo"], ["Cathleen", "Farrell"], ["Kaye", "Hallam"], ["Vicki", "Beggs"], ["Phyllis", "Blackwell"], ["Ludmila", "Makarova"], ["Barbara", "Jordan"], ["Anna", "Iuale"], ["Karen", "Feldman"], ["Margaret", "Lumia"], ["Jan", "Wilton"], ["Barbara", "Hallquist"], ["Marjorie", "Blackwood"], ["Rene", "Blount"], ["Linda", "Mottram"], ["Christine", "Gimmig"], ["Lorna", "Whitfield"], ["Mary", "Sawyer"], ["Beth", "Norton"], ["Julie", "Filkoff"], ["Maria", "Mateo"], ["Linda", "Siegleman"], ["Felicia", "Hutnick"], ["Lorna", "Simmons"], ["Huey Ying", "Chen"], ["Yoon Ja", "Han"], ["Malgorzata", "Rejdych"], ["Bunny", "Bruning"], ["Susie", "Mehmedbasich"], ["Donna", "Bradshaw"], ["Kay", "Mcdaniel"], ["Kay", "McDaniel"], ["Kim", "Jones Shaefer"], ["Veronica", "Martinez"], ["Brenda", "Perry"], ["Jeanne", "Evert"], ["Sue", "Saliba"], ["Carrie", "Fleming"], ["Maria", "Bolster"], ["Li Qiao", "Yu"], ["Antonella", "Canapi"], ["Alina", "Baraldi"], ["Emilse", "Rapponi Longo"], ["Kim", "Steinmetz"], ["Eiko", "Katayama"], ["Katerina", "Bohmova"], ["Yukie", "Koizumi"], ["Elisabeth", "Ekblom"], ["Mara", "Eijkenboom"], ["Sheila", "Mcinerney"], ["Naoko", "Matsuki"], ["Yasuka", "Shiba"], ["Cathy", "Fink"], ["Lisette", "Senn"], ["Jan", "Bardot"], ["Jo", "Sheridan"], ["Sue", "Bartlett"], ["Gleici", "Silva Do Espirito Santo"], ["Lynne", "Epstein"], ["Anne Marie", "Ruegg"], ["Leanne", "Harrison Austin"], ["Perrine", "Du Puy"], ["Nancy", "Neviaser"], ["Viviana", "Segal"], ["Nina", "Bohm"], ["Joyce", "Portman"], ["Robin", "Tenney"], ["Lisa", "Yap Sam"], ["Patricia", "Shoolman"], ["Chalada", "Wattana"], ["Natasha", "Chmyreva"], ["Beatriz", "Villaverde"], ["Cynthia", "Ashling"], ["Michelle", "Tyler"], ["Monica", "Simmen"], ["Marise", "Kruger"], ["Dianne", "Morrison"], ["Christine", "Ricour Catella"], ["Helena", "Wimmer"], ["Nosheen", "Ehtesham"], ["Mariette", "Pakker"], ["Sandy", "Collins"], ["Alejandra", "Vallejo"], ["Jean", "Hepner"], ["Pat", "Henderson"], ["Nam Sook", "Kim"], ["Pamela", "Baily"], ["Lindsay", "Standen"], ["Roberta", "Mccallum"], ["Judita", "Papista"], ["Eun Jeong", "Cha"], ["Tanya", "Harford"], ["Regina", "Marsikova"], ["Helene", "Pelletier"], ["Lea", "Antonoplis"], ["Dewonder", "Davis"], ["Anthea", "Stewart"], ["Lisa", "Moldrem"], ["Ellinore", "Lightbody"], ["Elke", "Renz"], ["Sally Ann", "Lewis"], ["Lisa", "Doherty"], ["Eleni", "Pilava Papanikolaou"], ["Petra", "Delhees Jauch"], ["Stacy", "Margolin"], ["Susan", "Rimes"], ["Zhen Zhen", "Xiang"], ["Froydis", "Forberg"], ["Nina", "Bland"], ["Fumiko", "Furuhashi"], ["Liliana", "Giussani"], ["Lucia", "Romanov"], ["Maria", "Romanov"], ["Elena", "Eliseenko"], ["Marcella", "Mesker"], ["Clare", "Harrison"], ["Helen", "Park"], ["Sherry", "Acker"], ["Keryn", "Pratt"], ["Christa", "Pickwick"], ["Sedigheh", "Hassani"], ["Anne", "Smith"], ["Annette", "Smith"], ["Patricia", "Armet Sanpere"], ["Uschi", "Ulrich"], ["Anne", "Hobbs"], ["Kristin", "Kinney"], ["Elfia", "Nizarwan"], ["Graciela", "Peraza"], ["Brigitte", "Lorang"], ["Catherine", "Suire"], ["Caroline", "Young"], ["Donna", "Rubin"], ["Xin Fen", "Pu"], ["Qing Qing", "Gong"], ["Ann", "Henricksson"], ["Soon Ho", "Shin"], ["Masako", "Yanagi"], ["Tamar", "Levin"], ["Carol", "Daniels"], ["Dana", "Gilbert"], ["Trey", "Lewis"], ["Sylvia", "Hanika"], ["Ingrid", "Willems"], ["Kathy", "Jordan"], ["Graca", "Cardoso"], ["Jeanne", "Duvall"], ["Cindy", "Davis"], ["Zenda", "Liess"], ["Sharon", "Green"], ["Kathy", "Obrien"], ["Cissie", "Donigan"], ["Lori", "Robertson"], ["Hagit", "Zubary"], ["Fiona", "Moffitt"], ["Michelle", "Berrigan"], ["Silvia", "Campius Pinas"], ["Claudia", "Casabianca"], ["Cathy", "Drury"], ["Kate", "Glancy"], ["Jennifer", "Balent"], ["Wendy", "Burkhart"], ["Debbie", "Stewart"], ["Gabriela", "Dinu"], ["Sabina", "Simmonds"], ["Tiffany", "Silveria"], ["Maria", "Rothschild"], ["Betsy", "Heidenberger"], ["Wendy", "Barlow"], ["Deborah", "Jevans"], ["Suzanne", "Bakewell"], ["Amanda", "Tobin Dingwall"], ["Debbie", "Chesterton"], ["Jill", "Davis"], ["Helen", "Davis"], ["Martine", "Bureau"], ["Maria Manuel", "Cabral Lencastre"], ["Hamidan", "Bibi"], ["Lynn", "Jacobs"], ["Judy", "Rich"], ["Danielle", "Meunier"], ["Jo", "Durie"], ["Iva", "Budarova"], ["Teng Lian", "Kwong"], ["Lisa", "Wilcox"], ["Lani", "Wilcox"], ["Mareen", "Louie Harper"], ["Betona", "Pellon Fernandez"], ["Beatriz", "Pellon"], ["Saida", "Berthe"], ["Wendy", "Prausa"], ["Elizabeth", "Little"], ["Heidi", "Allsmiller"], ["Denise", "Parnell"], ["Manuela", "Zoni"], ["Margaret", "Redfearn"], ["Lorrie", "Zacharias"], ["Marcelle", "Voyame"], ["Rita", "Agassi"], ["Themis", "Zambrzycki"], ["Anna Maria", "Fernandez"], ["Lucia", "Fernandez"], ["Amreeta", "Ahluwalia"], ["Rosalyn", "Nideffer"], ["Caroline", "Stoll"], ["Min Kyung", "Seol"], ["Micki", "Schillig"], ["Angela", "Walker"], ["Marianne", "De Crop"], ["Hana", "Strachonova"], ["Michelle", "Weiss"], ["Tracie", "Blumentritt"], ["Caroline", "Franch"], ["Ivanna", "Madruga Osses"], ["Helena", "Manset"], ["Nina", "Voydat"], ["Neissa", "Doumbia"], ["Eva", "Pfaff"], ["Maria Paula", "Abreu"], ["Marcela", "Skuherska"], ["Alycia", "Moulton"], ["Iwona", "Kuczynska"], ["Jeong Soon", "Lee"], ["Karin", "Moos"], ["Cornelia", "Dries"], ["Caryn", "Copeland Wilson"], ["Nicole", "Mabille"], ["Mariela", "Clavijo"], ["Sylvia", "Clayton"], ["Petra", "Van Oyen"], ["Cricket", "Manuel"], ["Claudia", "Monteiro"], ["Christi", "Turdo"], ["Barbara", "Rossi"], ["Kylie", "Copeland"], ["Simonetta", "Bozzano"], ["Julie", "Walther"], ["Joy", "Tacon"], ["Linda", "Siegel"], ["Lena", "Sandin"], ["Myke", "Loomis"], ["Heather", "Ludloff"], ["Beverly", "Corbie"], ["Hillery", "Royer"], ["Carol", "Watson"], ["Chris", "Payne"], ["Heather", "Crowe"], ["Eun Sook", "Han"], ["Helga", "Lutten"], ["Lone", "Vandborg"], ["Mary Lou", "Daniels"], ["Hyacinth", "Yorke"], ["Pirjo", "Ojala"], ["Soo Ok", "Kim"], ["Marianne", "Van Der Torre"], ["Susan", "Rollinson"], ["Angel", "Cobbs"], ["Louise", "Tuff"], ["Kathleen", "Cummings"], ["Nicole", "Lorenzetti"], ["Christiane", "Jolissaint"], ["Jacquie", "Dobson"], ["Anne", "White"], ["Jaime", "Kaplan"], ["Nancy", "Loeffler Caro"], ["Patricia", "Hermeda"], ["Patricia", "Alvarenga"], ["Karen", "Smith"], ["Sri", "Utaminingsih"], ["Tracy", "Houk"], ["Barbara", "Potter"], ["Andrea", "Pesak"], ["Ingrid", "Sommerauer"], ["Diane", "Farrell"], ["Lisa", "Dunner"], ["Blanca", "Borbolla"], ["Claudia", "Van Der Weck"], ["Caren", "Schindler"], ["Susan", "Pendo"], ["Felicia", "Raschiatore"], ["Brenda", "Catton"], ["Louise", "Allen"], ["Christine", "Lukalo"], ["Lisa", "Seemann"], ["Malgorzata", "Sieradzka"], ["Marina", "Kondova"], ["Sriningdiah", "Sutarniati"], ["Jennifer", "Mundel"], ["Jillian", "Muller"], ["Jamie", "Golder"], ["Jane", "Forman"], ["Mary", "Dailey"], ["Emmanuelle", "Folcher"], ["Jeom Re", "Park"], ["Pia", "Tamayo"], ["Julie", "Harrington"], ["Dorota", "Dziekonska"], ["Hana", "Mandlikova"], ["Xiao Yu", "Zhu"], ["Elise", "Burgin"], ["Olga", "Zaitseva"], ["Beverly", "Mould"], ["Florence", "Gauvain"], ["Patrizia", "Murgo"], ["Susie", "Jaeger"], ["Jacqueline", "Geller"], ["Gloria", "Escobar"], ["Nanette", "Schutte"], ["Natalia", "Leipus"], ["Kelly", "Henry"], ["Eun Ok", "Cho"], ["Linda", "Cassell"], ["Jennifer", "Goodling"], ["Linley", "Tanner"], ["Mesenbete", "Shenkutee"], ["Judy", "Newman"], ["Isabel", "Moure"], ["Ni", "Zhong"], ["Chongrak", "Sri Ud"], ["Debbie", "Freeman"], ["Carol", "Neeld Lang"], ["Liliana", "Fernandez"], ["Dee Ann", "Hansel"], ["Xin Yi", "Li"], ["Li Lan", "Duan"], ["Pam", "Shriver"], ["Ilse", "De Ruysscher"], ["Lisa", "Spain Short"], ["Caitriona", "Ruane"], ["Debbie", "Robb"], ["Carin", "Bakkum"], ["Nora", "Bajchikova"], ["Lindsay", "Bartlett"], ["Kate", "Brasher"], ["Maluca", "Llamas"], ["Susan", "Leo"], ["Maria Elena", "Ruiz"], ["Chiu Mei", "Ho"], ["Mari Carmen", "Espinosa"], ["Karen", "Dewis"], ["Sylvia", "Vay"], ["Vicki", "Nelson Dunbar"], ["Joy", "Cummings"], ["Svetlana", "Cherneva"], ["Carol", "Christian"], ["Christina", "Rozwadowski"], ["Eve", "Zimmerman"], ["Luciana", "Alfaro"], ["Anne", "Happonen"], ["Jo", "Griffiths"], ["Laura", "Murgo"], ["Sally Anne", "Mcdonald"], ["Isabelle", "Villiger"], ["Irma", "Novakova Spurny"], ["Kathrin", "Keil"], ["Germaine", "Ohaco"], ["Tracy", "Austin"], ["Stina", "Almgren"], ["Ginette", "Kaempf"], ["Ginette", "Huberty"], ["Karla", "Umana"], ["Raquel", "Contreras"], ["Kate", "Gompert"], ["Linda", "Stewart"], ["Alita", "Rumsey"], ["Michaela", "Pazderova"], ["Jane", "Jarosz"], ["Helen", "Asciak"], ["Li Chuan", "Hsieh"], ["Molly", "Mcgrath"], ["Asa", "Flodin"], ["Catrin", "Jexell"], ["Marlene", "De Wouters"], ["Lisa", "Sassano"], ["Lisa", "Pennington"], ["King See", "Lee"], ["Maria", "Lindstrom"], ["Karla", "Lehnoff"], ["Sylma", "Phillip"], ["Lily", "Aguirre"], ["Laura", "Bernstein"], ["Sadia", "Berthe Hoffman"], ["Anne", "Minter"], ["Liz", "Smylie"], ["Ruth", "Seeman"], ["Hu", "Na"], ["Anne", "Moller"], ["Nadine", "Schmit"], ["Karin", "Hinterwirth"], ["Pilar", "Vasquez"], ["Barbara", "Pollet"], ["Berit", "Bjork"], ["Anneli", "Bjork"], ["Sylvie", "Tetreault"], ["Claudia", "Pasquale"], ["Virginia", "Oteiza"], ["Jamie", "Pisarcik"], ["Sylvie", "Gardette"], ["Adriana", "Velcheva"], ["Lisa", "Lusteg"], ["Natasha", "Piskakova"], ["Ionita", "Nesti"], ["Jan", "Martin"], ["Clare", "Thompson"], ["Bettina", "Bunge"], ["Catarina", "Lindqvist Ryan"], ["Shelley", "Solomon"], ["June", "Ferestein"], ["Cecilia", "Fernandez Parker"], ["Pamela", "Jung"], ["Cheryl", "Lewis"], ["Karen", "Buchholz"], ["Julia", "Kashevarova"], ["Elizabeth", "Burger"], ["Ann", "Gabriel"], ["Genevieve", "Greiwe"], ["Hatsuhi", "Isowa"], ["Kazuko", "Ito"], ["Hsiu Tsuan", "Wen"], ["Ana", "Almansa"], ["Lise", "Gregory"], ["Karin", "Stampfli"], ["Bonnie", "Gadusek"], ["Carina", "Karlsson"], ["Corinne", "Vanier"], ["Jacinta", "Ayers"], ["Kathy", "Holton"], ["Allyson", "Ingram"], ["Erika", "Smith"], ["Begonia", "Erana"], ["Linda", "Howell"], ["Sophie", "Amiach"], ["Elizabeth", "Cameron"], ["Liza", "Riefkohl"], ["Lynn", "Lewis"], ["Zina", "Garrison"], ["Ivana", "Jankovska"], ["Shelley", "Aguero"], ["Suzanna", "Anggarkusuma"], ["Yan", "Sun"], ["Miranda", "Yates"], ["Robin", "White"], ["Claudia", "Kohde Kilsch"], ["Hiromi", "Yoshihara"], ["Lori", "Mcneil"], ["Rebecca", "Bryant"], ["Pam", "Casale Telford"], ["Karina", "Heck"], ["Robyn", "Lamb"], ["Jackie", "Joseph"], ["Leigh Anne", "Thompson"], ["Adriana", "Florido"], ["Laura", "Gildemeister"], ["Marie Christine", "Calleja"], ["Andrea", "Leand"], ["Jackie", "Castillejo"], ["Sylvia", "Schenck"], ["Qin Di", "Weng"], ["Sherri", "Norris"], ["Sharon", "Norgren"], ["Cristina", "Wallis"], ["Tita", "Zea"], ["Gretchen", "Magers"], ["Hana", "Fukarkova"], ["Britta", "Schneider"], ["Gigi", "Fernandez"], ["Annette", "Gulley"], ["Astrid", "Sunde"], ["Anita", "Aggarwal"], ["Kelly", "Holland"], ["Sharon", "Hodgkin"], ["Karen", "Huebner"], ["Cynthia", "Macgregor"], ["Collette", "Oreilly"], ["Elizabeth", "Jones"], ["Marisa", "Sanchez Vicario"], ["Eun Sook", "Huang"], ["Manon", "Bollegraf"], ["Penny", "Barg Mager"], ["Molly", "Ulvin"], ["Wendy", "Wood"], ["Liz", "Wachter"], ["Sue", "Hatch"], ["Mayumi", "Yamada"], ["Cheryl", "Jones"], ["Heidi", "Rosenbaum"], ["Sara", "Gomer"], ["Isabel", "Casso"], ["Diane", "Craig"], ["Kjersti", "Jensen"], ["Catherine", "Berry"], ["Beth", "Herr"], ["Socorro", "Trumpeta"], ["Renata", "Sasak"], ["Denise", "Panagopoulou"], ["Therese", "Arildsen"], ["Susan", "Mascarin"], ["Carol", "Bertrand"], ["Barbara", "Gerken"], ["Sally", "Reeves"], ["Isabelle", "Vernhes"], ["Heliane", "Steden"], ["Maya", "Hajjar"], ["Fiona", "Martin"], ["Rene", "Uys"], ["Becky", "Brown"], ["Lisa", "Bobby"], ["Nancy", "Arendt"], ["Julia", "Apostoli"], ["Marlene", "Zuleta"], ["Frederique", "Mauger"], ["Jill", "Smoller"], ["Klaartje", "Van Baarle"], ["Barbi", "Bramblett"], ["Rafeket", "Binyamini"], ["Orly", "Bialistozky"], ["Millie", "Didio"], ["Etsuko", "Inoue"], ["Nicola", "Lusty"], ["Jill", "Hetherington"], ["Jackie", "Van Wijk"], ["Shari", "Bucklin"], ["Kathy", "Foxworth"], ["Maeve", "Quinlan"], ["Monica", "Weber"], ["Vicki", "Marler"], ["Kim", "Cartwright"], ["Andrea", "Tiezzi"], ["Simone", "Vasconcellos Calves"], ["Daniela", "Moise"], ["Immaculada", "Varas Caro"], ["Katherine", "Camilleri"], ["Angela", "Farley Wilson"], ["Leigh Anne", "Eldredge"], ["Emiko", "Okagawa"], ["Emiko", "Sakaguchi"], ["Helena", "Olsson"], ["Stephanie", "Sipe"], ["Barbara", "Romano"], ["Jeanette", "Gomez"], ["Svetlana", "Sinitsyna"], ["Silvana", "Casaretto"], ["Stephanie", "Savides"], ["Rina", "Caniza"], ["Kumiko", "Okamoto"], ["Melissa", "Nodvin"], ["Jeong Ok", "Choi"], ["Marilda", "Julia"], ["Helena", "Sukova"], ["Lorena", "Sandoval"], ["Renata", "Baranski"], ["Renata", "Marcinkowska"], ["Sandra", "Cecchini"], ["Catherine", "Bonnet"], ["Akemi", "Nishiya"], ["Masako", "Nishina"], ["Molly", "Van Nostrand"], ["Fiona", "Keasberry"], ["Rhona", "Howett"], ["Maria Jose", "Paniagua"], ["Helene", "Cedet"], ["Petra", "Keppeler"], ["Judith", "Warringa"], ["Susanne", "Schmid"], ["Rina", "Einy"], ["Lori", "Kosten"], ["Patty", "Fendick"], ["Annelie", "Bjork"], ["Terri", "Gaskill"], ["Amy", "Holton"], ["Haruko", "Shigekawa"], ["Jenny", "Klitch"], ["Shelley", "Bartlett"], ["Carmela", "Vitali"], ["Sagit", "Doron"], ["Amanda", "Brown"], ["Monty", "Morrison"], ["Kim", "Simmons"], ["Miki", "Mizokuchi"], ["Belkis", "Rodriguez"], ["Lilian", "Kelaidis"], ["Anne", "Chevalier"], ["Maija", "Suonpaa"], ["Martina", "Reinhardt"], ["Catherine", "Tanvier"], ["Jane", "Young"], ["Sabrina", "Goles"], ["Andrea", "Jaeger"], ["Marianne", "Groat"], ["Jane", "Porfirio"], ["Gretchen", "Doninger"], ["Diane", "Donnelly"], ["Jennifer", "Thornton"], ["Julie", "Salmon"], ["Mal Sim", "Park"], ["Lucila", "Becerra"], ["Urmi", "Negi"], ["Reeka", "Szikszay"], ["Wei", "Hua"], ["Ruth", "Sverdloff"], ["Natasha", "Reva"], ["Andrea", "Muller"], ["Natalia", "Riva"], ["Patricia", "Hy Boulais"], ["Elizabeth", "Minter"], ["Kathy", "Horvath"], ["Naoko", "Kinoshita"], ["Yvette", "Flu"], ["Beverly", "Bowes Hackney"], ["Monica", "Kowalewski"], ["Dyan", "Castillejo"], ["Shelly", "Walpole"], ["Belinda", "Cordwell"], ["Elizabeth", "Daly"], ["Karin", "Dallwitz"], ["Liz", "Finlayson"], ["Bernadette", "Randall"], ["Dena", "Levy"], ["Emiko", "Takahashi"], ["Marta", "Varanda"], ["Margarita", "Vaquero"], ["Tammy", "Whittington"], ["Lisa", "Bonder Kreiss"], ["Yvonne", "Der Kinderen"], ["Ann", "Hulbert"], ["Sobhini", "De Silva"], ["Lesley", "OHalloran"], ["Andrea", "Ritecz"], ["Jean Marie", "Sterling"], ["Jana", "Koran"], ["Mary", "Stevens"], ["Susan", "Russo"], ["Joni", "Urban"], ["Raffaella", "Reggi Concato"], ["Caroline", "Hagey"], ["Debbie", "Ladig"], ["Lorrie", "Major"], ["Angelika", "Kanellopoulou"], ["Maricela", "Morales"], ["Heidi", "Narborough"], ["Tamaka", "Takagi"], ["Ilana", "Berger"], ["Ku Maizan", "Shak"], ["Hemel", "Meghani"], ["Rosa", "Bielsa Hierro"], ["Ann", "Ehrmann"], ["Masako", "Morikawa"], ["Linda", "Ferrando"], ["Sarah", "Sullivan"], ["Rene", "Collins"], ["Eva", "Krapl"], ["Anna", "Ivan"], ["Angela", "Longo"], ["Claudia", "Hernandez Salas"], ["Luciana", "Corsato Owsianka"], ["Ivonne", "Lorher"], ["Sook Ja", "Im"], ["Elizma", "Nortje"], ["Teresa", "Dobson"], ["Lisa", "Lillemoe"], ["Anne", "Grousbeck"], ["Claudia", "Borgiani"], ["Marianna", "Ansio"], ["Petra", "Huber"], ["Dai Hwa", "Wang"], ["Kilmeny", "Waterman"], ["Michaela", "Washington"], ["Judith", "Wiesner"], ["Tine", "Scheuer Larsen"], ["Ralene", "Fourie"], ["Alice", "Danila"], ["Carin", "Anderholm"], ["Kim", "Staunton"], ["Jane", "Thomas"], ["Nathalie", "Herreman"], ["Csilla", "Cserepy"], ["Susanna", "Lee"], ["Elizabeth", "Alexander"], ["Renata", "Skrzypczynska"], ["Sarit", "Shalev"], ["Maria Antonietta", "Trupia"], ["Pascale", "Paradis Mangon"], ["Andrea", "Temesvari"], ["Myriam", "Schropp"], ["Catherine", "Odea"], ["Mary", "Norwood"], ["Ronni", "Reis"], ["Silvana", "Campos"], ["Rita", "Winebarger"], ["Shu Shin", "Kam"], ["Lourdes", "Manulat"], ["Rene", "Mentz"], ["Karolina", "Karlsson"], ["Camille", "Benjamin"], ["Pascale", "Etchemendy"], ["Michele", "Wreem"], ["Siobhan", "Nicholson"], ["Veronica", "Platz"], ["Jennifer", "Prah"], ["Silvia", "Ludorf"], ["Shonette", "Wilson"], ["Elena", "Guerra"], ["Mercedes", "Paz"], ["Robyn", "Field"], ["Kathleen", "Schuurmans"], ["Andrea", "Betzner"], ["Olga", "Votavova"], ["Colette", "Sely"], ["Gabriela", "Castro"], ["Annabel", "Croft"], ["Stefania", "Dalla Valle"], ["Tory", "Plunkett"], ["Anne Marie", "Walson"], ["Larisa", "Savchenko"], ["Merike", "Stamberg"], ["Mei Chu", "Hsu"], ["Allison", "Cooper"], ["Claire", "Pollard"], ["Michelle", "Garth"], ["Miriam", "Ponce De Leon"], ["Lynn", "Henderson"], ["Vincenza", "Procacci"], ["Caroline", "Kuhlman"], ["Vanya", "Kelleher"], ["Leslie", "Hakala"], ["Valerie", "Ledroff"], ["Natalia", "Egorova"], ["Maria Marta", "Gallinal"], ["Isabelle", "Demongeot"], ["Sharon", "Mcnamara"], ["Lucia", "Peria"], ["Monica", "Reinach"], ["Sabine", "Krein Auer"], ["Annika", "Karlsson"], ["Maria Josefina", "Rojo"], ["Stephanie", "Givens"], ["Lynn", "Nabors"], ["Michelle", "Parun"], ["Cackie", "Germic"], ["Belinda", "Borneo"], ["Cornelia", "Lechner"], ["Ginny", "Purdy"], ["Eileen", "Tell"], ["Neige", "Dias"], ["Monica", "Munoz"], ["Maria Christine", "Damas"], ["Terry", "Phelps"], ["Maria Ines", "Leal"], ["Jane", "Holden"], ["Nora", "Kovarcikova"], ["Jennifer", "Larking Dawson"], ["Beate", "Knauber"], ["Agnes", "Lempereur"], ["Edna", "Olivarez"], ["Colleen", "Carney"], ["Su Lin", "Lai"], ["Masami", "Nakai"], ["Nicole", "Simon"], ["Silvia", "Batista"], ["Manuela", "Maleeva Fragniere"], ["Annette", "Singer"], ["Jenny", "Byrne"], ["Louise", "Field"], ["Philippa", "Palmer"], ["Amanda", "Grunfeld"], ["Magdalena", "Wiese"], ["Celine", "Cohen"], ["Carrie Lynn", "Cohen"], ["Araceli", "Montero"], ["Kathy", "Rinaldi Stunkel"], ["Tessa", "Price"], ["Julie", "Richardson"], ["Nathalie", "Phan Thanh"], ["Janet", "Craig"], ["Yasuyo", "Kajita"], ["Simone", "Schilder"], ["Irina", "Zvereva"], ["Monica", "Lundqvist"], ["Fukiko", "Osawa"], ["Monika", "Lundqvist"], ["Viktoria", "Milvidskaia"], ["Lydie", "Van Hille"], ["Sonia", "Tiberi"], ["Joanne", "Louis"], ["Anke", "Marchl"], ["Lupita", "Novelo"], ["Nathalie", "Ballet"], ["Pauline", "Chan"], ["Virginie", "Paquet"], ["Aida", "Khalatian"], ["Monika", "Waniek"], ["Anna Karin", "Olsson"], ["Fatima", "Santiago"], ["Laura", "Glitz"], ["Beate", "Reinstadler"], ["Laura", "Falconieri"], ["Karen", "Schimper"], ["Lisa", "Gould"], ["Shannon", "Gordon"], ["Kellie", "Dorman Tyrone"], ["Josephine", "Paguyo"], ["Amy", "Jonsson Raaholt"], ["Reka", "Monoki"], ["Lukky", "Tedjamukti"], ["Alice", "Nohacova"], ["Juliet", "Drew"], ["Louise", "Pleming"], ["Jackie", "Holden"], ["Michelle", "Torres"], ["Caterina", "Nozzoli"], ["Kaja", "Kond"], ["Jennifer", "Fuchs"], ["Loretta", "Sheales"], ["Hester", "Witvoet"], ["Ledna", "Martin"], ["Caroline", "Billingham"], ["Anne", "Aallonen"], ["Monique", "Javer"], ["Nicole", "Krijger Jagerman"], ["Ana Luiza", "Alencar"], ["Debbie", "Spence Nasim"], ["Digna", "Ketelaar"], ["Christine", "Iandolo"], ["Chris Anne", "Aston"], ["Ann", "Stephenson"], ["Sonya", "Hahn"], ["Florentina", "Curpene"], ["Linda", "Harley"], ["Dora", "Rangelova"], ["Kathy", "Hofer"], ["Jeong Myung", "Lee"], ["Ei", "Iida"], ["Kim", "Labuschagne"], ["Janine", "Tremelling"], ["Lilia Carla", "Azevedo"], ["Ingelise", "Driehuis"], ["Cynthia", "Mitchell"], ["Michelle", "Turk"], ["Ewa", "Zerdecka"], ["Ana", "Larrakoetxea"], ["Claire", "Wegink"], ["Alejandra", "Perez Jimenez"], ["Annette", "Gerber"], ["Mariana", "Perez Roldan"], ["Clare", "Evert"], ["Carling", "Bassett Seguso"], ["Simona", "Isidori"], ["Jill", "Waldman"], ["Nathalie", "Tauziat"], ["Marianne", "Werdel Witmeyer"], ["Amanda", "Tate"], ["Kirsty", "Wenzel"], ["Yvonne", "Klompenhouver"], ["Myriam", "Berthe"], ["Jean Marie", "Lozano"], ["Eleni", "Rossides"], ["Nahia", "Abou Khalil"], ["Silvia", "La Fratta"], ["Laura", "Garrone"], ["Federica", "Bonsignori"], ["Janet", "Souto Garcia"], ["Maite", "Martinez Perez"], ["Karmen", "Skulj"], ["Suzie", "Mair"], ["Atsuko", "Shima"], ["Laura", "Golarsa"], ["Betsy", "Somerville"], ["Katrina", "Crawford"], ["Karen", "Fodera"], ["Alissa", "Finerman"], ["Milena", "Leiva"], ["Tracey", "Morton Rodgers"], ["Jane", "Morro"], ["Shawn", "Foltz"], ["Denisa", "Kristofova"], ["Stine", "Vogt Andersen"], ["Leila", "Meskhi"], ["Sohini", "Kumari"], ["Anna", "Benzon"], ["Su Jen", "Lai"], ["Andrea", "Holikova"], ["Regina", "Wieser"], ["Laurence", "Garcia Clement"], ["Patty", "Oreilly"], ["Christine", "Oreilly"], ["Terri", "Oreilly"], ["Kersten", "Renneissen"], ["Kristina", "Grunberg"], ["Claudia", "Inchanstegui"], ["Regina", "Rajchrtova"], ["Yu Yu", "Zhu"], ["Alison", "Scott"], ["Adriana", "Sandoval"], ["Henrietta", "Harris"], ["Fang Ling", "Lin"], ["Lisa", "Weerasekera"], ["Cristina", "Casini"], ["Dianne", "Van Rensburg"], ["Isabelle", "Crudo"], ["Fiona", "Long"], ["Mi Jeong", "Lee"], ["Clare", "Wood"], ["Elizabeth", "Gibson"], ["Pascalle", "Druyts"], ["Karin", "Oberleitner"], ["Chanrisa", "Rareang"], ["Stacey", "Schefflin"], ["Jane", "Wood"], ["Yoshiko", "Wauke"], ["Jenny", "Reeves"], ["Jillian", "Alexander Brower"], ["Caroline", "Bhaguandas"], ["Dina", "Basil"], ["I Jin", "Chew"], ["Diana", "Valenti"], ["Mayuko", "Ebina"], ["Melissa", "Brown"], ["Justine", "Brown"], ["Grace", "Kim"], ["Adriana", "Isaza"], ["Akiko", "Kijimuta"], ["Yael", "Shavit"], ["Madeline", "Sanchez"], ["Helena", "Dahlstrom"], ["Eugenia", "Maniokova"], ["Shandra", "Livingston"], ["Tanya", "Soemarno"], ["Mi Ae", "Sohn"], ["Lisa", "Harding"], ["Dorothy Jane", "Suarez"], ["Jackie", "Masters"], ["Kerry", "Kendrick"], ["Claudia", "Piccini"], ["Happy", "Ho"], ["Jodi", "Saunders"], ["Luciene", "Sapienza Muro"], ["Olga", "Tsarbopoulou"], ["Hellas", "Ter Riet"], ["Cecille", "Calmette"], ["Karen", "Shin"], ["Nathalie", "Guerree Spitzer"], ["Annette", "Patchen"], ["Silke", "Meier"], ["Mimouschka", "Kion"], ["Jeom Sang", "Choi"], ["Wendy", "Ouwendijk"], ["In Sook", "Park"], ["Lisa", "Green"], ["Grazia", "Greco"], ["Cecilia", "Dahlman"], ["Carol", "Cassar Torreggiani"], ["Christina", "Singer"], ["Nicolette", "Rooimans"], ["Marielle", "Rooimans"], ["Nathalie", "Housset Gilbert"], ["Katrina", "Adams"], ["Paola", "Voli"], ["Patricia", "Tarabini"], ["Lisa", "Oneill"], ["Maria Jose", "Olave"], ["Linda", "Barnard"], ["Yan Ling", "Li"], ["Laura", "Liong"], ["Agustina", "Wibisono"], ["Augustina", "Wibisono"], ["Voralak", "Vichienchai"], ["Tania", "Zaitouni"], ["Sabrina", "Lucchi"], ["Gisele", "Faria"], ["Julie", "De Armond"], ["Katie", "Rickett"], ["Elizabeth", "Galphin"], ["Karen", "Hunter"], ["Jolene", "Watanabe Giltz"], ["Adrienne", "Green"], ["Edith", "Tatana"], ["Sarah", "Mitten"], ["Karin", "Kschwendt"], ["Ginger", "Helgeson Nielsen"], ["Paulina", "Sepulveda"], ["Allison", "Tolson"], ["Xochitl", "Escobedo"], ["Lettica", "Venter"], ["Suzanne", "White"], ["Norzahara", "Zainal"], ["Dagmar", "Schafer"], ["Teodora", "Tache"], ["Kerri", "Reiter"], ["Titia", "Wilmink"], ["Wendy", "Nelson"], ["Eun Young", "Kim"], ["Jana", "Novotna"], ["Kaye", "Marfini Hand"], ["Amy", "De Lone"], ["Marlene", "Chumbez"], ["Cammy", "Macgregor"], ["Valda", "Lake"], ["Petra", "Holubova"], ["Denisa", "Krajcovicova"], ["Nozelina", "Lukeman"], ["Bettina", "Fulco Villella"], ["Lorenza", "Jachia"], ["Tossaporn", "Summa"], ["Karen", "Deed"], ["Gisele", "Miro"], ["Heike", "Thoms"], ["Katrina", "Greenman"], ["Yuko", "Hosoki"], ["Tami", "Whitlinger Jones"], ["Claudia", "Porwik"], ["Xanthe", "Adams"], ["Kana", "Hatakeyama"], ["Denisa", "Szabova"], ["Sylvie", "Baccarani"], ["Elna", "Reinach"], ["Isabel", "Cueto"], ["Ninoska", "Souto"], ["Henriette", "Gemer"], ["Laura", "Hudson"], ["Christiane", "Hofmann"], ["Shaun", "Stafford"], ["Amy", "Alcini"], ["Anabella", "Radics"], ["Carla", "Bazzon"], ["Tara", "Collins"], ["Heidi", "Sprung"], ["Sylvie", "Metlef"], ["Katarzyna", "Nowak"], ["Jennifer", "Saberon"], ["Ayako", "Hirose"], ["Katrin", "Scheer"], ["Il Soon", "Kim"], ["Genevieve", "Dwyer"], ["Paulette", "Roux"], ["Frederique", "Martin"], ["Flora", "Perfetti"], ["Simona", "Dandrea"], ["Sally", "Godman"], ["Kay", "Louthian"], ["Julie", "Scott"], ["Trisha", "Laux"], ["Donna", "Millington"], ["Ana Maria", "Segura Perez"], ["Tracey", "Moyle"], ["Andrea", "Martinelli"], ["Isabela", "Listowska"], ["Rachel", "Gale"], ["Susannah", "Dart"], ["Teresa", "Edgar"], ["Cecile", "Bourdais"], ["Anya", "Kochoff"], ["Marie", "Croin"], ["Jennifer", "Santrock"], ["Malin", "Nilsson"], ["Cristina", "Cavina"], ["Tanya", "Stasiuk"], ["Danielle", "Jones"], ["Stella", "Sampras"], ["Agnes", "Romand"], ["Cornelia", "Marty"], ["Hijiri", "Nakazaka"], ["Paulette", "Moreno"], ["Tessa", "Shapovalova"], ["Emilie", "Viqueira"], ["Kirsten", "Dreyer"], ["Renata", "Smekalova"], ["Esmir", "Hoogendoorn"], ["Anne", "Meredith"], ["Astrid", "Ruhr"], ["Sally", "McCann"], ["Elvira", "Yussupova"], ["Miyako", "Ataka"], ["Maria Elena", "Gittens"], ["Alison", "Fleming"], ["Niurka", "Sodupe"], ["Elena", "Ordinaga"], ["Alexia", "Gera"], ["Julie", "Coles"], ["Sally", "Mccann"], ["Danila", "Imbriani"], ["Claudia", "Faillace"], ["Linda", "Allred"], ["Vera Carina", "Elter"], ["Susan", "Gadroen"], ["Michelle", "Jaggard Lai"], ["Fumiko", "Yamazaki"], ["Katerina", "Maleeva"], ["Shannon", "Peters"], ["Alexia Llysel", "Marquez"], ["Stephanie", "Faulkner"], ["Andrea", "Vopat"], ["Maya", "Kidowaki"], ["Roberta", "Caldas"], ["Amy", "Van Buuren"], ["Wendy", "Frazer"], ["Marina", "Bottazzi"], ["Wiltrud", "Probst"], ["Andrea", "Kohrt"], ["Florea De Maria", "Urrea"], ["Hana", "Adamkova Guy"], ["Mahela", "Gartner Ockernahl"], ["Steffi", "Graf"], ["Melissa", "Gurney"], ["Natalie", "Rodriguez"], ["Pauline", "Rodriguez"], ["Amy", "Dillingham"], ["Sheri", "Yandle"], ["Birgit", "Dopfer"], ["Li Hua", "Yang"], ["Louise", "Wekesa"], ["Rona", "Daniels"], ["Eva Lena", "Olsson"], ["Sabine", "Hack"], ["Lorna May", "Lewis"], ["Jennifer", "Young"], ["Lisa", "Keller"], ["Erica", "Adams"], ["Jonna", "Jonerup"], ["Aila", "Winkler"], ["Sally", "Timms"], ["Chris Lynne", "Kuhlke"], ["Zelda", "Kuhn"], ["Halle", "Cioffi"], ["Petra", "Thoren"], ["Holly", "Danforth"], ["Gabriela", "Mosca"], ["Susan", "King"], ["Giovanna", "Carotenuto"], ["Maria", "Strandlund Tomsvik"], ["Gail", "Boon"], ["Stephanie", "London"], ["Heike", "Roloff"], ["Virginie", "Buisson"], ["Tonya", "Evans"], ["Elly", "Hakami"], ["Carolina", "Espinoza"], ["Nicole", "Arendt"], ["Antonia", "Homolya"], ["Amy", "Schwartz"], ["Sandra", "Birch"], ["Federica", "Lentini"], ["Kristi", "Bastian"], ["Liliana", "Rodriguez"], ["Nicole", "Bradtke"], ["Yeon Sook", "Kim"], ["Silvia", "Freye Steur"], ["Evelyn", "Larwig"], ["Renate", "Wachtler"], ["Mandy", "Wilson"], ["Caroline", "Delisle"], ["Daniela", "Ivana"], ["Jin", "Choi"], ["Valerie", "Batut"], ["Sybille", "Niox Chateau"], ["Karine", "Quentrec"], ["Donna", "Littleton"], ["Jamie", "Henikoff"], ["Irawati", "Moerid"], ["Irawati", "Iskandar"], ["Karim", "Strohmeier Merino"], ["Cecilia", "Bargagni"], ["Stephanie", "Rehe"], ["Dalia", "Koriat"], ["Cornelia", "Grunes"], ["Tonya", "Fuller"], ["Helen", "Kelesi"], ["Paula", "Parentich"], ["Pilar", "Santibanez Gomez Ull"], ["Gaby", "Coorengel"], ["Monica", "Wiese"], ["Ivonne", "Sonderegger"], ["Ya Hui", "Lin"], ["Martina", "Pawlik"], ["Eva Maria", "Schurhoff"], ["Rita", "Kowacsics"], ["Michelle", "Beadman"], ["Martha", "Garzon Elkins"], ["Mayuko", "Koshiba"], ["Jennifer", "Obrien"], ["Caroline", "Bodart"], ["Gisela", "Quental"], ["Marianne", "Colon"], ["Linda", "Gates"], ["Luciana", "Tella"], ["Sandra", "Bernal"], ["Henriette", "Kjaer Nielsen"], ["Andrea", "Noszaly"], ["Laurence", "Bois"], ["Denia", "Salu"], ["Sarah", "Rafael"], ["Helen", "Odea"], ["Andrea", "Berger"], ["Lorena", "Rodriguez Di Laura"], ["Cora", "Linneman"], ["Maria", "Ekstrand"], ["Amanda", "Gesualdi"], ["Alice", "Lamport"], ["Bettina", "Diesner"], ["Ying", "Bi"], ["Susie", "Scott"], ["Paula", "Iversen"], ["Eva", "Melicharova"], ["Corinne", "Bousmans"], ["Ann", "Devries"], ["Claudine", "Toleafoa"], ["Maria", "Capistrano Bjorklund"], ["Ning", "Lin"], ["Corinne Marie", "Demey Bousm"], ["Kristine", "Kunce"], ["Maria Jose", "Llorca"], ["Maria Elena", "Llamas"], ["Caroline", "Vis"], ["Sylvia", "Stefkova"], ["Sandra", "Wasserman"], ["Helen", "Jonsson"], ["Amanda", "Gregory"], ["Monika", "De Lenart"], ["Kate", "Mcdonald"], ["Metamin", "Sharijah"], ["Danielle", "Scott"], ["Lisa", "Kwok"], ["Jana", "Pospisilova"], ["Ryoko", "Yamaguchi"], ["Lisa", "Albano"], ["Ingrid", "Peltzer"], ["Kelly", "Story"], ["Marie Jose", "Llorca"], ["Barbara", "Oddone"], ["Lindsay", "Matthews"], ["Cathrin", "Caspary"], ["Leona", "Laskova"], ["Alison", "Smith"], ["Hind", "Tajeddine"], ["Rosa Maria", "Llaneras"], ["Pascale", "Welter"], ["Emanuela", "Zardo"], ["Michelle", "Strebel"], ["Stephanie", "Reece"], ["Sylvia", "Czopek"], ["Silvana Lorena", "Celorio"], ["Emmanuelle", "Derly"], ["Stela", "Penciu"], ["Alexia", "Dechaume Balleret"], ["Elba", "Pinero"], ["Jorgelina", "Moreno"], ["Ruth Ann", "Escobedo"], ["Kim Trang", "Nguyen"], ["Kylie", "Johnson"], ["Jean", "Ceniza"], ["Sabina", "Pellas"], ["Nicole", "Welte"], ["Cristina", "Salvi"], ["Su Ying", "Lai"], ["Gabriela", "Sabatini"], ["Anissa", "Groves"], ["Silvia Carina", "Mazzeo Da Silva"], ["Maider", "Laval"], ["Shannan", "Mccarthy"], ["Nicole", "Wagstaff"], ["Rita", "Pichardo"], ["Sandra", "Dopfer"], ["Orawan", "Thampensri"], ["Sophie", "Didelot"], ["Ayoola", "Shelle"], ["Ayoola", "Odiah"], ["Claire", "Sessions Bailey"], ["Silke", "Frankl"], ["Katalin", "Darvas"], ["Ouarda", "Bouchabou"], ["Yvette", "Castillejo"], ["Catherine", "Mothes Jobkel"], ["Rosa Maria", "Peso Aldaz"], ["Nina", "Erickson"], ["Zarina", "Galvan"], ["Susan", "Katzen"], ["Pascal", "Engel"], ["Piret", "Ilves"], ["Joanna", "Rossi"], ["Vita", "Kaminskiate"], ["Bong Soon", "Choi"], ["Petra", "Pichalova Langrova"], ["Anat", "Varon"], ["Laura", "Mannisto"], ["Nadja", "Beik"], ["Michelle", "Bowrey"], ["Su Chen", "Lin"], ["Anja", "Elsen"], ["Shiho", "Okada"], ["Hye Jeong", "Pyo"], ["Maria", "Salsgard"], ["Gudrun", "Levers"], ["Louise", "Fitzgerald"], ["Maria Eugenia", "Vento"], ["Louise", "Venter"], ["Els", "Callens"], ["Magdalena", "Feistel"], ["Alexandra", "Niepel"], ["Debbie", "Graham"], ["Gail", "Biggs"], ["Alessia", "Vesuvio"], ["Ivana", "Ratkovic"], ["Claudia", "Brause"], ["Kateryna", "Filyus"], ["Talina", "Beiko"], ["Barbara", "Paulus"], ["Marzia", "Grossi"], ["Rosario", "Barea De Lara"], ["Tania", "Everoll"], ["Corina", "Martinez Pastur"], ["Nanne", "Dahlman"], ["Julie", "Halard Decugis"], ["Laura", "Lapi"], ["Karen", "Losch"], ["Karen", "Theck"], ["Jessica", "Emmons"], ["Jane", "Yates"], ["Michaela", "Frimmelova"], ["Yumi", "Kitano"], ["Agnes", "Anwar"], ["Natasha", "Marcucci"], ["Joanna", "Meagher"], ["Kimiko", "Date Krumm"], ["Rita", "Degliesposti"], ["Hagit", "Ohayon"], ["Renata", "Della"], ["Gigi", "Gonzalez"], ["Tanti", "Trayono"], ["Mary", "Innes"], ["Patricia", "Valadas"], ["Ann", "Wunderlich"], ["Anna", "Mirza"], ["Alison", "Hill"], ["Kathryn", "Katibi"], ["Lori", "Feingold"], ["Tunecia", "Sheffield"], ["Ying", "Wu"], ["Karen", "Gallego"], ["Theresa", "Anderson"], ["Leisa", "Dunn"], ["Stacey", "Martin"], ["Julia", "Muir"], ["Paola", "De Cunto"], ["Stefanie", "Rehmke"], ["Deborah", "Edelman"], ["Yayuk", "Basuki"], ["Susan", "Sloane Lundy"], ["Merete", "Stockmann Balling"], ["Jeri", "Ingram"], ["Dyphany", "Wilkinson"], ["Tanja", "Weigl"], ["Naoko", "Kurimata"], ["Noelle", "Porter"], ["Holly Ann", "Lloyd"], ["Dorien", "Wamelink"], ["Cammy", "Foley"], ["Radomira", "Zrubakova"], ["Caroline", "Stassen"], ["Elaine", "Gibrayl"], ["Brenda", "Schultz Mccarthy"], ["Steffi", "Menning"], ["Fiona", "Reid"], ["Michaela", "Kriebel"], ["Silvia", "Correa"], ["Bilynda", "Potter"], ["Jo Anne", "Faull"], ["Zuzana", "Witzova"], ["Diane", "Mckeon"], ["Min", "Tang"], ["Pretty", "Marot"], ["Tracey", "Hiete"], ["Kim", "Brandford"], ["Simone", "Hermann"], ["Alysia", "May"], ["Rachel", "King"], ["Varmila", "Trneckova"], ["Andrea", "Vieira"], ["Waya", "Walalangi"], ["Mana", "Endo"], ["Eun Ju", "Han"], ["Susan", "Sommerville"], ["Susan", "Klingenberg"], ["Francesca", "Romano"], ["Karla", "Golfin"], ["Katja", "Oeljeklaus"], ["Linda", "Wild"], ["Lesley", "Barbour"], ["Chrystalla", "Tritti"], ["Naira", "Santrosian"], ["Luciana", "Della Casa"], ["Annalia", "Dellorso"], ["Jenny", "Whalen"], ["Roseann", "Alva"], ["Celine", "Menain"], ["Yukiko", "Fukuzawa"], ["Stephanie", "Mayorkis"], ["Samantha", "Ewart"], ["Kerstin", "Taube"], ["Li Ling", "Chen"], ["Claudia", "Chabalgoity"], ["Anne", "Degioanni"], ["Anne", "Larsen"], ["Magdalena", "Simkova"], ["Mariaan", "De Swardt"], ["Susheel", "Gulati"], ["Cristina", "Beber"], ["Maureen", "Drake"], ["Angie", "Ealy"], ["Tomoko", "Ishida"], ["Jing", "Sung"], ["Rennae", "Stubbs"], ["Monica", "Aguero"], ["Reiko", "Noguchi"], ["Dewi", "Fortuna"], ["Laurence", "Neuville"], ["Kirsten", "Moeller"], ["Yuko", "Miyajima"], ["Andrea", "Paredes"], ["Agnese", "Gustmane"], ["Katja", "Kokko"], ["Nana", "Smith"], ["Tanja", "Cerne"], ["Cinda", "Gurney"], ["Susan", "Gilchrist"], ["Vanessa", "Erlan"], ["Ingrid", "Gonzalez"], ["Sandrine", "Jaquet"], ["Mirijam", "Schweda"], ["Natalia", "Zvereva"], ["Yumiko", "Kitamura"], ["Vlasta", "Dammova"], ["Margarita", "Andonegui"], ["Anjy", "Fahmy"], ["Meredith", "Mcgrath"], ["Kim", "Grant"], ["Margherita", "Naso"], ["Tomoko", "Tazawa"], ["Robyn", "Mawdsley"], ["Raminta", "Mackeviciute"], ["Machika", "Tsuji"], ["Karin", "Lusnic"], ["Yasmin", "Kaya"], ["Elizabeth", "Nieto"], ["Ana", "Carotini"], ["Julie", "Fidler"], ["Patricia", "Quisoboni"], ["Nathalie", "Van Dierendonck"], ["Pamela", "Wallenfels"], ["Henrike", "Kadzidroga"], ["Evica", "Koljanin"], ["Teresa", "Stromberg"], ["Mari Liis", "Parmas"], ["Gabrielle", "Villiger"], ["Elena", "Brioukhovets"], ["Julie", "McKeon"], ["Julie", "Mckeon"], ["Florencia", "Labat"], ["Nora", "Koves"], ["Sarah", "Loosemore"], ["Iwalani", "Mccalla"], ["Trisha", "Holloway"], ["Jitka", "Dubcova"], ["Sandra", "Reichel"], ["Laura", "Ritchey"], ["Sandra", "De Rafael Esteban"], ["Yoannis", "Montesino"], ["Debora", "Garat"], ["Quynh", "Le"], ["Janine", "Humphreys"], ["Caroline", "Wuillot"], ["Solihati", "Moerid"], ["Donna", "Faber"], ["Eva", "Sviglerova"], ["Tracey", "King"], ["Hiromi", "Nagano"], ["Fumiko", "Masuda"], ["Ralitza", "Milorieva"], ["Marianne", "Vallin"], ["Neus", "Avila Bonastre"], ["Donna", "Fields Gibbs"], ["Macarena", "Miranda"], ["Tzvetelina", "Havren"], ["Marie Pierre", "Villani"], ["Pamela", "Buehler"], ["Nanette", "Flichtbeil"], ["Natalia", "Bogacova"], ["Anu", "Varpula"], ["Kawana", "Ishijima"], ["Mary Joe", "Fernandez"], ["Gillian", "Smith"], ["Tracy", "Smith"], ["Vickie", "Paynter"], ["Sabrina", "Giusto"], ["Samantha", "Knight"], ["Rikki", "Gaddie"], ["Marta", "Alastruez Ruiz"], ["Karen", "Van Der Merwe"], ["Misumi", "Miyauchi"], ["Erda", "Crous"], ["Monica", "Rey"], ["Rita", "Cruz Lima"], ["Jackie", "Moe"], ["Allison", "Kinsey"], ["Sanna", "Miestamo"], ["Andrea", "Farley"], ["Ismet Duygu", "Aksit Oal"], ["Caryn", "Moss"], ["Shira", "Gafni"], ["Annika", "Narbe"], ["Diedre", "Herman"], ["Heather", "Willens"], ["Eugenia", "Escarate"], ["Carolina", "Boscardin"], ["Natalie", "Tschan"], ["Simone", "Eberlein"], ["Lisa", "Low"], ["Shi Min", "Lin"], ["Hui", "Zhang"], ["Kimberly", "Po Messerli"], ["Amanda", "Coetzer"], ["Nelly", "Pardo"], ["Ana Belen", "Quintana"], ["Petra", "Schmitt"], ["Andrea", "Peterman"], ["Maria Teresa", "Ruiz"], ["Emma", "Taikie"], ["Juliana", "Gorka"], ["Mareke", "Plocher"], ["Elizabeth", "Osborne"], ["Orathai", "Thampensri"], ["Amalia", "Mitropoulou"], ["Seiko", "Ichioka"], ["Nao", "Akahori"], ["Natalia", "Medvedeva"], ["Sabine", "Gerke"], ["Audra", "Keller"], ["Aida", "Khalatyan"], ["Helen", "Crook"], ["Yone", "Kamio"], ["Jody", "Yin"], ["Samantha", "Smith"], ["Rachel", "Mcquillan"], ["Kat", "Bailey"], ["Rika", "Hiraki"], ["Cinzia", "Coppini"], ["Sarah", "Castillejo"], ["Dina", "Mcbride"], ["Claudia", "Mucino"], ["Sofia", "Kelbert"], ["Arantxa", "Sanchez Vicario"], ["Karin", "Ptaszek"], ["Michelle", "Mair"], ["Birgit", "Arming"], ["Regina", "Chladkova"], ["Nadine", "Batliner"], ["Adriana", "Gonzalez"], ["Karen", "Fisher"], ["Li", "Liu"], ["Maria Pilar", "Valls"], ["Virginia", "Humphreys Davies"], ["Alessandra", "Kaul"], ["Louise", "Stacey"], ["Stacey", "Anderson"], ["Gabriella", "Boschiero"], ["Evangeline", "Olivarez"], ["Giulia", "Toschi"], ["Allegra", "Milholland"], ["Roongnapha", "Surachet"], ["Angela", "Kerek"], ["Atsuko", "Shintani"], ["Michelle", "Anderson"], ["Julie", "Sinkins"], ["Kirsi", "Lampinen"], ["Kelly", "Press"], ["Caroline", "Van Renterghem"], ["Patricia", "Miller"], ["Sara", "Valverde"], ["Esther", "Markenstein"], ["Kristin", "Osmond"], ["Isabela", "Martin"], ["Kristin", "Reed"], ["Anja", "Kostecki"], ["Amanda", "Trail"], ["Leslie", "Cavanaugh   Rose"], ["Hiroko", "Hara"], ["Catarina", "Bernstein"], ["Rachel", "Viollet"], ["Darija", "Deskovic"], ["Akiko", "Gooden"], ["Laura", "Randmaa"], ["Sylvie", "Sabas"], ["Lihini", "Weerasuriya"], ["Helen", "Van Den Berg"], ["Giuliana", "Atzori"], ["Sandra", "Begijn"], ["Janice", "Tilbrook"], ["Susanna", "Modric"], ["Tonia", "Cook"], ["Justine", "Hodder"], ["Angela", "Bernal"], ["Petra", "Winzenholler"], ["Yoriko", "Yamagishi"], ["Tatiana", "Buss"], ["Cami", "Stewart"], ["Rosario", "Gracia Abad"], ["Helena", "Vildova"], ["Gaobolae", "Seleka"], ["Gabriela", "Vesela"], ["Mindy", "Weiner"], ["Gesualda", "Marra"], ["Evelia", "Alvarez"], ["Naoko", "Kijimuta"], ["Yvonne", "Grubben"], ["Natasha", "Sciolti"], ["Kirsten", "Joern"], ["Michelle", "Oldham"], ["Sandrine", "Testud"], ["Veronika", "Martinek"], ["Brenda", "Thomas"], ["Ainhoa", "Torrens"], ["Angela", "Lettiere"], ["Anja", "Franken"], ["Lucie", "Schmidhauser"], ["Aki", "Fujii"], ["Ashley", "Miller"], ["Lela", "Zainal"], ["Katia", "Labourey"], ["Sara", "Migliori"], ["Conchita", "Martinez"], ["Jennifer", "Callen"], ["Simone", "Hoormaert"], ["Lorrae", "Guse"], ["Lily", "Nejasmic"], ["Mary", "Nejasmic"], ["Claudia", "Rodriguez"], ["Maria", "Hardling"], ["Cara", "Abe"], ["Sabine", "Appelmans"], ["Elke", "Escreet"], ["Laura", "Richards"], ["Hortensia", "Hernandez"], ["Silvia", "Farina Elia"], ["Nicole", "Gadanyi"], ["Carrie", "Cunningham"], ["Yiching", "Wu"], ["Petra", "Johansson"], ["Marja Liisa", "Kuurne"], ["Elitza", "Paunova"], ["Alison", "Reid"], ["Hye Jin", "Park"], ["Barbara", "Garassino"], ["Julie", "Exum"], ["Kelli Ann", "Johnston"], ["Tatiana", "Matohniuk"], ["Agnes", "Zugasti"], ["Erika", "Kuttler"], ["Elena", "Pampoulova"], ["Elena", "Wagner"], ["Olivia", "De Camaret"], ["Olivia", "Ponchet"], ["Barbara", "Griffiths"], ["Pavlina", "Rajzlova"], ["Petra", "Schwarz"], ["Jana", "Strnadova"], ["Lizette", "Roncagliolo"], ["Andrea", "Strnadova"], ["Carla", "Rodriguez"], ["Medi", "Dadoch"], ["Meredith", "Geiger"], ["Audra", "Brannon"], ["Heather", "Lockhart"], ["Valerie", "Tan"], ["Nuria", "Niemes"], ["Karen", "Bacon"], ["Nathalie", "Leschi"], ["Melissa", "Mazzotta"], ["Kristine", "Kurth"], ["Loredana", "Bujor"], ["Kerstin", "Kretschmann"], ["Megali", "Gence"], ["Hye Jeong", "Kim"], ["Tanja", "Stegkamper"], ["Sandra", "Van Der Aa"], ["Tania", "Couto"], ["Noelle", "Van Lottum"], ["Natalia", "Baudone Furlan"], ["Ana", "Salas Lozano"], ["Heidi", "Djanogly"], ["Christine", "Neuman"], ["Olivia", "Cappelletti"], ["Anouschka", "Popp"], ["Stefania", "Casi"], ["Cristina", "Tessi"], ["Yael", "Segal"], ["Eva", "Haslinghuis"], ["Caroline", "Schuck"], ["Lorenza", "Romano"], ["Gabriella", "Molnaar"], ["Natasha", "Villarroel"], ["Mika", "Todo"], ["Shahira", "Tawfik"], ["Victoria", "Davies"], ["Kiyoko", "Yazawa"], ["Nadia", "Choqri"], ["Leena", "Singarajah"], ["Silvia", "Ramon Cortes"], ["Gemma", "Magin"], ["Jane", "Harper"], ["Paula", "Cabezas"], ["Natalia", "Chasovaya"], ["Ellen", "Nelissen"], ["Paloma", "Collantes"], ["Issem", "Essaies"], ["Katrina", "Saarinen"], ["Melisa", "Castro"], ["Denise", "Sukup"], ["Katarina", "Studenikova"], ["Brenda", "Rojas"], ["Manuela", "Bargis"], ["Yamile", "Cordova"], ["Sabrina", "Favini"], ["Caroline", "Marchetti"], ["Aranka", "Huyberts"], ["Miriam", "Oremans"], ["Cora", "Hofmann"], ["Marilia", "Andrade"], ["Amy", "Frazier"], ["Sofie", "Albinus"], ["Gina", "Niland"], ["Rosalba", "Caporuscio"], ["Cathy", "Caverzasio"], ["Julie", "Shiflet"], ["Aurelia", "Gheorghe"], ["Diana", "Gardner"], ["Agata", "Werblinska"], ["Maria Claudia", "Negri"], ["Maria", "Purcell"], ["Mmaphala", "Letsatle"], ["Erika", "De Lone"], ["Junko", "Watanabe"], ["Helma", "Leeuwen"], ["Merete", "Lindahl"], ["Julia", "Boden"], ["Alix", "Creek"], ["Ruxandra", "Dragomir Ilie"], ["Brenda", "Santos"], ["Edna", "Espinosa"], ["Natalia", "Biletskaia"], ["Jane", "Taylor"], ["Nimota", "Kadiri"], ["Svenja", "Truelsen"], ["Toni", "Gaddie"], ["Laxmi", "Poruri"], ["Virag", "Csurgo"], ["Galia", "Angelova"], ["Elena", "Savoldi"], ["Desiree", "Leupold"], ["Plamena", "Gogovska"], ["Amy", "Mascotti"], ["Karin", "Balekova"], ["Rachel Ann", "Jensen"], ["Rebecca", "Jensen"], ["Su Peng", "Ng"], ["Melissa", "McFarlane"], ["Carole", "Lucarelli"], ["Margarita", "Amelina"], ["Jindra", "Gabrisova"], ["Katarzyna", "Teodorowicz Lisowska"], ["Erica", "Oneill"], ["Kerry Anne", "Guse"], ["Federica", "Haumuller"], ["Noelia", "Perez Penate"], ["Catherine", "Turinsky"], ["Susie", "Starrett"], ["Lidia", "Soulti"], ["Marion", "Maruska"], ["Stacey", "Sheppard"], ["Monika", "Starosta"], ["Wendy", "Brown"], ["Luanne", "Spadea"], ["Tanja", "Hauschildt"], ["Catalina", "Ramirez"], ["Courtney", "Roberts"], ["Fang", "Li"], ["Natalia", "Noreiko"], ["Patricia", "Rogulski"], ["Kara", "Schertzer"], ["Il Sook", "Kim"], ["Katja", "Meichelbock"], ["Julie", "Foillard"], ["Alexandra", "Scheider"], ["Ulrike", "Priller"], ["Mika", "Kanaya"], ["Vajira", "Premaratne"], ["Olga", "Cosic"], ["Robyn", "Farrington"], ["Daniella", "Blanke"], ["Helga", "Grille"], ["Eva", "Bes Ostariz"], ["Katia", "Piccolini"], ["Jennifer", "Baker"], ["Sherri", "Vitale"], ["Eleonora", "Agnolozzi"], ["Janaina", "Mercadante"], ["Cristina", "Casale"], ["Camille", "Walter"], ["Natalia", "Anisimova"], ["Janaki", "Krishnamoorthy"], ["Elena", "Makarova"], ["Petra", "Crimmel"], ["Pernilla", "Sorensen"], ["Nadin", "Ercegovic"], ["Angie", "Woolcock"], ["Krisna", "Summa"], ["Kristin", "Godridge"], ["Greta", "Schmitt"], ["Rachel", "Clark"], ["Paula", "Boccia"], ["Gabriela", "Calderon"], ["Camille", "Baldrich"], ["Radka", "Bobkova"], ["Ivona", "Horvat"], ["Maria", "Marfina"], ["Elana", "Clark"], ["Marina", "Stets"], ["Christine", "Njeuma"], ["Christina", "Papadaki"], ["Nicoletta", "Iaccarino"], ["Kirrily", "Sharpe"], ["Natalia", "Narenko"], ["Petra", "Raclavska"], ["Nicole", "Pratt"], ["Susanna", "Attili"], ["Sarah", "Bentley"], ["Jenny", "Klemm"], ["Sabine", "Lohmann"], ["Joelle", "Schad"], ["Elke", "Juul"], ["Helene", "Kappler"], ["Francesca", "Morini"], ["Nicole", "Kenneally"], ["Suzanne", "Italiano"], ["Francine", "Harvey"], ["Naoko", "Sawamatsu"], ["Maribel", "Amadeo"], ["Maja", "Palaversic Cooper Smith"], ["Elena", "Pogorelova"], ["Farah", "Mahmood"], ["Jette", "Wilhelmsen"], ["Irina", "Stoilova"], ["Marie Christine", "Goy"], ["Kimberly", "Kessaris"], ["Susi", "Fortun Lohrmann"], ["Ines", "Drumond"], ["Mariana", "Randrup"], ["Diana", "Mills"], ["Ilona", "Poljakova"], ["Klara", "Blahova"], ["Ginevra", "Mugniani"], ["Klara", "Tomsu"], ["Keiko", "Ishida"], ["Claudia", "Timm"], ["Alexandra", "Henningsson"], ["Katharina", "Duell"], ["Barbara", "Navarro"], ["Francesca", "Guardigli"], ["Ulrike", "Przysucha"], ["Lisa", "Poole"], ["Renata", "Kochta"], ["Katherine", "Gladding"], ["Esther", "Rekasch"], ["Claire", "Adamini"], ["Eva", "Borras"], ["Tzipi", "Obziler"], ["Emanuela", "Brusati"], ["Cristina", "Lopez De Subijana"], ["Masami", "Nakamura"], ["Danielle", "Thomas"], ["Cara", "Robinette"], ["Barbara", "Rittner"], ["Olivia", "Fery"], ["Rieneke", "Kusters"], ["Claudia", "Hoffmann Timm"], ["Liat", "Cohen"], ["Anna Laura", "Baraldi"], ["Marlies", "Reinders"], ["Rima", "Taki"], ["Theresa", "Swart"], ["Anne Marie", "Mikkers"], ["Laurence", "Andretto"], ["Roberta", "Burzagli"], ["Lamsriati", "Moerid"], ["Daniela", "Cigna"], ["Maria Jose", "Gaidano"], ["Alicia", "Meraz"], ["Dominique", "Monami"], ["Helene", "Holter"], ["Caroline", "Schneider"], ["Ingrid", "Kurta"], ["Christelle", "Fauche"], ["Isabela", "Petrov"], ["Catherine", "Barclay"], ["Ines", "Gorrochategui"], ["Caroline", "Dhenin"], ["Patrizia", "Mirtillo"], ["Alison", "Moverley"], ["Vera", "Turkhaneli"], ["Vanina", "Casanova"], ["Galina", "Misiuriova"], ["Nancy", "Van Erp"], ["Kaoru", "Shibata"], ["Wendy", "Shipp"], ["Carolina", "Torres"], ["Irene", "Gonzalez Gonzalez"], ["Hikari", "Abe"], ["Siri", "Mittet"], ["Colette", "Caple"], ["Alison", "Vaughan"], ["Monica", "Mraz"], ["Katrien", "De Craemer"], ["Limor", "Zaltz"], ["Sussy", "Boyanovich"], ["Cristina", "Sanz Aguirre"], ["Rona", "Mayer"], ["Ma Carmen", "Garcia"], ["Fiona", "Stoner"], ["Oksana", "Bushevitsa"], ["Eleonora", "Vegliante"], ["Barrie", "Bernstein"], ["Dana", "Evans"], ["Anna", "Anastasiou"], ["Helena", "Franko"], ["Gillian", "Carter"], ["Dilshani", "Manawadu"], ["Karina", "Habsudova"], ["Anneli", "Ornstedt"], ["Lisa", "Raymond"], ["Cristina", "Rodriguez"], ["Natsuko", "Kurita"], ["Mareze", "Joubert"], ["Elexia", "Stivala"], ["Ivana", "Havrlikova"], ["Heidi", "Hogh"], ["Elissa", "Burton"], ["Rebecca", "Edwards"], ["Caroline", "Hunt"], ["Astrid", "Parlachy"], ["Joannette", "Kruger"], ["Sophie", "Woorons"], ["Kelly S", "Wilson"], ["Caroline", "Herbert"], ["Mary", "Quasney"], ["Alexandra", "Kelly"], ["Anique", "Snijders"], ["Keirsten", "Alley"], ["Reyna", "Alvarado"], ["Virginia", "Ruano Pascual"], ["Pilar", "Perez"], ["Natalja", "Vojinovic"], ["Soon Mi", "Kim"], ["Maja", "Zivec Skulj"], ["Sasano", "Yoshiko"], ["Stefania", "Indemini"], ["Patricia", "Sandagorda"], ["Patty", "Murren"], ["Aranzazu", "Gallardo"], ["Tanja", "Tsiganii"], ["Stephanie", "Martin"], ["Alexandra", "Schmitt"], ["Su Haiza", "Wan"], ["Angelica", "Gavaldon"], ["Andreea", "Ehritt Vanc"], ["Ana", "Perez"], ["Tracee", "Lee"], ["Natasha", "Giles Mellon"], ["Shieh Yen", "Leong"], ["Holyn", "Lord"], ["Michelle", "Likibi"], ["Emily", "Bond"], ["Christina", "Fischler"], ["Anzela", "Zguna"], ["Yoshiko", "Sasano"], ["Shi Ting", "Wang"], ["Nuria", "Tabernero Garin"], ["Marianne", "Ward"], ["Gorana", "Matic"], ["Marcia", "Paganini"], ["Kori", "Davidson"], ["Paula", "Astrini"], ["Amy", "Chiminello"], ["Claire", "Gatt"], ["Martie", "De Villiers"], ["Kerry Ann", "Lim"], ["Michelle", "Morris Berg"], ["Maria De Los Angeles", "Ycaza"], ["Ana", "Rojas"], ["Ninel", "Barkan"], ["Carolina", "Conte"], ["Ingrid", "Lucak"], ["Alexandra", "Fusai"], ["Cathrine", "Instebo"], ["Valerie", "De La Noye"], ["Monica", "Seles"], ["Nike", "Dobrovits"], ["Annette", "Falkenberg"], ["Nabila", "Bouchabou"], ["Kyung Sook", "Yoo"], ["Miyako", "Nakanishi"], ["Miki", "Miyauchi"], ["Svetlana", "Komleva"], ["Kristie", "Boogert"], ["Anori", "Fukuda"], ["Yuki", "Fujii"], ["Gala", "Leon Garcia"], ["Amanda", "Parson Siegel"], ["Gianfranca", "Devercelli"], ["Jill", "Brenner"], ["Michelle", "Jackson Nobrega"], ["Jennifer", "Poulos"], ["Valerie", "Poulos"], ["Svetlana", "Krivencheva"], ["Lisa", "Annebro"], ["Sofia", "Hiort"], ["Valentina", "Balzotti"], ["Altie", "Barnard"], ["Olga", "Lugina"], ["Camilla", "Persson"], ["Mia", "Leino"], ["Mirielle", "Dittmann"], ["Geraldine", "Ibrac"], ["Marilyn", "Baker"], ["Patricia", "Zerdan"], ["Candida", "Beaumont"], ["Stephanie", "Rottier"], ["Li Yao", "Tang"], ["Catriona", "Mccarthy"], ["Min Hui", "Chan"], ["Liako", "Selokoma"], ["Maria Florencia", "Cianfagna"], ["Maryla", "Madura"], ["Katerina", "Vlckova"], ["Estefania", "Bottini"], ["Aicha", "Ferjani"], ["Lucy", "Needham"], ["Alessia", "Sciarpelletti"], ["Joana", "Pedroso"], ["La Shawnn", "Jones"], ["Bridget", "Mikysa"], ["Viviana", "Valdovinos"], ["Irina", "Sukhova"], ["Lea", "Ghirardi"], ["Barbara", "Collet"], ["Kaisaran", "Siewrattan"], ["Stephanie", "Gomperts"], ["Karen", "Cross"], ["Beatriz", "Luna"], ["Johanna", "Pana"], ["Katerina", "Kroupova"], ["Lisa", "Pugliese"], ["Kyoko", "Nagatsuka"], ["Niki", "Ninaus"], ["Kati", "Kocsis"], ["Shu Ping", "Lin"], ["Maja", "Muric"], ["Monika", "Kratochvilova"], ["Jing Qian", "Yi"], ["Nadia", "Streltsova"], ["Dyane", "Aixendri"], ["Cecile", "Dorey"], ["Karina", "Kuregian"], ["Jeanette", "Bhaguandas"], ["Maria Alejandra", "Quezada"], ["Simona", "Petru"], ["Yee Hong", "Tan"], ["Shareen", "Bottrell"], ["Laurence", "Giroud"], ["Limor", "Gabai"], ["Petra", "Kamstra"], ["Tina", "Krizan"], ["Raphaella", "Liziero"], ["Sumara", "Passos"], ["Maria Virginia", "Francesca"], ["Irina", "Spirlea"], ["Joanne", "Limmer"], ["Ngozi", "Okwudike"], ["Line", "Ullring"], ["Germana", "Di Natale"], ["Melissa", "Zimpfer"], ["Silvia", "Plasin Peral"], ["Gulberk", "Gultekin"], ["Kaoru", "Yagi"], ["Vera", "Vitels"], ["Lee Ann", "Van Den Berg"], ["Amy", "Berthe"], ["Marketa", "Stuskova"], ["Suvimol", "Duangchan"], ["Danica", "Kovacova"], ["Samantha", "Etienne"], ["Svetlana", "Zakharchenko"], ["Valeria", "Madaro"], ["Hanneke", "Ketelaars"], ["Caterina", "Cerquaglia"], ["Eugenia", "Maia"], ["Terry Ann", "Zawacki"], ["Beatriz", "Andonegui"], ["Helena", "Nordwall"], ["Keri", "Phebus"], ["Vanessa", "Matthys"], ["Melissa", "Golfin"], ["Vicky", "Maes"], ["Anna Karin", "Svensson"], ["Esther", "Ruiz De Ona Plaza"], ["Kathleen", "Odaly"], ["Jane", "Legge"], ["Nipada", "Kaewborisut"], ["Tamsin", "Wainwright"], ["Anna", "Moll"], ["Gabriela", "Villanueva"], ["Riei", "Kawamata"], ["Seda", "Noorlander"], ["Axelle", "Thomas"], ["Chinatsu", "Ito"], ["Maria", "Zsoldos"], ["Carolina", "Somalo"], ["Maria", "Vento Kabchi"], ["Emily", "Leonardi"], ["Ana Karina", "Saldivar"], ["Barbara", "Mulej"], ["Rosabel", "Moyen"], ["Marisa", "Georgitsi"], ["Jan", "Barrett"], ["Lashawnn", "Jones"], ["Janette", "Husarova"], ["Alejandra", "Gomez"], ["Joice Riana", "Sutedja"], ["Jean", "Okada"], ["Jana", "Nejedly"], ["Tatiana", "Ignatieva"], ["Alexia", "Ferrand"], ["Shizuka", "Tokiwa"], ["Stephanie", "Devisme"], ["Ching Li", "Chen"], ["Barbara", "Bathory"], ["Sofia", "Prazeres"], ["Katharina", "Buche"], ["Shirli Ann", "Siddall"], ["Jane", "Chi"], ["Florence", "Mbugua"], ["Page", "Bartelt"], ["Martine", "Vosseberg"], ["Mariko", "Kaneko"], ["Ljudmila", "Pavlov"], ["Ninfa", "Marra"], ["Jill", "Craybas"], ["Jacqueline", "Dickinson"], ["Pavlina", "Nola"], ["Paige", "Yaroshuk"], ["Maja", "Wittke"], ["Daniela", "Or Shahar"], ["Michaela", "Soukupova Peterova"], ["Daphne", "Van De Zande"], ["Renata", "Diez"], ["Anna Maria", "Hollo"], ["Hui Na", "Liu"], ["Lucie", "Ahl"], ["Arthi", "Venkataraman"], ["Tina", "Samara"], ["Lamia", "Hameurlaine"], ["Marie", "Linusson"], ["Nicole", "Hummel"], ["Dominika", "Gorecka"], ["Satoko", "Nakano"], ["Kazue", "Takuma"], ["Monique", "Kiene"], ["Franke", "Joosten"], ["Natsumi", "Yuki"], ["Sabine", "Pawelec"], ["Yu Hsien", "Liu"], ["Simona", "Nedorostova"], ["Yuka", "Tanaka"], ["Anna", "Foldenyi Dicker"], ["Marie", "Arkbrant"], ["Bixia", "Li"], ["Elizabeth", "Alina"], ["Lebogang", "Seitshiro"], ["Tracy", "Schroeder"], ["Christina", "Zachariadou"], ["Agnes", "Gee"], ["Lauren", "Gavaris"], ["Cecilia", "Ampuero"], ["Monica", "Guglielmi"], ["Yuki", "Kitamura"], ["Sandra", "Cacic"], ["Linda", "Jansson"], ["Paula", "Umana"], ["Cristina", "Torrens Valero"], ["Maria Carmen", "Leon"], ["Melanie", "Bernard"], ["Luciana", "Barbosa"], ["Delene", "Ackron"], ["Sally", "Boulding"], ["Evonne", "Allerkamp"], ["Yoke", "Virliana"], ["Akiko", "Kazama"], ["Federica", "Fortuni"], ["Nicole", "Elliott"], ["Chie", "Kudo"], ["Alaa", "A A Ali"], ["Anousjka", "Van Exel"], ["Jayne", "Demichele"], ["Sarah", "Brown"], ["Anouska", "Van Exel"], ["Celine", "Regnier"], ["Cindy", "Summers"], ["Tatjana", "Vuckovic"], ["Sofia", "Kalavria"], ["Lisa", "Mcshea"], ["Kathy", "ODaly"], ["Aurora", "Gima"], ["Laura", "Medei"], ["Mimma", "Chernovita"], ["Stephanie", "Content Tardieu"], ["Marie Pierre", "Attali"], ["Eleni", "Kangalou"], ["Martine", "Bunschoten"], ["Elisabeth", "Habeler"], ["Hitomi", "Isomura"], ["Meike", "Babel"], ["Keiko", "Nagatomi"], ["Divya", "Merchant"], ["Alison", "Cohen"], ["Susan", "Bowman"], ["Jenny", "Sotomayor"], ["Valentina", "Bonacorsi"], ["Marcela", "Demilio"], ["Anke", "Huber"], ["Shiri", "Burstein"], ["Maria", "Popescu"], ["Yvonne", "Doyle"], ["Julia", "Mertins"], ["Anne", "Mall"], ["Linda", "Niemantsverdriet"], ["Jennifer", "Saret"], ["Farley", "Taylor"], ["Sheung", "Pang"], ["Tanja", "Lang"], ["Simone", "Bock"], ["Paiao Asinata", "Short"], ["Lee", "Whitwell"], ["Akemi", "Hasegawa"], ["Kylie", "Gottsche"], ["Evelyn", "Otula"], ["Margaret", "Olagundoye"], ["Kristy", "Bayer"], ["Daria", "Chernova"], ["Kimberley", "Risson"], ["Stacey", "Jellen"], ["Carina", "Lopez"], ["Simona", "Galik"], ["Caroline", "Gideskog"], ["Julia", "Lutrova"], ["Ayako", "Noda"], ["Asami", "Tsuda"], ["Benjamas", "Sangaram"], ["Mary", "Pierce"], ["Susanna", "Locher"], ["Sandra", "De Silva"], ["Marjorie", "Ferrand"], ["Zdenka", "Malkova"], ["Antonela", "Voina Timmerbeil"], ["Aiko", "Suzuki"], ["Martina", "Hautova"], ["Alexandra", "Rentzoula"], ["Kelesitse", "Makgale"], ["Lamia", "Alami"], ["Gabriela", "Beleni"], ["Melanie", "Kay"], ["Wendy", "Fix"], ["Mair", "Hughes"], ["Virginie", "Van Der Meersch"], ["Katrin", "Kilsch"], ["Sara", "Tse"], ["Paola", "Cespedes"], ["Uju", "Ben"], ["Stephanie", "Barfeld"], ["Hong Lan", "Liu"], ["Aafje", "Evers"], ["Susanne", "Depka"], ["Karolina", "Bulat"], ["Kyoko", "Hirano"], ["Sung Hee", "Park"], ["Claire", "Taylor"], ["Zsofia", "Csapo"], ["Patricia", "Aznar"], ["Aiko", "Matsuda"], ["Bi Xia", "Li"], ["Edith", "Nunes Bersot"], ["Anne", "Ollevier"], ["Laura", "Olave"], ["Michele", "Wagner"], ["Celine", "Beigbeder"], ["Celine", "Bannmeyer"], ["Stephanie", "Tibbits"], ["Stephania", "Gehrke"], ["Maria Fernanda", "Sainz"], ["Hiromi", "Sasano"], ["Hyun A", "Shin"], ["Eva", "Martincova"], ["Sandra", "Waechtershauser"], ["Hwa Ju", "Jeung"], ["Maite", "Vila"], ["Alona", "Nakamura"], ["Lubomira", "Bacheva"], ["Eun Ha", "Kim"], ["Mami", "Donoshiro"], ["Andrea", "Tunko"], ["Sophie", "Cortina"], ["Caroline", "Hora"], ["Yi", "Liu"], ["Ande", "Tulp"], ["Mariana", "Eberle"], ["Hyun Hee", "Sohn"], ["Stefania", "Pifferi"], ["Saira", "Sanchinelli"], ["Rita", "Grande"], ["Patricia", "Rodriguez"], ["Valeria", "Valente"], ["Amanda", "Weinhold"], ["Mette", "Sigmundstad"], ["Julia", "Jehs"], ["Magdalena", "Maleeva"], ["Amanda", "Browne"], ["Estelle", "Gevers"], ["Beatriz", "Miravete"], ["Maria Dolores", "Campana"], ["Yumiko", "Nakazima"], ["Sherry", "Buller"], ["Kelly", "Duns"], ["Maija", "Avotins"], ["Olga", "Hostakova"], ["Alexandra", "Scholer"], ["Petra", "Begerow"], ["Vlada", "Kirilovska"], ["Larissa", "Schaerer"], ["Eva", "Diez"], ["Tomoe", "Hotta"], ["Ai", "Haigo"], ["Victoria", "Voznesenskaya"], ["Rieko", "Noda"], ["Sabine", "Haas"], ["Lara", "Bitter"], ["Yolanda", "Clemot Lerendegui"], ["Paola", "Tampieri"], ["Carine", "Bornu"], ["Shanna", "Strong"], ["Katie", "Schlukebir"], ["Imogen", "Wyatt"], ["Debbie", "Carr"], ["Marjorie", "Gantman"], ["Rita", "Degli Esposti"], ["Christine", "Joseph"], ["Jennie", "McMahon"], ["Laurence", "Duffaud"], ["Stefanie", "Meyer"], ["Kate", "Warne Holland"], ["Sandra", "Olsen"], ["Branislava", "Ivanovic"], ["Johanna", "Sones"], ["Eva", "Jimenez Sanz"], ["Maja", "Ipsa"], ["Magdalena", "Gargulakova"], ["Martina", "Nejedly"], ["Linda", "Engblom"], ["Nicole", "Strnadova"], ["Kirstin", "Freye"], ["Maggie", "Harris"], ["Young Ja", "Choi"], ["Esra", "Bayburt"], ["Sang Hoon", "Chung"], ["Catalina", "Cristea"], ["Nicole", "Roth"], ["Sylva", "Nesvadbova"], ["Gabriela", "Radu"], ["Nejla", "Gunay Karoglu"], ["Farah", "Dayoub"], ["Andrea", "Bilic"], ["Tze May", "Lee"], ["Ayami", "Akiyama"], ["Natalia", "Nemchinova"], ["Maria Jose", "Capuano"], ["Daniela", "Agostinone"], ["Angelique", "Olivier"], ["Suzanne", "Olson"], ["Noriko", "Miyamoto"], ["Asa", "Svensson"], ["Lesia", "Bilak"], ["Julie Ann", "Baird"], ["Petra", "Hradecka"], ["Petra", "Douderova"], ["Maaike", "Koutstaal"], ["Dominique", "Bovey"], ["Alison", "Bell"], ["Joanne", "Ward"], ["Bontshetse", "Seleka"], ["Eliana", "Della Vedova"], ["Marcia", "Senn"], ["Pam", "Nelson"], ["Marta", "Cruells Lopez"], ["Ai", "Sugiyama"], ["Johanna", "Bihr"], ["Kveta", "Peschke"], ["Christina", "Habernigg"], ["Marketa", "Kochta"], ["Olga", "Arevalo"], ["Hiroko", "Ishizaki"], ["Angie", "Guillette"], ["Melody", "Falco"], ["Tiffini", "Huggins"], ["Maria Lovella", "Catalan"], ["Nathaly", "Tijssen"], ["Ryouko", "Yamada"], ["Hiroko", "Mochizuki"], ["Gloria", "Pizzichini"], ["Katerina", "Zajacova"], ["Hye Jin", "Seo"], ["Marijana", "Randjelovic"], ["Cynthia", "Ojeda"], ["Maria Fernanda", "Landa"], ["Melissa", "Beadman"], ["Sandra", "Costa Corral"], ["Khristen", "Pietrucha"], ["Sandrella", "Droubi"], ["Angeles", "Montolio"], ["Lara", "Howes"], ["Zara", "Wolseley"], ["Jasmine", "Angeli"], ["Joanna", "Bauza"], ["Maria", "Hernandez"], ["Mariela", "Marinaro"], ["Michaela", "Seibold"], ["Katarzyna", "Malec"], ["Jing Jing", "Chen"], ["Zorica", "Glisic"], ["Jennifer", "Fiers"], ["Valeria", "Strappa"], ["Cristina", "Caparis"], ["Kylie", "Hunt"], ["Carla", "Santini"], ["Claudia", "Harrison"], ["Ma Eugenia", "Abrate"], ["Patamika", "Phongsuramas"], ["Tina", "Vukasovic"], ["Elena", "Likhovtseva"], ["Heather", "Bates"], ["Barbara", "Castro"], ["Kata", "Gyorke"], ["Petra", "Studnicka"], ["Rosana", "De Los Rios"], ["Natalia", "Bondarenko"], ["Dina", "Dajani"], ["Maylani", "Ah Hoy"], ["Marta", "Cano"], ["Margarita", "Mejia"], ["Karen", "Anderson"], ["Dewi", "Wijayanthi"], ["Manuela", "Grosskopf"], ["Olesya", "Artemeva"], ["Kym", "Hazzard"], ["Tankiso", "Letseka"], ["Natalie", "Adsuar"], ["Karine", "Preaud"], ["Monica", "Chornet Velasco"], ["Julie", "Thu"], ["Anne", "Kremer"], ["Berengere", "Karpenschif"], ["Monique", "Fitters"], ["Christina", "Weiss"], ["Soon Nam", "Kim"], ["Pao Hua", "Huang"], ["Sue", "Kocsis"], ["Diana", "Spadea"], ["Valerie", "Feger"], ["Leanne", "Melgaard"], ["Julie", "Pullin"], ["Angie", "Marik"], ["Kelly", "Rudolph"], ["Alena", "Nesticka"], ["Ines", "Heise"], ["Cristina", "Cortes"], ["Suzana", "Rodrigues"], ["Gabriela Aura", "Zarnoveanu"], ["Denisa", "Legac"], ["Mihaela", "Ghica"], ["Sarah", "Pitkowski Malcor"], ["Aradhana", "Reddy"], ["Anne", "Puissant"], ["Ju Yeon", "Choi"], ["Natalia", "De Cola"], ["Yasmin", "Attia Abdalla"], ["Yoriko", "Kokubun"], ["Betsy", "Miringoff"], ["Natalie", "Nagyova"], ["Emanuela", "Falleti"], ["Martina", "Schiavo"], ["Ana", "Laso"], ["Anna", "Klim"], ["Lorena", "Romano"], ["Magali", "Benitez"], ["Isabell", "Quast"], ["Jeong Hee", "Paek"], ["Ana", "Gasparyan"], ["Soumia", "Islami"], ["Ana Maria", "Hartweg"], ["Martina", "Zichova"], ["Laura", "Nurminen"], ["Ditta", "Huber"], ["Akemi", "Sato"], ["Sissy", "Carvin"], ["Jutta", "Ribitsch"], ["Lucinda", "Gibbs"], ["Sophie", "De Taxis"], ["Shaila", "Ali"], ["Esme", "De Villiers"], ["Yeon Hee", "Cho"], ["Ana Valeria", "Rolon"], ["Natalia", "Soetrisno"], ["Sonal", "Marker"], ["Martina", "Crha"], ["Alenka", "Ovin"], ["Floor", "Vioen"], ["Claudia", "Marsili"], ["Miia", "Kohtala"], ["Dora", "Djilianova"], ["Cristiana", "Marradi"], ["Katherine", "Costain"], ["Audrey", "Ludwig"], ["Laurence", "Courtois"], ["Conchita", "Martinez Granados"], ["Marie Christine", "Caron"], ["Ma Llanos", "Soriano"], ["Vanessa", "Webb"], ["Olga", "Vymetalkova"], ["Ai", "Ozawa"], ["Subhra", "Shukla"], ["Lusy", "Kumala"], ["Hanako", "Kamiya"], ["Nicole", "London"], ["Nancy", "Feber"], ["Katarina", "Misic"], ["Linda Beate", "Andersen"], ["Silvia", "Aneiros"], ["Evelyn", "Platzer"], ["Nina", "Murn"], ["Eiko", "Toba"], ["Maria Luciana", "Reynares"], ["Viktoria", "Gimberg"], ["Amanda", "Hopmans"], ["Thea", "De Weerd"], ["Elpis", "Alexandrou"], ["Dionne", "Lim"], ["Tomoko", "Sekiguchi"], ["Chanda", "Rubin"], ["Giorgia", "Capanni"], ["Charlotte", "Ruitenberg"], ["Stefanie", "Kolar"], ["Cindy", "Xu"], ["Tasha", "Jackson"], ["Audrey", "Cocuaud"], ["Maria Noel", "Losada"], ["Severine", "Augros"], ["Valentina", "Terio"], ["Carolina", "Azcui"], ["Saranga", "Sangakkara"], ["Mariam", "Rahim"], ["Catrin", "Mueller"], ["Mireille", "Bink"], ["Adriana", "Serra Zanetti"], ["Seon Young", "Park"], ["Natascha", "De Kramer"], ["Joanne", "Moore"], ["Marielle", "Bruens"], ["Cheah Sui", "Kim"], ["Barbara", "Schett"], ["Asli", "Kocaoemer"], ["Mariana", "Diaz Oliva"], ["Severine", "Arpajou"], ["Caroline", "Rossel"], ["Elena", "Tsagalidou"], ["Csilla", "Dobo"], ["Caroline", "Germar"], ["Corinne", "Ng Tung Hing"], ["Miho", "Saeki"], ["Catrin", "Muller"], ["Vera", "Zhukovets"], ["Rurika", "Maruse"], ["Amanda", "Wainwright"], ["Meang", "Liew"], ["Mariska", "Steenkamp"], ["Andrea", "Behalova"], ["Ellen", "Muller"], ["Jennifer", "Capriati"], ["Laura", "Montalvo"], ["Elisa", "Penalvo"], ["Mary Beth", "Maggart"], ["Manuela", "Kostner"], ["Yuka", "Yoshida"], ["Sudsobhi", "Chatsuthiphan"], ["Oksana", "Yarikova"], ["Pia Lena", "Ander"], ["Nadine", "Plaizier"], ["Jennifer", "Carter"], ["Lei", "Chen"], ["Eugenia", "Lopez Ascarte"], ["Edita", "Liachoviciute"], ["Noa", "Horovitz"], ["Ralitza", "Doneva"], ["Gabriele", "Masiliunaite"], ["Kim", "De Weille"], ["Lorena", "Brain"], ["Ines", "Buermeyer"], ["Geraldine", "Dondit"], ["Caroline", "Toyre"], ["Henriette", "Van Aalderen"], ["Manon", "Savelkouls"], ["Eva", "Erbova"], ["Barbara", "De Wilde"], ["Roberta", "Zandarin"], ["Virginie", "Massart"], ["Laura", "Sham"], ["Lenka", "Nemeckova"], ["Sharon", "Russell"], ["Alessaundra", "De Perini"], ["Karen", "Gebauer"], ["Sonya", "Jeyaseelan"], ["Julie", "Steven"], ["Alexandra", "Schneider"], ["Sara", "Ventura"], ["Maia", "Stankova"], ["Alicia", "Ortuno"], ["Varalee", "Sureephong"], ["Svetlana", "Soldatenkova"], ["Gisela", "Riera Roura"], ["Francesca", "LaO"], ["Patricia", "Segala"], ["Ursula", "Svetlik"], ["Cristina", "Portas Soy"], ["Sally Ann", "Cuttler"], ["Natalie", "Frawley"], ["Simona", "Porchia"], ["Vanessa", "Rooks"], ["Annette", "Zweck"], ["Carolina", "Molins"], ["Yael", "Beckman"], ["Niki", "Tippins"], ["Sofia", "Finer"], ["Maria Jose", "Likibi"], ["Milena", "Kornil"], ["Divina", "Escala"], ["Julia", "Abe"], ["Motoe", "Uchida"], ["An Qi", "Ge"], ["Alessia", "Lombardi"], ["Natalia", "Gonzalez Quintero"], ["Pingkan", "Lumenta"], ["Dawn", "Buth"], ["Katrin", "Ittensohn"], ["Ekaterina", "Nossik"], ["Giana", "Gutierrez"], ["Mashona", "Washington"], ["Sabina", "Radevicova"], ["Chamsi", "Filali"], ["Gabriela", "Chmelinova"], ["Ryoko", "Takemura"], ["Antonella", "Pozzi"], ["Lindsay", "Davenport"], ["Jodie", "Lynn"], ["Shizu", "Katsumi"], ["Sylwia", "Rynarzewska"], ["Nina", "Nittinger"], ["Karin", "Asberg"], ["Magda", "Leal"], ["Madoka", "Kuki"], ["Katja", "Pohlmann"], ["Irina", "Komarova"], ["Andrea", "Montoya"], ["Nadia", "Bibarss"], ["Kendra", "Howard"], ["Blanka", "Kumbarova"], ["Christina", "Ferreira"], ["Peggy", "Rouquier"], ["Paola", "Suarez"], ["Suvikukka", "Forsius"], ["Adriana", "Gersi"], ["Nicole", "Funk"], ["Malgorzata", "Jankowska"], ["Shinobu", "Asagoe"], ["Valentina", "Murgo"], ["Karen", "Nugent"], ["Natalia", "Garcia"], ["Karoline", "Borgersen"], ["Anita", "Buggins"], ["Heike", "Rusch"], ["Helena", "Fremuthova"], ["Margaret", "Schnakenburg"], ["Emmanuelle", "Gagliardi"], ["Audrey", "Pierrich"], ["Sandra", "Kellemberger"], ["Helen", "Parsons"], ["Anna", "Smashnova"], ["Andrea", "Glass"], ["Romana", "Tedjakusuma"], ["Stephanie", "De Ville"], ["Anke", "Roos"], ["Amanda", "Dundas"], ["Lizzy", "Jelfs"], ["Khady NDeye", "Diop"], ["Renata", "Kolbovic"], ["Arati", "Ponnappa"], ["Yuan", "Wen"], ["Valeria", "Cecchetti"], ["Manuela", "Schwerzmann"], ["Katalin", "Miskolczi"], ["Carmina", "Giraldo"], ["Pavlina", "Bartunkova"], ["Jane", "White"], ["Soon Hye", "Lee"], ["Tatiana", "Panova"], ["Virginia", "Gollut"], ["Thea", "Ivanisevic"], ["Emanuela", "Sangiorgi"], ["Julie", "Mansour"], ["Emmanuelle", "Zowczak"], ["Maren", "Muller"], ["Lorna", "Woodroffe"], ["Diana", "Foldenyi"], ["Jennifer", "Duncan"], ["Liezel", "Huber"], ["Monita", "Horn"], ["Elena", "Tatarkova"], ["Sabine", "Resch"], ["Jarita", "Selenius"], ["Alica", "Herda"], ["Mariam", "Ramon Climent"], ["Mihaela", "Vulpe"], ["Helen", "Laupa"], ["Sarka", "Snorova"], ["Gabija", "Talberga"], ["Nicole", "Wist"], ["Martina", "Schaller"], ["Nina", "Miu"], ["Annie", "Trepanier"], ["Sandra", "Angerer"], ["Lucie", "Steflova"], ["Saori", "Honda"], ["Satoko", "Kurioka"], ["Tonka", "Doric"], ["Rieka", "Ito"], ["Nozipho Gloria", "Sithole"], ["Melitta", "Miklosi"], ["Lauren", "Nikolaus Zink"], ["Vanessa", "Castellano"], ["Ana Carola", "Guzman"], ["Zuzana", "Nemsakova"], ["Julie", "Hanger"], ["Ximena", "Rodriguez"], ["Ingy", "El Taweel"], ["Ella", "Ionescu"], ["Manisha", "Malhotra"], ["Nicoletta", "Pericleous"], ["Maria Ines", "Araiz"], ["Tina Helen", "Soderstrom"], ["Jana", "Kandarr"], ["Vicky", "Barker"], ["Michaela", "Hasanova"], ["Noriko", "Miyazaki"], ["Patricia", "Camina"], ["Yu Chun", "Huang"], ["Michaila", "Hasanova"], ["Liora", "Levin"], ["Gaye", "Mcmanus"], ["Mina", "Abdul Rahman"], ["Li", "Li"], ["Lonny", "Young"], ["Magdalena", "Kucerova"], ["Stephanie", "Testard"], ["Sandrine", "Chevy"], ["Maria Laura", "Bertolo"], ["Bridget", "Merrick"], ["Guadalupe", "Bugallo"], ["Vanessa", "Menga"], ["Manuela", "Costa"], ["Patty", "Van Acker"], ["Anna", "Bleszynski"], ["Janet", "Lee"], ["Deepa", "Engade"], ["Masako", "Naito"], ["Kerstin", "Marent"], ["Eun Jeong", "Lee"], ["Helina", "Lill"], ["Jana", "Dorodnova"], ["Rachel", "Dive"], ["Maria Teresa", "Guell"], ["Natalie", "Dittmann"], ["Pamela", "Zingman"], ["Mariela", "Cornejo"], ["Andrea", "Hoch"], ["Marwa", "El Wany"], ["Rachael", "Mcardle"], ["Carlotta", "Stasi"], ["Eva", "Krejcova"], ["Elena", "Krutko"], ["Karolina", "Petrikova"], ["Michaela", "Lincoln"], ["Marissa", "Lincoln"], ["Cecilia", "Hincapie"], ["Evelyn", "Fauth"], ["Cecile", "De Winne"], ["Anouschka", "Boralessa"], ["Stephanie", "Chi"], ["Nirupama", "Sanjeev"], ["Aminat", "Balogun"], ["Ishraq", "Salman"], ["Cintia", "Tortorella"], ["Alex", "Napier"], ["Daria", "Turpak"], ["Madalina", "Niculaita"], ["Tumeka", "Harris"], ["Victoria", "Hunt"], ["Elise", "Crozier"], ["Carine", "Maisonnave"], ["Marina", "Novelli"], ["Yumi", "Yokoi"], ["Seung Yeon", "Kang"], ["Vanessa", "Brilleman"], ["Wei", "Qie"], ["Sybil", "Parker"], ["Lotty", "Seelen"], ["Julia", "Carballal Fernandez"], ["Sara", "Pritchard"], ["Miriam", "Schnitzer"], ["Susana", "De Andres Therond"], ["Lisa", "Camenzuli"], ["Caroline", "Hall"], ["Alina", "Jidkova"], ["Ana Paula", "Zannoni"], ["Margarita", "Medina"], ["Anne", "Miller"], ["Jennifer", "Hall"], ["Delphine", "Costantini Benoit"], ["Daniela", "Cocos"], ["Anna", "Linkova"], ["Monika", "Mastalirova"], ["Lenka", "Cenkova"], ["Maria Francesca", "Bentivoglio"], ["Ruta", "Deduraite"], ["Kum Ok", "Im"], ["Mai", "Tanii"], ["Cindy", "Dock"], ["Nadine", "Van De Walle"], ["Lee", "Chan"], ["Marina", "Escobar Martinez"], ["Aarthi", "Venkatesan"], ["Nino", "Louarsabishvili"], ["Olga", "Ivanova"], ["Amira", "Segaoula"], ["Ana Elizabeth", "Jimenez Garcia"], ["Candida", "Reid"], ["Frances", "Hearn"], ["Ditte", "Hougaard"], ["Sophie", "Georges"], ["Charlotta", "Aronsson"], ["Anthonia", "Onwochie"], ["Cristina", "Moros"], ["Norma", "Aules"], ["Petra", "Gaspar"], ["Sai Jayalakshmy", "Jayaram"], ["Monica", "Bonilla"], ["Barbara", "Urbanska"], ["Amaranta", "Spinelli"], ["Diana", "Sutedja"], ["Kandiss", "Creighton"], ["Melanie", "Schnell"], ["Dally", "Randriantefy"], ["Silvia", "Schiavetti"], ["Clelia", "Anfuso"], ["Raffaella", "Valentino"], ["Debby", "Haak"], ["Misae", "Sakai"], ["Courtenay", "Chapman"], ["Courtenay", "Middleton"], ["Zoe", "Mellis"], ["Ana Paula", "Mores"], ["Arthi", "Venkatesan"], ["Jennifer", "Aubernon"], ["Ludmila", "Richterova"], ["Audrey", "Sidot"], ["Siobhan", "Munro"], ["Mehry", "Shawki"], ["Mirela", "Vladulescu"], ["Camila", "Andolfato"], ["Tamara", "Rollenberg"], ["Maria", "Geznenge"], ["Tanja", "Karsten"], ["Maria", "Gusheva"], ["Anat", "Ashtamkar"], ["Ludivine", "Laville"], ["Karla", "Porter"], ["Jennifer", "Ligator"], ["Oksana", "Enik"], ["Kyoko", "Kojima"], ["Ivana", "Beli"], ["Celeste", "Frey"], ["Monika", "Kasianiuk"], ["Timea", "Ferenczy"], ["Kirsten", "Schenk"], ["Susanna", "Bostanjyan"], ["Yolanda", "Civit Canals"], ["Kristina", "Brandi"], ["Karine", "Gallet"], ["Ivana", "Belancic"], ["Radka", "Pelikanova"], ["Adriana", "Mingireanu"], ["Juliana", "Piumatti"], ["Jenny", "Rolf"], ["Laura", "Austin"], ["Rosa Maria", "Perez"], ["Hsueh Li", "Hsu"], ["Stephanie", "Nickitas"], ["Linda", "Smaira"], ["Noelia", "Serra"], ["Sasha", "Mattu"], ["Yan", "Chen"], ["Bonnie", "Bleecker"], ["Sasha", "Hanna"], ["Ciska", "Kramer"], ["Keiko", "Tameishi"], ["Teodora", "Nedeva"], ["Georgia", "Fernandes"], ["Yi Ching", "Wu"], ["Zuzana", "Hejdova"], ["Alina", "Wyganowska"], ["Jiang", "Yu"], ["Chin Bee", "Khoo"], ["Freekje", "Maas"], ["Kelly", "Callahan"], ["Kelly", "Brown"], ["Katia", "Altilia"], ["Rosanna", "Valerio"], ["Laura", "Garcia Pacual"], ["Milena", "Nekvapilova"], ["Cristina", "Portas"], ["Chie", "Nagano"], ["Yamile", "Fors Guerra"], ["Monica", "Rebolledo"], ["Shalini", "Perera"], ["Sara", "Haider"], ["Patrycja", "Gajdzik"], ["Manisha", "Patel"], ["Anca", "Barna"], ["Karolina", "Bakalarova"], ["Carmen", "Madden"], ["Tomomi", "Sumi"], ["Kristen", "Sanderson"], ["Jumoke", "Ajulo"], ["Carlijn", "Buis"], ["Janina", "Tajkovsky"], ["Katrin", "Meiss"], ["Lenka", "Humenikova"], ["Surabhi", "Singh"], ["Francois", "Ramos"], ["Tamarine", "Tanasugarn"], ["Polina", "Galanina"], ["Melissa", "Avants"], ["Anna", "Mogilnicka"], ["Dominika", "Gerwin"], ["Coral", "Orpi"], ["Tara", "Snyder"], ["Ruth", "Diaz"], ["Katie", "Mcglennen"], ["Rosa Maria", "Andres Rodriguez"], ["Nathalie", "Callen"], ["Metasebeya", "Temesgen"], ["Anna Sabrina", "Ferrari"], ["Kumi", "Hagino"], ["Nezha", "Saber"], ["Tanja", "Buchheim"], ["Irene", "Macia"], ["Maria Paola", "Zavagli"], ["Cintia", "Seaton"], ["Haruka", "Inoue"], ["Victoria", "Courmes Benedetti"], ["Yvette", "Basting"], ["Angelika", "Roesch"], ["Dorota", "Glowacka"], ["Hadas", "Ronen"], ["Nadine", "Raidt"], ["Sachiyo", "Hirayama"], ["Temesgen", "Metasebeya"], ["Andressa", "Bornschein"], ["Brandi", "Freudenberg"], ["Katya", "Zenklusen"], ["Alena", "Havrlikova"], ["Michelle", "Smith"], ["Ruth Tekle", "Andemariam"], ["Tjasa", "Jezernik"], ["Chern Yi", "Chiew"], ["Mariana", "Lopez Palacios"], ["Raluca", "Gheorghe"], ["Maria Eliana", "Castro"], ["Antoaneta", "Pandjerova"], ["Inga", "Bertschmann"], ["Virginia", "Tournebise"], ["Amira", "El Borolossy"], ["Claudia", "Reimering"], ["Valentina", "Solari"], ["Kym", "Laver"], ["Lindsay", "Lee Waters"], ["Graciela", "Velez"], ["Tathiana", "Garbin"], ["Athina", "Briegel"], ["Lana", "Scardigno"], ["Lobena", "Cherif"], ["Federica", "Maldini"], ["Andrea", "Piski"], ["Adriana", "Thaggard"], ["Petra", "Spaar"], ["Selima", "Sfar"], ["Cristina", "Lopez Santos"], ["Fernanda", "Tsucamoto"], ["Eleonora", "Dickinger"], ["Callie", "Creighton"], ["Francesca", "Lubiani"], ["Laura Mirabela", "Teodorescu"], ["Mirabela", "Teodorescu"], ["Nicole", "Kaiser"], ["Samira", "Takourabet"], ["Georgina", "Palombo"], ["Frida", "Flores"], ["Sylvia", "Plischke"], ["Paula", "Racedo"], ["Nicola", "Kaiwai"], ["Assmae", "Jabri"], ["Barbara", "Fuzesi"], ["Joana", "Manta"], ["Megumi", "Katakura"], ["Yvonne", "Flynn"], ["Mariana", "Moreno"], ["Barbara", "Lado"], ["Olga", "Ivlieva"], ["Zuzana", "Lesenarova"], ["Dragana", "Zaric"], ["Mira", "Veghova"], ["Massoumeh", "Emami"], ["Eva", "Teruel Jover"], ["Maria Elena", "Jimenez"], ["Iva", "Majoli"], ["Jodi", "Richardson"], ["Mariana", "Faustinelli"], ["Li", "Chen"], ["Gabriela", "Lancman"], ["Giselle", "Swart"], ["Jenny Ann", "Fetch"], ["Elizabeth", "Schmidt"], ["Veronika", "Safarova"], ["Sasithorn", "Tangthienkul"], ["Tari Ann", "Toro"], ["Alice", "Rangsithienchai"], ["Milena", "Stanoycheva"], ["Nicole", "Oomens"], ["Victoria", "Bakhtadze"], ["Hila", "Rosen"], ["Sanaa", "Ziadi"], ["Sirilux", "Mingmolee"], ["Noelia", "Serra Djamdjean"], ["Trudi", "Musgrave"], ["Sandrine", "Bouilleau"], ["Hiroko", "Komori"], ["Brigitte", "Loogen"], ["Maria Soledad", "Coppari"], ["Leyla", "Ogan"], ["Ajda", "Klevisar"], ["Vanessa", "Kendall"], ["Megan", "Miller"], ["Elizabeth", "Fletcher"], ["Saida", "Hared"], ["Emi", "Sakurai"], ["Carolina", "Melicoff"], ["Dominique", "Glinzler"], ["Paola", "Martinez"], ["Radka", "Surova"], ["Lilly", "Raffa"], ["Nicola", "Payne"], ["Miranda", "Ball"], ["Julie", "Huang"], ["Hsiao Chuan", "Fan"], ["Esther", "Knox"], ["Rushmi", "Chakravarthi"], ["Karina", "Miguenz"], ["Jorgelina", "Torti"], ["Rute", "Almeida"], ["Ji Young", "Yoo"], ["Yu Min", "Fan Chiang"], ["Mariela", "Brunello"], ["Paola", "Almeida"], ["Martina", "Nedelkova"], ["Martina", "Somoano"], ["Andrea", "Hardegger"], ["Shivani", "Bhatt"], ["Nadia", "Johnston"], ["Akiko", "Kinebuchi"], ["Paula", "Hermida Velo"], ["Cecilia", "Simon"], ["Lenka", "Zacharova"], ["Camilla", "Kremer"], ["Kaori", "Kuki"], ["Katerina", "Hladka"], ["Linda", "Sentis"], ["Lilian", "Ighodaro"], ["Miroslava", "Veghova"], ["Monica", "Toledo"], ["Anastasia", "Pozdnyakova"], ["Maria", "Sanchez Lorenzo"], ["Lucie", "Dvorakova"], ["Eva", "Slaninkova"], ["Maria Veronica", "Widyadharma"], ["Sadiya", "Pathan"], ["Mirva", "Maenpaa"], ["Gaelle", "Adda"], ["Yu Mei", "Chen"], ["Stefanie", "Haidner"], ["Veronica", "Stele"], ["Gabriela", "Netikova"], ["Sandra", "Deamelio"], ["Anne Sophie", "Bittighoffer"], ["Birgit", "Riederer"], ["Tara Deen", "Moore"], ["Alison", "Nash"], ["Pimpisamai", "Kansuthi"], ["Gabriela", "Kucerova"], ["Charlotte", "Aagaard"], ["Kara", "Warkentin"], ["Anna Maria", "Doan"], ["Sidonia", "Wolfinger"], ["Veronica", "Goude"], ["Marta", "Peman"], ["Patricia", "Mongauzi"], ["Gabriella", "Somers"], ["Aleksandra", "Olsza"], ["Vanessa", "Caddick"], ["Karin", "Miller"], ["Nena", "Vukasovic"], ["Ana", "Friganovic"], ["Ivona", "Mihailova"], ["Irena", "Mihailova"], ["Fiona", "Barrett"], ["Diana", "Escalante"], ["Imen", "Ben Larbi"], ["Murjana", "Boskova"], ["Magali", "Partyka"], ["Leloba", "Seitshiro"], ["Jung Hua", "Kuo"], ["Sandra", "Mantler"], ["Pei Jung", "Wu"], ["Gaelle", "Widmer"], ["Adrienn", "Hegedus"], ["Karin", "Palme"], ["Maria Eugenia", "Rojas"], ["Sarah", "Stanley"], ["Tanja", "Magoc"], ["Shareen Rena", "Lai"], ["Kyra", "Nagy"], ["Hrafuhildur", "Hannesdotter"], ["Julia", "Adlbrecht"], ["You Shu", "Wu"], ["Oshri", "Shashua"], ["Eugenia", "Silantieva"], ["Josien", "Boverhof"], ["Lilit", "Teloumian"], ["Isabel", "Horkmans"], ["Inga", "Albers"], ["Vanessa", "Basora"], ["Laura", "Fodorean"], ["Daniela", "Forti"], ["Susana", "Carreras"], ["Lucia", "Curielli"], ["Lucy", "Altman"], ["Jana", "Staskova"], ["Lui Li", "Shen"], ["Lorena", "Martinez"], ["Upeka", "Wijeratne"], ["Lydia", "Perkins"], ["Silvija", "Talaja"], ["Marie Ange", "Koami"], ["Mercedes", "Del Valle Prieto"], ["Amanda", "Keen"], ["Aurea", "Castella"], ["Irina", "Kornienko"], ["Angela", "Geib"], ["Petra", "Mandula"], ["Meilen", "Tu"], ["Yin", "Chen"], ["Louise", "Latimer"], ["Michelle", "Faucher"], ["Amanda", "Augustus"], ["Alexandra", "Guzman"], ["Zuzana", "Rakicka"], ["Yenny", "Kumalawati"], ["Biljana", "Pawlowa Dimitrova"], ["Maria", "Pavlidou"], ["Nadia", "Chvanova"], ["Sylvia", "Lokollo"], ["Lizeth", "Asuaje"], ["Daria", "Ovsyannikova"], ["Petra", "Plackova"], ["Yumi", "Kawakita"], ["Olga", "Glouschenko"], ["Maria Rene", "Espinosa"], ["Joanna", "Gozdek"], ["Corina", "Morariu"], ["Laura", "Bernal"], ["Geraldine", "Aizenberg"], ["Claudia", "Oliveira"], ["Clara", "Udofa"], ["Annabel", "Ellwood"], ["Ingrid", "Meeus"], ["Jolanda", "Mens"], ["Andrea", "Nathan"], ["Jenny", "Falcon Manrique"], ["Mi Ra", "Jeon"], ["Tu", "Dong"], ["Anne", "Stueckle"], ["Karina", "Karner"], ["Maria Florica", "Pandele"], ["Michaela", "Lazerova"], ["Jana", "Bourova"], ["Isabella", "Kling"], ["Rita", "Kuti Kis"], ["Valentine", "Vernaz"], ["Hiromi", "Okazaki"], ["Celeste", "Contin"], ["Isil", "Cayirli"], ["Cristina", "Bengzon"], ["Futaba", "Kubota"], ["Shalini", "Thakar"], ["Agata", "Odachowska"], ["Maiken", "Pape"], ["Adeyinka Elisabeth", "Thompson"], ["Magali", "Lamarre"], ["Claudia", "Perolini"], ["Natyanee", "Tanawsri"], ["Kylie", "Moulds"], ["Dorothee", "Kurz"], ["Luisa", "Fantola"], ["Nina", "Wenger"], ["Joanna", "Phang"], ["Stephanie", "Koderisch"], ["Habiba", "Ifrakh"], ["Iva", "Berankova"], ["Tagifano", "Soonalole"], ["Alexandra", "Kleffel"], ["Akiko", "Gunji"], ["Claire", "Curran"], ["Antonina", "Grib"], ["Izaskun", "Bernal"], ["Seiko", "Okamoto"], ["Natacha", "Randriantefy"], ["Lauren", "Rose"], ["Vivian", "Acra"], ["Marissa", "Gildemeister"], ["Anca", "Vasiloaica"], ["Alexandra", "Charles"], ["Adriana", "Lopez"], ["Cindy", "Watson"], ["Zuzana", "Demeterova"], ["Zuzana", "Lindner"], ["Katarina", "Lindner"], ["Ludivine", "Nicolas"], ["Caroline", "Marret"], ["Segolene", "Berger"], ["Amelie", "Cocheteux"], ["Agustina", "Saenz"], ["Tina", "Plivelitsch"], ["Aoife", "ONeill"], ["Kim", "Kelly"], ["Cassia", "Sigle"], ["Tsarina", "Domacasse"], ["Fiana", "Meineck"], ["Saskia", "Meineck"], ["Miroslava", "Vavrinec"], ["Aurelie", "Freysz"], ["Giulia", "De Muro"], ["Na", "Fan"], ["Beatriz", "Aguilar"], ["Melinda", "Glenister"], ["Jasmine", "Choudhury"], ["Natalia", "Nikitina"], ["Lilia", "Osterloh"], ["Siobhan", "Drake Brockman"], ["Bojana", "Borovnica"], ["Geraldine", "Figueiredo"], ["Amelie", "Castera"], ["Anne Laurence", "Bilenne"], ["Gisele", "Ferreira"], ["Spela", "Kobetic"], ["Hana", "Sromova"], ["Reiko", "Ino"], ["Leonie", "Odriscoll"], ["Galina", "Dimitrova"], ["Katarina", "Markovski"], ["Guadalupe", "Hernandez"], ["Bianca", "Cremer"], ["Camilla", "Hsu"], ["Annica", "Lindstedt"], ["Hye Young", "Bae"], ["Yi Dan", "Liu"], ["Brooke", "Siebel"], ["Grace", "Sorbello"], ["Petrona", "Bantay"], ["Lindsay", "Bruce"], ["Qi", "Tuo"], ["Belen", "Berbel Soriano"], ["Natalia", "Pellegrini"], ["Giulia", "Casoni"], ["Stephanie", "Sheppard"], ["Monica", "Scartoni"], ["Isabelle", "Taesch"], ["Anja", "Tragardh"], ["Luciana", "Ullmann"], ["Eva", "Sestakova"], ["Saori", "Obata"], ["Kingkaew", "Niroj"], ["Olga", "Timofeeva"], ["Tamara", "Aranda Nunez"], ["Milena", "Gadjanova"], ["Megan", "Dorney"], ["Irina", "Zhdanova"], ["Nicole", "Melch"], ["Alice", "Canepa"], ["Eva", "Belbl"], ["Michelle", "Summerside"], ["Vladimira", "Uhlirova"], ["Chantal", "Reuter"], ["Hye Jeong", "Chang"], ["Laura", "Frias"], ["Sara", "Bonomi"], ["Sandra", "Kleinova"], ["Mirja", "Wagner"], ["Orit", "Strauss"], ["Laura", "Rossi"], ["Anna", "Kazakevitch"], ["Monica", "Baez"], ["Jana", "Ondrouchova"], ["Ewa", "Grusiecka"], ["Sarah", "Scaringe"], ["Yoko", "Torii"], ["Ana Paola", "Gonzalez Diaz"], ["Magdelena", "Zdenovcova"], ["Kirsty", "Blumberg"], ["Lynette", "Tay"], ["Anne", "Plessinger"], ["Adriana", "Barna"], ["Magdalena", "Rejniak"], ["Typhaine", "Cottenier"], ["Michelle", "Buess"], ["Anna", "White"], ["Hanna Katri", "Aalto"], ["Ambreen", "Rana"], ["Jana", "Benova"], ["Katia", "Roubanova"], ["Raquel", "Ortega Herran"], ["Tamara", "Pavlov"], ["Kristina", "Pojatina"], ["Eva", "Januskova"], ["Andreea", "Petrisor"], ["Nathalie", "Jarlan"], ["Renee", "Reid"], ["Izumi", "Sugimoto"], ["Karolina", "Glowacka"], ["Moriyo", "Adachi"], ["Marina", "Petrovic"], ["Karina", "Rinaldi"], ["Anna", "Persson"], ["Desislava", "Topalova"], ["Sofia", "Managadze"], ["Eveline", "Wouters"], ["Sofia", "Quaglia"], ["Marissa", "Catlin"], ["Laura", "Gotarredona"], ["Kyoko", "Iida"], ["Romina", "Ottoboni"], ["Melinda", "Petkes"], ["Laura", "Aguero"], ["Amanda", "Basica"], ["Stefania", "Stefansdottir"], ["Linda", "Mattsson"], ["Maria Andrea", "Quintero"], ["Hong Hui", "Liu"], ["Biljana", "Joketovic"], ["Anita", "Kurimay"], ["Veneta", "Karatchomakova"], ["Monika", "Pimentel"], ["Surina", "De Beer"], ["Tokiyo", "Ikeda"], ["Ana Maria", "Moura"], ["Yasuko", "Nishimata"], ["Tzu Ting", "Weng"], ["Tatjana", "Jecmenica"], ["Selin", "Nassi Tekikbas"], ["Meirav", "Duek"], ["Lindsay", "Alpert"], ["Melania", "Mirambell"], ["Matilda", "David"], ["Si Yiah", "Ling"], ["Mary Carlisle", "White"], ["Natasha", "Papadopoulou"], ["Marijana", "Kovacevic"], ["Dalia", "El Sheikh"], ["Maria", "Lindberg"], ["Lilian", "Silva"], ["Melanie", "Schneider"], ["Katherine", "Tessier"], ["Kiriaki", "Karaproimou"], ["Carolina", "Kanacri"], ["Shelley", "Bryce"], ["Marina", "Lazarovska"], ["Ivona", "Grujic"], ["Mamotebang", "Molise"], ["Amy", "Jensen"], ["Hisayo", "Unno"], ["Emeka", "Mayes"], ["Carolina", "Mayorga"], ["Monica", "Massarella"], ["Adriana", "Rodriguez"], ["Edurne", "Tabernero"], ["Sabine", "Oristil"], ["Tatiana", "Babina"], ["Agustine", "Limanto"], ["Ekaterina", "Kavoun"], ["Kaoutar", "Yazghi"], ["Nadeja", "Karpol"], ["Patricia", "Wartusch"], ["Traci", "Green"], ["Jessica", "Steck"], ["Laurence", "Combes"], ["Veronika", "Jakimicova"], ["Jennifer", "Russell"], ["Sun Young", "Kim"], ["Nuria", "Martinez"], ["Jana", "Sokolenko"], ["Maria", "Persson"], ["Keiko", "Nagai"], ["Irina", "Kakoulia"], ["Veronica", "Castro"], ["Maria Shirley", "Valler"], ["Martini", "Pospisilova"], ["Miriam", "Dagostini"], ["Darina", "Mecova"], ["Zana", "Zlebnik"], ["Ann", "Simons"], ["Ding", "Ding"], ["Silvina", "Saulo"], ["Tamami", "Kamiyama"], ["Jenny", "Kuhlin"], ["Phorhathai", "Suksamran"], ["Caroline", "Leens"], ["Marina", "Raic"], ["Maria", "Rasmussen"], ["Laura", "Smith"], ["Sonja", "Foks"], ["Lechia", "Trewick"], ["Susan", "Huang"], ["Irina", "Nossenko"], ["Nina", "Schwarz"], ["Julieta", "Calabrese"], ["So Yeon", "Im"], ["Maria Julieta", "Lillo"], ["Nami", "Urabe"], ["Sara", "Taweel"], ["Carla", "Jimenez"], ["Annica", "Cooper"], ["Virginia", "Sadi"], ["Adriana", "Garuolis"], ["Isabel", "Santos"], ["Priyanka", "Contractor"], ["Nikoleta", "Pritargova"], ["Padma Preetham", "Mahalingam"], ["Kyung Joo", "Won"], ["Charlotte", "Feasby"], ["Ya Chi", "Yang"], ["Wei", "Ni"], ["Shera", "Wiegler"], ["Carolina", "Gago Fuentes"], ["Delphine", "Baudin"], ["Electra", "Henry"], ["Denisa", "Sobotkova"], ["Alina", "Stroiu"], ["Sally", "Bogaert Morel"], ["Barbora", "Zahnova"], ["Ana Catarina", "Nogueira"], ["Renata", "Brito"], ["Maria Fernanda", "Carrillo"], ["Gizella", "Turbok"], ["Isabel", "Dominguez Munaiz"], ["Kibibi", "Moseley"], ["Claire", "Lyte"], ["Dominika", "Olszewska"], ["Marine", "Nizri Spiegel"], ["Jody", "Anglin"], ["Mi Ok", "Kim"], ["Chia Yi", "Wu"], ["Kristen", "Radford"], ["Ana", "Sans"], ["Romina", "Labrador"], ["Kristina", "Irwan"], ["Nuria", "Montero"], ["Renata", "Martins"], ["Evi", "Murtiningsih"], ["Kadi", "Hilpus"], ["Archana", "Venkataraman"], ["Lesley", "Kramer"], ["Yun Ning", "Fu"], ["Nosa", "Esorae"], ["Jana", "Macurova"], ["Marieke", "Gunawan"], ["Sylvie", "Sallaberry"], ["Reina", "Oda"], ["Phyllis", "Wilunda"], ["Maja", "Mise"], ["Sona", "Saringulyan"], ["Jennifer", "De Spain"], ["Ariadne", "Katsouli"], ["Eve", "Langley"], ["Zsofia", "Golopencza"], ["Catherine", "Valantin"], ["Carolina", "Sanabria"], ["Anne Laure", "Le Guennec"], ["Helene", "Louvet"], ["Rafaela", "Boero"], ["Sarah", "Gillespie Jones"], ["Anneliese", "Rose"], ["Fotini", "Kapetanaki"], ["Stephanie", "Lobner"], ["Marina", "Andreoni"], ["Naoko", "Ishikawa"], ["Paola", "Gonzales"], ["Alida", "Gallovits"], ["Yang Jin", "Chung"], ["Juthika", "Chokshi"], ["Zhi Rong", "Liu"], ["Danielle", "Lund"], ["Ingrid", "Siegrist"], ["Monica", "Saffie"], ["Alessandra", "Dellaversana"], ["Carole", "Soubis"], ["Deborah", "Gaviria"], ["Marilia", "Fritelli"], ["Kim", "Niggemeyer"], ["Pamela", "Gonzalez"], ["Hanna", "Puustinen"], ["Brankica", "Stankovic"], ["Syna", "Schreiber"], ["Magdalena", "Grzybowska"], ["Francesca", "Maggi"], ["Patricia", "Marci"], ["Denise", "Doring"], ["Sachie", "Umehara"], ["Ya Fang", "Tsai"], ["Eszter", "Molnar"], ["April", "Gabler"], ["Paula", "Cantarutti"], ["Reetu", "Sethi"], ["Eun Kyung", "Kim"], ["Natalie", "Cahana"], ["Luciana", "Masante"], ["Jahnavi", "Parekh"], ["Ninani", "Coyne"], ["Magdalena", "Taltavull Fernandez"], ["Ilda", "Saulic"], ["Andrea", "Schwarz"], ["Chotika", "Wannachinda"], ["Nanely", "Vallejo"], ["Teryn", "Ashley"], ["Kalina", "Diankova"], ["Onalenna", "Leepile"], ["Ayami", "Takase"], ["Patty", "Schnyder"], ["Henrieta", "Nagyova"], ["Emmanuelle", "Curutchet"], ["Eugenia", "Kulikovskaya"], ["Audrey", "Wilmart"], ["Briana", "Harris"], ["Manuela", "Borzi"], ["Chiho", "Kobayashi"], ["Megan", "Russell"], ["Asja", "Tankic"], ["Szandra", "Fuzesi"], ["Beauty", "Macleod"], ["Jennifer", "Sans"], ["Steffi", "Keim"], ["Aneta", "Soukup"], ["Maria Alejandra", "Claure"], ["Brooke", "Skeen"], ["Olga", "Teplynska"], ["Berenice", "Alvarez"], ["Irina", "Anikina"], ["Julie", "Ditty"], ["Monique", "Le Sueur"], ["Monica", "Poveda"], ["Alena", "Paulenkova"], ["Rebecca", "Spurr"], ["Fabiola", "Zuluaga"], ["Jheni", "Osman"], ["Tatiana", "Poutchek"], ["Yessica", "Garcia"], ["Tabitha", "Blackburn"], ["Vinitha", "Dikshit"], ["Monika", "Vinterova"], ["Irene", "Fernandez Cabe"], ["Joana", "Cortez"], ["Sabina", "Da Ponte"], ["Oksana", "Melnichenko"], ["Etsuko", "Yamada"], ["Stephanie", "Sajbert"], ["Morya", "Peres"], ["Cindy", "Schuurmans"], ["Christa", "Grey"], ["Caroline", "Christian"], ["Adriana", "Radic"], ["Monica", "Amador Pons"], ["Barbara", "Keller"], ["Samantha", "Reeves"], ["Spela", "Rajh"], ["Laurence", "Pont"], ["Daria", "Soukirno"], ["Elisabeth", "Unge"], ["Lenka", "Novotna"], ["Irma", "Vizcaino"], ["Nannette", "Duxin"], ["Alejandra", "Hernandez Quiroz"], ["Kelly", "Toa"], ["Karen", "Black"], ["Virginia", "Colmenero"], ["Axelle", "Alquier"], ["Amy", "Newman"], ["Amanda", "Peros"], ["Barbara", "Schwartz"], ["Laura", "Andrei"], ["Ursula", "Albizuri"], ["Stephanie", "Hazlett"], ["Ana", "Knezovic"], ["Celena", "Mccoury"], ["Silvia", "Sosnarova"], ["Lilia", "Biktyakova"], ["Amelie", "Philippe"], ["Noswazi", "Tshabalala"], ["Kelly", "Liggan"], ["Maiko", "Inoue"], ["Katja", "Kovac"], ["Denisa", "Chladkova"], ["Holly", "Parkinson"], ["Liliana", "Avola"], ["Alexandra", "Ramirez"], ["Olena", "Kuzmyk"], ["Dee Dee", "Herring"], ["Liza", "Andriyani"], ["Natalie", "Fracassi"], ["Colleen", "Cheng"], ["Alena", "Jecminkova"], ["Jie", "Xu"], ["Asri Nursanti", "Ebo"], ["Lucy", "Mcdonald"], ["Cara", "Black"], ["Eva", "Doman"], ["Esther", "Brunn"], ["Nicola", "Woodhouse"], ["Lyndsay", "Reilly"], ["Cristina", "Correia"], ["Nathalie", "Dechy"], ["Lisa", "Sendelbach"], ["Maria Eugenia", "Fernandez"], ["Francesca", "Volonte"], ["Sheau Shan", "Liew"], ["Ludmilla", "Varmuza"], ["Kathryn", "Sell"], ["Keiko", "Taguchi"], ["Ana", "Skafar"], ["Rosa Maria", "Morazan"], ["Elena", "Villatoro"], ["Kristin", "Koenig"], ["Evgenia", "Tarasova"], ["Chiaki", "Nakajima"], ["Magui", "Serna"], ["Evelyn", "Moser"], ["Justyna", "Richter"], ["Vanessa", "Manya Arranz"], ["Silvia", "Bayon"], ["Seden", "Ozlu"], ["Saskia", "Simon"], ["Julie", "White"], ["Yu Jin", "Wang"], ["Sophie", "Turine"], ["Mandy", "Carvalho"], ["Catherine", "Campbell"], ["Carolina", "Lillo Carrazon"], ["Johanna", "Isokangas"], ["Paola", "Palencia"], ["Pilar", "Andres"], ["Silvana", "Barna"], ["Kim", "Gysbertse"], ["Julia", "Kryoukova"], ["Maria", "Wolfbrandt"], ["Raffaella", "Bindi"], ["Laura", "Tuzzi"], ["Paula", "Garcia"], ["Olena", "Antypina"], ["Maria De Los Angeles", "Montoya"], ["Barbara", "Privrel"], ["Christine", "Vogt"], ["Stanka", "Ilkova"], ["Irene", "Stavridou"], ["Roberta", "Lamagni"], ["Amy", "Wachenheim"], ["Amanda", "Grahame"], ["Janisse", "Mota"], ["Ana Maria", "Franco Lopez"], ["Virpi", "John"], ["Paola", "Arrangoiz"], ["Kim", "Kilsdonk"], ["Simge", "Resmor"], ["Viviana", "Mracnova Burgess"], ["Fiona", "Lishman"], ["Yoon Jeong", "Cho"], ["Ikram", "El Aarej"], ["Maria Carolina", "Torres"], ["Julieta", "Robin"], ["Eun Young", "Ban"], ["Jyotsna", "Vasisht"], ["Ana", "Gaspar"], ["Romana", "Cernoskova"], ["Julia", "Freitas"], ["Sophie", "Erre"], ["Nina", "Wennerstrom"], ["Fabienne", "Thill"], ["Francesca", "Vaghetti"], ["Francesca", "Guastella"], ["Naoko", "Kanai"], ["Tina", "Kotter"], ["Pauline", "Trinchant"], ["Meghann", "Shaughnessy"], ["Greta", "Arn"], ["Marjorie", "Muller"], ["Katarina", "Balan"], ["Natalia", "Rubio"], ["Anabella", "Sansostri"], ["Solange", "Rasoarivelo"], ["Janelle", "Watson"], ["Mariola", "Prado"], ["Nina", "Janzekovic"], ["Fruzsina", "Siklosi"], ["Cindy", "Tow"], ["Laurence", "Poujoulat"], ["Kristin", "Gunnarsdottir"], ["Karem", "Harboe"], ["Elisa", "Scarpetta"], ["Katherine", "Frame"], ["Ana", "Katanic"], ["Marissa", "Niroj"], ["Juliana", "Jonsdottir"], ["Neza", "Globocnik"], ["Chia Hui", "Feng"], ["Meritxell", "Mimo Bravo"], ["Magali", "Denayer"], ["Petra", "Russegger"], ["Silvana", "Vargas"], ["Maria Elena", "Torres"], ["Clarissa", "Martinessi"], ["Elena", "Arabadji"], ["Yvonne", "Stratmann"], ["Veronika", "Mayer"], ["Anna", "Macia"], ["Lindsay", "Rawling"], ["Min Fang", "Chang"], ["Gloria", "Guntinas"], ["Sonia", "Perez"], ["Bettina", "Horvath"], ["Fanny Fatima", "Vasquez Soza"], ["Dita", "Kochloffelova"], ["Marisue", "Jacutin"], ["Monia", "Belghith"], ["Rita", "Horvath"], ["Elena", "Salvador Reja"], ["Liana", "Skordopoulou"], ["Maria", "Chavez"], ["Angelika", "Bachmann"], ["Evagelia", "Roussi"], ["Alice", "Pirsu"], ["Alla", "Goncharenko"], ["Kristy", "Dascoli"], ["Renata", "Hlavova"], ["Natalia", "Ganna"], ["Suzanne", "Tolu"], ["Lucie", "Vecerova"], ["Elena", "Pioppo"], ["Marianne", "Bakken"], ["Angelina", "Zdorovitskaia"], ["Maria", "Boboedova"], ["Sommer", "Bisagas"], ["Carolina", "Maurer"], ["Mei Hua", "Hsu"], ["Janet", "Walker"], ["Stephanie", "Zenklusen"], ["Iva", "Puflerova"], ["Lucie", "Soumarova"], ["Kwon Hee", "Kim"], ["Young Eun", "Shin"], ["Min Hee", "Lee"], ["Karolina", "Jagieniak"], ["Ekaterina", "Tikhankina"], ["Yi Chieh", "Chen"], ["Maria", "Goloviznina"], ["Shiho", "Mochida"], ["Nikola", "Hubnerova"], ["Yulia", "Rudavska"], ["Ana", "Alcazar"], ["Ipek", "Senoglu"], ["Erika", "Ohlsson"], ["Ayano", "Oishi"], ["Emilie", "Loit"], ["Francoise", "Gillis"], ["Odeta", "Naujokaite"], ["Carolina", "Rojas Jimenez"], ["Irene", "Adsuar"], ["Martina", "Ondrejkova"], ["Katja", "Karrento"], ["Berangere", "Quillot"], ["Darian", "Chappel"], ["Maria", "Tasheva"], ["Sarah", "Pestieau"], ["Tereza", "Stenclava"], ["Andrea", "Ho"], ["Carmen", "Gajo Torrell"], ["Ianes", "Moreira"], ["Sandra", "Kloesel"], ["Dragana", "Ilic"], ["Tamara", "Davis"], ["Sofie", "Werckx"], ["Ashleigh", "Dolman"], ["Andrea", "Van Den Hurk"], ["Ratricia", "Diaz"], ["Annette", "Oosters"], ["Isabella", "Mitterlehner"], ["Amelie", "Detriviere"], ["Erika", "Pineider"], ["Krisztina", "Kovacs"], ["Malika", "Oberoi"], ["Mabel", "Roviti"], ["Galina", "Selyunina"], ["Shiho", "Hisamatsu"], ["Diana", "Ospina"], ["Amelie", "Mauresmo"], ["Yan", "Tang"], ["Ana Maria", "Zarta"], ["Majdouline", "Idrissi"], ["Kornelia", "Varro"], ["Monika", "Brzuskiewicz"], ["Catalina", "Castano"], ["Candela", "Novoa"], ["Meike", "Frohlich"], ["Marina", "Capin"], ["Juliana", "Marques"], ["Libuse", "Prusova"], ["Sorana", "Mastan"], ["Zuzana", "Prusova"], ["Renata", "Kucerova"], ["Mami", "Inoue"], ["Tarminder", "Grover"], ["Jasleen", "Randhawa"], ["Abigail", "Tordoff"], ["Chia Hsuan", "Fu"], ["Reka", "Vidats"], ["Jessica", "Fernandez"], ["Gaelle", "Taton"], ["Linda", "Faltynkova"], ["Anna", "Bielen Zarska"], ["Maricris", "Gentz"], ["Maija", "Lamu"], ["Anne Gaelle", "Sidot"], ["Tatiana", "Kovaltchouk"], ["Verenisse", "Munguia"], ["Kylene", "Wong Simunyola"], ["Kimberly", "Gates"], ["Zuzana", "Filipova"], ["Lucie", "Zaruba"], ["Zuzanna", "Liskovcova"], ["Shubha", "Srinivasan"], ["Geraldine", "Bimes"], ["Jessica", "Tribula"], ["Alena", "Mitackova"], ["Liudmila", "Nikoyan"], ["Christiane", "Hoppmann"], ["Luisa Fernanda", "Velez"], ["Sonia", "Colomina"], ["Lianasari", "Batubara"], ["Ainhoa", "Goni Blanco"], ["Yaiza", "Goni Blanco"], ["Kun", "Zhang"], ["Vanessa", "De Los Heros"], ["Anna", "Zaporozhanova"], ["Seon Ja", "Yoo"], ["Laura", "Gatti"], ["Kristina", "Kraszewski"], ["Johanna", "Pesola"], ["Severine", "Beltrame"], ["Susanne", "Filipp"], ["Sabine", "Neteler"], ["Frida", "Engblom"], ["Pamela", "Floro"], ["Sarah", "Borwell"], ["Carmen", "Gajo"], ["Marie Claude", "Ostiguy"], ["Bahia", "Mouhtassine"], ["Zuzana", "Valekova"], ["Jin Young", "Choi"], ["Rebeccah", "Rosenfield"], ["Alejandra", "Medrano"], ["Kendra", "Segura"], ["Romina", "Fonda"], ["Ana", "Radeljevic"], ["Lisa", "Mackey"], ["Rebecca", "Leftherioti"], ["Mojca", "Pavlinic"], ["Sabina", "Kochan"], ["Diana", "Vasquez"], ["Nana", "Wada"], ["Mateja", "Ogrizek"], ["Subhashini", "Kalyanasundaram"], ["Elena", "Juricich"], ["Susanne", "Trik"], ["Karina", "Maliska"], ["Cinta", "Princep"], ["Fabienne", "Gmeiner"], ["Martha", "Montano"], ["Tamara", "Mol"], ["Megumi", "Todoroki"], ["Judit", "Trunkos"], ["Alessia", "Baracchini"], ["Natalia", "Pishchaeva"], ["Delphine", "De Winne"], ["Aleksandra", "Radosavljevic"], ["Marina", "Gojkovic"], ["Kara", "Molony Hussey"], ["Milena", "Stojanovic"], ["Marianne", "Sibille"], ["Maria Cristina", "Campana"], ["Tamara", "Encina"], ["Danila", "Prevuznakova"], ["Charlotta", "Larsson"], ["Alexandra", "Greabu"], ["Violette", "Ahn"], ["Silvia", "Navarro Orgilles"], ["Diana", "Ramirez"], ["Andreia", "Pires"], ["Louise", "Lilleso"], ["Magdalena", "Wojcik"], ["Lamia", "Essaadi"], ["Sandra", "Martinovic"], ["Anna", "Barinova"], ["Florence", "Boucard"], ["Helen", "Richardson"], ["Tracy", "Almeda Singian"], ["Marcela", "Duarte"], ["Johanna", "Engstrom"], ["Rebekah", "Rhodes"], ["Juleya", "Semenets"], ["Li", "Tong"], ["Ludmila", "Cervanova"], ["Francesca", "Frappi"], ["Napaporn", "Tongsalee"], ["Sally", "Turner"], ["Eun Young", "Ha"], ["Stephanie", "Halsell"], ["Alina", "Tecsor"], ["Rachel", "Dean"], ["Rebecca", "Turner"], ["Lenka", "Vlachynska"], ["Tali", "Fink"], ["Katarina", "Valkyova"], ["Reina", "Alexander"], ["Sujitra", "Duangchan"], ["Tzveta", "Panajotova"], ["Esther", "Boyle"], ["Laura", "Pena"], ["Min Jie", "Shi"], ["Olga", "Barabanschikova"], ["Angela", "Buergis"], ["Diana", "Gherghi"], ["Anouk", "Sterk"], ["Assa", "Berthe"], ["Maren", "Haus"], ["Irina", "Selyutina"], ["Simone", "Jardim"], ["Vinca", "Rampen"], ["Youliya", "Dimitrova"], ["Stephanie", "Schaer"], ["Mari", "Toro"], ["Katalin", "Marosi"], ["Naomi", "Callow"], ["Meiling", "Parks"], ["Josefina", "Vega"], ["Lauren", "Martin"], ["Daphne", "Nicolatou"], ["Aurandrea", "Narvaez"], ["Jana", "Lubasova"], ["Ewa", "Radzikowska"], ["Bianca", "Catay"], ["Soledad", "Lucero"], ["Maria Virginia", "Moreno Heredia"], ["Katarzyna", "Straczy"], ["Magalie", "Portel"], ["Jovana", "Krsikapa"], ["Minna", "Rautajoki"], ["Alison", "Ojeda"], ["Debora", "Carvalho"], ["Claire", "Jalade"], ["Jonni", "Seymour"], ["Lara", "Van Rooyen"], ["Anne", "Jamers"], ["Marisol", "Berengeno"], ["Sihem", "Ben Youcef"], ["Ines", "Zouabi"], ["Daniela", "Bolanos"], ["Kristina", "Curic"], ["Anna", "Nordell"], ["Bryanne", "Stewart"], ["Judith", "Czigany"], ["Sabine", "Lutter"], ["Krissy", "Hamilton Heinberg"], ["Karolina", "Zmyslowska"], ["Michelle", "Dasso"], ["Leslie", "Thile"], ["Valerie", "Pavlickova"], ["Martina", "Nedorostova"], ["Analia", "Baca"], ["Lynn", "Novack"], ["Vesna", "Sevsek"], ["Daniela", "Groseanu"], ["Tatiana", "Semenova"], ["Michelle", "Gough"], ["Christina", "Popescu"], ["Adria", "Engel"], ["Adria", "Raines"], ["Jasmin", "Halbauer"], ["Laila", "Karim"], ["Ingrid", "Peltier"], ["Jana", "Sedivec"], ["Sian Arie", "Staria"], ["Karina Ildor", "Jacobsgaard"], ["Candace Olivia", "Pedro"], ["Mette", "Iversen"], ["Mehvish", "Chishtie"], ["Nicole", "Seitenbecher"], ["Claudia", "Castro"], ["Maria Carmen", "Escuder"], ["Eva", "Escribano Poveda"], ["Ting", "Li"], ["Sabrina", "Valenti"], ["Phornsarin", "Tovisitchai"], ["Chantel", "Skulskyj"], ["Nicola", "Seltenbecher"], ["Andrea", "Masarykova"], ["Julia", "Podgorochna"], ["Anna Patricia", "Santos"], ["Diane", "Asensio"], ["Gioconda", "Pinzon"], ["Cristina", "Fontelles"], ["Akiko", "Morigami"], ["Faratiana", "Rasoarilalao"], ["Bettina", "Auer"], ["Martina", "Miklosava"], ["Eny", "Sulistyowati"], ["Melisa", "Arevalo"], ["Wei Yen", "Lai"], ["Romy", "Hutchins"], ["Monthika", "Anuchan"], ["Anna", "Font Estrada"], ["Erin", "Boisclair"], ["Kadija", "Richards"], ["Gabriela Alejandra", "Tamasi"], ["Magalie", "Gaillot"], ["Daria", "Neretina"], ["Petra", "Rampre"], ["Brie", "Rippner"], ["Catalina", "Acosta"], ["Ana Lucia", "Pereyra"], ["Diana", "Monsivaiz"], ["Cristina", "Coletto"], ["Anna", "Savitskaya"], ["Roberta", "Radin"], ["Katrina", "Mihaere"], ["Miki", "Kuramochi"], ["Nicole", "Remis"], ["Diana", "Majkic"], ["Sophie", "Regnier"], ["Marcelle", "Hirt"], ["Alexa", "De Bont"], ["Marlene", "Weingartner"], ["Naheeda", "Noormohamed"], ["Yulia", "Ikonnikova"], ["Lindsey", "Stead"], ["Isabel", "Fonts"], ["Verena", "Cerny"], ["Raluca", "Sandu"], ["Azra", "Resic"], ["Tara", "Kanbargimath"], ["Monica", "Rincon"], ["Naoko", "Horikawa"], ["Pallavi", "Ravikumar"], ["Candice", "De La Torre"], ["Katerina", "Chuda"], ["Cintia", "Perez"], ["Susanne", "Losel"], ["Michou", "Tulfer"], ["Laetitia", "Renault"], ["Jung Chi", "Tsai"], ["Silvia", "Tozzi"], ["Elodie", "Le Bescond"], ["Mariela", "Salinas"], ["Brandis", "Braverman"], ["Raluca", "Ciulei"], ["Andrea", "Rose"], ["Daniela", "Muscolino"], ["Varsha", "Reddy"], ["Pilar", "Piana"], ["Marja", "Znidar"], ["Simona", "Krausova"], ["Eva", "Dyrberg"], ["Antoaneta", "Neykova"], ["Adisa", "Salibasic"], ["Erica", "Biro"], ["Mariel", "Verban"], ["Kasturi", "Bhat"], ["Maria Gabriela", "Giacomin"], ["Inga", "Mueller"], ["Paola", "Stephen"], ["Elsa", "Morel"], ["Sanja", "Bajin"], ["Ana Carolina", "Martinez"], ["Simone", "Wichman"], ["Elodie", "Rouzier"], ["Jeannine", "Kuratli"], ["Marylene", "Losey"], ["Minette", "Weirich"], ["Lilivette", "Rivera"], ["Kelly", "Blanch"], ["Mindy", "Salas"], ["Manisha", "Abeywardene"], ["Stephanie", "Kovacic"], ["Keiko", "Fujiwara"], ["Szilvia", "Kelemen"], ["Natalia", "Jung"], ["Claudia", "Herbas"], ["Kristina", "Triska"], ["Petia", "Marinova"], ["Lynn Yin", "Tan"], ["Sarah", "Kadi"], ["Marion", "Walter"], ["Tamara", "Kaftalovich"], ["Julie", "Zanin"], ["Kika", "Hogendoorn"], ["Marie Claire", "Mathot"], ["Joanne", "Keene"], ["Tiffany", "Dabek"], ["Susan", "Okocha"], ["Jessica", "Lehnhoff"], ["Qin", "Yang"], ["Lan", "Yao"], ["Katrin", "Gaber"], ["Karin", "Cislikowski"], ["Alienor", "Tricerri"], ["Ellen", "Delie"], ["Cecilia", "Ortiz"], ["Lioudmila", "Skavronskaia"], ["Esther", "Jimoh"], ["Carmen", "Arredondo"], ["Alicia", "Pillay"], ["Jil Lin", "Leong"], ["Amanda", "Reyes"], ["Abimbola", "Showole"], ["Claudia", "Cortes De Maldonado"], ["Michaela", "Pastikova"], ["Sabrina", "Corazza"], ["Ana", "Serrot Geminelli"], ["Valentina", "Ronchi"], ["Georgina", "Dinham"], ["Natasha", "Galouza"], ["Natalia", "Galouza"], ["Mariana", "Mesa"], ["Renata", "Suarez"], ["Angela", "Ruchin"], ["Emma", "Kidd"], ["Haleema", "Rahim"], ["Zuzanna", "Liskocova"], ["Evy", "Last"], ["Alberta", "Brianti"], ["Francisca", "Sintes Martin"], ["Talula", "Guralnek"], ["Anda", "Perianu"], ["Ewelina", "Augustyniak"], ["Patrycja", "Bandurowska"], ["Raquel", "Rodrigues"], ["Indre", "Kastanauskaite"], ["Karen", "Butler"], ["Carmen", "Linder"], ["Kaysie", "Smashey"], ["Roberta", "Borrelli"], ["Sandra", "Gloria"], ["Anna", "Mitina"], ["Sabrina", "Lindemann"], ["Silvina", "Ronsisvalli"], ["Jessica", "Balbuena"], ["Patricia", "Perez De Vinaspre"], ["Anne Laure", "Brochard"], ["Catalina", "Paz"], ["Patricia", "Garcia"], ["Ana", "Jagerfeld Juric"], ["Michaela", "Tennant"], ["Capucine", "Rousseau"], ["Alessia", "Biffi"], ["Naoko", "Teramachi"], ["Neus", "Barbera Flores"], ["Irina", "Yarikova"], ["Agata", "Kurowska"], ["Yuko", "Kurata"], ["Renate", "Stoop"], ["Sybille", "Bammer"], ["Lisa", "Fritz"], ["Aleksandra", "Durska"], ["Keiko", "Tokuda"], ["Maria Cristina", "Bentivoglio"], ["Angelika", "Schadler"], ["Rochelle", "Raiss"], ["Yu An", "Chen"], ["Bree", "Calderwood"], ["Mariana", "Macia"], ["Zuzana", "Ondraskova"], ["Rie", "Saiki"], ["Jennifer", "Radman"], ["Esther", "Stasi"], ["Vida", "Mulec"], ["Whitney", "Laiho"], ["Dong Ling", "Zou"], ["Jasmina", "Davidovic"], ["Fleur", "Broughton"], ["Alix", "La Celarie"], ["Busrin", "Boontemleaw"], ["Angela", "Cardoso"], ["Tina", "Parits"], ["Marketa", "Langerova"], ["Sara", "Grechi"], ["Mervana", "Jugic Salkic"], ["Isabelle", "Godfroy"], ["Virginie", "Favory"], ["Susi", "Bensch"], ["Paulina", "Janus"], ["Cecile", "Leclere"], ["Nuria", "Llagostera Vives"], ["Marta", "Jedrzejak"], ["Amie", "Garcia"], ["Birgit", "Pirker"], ["Lindsay", "Blau"], ["Sophie", "Cockell"], ["Manami", "Tsuji"], ["Claire", "Maiolini"], ["Lynsey", "Davison"], ["Oana Elena", "Golimbioschi"], ["Junko", "Nishida"], ["Katerina", "Zlebkova"], ["Michaela", "Havelkova"], ["Magdalena", "Cibils"], ["Marina", "Caiazzo"], ["Ioana", "Dragan"], ["Carmen", "Maas"], ["Arina", "Uratani"], ["Doriane", "Caporusso"], ["Silvia", "Urickova"], ["Vanessa", "Lima"], ["Sara", "Lydon"], ["Marketa", "Blazkova"], ["Marcela", "Monroy"], ["Christi", "Wagenaar"], ["Evie", "Dominikovic"], ["Emilia", "Desiderio"], ["Katrina", "Nimmers"], ["Maria Lorena", "Alcetegaray"], ["Violetta", "Rankic"], ["Maria", "Galoustova"], ["Tamar", "Keren"], ["Alessia", "Risuleo"], ["Barbora", "Machovska"], ["Araceli", "Borbolla"], ["Gabriela", "Lastra"], ["Melisa", "Lemus"], ["Marcela", "Gonzalez"], ["Argyro", "Zika"], ["Jenny", "Trettin"], ["Remi", "Tezuka"], ["Elisa", "Villa"], ["Lenka", "Hladikova"], ["Maria Victoria", "Beortegui"], ["Jeannine", "Niedhardt"], ["Maja", "Matevzic"], ["Kati", "Wolner"], ["Sahan", "Shetty"], ["Sonia", "Delgado Tardif"], ["Venus", "Williams"], ["Ilona", "Kordonskaya"], ["Hilke", "Wilt"], ["Karine", "Etienne"], ["Nina", "Aigner"], ["Tara", "Reid"], ["Puja", "Deshmukh"], ["Marissa", "Gould"], ["Francesca", "Schiavone"], ["Nina", "Duebbers"], ["Marta", "Kostrhounova"], ["Angie", "Wilkinson"], ["Beau", "Jones"], ["Jeanine", "Baillie"], ["Ana Carolina", "Santoro"], ["Carla", "Bruno"], ["Rochelle", "Goldthreate"], ["Elizabeth", "Wright"], ["Janet", "Bergman"], ["Monika", "Horvath"], ["Joyce", "Bergman"], ["Brenda", "Martinez"], ["Kildine", "Chevalier"], ["Vicky", "Lee"], ["Rachmawati", "Siregar"], ["Laura", "White"], ["Cynthia", "Perez Gil"], ["Orie", "Sasaki"], ["Teodora", "Doncheva"], ["Charlotte", "Smith"], ["Leoni", "Weirich"], ["Archana", "Reddy"], ["Ana Maria", "Viera Teixtera"], ["Magdalena", "Kurzacz"], ["Elya", "Constanta"], ["Desiree", "Galvan Suarez"], ["Helga", "Vieira"], ["Kago", "Phatshwane"], ["Sarah", "Wetz"], ["Valentina", "Sassi"], ["Dorothy", "Zerbst"], ["Paula", "Iturbide"], ["Maria Belen", "Rojas"], ["Elena", "Fontelles"], ["Akila", "Bouchabou"], ["Ying Shi", "Huang"], ["Janine", "Lanser"], ["Eldina", "Fazlic"], ["Oindrila", "Majumder"], ["Eun Sook", "Kim"], ["Alessia", "Ignatieva"], ["Sabrina", "Moser"], ["Justyna", "Wojas"], ["Eva", "Sanz"], ["Weyli", "Chang"], ["Raffaella", "Gambadoro"], ["Sandra", "Mihajlovic"], ["Antonella", "Serra Zanetti"], ["Elena", "Voropaeva"], ["Magdalena", "Marszalek"], ["Maria Laura", "Fernandez"], ["Lydia", "Steinbach"], ["Louise", "Herbert"], ["Karin", "Schlapbach"], ["Agnes", "Wiski"], ["Barbara", "Brauchle"], ["Thamara", "Jonkman"], ["Catherine", "Henuzet"], ["Lauren", "Rookledge"], ["Linda", "Akkerman"], ["Jing Hua", "He"], ["Coral", "Silverstone"], ["Frances", "Giron"], ["Sabine", "Klaschka"], ["Lorena", "Porras"], ["Jitka", "Schonfeldova"], ["Maria Claudia", "Alves"], ["Carolina", "Uriarte"], ["Aurore", "Esteve"], ["Mira", "Radu"], ["Bretchtje", "Bruls"], ["Tatiana", "Lopez"], ["Sandra", "Nacuk"], ["Karen", "Faus"], ["Alanna", "Broderick"], ["Meryem", "El Haddad"], ["Edna", "Vasquez"], ["Elena", "Bouloux"], ["Jasmin", "Woehr"], ["Shiri", "Zlotikamin"], ["Nicola", "Corn"], ["Fernanda", "Sala"], ["Jessyca", "Arthur"], ["Masika", "Williams"], ["Alejandra", "Lopez"], ["Rikke", "Faurfelt"], ["Valeria", "Dag"], ["Rocio", "Mora"], ["Lauren", "Kalvaria"], ["Florencia", "Basile"], ["Simona", "Petrutiu"], ["Chira", "Niemela"], ["Diana", "Bobkova"], ["Radoslava", "Topalova"], ["Rosalie", "Tranchot"], ["Kate", "Elliott"], ["Pei Jyue", "Lo"], ["Andrea", "Sebova"], ["Shadi", "Tabatabai"], ["Therina", "Steenkamp"], ["Dearbhia", "Kelly"], ["Jennifer", "Thorpe"], ["Polina", "Ordanskaya"], ["Jennifer", "Adrien"], ["Renata", "Dias"], ["Fatima", "Olaso De La Rica"], ["Katie", "Granson"], ["Julie Anne", "Chidley"], ["Rewa", "Harriman"], ["Daniela", "Ilieva"], ["Viktoria", "Bucalic"], ["May", "Emara"], ["Mariana", "Gonzalez Moreno"], ["Natalia", "Testa"], ["Uzma", "Khan"], ["Svetla", "Bozicnik"], ["Barbora", "Stejskalova"], ["Edit", "Pakay"], ["Svenja", "Weidemann"], ["Lia", "Jackson"], ["Blotza", "Gutierrez"], ["Katerina", "Traykova"], ["Simona", "Farenza"], ["Stutti", "Smit"], ["Ninisita", "Srihadi"], ["Vanessa", "Devesa"], ["Iris", "Staub"], ["Natasha", "Kelly"], ["Hao", "Zhang"], ["Said Basiuny", "Hend"], ["Cassandra", "Godfrey"], ["Martina", "Hingis"], ["Milagros", "Sequera"], ["Hiroko", "Nishikawa"], ["Victoria", "Hall"], ["Rani", "Cestari Setia"], ["Danice", "Shackelford"], ["Kyung Yee", "Chae"], ["Michelle", "Colaninni"], ["Caroline", "Woerle"], ["Ikumi", "Akasaka"], ["Petra", "Puheloinen"], ["Carla", "Arguelles"], ["Ashlee", "Callahan"], ["Jun", "Zhang"], ["Ivana", "Visic"], ["Katie", "Miles"], ["Anouk", "Sinnige"], ["Satomi", "Kinjo"], ["Bruna", "Colosio"], ["Olga", "Gorzelak"], ["Evelina", "Scalise"], ["Julieta", "Guimaraes"], ["Liina", "Suurvarik"], ["Ana", "Santelises"], ["Chutima", "Toma"], ["Natalia", "Romashina"], ["Eva Maria", "Petschnig"], ["Nisha", "Naraynsingh"], ["Ilona", "Vichnevskaya"], ["Juliana", "Garcia"], ["Ana", "Viglione"], ["Anat", "Katz"], ["Sara", "Walker"], ["Claudia", "Filippini"], ["Sabrina", "Damario"], ["Silvana", "Reis"], ["Catalina", "Martinez"], ["Claire", "Bourgault"], ["Nadejda", "Ostrovskaya"], ["Delphine", "Troch"], ["Marcia", "Gaspar"], ["Kealy", "Carter"], ["Natalie", "Ayton"], ["Maria Rian", "Pila"], ["Nhu Quynh", "Phan"], ["Elena", "Petrenko"], ["Emilie", "Scribot"], ["Uta", "Grabinger"], ["Kyla", "Hunte"], ["Nathalie", "Du Vigneaud"], ["Salima Esmat", "Salman"], ["Gitte", "Moeller"], ["Jamie", "Macias"], ["Maribel", "Ramirez"], ["Jessica", "Johnson Guyaux"], ["Genevieve", "Houle"], ["Penka", "Fileva"], ["Radka", "Hovorkova"], ["Joo Young", "Woo"], ["Allison", "Bradshaw"], ["Clementina", "Rovere"], ["Laura", "Cartwright"], ["Natasha", "Watts"], ["Jacquelyn", "Rosen"], ["Eman", "Shahab"], ["Lisa", "Broadie"], ["Martina", "Sucha"], ["Wukirasih", "Sawondari"], ["Sarah", "Witten"], ["Rocio", "Fantilli"], ["Chiara", "Dal Bon"], ["Claudia", "Candado"], ["Layla", "Tohme"], ["Jacqueline", "Trail"], ["Christina", "Fusano"], ["Paula", "Wakefield"], ["Bea", "Bielik"], ["Lesedi", "Ramocha"], ["Ngozi", "Dirisu"], ["Britta", "Mohlmann"], ["Claudia", "Nieto"], ["Anna", "Aggelopoulou"], ["Mutsuko", "Hirose"], ["Tomoko", "Sugano"], ["Leticia", "Sobral"], ["Tina", "Aryani"], ["Manana", "Dueli"], ["Marie Eva", "Vrba"], ["Valentina", "Mortello"], ["Daniela", "Olivera"], ["Susan", "Cowan"], ["Sophie", "Cremers"], ["Catherine", "Alain"], ["Bao Wen", "Pu"], ["Marta", "Plumitallo"], ["Alexandra", "Stevenson"], ["Yvona", "Cindric"], ["Victoria", "Hooper"], ["Veronica", "Rizhik Urteaga"], ["Rebeca", "Llorente"], ["Ioana", "Plesu"], ["Virginia", "Prato"], ["Nicola", "Koopman"], ["Medina", "Bajrambasic"], ["Olga", "Nin"], ["Johanna", "De Leon"], ["Senait", "Gebreail"], ["Isabelle", "Soucy"], ["Jovana", "Stanisljevic"], ["Lizeth", "Fourie"], ["Sabath", "Ibrahim"], ["Mihaela", "Stefan"], ["Tsedey", "Kifle"], ["Trishna", "Williams"], ["Flavia", "Rezende"], ["Virginia", "Zaffaroni"], ["Camille", "Sesanker"], ["Marketa", "Cizova"], ["Gemma", "Selga"], ["Eudoxia", "Karaproimou"], ["Cristina", "Meilicke"], ["Jasmine", "Wolcott"], ["Helena", "Ejeson"], ["Nicole", "Sewell"], ["Diana", "Tchkouasselli"], ["Nicole", "Havlicek"], ["Leanne", "Baker"], ["Cynthia", "Dewi"], ["Shweta", "Ravji"], ["Paulina", "Castillejos"], ["Shivani", "Oberoi"], ["Vanessa", "Henke"], ["Prim", "Siripipat"], ["Kirsty", "Thomas"], ["Anna", "Komarova"], ["Anna", "Wilander"], ["Tina", "Hojnik"], ["Annette", "Tronning"], ["Maria Noel", "Ruiz"], ["Tina", "Steinmetz"], ["Sofie", "Borgions"], ["Meray", "Malouf"], ["Eva", "Trujillo"], ["Esther", "Mbugua"], ["Alena", "Scharfschwert"], ["Kari", "Olsen"], ["Emelie", "Akerbrandt Bengtsson"], ["Sara", "Abaza"], ["Petra", "Bercik"], ["Tiffany", "Brymer"], ["Eka", "Zhvania"], ["Alissa", "Velts"], ["Charisma", "Billings"], ["Marcela", "Ferrari"], ["Ziva", "Grasic"], ["Laetitia", "Sanchez"], ["Sawitre", "Naree"], ["Samantha", "Schoeffel"], ["Cecilia", "Guillenea"], ["Beata", "Wajdzik"], ["Viktoria", "Stoklasova"], ["Monica", "Gonzalez Gordo"], ["Carolina", "Aristimuno"], ["Susan", "Durst"], ["Kanako", "Yano"], ["Alicia", "Molik"], ["Nuria", "Rivas"], ["Simona", "Graniceru"], ["Lucy", "Wood"], ["Iva", "Kirac"], ["Ekaterina", "Paniouchkina"], ["Wei Na", "Liu"], ["Maria Adelaida", "Agudelo"], ["Shaza", "Tinawi"], ["Monika", "Gieczys"], ["Sonia", "Shelar"], ["Yi Chun", "Lan"], ["Sara", "Mueller"], ["Bo Ra", "Choi"], ["Ilona", "Vishnevskaya"], ["Elizabeth", "Meyer"], ["Andrea", "Nickel"], ["Tereza", "Sykorova"], ["Aurelie", "Vedy"], ["Veronica", "Sartini"], ["Jennifer", "Hopkins"], ["Heather", "Shelby"], ["Petra", "Navratilova"], ["Anya", "Loncaric"], ["Harisa", "Delic"], ["Martina", "Janska"], ["Milauni", "Vibhakar"], ["Marta", "Ribalta"], ["Luisa Elfride", "Lopez"], ["Zheng", "Wang"], ["Yulia", "Davidyuk"], ["Sonia", "Vickers"], ["Leonne", "Muller Van Moppe"], ["Maria Elena", "Del Valle"], ["Tina", "Pisnik"], ["Rochelle", "Rosenfield"], ["Ratih", "Zanida"], ["Sasha", "Edelstein"], ["Radhika", "Mandke"], ["Gabriella", "Reiner"], ["Meng", "Wang"], ["Donna", "Calvert"], ["Sophie", "Lefevre"], ["Simona", "Morici"], ["Anne", "Valle"], ["Dorra", "Hammami"], ["Natalie", "Grandin"], ["Ildiko", "Stadler"], ["Kate", "Pinchbeck"], ["Karishma", "Patel"], ["Agnes", "Palvolgyi"], ["Min", "Fan"], ["Hsiung Ching", "Lin"], ["Emilie", "Vanhuysberghe"], ["Valentina", "Imperio"], ["Lana", "Miholcek"], ["Radka", "Sottova"], ["Jenny", "Timoney"], ["Jennifer", "Tinnacher"], ["Natacha", "Gosset"], ["Natalia", "Rojas"], ["Monika", "Malinska"], ["Anca", "Dumitrescu"], ["Serena", "Carsughi"], ["Frederika", "Girsang"], ["Mariana", "Petrasova"], ["Gabriela", "Volekova"], ["Gianina", "Enuta"], ["Tatjana", "Scheel"], ["Olivia", "Dubovikov"], ["Claudia", "Di Trapani"], ["Katarina", "Srebotnik"], ["Theodora", "Patsourakou"], ["Yanelis", "Jimenez Estevez"], ["Daniela", "Puplinkhuisen"], ["Elizabeth", "Kaufman"], ["Katia", "Ceracchi"], ["Eva", "Fislova"], ["Ka Po", "Tong"], ["Francesca", "Agazzi"], ["Lara", "De Angelis"], ["Eva", "Alves Comesana"], ["Rotem", "Tepperberg"], ["Ariadna", "Junyent"], ["Anna", "Sholuh"], ["Vilmarie", "Castellvi"], ["Daniela", "Torres"], ["Ina Maria", "Range"], ["Stefanie", "Hershfield"], ["Mihaela", "Moldovan"], ["Annabel", "Kelynack"], ["Julia", "Kondratovskaia"], ["Igna", "De Villiers"], ["Neha", "Bhardwaj"], ["Daniela", "Canepa"], ["Anne", "Carmans"], ["Romana", "Valenta"], ["Elena", "Jirnova"], ["Viviana", "Ferencak"], ["Karolina", "Roubickova"], ["Lourdes", "Dominguez Lino"], ["Alena", "Bencova"], ["Valeria", "Khazova"], ["Petra", "Sedlmajerova"], ["Monica", "Peets"], ["Agnieszka", "Abram"], ["Emilia", "Kopczynska"], ["Madita", "Suer"], ["Monica", "Ribero"], ["Vanessa", "Rebelo"], ["Valeria", "Lapis"], ["Anita", "Loyola"], ["Yi Wei", "Chen"], ["Anne", "Bannfy"], ["Rakel", "Petursdottir"], ["Laetitia", "Bonny"], ["Mi Ran", "Shin"], ["Elena", "Stoilova"], ["Marta", "Insausti"], ["Adrianna", "Gallo"], ["Zsofia", "Gubacsi"], ["Nazli", "Gencsoy"], ["Patricia", "Aburto"], ["Hyun Sook", "Park"], ["Rotem", "Magnagni"], ["Danielle", "Paynter"], ["Perrine", "Pernin"], ["Silke", "Martin"], ["Jennifer", "Black"], ["Glenny", "Cepeda"], ["Anna", "De Bruyn"], ["Amy", "Burson"], ["Remi", "Uda"], ["Tania", "Martin"], ["Suzanne", "Wright"], ["Anne", "Nguyen"], ["Inga", "Burger"], ["Stefania", "Pacella"], ["Christine", "Silaghi"], ["Marine", "Piriou"], ["Silvia", "Torne Ortiz"], ["Carien", "Venter"], ["Gillian", "Assad"], ["Bettina", "Hafner"], ["Mugette", "Ahn"], ["Wei", "Na"], ["Ana", "Buraku"], ["Johanna", "Ingnas"], ["Tara", "Lambert"], ["Wynne", "Prakusya"], ["Julie", "De Roo"], ["Kristin", "Gyaki"], ["Aina", "Rafolomanantsiatosika"], ["Khushcher", "Italia"], ["Vania", "Apodaca"], ["Laetitia", "Gassis"], ["Karine", "Redon"], ["Yolanda", "Rowe"], ["Laurence", "Jayet"], ["Cecilia", "Perez"], ["Monica", "Londono"], ["Yi Ying", "Lai"], ["Kristen", "Stubbs"], ["Zdenka", "Videnova"], ["Celia", "Sutton"], ["Stephanie", "Foretz Gacon"], ["Elena", "De Mendoza"], ["Zeynep", "Gurkaynak"], ["Vanessa", "Elmendorp"], ["Evelien", "Bostyn"], ["Daniella", "Kastamoniti"], ["Daniela", "Peyrot"], ["Kinga", "Berecz"], ["Mirte", "Ros"], ["Olga", "Nefedova"], ["Laura", "Granville"], ["Kelly", "Simkin"], ["Claudia", "Lepore"], ["Katerina", "Zupancic"], ["Carla", "Tiene"], ["Natalia", "Nusshold"], ["Anna", "Andersson"], ["Vishnu Preetham", "Mahalingam"], ["Gabriela", "Duarte"], ["Laura", "Dellangelo"], ["Julia", "Scaringe"], ["Megan", "Yeats"], ["Vanessa", "Krauth"], ["Erica", "Krauth"], ["Leigh", "Bradwell"], ["Evangelina Silvia", "Migliavacca"], ["Marta", "Rubina"], ["Jana", "Hlavackova"], ["Jelena", "Ganic"], ["Madoka", "Suzuki"], ["Raffaella", "Coffa"], ["Svatava", "Prorokova"], ["Geminesse", "Co"], ["Marina", "Tasheva"], ["Tania", "Tzartzeva"], ["Patricia", "Almudever Folch"], ["Marlene", "Dirnstorfer"], ["Nabila", "Yasri"], ["Irem", "Saram"], ["Denise", "Hofer"], ["Lia", "Fabiano"], ["Agathe", "Belibi"], ["Ekaterina", "Sysoeva"], ["Alessia", "Nikolaeva"], ["Delphine", "Froidevaux"], ["Nazh", "Gencsoy"], ["Natasha", "Van Der Merwe"], ["Nicola", "Manley"], ["Sheethal", "Goutham"], ["Anna", "Kournikova"], ["Maria", "Djordjio"], ["Anne Marie", "Hogan"], ["Erika", "Venere"], ["Arianna", "Di Gennaro"], ["Nicole", "Rencken"], ["Sarah", "Abaza"], ["Jin Hee", "Kim"], ["Ines", "Moura"], ["Fernanda", "Vlasak"], ["Yonca", "Gonen"], ["Rossi", "Thomas"], ["Fanny", "Cardenas"], ["Murielle", "Methon"], ["Nora", "Veiga Gil"], ["Dora", "Krstulovic"], ["Napanant", "Montkhongtham"], ["Emily", "Haylock"], ["Tomoko", "Dokei"], ["Dominique", "Reynolds"], ["Vaida", "Martinkute"], ["Emmanuelle", "Duval"], ["Aline", "Pinheiro"], ["Martine", "Poos"], ["Sarah", "Riske"], ["Mara", "Santangelo"], ["Bucke Enda", "Yavuz"], ["Anne", "Meritel"], ["Francesca", "Calabrese"], ["Lisa", "Gebert"], ["Danira", "Penic"], ["Chantal", "Coombs"], ["Yanet", "Nunez Mojarena"], ["Anna", "Oehme"], ["Kirsten", "Harris"], ["Dorothee", "Buschhuter"], ["Elena", "Cordano"], ["Bianca", "Kamper"], ["Delila", "Causevic"], ["Victoria", "Livanova"], ["Kristin", "Lam"], ["Cassandra", "Swanepoel"], ["Jelena", "Kostanic Tosic"], ["Magda", "Mihalache"], ["Carolina", "Aravena"], ["Laura", "Mangunsong"], ["Stella", "Kristjansdottir"], ["Jetpisit", "Lertsirisumpan"], ["Anastasia", "Myskina"], ["Tjasa", "Suvak"], ["Chisayo", "Ito"], ["Shizuko", "Matsuda"], ["Natsuko", "Matsuda"], ["Aitana", "Minambres"], ["Wan Ting", "Lin"], ["Abigail", "Spears"], ["Claire", "Carter"], ["Sabrina", "Diniz"], ["Anastasia", "Ponomarenko"], ["Hye Jeong", "Yoo"], ["Zeynep", "Inanli"], ["Ana", "Martin Ramirez"], ["Jahnavi", "Sunderarajan"], ["Valentina", "Castro"], ["Natalie", "Marz"], ["Xer Li", "Woo"], ["Riina", "Veiram"], ["Jennifer", "Tuchband"], ["Giorgia", "Poggi"], ["Leslie", "Harvey"], ["Karin", "Urbin"], ["Nazan", "Arsal"], ["Pirada", "Witoonpanich"], ["Lazarina", "Sazdova"], ["Tomoko", "Taira"], ["Maria Paola", "Arcos"], ["Sheila", "Guerberg"], ["Sonia", "Lagos"], ["Ana", "Sanz Castro"], ["Millie", "Begovic"], ["Kit", "Carson"], ["Deanna", "Roberts"], ["Alexandra", "Chong"], ["Lori", "Grey"], ["Marlene", "Mejia"], ["Ivana", "Bracun"], ["Eriko", "Mizuno"], ["Maria Claudia", "Romo"], ["Ljiljana", "Nanusevic"], ["Kyung Won", "Kim"], ["Laila", "Shetty"], ["Rebecca", "Hawkins"], ["Yumi", "Ueda"], ["Maria", "Ilieva"], ["Lies", "Budiharto"], ["Virginia", "Varga"], ["Marie", "Yamabe"], ["Visnja", "Visnjic"], ["Stephanie", "Kamberi"], ["Julia", "Romanova"], ["Donna", "Mcintyre"], ["Ana", "Stiglic"], ["Maria Victoria", "Domina"], ["Ines", "Khelefi"], ["Rossana", "Hidalgo"], ["Sedef", "Ozkan"], ["Katia", "Bogomolova"], ["Julia", "Klein"], ["Jacqueline", "Nieto"], ["Erika", "Clarke Magana"], ["Nuraeni", "Batubara"], ["Melissa", "Mendieta"], ["Maria", "Guijarro"], ["Sara", "Pasquinoni"], ["Jodi", "Kenoyer"], ["Stephanie", "Rizzi"], ["Katarzyna", "Kolodynska"], ["Mariana", "Duarte"], ["Elizabeth", "Schranz"], ["Natalia", "Gussoni"], ["Eun Joo", "Kang"], ["Chiara", "Lucacchioni"], ["Camille", "Pin"], ["Orawan", "Wongkamalasai"], ["Francesca", "Mancini"], ["Simona", "Jozova"], ["Ivana", "Mark"], ["Kaori", "Aoyama"], ["Ayako", "Suzuki"], ["Verica", "Spirovska"], ["Marjorie", "Ceppo"], ["Lara", "Arnaout"], ["Clarisa", "Fernandez"], ["Maria Karina", "Lomena"], ["Oana", "Creanga"], ["Daniela", "Santamato"], ["Aleksandra", "Vucenovic"], ["Monica", "Mastan"], ["Kim", "Freebairn"], ["Nanci", "Lemuz"], ["Ji Sun", "Ha"], ["Annika", "Bengtsson"], ["Marialice", "Alonso"], ["Melanie Ann", "Clayton"], ["Pia", "De Robertis"], ["Marinet", "Morgan"], ["Victoria", "Broyak"], ["Michino", "Meguro"], ["Olga", "Ramirez"], ["Oyuki", "Cruz"], ["Andrea", "Munch Hermansen"], ["Jewel", "Peterson"], ["Ivona", "Sereja"], ["Evelyne", "Gmeiner"], ["Mikaele", "Zaykine"], ["Yeon", "Kim"], ["Giulia", "Schivo"], ["Karla", "Alvarado"], ["Linda", "Tajnai"], ["Mandy", "Stegman"], ["Carina", "Kaempfer"], ["Nela", "Bogdanovich"], ["Magdalena", "Mrozek"], ["Cristina", "Maiz"], ["Saloni", "Kantaria"], ["Kristen", "Van Elden"], ["Ina", "Sartz"], ["Vroni", "Hinterseer"], ["Rika", "Fujiwara"], ["Elena", "Rutigliano"], ["Agata", "Cioroch"], ["Tanja", "Schugt"], ["Nato", "Kachkachishvili"], ["Sareewan", "Wattanadechachan"], ["Serena", "Williams"], ["May", "Kabani"], ["Loni", "Worsley"], ["Aileen", "Rogan"], ["Kristina", "Barrois"], ["Yu", "Sun"], ["Carla", "Bastos"], ["Anita", "Csendes"], ["Wibeke", "Clifford"], ["Amina", "Choqri"], ["Osaro", "Amadin"], ["Orawan", "Lamangthong"], ["Sarah", "Stallard"], ["Tian Tian", "Sun"], ["Kristina", "Pesatova"], ["Nadia", "Dzuganova"], ["Elena", "Dementieva"], ["Hanna", "Krampe"], ["Imke", "Kusgen"], ["Vanesa Rut", "Ansotegui"], ["Julie", "Tremblay"], ["Tina", "Hergold"], ["Kavitha", "Krishnamurthy"], ["Diana", "Laksono"], ["Virginia", "Trifonova"], ["Kaori", "Goto"], ["Urska", "Juric"], ["Lejla", "Husic"], ["Monica", "Canevaro"], ["Ekaterina", "Makarenko"], ["Jennifer", "Klaschka"], ["Julia", "Henninger"], ["Ilke", "Gers"], ["Lara", "Ercegovic"], ["Evghenia", "Ablovatchi"], ["Dayana", "Mora"], ["Ana Paula", "Novaes"], ["Ariadna", "Berdala Grive"], ["Niyati", "Shetty"], ["Denitza", "Alexandrova"], ["Deniz", "Emre"], ["Elena", "Caldes Marques"], ["Montserrat", "Palacios"], ["Carly", "Homewood"], ["Sarah", "Taylor"], ["Clare", "Warner"], ["Sara", "Martinez Martos"], ["Manon", "Van Den Beek"], ["Renska", "Hiemstra"], ["Adriana", "Burz"], ["Olga", "Duran"], ["Simmi", "Rani"], ["Nathalie", "Aizenberg"], ["Lisa", "Damelio"], ["Paco", "Heredia"], ["Maria Florencia", "Rivolta"], ["Natalia", "Stoudyanaya"], ["Yukiko", "Yabe"], ["Natalia", "Kostova"], ["Mobina", "Saimwala"], ["Dorota", "Zaboklicka"], ["Emily", "Jacobs"], ["Jeong A", "Cho"], ["I Ting", "Wang"], ["Alenka", "Kacunko"], ["Jennifer", "Mcgaffigan"], ["Diana", "De Salvador"], ["Stephanie", "Kimura"], ["Cecilia", "Wilander"], ["Hannah", "Parker"], ["Dagmara", "Bednarczyk"], ["Sonia", "Orellana"], ["Sabaea", "Carrington"], ["Amanda", "Johnson"], ["Christin", "Potsch"], ["Branka", "Bojovic"], ["Jennifer", "Mitchell"], ["Beatriz", "Fraga"], ["Veronica", "Garcia"], ["Katia", "Rodrigues"], ["Olga", "Lazarchuk"], ["Ana Luisa", "Torres"], ["Paula", "Oliveira"], ["Jacqueline", "Lorne"], ["Anuja", "Rithi"], ["Anujapathy", "Pasupathy"], ["Denise", "Vock"], ["Elena", "Yaryshka"], ["Diana", "Brunel"], ["Cacilia", "Charbonnier"], ["Milangela", "Morales"], ["Gabriela", "Salloum"], ["Ariana", "Rojas"], ["Tricia Ann", "Greaves"], ["Estefania", "Martinez"], ["Marina", "Soukholitko"], ["Julie", "Rotondi"], ["Jessica", "Ferguson"], ["Patricia", "Zurita"], ["Carolina", "Rodriguez"], ["Gertruda", "Nagtzaam"], ["Akane", "Yasui"], ["Sanny", "Harsono"], ["Alessandra", "Gandossi"], ["Ines", "Mzoughi"], ["Ansley", "Cargill"], ["Carlota", "Plantier Santos"], ["Aysu", "Cuhaci"], ["Natalia", "Savchenko"], ["Ida", "Sutedja"], ["Iroda", "Tulyaganova"], ["Boyana", "Perich"], ["Visnja", "Vuletic"], ["Ana", "Radak Trampetic"], ["Ellen", "Svensson"], ["Stephanie", "Balzert"], ["Emma", "Gott"], ["Daniela", "Dessolis"], ["Christina", "Fitz"], ["Francesca", "Lorenzoni"], ["Aimee", "Smith"], ["Maria", "Gil"], ["Vadali", "Kameswari"], ["Emily", "Dowdeswell Koti"], ["Sylvie", "Bohmova"], ["Fleida Jan", "Pila"], ["Courtney", "Steinbock"], ["Kristen", "Steinbock"], ["Sarah", "Gregg"], ["Sonora", "Fontaine"], ["Jenny", "Lindstrom"], ["Sandra", "Leborgne"], ["Maria", "Kondratieva"], ["Lisa", "Quiller"], ["Ikuko", "Hirata"], ["Anais Marie", "Moreno"], ["Danielle", "Spacek"], ["Ya Ming", "Lin"], ["Rani Smita", "Jain"], ["Kaori", "Oishi"], ["Barbara", "Soares"], ["Jorgelina", "Cravero"], ["Veronika", "Raimrova"], ["Paulina", "Slitrova"], ["Camila", "Sagae"], ["Inge", "Weirich"], ["Fabienne", "Vieille Grosjean"], ["Marielle", "Hoogland"], ["Andria", "Hadjioannou"], ["Mariona", "Gallifa Puig Desens"], ["Natalia", "Volcova"], ["Jimena", "Fernandez"], ["Sonja", "Vidas"], ["Laura", "Lechi"], ["Svetlana", "Mossiakova"], ["Analia", "Longoni"], ["Nona", "Wagh"], ["Sabine", "Herdegen"], ["Laura", "Cebrian"], ["Natasha", "Van Jaarsveld"], ["Maret", "Ani"], ["Silvia", "Cribellati"], ["Heidi", "Farr"], ["En Yue", "Ma"], ["Emilia", "Anderson"], ["Maria", "Ruiz Fabrega"], ["Lucie", "Mazinova"], ["Karolina", "Sadaj"], ["Rekha", "Natrajan"], ["Radhika", "Tulpule"], ["Jacqueline", "Hagen"], ["Carolina", "Sadaj"], ["Ayca", "Gumuscu"], ["Valerie", "Menob"], ["Yolandi", "Rogers"], ["Nathalie", "Sienkob"], ["Magali", "Risoleo"], ["Lenka", "Tvaroskova"], ["Chrisdula", "Kagga"], ["Kateryna", "Vasylyeva"], ["Marcela", "Evangelista"], ["Bojana", "Damnjanovic"], ["Ying", "Yu"], ["Darija", "Klaic"], ["Jessica", "Ortiz Diaz Oliver"], ["Adriana", "Basaric"], ["Susanne", "Kirsch"], ["Hannah", "Collin"], ["Danielle", "Hock"], ["Furuza", "Gafurova"], ["Celine", "Cattaneo"], ["Helen", "Staresinic"], ["Victoria", "Beck"], ["Dora", "Bechliwanis"], ["Marta", "Bechliwanis"], ["Katerina", "Sevcikova"], ["Sai Swapna", "Ramakrishnan"], ["Petra", "Novotnikova"], ["Kelly", "Schmandt"], ["Klara", "Koukalova"], ["Stefanie", "Weis"], ["Flavia", "Pennetta"], ["Kyung Mi", "Chang"], ["Gyorgyi", "Zsiros"], ["Julia", "Beconi"], ["Na", "Li"], ["Anna", "Dolinska"], ["Amira", "Samara"], ["Cornelia", "Villemur"], ["Helene", "Mygind"], ["Mhairi", "Brown"], ["Gorana", "Marsic"], ["Barbara", "Hellwig"], ["Eri", "Ohmi"], ["Chloe", "Carlotti"], ["Barbara", "Rosenberger"], ["Elena", "Manevska"], ["Mariam", "Galal Hafez"], ["Dacil", "Alvarado"], ["Diana", "Olave"], ["Gemma", "Gallo Gomez"], ["Ilge", "Alpay"], ["Gretchen", "Haynor"], ["Stephanie", "Sagaspe"], ["Doris", "Kurtela"], ["Dagmar", "Denkova"], ["Laura", "Pretin"], ["Laura", "Bao"], ["Andrea", "Plackova"], ["Sandra", "Kvelstein"], ["Linn", "Ronnberg"], ["Elena", "Branker"], ["Mirjana", "Lucic"], ["Katherine", "Boyanovich"], ["Alexandra", "Smith"], ["Ming Hui", "Wu"], ["Lan Lan", "Tai"], ["Diana", "Muller"], ["Olga", "Mikhailova"], ["Ana", "Maslesa"], ["Anne Laure", "Heitz"], ["Idalina", "Franca"], ["Stanislava", "Hrozenska"], ["Sricharanya", "Thiagarajan"], ["Sumitra", "Rao"], ["Angela", "Szymanowski"], ["Yolandi", "Beukes"], ["Meritxell", "Balbas"], ["Manar", "Akkar"], ["Nino", "Chichinadze"], ["Maria Elena", "Camerin"], ["Claire", "Seal"], ["Amandine", "Dulon"], ["Henrike", "Voigt"], ["Sarah", "Stone"], ["Veronika", "Koksova"], ["Monika", "Dybicz"], ["Aurore", "Desert"], ["Nicole", "Weber"], ["Magdalena", "Wojdylok"], ["Petra", "Halastova"], ["Dimana", "Krastevitch"], ["Filipa", "Gabrovska"], ["Monika", "Serrano"], ["Cristina", "Arribas"], ["Vanessa", "Flores"], ["Shruti", "Dhawan"], ["Barbora", "Blahutiakova"], ["Emily Ann", "Marker"], ["Biljana", "Trpeska"], ["Agnes", "Buronyi"], ["Pei Yuin", "Keng"], ["Sabina", "Mediano Alvarez"], ["Candice", "Fuchs"], ["Joo Hee", "Lee"], ["Marina", "Cardoso"], ["Jenny", "Zachrisson"], ["Vera", "Kostelnikova"], ["Sato", "Fujigo"], ["Gamze", "Basaran"], ["Natalia", "Yatsenka"], ["Gabriela", "Coello"], ["Safae", "Kchich"], ["Funke", "Adekola"], ["Nicole", "Angat"], ["Viktoria", "Tepluk"], ["Stephanie", "Gehrlein"], ["Sarah", "Suitor"], ["Luiza", "Biktyakova"], ["Megan", "Marton"], ["Irina", "Voskanyan"], ["Natalia", "Drabova"], ["Christina", "Wheeler"], ["Kate", "Lutgert"], ["Milica", "Stamenic"], ["Claudia", "Salgues"], ["Bernadette", "Audra"], ["Mirja", "Cuntz"], ["Belen", "Guajardo"], ["Hillary", "Adams"], ["Lucia", "Tallova"], ["Anna", "Eriksson"], ["Tiziana", "Iezza"], ["Po Kuen", "Lam"], ["Fabiana", "Taverna"], ["Vanessa", "Wellauer"], ["Andrea", "Hofinger"], ["Megan", "Ferreira"], ["Rui Jing", "Wong"], ["Dita", "Hauerlandova"], ["Sandy", "Lukowski"], ["Tarrin", "Dougery"], ["Eva", "Arteche"], ["Melissa", "Dowse"], ["Aleke", "Tsoubanos"], ["Ivana", "Kekez"], ["Caroline", "Tidemand"], ["Ksenia", "Orehova"], ["Hyun Sook", "Bae"], ["Pragya", "Yadav"], ["Sandhya", "Kanury"], ["Olivia", "Tudor"], ["Mira", "Rainshtein"], ["Courtney", "Bergman"], ["Wan Ching", "Tuan"], ["Helen", "Lawson"], ["Laura", "Bolet"], ["Kun", "Deng"], ["Begona", "De Toro Sanz"], ["Haruka", "Yamamoto"], ["Atsumi", "Mitsumine"], ["Ramona", "But"], ["Elisa", "Innocenti"], ["Alina", "Bileca"], ["Jihan", "Patel"], ["Lyndsey", "Molony"], ["Amelia", "Lincaru"], ["Martina", "Strussova"], ["Anastasia", "Rodionova"], ["Marinela", "Antonic"], ["Anna", "Floris"], ["Djamila", "Khaldi"], ["Jenny", "Andrade"], ["Shelley", "Panford Gyaaba"], ["Carolina", "Rodriguez Magdalena"], ["Marie Eve", "Pelletier"], ["Karen", "Paterson"], ["Minou", "Jancso"], ["Stephanie", "Serruys"], ["Ines", "Trickovic"], ["Katharina", "Scholtisek"], ["Karina", "Gamonal"], ["Dikla", "Dadon"], ["Lauren", "Barnikow"], ["Maria", "Rivas"], ["Elina", "Bairos"], ["Jamie", "Buterbaugh"], ["Ofra", "Friedman"], ["Yang", "Liu"], ["Mia", "Buric"], ["Deborah", "Saxer"], ["Nathalia", "Bellizia"], ["Dragica", "Joksimovic"], ["Daysi", "Espinal"], ["Victoria", "Cservenyak"], ["Marina", "Samolenko"], ["Leslie", "Butkiewicz"], ["Silvia", "Hegedis"], ["Belinda", "Kelly"], ["Se Na", "Lee"], ["Maureen", "Diaz"], ["Suzanne", "Van Hartingsveldt"], ["Sivan", "Ozana"], ["Carolyn", "Mcgann"], ["Emily", "Stellato"], ["Veronika", "Ctvrtnickova"], ["Anastasia", "Dvornikova"], ["Justine", "Henin"], ["Jessica", "Roland Rosario"], ["Jenny", "Belobrajdic"], ["Hana", "Debevec"], ["Hadjira", "Slimani"], ["Frederica", "Piedade"], ["Melissa", "Middleton"], ["Maja", "Pauk"], ["Noelia", "Furno"], ["Nadia", "Petrova"], ["Helen", "Reesby"], ["Tuyet Minh", "Tran"], ["Cristina", "Madrid"], ["Karla", "Mancinas"], ["Sonal", "Phadke"], ["Nives", "Culum"], ["Nathalie", "Banday"], ["Tunde", "Nemeth"], ["Diana", "Quevedo"], ["Hanae", "Rhazi"], ["Vanessa", "Pallucci"], ["Mirina", "Rajaoarisoa"], ["Anabelle", "Espinosa Rodriguez"], ["Olivia", "Crouchent"], ["Claudia", "Ivone"], ["Biljana", "Dimovska"], ["Claire", "Webb"], ["Aniela", "Mojzis"], ["Sasiwan", "Pimonrat"], ["Sabrina", "Jolk"], ["Dewi Monica", "Siregar"], ["Amandine", "Singla"], ["Kristel", "Van Der Perre"], ["Valeria", "Bondarenko"], ["Valeri", "Zatulko"], ["Nadia", "Kilani"], ["Karmelina", "Rivera"], ["Anna", "Cowan"], ["Nadine", "Sanfilippo"], ["Maiko", "Cook"], ["Zuzana", "Kucova"], ["Valentina", "Rossi"], ["Marisa", "Tseng"], ["Tekeme", "Ekios"], ["Lucy", "Francis"], ["Sivan", "Paz"], ["Dina", "Khalil"], ["Tomoko", "Yonemura"], ["Eun Mi", "Oh"], ["Caylan", "Leslie"], ["Magdalena", "Bilova"], ["Michaela", "Larsson"], ["Christine", "Pape Nielsen"], ["Varita", "Sureephong"], ["Ashley", "Nations Raju"], ["Junri", "Namigata"], ["Leonita", "Girsang"], ["Aradhana", "Sarohia"], ["Sanela", "Kunovac"], ["Lucia", "Halty Barrutieta"], ["Isha", "Chopra"], ["Arithzi", "Vanzzini"], ["Katherine", "Laidler"], ["Ioana", "Paun"], ["Katerina", "Stamatopoulou"], ["Aparna", "Singh"], ["Elizabeth", "Brito"], ["Mariana", "Quintanilla"], ["Daria", "Panova"], ["Dominika", "Luzarova"], ["Camille", "Gely"], ["Bettina", "Roberts"], ["Nelyuri", "Calvo"], ["Marie", "Combemorel"], ["Lucy", "Ikic"], ["Harmonie", "Fiacchi"], ["Nikhila", "Palat"], ["Li", "Huang"], ["Rosangela", "Martinez"], ["Karla", "Jana"], ["Alejandra", "Franco"], ["Karla", "Mraz"], ["Francesca", "Tancredi"], ["Emily", "Foster"], ["Anabel", "Medina Garrigues"], ["Emily", "Hewson"], ["Giulia", "Meruzzi"], ["Elena", "Kovalchuk"], ["Salma", "Ben Mahmoud"], ["Sarah Jane", "Connelly"], ["Natalie", "Neri"], ["Jemima", "King"], ["Audrey", "Hernandez"], ["Carla", "Prieto"], ["Barbara", "Orlai"], ["Dominique", "Rosenberg"], ["Nicola", "Trinder"], ["Rosa", "Gajic"], ["Lindsay", "Ferrell"], ["Maria Jose", "Martinez Sanchez"], ["Maria", "Nieto"], ["Utako", "Suzuki"], ["Celine", "Francois"], ["Marine", "Petit"], ["Anna", "Pogosova"], ["Joanna", "Furdyna"], ["Kasumi", "Aiko"], ["Julia", "Schruff"], ["Elodie", "Naegellen"], ["Zerene", "Reyes"], ["Mylie", "Gillet"], ["Harsimran Kaur", "Bedi"], ["Rocio", "Cupeiro"], ["Eka", "Vepkhvadze"], ["Katerina", "Romanenko"], ["Charlotte", "Wallace"], ["Cattaleeya", "Wisesrat"], ["Bianka", "Lamade"], ["Veronika", "Subertova"], ["Tereza", "Simonian"], ["In Young", "Chang"], ["Jinal", "Patel"], ["Lama", "Daouk"], ["Yulia", "Mirna"], ["Nadine", "Schlotterer"], ["Sarah", "Dinkelmann"], ["Despina", "Toulgaridou"], ["Beatriz", "Cabrera Rosendo"], ["Edit", "Bagoly"], ["Thu Tuyen", "Pham Nhu"], ["Lucie", "Ruskova"], ["Anna", "Markovich"], ["Emma", "Tullett"], ["Tiffany", "Eklov"], ["Claudia", "Oliva"], ["Sanja", "Jukic"], ["Urska", "Vesenjak"], ["Masa", "Vesenjak"], ["Catherine", "Hortala"], ["Elisa", "Belleri"], ["Lauren", "Fisher"], ["An Na", "Lee"], ["Jennifer", "Longin"], ["Maike", "Kampschulte"], ["Rachel", "Shweky"], ["Kathleen", "Blaszak"], ["Sabrina", "Vogt"], ["Samantha", "Lucas"], ["Ilona", "Jarkova"], ["Eleni", "Daniilidou"], ["Elsa", "Oriain"], ["Niki", "Williams"], ["Neus", "Sole"], ["Stephanie", "Price"], ["Xia", "Sheng"], ["Tracey", "Oconnor"], ["Marina", "Fileva"], ["Bridget", "Chidi"], ["Davina", "Mendiburu"], ["Mounia", "Hassib"], ["Courtney", "Nagle"], ["Eunice", "Paravicini"], ["Tereza", "Szafnerova"], ["Jasmin", "Notdurfter"], ["Alexandra", "Zotta"], ["Chattida", "Thimjapo"], ["Francesca", "Cicciu"], ["Maja", "Mlakar"], ["Lucia", "Halty"], ["Dominika", "Nemcovicova"], ["Lucia", "Struharova"], ["Annat", "El Azari"], ["Blessing", "Anuna"], ["Wendy", "Galan Dominguez"], ["Dolunay", "Soykan"], ["Mayumi", "Yamamoto"], ["Carolina", "Guilliano"], ["Martina", "Muller"], ["Razalia", "Phethu"], ["Katarina", "Basternakova"], ["Goulnara", "Fattakhetdinova"], ["Vlatka", "Jovanovic"], ["Valeria", "Macloughlin"], ["Etsuko", "Kitazaki"], ["Albertina", "Gandara"], ["Mudarwati", "Mudarwati"], ["Rakha", "Mohan"], ["Nathalie", "Vierin"], ["Stephanie", "Bernadel"], ["Bernadette", "Bayani"], ["Isabel", "Collischonn"], ["Raadhae", "Svarupa"], ["Cassandra", "Barr"], ["Pamela", "Van Boekel"], ["Pascale", "Veraverbeke"], ["Yasmin", "El Kashef"], ["Amanda", "Mang"], ["Diana", "Martin"], ["Melinda", "Czink"], ["Kumiko", "Iijima"], ["Gabriela", "Zingman"], ["Johanna", "Zingman"], ["Safa", "Safar"], ["Diana", "Vuchinger"], ["Simone", "Stohr"], ["Anna", "Bentzer"], ["Tatyana", "Bezukladnikova"], ["Anna", "Nefedova"], ["Mia", "Paavilainen"], ["Violeta", "Fabe Martin"], ["Mitsuko", "Ise"], ["Kerry", "Rudman"], ["Rocio", "Gonzalez"], ["Bettina", "Niedhart"], ["Veronika", "Levchenko"], ["Kim", "Kambic"], ["Nida", "Waseem"], ["Goda", "Kuliesyte"], ["Rita", "Tarjan"], ["Barbora", "Sukova"], ["Tajana", "Mlakar"], ["Lourdes", "Gaona Gonzalez"], ["Ana", "Mise"], ["Erika", "Villalobos Morsink"], ["Ekaterina", "Kuznetsova"], ["Arantxa", "Parra Santonja"], ["Caroline", "Maes"], ["Katiuscia", "Del Vecchio"], ["Kate", "Hole"], ["Christie", "Agugbom"], ["Zorana", "Stefanovic"], ["Christy", "Mbadiwe"], ["Sandra", "Klemenschits"], ["Daniela", "Klemenschits"], ["Enrica", "Ditta"], ["Annalisa", "Bona"], ["Deborah", "Hill"], ["Thuy Linh", "Tran"], ["Olivia", "Sanchez"], ["Carla", "Andrade"], ["Aleksandra", "Srndovic"], ["Lindsay", "Martin"], ["Alyssa", "Cohen"], ["Irena", "Noc"], ["Anisoara", "Popescu"], ["Rose", "Onoja"], ["Agnese", "Zucchini"], ["Dan Dan", "Jiang"], ["Angela", "Arean"], ["Melinda", "Malouli"], ["Lauren", "Colalillo"], ["Viviana", "Rojas Millan"], ["Fabienne", "Vielle Grosjean"], ["Estefania", "Rolon"], ["Erina", "Akizu"], ["Tamara", "Kikaleishvili"], ["Isabelle", "Declercq"], ["Ekaterina", "Kouznetchenkova"], ["Bethany", "Griffin"], ["Alexandra", "Mayrat"], ["Mariko", "Fritz Krockow"], ["Kristina", "Georgieva"], ["Tinatin", "Turmanidze"], ["Lorena", "Barbero"], ["Esther", "Muscat"], ["Julie", "Coin"], ["Femi", "Odeyemi Musa"], ["Anna", "Koumantou"], ["Luana", "Magnani"], ["Maria Letizia", "Zavagli"], ["Anushka", "Rajiyah"], ["Lindsay", "Dawaf"], ["Raquel", "Kops Jones"], ["Margalita", "Chakhnashvili"], ["Adriana", "Ruiz"], ["Susanne", "Wild"], ["Eman", "Metwaly"], ["Tatiana", "Perebiynis"], ["Ivana", "Zupa"], ["Livia", "Azzi"], ["Olga", "Kalyuzhnaya"], ["Aleksandra", "Kujawska"], ["Meriem", "Addou"], ["Silvia", "Gabba"], ["Anna", "Yenyk"], ["Maki", "Arai"], ["Jennifer", "Schmidt"], ["Candice", "Meyer"], ["Rachael", "Irelewuyi"], ["Maria Alejandra", "Garcia"], ["Ashley", "Robards"], ["Ana", "Timotic"], ["Trina", "Singian"], ["Suchanun", "Viratprasert"], ["Ceylan", "Konuk"], ["Antonia", "Steinmetz"], ["Asha", "Burns"], ["Fernanda", "Bini"], ["Jasna", "Brnjakovic"], ["Gabriela", "Moreira"], ["Annika", "Weisse"], ["Marija", "Serdarusic"], ["Isoke", "Perry"], ["Lorenza", "Vaschetto"], ["Gulay", "Torgay"], ["Cristina", "Santos"], ["Maria Elizabeth", "Lopez"], ["Salome", "Llaguno"], ["Julia Octavia", "Groblewski"], ["Anna", "Alexeeva"], ["Andreea", "Fusea"], ["Dina", "Milosevic"], ["Ana", "Cetnik"], ["Tania", "Rivera"], ["Marie Perrine", "Baudouin"], ["Jenny", "Kuhn"], ["Suzi", "Becvinovska"], ["Richele", "Le Saldo"], ["Antonie", "Steinmetz"], ["Sara", "Sabry"], ["Marta", "Marrero"], ["Lindsay", "Cox"], ["Tamar", "Zedginidze"], ["Thais", "Schenck"], ["Mari", "Mizuno"], ["Nina", "Joksovic"], ["Ana Maria", "Simanca"], ["Dea", "Sumantri"], ["Monique", "Adamczak"], ["Chris", "Martinez Hernandez"], ["Viviana", "Rivero"], ["Dan", "Xiong"], ["Emmanuelle", "Poncetta"], ["Marion", "Lecas"], ["Dragana", "Ognenovska"], ["Beatrice", "Banila"], ["Lorena Ivette", "Arias Rodriguez"], ["Stephanie", "Chu"], ["Kathleen", "Mcgaffigan"], ["Cristina", "Tonelli"], ["Virginie", "Pichet"], ["Vivien", "Weber"], ["Ji Fei", "Yu"], ["Irene", "Gutierrez"], ["Cristelle", "Grier"], ["Katarzyna", "Walukiewicz"], ["Jenneta", "Halliyeva"], ["Milena", "Schulz Gartner"], ["Sae", "Kato"], ["Iveta", "Benesova"], ["Yolandi", "Terblanche Ward"], ["Shirley", "Bernal"], ["Kristina", "Jarkenstedt"], ["Wioletta", "Kaczmarek"], ["Hana", "Kraftova"], ["Kristina", "Dundov"], ["Anna", "Shchupak"], ["Alet", "Boonzaaier"], ["Sandra", "Jillyova"], ["Gulvona", "Khodjaeva"], ["Monica", "Acosta"], ["Diana", "Costa"], ["Simona", "Arghire"], ["Zuzana", "Cerna"], ["Maria", "Kravcenko"], ["Lourdes", "Lopez"], ["Roberta", "Frizzo"], ["Asami", "Nishio"], ["Violetta", "Bagrova"], ["Anuli", "Okafor"], ["Anete", "Rozkalne"], ["Silvia", "Gutierrez Quiroga"], ["Beatrice", "Spiganti"], ["Andre", "Polasek"], ["Raluca", "Ciochina"], ["Roberta", "Vinci"], ["Cindra", "Maharaj"], ["Cecilia", "Helland"], ["Eugenia", "Chialvo"], ["Harriet", "Piercy"], ["Irena", "Khomyk"], ["Jennie", "Loow"], ["Trine", "Bassett"], ["Jaslyn", "Hewitt"], ["Melanie", "Cohen"], ["Maryam", "Mazaheri"], ["Macey", "Breece"], ["Sari", "Stegmann"], ["Maria Isabella", "Ariza Sanz"], ["Katherine", "Vymetal"], ["Davina", "Duronio"], ["Lucie", "Podskubova"], ["Wei Juan", "Liu"], ["Nicole", "Bouffler"], ["Lorena", "Aparicio Vargas"], ["Daniela", "Bertolo"], ["Inge", "De Geest"], ["Linda", "Fallon"], ["Priscila", "Ortega"], ["Martina", "Reiser"], ["Milica", "Koprivica"], ["Irina", "Bobrysheva"], ["Dong Bo", "Lei"], ["Branka", "Savic"], ["Maritza", "Villalba Castro"], ["Jackeline", "Jacome"], ["Nicole", "Clerico"], ["Beauty", "Oghenekevwe"], ["Daja", "Bedanova"], ["Elena", "Bovina"], ["Ana", "Sismondini"], ["Anna", "Rynarzewska"], ["Ariela", "Primo"], ["Nato", "Dolitze"], ["Deena Rose", "Cruz"], ["Paloma", "Castillo"], ["Magalie", "Girard"], ["Rebecca", "Pike"], ["Alejandra", "Rivero"], ["Christelle", "Antille"], ["Lyle", "Cupido"], ["Mao", "Yamanaka"], ["Daniela", "Hebertova"], ["Jelena", "Pandzic"], ["Lejla", "Popobic"], ["Karin", "Kues"], ["Stephanie", "Cohen Aloro"], ["Kelly", "Mccain"], ["Valerie", "Verrier Diaconescu"], ["Barbara", "Galletto"], ["Amanda", "Sanches"], ["Maria", "Husain"], ["Michela", "Comune"], ["Vrushali", "Gawankar"], ["Laurette", "Van Den Knaap"], ["Ignacia", "Marin"], ["Eugenia", "Lepchenko"], ["Vanessa", "Alonso Rodriguez"], ["Virginia", "Romero Barrio"], ["Debbie", "Larocque"], ["Ester", "Lasheras Varade"], ["Suci", "Bungaran"], ["Malgorzata", "Kanabus"], ["Megan", "Bradley"], ["Irini", "Alevizopoulou"], ["Sheri", "Esrock"], ["Anne", "Lucas"], ["Virginie", "Rabeau"], ["Segun", "Lesi"], ["Cameron", "Benjamin"], ["Jane", "Odonoghue"], ["Ayano", "Takeuchi"], ["Lenka", "Potocarova"], ["Julie", "Salla"], ["Marie Lisa", "Loriga"], ["Teresa", "Veneruso"], ["Alexis", "King"], ["Audra", "Falk"], ["Karla", "Hall Gonzalez"], ["Chanelle", "Kruger"], ["Liliana", "Hung"], ["Nina", "Zlender"], ["Natalie", "Mikolich"], ["Kristel", "Van Den Tillaart"], ["Sarah", "Mcintyre"], ["Claudia", "Argumedo"], ["Valentina", "Caronti"], ["Shikha", "Uberoi"], ["Stefania", "Chieppa"], ["Mirem", "Rico Nogales"], ["Eugenia", "Subbotina"], ["Noemie", "Ruffin"], ["Kellie", "Browne"], ["Helena", "Norfeldt"], ["Teodora", "Mircheva"], ["Laura", "Levan"], ["Ashley", "Sims"], ["Bettina", "Resch"], ["Vida Lina", "Alpuerto"], ["Jelena", "Dokic"], ["Georgia", "Akrivopoulou"], ["Chun Yan", "He"], ["Mia", "Zecevic"], ["Mariem Nissaf", "Bouchlaka"], ["Ioanna", "Petratou"], ["Maria Fernanda", "Alves"], ["Ioana", "Gaspar"], ["Martina", "Babakova"], ["Olga", "Dzuba"], ["Daniela", "Salomon"], ["Erin", "Burdette"], ["Margarita", "Akbacheva"], ["Jordanna", "Seymour"], ["Kristin", "Martinez"], ["Anja", "Margetic"], ["Marina", "Parashkevova"], ["Daniela", "Hantuchova"], ["Florencia", "Salvadores"], ["Petra", "Vojtaskova"], ["Lauren", "Stephens"], ["Lana", "Popadic"], ["Cecilia", "Cardenas"], ["Simin", "Liu"], ["Tassia", "Sono"], ["Nele", "Landrieux"], ["Ekaterina", "Kozhokhina"], ["Aline", "Quintal"], ["Laetitia", "Zembski"], ["Katrien", "Scott"], ["Renata", "Del Barco Matto"], ["Yoshiko", "Kobayashi"], ["Tomoko", "Nagahisa"], ["Evy", "De Mesmaecker"], ["Anna", "Chachua"], ["Mariana", "Lopez Terribile"], ["Avril", "Martinez"], ["Rocio", "Lopez Pimentel"], ["Bettina", "Pirker"], ["Giorgia", "Brunetti"], ["Story", "Tweedie Yates"], ["Suheil", "Lizana"], ["Rachel", "Cruickshank"], ["Andrea", "Cooper"], ["Katie", "Ruckert"], ["Neuza", "Silva"], ["Kristel", "Izquierdo"], ["Sofia", "Brun"], ["Daniela", "Covello"], ["Anne Valerie", "Evain"], ["Vivian", "Torrez"], ["Ashley", "Kroh"], ["Giorgia", "Nespoli"], ["Eudoxia", "Delisavva"], ["Emily", "Quin"], ["Lena", "Sherbakov"], ["Laura", "Puch"], ["Nishtha", "Yadav"], ["Dianne", "Hollands"], ["Tanja", "Hirschauer"], ["Carmen", "Torres"], ["Virginie", "Razzano"], ["Irina", "Delitz"], ["Maria Emilia", "Salerni"], ["Constanze", "Glockner"], ["Beti", "Sekulovski"], ["Denise", "Ferreira"], ["Judith", "Diaz"], ["Yan Hua", "Dong"], ["Natasha", "Lucki"], ["Giulia", "Baldoni"], ["Patricia", "Starzyk"], ["Liga", "Dekmeijere"], ["Elena", "Tudor"], ["Barbara", "Hoflinger"], ["Magdolna", "Rekasi"], ["Yamini", "Thukkaiandi"], ["Summer", "Bhullar"], ["Norma", "Flautero"], ["Kate", "Boomershine"], ["Lauren", "Breadmore"], ["Marta", "Mir Portell"], ["Dinka", "Hadzic"], ["Michela", "Sala"], ["Desanka", "Jovanovic"], ["Samanthi", "Wijesekera"], ["Petia", "Vousheva"], ["Zvezdelina", "Mladenova"], ["Evgenia", "Subbotina"], ["Borka", "Majstorovic"], ["Petia", "Voucheva"], ["Ceyda", "Keyman"], ["Jane", "Ioaba"], ["Paola", "Guerrero"], ["Kanako", "Kozawa"], ["Kim", "Clijsters"], ["Yuliana", "Fedak"], ["Carolina", "Ojeda"], ["Jacqueline", "Bohannon"], ["Rachel", "Magory"], ["Eun Hye", "Cho"], ["Melanie", "Gerbasi"], ["Davilyn", "Godinet"], ["Bethzabe", "Magadan"], ["Arpi", "Kojian"], ["Ivana", "Sokac"], ["Regina", "Temez"], ["Sophie", "Douchet"], ["Ana Maria", "Zuleta"], ["Hande", "Gorur"], ["Krisel", "Sverko"], ["Monique", "Groen"], ["Carmen", "Marquez"], ["Nan Nan", "Liu"], ["Natalia", "Lifshitz"], ["Anna", "Ioannou"], ["Robin", "Stephenson"], ["Fernanda", "Oliveira Da Silva"], ["Estefania", "Daubiol"], ["Ilona", "Somers"], ["Lore", "De Lille"], ["Teresina", "Paz Soldan"], ["Sayaka", "Yoshino"], ["Yulia", "Klimchenko"], ["Florencia", "Romani"], ["Yuri", "Kasuya"], ["Ketino", "Akhvlediani"], ["Jessica", "Mckeown"], ["Ami", "Fujiwara"], ["Urszula", "Owsiak"], ["Yomna", "Farid"], ["Genevieve", "Charron"], ["Leanne", "Rutherford"], ["Amandine", "Clio"], ["Melissa", "Berry"], ["Jae Eun", "Kim"], ["Sohvi", "Sundqvist"], ["Annabel", "Blow"], ["Joanna", "Zyndzo"], ["Jennifer", "Langer"], ["Natalia", "Tsitouras"], ["Jacqueline", "Frohlich"], ["Cecilia", "Varela"], ["Flor", "Bayon"], ["Jie", "Zheng"], ["Tihana", "Pochobradsky"], ["Chiara", "Gonnelli"], ["Daria", "Potapova"], ["Klara", "Hladka"], ["Tessy", "Van De Ven"], ["Melody", "Paschal"], ["Rachel", "Crismond"], ["Francesca", "Lancini"], ["Danielle", "Plant"], ["Leire", "Etayo"], ["Julia", "Vakulenko"], ["Silvia", "Disderi"], ["Martina", "Dettore"], ["Yukari", "Ochiai"], ["Julia", "Nogueira"], ["Oksana", "Karyshkova"], ["Belen", "Pandre"], ["Patricia", "Van Worcum"], ["Mariela", "Castro"], ["Boglarka", "Berecz"], ["Maria Paz", "Orellana"], ["Raluca Daniela", "Gheorghe"], ["Celine", "Parun"], ["Tijana", "Stojkovic"], ["Erika", "Valdes"], ["Emma", "Murphy"], ["Marie", "Vallety"], ["Caroline Ann", "Basu"], ["Mamiko", "Kawaguchi"], ["Lucia", "Lazo"], ["Marie", "Matrka"], ["Raluca", "Moldovan"], ["Masayo", "Hosokawa"], ["Irina", "Mourachkintseva"], ["Saras", "Arasu"], ["Alena", "Dvornikova"], ["Julia", "Smith"], ["Tadeja", "Sibila"], ["Kimberly", "Buick"], ["Romina", "Sceats"], ["Marcella", "Campana"], ["Marisa", "Howell"], ["Victoria", "Chavleishvili"], ["Debora", "Carmassi"], ["Lucia", "Obysovska"], ["Milica", "Jeremic"], ["Jennifer", "Miccoli"], ["Nikita", "Bhardwaj"], ["Siham Soumeya", "Ben Nacer"], ["Karin", "Ionesco"], ["Agathe", "Macarez"], ["Thi Kim Loi", "Tran"], ["Lisette", "Pereira Aguilar"], ["Elisa", "Balsamo"], ["Paule Andree", "Levasseur"], ["Monika", "Schneider"], ["Suzana", "Maksovic"], ["Donna", "Mc Intyre"], ["Nandini", "Perumal"], ["Lavinia", "Toader"], ["Tatjana", "Nossik"], ["Elena", "Baltacha"], ["Edina", "Gobol"], ["Line", "Elvstrom Ekner"], ["Yuka", "Hatano"], ["Alima", "Mohamed"], ["Christine", "Alford"], ["Laura", "Figuerola Foix"], ["Catherine", "Gunn"], ["Claudine", "Schaul"], ["Hong Thanh", "Tang"], ["Maria Paz", "Orero"], ["Ayaka", "Maekawa"], ["Lucila", "Di Carlo"], ["Anya", "Moyston"], ["Anabella", "Duque"], ["Adriana", "Jerabek"], ["Maja", "Kovacek"], ["Komugi", "Matsui"], ["Michelle", "Grobby"], ["Leeza", "Rooks"], ["Aditi", "Karanjkar"], ["Serra", "Olgac"], ["Daniela", "Murselovic"], ["Aika", "Nonaka"], ["Klara", "Jarova"], ["Ruxandra", "Marin"], ["Chiari", "Aragaki"], ["Jing Jing", "Liu"], ["Ivana", "Abramovic"], ["Elodie", "Rogge Dietrich"], ["Ziarla", "Battad"], ["Esther", "Hijosa Basarte"], ["Ena", "Brankovic"], ["Margit", "Ruutel"], ["Julia", "Biffar"], ["Blair", "Di Sesa"], ["Miroslava", "Velevska"], ["Yimara", "Figueroa"], ["Nadine", "Hassinger"], ["Marta", "Simic"], ["Mitsumi", "Kawasaki"], ["Maria Paola", "Aranguren"], ["Olga", "Borisova"], ["Cheli", "Bargil"], ["Ryoko", "Watanabe"], ["Annette", "Kolb"], ["Zihaida", "Shantalova"], ["Hsin Chieh", "Chang"], ["Anne", "Keothavong"], ["Zita", "Horanyi"], ["Radhika", "Ravji"], ["Ksenia", "Gorbunova"], ["Maria Teresa", "Scott"], ["Sukriti", "Patnaik"], ["Iva", "Saric"], ["Angelica Maria", "Torres"], ["Katri", "Miller"], ["Nichala", "Reddy Boda"], ["Orobosa", "Amadin"], ["Jessica", "Weyreuter"], ["Alexia", "Malbran"], ["Eri", "Nozawa"], ["Alexandra", "Nieto"], ["Karin", "Coetzee"], ["Alexandra", "Popa"], ["Cristina", "Sampaio"], ["Alina Iuliana", "Virsa"], ["Sangaram", "Shangamitra"], ["Cecilia", "Poveda"], ["Marina", "Stanimirov"], ["Yvonne", "Meusburger"], ["Prapaiphan", "Kansuthi"], ["Kim Anh", "Nguyen"], ["Elena", "Poliakova"], ["Liza", "Viplav"], ["Selma", "Andrade"], ["Renata", "Voracova"], ["Kamila", "Dadakhodjaeva"], ["Jitske", "Frankenhuis"], ["Diana", "Espinal"], ["Catalina", "Isaza"], ["Irene", "Mani"], ["Lubomira", "Kurhajcova"], ["April", "Pfannestiel"], ["Vishika", "Chhetri"], ["Myriam", "Cueva"], ["Megan", "Racette"], ["Leigh", "Shelton"], ["Yevgeniya", "Barysheva"], ["Veronica", "Spiegel"], ["Pavia", "Schnattingerova"], ["Yen Hua", "Lu"], ["Yuliya", "Beygelzimer"], ["Ghita", "Mhaoud"], ["Lidia", "Lopez Companys"], ["Eveline", "Rusdianto"], ["Juan Juan", "Cheng"], ["Asimina", "Kaplani"], ["Ana Maria", "Mora"], ["Feriel", "Esseghir"], ["Alexandra", "Kravets"], ["Maria", "Pes"], ["Petra", "Kostelnikova"], ["Neyssa", "Etienne"], ["Brenda", "Coassolo"], ["Nina", "Egger"], ["Ekaterina", "Chatzisavidou"], ["Susanna", "Lingman"], ["Neda", "Mihneva"], ["Maria", "Vlachou"], ["Andreea Mihaela", "Matei"], ["Rattiya", "Hiranrat"], ["Nicolette", "Mechem"], ["Giulia", "Cesari"], ["Natalia", "Dziamidzenka"], ["Irene", "George"], ["Natalia", "Zabala"], ["Aniko", "Kapros"], ["Leonie", "Mekel"], ["Kate", "Jolson"], ["Maria", "Ivanov"], ["Naoe", "Nabetani"], ["Sladana", "Stankovic"], ["Alessandra", "Esposito"], ["Karina", "Torres Ferrer"], ["Dalia", "Coutry"], ["Nermien", "Abaza"], ["Elena", "Kokkinaki"], ["Klara", "Petersson"], ["Kendra", "Strohm"], ["Christina", "Horiatopoulos"], ["Maria Eugenia", "Brito"], ["Barbara", "Murga"], ["Ana Cecilia", "Trevino"], ["Ekaterina", "Ostapenko"], ["Cecilia", "Quarracino"], ["Doria", "Khetib"], ["Kathryn", "Bentley"], ["Gianna", "Doz"], ["Julia", "Acs"], ["Anna", "Anikanova"], ["Sabrina", "Peppl"], ["Nargisa", "Akramova"], ["Adriana", "Herran Giraldo"], ["Julia", "Oussanova"], ["Imane", "Bachi"], ["Berveine", "Mohammed"], ["Rati", "Kumar"], ["Bharathy", "Parthasarathy"], ["Patricia", "Alonso"], ["Zsuzsanna", "Fodor"], ["Timberly", "Greenly"], ["Deborah", "Montero"], ["Joanna", "Carlson"], ["Nicole", "Kriz"], ["Maria Rosa", "Sitja Gibert"], ["Sabrina", "Eisenberg"], ["Barbara", "Polidoro"], ["Lenka", "Snajdrova"], ["Susanne", "Aigner"], ["Hadas", "Zabusky"], ["Ana Lucia", "Migliarini De Leon"], ["Christine", "Stastny"], ["Monica", "Purice"], ["Elizabeth", "Bondi"], ["Sana", "Ben Salah"], ["Renata", "Caceres"], ["Luisa", "Cowper"], ["Hitomi", "Konno"], ["Mia", "Marovic"], ["Jimena", "Alvarez"], ["Kalpita", "Raje"], ["Monika", "Hohenecker"], ["Franziska", "Etzel"], ["Danielle", "Moita"], ["Beatriz", "Becker"], ["Ingeborg", "Kerkhoven"], ["Karina", "Koche"], ["Maria Vanina", "Garcia Sokol"], ["Michelle", "Giang"], ["Aiko", "Nakamura"], ["Geeta", "Manohar"], ["Daniela", "Alvarez"], ["Tiffany", "Smith"], ["Ridhina", "Parekh"], ["Asha", "Jaja"], ["Carmen Raluca", "Tibuleac"], ["Iulia", "Rozgon"], ["Klara", "Zrustova"], ["Ancuta", "Gadalean"], ["Prariyawan", "Ratanakrong"], ["Rachel", "Halligan"], ["Maria Jose", "Dronda Prados"], ["Radha", "Devendrappa"], ["Sevia", "Gonca"], ["Emmanuelle", "Edon"], ["Mareen", "Beermann"], ["Giorgia", "Buchanan"], ["Anupama", "Rajur"], ["Gloria", "Perfetti"], ["Carlotta", "Campus"], ["Tatevik", "Babayan"], ["Nandita", "Chandrasekar"], ["Ji Youn", "Lee"], ["Bruna", "Discordia"], ["Mika", "Tanaka"], ["Yan Ze", "Xie"], ["Jackie", "Carleton"], ["Anne Priska", "Schaefer"], ["Marie France", "Lord Andrade"], ["Melissa", "Schaub"], ["Yan Sr", "Zhang"], ["Tina", "Schiechtl"], ["Cynthia", "Goulet"], ["Marianna", "Laasanen"], ["Yukiyo", "Hara"], ["Li", "Yan"], ["Galina", "Fokina"], ["Sylwia", "Domanska"], ["Ayumi", "Ichikawa"], ["Francesca", "Savinelli"], ["Petroena", "Fong"], ["Elise", "Tamaela"], ["Alice", "Barnes"], ["Alice", "Joy"], ["Akiko", "Yonemura"], ["Zuzana", "Melicherova"], ["Ingunn", "Eiriksdottir"], ["Wen Hao", "Wu"], ["Jessie", "De Vries"], ["Sara", "Badran"], ["Rankin", "Williams"], ["Dan", "Yu"], ["Clara", "Rios"], ["Petra", "Baksa"], ["Daniela", "Munoz Gallegos"], ["Vanessa", "Nieto"], ["Andrea", "Liniger"], ["Justine", "Walsh"], ["Marie Pier", "Pouliot"], ["Natalia", "Garbellotto"], ["Mouna", "Sabri"], ["Melissa", "Torres Sandoval"], ["Marta", "Sanchez Soto"], ["Caroline", "Neves"], ["Rocio", "Villar Gonzalez"], ["Mia", "Van Rooyen"], ["Bit Na", "Lee"], ["Nancy", "Cazares"], ["Nadezda", "Samoylo"], ["Dvora", "Marsha"], ["Julia", "Roca Valverde"], ["Rebecca", "Rankin"], ["Yao", "Zhang"], ["Emily", "Arnott"], ["Hea Mi", "Kim"], ["Catarina", "Ferreira"], ["Merve", "Koksal"], ["Maarit", "Nieminen"], ["Ludivine", "Cassagne"], ["Silvia", "Tiscareno"], ["Masha", "Bayser"], ["Rocio", "Govantes"], ["Erika", "Miyamoto"], ["Chantelle", "Simpson"], ["Paula", "Marama"], ["Natalia", "Coronel"], ["Diana", "Julianto"], ["Assia", "Halo"], ["Clodagh", "Mcmorrow"], ["Elena", "Vianello"], ["Helen", "Broome"], ["Sofia", "Arvidsson"], ["Rossella", "Sartore"], ["Mio", "Kinjo"], ["Cheng Jie", "Lu"], ["Severine", "Dhondt"], ["Jennifer", "Magley"], ["Sayaka", "Takahara"], ["Kathrin", "Woerle"], ["Yulia", "Ustyuzhanina"], ["Daniela", "Martinez"], ["Gergana", "Ganeva"], ["Holly", "Mckee"], ["Crystel", "Mulder"], ["Yevheniia", "Savranska"], ["Sofia", "Holden"], ["Hsiao Han", "Chao"], ["Matulanda", "Lumanauw"], ["Rediet", "Kefyalew"], ["Laura", "Morales Hernandez"], ["Virginie", "Oulevay"], ["Camille", "Dubois"], ["Sonia", "Iacovacci"], ["Elena", "Toulgaridou"], ["Majen", "Immink"], ["Kei", "Sekine"], ["Tanya", "Volkova"], ["Vana", "Mrazovic"], ["Mansi", "Majeji"], ["Bronwyn", "Williams"], ["Noelia", "Leon"], ["Jenny", "Zambrano"], ["Jessica", "Simosa"], ["Gloriann", "Lopez"], ["Megan", "Emmett"], ["Raissa", "Gourevitch"], ["Jana", "Cabak"], ["Nathalie", "Roels"], ["Shu Jin", "Xie"], ["Aminat", "Taiwo"], ["Rachel", "Janssen"], ["Marie Gaiane", "Mikaelian"], ["Kira", "Bezverkova"], ["Tereza", "Sandova"], ["Tsitsi", "Masviba"], ["Nikolina", "Hrankova"], ["Patricia", "Munoz Santana"], ["Ninja", "Pfuetzenreuter"], ["Hanna", "Nooni"], ["Melanie", "Marois"], ["Haruka", "Nakamura"], ["Hollie", "Bees"], ["Merve", "Asimgil"], ["Marzia", "Carchesio"], ["Jaclyn", "Lucas"], ["Karin", "Lems"], ["Audrey", "Wahl"], ["Chanelle", "Scheepers"], ["Mi Hee", "Jung"], ["Yik Hui", "Leow"], ["Lindsey", "Puchyr"], ["Ana Milena", "Ramirez"], ["Michaela", "Bjornstrom"], ["Erika", "Reggiane"], ["Charise", "Godoy"], ["Caroline", "Raba"], ["Elena", "Mitrofanova"], ["Eveline", "Vanhyfte"], ["Monika", "Peciulionyte"], ["Nelly", "Maillard"], ["Caroline", "Skrzypczyk"], ["Giorgia", "Mortello"], ["Mariana", "Junqueira"], ["Nikkita", "Fountain"], ["Veronica", "Grigis"], ["Bintou", "Barry"], ["Maretha", "Van Niekerk"], ["Mayu", "Araki"], ["Laura", "Vignoni"], ["Mariana Pires", "Junqueira"], ["Christina", "Obermoser"], ["Magdalena", "Von Geyr"], ["Marianna", "Keranen"], ["Angela", "Piedrahita"], ["Samantha", "Stosur"], ["Kim", "Rudman"], ["Marion", "Leuillier"], ["Jean", "Willmann"], ["Yuka", "Matsumoto"], ["Melanie", "Roy"], ["Rowena", "Baierl"], ["Ema", "Janaskova"], ["Dorian", "Driessen"], ["Bo", "Verhulsdonk"], ["Pascale", "Leroy"], ["Yael", "Glitzenstein"], ["Alexandra", "Zerkalova"], ["Nisrine", "Hajbane"], ["Diana Nur", "Fatimah"], ["Darija", "Jurak"], ["Vanessa", "Valdivia"], ["Caroline", "Hartmann"], ["Michaela", "Beck"], ["Aleksandra", "Kostikova"], ["Tatiana", "Tamburini"], ["Hazar", "Sidki"], ["Miki", "Mori"], ["Haruka", "Fujishiro"], ["Jorgelina", "Barrera"], ["Samrita", "Sekar"], ["Elena", "Silina"], ["Cristina", "Cabello Gonzalez"], ["Seble", "Woldegebriel"], ["Mamatha", "Nandakumar"], ["Monika", "Krauze"], ["Lauren", "Cheung"], ["Kyung Mi", "Noh"], ["Ashlesha", "Lokhande"], ["Shilpa", "Joshi"], ["Emelie", "Reutersward"], ["Dominika", "Nociarova"], ["Alexandra", "Zadoryn"], ["Sue", "Rossano"], ["Sheenagh", "Cosgrove"], ["Volha", "Dubovik"], ["Ragini", "Vimal"], ["Zarah", "De Silva"], ["Yoo Mi", "Jung"], ["Wilawan", "Choptang"], ["Sunna Kristina", "Barthel"], ["Maria", "Perez Garcia"], ["Nuria", "Roig Tost"], ["Emilie", "Bacquet"], ["Celina", "Grondin"], ["Miho", "Tanaka"], ["Katy", "Sauboi"], ["Frederique", "Desire"], ["Katherine", "Rammo"], ["Andrea", "Riedlmajerova"], ["Zuzana", "Palovic"], ["Nino", "Esebua"], ["Mojca", "Mileta"], ["Inga", "Prodinger"], ["Daniela", "Lopez"], ["Julie", "Merle"], ["Lina", "Krasnoroutskaya"], ["Virginia", "Tomatis"], ["Giorgia", "Mondani"], ["Christelle", "Gerin"], ["Nelly", "Iglesias Vazquez"], ["Joanna", "Sakowicz Kostecka"], ["Casey", "Cross"], ["Mireia", "Gol Alamo"], ["Davinia", "Lobbinger"], ["Marketa", "Pastikova"], ["Aspasia", "Sotiriadou"], ["Martina", "Matouskova"], ["Ryo", "Takahashi"], ["Nasheli", "Martinez"], ["Sanja", "Todorovic"], ["Pornrampha", "Pramualsuk"], ["Bianca", "Acquistapace"], ["Desire", "Roset Torres"], ["Mariana", "Melo"], ["Miriam", "Sommer"], ["Daniela", "Casanova"], ["Natasa", "Sijakovic"], ["Sofia", "Haggstrom"], ["Dominique", "Van Boekel"], ["Bojana", "Minic"], ["Paula", "Fondevila Castro"], ["Estefania", "Aldana Estremera"], ["Gaia", "Tanganelli"], ["Sayuri", "Takeshima"], ["Judit", "Llorens"], ["Irina", "Bulykina"], ["Nicoleta", "Ratiu"], ["Julie", "Smekodub"], ["Douglas", "Wink"], ["Kana", "Okawa"], ["Luisa", "Obando"], ["Sabrina", "Echavarria"], ["Kelly", "Taylor"], ["Katharina", "Alberti"], ["Natalia", "Bogdanova"], ["Rebecca", "Dandeniya"], ["Meryem", "Lahlou"], ["Mia", "Kurek"], ["Eleftheria", "Makromaridou"], ["Bruna", "Gelbecke"], ["Raquel", "Martins"], ["Joneca", "Meurling"], ["Barbora", "Strnadova"], ["Karishma", "Mulay"], ["Chen", "Li"], ["Priyanka", "Mehta"], ["Caroline", "Korsawe"], ["Rebecca", "Fong"], ["Bettina", "Cremasco"], ["Carine", "Vermeulen"], ["Shereen", "Youssef"], ["Aibika", "Kalsarieva"], ["Amani", "Khalifa"], ["Katharina", "Jacob"], ["Lucia", "Henkle Gomez"], ["Melissa", "Applebaum"], ["Claudia", "Corral"], ["Iveta", "Gerlova"], ["Anca", "Anastasiu"], ["Carmela", "Carro"], ["Eva", "Hrdinova"], ["Tereza", "Veverkova"], ["Sarah", "Tami Masi"], ["Katherina", "Trumpf"], ["Laura", "Ganzer"], ["Sae Mi", "Lim"], ["Elizaveta", "Avdeeva"], ["Ani", "Nazari"], ["Sarah", "Wright"], ["Kirsty", "Mcrae"], ["Maria Pilar", "Sanchez Alayeto"], ["Maria Jose", "Sanchez Alayeto"], ["Jessica", "Stein"], ["Fernanda", "Luiz"], ["Abiodun", "Bamigbade"], ["Constanze", "Steiner"], ["Akgul", "Amanmuradova"], ["Mariapia", "Quagliozzi"], ["Iulia", "Dogarescu"], ["Maria", "Penkova"], ["Thelara", "Louw"], ["Angelina", "Minova"], ["Aurelie", "Bejar"], ["Kristen", "Schlukebir"], ["Sharon", "Marin"], ["Natsumi", "Hamamura"], ["Elena", "Baranova"], ["Petra", "Dizdar"], ["Vanessa", "Ridolfo"], ["Elisabeth", "Bahn"], ["Nelly", "Dvornicka"], ["Julie Ann", "Cadiente"], ["Daniela", "Kocetkova"], ["Carolina", "Pimenta"], ["Yulia", "Fitri"], ["Elena", "Uzunova"], ["Sayaka", "Yoshimoto"], ["Lizanne", "Marais"], ["Amber", "Liu"], ["Shenay", "Perry"], ["Eva", "Wang"], ["Claudia", "Calderon"], ["Anna", "Hawkins"], ["Daniela", "Bercek"], ["Jeong Eun", "Park"], ["Uschi", "Van Doren"], ["Lucy", "Brooks"], ["Michelle", "Gerards"], ["Piia", "Suomalainen"], ["Georgette", "Wright"], ["Milana", "Borisev"], ["Marjorie", "Sindal"], ["Marina", "Tishkova"], ["Hayley", "Rudman"], ["Elin", "Stahl Johansson"], ["Mai", "Fujii"], ["Lenka", "Dlhopolcova"], ["Emily", "Webley Smith"], ["Julia", "Babilon"], ["Dominika", "Dieskova"], ["Sophie Anne", "Cerbon"], ["Khushleen", "Bains"], ["Alexandra", "Mikhailova"], ["Maria Jose", "Argeri"], ["Tomoyo", "Takagishi"], ["Gabrielle", "Baker"], ["Danielle", "Wiggins"], ["Patrizia", "Cacciaguerra"], ["Noriko", "Saruta"], ["Irina", "Smirnova"], ["Azusa", "Konishi"], ["Diana", "Srebrovic"], ["Ajda", "Brumen"], ["Nadzeya", "Lysak"], ["Sylwia", "Ziolkowska"], ["Nina", "Suvak"], ["Saray", "Pino Vega"], ["Karolina", "Nowak"], ["Gabriela", "Amezaga"], ["Reina", "Ishihara"], ["Essi", "Laine"], ["Viola", "Wacker"], ["Aleksandra", "Cekic"], ["Ana", "Vrljic"], ["Servane", "Delobelle"], ["Asli", "Turksoy"], ["Jana", "Deylova"], ["Tanner", "Cochran"], ["Rocio", "Amadio"], ["Miranda", "Foley"], ["Sandra", "Spadzinski"], ["Verena", "Beller"], ["Danielle", "Steinberg"], ["Eva Maria", "Hoch"], ["Nathalie", "Garcia Jaminet"], ["Samantha", "Hammond"], ["Azzurra", "Fonsmorti"], ["Tamara", "Day"], ["Hitomi", "Fujii"], ["Tania", "Aguirre"], ["Alona", "Bondarenko"], ["Eva", "Birnerova"], ["Nicola", "Slater"], ["Shayma Seif", "El Sisi"], ["Pamela", "Fogel"], ["Dorottya", "Magas"], ["Kelly", "Mcnabney"], ["Lara", "Del Saz"], ["Valentina", "Sulpizio"], ["Lara", "Del Saz De Soto"], ["Omolola", "Oredugba"], ["Zsofia", "Szabo"], ["Danielle", "Downey"], ["Mihaela", "Sicoe"], ["Katja", "Blocker"], ["Ling", "Yan"], ["Montserrat", "Ferrer"], ["Cristina", "Mecho Ruiz"], ["Anna", "Lubinsky"], ["Lilly", "Cal Fong"], ["Petra", "Bajerovska"], ["Pavlina", "Ticha"], ["Dina", "Naffa"], ["Svetlana", "Kouzmenko"], ["Elena", "Besedova"], ["Meghha", "Vakaria"], ["Helena", "Besovic"], ["Patricia", "Holzman"], ["Chullaluck", "Phocharoen"], ["Farida", "Agustina"], ["Purnima", "Shakaalya"], ["Tetiana", "Luzhanska"], ["Zuzana", "Zemenova"], ["Vera", "Zvonareva"], ["Ji Young", "Lee"], ["Mariana", "Conde"], ["Natasa", "Krklec Jerinkic"], ["Iza", "Ferreira"], ["Stephanie", "Greau"], ["Angela", "Ahtemenciuc"], ["Laura", "Harkness"], ["Muattar", "Abdukhalikova"], ["Georgia", "Gonzalez Massot"], ["Yuko", "Uchida"], ["Hilda", "Zuleta Cabrera"], ["Christian", "Thompson"], ["Catrina", "Thompson"], ["Mariona", "Nadal Ribelles"], ["Rebecca", "Cooper"], ["Arianne", "Gajasan"], ["Nathalie", "Wallin"], ["Annabel", "Youthed"], ["Sakiko", "Shimizu"], ["Iyabo", "Ogunwole"], ["Anna", "Korotkova"], ["Megan", "Schmulbach"], ["Saori", "Kaneko"], ["Minori", "Takemoto"], ["Anne Sophie", "Vidal"], ["Dan Feng", "Liu"], ["Kazusa", "Ito"], ["Klaudia", "Jans Ignacik"], ["Noha", "Mohsen"], ["Mai Huynh", "Huynh"], ["Alexa", "Geldenhuys"], ["Anna Lee", "Bryant"], ["Irina", "Lykina"], ["Ornela", "Basaric"], ["Caroline", "Hammond"], ["Angela", "Haynes"], ["Alexis", "Prousis"], ["Sabita", "Maharaj"], ["Analia", "Hermida"], ["Monika", "Goel"], ["Al", "Sasaki"], ["Laura", "Pous Tio"], ["Maria", "Jedlickova"], ["Clemence", "Castel"], ["Marion", "Bartoli"], ["Marina", "Bernshtein"], ["Jelena", "Bukulin"], ["Iryna", "Bremond"], ["Shu Jing", "Yang"], ["Lucia", "Sainz Pelegri"], ["Monique", "Viele"], ["Milene", "Souza"], ["Alyssa", "Rodriguez"], ["Christa", "Magister"], ["Mija", "Kresic"], ["Maria Jose", "Lopez Herrera"], ["Denisa", "Pavlikova"], ["Katrina", "Bandere"], ["Pamela", "Fernandez"], ["Daisy", "Ames"], ["Pilar", "Escandell Planells"], ["Dragica", "Lozina"], ["Tiana", "Lum Tucker"], ["Jie", "Hao"], ["Preeti", "Rao"], ["Jana", "Simurkova"], ["Medhini", "Sharma"], ["Stephanie", "Krappl"], ["Noopur", "Desai"], ["Yee", "Wong"], ["Elizabeth", "Thomas"], ["Patricia", "Chang"], ["Michala", "Bzdusekova"], ["Kristina", "Bezakova"], ["Paola", "Dominguez"], ["Kokoro", "Takehara"], ["Meriem", "Zitouni"], ["Kumi", "Fukui"], ["Kristin", "Messmer"], ["Anna", "Berlin"], ["Karolina", "Sprem"], ["Maika", "Ozaki"], ["Lisa", "Tognetti"], ["Nicola", "Mooney"], ["Sandra", "Denis"], ["Mimi", "Renaudin"], ["Maral Khachik", "Awanes"], ["Agustina", "Arechavaleta"], ["Liliana", "Aguilera"], ["Dominique", "Toliravo"], ["Amanda", "Pratzel"], ["Laura Ramona", "Husaru"], ["Miriam", "Palacios"], ["Ntswaki", "Mawela"], ["Mariana", "Correa"], ["Gurianna", "Korinihona"], ["Leila", "Salek"], ["Jessica", "Iniguez"], ["Rijana", "Puljic"], ["Valisoa", "Rafolomanantsiatosika"], ["Andrea", "Di Leo"], ["Katie", "Robinette"], ["Andrea", "Martinez"], ["Gabriela", "Marcu"], ["Daniela", "Kix"], ["Manami", "Fukada"], ["Megumi", "Sugimura"], ["Zi", "Yan"], ["Estefania", "Vela"], ["Margaretha", "Novianti"], ["Helena", "Sinitshin"], ["Blakeley", "Griffith"], ["Paola", "Gamarra"], ["Jennifer", "Chay"], ["Claudia", "Kuleszka"], ["Marina", "Tavares"], ["Aleksandra", "Rosolska"], ["Laura", "Gordon"], ["Ilona", "Giberte"], ["Scarlett", "Werner"], ["Jenny", "Zika"], ["Sanem", "Irem"], ["Valentina", "Salani"], ["Renee", "Lampret"], ["Luisa", "Barcaui"], ["Kim", "Coventry"], ["Steffi", "Bachofer"], ["Margot", "Carter"], ["Ly Huong", "Dinh"], ["Novianti", "Warsono"], ["Kristin", "Cargill"], ["Maria", "Serra"], ["Ilaria", "Pibiri"], ["Elena", "Luri"], ["Daniela", "Caljkusic"], ["Klaudia", "Wlodarczyk"], ["Vanja", "Mikovic"], ["Maria Paz", "Jimenez Barquero"], ["Karina", "Jarlkaganova"], ["Lucy", "Johnson"], ["Edina", "Gallovits Hall"], ["Norie", "Kojima"], ["Tenille", "Elias"], ["Johann", "Fernandes"], ["Angelique", "Widjaja"], ["Lakschmi", "Van Der Wart"], ["Marcela", "Arroyo Vergara"], ["Kanistha", "Sritawan"], ["Karamontree", "Siriluethaiwattana"], ["Helene", "Stephens"], ["Stefani", "Falconi"], ["Naoko", "Eto"], ["Kesy", "Moison"], ["Galina", "Voskoboeva"], ["Aleta", "Sungkono"], ["Debbrich", "Feys"], ["Azza", "Abbou"], ["Lucia", "Krzelj"], ["Mari", "Inoue"], ["Amy", "Toth"], ["Ana", "Jovanovic"], ["Alexandra", "Mcgoodwin"], ["Maria Angela", "Ferreira"], ["Ivana", "Platenikova"], ["Antonia", "Matic"], ["Anne Linn", "Perez"], ["Nuria", "Hernandez"], ["Shahlio", "Ibadullaeva"], ["Liana Gabriela", "Ungur"], ["Hermione", "Roukassian"], ["Adriana", "Bedoya"], ["Amanda", "Saiontz"], ["Romy", "Farah"], ["Pavlina", "Akritas"], ["Nicole", "Fintell"], ["Adriana", "Szili"], ["Samia", "Medjahdi"], ["Astrid", "Waernes Garcia"], ["Ji Sook", "Kim"], ["Julianna", "Gates"], ["Antoinette", "Mmoh"], ["Phemelo", "Mogapi"], ["Chin Wei", "Chan"], ["Marcela Ivon", "Rodezno Hernandez"], ["Marina", "Chaves Moledo"], ["Gulshah", "Esen"], ["Paola", "Ravano"], ["Magdalena", "Costa"], ["Andreea", "Horobeanu"], ["Eleni", "Karakeke"], ["Malika", "Bouakel"], ["Chia Jung", "Chuang"], ["Eugenia", "Kranioti"], ["Margarita", "Karnaukhova"], ["Robyn", "Baker"], ["Mateja", "Spes"], ["Alessia", "Zinga"], ["Erin", "Heeder"], ["Agnes", "Paischer"], ["Hsiu Ting", "Huang"], ["Nadja", "Kusterer"], ["Jacinta", "Agim"], ["Nivin", "Kezbari"], ["Karly", "Olson"], ["Natalie", "Ko"], ["Ristine", "Olson"], ["Samantha", "Galinier"], ["Tsukasa", "Yamaguchi"], ["Sarah", "Andrews"], ["Elke", "Clijsters"], ["Nora", "Quintal"], ["Alison", "Silverio"], ["Feila", "Mahiddiene"], ["Laetitia", "Allegrini"], ["Ilaria", "Ziche"], ["Stella", "Sondang"], ["Cory Ann", "Avants"], ["Andreea", "Seserman"], ["Magdalena", "Tokarska"], ["Jessica", "Hubbard"], ["Moe", "Tsubuku"], ["Jessica", "Orselli"], ["Marise", "Botha"], ["Roxana", "Abdurakhmonova"], ["Angel", "Saleh"], ["Swetha", "Devaraj"], ["Lianne", "Supperstone"], ["Paula", "Zabala"], ["Victoria", "Zabala"], ["Catalina", "Angeleri"], ["Marcia", "Secondo"], ["Andrea", "Pazmino"], ["Stefanie", "Halder"], ["Gisela", "Dulko"], ["Fatima Zohra", "Benboubker"], ["Ciara", "Finucane"], ["Audrey", "Bergot"], ["Kamini", "Murugaboopathy"], ["Emily", "Mowery"], ["Dianne Kenneth", "Matias"], ["Sladjana", "Kos"], ["Nino", "Szownadze"], ["Nadejda", "Vassileva"], ["Marta", "Fraga Perez"], ["Dan", "Li"], ["Jessie", "Rochefort"], ["Petra", "Cetkovska"], ["Soledad", "Esperon"], ["Veronica", "Del Piano"], ["Nikhila", "Narra"], ["Nadia", "Pope"], ["Natalie", "Luft"], ["Tea", "Popaja"], ["Christyn", "Lucas"], ["Laura", "Fernandez"], ["Casey", "Dellacqua"], ["Leda", "Pesatova"], ["Lizette", "Carrillo Morales"], ["Sevvy", "Gallios"], ["Sabrina", "Piccolo"], ["Kathrin", "Hegel"], ["Chen Chen", "Gao"], ["Cristina", "Celani"], ["Karin", "Zibar"], ["Carla", "Barciela Rodriguez"], ["Isabel", "Barciela Rodriguez"], ["Julia", "Efremova"], ["Suzanne", "Jones"], ["Vicky", "Navia"], ["Joanne", "Akl"], ["Nathalia", "Papadopolou"], ["Kristina", "Geraniou"], ["Milica", "Veselinovic"], ["Karina", "Grigorian"], ["Jessica", "Obi"], ["Yuri", "Kurashima"], ["Beatrix", "Csordas"], ["Sanne", "Van Den Biggelaar"], ["Bieke", "Serruys"], ["Gabriela", "Duch"], ["Zsuzsanna", "Babos"], ["Emily", "Applegate"], ["Audrey", "Moronval"], ["Alice", "Covatta"], ["Linda", "Mair"], ["Caroline", "Forstner"], ["Ganna", "Butkevych"], ["Larikah", "Russell"], ["Jelena", "Jankovic"], ["Verena", "Amesbauer"], ["Natalia", "Cretu"], ["Vanessa", "Guerrero"], ["Shaniek", "Pinder"], ["Su Jin", "Kim"], ["Christine", "Simpson"], ["Natalie", "Castro"], ["Juanas", "Miras Navarro"], ["Matea", "Mezak"], ["Olga", "Pasichnichenko"], ["Elena", "Volobueva"], ["Giovanna", "Di Lauro"], ["Ariana", "Marshall"], ["Sarah", "Pang"], ["Lucie", "Kriegsmannova"], ["Janja", "Gersic"], ["Aine", "Leonard"], ["Sabrina", "Lopes"], ["Larissa", "Carvalho"], ["Theresa", "Logar"], ["Jin A", "Lee"], ["Megan", "Moulton Levy"], ["Zeynep Melis", "Altinay"], ["Isioma", "Usoegbu"], ["Hannah", "Kuervers"], ["Miria", "Bartels"], ["Sun Jung", "Kim"], ["Klara", "Jagosova"], ["Hitomi", "Sugata"], ["Federica", "Quercia"], ["Anna", "Vitosinskaya"], ["Cristina", "Condon"], ["Joana", "Laranjinha"], ["Sadvika", "Saboo"], ["Laura", "Heckler"], ["Carla", "Genovese"], ["Monika", "Kolbovic"], ["Eri", "Mikami"], ["Amanda", "Fish"], ["Klaudia", "Halasz"], ["Simone", "Wienbeck"], ["Martine", "Belle"], ["Erica", "Tironi"], ["Ahsha", "Rolle"], ["Claire", "Ricketts"], ["Maia", "Ram"], ["Sanda", "Mamic"], ["Natalie", "Frazier"], ["Bethanie", "Mattek Sands"], ["Sandra", "Gwiggner"], ["Lata", "Assudani"], ["Andreea", "Novaceanu"], ["Chloe", "Gambey"], ["Martine", "Castonguay"], ["Ivana", "Jovanovic"], ["Micaela", "Moran"], ["Eva", "Valkova"], ["Ene", "Ogbu"], ["Udanthi", "Narahenpitage"], ["Marielle", "Wallin"], ["Claudia", "Kardys"], ["Elisabetta", "Gianella"], ["Cinthia", "Saucedo"], ["Tsippy", "Waterman"], ["Olivia", "Salgi"], ["Maria", "Castanera Rodriguez"], ["Rachael", "Porsz"], ["Thuy Dan", "Nguyen"], ["Gabriela", "Velasco Andreu"], ["Henrietta", "Ogude"], ["Eun Jeong", "Hwang"], ["Juana", "Miras Navarro"], ["Lisa", "Fung Kee Fung"], ["Kai Feng", "Yi"], ["Covadonga", "Garcia Calvo"], ["Olga", "Carrasco"], ["Ana", "Abad"], ["Valentina", "Tizzano"], ["Carolina", "Olmo"], ["Hermine", "Sukiasyan"], ["Helen", "Fritche"], ["Temitope", "Bamidele"], ["Tiffany", "Welford"], ["Breda", "Kovac"], ["Vivien", "Sepuka"], ["Eva", "De Block"], ["Anais", "Laurendon"], ["Sandra", "Sasidharan"], ["Ekaterina", "Burduli"], ["Anabela", "Plasencia"], ["Mariana", "Cutuk"], ["Tamara", "Tanner"], ["Jelena", "Djordjevic"], ["Kelly", "Anderson"], ["Brittany", "Brown"], ["Sigurlaug", "Sigurdardottir"], ["Kveta", "Hajkova"], ["Tereza", "Kotasova"], ["Brooke", "Rogers"], ["Kristina", "Kormuthova"], ["Chiara", "Gatto"], ["Chen", "Shen"], ["Iva", "Plachkova"], ["Andrea", "Koch Benvenuto"], ["Katerina", "Teplizki"], ["Nivedita", "Venkatesh"], ["Mathilde", "Johansson"], ["Isha", "Lakhani"], ["Joanne", "Mayne"], ["Yenisleydis", "Calana Rodriguez"], ["Montinee", "Tangphong"], ["Veronika", "Litvinskaya"], ["Villa", "Daniella"], ["Audrey", "Banada"], ["Gabriela", "Ziliotto"], ["Ashley", "Harkleroad"], ["Zineb", "Ibnmajdoub"], ["Nina", "Spaeth"], ["Gemma", "Olle Poma"], ["Sayaka", "Umeda"], ["Bonnie", "Baird"], ["Serena", "Bergomi"], ["Maja", "Sundac"], ["Mhari", "Neish"], ["Xi", "Jin"], ["Mai", "Hatanaka"], ["Anna", "Blagodarova"], ["Laura", "Mcgaffigan"], ["Milena", "Kachar"], ["Johanna", "Dahlback"], ["Anastasia", "Shevchenko"], ["Darya", "Ivanov"], ["Annabella", "Weigert"], ["Elsa", "Trigueros Sanchez"], ["Khanita", "Sritawan"], ["Madina", "Rakhim"], ["Kristyna", "Horakova"], ["Amanda", "Hellberg"], ["Gabriella", "Rowe"], ["Olivia", "Beltrame"], ["Fleur", "Van Haasteren"], ["Czarina Mae", "Arevalo"], ["Smaranda", "Stan"], ["Maria Jose", "Sastre Comas"], ["Maria", "Zivcicova"], ["Karen", "Rombouts"], ["Ummarahmat", "Hummetova"], ["Anuradha", "Gurung"], ["Antonia", "Aposteanu"], ["Caitlin", "Collins"], ["Weronika", "Bloczynska"], ["Dominika", "Wojtal"], ["Alicia", "Serrano"], ["Krishna", "Logeswari"], ["Anna", "Tyshing"], ["Nika", "Ozegovic"], ["Lucie", "Hradecka"], ["Egle", "Petrauskaite"], ["Jasmina", "Hamzic"], ["Krushmi", "Chheda"], ["Ashlee", "Davis"], ["Maria Belen", "Corbalan"], ["Anica", "Wuensche"], ["Mariya", "Koryttseva"], ["Nadege", "Vergos"], ["Andra", "Stanculescu"], ["Gal Li", "Kaplan"], ["Sasha", "Abraham"], ["Vittoria", "Maglio"], ["Eleonora", "Punzo"], ["Danielle", "Brown"], ["Maria Clara", "Fernandez Bruera"], ["Kristina", "Michalakova"], ["Sandra", "Beltran"], ["Natalia", "Pervitskaya"], ["Hayley", "St Leger"], ["Natalie", "Dean"], ["Romy", "Lion"], ["Agni", "Patsourakou"], ["Andreea", "Nitescu"], ["Katarina", "Kachlikova"], ["Maria", "Arkhipova"], ["Ljubica", "Avramovic"], ["Elli", "Kokoliou"], ["Maria Jesus", "Sol Hernandez"], ["Yuka", "Hosoya"], ["Isabel", "Jarosz"], ["Anna Lena", "Groenefeld"], ["Katerina", "Kocibova"], ["Luz Maria", "Lafranconi"], ["Ekaterina", "Bychkova"], ["Tanja", "Markovic"], ["Tina", "Jacob"], ["Natasha", "Kersten"], ["Damilola", "Olufeko"], ["Anca", "Vladean"], ["Sunthree", "Arphanukul"], ["Marina", "Pantovic"], ["Kaia", "Kanepi"], ["Iris", "Ichim"], ["Carolina", "Franco"], ["Patricia", "Huelin Alvarez"], ["Linsey", "Jacks"], ["Tarryn", "Rudman"], ["Patricia", "Manzur"], ["Blanca", "Martinez Perez"], ["Kartika", "Halim"], ["Tereza", "Svicova"], ["Naia", "Lartategui Uriarte"], ["Latavra", "Andriashvili"], ["Nina", "Knavs"], ["Tory", "Zawacki"], ["Devina", "Saedi"], ["Virag", "Nemeth"], ["Anna", "Spivakovski"], ["Cintha Karrie Shanaz", "Putri"], ["Zuzanna", "Grochocka"], ["Myriam", "Casanova"], ["Linda", "Agazzi"], ["Sara", "Anundsen"], ["Graciela", "Ailloud"], ["Martina", "Sedivec"], ["Atsumi", "Koga"], ["Monica", "Hoz De Vila"], ["Zobaida", "Mottola"], ["Tania", "Martinez Jimenez"], ["Avel Romaly", "Coronado"], ["Karen", "Saravia"], ["Svetlana", "Kuznetsova"], ["Nina", "Bratchikova"], ["Bettina", "Gabbe"], ["Preethi", "Mukundan"], ["Elena", "Gantcheva"], ["Sylvia", "Montero"], ["Julia", "Gandia Gomez"], ["Eleonora", "Fornai"], ["Marutha", "Devi"], ["Cayetana", "Barbed Isusi"], ["Annita", "Stylianidou"], ["Anna", "Anoufrieva"], ["Nancy", "Rustignoli"], ["Anna", "Powaska"], ["Alexandra", "Hirsch"], ["Bianca", "Dulgheru"], ["Malin", "Grimshorn"], ["Amal", "Basha"], ["Meryem", "Tazi"], ["Nai Yu", "Wang"], ["Sveta", "Kaladzko"], ["Simona Iulia", "Matei"], ["Alicia", "Espinoza"], ["Hanne", "Camassa"], ["Xenia", "Roman"], ["Guadalupe", "Ubeda"], ["Oksana", "Uzhylovska"], ["Claudia", "Strauss"], ["Shadisha", "Robinson"], ["Yasmin", "Ulrich"], ["Federica", "Balzani"], ["Jelena", "Jovic"], ["Guadalupe", "Padilla"], ["Hsiao Wen", "Chao"], ["Caroline", "Haider"], ["Kanaka", "Tsujimura"], ["Valeria", "Galouza"], ["Lubica", "Nadasska"], ["Melissa", "Dakkak"], ["Sarah", "Gray"], ["Megan", "Falcon"], ["Emma", "Tomlinson"], ["Liz", "Cruz"], ["Miriam", "Cruz"], ["Alejandra", "Ripoll"], ["Julia", "Roach"], ["Anita", "Jordan"], ["Patricia", "Miro"], ["Tatsiana", "Uvarova"], ["Nana", "Tsuchiya"], ["Virginie", "Cappoen"], ["Petra", "Teller"], ["Patricia", "Miro Bussman"], ["Yuri", "Nagano"], ["Lucia", "Gonzalez"], ["Dian", "Anggraini"], ["Olga", "Boulytcheva"], ["Alexis", "Panton"], ["Ana", "Kovacevic"], ["Martina", "Alabiso"], ["Ilham", "Nadir"], ["Maria Joao", "Antunes"], ["Marcela", "Montanha"], ["Yukiko", "Nakanishi"], ["Fernanda", "Caputi"], ["Cassy", "Fabiani"], ["Shiho", "Tanaka"], ["Julia Maria", "Arguello"], ["Viktoria", "Konstantinova"], ["Marieke", "De Jong"], ["Houda", "Yasri"], ["Nathalia", "Rodrigues"], ["Carla", "Zabaleta"], ["Linda", "Smolenakova"], ["Hala", "Sufi"], ["Steffi", "Van Elten"], ["Julia", "Matojan"], ["Whitney", "Benik"], ["Carmel", "Meachen"], ["Zuzana", "Valicekova"], ["Fabienne", "Clavel"], ["Silvia", "Genisova"], ["Priyanka", "Parekh"], ["Elizabeth", "Walker"], ["Marina", "Khomenko"], ["Emilie", "Trouche"], ["Marija", "Miladinovic"], ["Aleksandra", "Jecmenica"], ["Emily", "Kwok"], ["Emma", "Zuleta"], ["Simona", "Patti"], ["Mandy", "Septoe"], ["Milena", "Chisaca"], ["Philippa", "Taul"], ["Asami", "Satozaki"], ["Paola", "Gamboa"], ["Anne", "Yelsey"], ["Elodie", "Navarro"], ["Sonali", "Sanap"], ["Olena", "Tsutskova"], ["Ting Wen", "Wang"], ["Julia", "Gandia"], ["Alexandra", "Podkolzina"], ["Diana", "Arutyunova"], ["Chirashanthi", "Rajur"], ["Cassi", "Fabiani"], ["Hedvig", "Lofdahl"], ["Emi", "Hirayama"], ["Matilde", "Munoz Gonzalves"], ["Samia", "Jalali"], ["Elena", "Ryabtseva"], ["Jin Jie", "Gong"], ["Veera", "Nurmi"], ["Julie", "Fratoni"], ["Marianna", "Yuferova"], ["Ebere", "Fortune"], ["Kumiko", "Anzai"], ["Agata", "Komorowska"], ["Marianne", "Baker"], ["Alexandra Alina", "Petcu"], ["Yuka", "Kuroda"], ["Nikoleta", "Kipritidou"], ["Julia", "Wieckowski"], ["Larisa", "Gorodetsky"], ["Natsumi", "Tsubo"], ["Lucie", "Telinova"], ["Oxana", "Lyubtsova"], ["Nadja", "Pavic"], ["Elena", "Stoianova"], ["Jennifer", "De Bodt"], ["Pallavi", "Sharma"], ["Alice", "Botto"], ["Ji Young", "Kim"], ["Marnie", "Mahler"], ["Anastasia", "Michail"], ["Anastasia", "Belova"], ["Pascale", "Schnitzer"], ["Aneta", "Turaj"], ["Siobhan", "Oneill"], ["Chelsea", "Orr"], ["Sirma Aysen", "Bingeli"], ["Sheryl", "Gershon"], ["Victoria", "Sharpley"], ["Stacia", "Fonseca"], ["Kelley", "Hyndman"], ["Viviana", "Yrureta"], ["Carina", "Bjornstrom"], ["Kristin", "Schuler"], ["Katharina", "Rath"], ["Deepanwita", "Chakrabarty"], ["Jae Hee", "Lyoo"], ["Miriam", "Rahali"], ["Christy", "Greenly"], ["Ria", "Sabay"], ["Tajna", "Lukas"], ["Yoshimi", "Tanaka"], ["Lourdes", "Pascual Rodriguez"], ["Alessandra", "Carta"], ["Kristina", "Movsesyan"], ["Reem", "Raouf"], ["Pichaya", "Laosirichon"], ["Maryori", "Franco"], ["Claudia", "Hirt"], ["Florence", "Haring"], ["Michal", "Amir"], ["Vasiliki", "Simouli"], ["Bojana", "Cecez"], ["Diana", "Cardenas Azcarate"], ["Rebecca", "Llewellyn"], ["Haruka", "Tachiki"], ["Miglana", "Nenova"], ["Asami", "Saeki"], ["Andrea", "Ryan"], ["Laura", "Moares"], ["Maria", "Rakhmanina"], ["Bianca", "Itner"], ["Sandra", "Zahlavova"], ["Marina", "Aniutin"], ["Courtney", "Vernon"], ["Tanya", "Sharma"], ["Natalia", "Gordeeva"], ["Dayane", "Silva"], ["Daiany", "Luchi"], ["Katie", "Muller"], ["Christina", "Birtchnell"], ["Flavia", "Mignola"], ["Kuburat", "Akintunde"], ["Laura", "Quintanilla Vidal"], ["Yasemin", "Elgi"], ["Jovana", "Jakouliev"], ["Irina", "Smislova"], ["Ana", "Higer"], ["Anna", "Karavayeva"], ["Iciri", "Rai"], ["Moe", "Kawatoko"], ["Aiko", "Yamada"], ["Sunitha", "Rao"], ["Sandra", "Volk"], ["Julia", "Paetow"], ["Yuka", "Izumi"], ["Zorayma", "Arreola"], ["Rosanne", "Dimech"], ["Anna", "Jaen Seire"], ["Michaela", "Michalkova"], ["Gisel", "Brito"], ["Betty", "Tesfu"], ["Jennifer", "Seide"], ["Ekaterina", "Koubinina"], ["Cecile", "Baijot"], ["Alana", "Van Der Vort"], ["Joyce", "Ardies"], ["Ekaterina", "Hirtopanu"], ["Maja", "Mesanovic"], ["Liu Ling", "Wang"], ["Natalie", "Beck"], ["Caroline", "Martin"], ["Saffet Seden", "Soyalp"], ["Miki", "Miyamura"], ["Frances", "Hendry"], ["Asami", "Suzuki"], ["Tinesta", "Rowe"], ["Kristina", "Solodovnikova"], ["Vonjiniana", "Rasamuel"], ["Laura", "Rocchi"], ["Cornelia", "Lassonczyk"], ["Birgit", "Ritschka"], ["Martina", "Stigliano"], ["Ana Carolina", "Pancia"], ["Danielle", "Kypreos"], ["Tega", "Richard"], ["Joanne", "Schickerling"], ["Anna", "Bastrikova"], ["Darina", "Berkova"], ["Renee", "Mullinger"], ["Kyung Mi", "Park"], ["Rawya", "Seif"], ["Lindsey", "Nelson"], ["Maya", "Wakui"], ["Lena", "Keothavong"], ["Neda", "Kozic"], ["Nosrat", "Zeidan"], ["Karin", "Hamanaka"], ["Mandy", "Minella"], ["Pauline", "Wong"], ["Nicole", "Leimbach"], ["Zuzana", "Zalabska"], ["Antonia", "Nugent"], ["Vanessa", "Esteves"], ["Jenna", "Long"], ["Maria Sol", "Rotondo"], ["Daron", "Moore"], ["Cassandra", "Chan"], ["Hristiana", "Gocheva"], ["Krystel", "Sauvageau"], ["Jelena", "Zivanovic"], ["Alicja", "Rosolska"], ["Beatriz", "Belda Mullor"], ["Krizia", "Borgarello"], ["Alesa", "Bagola"], ["Miina", "Luebbe"], ["Adriana", "Solarova"], ["Nian Ze", "Liu"], ["Svenja", "Haymann"], ["Darina", "Sedenkova"], ["Jessica", "Lopez Lopez"], ["Si Nga", "Lee"], ["Larissa", "Deschamps"], ["Aya", "Oasa"], ["Katy", "Shaw"], ["Anja", "Prislan"], ["Sarah", "Wray"], ["Monica", "Wiesener"], ["Rebecca", "Spinello"], ["Lara", "Garcia"], ["Lucia", "Jimenez Almendros"], ["Brianna", "Williams"], ["Renata", "Ljukovcan"], ["Lucia", "Garcia"], ["Gala", "Gasset Pinon"], ["Jharna", "Nansi"], ["Yuka", "Inoue"], ["Iva", "Roj"], ["Katie", "Taylor"], ["Martina", "Bartosova"], ["Renata", "Veiga"], ["Kristi", "Miller"], ["Ana", "Corbett"], ["Doo Ri", "Na"], ["Olakunbi", "Abass"], ["Whitney", "Robards"], ["Marion", "Gaud"], ["Katarina", "Panakova"], ["Magdalena", "Maranda"], ["Brook", "Connelly"], ["Marcela", "Vanegas Bello"], ["Valerie", "Chin"], ["Lindsey", "Pereira"], ["Karen", "Kozangian"], ["Chiara", "Marraghini"], ["Elena", "Marraghini"], ["Salome", "Devidze"], ["Andrea", "Vargas"], ["Ruya", "Inalpulat"], ["Madelaine", "Madelaire"], ["Carolina", "Seixas"], ["Su Wei", "Hsieh"], ["Anna Maria", "Miller"], ["Ronak", "Shah"], ["Barbara", "Costa"], ["Dima", "Al Saadi"], ["Sarah", "Schulze"], ["Amanda Marie", "Taylor"], ["Romina", "Manas Rodriguez"], ["Shuai", "Peng"], ["Martina", "Bregola"], ["Kirsten", "Flipkens"], ["Jovana", "Stankovic"], ["Diana", "Salas"], ["Virginia", "Bigliardi"], ["Marina", "Viliamovskaia"], ["Sonya", "Kumar"], ["Darya", "Kryvets"], ["Daniela", "Bracaglia"], ["Sabrina", "Capannolo"], ["Eleonora", "Taddei"], ["Nina", "Maglatyuk"], ["Carolina", "Salge"], ["Renata", "De Sanctis"], ["Jae Hee", "Joung"], ["Daria", "Chemarda"], ["Stefanie", "Leushuis"], ["Maria", "Bordons Ortiz"], ["Linda", "Svarena"], ["Marta", "Domachowska"], ["Irina", "Kuzmina"], ["Ana Lilia", "Salas"], ["Lisa", "Nystrom Skold"], ["Almira", "Hallyeva"], ["Sarah", "Raab"], ["Rie", "Imai"], ["Karla", "Portillo"], ["Yue", "Yu"], ["Astrid", "Tixier"], ["Varinia", "Soler Bravo"], ["Holly", "Bagshaw"], ["Anzhelika", "Balyuk"], ["Whitney", "Deason"], ["Luci", "Barlow"], ["Danielle", "Harmsen"], ["Arantxa", "Garcia Millan"], ["Olga", "Brozda"], ["Fatimah", "Abinu"], ["Mar", "Gonzalez Perez"], ["Shu Hwei", "Huang"], ["Kristel Ann", "Samala"], ["Melissa", "Gibb"], ["Nina", "Jauch"], ["Dubravka", "Cupac"], ["Elizabeth", "Dolan"], ["Ana", "Brandusan"], ["Claire", "Carnez"], ["Yang Guang", "Zhao"], ["Alejandra", "Obregon"], ["Amanda", "Jasso"], ["Marina", "Garcia Vertiz"], ["Pauline", "Parmentier"], ["Kaori", "Onishi"], ["Soo Mi", "Yoo"], ["Luciana", "Sarmenti"], ["Angelita", "Detudamo"], ["Yadira", "Geara"], ["Ana", "Abramovic"], ["Olexandra", "Verkhniatska"], ["Da Jung", "Hong"], ["Lara", "Giltinan"], ["Nicole", "Shabaz"], ["Ariela", "Perez"], ["Ivanna", "Israilova"], ["Macall", "Harkins"], ["Neha", "Uberoi"], ["Vasilisa", "Davydova"], ["Leila", "Hodzic"], ["Giada", "Calabretta"], ["Estefania", "Salvador Martinez"], ["Lina", "Stanciute"], ["Celine", "Beermann"], ["Paula", "Arevalo"], ["Laura", "Popescu"], ["Sabina", "Korsunova"], ["Vera", "Leontieva"], ["Chen Yee", "Liaw"], ["Riza", "Zalameda"], ["Bianca", "Chidrawi"], ["Pernille", "Orloff Sattari"], ["Eden", "Marama"], ["Charlene", "Tsangamwe"], ["Michaela", "Carvanova"], ["Chun Mei", "Ji"], ["Emilia", "Yorio"], ["Joanie", "Macken"], ["Alexandra", "Orasanu"], ["Laura", "Bredniak"], ["Hagar", "Caro"], ["Veronica", "Saucedo"], ["Anita", "Ivancevic"], ["Georgina", "Hingley"], ["Fernanda", "Vargas"], ["Linda", "Blank"], ["Ghadihela", "Flores"], ["Caroline", "Lagedamont"], ["Katarzyna", "Siwosz"], ["Sarah", "Benad"], ["Tamar", "Akhobadze"], ["Kelly", "De Beer"], ["Lizaan", "Du Plessis"], ["Elsa", "Serrano Eduards"], ["Alba", "Esteve Blanch"], ["Maria Antonia", "Vives Barquiel"], ["Sarah", "Coles"], ["Claire", "Feuerstein"], ["Melanie", "Oosterhof"], ["Margaryta", "Dolzhenko"], ["Dragana", "Jakovljevic"], ["Julia", "Dziedzic"], ["Ludivine", "Choisel"], ["Bracha", "Weisman"], ["Virginie", "Ayassamy"], ["Dominika", "Zuzulova"], ["Harpreet", "Gill"], ["Marta", "Brandani"], ["Katherine", "Laporta"], ["Beatriz", "Fernandez"], ["Zora", "Mark"], ["Katrin", "Glatz"], ["Natalia", "Yakimovich"], ["Maria Ignacia", "Gioria"], ["Lei", "Huang"], ["Alexandria", "Liles"], ["Helene", "Lindstrand"], ["Roxana", "Dragan"], ["Pynar", "Nergiz"], ["Imke", "Reimers"], ["Andreja", "Klepac"], ["Ayumi", "Oka"], ["Sabrina", "Wist"], ["Katharine", "Baker"], ["Michal", "Bar"], ["Annette", "Pohjalainen"], ["Yasmin", "Del Arco"], ["Delia", "Sescioreanu"], ["Nisha", "Nair"], ["Kady", "Pooler"], ["So Jung", "Kim"], ["Megan", "Sandwith"], ["Sophie", "Ferguson"], ["Sylwia", "Niedbalo"], ["Jolanta", "Twarowska"], ["Tarryn", "Terblanche"], ["Anna", "Niemiec"], ["Anne Marie", "Brodeur Fontaine"], ["Paola", "Iovino"], ["Sarah", "Gbadamosi"], ["Valerie", "Meise"], ["Emma", "Laine"], ["Tara", "Wigan"], ["Laura", "Bastos"], ["Melanie", "Hafner"], ["Erica", "Sauer"], ["Barbora", "Zahlavova Strycova"], ["Chinenye Ndidi", "Izuogu"], ["Romina", "Oprandi"], ["Geraldine", "Roma"], ["Adriana", "Gonzalez Penas"], ["Quan", "Gao"], ["Roxana Ianula", "Dragan"], ["Sandy", "Gumulya"], ["Galina", "Kostova"], ["Chihiro", "Tan"], ["Aya", "El Akkad"], ["Alexandra", "Kazanova"], ["Lolita", "Frangulyan"], ["Clelia", "Melena"], ["Diana", "Vranceanu"], ["Barbara", "Pocza"], ["Camelia", "Todorova"], ["Eleni", "Betsiou"], ["Alexandra", "Korotkevich"], ["Polina", "Zaretser"], ["Ana Cristina", "Moreno"], ["Whitney", "Mccray"], ["Allison", "Baker"], ["Patricia", "Ribeiro"], ["Ela", "Kaludjer"], ["Maria Laura", "Zarza"], ["Pavlina", "Smatova"], ["Varsha", "Meena"], ["Silvana", "Bauer"], ["Elena", "Grazioso"], ["Katrina", "Elder Bush"], ["Varvara", "Galanina"], ["Lucy", "Fletcher"], ["Jennifer", "Migan"], ["Cristina", "Matera"], ["Varvara", "Timofeeva"], ["I Hui", "Chang"], ["Sanne", "Holtkamp"], ["Audra", "Cohen"], ["Tina", "Obrez"], ["Anna Viktoria", "Lind"], ["Beatriz", "Pena Lueza"], ["Jennifer", "Poskitt"], ["Yasuko", "Saruta"], ["Marinne", "Giraud"], ["Christina", "Zgera"], ["Aurelija", "Miseviciute"], ["Stephanie", "De Laet"], ["Rosidah", "Kusuma Dewi"], ["Ann Marie", "Modric"], ["Dinara", "Safina"], ["Timna", "Ticic"], ["Ana Cecilia", "Olivos"], ["Monika", "Musilova"], ["Katarina", "Tuohimaa"], ["Esther", "Van Londen"], ["Hanne Skak", "Jensen"], ["Sofia", "Canarte"], ["Virginia", "Donda"], ["Mariana", "Aconcha"], ["Maria", "Krasnova"], ["Ana Paula", "Saviole"], ["Katie", "Obrien"], ["Melanie", "South"], ["Ekaterina", "Dzehalevich"], ["Julia", "Hodes"], ["Elina", "Sichakova"], ["Malvina", "De La Canal"], ["Eva", "Fernandez Brugues"], ["Andrea", "Davidova"], ["Cigdem", "Duru"], ["Miray", "Eshak"], ["Caroline", "Oduor"], ["Pemra", "Ozgen"], ["Lumay", "Diaz Hernandez"], ["Marion", "Fleury"], ["Meng", "Yuan"], ["Mi", "Yoo"], ["Andrea", "Benitez"], ["Ana Luna", "Gonzalez Munoz"], ["Ginte", "Pociute"], ["Anastasia", "Sourkova"], ["Sofia", "Avakova"], ["Daniela", "Krejsova"], ["Natasa", "Vuckovic"], ["Jitka", "Gavdunova"], ["Vanessa", "Gutierrez"], ["Canna", "Furuta"], ["Nandia", "Tenni"], ["Elena", "Petrucciano"], ["Catalina", "Cruz Gomez"], ["Vanessa", "Heute"], ["Tiffany", "Tucker"], ["Varvara", "Lepchenko"], ["Andrea", "Morgado"], ["Dora", "Kiss"], ["Elizabeth", "Lumpkin"], ["Laura", "Ferreira"], ["Celia", "Durkin"], ["Margot", "Torre"], ["Vendula", "Plechata"], ["Maia", "Semerdjieva"], ["Darya", "Kustova"], ["Natalie", "Solevski"], ["Austin", "Smith"], ["Dora", "Delgadillo"], ["Carolina", "Ardila Cuervo"], ["Masa", "Pozar"], ["Yana", "Zavialova"], ["Andreea Laura", "Niculescu"], ["Anett", "Kaasik"], ["Dragica", "Stanojlovic"], ["Rita", "Esteves De Freitas"], ["Gabriela", "Niculescu"], ["Viktoria", "Lytovchenko"], ["Iginia", "Tilocca"], ["Alessia", "La Monaca"], ["Ping", "Jia"], ["Klara", "Kufova"], ["Liudmyla", "Latysheva"], ["Tina", "Schmassmann"], ["Yuliya", "Kulbitskaya"], ["Thassha", "Vitayaviroj"], ["Vanessa", "Masalles"], ["Tiya", "Rolle"], ["Janette", "Bejlkova"], ["Karolina", "Rejniak"], ["Elna", "De Villiers"], ["Maiko", "Ohmi"], ["Pauline", "Bourdet Fontaine"], ["Mareike", "Molchin"], ["Irina", "Tkachenko"], ["Alaknanda", "Jadhav"], ["Manuela", "Santos"], ["Michelle", "Aybar"], ["Tanya", "Klenkoski"], ["Alexandra", "Demidova"], ["Alisee", "Hirt"], ["Clelia", "Deltour"], ["Ludmila", "Stavila"], ["Maria", "Alvaro"], ["Karolina", "Kosinska"], ["Kana", "Watanabe"], ["Yuka", "Mori"], ["Hee Sun", "Lyoo Suh"], ["Mariana", "Weschenfelder"], ["Nidhi", "Shah"], ["Marta", "Melis"], ["Nana", "Urotadze"], ["Alyssa Ann", "Labay"], ["Vilma", "Macheda"], ["Gabriela", "Cazares"], ["Julia", "Pugach"], ["Carly", "Petit"], ["Lenka", "Jaloviecova"], ["Anna", "Gil Mares"], ["Selen", "Surel"], ["Jenny", "Broughall"], ["Valentina", "Franchini"], ["Henrietta", "Habler"], ["Constanza", "Politi"], ["Emi", "Nozaki"], ["Valeria", "Muratori"], ["Svetlana", "Tsykhanskaya"], ["Miyoko", "Takahashi"], ["Ji Sun", "Kim"], ["Bianca", "Nocella"], ["Alina", "Sufiarova"], ["Ana Maria", "Gonzalez Leon"], ["Morena", "De Bernardi"], ["Tanya", "Ridzevskaya"], ["Kewa", "Nichols"], ["Antonia Xenia", "Tout"], ["Anne", "Dickhardt"], ["Antonia", "Toth"], ["Ghazaleh", "Torkaman"], ["Michelle", "Snyman"], ["Maria Rossana", "Vega Saguier"], ["Bertille", "Van Marque"], ["Irina", "Buryachok"], ["Mari", "Andersson"], ["Angela", "Garcia Mosquera"], ["Jaclyn", "Schokman"], ["Sarah", "Gronert"], ["Yana", "Nemerovski"], ["Adriana", "Fonseca Villarroel"], ["Juliana", "Cordero"], ["Katherine", "Wittgruber"], ["Paloma", "Ruiz Blanco"], ["Caroline", "Carpentier"], ["Vanja", "Corovic"], ["Ana", "Tomasevic"], ["Kaja", "Smole"], ["Naina", "Karsolia"], ["Mahesha", "Seneviratne"], ["Fernanda", "Martins"], ["Sara", "Simbula"], ["Liliana", "Pereira"], ["Edita", "Milos"], ["Natalia", "Sanchez"], ["Pasquale", "Jansma"], ["Min Jung", "Jeon"], ["Larissa", "Wuehrl"], ["Beier", "Ko"], ["Hye Min", "Lee"], ["Celine", "Vaure"], ["Lika", "Chkuaseli"], ["Claire", "De Gubernatis"], ["Ayako", "Isogai"], ["Tatiana", "Zhukovskaya"], ["Saranya", "Pattabhi"], ["Andrea", "Pera"], ["Tina", "Trautmann"], ["Andrea", "Brenes"], ["Saori", "Hosogai"], ["Patience", "Otali"], ["Seheno", "Razafindramaso"], ["Shilpa", "Goel"], ["Lucy", "Scott"], ["Lisa", "Sabino"], ["Claudia", "Jorda Fernandez"], ["Charlene", "Vanneste"], ["Fang", "Liu"], ["Mabel", "Rodriguez"], ["Sarina", "Mueller"], ["Michaela", "Babicova"], ["Karolina", "Soor"], ["Wing Shan", "Cheung"], ["Rita", "Gerecz"], ["Elizabeth", "Ferris"], ["Zhanna", "Nemykina"], ["Roxana", "Martinez"], ["Elena", "Vesnina"], ["Yawna", "Allen"], ["Melissa", "Ryan"], ["Lara", "Picone"], ["Asako", "Sato"], ["Jana", "Bielikova"], ["Irina", "Malashok"], ["Amanpreet", "Kaur"], ["Deniz", "Atas"], ["Lorena", "Villalobos Cruz"], ["Julia", "Sack"], ["Melissa", "Silva"], ["Kateryna", "Bondarenko"], ["Catalina", "Villegas Garcia"], ["Anca", "Dumitru"], ["Veronique", "Parke Bedard"], ["Andrea", "Hlavackova"], ["Milena", "Araujo"], ["Tarakaa", "Bertrand"], ["Whitney", "Jones"], ["Melanie", "Wolkersberger"], ["Jessica", "Leitch"], ["Savi", "Sehrawat"], ["Maya", "Rosa"], ["Patricia", "Lopez Illan"], ["Melisa", "Cabrera Handt"], ["Laura", "Hernandez"], ["Katerina", "Mazackova"], ["Shraddha", "Lodha"], ["Kinga", "Kozlowska"], ["Swathika", "Kandhaswany"], ["Ya Wen", "Lee"], ["Stephanie", "Pace"], ["Alexandra", "Glushenko"], ["Cristina", "Visico"], ["Krista", "Sanders"], ["Jessica", "Mezo"], ["Ina", "Sireteanu"], ["Gira", "Schofield"], ["Natalie", "Orourke"], ["Lilian", "Asuaje"], ["Marina", "Spakova"], ["Yukako", "Kato"], ["Carmen", "Pinto"], ["Andreia", "Ribeiro"], ["Sylvia", "Krywacz"], ["Jolien", "Kroese"], ["Sonia", "Fondevila Castro"], ["Jamea", "Jackson"], ["Paola", "Doldan Gonzalez"], ["Maria Aless", "Termini"], ["Sharon Nosipho", "Makhanya"], ["Ruchita", "Shetty"], ["Paulina", "Zuniga"], ["Pakrpa", "Pramualsuk"], ["Michelle", "Blattler"], ["Kim", "Stierli"], ["Yulia", "Stupak"], ["Alice", "Balducci"], ["Maiara", "Olivera"], ["Anna Maria", "Zubori"], ["Alice", "Mackenzie"], ["Yeon Ju", "Kim"], ["Elena", "Bavassano"], ["Fabiana", "Ferraro Arce"], ["Julia", "Chergova"], ["Sarah", "Mclaren"], ["Kirsty", "Woolley"], ["Hanane", "Toumi"], ["Giorgia", "Pontoglio"], ["Marcia", "Almada"], ["Manjot", "Marwah"], ["Amina", "El Sahn"], ["Irina", "Kotkina"], ["Roni", "Gilboa"], ["Tamar", "Kvaratskhelia"], ["Hendrike Lea", "Heitmann"], ["Georgia", "Rose"], ["Septi", "Mende"], ["Jennifer", "Elie"], ["Beatris", "Simion"], ["Tamara", "Bartkowiak"], ["Heidi", "El Tabakh"], ["Katerina", "Avdiyenko"], ["Osariemen", "Airhunmwunde"], ["Tracy", "Lin"], ["Karima", "Ait Ali Yahia"], ["Sara", "Abutovic"], ["Martina", "Braun Schultz"], ["Kristina", "Nedelcheva"], ["Patricia", "Coimbra"], ["Shannon", "Golds"], ["Parul", "Goswami"], ["Marissa", "Espinoza"], ["Maria Emma", "Quiroz"], ["Vera", "Dushevina"], ["Laila", "Abdala"], ["Bianca", "Salame"], ["Vindya", "Dayananda"], ["Sonia", "Eguizabal Saracho"], ["Federica", "Van Adrichem"], ["Bethan", "Lewis"], ["Annette", "Aksdal"], ["Claudia", "Puddu"], ["Lara", "Alexander"], ["Evelyn", "Enunwah"], ["Dunja", "Antunovic"], ["Juri", "Komatsu"], ["Katy", "Scarisbrook"], ["Suzanna", "Mansour"], ["Yuka", "Higashi"], ["Iris", "Elias"], ["Daniela", "Ciganikova"], ["Tamara", "Bunic"], ["Tong", "Gao"], ["Daowadueng", "Phonkan"], ["Nicole", "Buitoni"], ["Anastasia", "Cherkashin"], ["Micaela", "Acosta"], ["Rebecca", "Dare Mccann"], ["Anna", "Lapushchenkova"], ["Chia Li", "Chen"], ["Diana", "Santillan Fernandez"], ["Sara", "Tarraso Barber"], ["Ryoko", "Fuda"], ["Marielle", "Weihs"], ["Valentina", "Bontempi"], ["Adriana", "Jaskova"], ["Yoo Ri", "Bae"], ["Ankita", "Bhambri"], ["Biljana", "Gajic"], ["Chiaki", "Okadaue"], ["Nel", "Ben Ami"], ["Francesca", "Flavell"], ["Stephanie", "Dubois"], ["Yumi", "Miyazaki"], ["Anastasia", "Yakimova"], ["Erica", "Kosova"], ["Erin", "Jobe"], ["Nicole", "Pitts"], ["Alexia", "Virgili"], ["Stamatia", "Fafaliou"], ["Marta", "Torres Torres"], ["Barbara", "Krzesinska"], ["Rebeca", "Molina"], ["Cora", "Vasilescu"], ["Alba", "Berdala Grive"], ["Danielle", "Cosgrove"], ["Gabriela", "Matekova"], ["Pichnita", "Songsanu"], ["Patricia", "Mayr Achleitner"], ["Ivana", "King"], ["Mihaela Alina", "Stanila"], ["Alina", "Stanila"], ["Mai", "Takeda"], ["Karina", "Tomaszewska"], ["Nozomi", "Aiba"], ["Monika", "Lesniakova"], ["Luiza", "Borges"], ["Susana", "Hernandez"], ["Ana", "Jerman"], ["Ana Catalina", "Guerrero"], ["Yi", "Chen"], ["Tania", "Miro Garcia Pozuelo"], ["Patrycja", "Komarska"], ["Ashley", "Joelson"], ["Shu Yi", "Zhang"], ["Velena", "Mamutova"], ["Sania", "Mirza"], ["Malin", "Sjoqvist"], ["Ketevan", "Okruashvili"], ["Monika", "Dancevic"], ["Laura", "Zelder"], ["Katerina", "Bohmova"], ["Emily", "Ottsen"], ["Michaela", "Bartlova"], ["Andreea Patricia", "Braica"], ["Nadezda", "Gorbachkova"], ["Caroline", "Bailly"], ["Eva", "Pera"], ["Alice", "Izomor"], ["Patrycja", "Sanduska"], ["Link", "Leskosky"], ["Teodora Lavinia", "Cazan"], ["Michela", "Trabalioni"], ["Carly", "Gullickson"], ["Daria", "Holodnik"], ["Ivana", "Gelo"], ["Carina", "Hirsch"], ["Tatiana", "Grechukhina"], ["Rebekka", "Haenle"], ["Ainsley", "Fairhead"], ["Diane", "Filip"], ["Tamara", "Jugo"], ["Ashel", "Dimi"], ["Evgenia", "Linetskaya"], ["Veronika", "Kapshay"], ["Amanda", "Fink"], ["Mirella", "Ramic"], ["Jung Eun", "Kim"], ["Audrey", "Robert Bordeleau"], ["Jenifer", "Widjaja"], ["Maria Del Mar", "Ceron"], ["Tania", "Hernandez"], ["Ana", "Milosavljevic"], ["Amy", "Robinson"], ["Fabiana", "Gomez"], ["Catherine", "Grotz"], ["Melissa", "Mang"], ["Anna", "Egorova"], ["Tammy", "Kevey"], ["Larisa", "Bekmetova"], ["Andrea", "Lipovska"], ["Meritxell", "Gol Alamo"], ["Bianca", "Gorbea"], ["Claire", "Ilcinkas"], ["Ileana Camelia", "Necea"], ["Roseta", "Navarro Pons"], ["Filomena", "Nisi"], ["Yurika", "Sema"], ["Abiodun", "Oyegoke"], ["Kelcy", "Tefft"], ["Nadia", "Solomon"], ["Tamara", "Novoselac"], ["Airi", "Hagimoto"], ["Frances", "Miller"], ["Monika", "Drabkova"], ["Mariel", "Rosales Martinez"], ["Maria", "Moya"], ["Irina", "Steirer"], ["Sonja", "Viskovich"], ["Yoshimi", "Kakuta"], ["Mathilde", "Cor"], ["Estefania", "Craciun"], ["Anastasia", "Antoniadou"], ["Carla", "Bell"], ["Rui", "Du"], ["Maria", "Stepanova"], ["Norzafira", "Taufik"], ["Jasmin", "Jessenk"], ["Alexandra", "Recio Linares"], ["Arancha", "Recio Linares"], ["Olga", "Panova"], ["Bruna", "Paes"], ["Ghizela", "Schutte"], ["Neda", "Katalina"], ["Carmen", "Klaschka"], ["Isabela", "Kulaif"], ["Doris", "Graus"], ["Christian", "Tara"], ["Katarina", "Zoricic"], ["Shannon", "Robinson"], ["Makere", "Bradnam"], ["Seika", "Takahara"], ["Suzana", "Kuffner"], ["Minami", "Endo"], ["Mari", "Tanaka"], ["Jia", "Lin"], ["Daniella", "Jeflea"], ["Alessandra", "Jordan"], ["Pavlina", "Glosova"], ["He Wen Fei", "Li"], ["Michaela", "Schumichrastova"], ["Ekaterina", "Afinogenova"], ["Michaela", "Bressan"], ["Paola", "Cervantes"], ["Jessica", "Homberg"], ["Alex", "Graebe"], ["Anna", "Klebleeva"], ["Elina", "Arutyunova"], ["Soizette", "Simmons"], ["Masa", "Zec Peskiric"], ["Sheng Nan", "Sun"], ["Zeynep Asli", "Naibi"], ["Claudia", "Smolders"], ["Katerina", "Sidorovich"], ["Maria", "Kirilenko"], ["Renata", "Kucerkova"], ["Aleksandra", "Zdeb"], ["Lerissa", "Maurice"], ["Kanae", "Hisami"], ["Maria Paula", "Aguirre"], ["Flor", "Reyes"], ["Karin", "Vodickova"], ["Yuna", "Kikawa"], ["Laura", "Rodriguez Navas"], ["Eunice", "David"], ["Elvira", "Serrot Geminelli"], ["Alexandra Iulia", "Iacob"], ["Stephanie", "Bengson"], ["Elenora", "Pedonese"], ["Anna Marie", "Atelj"], ["Elena", "Oslyakova"], ["Wiveca", "Swarting"], ["Alla", "Ivanova"], ["Sagarika", "Phadke"], ["Tanja", "Kovacevic"], ["Dominique", "Damian"], ["Rohini", "Das"], ["Lucie", "Safarova"], ["Ann Kathrin", "Gerk"], ["Isamarie", "Perez"], ["Jia Bao", "Yin"], ["Kartiki Vijay", "Bhat"], ["Hind", "Belkarmouss"], ["Sasha", "Fisher"], ["Kara", "Fisher"], ["Pamela", "Russo"], ["Rachel", "Wilhelm"], ["Lejla", "Hodzic"], ["Maria", "Babich"], ["Lina", "Benkirane"], ["Olga", "Alexeeva"], ["Nika", "Kukharchuk"], ["Stefania", "Pesce"], ["Angelina", "Ledovskaya"], ["Alexandra", "Valarezo"], ["Brittany", "Baldy"], ["Tinatin", "Kavlashvili"], ["Polona", "Rebersak"], ["Claire", "Peterzan"], ["Bruna", "Cunha"], ["Varsha", "Shivashankar"], ["Sariya", "Khairova"], ["Randi", "Schuler"], ["Nargiza", "Ibragmova"], ["Alejandra", "Guerra"], ["Kunigunda", "Dorn"], ["Michaela", "Matejickova"], ["Nan", "Dong"], ["Elisa", "Salis"], ["Katrine", "Christensen"], ["Lisanne", "Balk"], ["Misato", "Tashiro"], ["Lina", "Fettah"], ["Kanisha", "Mehta"], ["Pamela", "Duran Vinueza"], ["Vanesa", "Furlanetto"], ["Estrella", "Cabeza Candela"], ["Giulia", "Gabba"], ["Alina", "Sullivan"], ["Aleksa", "Costa"], ["Jessi", "Robinson"], ["Yuka", "Ueda"], ["Maren", "Kassens"], ["Marketa", "Postranecka"], ["Catriona", "Stewart"], ["Lei", "Feng"], ["Natalia", "Bubien"], ["Zuzana", "Chmelarova"], ["Tijana", "Koprivica"], ["Kelli", "Zahnel"], ["Natia", "Tsiklauri"], ["Nudnida", "Luangnam"], ["Jennifer Lee", "Heinser"], ["Eun Hee", "Sung"], ["Marlena", "Metzinger"], ["Valentina", "Vasilieva"], ["Saskia", "Adomat"], ["Megumi", "Takahashi"], ["Alanna", "Rodgers"], ["Anne", "Schaefer"], ["Danica", "Krstajic"], ["Jessica", "Engels"], ["Jovana", "Rasovic"], ["Olga", "Tsoi"], ["Kristina", "Barysheva"], ["Ji Hyun", "Oh"], ["Alba", "Ramos Segarra"], ["Laura", "Haberkorn"], ["Jitka", "Kleisnerova"], ["Michelle", "Mitchell"], ["Jessica", "Williams"], ["Jacquelyn", "Visinski"], ["Anna", "Chakvetadze"], ["Akiko", "Yoshizawa"], ["Nanis", "El Essaily"], ["Rebeca", "Bou Nogueiro"], ["Julia", "Doci"], ["Abby", "Hedges"], ["Carolina", "Escamilla"], ["Maria", "Garcia Planas"], ["Jana", "Mackova"], ["Keri", "Robison"], ["Haruna", "Shimizu"], ["Coral", "Morales"], ["Melodia", "Morales"], ["Asli", "Semizoglu"], ["Preethi", "Subramaniam"], ["Milana", "Yusupov"], ["Laura", "Viquez"], ["Aravane", "Rezai"], ["Julia", "Sloboda"], ["Ludmila", "Arias Moreno"], ["Yana", "Sadovskaya"], ["Ewa", "Losinski"], ["Preethi", "Shravan"], ["Ivana", "Lisjak"], ["Amanda", "Rales"], ["Fabiana", "Mak"], ["Anna", "Berezka"], ["Dalia Primaver", "Garza"], ["Anna", "Amato"], ["Thaddea", "Lock"], ["Caroline", "Larsson"], ["Ara", "Micayabas"], ["Sonya", "Haggstrom"], ["Marta", "Salgueiro Freixenet"], ["Sarah", "Schneider"], ["Anna", "Sidorovitch"], ["Shan Shan", "Song"], ["Sandra", "Zmak"], ["Anne", "Gylling"], ["Paulina", "Bigos"], ["Dina", "Senkina"], ["Monica", "Mir Daud"], ["Chandra", "Capozzi"], ["Jung Ha", "Lee"], ["Anna", "Novo"], ["Romina", "Mrochen"], ["Yu Ting", "Lin"], ["Nuria", "Sanchez Garcia"], ["Amanda", "Melgarejo"], ["Veronika", "Chvojkova"], ["Vojislava", "Lukic"], ["Akiko", "Kato"], ["Anna Lena", "Hansen"], ["Myrella", "De Paula"], ["Yan Chong", "Chen"], ["Sara", "Savarise"], ["Maja", "Vuzem"], ["Irina", "Cybina"], ["Nicole", "Ludwig"], ["Stefanie", "Alfery"], ["Elena", "Micheloni"], ["Liberty", "Sveke"], ["Sara", "Del Barrio Aragon"], ["Sofia", "Dinis"], ["Carola", "Gonzalez King Garibo"], ["Yanchong", "Chen"], ["Jenna", "Rayner"], ["Stephanie", "Kusano"], ["Monia", "Pederzoli"], ["Ana Gloria", "Osorio Pena"], ["Anete", "Bandere"], ["Vanessa", "Pinto"], ["Maja", "Petrovic"], ["Oormila", "Ram"], ["Lara", "Alsamman"], ["Pichittra", "Thongdach"], ["Korina", "Perkovic"], ["Hae Youm", "Bae"], ["Perrine", "Gauthier"], ["Meghana", "Paritala"], ["Ira", "Aleksova"], ["Eloah", "Lopes"], ["Kristina", "Andlovic"], ["Rebeca", "Estupina Ibanez"], ["Sonia", "Corominas Plaja"], ["Barbara", "Maciocha"], ["Maria", "Sharapova"], ["Ju Hee", "You"], ["Li Li", "Ding"], ["Jana", "Votrubcova"], ["Romina", "Raonic"], ["Naoko", "Ushiyama"], ["Maria", "Calbeto"], ["Laura", "Vallverdu Zafra"], ["Natalia", "Baez"], ["Jennifer", "Carati Del Nogal"], ["Vicky", "Michaud"], ["Anjuri", "Nagalia"], ["Jarmila", "Gajdosova"], ["Sofia", "Ayala"], ["Martha Carolina", "Bello Urbina"], ["Costanza", "Pallme Konig"], ["Sara", "Errani"], ["Wen", "Zhao"], ["Dia", "Evtimova"], ["Sheila", "Solsona Carcasona"], ["Tatiana", "Cutrona"], ["Tapiwa", "Marobela"], ["Shahar", "Peer"], ["Sandra", "Canrom"], ["Oxana", "Zhuchenko"], ["Laura", "Gence"], ["Gajane", "Vage"], ["Yuka", "Higuchi"], ["Sara", "Amo Flores"], ["Olena", "Leonchuk"], ["Leigh", "Walsh"], ["Beatriz", "Rios"], ["Claire", "Mesnil"], ["Ana", "Lipartia"], ["Leen", "Irani"], ["Anya", "Villanueva"], ["Claire", "Lablans"], ["Ivana", "Gala"], ["Ioana", "Ignat"], ["Hana", "Vaculinova"], ["Vita", "Moskaliova"], ["Natalia", "Zamolotskikh"], ["Sofia", "Melikishvili"], ["Loriane", "Favoretto"], ["Natasha", "Khan"], ["Jing", "Zhou"], ["Mariangela", "Avola"], ["Veronica", "Queen"], ["Ivana", "Karolyiova"], ["Elena", "Chalova"], ["Olawaseun", "Ogundare"], ["Evgeniya", "Guba"], ["Anastasia", "Balafouta"], ["Melissa", "Percy"], ["Daniella", "Cohen"], ["Aleksandra", "Lukic"], ["Camilla", "Lundberg"], ["Francesca", "Piu"], ["Laura", "Thorpe"], ["Leslie", "Koffi"], ["Misa", "Kinoshita"], ["Cynthia", "Tornil Marclay"], ["Sonia", "Bernal"], ["Fadzai", "Masiyazi"], ["Stanca", "Muresan"], ["Candelaria", "Rizzuto"], ["Valerie", "Saillant"], ["Josanne", "Van Bennekom"], ["Luboslava", "Hiresova"], ["Ekaterina", "Shulaeva"], ["Inna", "Kuzmenko"], ["Edith", "Tosner"], ["Anna", "Sydorska"], ["Maria Dolores", "Pazo"], ["Jennifer", "Woyke"], ["Sophia", "Marks"], ["Natalia", "Guitler"], ["Martina", "Pavelec"], ["Juliana", "Botelho"], ["Amber", "Brightly"], ["Yu Lin", "Dai"], ["Dasha", "Cherkasova"], ["Lizeth", "King"], ["Rocio", "Juarez"], ["Katelyn", "Ross"], ["Helen", "Wisnienski"], ["Anna", "Sharp"], ["Joanna", "Zajac"], ["Pooja", "Kommireddi"], ["Bianca", "Schulz"], ["Gabriella", "Polito"], ["Nina", "Henkel"], ["Efrat", "Zlotikamin"], ["Amanda", "Mankovits"], ["Irina", "Tsymbal"], ["Magali", "De Lattre"], ["Ani", "Mijacika"], ["Nicole", "Briceno"], ["Julie", "Wijnakker"], ["Alejandra", "Saavedra"], ["Stephanie", "Vock"], ["Marta", "Oliva Lopez"], ["Atsumi", "Dohi"], ["Melanie", "Gloria"], ["Nikol", "Dimitrova"], ["Alizee", "Paradis"], ["Aimi", "Koga"], ["Adina", "Neustein"], ["Ola", "Abou Zekry"], ["Chie", "Hayasaka"], ["Eleonora", "Luciani"], ["Andrea", "Sieveke"], ["Ola", "Abou Zekri"], ["Kamalpreet", "Bhullar"], ["Marah", "Calvo"], ["Maria", "Irigoyen"], ["Simona", "Dobra"], ["Punam", "Reddy"], ["Lenore", "Lazaroiu"], ["Maria", "Seppi"], ["Karolina", "Wlodarczak"], ["Rotem", "Goldstein"], ["Julie", "Vo"], ["Karin", "Knapp"], ["Agnes", "Szatmari"], ["Etti", "Gans"], ["Helene", "Tribolet"], ["Maria Jose", "Vallasciani"], ["Kasumi", "Hattori"], ["Estefania", "Balda Alvarez"], ["Megan", "Alexander"], ["Tania", "Varela Alvarado"], ["Paulina", "Ojeda"], ["Clara", "Schuhmacher Terron"], ["Christine", "Kainzmeier"], ["Ekaterina", "Dranets"], ["Meta", "Sevsek"], ["Marisa", "Gianotti"], ["Maria", "Milic"], ["Kaori", "Sano"], ["Karolina", "Filipiak"], ["Teresa", "Oberti"], ["Nantenaina", "Ramalalaharivololona"], ["Nicole", "Agostini"], ["Christelle", "Prato"], ["Ekaterina", "Pogrebniak"], ["Andra Iulia", "Savu"], ["Charity", "Johns"], ["Katarina", "Vranic"], ["Dana", "Hartman"], ["Elisabetta", "Monduzzi"], ["Ji Ae", "Kim"], ["Qing", "Yue"], ["Julianne", "Welford"], ["Laone", "Botshoma"], ["Daria", "Bykodarova"], ["Kunkanda", "Pukjumpa"], ["Esha", "Sanghvi"], ["Dede Tari", "Kusrini"], ["Alexandra", "Hernandez Vallant"], ["Eva", "Brozova"], ["Ute", "Schnoy"], ["Alexandra M", "Haney"], ["Chisako", "Sugiyama"], ["Shuang", "Liu"], ["Santa", "Sushinska"], ["Sarah", "Braun"], ["Hirono", "Watanabe"], ["Emmy", "Fritz Krockow"], ["Lenka", "Broosova"], ["Olga", "Khrapkova"], ["Rosanna", "Hatch"], ["Ana", "Gonzalez Herreros"], ["Maraike", "Biglmaier"], ["Sandra", "Hribar"], ["Selima", "Frioui"], ["Cho Won", "Lee"], ["Adriana", "Fernandez"], ["Samantha", "Cowan"], ["Tatjana", "Priachin"], ["Katia", "Sabate Orera"], ["Ingrid", "Cseh"], ["Andrea", "Bonilla"], ["Christin J", "Thompson"], ["Rumi", "Abe"], ["Juliana", "Voigt"], ["Csilla", "Borsanyi"], ["Yuliya", "Hnateyko"], ["Nihal", "Tarek Saleh"], ["Julija", "Sabanov"], ["Marina", "Shamayko"], ["Jovana", "Miletic"], ["Lara", "Wittmann"], ["Thuy Dung", "Nguyen"], ["Despina", "Matsaridou"], ["Lenka", "Hojckova"], ["Silvia", "Fassione"], ["Seema", "Maybud"], ["Kamila", "Mirzaalimova"], ["Aglaya", "Kokurina"], ["Tatjana", "Malek"], ["Tatjana", "Maria"], ["Dijana", "Srbinoska"], ["Prim", "Buaklee"], ["Mega", "Sukmawati"], ["Sophie", "Jacobeit"], ["Meg", "Fanjoy"], ["Lusine", "Davtyan"], ["Stephanie", "Dalmacio"], ["Keva", "Palmer"], ["Amanda", "Avedissian"], ["Alejandra", "Del Rey Guardiola"], ["Hannah", "Eke"], ["Chiaki", "Matsumoto"], ["Victoria", "Valls Comamala"], ["Alejandra", "Meza Cuadra"], ["Esperanza", "Vinals Rebassa"], ["Agustina", "Llaver"], ["Maria", "Abramovic"], ["Florencia", "Camperchioli"], ["Malgorzata", "Silka"], ["Karin", "Conti"], ["Pei", "Peng"], ["Claudia", "Spincke"], ["Maria", "Soo"], ["Madalina", "Gojnea"], ["Sara", "Di Paolo"], ["Stephanie", "Lim"], ["Shana", "Claes"], ["Katia", "Alarcon"], ["Simona", "Kralikova"], ["Kylie", "Moore"], ["Fani", "Chifchieva"], ["Lisa", "Haegele"], ["Afreen", "Jahan"], ["Olesia", "Nazarova"], ["Mariana", "Majic"], ["Yeniseik", "Gomez"], ["Whitney", "Chappell"], ["Amanda", "Mcdowell"], ["Chrissie", "Seredni"], ["Ia", "Appelberg"], ["Francesca", "Kinsella"], ["Vittoria", "Perugini"], ["Monica", "Tomas Lopes"], ["Julie", "Jacobs"], ["Gabriela", "Robledo Loza"], ["Annie", "Wise"], ["Aleksandra", "Wozniak"], ["Monica", "Neveklovska"], ["Andrea", "Petkovic"], ["Mika", "Kawamura"], ["Elyse", "Steiner"], ["Andrada Lacramioara", "Dinu"], ["Seira", "Etori"], ["Michelle", "Sammons"], ["Yaroslava", "Shvedova"], ["Jia", "Zhao"], ["Lisa", "Marshall"], ["Guillermina", "Torre"], ["Carmen Maria", "Ortiz Law"], ["Miho", "Ishida"], ["Tsvetana", "Pironkova"], ["Stephanie", "Vieira"], ["Ye Ra", "Lee"], ["Jelena", "Rajic"], ["Jing", "Ren"], ["Ayumi", "Yamamoto"], ["Andrina", "Laegerler"], ["Ashley", "Spicer"], ["Aurelie", "Caffa"], ["Mi Seon", "Lee"], ["Florentina", "Hanisch"], ["Olga", "Savchuk"], ["Maria Teresa", "Salame"], ["Agnes", "Liepina"], ["Apurvika", "Shukla"], ["Laura", "Bel Franquesa"], ["Svetlana", "Smirnova"], ["Hae Sung", "Kim"], ["Connor", "Vogel"], ["Aleksandra", "Zakrzynska"], ["Ali", "Van Horne"], ["Susanna", "Mussi"], ["Razilya", "Galayamova"], ["Stella", "Kyradji"], ["Joana Alexandra", "Comsa"], ["Maria", "Gomez"], ["Monica", "Niculescu"], ["Berengere", "Teix"], ["Maria Irene", "Squillaci Sandoval"], ["Maria", "Temez Fernandez"], ["Aoi", "Hatanaka"], ["Daria", "Titkina"], ["Tanja", "Ostertag"], ["Yana", "Mathias"], ["Francesca", "Recalcati"], ["Olga", "Puchkova"], ["Lauren", "Imre"], ["Graziana", "Di Giuseppe"], ["Emilia", "Arnaudovska"], ["Astri", "Purnawati"], ["Yui", "Nagasawa"], ["Bojana", "Bobusic"], ["Holly", "Richards"], ["Ortansa Nicoleta", "Danciu"], ["Annelise", "Fernandez"], ["Micaela", "Moroni"], ["Kellie", "Schmitt"], ["Alexandra", "Karavaeva"], ["Chiara", "Petrazzuolo"], ["Thalia", "Diaz Barriga"], ["Hikari", "Matsuo"], ["Talitha", "De Groot"], ["Maria", "Hoyos"], ["Daniela", "Lovera"], ["Brintney", "Larson"], ["Samantha", "Murray"], ["Asha", "Nanda Kumar"], ["Dariana", "Kozmina"], ["Junko", "Yamada"], ["Tatiana", "Kotelnikova"], ["Yui", "Takeshima"], ["Erika", "Takao"], ["Mary", "Tenu Michael Christon"], ["Laura", "Barbu"], ["Carolina", "Gutierrez"], ["Dina", "Bajramovic"], ["Anna", "Gerasimou"], ["Miljana", "Adanko"], ["Gina", "Fahaiyena"], ["Ozge", "Atalay"], ["Marcela", "Vojtiskova"], ["Sina", "Ladage"], ["Anna", "Vines Milian"], ["Rebekka", "Petursdottir"], ["Mireia", "Cano Guirao"], ["Maria Jose", "Andres Gomez"], ["Gabbi", "Tepic"], ["Alice Maria", "Tunaru"], ["Anjani", "Tandon"], ["Sarah", "Aulombard"], ["Luci", "Gonzalez Puch"], ["Federica", "Suess"], ["Ana Maria", "Henriquez"], ["Celina", "Grissi"], ["Martina", "Gerlova"], ["Wei Fang", "Kung"], ["Chieh Ju", "Wang"], ["Naoko", "Ueshima"], ["Jie", "Zeng"], ["Hirono", "Yoshikawa"], ["Andrea", "Portillo"], ["Alla", "Kudryavtseva"], ["Lavinia", "Tananta"], ["Bianca", "Smith"], ["Ana", "Ivanovic"], ["Ashley", "Murdock"], ["Nazli", "Kutuk"], ["Lyubov", "Slovtsova"], ["Carla Lorena", "Martinez"], ["Victoria", "Quintero"], ["Claire", "Soper"], ["Stine", "Sebakk"], ["Alexandra", "Aleksieva"], ["Jessica", "Kirkland"], ["Siobhan", "Finicane"], ["Varanya", "Vijuksanaboon"], ["Catalina", "Arancibia"], ["Eliza", "Rustandar"], ["Seul Ki", "Chin"], ["Andrea", "Herrera"], ["Tania", "Salas"], ["Miya", "Solic"], ["Maria", "Gatalskaya"], ["Maria Paulina", "Gamboa"], ["Montserrat", "Gonzalez"], ["Giulia", "Gatto Monticone"], ["Yuri", "Fujii"], ["Silvia", "Soler Espinosa"], ["Natalia", "Kolat"], ["Alexandra", "Kichoutkin"], ["Irina", "Strigalova"], ["Simone", "Frank"], ["Cammie", "Gray"], ["Laura", "Fisher"], ["Yana", "Levchenko"], ["Jessica", "Nguyen"], ["Tori", "Kinard"], ["Iuliia", "Sandrakova"], ["Nina", "Munch Soegaard"], ["Aislinn", "Oneill"], ["Sandrine", "Jabra"], ["Hannah", "Grady"], ["Zineb", "El Ouazzani"], ["Irena", "Mykytyn"], ["Vasilisa", "Bardina"], ["Ekaterina", "Kirianova"], ["Mailyne", "Andrieux"], ["Natalie", "Tanevska"], ["Janina", "Peters"], ["Sarah", "Lancaster"], ["Fabiola", "Alvarez Carbajo"], ["Eveline", "Widiger"], ["Viktorya", "Gorodetsky"], ["Lucy", "Warburton"], ["Charlotte", "Douwma"], ["Maria Sol", "Mezio"], ["Jana", "Juricova"], ["Viviane", "Marani"], ["Kaoru", "Maezawa"], ["Totinkoa", "Djanguenane"], ["Rachael", "Dillon"], ["Clothilde", "Falconetti"], ["Sophie", "Quist"], ["Diana", "Buzean"], ["Christy", "Striplin"], ["Tamara", "Orwa"], ["Adrienn", "Hidvegi"], ["Verdiana", "Verardi"], ["Evgenia", "Stupak"], ["Nina", "Beljajevova"], ["Morgan", "Lightbourne"], ["Ekaterina", "Ivanova"], ["Ekaterina", "Lopes"], ["Shuko", "Aoyama"], ["Anna", "Khvedelidze"], ["Rita", "Vukov"], ["Yoshi", "Nagano"], ["Denise", "Giler"], ["Aishwarya", "Jadhav"], ["Magy", "Aziz"], ["Maria", "Sorbello"], ["Christine", "Wilson"], ["Geneva", "Gnam"], ["Luiza", "Barcaui"], ["Ilham", "Zouaoui"], ["Nargiza", "Rakhmanova"], ["Joana", "Pangaio Pereira"], ["Andrea", "Popovic"], ["Marta", "Smiechowska"], ["Mihaela", "Duna"], ["Yui", "Saikai"], ["Paulina", "Vargas"], ["Merve", "Gultekinler"], ["Claudia", "Sanua"], ["Seema", "Kumari"], ["Veronika", "Dostalova"], ["Lu Ling", "Chen"], ["Natalia", "Rakhmanina"], ["Brina", "Spegel"], ["Valeria", "Pertsukhova"], ["Alexandra", "Kiesl"], ["Kim", "Rus"], ["Jutta", "Bornefeld"], ["Therese", "Tisseverasinghe"], ["Laura", "Burns"], ["Huan", "Xia"], ["Jessica", "Omeara"], ["Caterina", "Marusic"], ["Whitney", "Byrd"], ["Amparo", "Iglesias"], ["Karen", "Castiblanco"], ["Yumi", "Nakano"], ["Arijana", "Begovic"], ["Aliaa", "Fakhry"], ["Soledad", "Podlipnik"], ["Yun Qiao", "Ren"], ["Tamar", "Milevskaya"], ["Joyce", "Martinez"], ["Zeynep Aysu", "Yavuz"], ["Georgie", "Gent"], ["Maria Fernanda", "Riveroll"], ["Jana", "Albers"], ["Kelly", "Holtzhausen"], ["Keren", "Shlomo"], ["Julie", "Bensilum"], ["Emese", "Kardhordo"], ["Viktoriya", "Agryutenkova"], ["Denise", "Harijanto"], ["Jessica", "Zok"], ["Maribel", "Vicente Joyera"], ["Suzanne", "Matzenauer"], ["Angelique", "Kerber"], ["Olga", "Sarli"], ["Blanca", "Guallart Lain"], ["Andrea", "Giraldo"], ["Ieva", "Irbe"], ["Sayyara", "Mammadova"], ["Manami", "Miura"], ["Katrin", "Klein"], ["Julija", "Gotovskyte"], ["Hye Mi", "Byun"], ["Maria Isabel", "Camberos"], ["Sophie", "Wilkinson"], ["Valerie", "Tetreault"], ["Ye Ji", "Seo"], ["Jesica", "Brys"], ["Kseniia", "Tokarieva"], ["Caroline", "Nothnagel"], ["Annalisa", "Salvatelli"], ["Shi Tong", "Shao"], ["Shuang", "Wu"], ["Saskia", "Monien"], ["Anushree", "Thammanna"], ["Tatiana", "Golovin"], ["Andrea", "Espinosa"], ["Karin", "Hechenberger"], ["Anna", "Saltanova"], ["Nancy", "Metriya"], ["Vandana", "Murali"], ["Kateryna", "Malakhova"], ["Josipa", "Bek"], ["Beatriz", "Salazar Ruiz"], ["Natalie", "Toporowski"], ["Bermet", "Duvanaeva"], ["Ronke", "Akingbade"], ["Sofia", "Mitrokhin"], ["Xia Ling", "Li"], ["Ina", "Hadziselimovic"], ["Sarah", "Huah"], ["Sara", "Mansoor"], ["Justine", "Ozga"], ["Mateja", "Horvat"], ["Vanessa", "Kretsch"], ["Bo Ram", "Kim"], ["Moira", "Torrisi"], ["Marija", "Olujic"], ["Ana Cristina", "Reyes"], ["Eleonora", "Iannozzi"], ["Febri", "Joana"], ["Yekaterina", "Morozova"], ["Lauren", "Lui"], ["Anna", "Bartenstein"], ["Ivy Kristel", "De Castro"], ["Natasha", "Karolyi"], ["Claudia", "Pontoglio"], ["Desiree", "Alesiani"], ["Stefanie", "Kaindl"], ["Nikola", "Frankova"], ["Maja", "Kambic"], ["Oksana", "Khomyk"], ["Corina Claudia", "Corduneanu"], ["Christine", "Sperling"], ["Sarah", "Fansler"], ["Colleen", "Rielley"], ["Eugenia", "Grebenyuk"], ["Ha Yang", "Choi"], ["Belfin", "Sumbul"], ["Rana", "Tharwat Hafez"], ["Kali A", "Krisik"], ["Sabina", "Gunnarsson"], ["Tuule", "Tani"], ["Neena", "Sharma"], ["Teele", "Tani"], ["Karolina", "Jovanovic"], ["Imane", "Maloufi"], ["Fadzai", "Mawisire"], ["Alexandra", "Mueller"], ["Lara", "Fakhoury"], ["Thuy Trang", "Le Nguyen"], ["Raquel", "Seijo Rodriguez"], ["Victoria", "Abbassi"], ["Mariana", "Muci Torres"], ["Nicole", "Monteiro"], ["Idunn", "Hertzberg"], ["Veronika", "Adami"], ["Jelena", "Stanivuk"], ["Dagmara", "Siara"], ["Sabrina", "Allaut"], ["Stella", "Menna"], ["Martina", "Ondrackova"], ["Desiree", "Bastianon"], ["Pauline", "Bisset"], ["Caitlin", "Whoriskey"], ["Manar", "Al Jazzaf"], ["Nicole", "Grunwald"], ["Yana", "Zvarich"], ["Ana Laura", "Ochoa Magana"], ["Valeria", "Faccinetti"], ["Angelica", "Chavez"], ["Ana", "Veselinovic"], ["Katharina", "Siller"], ["Francisca", "Salas"], ["Emma", "Hiles"], ["Anna", "Boixader Martinez"], ["Jessica", "Schaer"], ["Emma", "Hayman"], ["Irina", "Tregub"], ["Gaelle", "Desperrier"], ["Daniela", "Leyria Moreno"], ["Lindsay", "Burdette"], ["Grace", "Hutson"], ["Camila", "Deluchi"], ["Misato", "Fujita"], ["Sonia", "Sandano"], ["Veronica", "Coslovich"], ["Yuan Yuan", "Zhong"], ["Anastasia", "Zvereva"], ["Julia", "Parasyuk"], ["Nadia", "Adnani"], ["Nicola", "Geuer"], ["Mari", "Yamauchi"], ["Sofie", "Kofoed Thomsen"], ["Teodora", "Mircic"], ["Katerina", "Polunina"], ["Karen Natalia", "Martinez Bernal"], ["Daniela", "Gudelj"], ["Sampada", "Kanede"], ["Laura", "Siegemund"], ["Diana", "Woodcock"], ["Marina", "Erakovic"], ["Michaela", "Johansson"], ["Suzelle", "Davin"], ["Sanaa", "Bhambri"], ["Diana Andreea", "Gae"], ["Antia", "Ghiorghiu"], ["Simona", "Demont"], ["Elodie", "Caillat"], ["Zeynep", "Ozbarlas"], ["Erin", "Liefeld"], ["Marisol", "Aguilar"], ["Ana", "Beltran Trigueros"], ["Anastasiya", "Slyusarchyk"], ["Sara", "Meghoufel"], ["Amanda", "Granson"], ["Barbora", "Bozkova"], ["Lili", "Grebinuk"], ["Marta", "Lesniak"], ["Elze", "Potgieter"], ["Camila", "Belassi"], ["Yuvanna", "Montalvo"], ["Lucie", "Kabacova"], ["Violette", "Huck"], ["Louise", "Doutrelant"], ["Aleksandra", "Malovic"], ["Eun Jung", "Kim"], ["Kalliopi", "Katsoupi"], ["Diana", "Eriksson"], ["Anahi", "Navarro Ruano"], ["Megumi", "Fukui"], ["Kristen", "Mcvitty"], ["Inna", "Tchepournaya"], ["Raluca", "Nedelea"], ["Jung Yoon", "Shin"], ["Cristina", "Martinez"], ["Min Hwa", "Yu"], ["Kristen A", "Bleakley"], ["Ruxandra Floriana", "Tudosoiu"], ["Tatia", "Mikadze"], ["Cristiana", "Marotta"], ["Andra", "Gavril"], ["Marlene", "Ryan"], ["Sophie", "Kobuch"], ["Sanja", "Racic"], ["Diana", "Torres"], ["Bianca", "Eichkorn"], ["Marta", "Torbarina"], ["Julie", "Chao"], ["Joohyoung", "Kim"], ["Salome", "Aladashvili"], ["Stephanie", "Luk"], ["Porntip", "Mulsap"], ["Ineke", "Mergaert"], ["Belen", "Perez De Juan Glez"], ["Anne", "Le Gall"], ["Karin", "Lundmark"], ["Thiyumi", "Abeysinghe"], ["Bianca", "Koch"], ["Roxana", "Alexandru"], ["Melissa", "Saiontz"], ["Ashley", "Neumann"], ["Sara", "Nael"], ["Yasmin", "Enrich"], ["Kyung Hwa", "Lee"], ["Yi Fan", "Chen"], ["Lucia", "Jara Lozano"], ["Doina Nicoleta", "Lovin"], ["Sandra", "Liebl"], ["Celia", "Gil Mateo Sasieta"], ["Patricia", "Soesilo"], ["Tereza", "Hladikova"], ["Magdalena", "Kiszczynska"], ["Soon Mi", "Seo"], ["Shatel", "Tavita"], ["Yukiko", "Terai"], ["Maria", "Perevoschikova"], ["Natalia Maria", "Christenson"], ["Lorena", "Rebolledo"], ["Jasmin", "Heckel"], ["Jamie", "Lieberman"], ["Yevgenia", "Nudga"], ["Maria Lavinia", "Piva"], ["Gluay", "Kampookaew"], ["Anne Marie", "Simonsen"], ["Yan", "Zhang"], ["Iva", "Velkovska"], ["Franziska", "Klotz"], ["Valentina", "Ponomartseva"], ["Ewa", "Szatkowska"], ["Alise", "Vaidere"], ["Milica", "Tomic"], ["Tina", "Akaegbusi"], ["Elly", "Strother"], ["Marjorie", "Ondeck"], ["Sarah", "Harding"], ["Iris", "Khanna"], ["Irene", "Rehberger Bescos"], ["Laura", "Borza"], ["Edilyn", "Balanga Margate"], ["Nicoleta Mihaela", "Negru"], ["Dora", "Somossy"], ["Evgeniya", "Kim"], ["Lenka", "Wienerova"], ["Tania", "Rice"], ["Roberta", "Martellini"], ["Olivia", "Marshall"], ["Catrin", "Deck"], ["Julia", "Trunk"], ["Rita", "Gouveia"], ["Lenka", "Danielova"], ["Christina", "Amo"], ["Melisa", "Miranda Otarola"], ["Stephanie", "Wetmore"], ["Katariina", "Tuohimaa"], ["Urska", "Klemenc"], ["Benedicte", "Vliegen"], ["Tomo", "Akutsu"], ["Olivia", "Vrettas"], ["Bernadetta", "Birkas"], ["Priyanka", "Tohan"], ["Ksenia", "Lopina"], ["Magdalena", "Ekert"], ["Catherine", "Newman"], ["Courtney", "Ulery"], ["Ana", "Miguel Ivern"], ["Emilie", "Van Boekel"], ["Mihaela", "Buzarnescu"], ["Yasmin", "Schnack"], ["Laia", "Santamaria Colomer"], ["Juanita", "Munoz"], ["Maria", "Zharkova"], ["Diana", "Nakic"], ["Dian", "Mayasari"], ["Nina", "Makarova"], ["Ellen", "Yeung"], ["Wakana", "Ichikawa"], ["Daniela", "Suarez"], ["Krystina", "Marcio"], ["Victoria", "Tseitlin"], ["Michelle", "Pang"], ["Miriam", "Steinhilber"], ["Kamonthip", "Saovana"], ["Bibiane", "Schoofs"], ["Barbara", "Kvelstein"], ["Diana", "Toma"], ["Yurina", "Koshino"], ["Rui", "Bao"], ["Daniela", "Scivetti"], ["Megumi", "Matsuyama"], ["Carolina Magalhaes", "Malheiros"], ["Maria Fernanda", "Hernandez"], ["Zineb", "Hilali"], ["Manuela", "Esposito"], ["Ashley", "Brooks"], ["Alexandra", "Gwizdowski"], ["Veronika", "Babayan"], ["Sandra Mirela", "Rus"], ["Phoebe", "Di Leo"], ["Trina", "Slapeka"], ["Julie", "Stas"], ["Alina", "Orcholska"], ["Gozde", "Unkaya"], ["Makiho", "Kozawa"], ["Amanda", "Craddock"], ["Anna", "Jugeli"], ["Lindsay", "Jones"], ["Miljana", "Jocic"], ["Katja", "Stemmer"], ["Natalia", "Rudnouskaya"], ["Sahar", "Amini Hajibashi"], ["Anne", "Redfern"], ["Mikayla", "Rogers"], ["Elizabeth", "Plotkin"], ["Cecile", "Bardoux"], ["Marcella", "Koek"], ["Erin", "Boast"], ["Eun Jung", "Yang"], ["Stephanie", "Jasper"], ["Nikolina", "Renic"], ["Ying", "Qian"], ["Gangothri", "Sandri"], ["Luisa", "Cantu"], ["Edit Katalin", "Suhajda"], ["Juliana", "Fernandes"], ["Hailee", "Elmore"], ["Laura Ioana", "Andrei"], ["Liset", "Brito Herrera"], ["Sara", "Pujals Perez"], ["Julia", "Helbet"], ["Petra", "Pajalic"], ["Saori", "Karikomi"], ["Paola", "Sprovieri"], ["Elizabeth", "Kobak"], ["Ilina", "Kroushovski"], ["Jana", "Derkasova"], ["Nicole", "Thyssen"], ["Romana", "Janshen"], ["Sabrina", "Mendez Dominguez"], ["Paulina", "Jorquera"], ["Elisa", "Mansell"], ["Amelia", "Frendo"], ["Ekaterina", "Makarova"], ["Zorica", "Petrov"], ["Katarina", "Krpan"], ["Erin", "Clark"], ["Hadjer", "Bouali"], ["Yamila", "Halle"], ["Shao Yuan", "Kao"], ["Claudina", "Covarrubias"], ["Yvette", "Hyndman"], ["Lauren", "Dossor"], ["Jessica", "Weeks"], ["Maha", "Berty"], ["Sydni", "Katz"], ["Wen Hsin", "Hsu"], ["Natalie", "Handler"], ["Paola", "Alvarado"], ["Michaela", "Vogel"], ["Juliana", "Franco"], ["Kim", "Roberts"], ["Stefania", "Vizireanu"], ["Anna", "Korzeniak"], ["Puleng", "Tlhophane"], ["Jana", "Kulova"], ["Sara", "Catarain Ruiz"], ["Aniko", "Kiss"], ["Nerea", "Irisarri Duran"], ["Maria", "Melihova"], ["Diane", "Cheymol"], ["Natasha", "Vieira"], ["Diana", "Popescu"], ["Nicole", "Kantor"], ["Eliana", "Bazan"], ["Dessislava", "Mladenova"], ["Sanaz", "Marand"], ["Daiana", "Negreanu"], ["Jazmin", "Hernandez"], ["Cristina Diana", "Ghinda"], ["Inga", "Beermann"], ["Anastasia", "Solomko"], ["Charlotte", "Martin"], ["Ekaterina", "Kosminskaya"], ["Barbara", "Oliveira"], ["Michela", "Pizzo"], ["Erica", "Tedoldi"], ["Georgiana", "Smyser"], ["Eleanor", "Peters"], ["Yulia", "Pilnik"], ["Ting Ting", "Lu"], ["Cristina", "Greco Naccarato"], ["Karen", "Nijssen"], ["Brittany", "Blalock"], ["Rebecca", "Parks"], ["Anna", "Kechko"], ["Maria Sole", "Barbieri"], ["Marika", "Petrosino"], ["Gabriela", "Necea"], ["Maria", "Miziouk"], ["Di", "Hu"], ["Yulia", "Fedossova"], ["Aleksandra", "Marjanovic"], ["Yuan Yuan", "Shi"], ["Katarina", "Milinkovic"], ["Mai", "Fujiwara"], ["Magdalena", "Bresson"], ["Chelsea", "Jones"], ["Beatriz", "Vall Cava De Llan"], ["Handra Anabela", "Mangulea"], ["Mariam", "Mikuchadze"], ["Sara", "Tegner"], ["Lavinia", "Timme"], ["Maria", "Gugel"], ["Fernanda", "Zacouteguy"], ["Miki", "Chinen"], ["Megan", "Broderick"], ["Sophie", "Cornerotte"], ["Roxanne", "Sammel"], ["Elena Stela", "Latea"], ["Da Hye", "Jeong"], ["Julia", "Bone"], ["Radana", "Holusova"], ["Aldana", "Caroleo"], ["Katrina", "Tsang"], ["Ceylan", "Engin"], ["Tara", "Iyer"], ["Laurene", "Fayol"], ["Joanna", "Carswell"], ["Jenny", "Frisell"], ["Erin", "Paul"], ["Marina", "Cossou"], ["Olivia", "Scarfi"], ["Manon", "Garcia"], ["Golda", "Rubina"], ["Elana", "Agranovich"], ["Cagla", "Urcu"], ["Maja", "Tadic"], ["Elrien", "De Villiers"], ["Sadietou Biguedenam", "Mayou"], ["Liege", "Vieira"], ["Rana", "El Derwy"], ["Linda", "Zahlavova"], ["Anna", "Movsisyan"], ["Dijana", "Stojic"], ["Lema", "Ateba"], ["Edita", "Raca"], ["Zena", "Williams"], ["Mireia", "Gonzalez Bosch"], ["Sanja", "Ancic"], ["Sofia", "Kvatsabaia"], ["Martina", "Lautenschlager"], ["Martina", "Andornino"], ["Anastasia", "Ivanina"], ["Teliana", "Pereira"], ["Lutfiye", "Esen"], ["Tatiany", "Tangerino"], ["Laura", "Peterzan"], ["Berta", "Morata Flaquer"], ["Selma", "Babic"], ["Michaela", "Kissell"], ["Sofia", "Thomaidou"], ["Nitisha", "Deodhar"], ["Alexis", "Dorr"], ["Ahinara", "Ramos"], ["Joanna", "Dobrowolska"], ["Mailen", "Auroux"], ["Ana Paula", "De La Pena"], ["Olga", "Koutseridi"], ["Cristina Mirela", "Prodanel"], ["Nadja", "Roma"], ["Raquel", "Castro"], ["Alice", "Hall"], ["Wen Ling", "Wang"], ["Irina", "Matiychyk"], ["Yurika", "Moriya"], ["Anja", "Poglajen"], ["Angela", "Werschel"], ["Chang", "Xu"], ["Natalia", "Niemiec"], ["Barbora", "Bachmanova"], ["Jessica", "Sweeting"], ["Akari", "Inoue"], ["Anastasia", "Poltoratskaya"], ["Laia", "Gonzalez Garrido"], ["Teresa", "Ferrer Lopez Cuervo"], ["Cecilia", "Lainez"], ["Yi Fan", "Xu"], ["Eloisa Maria", "Compostizo De Andres"], ["Silvia Elena", "Irimescu"], ["Stefania", "Boffa"], ["Megan", "Sporndli"], ["Jesica", "Escobar"], ["Justine", "Bourdon"], ["Alena", "Bayarchyk"], ["Jessica", "Mcclintock"], ["Katherine", "White"], ["Karina", "Porushkevich"], ["Caroline", "Dedering"], ["Oksana", "Djulai"], ["Maeva", "Thiebaud"], ["Kirsten", "Flower"], ["Nadia", "Abdala"], ["Anna", "Smith"], ["Avgusta", "Tsybysheva"], ["Melissa", "Laharrague"], ["Suhaila", "Jad Gomez"], ["Eirini", "Vasileiadou"], ["Justine", "Sutherland"], ["Lauren", "Sabacinski"], ["Johanna", "Larsson"], ["Chayenne", "Ewijk"], ["Anna", "Radova"], ["Cynthia", "Prieto Garcia"], ["Maja", "Milas"], ["Viktoria", "Kutuzova"], ["Shona", "Lee"], ["Juri", "Fukushima"], ["Olga", "Elkin"], ["Pola", "Olczak"], ["Lisa", "Wilkinson"], ["Caroline", "Courmont"], ["Anum", "Saeed"], ["Ophelie", "Vergnes"], ["Punchanok", "Khunpitak"], ["Maren", "Sundermeier"], ["Olga", "Govortsova"], ["Misleydis", "Diaz Gonzalez"], ["Ana", "Curto"], ["Alexandra", "Kudryavtseva"], ["Olusola", "Gbadamosi"], ["Selma", "Salkovic"], ["Lucie", "Pazderova"], ["Maria", "Spenceley"], ["Marit", "Nordfors"], ["Sandhya", "Nagaraj"], ["Audrey", "Laib"], ["Lucie", "Makrlikova"], ["Audrey", "Dujardin"], ["Nastja", "Recnik"], ["Daria", "Galyanova"], ["Alexandra", "Poorta"], ["Carla", "Suarez Navarro"], ["Alisa", "Kagukina"], ["Emilia", "Bindi"], ["Nadia", "Lee"], ["Desiree", "Schelenz"], ["Lauren", "Macfarlane"], ["Soetkin", "Van Deun"], ["Letizia", "Lo Re"], ["Petra", "Viskovic"], ["Lorena", "Valente"], ["Ketravee", "Attachoo"], ["Sarah", "Summerfield"], ["Laura", "Cuddon Large"], ["Wendy", "Kong"], ["Betina", "Jozami"], ["Agustina", "Lepore"], ["Hande", "Yesil"], ["Kristina", "Ufimtseva"], ["Ornella", "Gentile"], ["Juliana", "Umeki"], ["Yuki", "Shinada"], ["Aurelia", "Janeczek"], ["Liene", "Linina"], ["Rachael", "Hall"], ["Francesca", "Bonomelli"], ["Camilla", "Bortolon"], ["Gaia", "Lazzaroni"], ["Madura", "Ranganathan"], ["Alessia", "Cecchini"], ["Olivia", "Lukaszewicz"], ["Stephanie", "Vongsouthi"], ["Anja Vanessa", "Peter"], ["Jenny", "Saarnilina"], ["Courtney M", "Petero"], ["Yuka", "Yamaguchi"], ["Natalie", "Piquion"], ["Laila", "Ben Abderrahman"], ["Denise", "Mascherini"], ["Nina", "Septrita"], ["Paulina", "Pokorna"], ["Ivana", "Tomaic"], ["Agnieszka", "Zak"], ["Yuliya", "Lyndina"], ["Irina", "Adetu"], ["Natasha", "Hillyer"], ["Bo Ra", "Kwak"], ["Yasmine", "Sahyoun"], ["Sofi Helene", "Weckman"], ["Tifanie", "Treece"], ["I Hsuan", "Hwang"], ["Eleonora", "Sidjemileva"], ["Jenna", "Webster"], ["Kunykei", "Koichumananova"], ["Marrit", "Boonstra"], ["Jenna May", "Osborne"], ["Jacklyn", "Lambert"], ["Iva", "Buljubasic"], ["Irena", "Pavlovic"], ["Radoslava", "Serakova"], ["Laura", "Bsoul"], ["Veronika", "Ovcacikova"], ["Magdalena", "Rybarikova"], ["Chloe", "West"], ["Aleksandra", "Stankovic"], ["Andrea", "Remynse"], ["Anine Cornelius", "Lovdal"], ["Gabriela", "Gonzalez"], ["Kristiina", "Eskola"], ["Galyna", "Kosyk"], ["Yue", "Wan"], ["Marcela Guimaraes", "Bueno"], ["Katarina", "Anic"], ["Katsarina", "Zheltova"], ["Simone", "Templeton"], ["Ramona", "Erb"], ["Benedetta", "Davato"], ["Valeria", "Casillo"], ["Rebecca", "Bran"], ["Amanda", "Bran"], ["Ana Maria", "Gherman"], ["Magdalena", "Plucinski"], ["Fernanda", "Hermenegildo"], ["Freya", "Younes"], ["Viky", "Nunez Fuentes"], ["Rocio", "Galan"], ["Joana", "Roda"], ["Erina", "Nomiya"], ["Florentine", "Wengler"], ["Jasmin", "Mertens"], ["Stephanie", "Macfarlane"], ["Ashley", "Anderson"], ["Filipa", "Ribeiro"], ["Laurianne", "Henry"], ["Anja", "Nowak"], ["Shiran", "Ben Nun"], ["Catalina", "Vigener"], ["Maud", "Vigne"], ["Kehinde", "Amusan"], ["Raquel", "Pina"], ["Mao", "Suzuki"], ["Daria", "Petrovic"], ["In Young", "Hwang"], ["Wen Tzu", "Lai"], ["Bianca Ioana", "Bonifate"], ["Rocio", "Frausto"], ["Maria Gabriela", "Linares"], ["Slavina", "Kaplanska"], ["Patricia", "La Rovere"], ["Sargam", "Gupta"], ["Insa", "Villnow"], ["Martina", "Sebastiani"], ["Widhi", "Setyorini"], ["Ksenia", "Sidorova"], ["Tamara", "Madjeric"], ["Julia", "Goerges"], ["Laura", "Van De Stroet"], ["Hania", "Bouakel"], ["Daria", "Babushkina"], ["Jasmin", "Steinherr"], ["Patricia", "Vollmeier"], ["Tatsiana", "Kapshay"], ["Joana", "Santiago"], ["Mariana", "Gonzalez"], ["Catherine", "Fall"], ["Lena", "Litvak"], ["Amanat", "Thind"], ["Franci", "Betancourt"], ["Sandra", "Wikstrom"], ["Stephanie", "Sullivan"], ["Hilary", "Barte"], ["Beatriz", "Garcia Vidagany"], ["Patricia", "Cortes"], ["Injie", "Fawzy"], ["Jane", "Melichar"], ["Julie", "Uwague"], ["Alessandra", "Ferrazzi"], ["Daiana", "Bazzano"], ["Milica", "Zivanovic"], ["Guillermina", "Zukerman"], ["Raquel", "Guede Estevez"], ["Chantal", "Beetham"], ["Taylor", "Marable"], ["Ellah", "Nze"], ["Rose", "Ojonimi"], ["Danira", "Fabijanovic"], ["Sandra", "Mente Ladanai"], ["Carolina", "Petrelli"], ["Jennifer", "Stevens"], ["Erika", "Sema"], ["Lu", "Guo"], ["Daniela", "Castillo"], ["Franziska", "Goetz"], ["Veronika", "Kolarova"], ["Larissa", "Ferreira Melo"], ["Natia", "Gegia"], ["Arthi", "Duraisamy"], ["Verena", "Piccolo"], ["Saba", "Aziz"], ["Jessica", "Brouwer"], ["Ena", "Shimomura"], ["Florencia", "Molinero"], ["Carla", "Caetano"], ["Ayu Fani", "Damayanti"], ["Claudia", "Wasilewski"], ["Daniela", "Vukadinovic"], ["Wiem", "Ben Sedrine"], ["Lynn", "Philippe"], ["Anna", "Boada Plade Llorens"], ["Michelle", "Russ"], ["Julia", "Moriarty"], ["Ji Hyun", "Kim"], ["Tatiana", "Silbereisen"], ["Ofelya", "Poghosyan"], ["Yuliya", "Trubachova"], ["Tiffany", "Welcher"], ["Noelle", "Hickey"], ["Serena", "Strano"], ["Sara", "Jamil"], ["Angelina", "Gabueva"], ["Amoolya", "Raghunath"], ["Nicoleta Ana Maria", "Bara"], ["Tejashwi", "Narayana"], ["Anukriti", "Prasad"], ["Andra Elena", "Voinea"], ["Mathilda", "Engstrom"], ["Joanna", "Kacprzyk"], ["Elizabeth", "Akutsiya"], ["Magdalena", "Tokarczyk"], ["Christina", "Liles"], ["Sylwia", "Huminska"], ["Anamaria Alexandra", "Sere"], ["Yun Ling", "Ng"], ["Musangu", "Muchunga"], ["Manon", "Veldhorst"], ["Katie", "Orletsky"], ["Cameron", "Hubbs"], ["Mary", "Gambale"], ["Jennifer", "Holmberg"], ["Natalia", "Garay"], ["Ana Rosa", "Cabeza Candela"], ["Joanna", "Craven"], ["Melanie", "Gomila Bengtsson"], ["Rym", "Cherni"], ["Cameron", "Ellis"], ["Mahault", "De Claviere"], ["Sheena", "Jain"], ["Volha", "Duko"], ["Katerina", "Kramperova"], ["Karolina", "Domanski"], ["Dominika", "Kocwin"], ["Sarah", "Andrew"], ["Phillipa", "Reakes"], ["Agnes", "Szavay"], ["Ylva", "Kaiser"], ["Cristina", "Bala Abella"], ["Kristyna", "Sramkova"], ["Maggie", "Mello"], ["Erin", "Billett"], ["Elne", "Barnard"], ["Aleksandra", "Malyarchikova"], ["Hila", "Elster"], ["Andrea", "Ferrari"], ["Lais", "Souza"], ["Mia", "Gordon"], ["Maria", "Zlydnikova"], ["Vivian", "Segnini"], ["Tegan", "Edwards"], ["Martina", "Caciotti"], ["Beate", "Giller"], ["Ayushi", "Sinha"], ["Lea Katharina", "Jacob"], ["Shan Shan", "Li"], ["Ewa", "Kopczynska"], ["Michaella", "Krajicek"], ["Alexandra", "Glebova"], ["Whitney", "Wilson"], ["Jacquelynn", "Tang"], ["Sofia", "Shapatava"], ["Olga", "Ippolitova"], ["Andra Mihaela", "Coprean"], ["Tiffany", "Cornelius"], ["Simona", "Struzzolino"], ["Joanne", "Karaitiana"], ["Marianne", "Van Oppen"], ["Noemie", "Scharle"], ["Nikola", "Vajdova"], ["Monika", "Lalewicz"], ["Michaela", "Kopacin"], ["Stefanie", "Rath"], ["Julia", "Browne"], ["Kristina", "Radan"], ["Anais", "Van Cauter"], ["Ruth", "Sabbe"], ["Deborah", "Armstrong"], ["Bettina", "Mittermeier"], ["Alice", "Bellicha"], ["Antonia", "Kontozoudaki"], ["Jessica", "Palma"], ["Paula", "Hors Comadira"], ["Magdalena", "Wiecha"], ["Xi", "Lu"], ["Margarita", "Spicin"], ["Maibel", "Quintana"], ["Shuai", "Zhang"], ["Fernanda", "Ferreira"], ["Federica", "Grazioso"], ["Noriko", "Uehara"], ["Katarina", "Barclay"], ["Nadine", "Sabbagh"], ["Carlotta", "Lehner"], ["Amanda", "Marrow"], ["Florence", "De Vrye"], ["Ekaterina", "Jeritsheva"], ["Sonia", "Klamczynska"], ["Victoria", "Zotter"], ["Seo Kyung", "Kang"], ["Regina", "Kulikova"], ["Carmen", "Lopez Sanchez"], ["Stefanie", "Nunic"], ["Elizaveta", "Tochilovskaya"], ["Eylul", "Benli"], ["Maite", "Gabarrus Alonso"], ["Laura", "Manfredonia"], ["Sara", "Nilsson"], ["Federica", "Limone"], ["Ana Luiza", "Ferreira"], ["Evgeniya", "Rodina"], ["Megan", "Garcia"], ["Marina", "Melnikova"], ["Cecilia", "Gratian"], ["Erika", "Zanchetta"], ["Tanya", "Stoimenova"], ["Yi Jing", "Zhao"], ["Yanet", "Blanco Puentes"], ["Maddie", "Brooks"], ["Laura", "Noguera Aparicio"], ["Tatyana", "Ignatchenko"], ["Alja", "Zec Peskiric"], ["Lucia", "Sariscanova"], ["Martina", "Agarici"], ["Penporn", "Chantawannop"], ["Yu Xin", "Miao"], ["Petra", "Sunic"], ["Neus", "Rodriguez Menendez"], ["Haruka", "Suga"], ["Ellen", "Barry"], ["Amy", "Anstey"], ["Heinar", "Boltea"], ["Aleksandra", "Markovic"], ["Fleur", "Goedkoop"], ["Manami", "Hirata"], ["Wan Ting", "Liu"], ["Doron", "Muravnik"], ["Monika", "Kochanova"], ["Yuki", "Kusunose"], ["Stefania", "Carrizo"], ["Abbie", "Probert"], ["Ayaka", "Ito"], ["Kaja", "Podobnik"], ["Kirsten Andrea", "Weedon"], ["Sona", "Novakova"], ["Nuria", "Cascon Lapido"], ["Sara", "Perez Gonzalez"], ["Eugeniya", "Pashkova"], ["Gabriela", "Mejia Tenorio"], ["Monika", "Hadvigerova"], ["Dominique", "Wimmer"], ["Natalia", "Guevara"], ["Amina", "Rakhim"], ["Ashlee", "Brown"], ["Si Si", "Qiu"], ["Ellen", "Linsenbolz"], ["Rebecca", "Alessi"], ["Meera", "Kantaria"], ["Chen", "Liang"], ["Amandine", "Cazeaux"], ["Gabriela", "Vergara"], ["Gracia", "Fuentes"], ["Ekaterina", "Prozorova"], ["Romina", "Palmisano"], ["Elena", "Giurgiu Dorina"], ["Martina", "Sallusti"], ["Jara", "Ghadri"], ["Thavindra", "Ekanayake"], ["Maria Fernanda", "Alvarez Teran"], ["Giannina", "Minieri"], ["Nikola", "Matovicova"], ["Petra", "Putnik"], ["Alexandra", "Panova"], ["Maritza", "Hernandez"], ["Vania", "King"], ["Raluca", "Olaru"], ["Nevena", "Selakovic"], ["Florella", "Moggia"], ["Sanjana", "Kapur"], ["Agnieszka", "Radwanska"], ["Charlotte", "Soubrie"], ["Jillian", "Oneill"], ["Adriana", "Alvarez Tostado"], ["Steffi", "Weterings"], ["Yasmin", "Hamza"], ["Jenny", "Drummond"], ["Pauline", "Ribot"], ["Jessica", "Gardefjord"], ["Julia Maria", "Navarro Navarro"], ["Karoline", "Steiro"], ["Marne", "Roos"], ["Micaela", "Hein"], ["Lara", "Conrad"], ["Estefania", "Plaza"], ["Paloma", "Escobedo"], ["Vlada", "Ekshibarova"], ["Karla", "Gallardo"], ["Hanna", "Andreyeva"], ["Tina", "Pieger"], ["Laura", "Milner"], ["Melissa", "Ravestein"], ["Sara", "Neto"], ["Carina", "Weisser"], ["Raphaela", "Chaves Borges"], ["April", "Albertini"], ["Selina", "Guns"], ["Hedda", "Wolmarans"], ["Giulia", "Gardani"], ["Brittany", "Teei"], ["Florina", "Nosca"], ["Mariella", "Greschik"], ["Alexandra", "Sakalaridi"], ["Federica", "Dambrosio"], ["Sofi", "Papadopoulou"], ["Valentina", "Piccolo"], ["Conchita Corazon", "Zoleta"], ["Julia", "Cohen"], ["Gabriela", "Vieira"], ["Zorana", "Anastasijevic"], ["Linfeifei", "Fan"], ["Mikaela", "Hockman"], ["Celine", "Rolly"], ["Mariya", "Tverdikova"], ["Cristina", "Sanchez Quintanar"], ["Karina", "Venditti"], ["Natalia", "Orlova"], ["Aline", "Berkenbrock"], ["Elisaveta", "Pironkova"], ["Fatima", "El Allami"], ["Lalatiana", "Randriamanantena"], ["Neha", "Rana"], ["Komang Sri", "Maryati"], ["Simonetta", "Miori"], ["Joanna", "Matuszczyk"], ["Farida", "Karaieva"], ["Anna", "Wishink"], ["Florence", "Fleury"], ["Gabriela", "Roux"], ["Katarina", "Mlcochova"], ["Mona", "Mansour"], ["Beatriz", "Juan Miranzo"], ["Myriam", "Sopel"], ["Christina", "Tan"], ["Maria Daniela", "Yanez"], ["Leonie", "Guijt"], ["Ekaterina", "Tsiklauri"], ["Sherazad", "Benamar"], ["Valerie", "Verhamme"], ["Sherazad", "Reix"], ["Geanina", "Mircea"], ["Anastasia", "Petukhova"], ["Claire", "Birnie"], ["Xenia", "Tsilimigra"], ["Ivana", "Culkovic"], ["Estelle", "Guisard"], ["Anna", "Fitzpatrick"], ["Carlota", "Schwartz Caballe"], ["Ornella", "Caron"], ["Daria", "Razarenova"], ["Engela", "Olivier"], ["Karina", "Ahuja"], ["Stacey", "Grant"], ["Rie", "Koganei"], ["Aodhnait", "Lombard"], ["Joanna", "Szymczyk"], ["Sarai", "Torres"], ["Patience", "Onebamhoin"], ["Kelcy", "Mckenna"], ["Maksymiliana", "Wandel"], ["Anna", "Geissler"], ["Navodi", "De Zoysa"], ["Delia", "Damaschin"], ["Yuriko", "Sakai"], ["Jelena", "Durisic"], ["Kamilia", "Daya"], ["Anamika", "Bhargava"], ["Kimberley", "Ruxton"], ["Maya", "Pitenina"], ["Helene", "Auensen"], ["Shayna", "Mcdowell"], ["Karolina", "Navratilova"], ["Paulina", "Luquin"], ["Evelyn", "Ploner"], ["Ashley", "Silva"], ["Dilara", "Naibi"], ["Grace", "Hannah"], ["Hui", "Chen"], ["Catarina", "Muller"], ["Prudence", "Teitzel"], ["Elizabeth", "Adams"], ["Zora", "Vlckova"], ["Marlot", "Meddens"], ["Letizia", "Lardani"], ["Jessica", "Aguilera"], ["Nicole", "Vaidisova"], ["Klaudia", "Malenovska"], ["Paulina", "Velarde Magana"], ["Naomi", "Cavaday"], ["Taja", "Mohorcic"], ["Dania", "Navarro"], ["Vishakha", "Sheoran"], ["Josefin", "Hjertquist"], ["Marina", "Kojanova"], ["Rika", "Tatsuno"], ["Abigail", "Royston"], ["Paola", "Cigui"], ["Jenny", "Swift"], ["Alison", "Shemon"], ["Nathalia", "Rossi"], ["Ayana", "Tajima"], ["Marie Pier", "Huet"], ["Oana", "Archip"], ["Fabiana", "Chiaparini"], ["Ebelechukwu", "Chukwuweteli"], ["Sylwia", "Zagorska"], ["Vassiliki", "Doriza"], ["Ana", "Ruiz Fernandez"], ["Estelle", "La Porte"], ["Maria Eugenia", "Roca Recarey"], ["Verusa", "Dias"], ["Marta", "De Pablo Bota"], ["Jing Jing", "Lu"], ["Ariane", "Masschelein"], ["Mariaryeni", "Gutierrez"], ["Dominika", "Cibulkova"], ["Amra", "Sadikovic"], ["Alessia", "Bertoia"], ["Elizaveta", "Titova"], ["Barbara", "Rush"], ["Michaela", "Ince"], ["Madona", "Najarian"], ["Paola", "Capella"], ["Marina", "Ferreira"], ["Aleksandra", "Razumova"], ["Brie", "Whitehead"], ["Paulina", "Mielewczyk"], ["Alessandra", "Pennesi"], ["Lucia", "Gatti"], ["Kimberly", "Couts"], ["Samantha", "Powers"], ["Stephanie", "Jeanes"], ["Megan", "Price"], ["Maya", "Gaverova"], ["Olivia", "Mislov"], ["Ezgi", "Albayrak"], ["Tatsiana", "Teterina"], ["Emma Sofia", "Helisten"], ["Camille", "Maisonnave"], ["Evelyn", "Mayr"], ["Lauren", "Jones"], ["Mirna", "Marinovic"], ["Lydia", "Lopez Lopez"], ["Maria Elena", "Badillo"], ["Maria", "Sinigaglia"], ["Xi Jing", "Hong"], ["Bianca", "Aboubakare"], ["Zina", "Bretzel"], ["Ekaterina", "Krylova"], ["Denise", "Dy"], ["Elisabeth", "Pleyer"], ["Ines", "Santos"], ["Kristina", "Doerr"], ["Loredana", "Serbu"], ["Mia", "Kasih"], ["Dorotea", "Kraljevic"], ["Rayssa", "Haddad"], ["Aleksandra", "Madzik"], ["Lauren", "Shumate"], ["Goele", "Lemmens"], ["Agni", "Stefanou"], ["Adina Maria", "Gabor"], ["Mihaela", "Giban"], ["Ji Hee", "Lee"], ["Marina", "Skvortsova"], ["Natasha", "Swanepoel"], ["Estefiana", "Greco"], ["Molly", "Scott"], ["Wanjika", "Ngaruiya"], ["Jennifer", "Meredith"], ["Aleksandra", "Kulikova"], ["Olivia", "Matuszak"], ["Juliana", "Alzate"], ["Prerana", "Prathap"], ["Prathana", "Prathap"], ["Eva", "Pigova"], ["Mia", "Sacca"], ["Rita", "Bengelloun Touimy"], ["Nadira", "Burikhodjaeva"], ["Salome", "Chachkhunashvili"], ["Akshitha", "Basavaraju"], ["Vanja", "Galijasevic"], ["Alexandra", "Dulgheru"], ["Lesia", "Tsurenko"], ["Wing Yau Venise", "Chan"], ["Daksha", "Mulay"], ["Leticia", "Demichelli"], ["Matilde", "Herrera Govantes"], ["Patrycja", "Chackiewicz"], ["Patricia", "Veresova"], ["Jennifer", "Yen"], ["Anna Giulia", "Remondina"], ["Zoe", "Bambridge"], ["Ah Ren", "Han"], ["Lais", "Ogata"], ["Natasha", "Lotuffo"], ["Doris", "Kuselj"], ["Adla", "Mahic"], ["Ying Ying", "Duan"], ["Maya", "Kato"], ["Shweta", "Kakhandki Gadigeppa"], ["Chloe", "Mielgo Herrera"], ["Kanako", "Ishida"], ["Jelena", "Savic"], ["Giorgia", "Pozzan"], ["Macarena", "Rodriguez Capilla"], ["Vanja", "Radunovic"], ["Ina", "Kauppila"], ["Ana Lilyan", "Guzman"], ["Timea", "Bacsinszky"], ["Katharina", "Killi"], ["Anahita", "Jagtiani"], ["Melissa Rose", "Orteza"], ["Stefania", "Imolesi"], ["Raja Rajeshwari", "Pamidimukkala Venkata"], ["Martina", "Fratini"], ["Anna", "Gorunovich"], ["Carolina", "Garcia"], ["Ana Clara", "Duarte"], ["Pei Ling", "Tong"], ["Nazari", "Urbina"], ["Laura", "Morrill"], ["Tamsyn", "Briscoe"], ["Rana", "Zafer"], ["Francesca", "Dubras"], ["Elena", "Kazakova"], ["Kate", "Antosik"], ["Ximena", "Aguilar"], ["Mirna", "Cicak"], ["Yoshimi", "Kawasaki"], ["Shanki", "Dandeniya"], ["Ioana", "Boronea"], ["Emiko", "Ito"], ["Ashley", "Weinhold"], ["Anastasia", "Revzina"], ["Marta", "Arnes Cacho"], ["Sung Hee", "Shin"], ["Alexandra", "Derungs"], ["Michelle", "Jlilati"], ["Mariana", "Fernandez Larrandaburu"], ["Sabina", "Warta"], ["Maria Paula", "Bagnati"], ["Carolina", "Bokenhans"], ["Jessica", "Jackson"], ["Fernanda", "Perrotta"], ["Ines", "Pereira"], ["Tea", "Faber"], ["Hana", "Birnerova"], ["Milena", "Tona"], ["Stephanie", "Brown"], ["Nicole", "Rottmann"], ["Julia", "Huschke"], ["Tatiana", "Illova"], ["Mirte", "De Bakker"], ["Cristina", "Valladares Nunez"], ["Stanislava", "Cozirscaia"], ["Tanya", "Germanlieva"], ["Merritt", "Emery"], ["Shani", "Arnon"], ["Estefania", "Donnet"], ["Anthea", "Murfet"], ["Galina", "Vishnikina"], ["Sirui", "He"], ["Alona", "Fomina"], ["Saori", "Miyamoto"], ["Nina", "Pantic"], ["Elizaveta", "Zaytseva"], ["Trelsie", "Sadler"], ["Reka", "Zsilinszka"], ["Subbadharmi", "Sundaram"], ["Appollonia", "Melzani"], ["Hui Chi", "Huang"], ["Christala", "Andrews"], ["Natalia", "Cheng"], ["Latifah", "Al Sayed Omar"], ["Agatha", "Zmijak"], ["Kinnie", "Laisne"], ["Elena", "Jetcheva"], ["Kamonwan", "Thongsaner"], ["Nancy", "El Molla"], ["Erina", "Kikuchi"], ["Linda", "Hricistova"], ["Hannah", "Fick"], ["Alisa", "Kleybanova"], ["Paula", "Dinuta"], ["Florence", "Na"], ["Ashmitha", "Easwaramurthi"], ["Katia", "Viera Erbach"], ["Diana", "Narzikulova"], ["Andrea", "Rebrova"], ["Paula Catalina", "Robles Garcia"], ["Machiko", "Shigefuji"], ["Kate", "Zueva"], ["Holly", "Cao"], ["Ondine", "Trompette"], ["Anastasia", "Meglinskaya"], ["Ghizlane", "Hatim"], ["Vesna", "Dolonc"], ["Elina", "Gasanova"], ["Chu", "Chu"], ["Dania", "Musina"], ["Eva", "Kadlecova"], ["Daniela", "Amelunge"], ["Kristina", "Bozinovska"], ["Taylor", "Ormond"], ["Manumea", "Durie"], ["Emily", "Fraser"], ["Roxane", "Vaisemberg"], ["Aude", "Vermoezen"], ["Mary", "Liu"], ["Andra Edith", "Marinescu"], ["Ivana", "Belejova"], ["Suncica", "Strkic"], ["Carolin", "Weikard"], ["Maria Anna", "Koutaniti"], ["Kim", "Van Der Horst"], ["Petra", "Vogel"], ["Alexandra", "Tufa"], ["Maria Luz", "Perlini"], ["Corinna", "Dentoni"], ["Majdouline", "Akrate"], ["Chika", "Terasawa"], ["Kateryna", "Nezhura"], ["Tshidiso", "Mosinyi"], ["Victoria", "Azarenka"], ["Sousan", "Massi"], ["Laura", "Sadria"], ["Rebecka", "Persson"], ["Denise", "Muresan"], ["Mikaela", "Martinez"], ["Carla", "Lorenzo Jodar"], ["Vana", "Sutalo"], ["Denise", "Kirbijikian"], ["Hulya", "Esen"], ["Maja", "Sujica"], ["Laura", "Morales"], ["Sesil", "Karatantcheva"], ["Karolyn", "Grymel"], ["Erika", "Perez"], ["Ajla", "Behram"], ["Dena", "Laadan"], ["Melissa", "Garcia"], ["Lauren", "Hankle"], ["Mariana", "Duque Marino"], ["Ia", "Jikia"], ["Valentina", "Ramirez"], ["Alessandra", "Caprara"], ["Anna", "Simkova"], ["Imane", "Toubal"], ["Andrea", "Kwong"], ["Martina", "Gregoric"], ["Krystina", "Titz"], ["Saori", "Nakamura"], ["Irene", "Santos Bravo"], ["Lynn", "Blau"], ["Barbora", "Vykydalova"], ["Sara", "Secco"], ["Yung Jan", "Chan"], ["Maria Laura", "Scapigliati"], ["Megan", "Toole"], ["Annie", "Goransson"], ["Arianna", "Magagnoli"], ["Yevgeniya", "Rezepkina"], ["Natalia", "Gonzalez Martinez"], ["Kristen", "Rafael"], ["Anna", "Mydlowska"], ["Vivien", "Silfany Tony"], ["Silvia", "Bastici"], ["Ai", "Yamamoto"], ["Mariya", "Kovaleva"], ["Roxanne", "Ellison"], ["Alexandra", "Kovacs"], ["Melanie", "Delsart"], ["Lucia", "Huber"], ["Maria", "Christensen"], ["Astrid", "Besser"], ["Kerstin", "Peckl"], ["Jennifer", "Furnari"], ["Nicole", "Smith"], ["Kari", "Wig"], ["Lisa", "Sutton"], ["Zlatka", "Petrova"], ["Paola", "Orozco"], ["Alexandra", "Odell Michels"], ["Myrte", "Molenveld"], ["Sandra", "Fornes Marques"], ["Varatchaya", "Wongteanchai"], ["Ana Maria", "Constantinescu"], ["Sofia", "Barletta"], ["Anastasia", "Zhovtiuk"], ["Bolan", "Tarkoe"], ["Natsumi", "Yokota"], ["Oana Alexandra", "Stanica"], ["Maria", "Barboutova"], ["Marietta", "Bigus"], ["Ines", "Kreilinger"], ["Alexa", "Glatch"], ["Natalia", "Semenenko"], ["Michelle", "Brycki"], ["Lenka", "Dzygovska"], ["Yulia", "Kulikova"], ["Meli", "Garcia Truchado"], ["Neha Sujit", "Nair"], ["Annabel", "Bann"], ["Bin Jie", "Luo"], ["Manana", "Shapakidze"], ["Jennifer", "Rabot"], ["Guadalupe", "Moreno"], ["Joanna", "Zwirbulis"], ["Bhavani", "Tirumurti"], ["Stephanie", "Weinstein"], ["Jessica", "Young"], ["Eliza Adriana", "Matache"], ["Nicky", "Van Dyck"], ["Nivea", "Bezich Cavinta"], ["Lucie", "Sipkova"], ["Katalin", "Szekely"], ["Lacey Jo", "Coleman"], ["Michaela", "Silesova"], ["Sabine", "Lisicki"], ["Alessandra", "Di Batte"], ["Zuzana", "Michalicova"], ["Alina", "Gershman"], ["Lauren", "Greco"], ["Galina", "Semenova"], ["Romina", "Puglia"], ["Xenia", "Samoilova"], ["Anna", "Larkina"], ["Ana Regina", "Buenviaje"], ["Line", "Al Ghannam"], ["Heatherm", "Steinbauer"], ["Mia", "Drobnjak"], ["Jane", "Huh"], ["Ramona", "Sarba"], ["Szu Yu", "Lin"], ["Yi", "Yang"], ["Maria", "Guerreiro"], ["Antonia", "Fohse"], ["Cagla", "Buyukakcay"], ["Angelica", "Torres"], ["Nadina", "Secerbegovic"], ["Tracy", "Castillo"], ["Maria Eugenia", "Torres"], ["Ana", "Bezjak"], ["Lauren", "Albanese"], ["Gabriela", "Rangel"], ["Yukari", "Kishiro"], ["Mihaela Florina", "Bunea"], ["Jilke", "Nelord"], ["Insa", "Wickmann"], ["Tinusha", "Sivaganam"], ["Yoko", "Naito"], ["Alexandra", "Levianska"], ["Camila", "Munoz Quintanilla"], ["Tatiana", "Varela"], ["Madalina", "Florea"], ["Miki", "Ueno"], ["Ana", "Savic"], ["Sara", "Celma Boix"], ["Joanna", "Mather"], ["Alexandra", "Ulbrichtova"], ["Nadine", "Fahoum"], ["Benedetta", "Sabatini"], ["Hanna", "Malakhovich"], ["Kun Hee", "Kim"], ["Courtney", "Spafford"], ["Yuri", "Gonto"], ["Michaela", "Pochabova"], ["Sharani", "Gaini"], ["Priscila", "Martinez"], ["Yuan", "Jia"], ["Marina", "Yudanov"], ["Andrea", "Strasakova"], ["Sara", "Julio"], ["Tuvana", "Denizci"], ["Maria", "Mosolova"], ["Sophia", "Bergner"], ["Yanina", "Wickmayer"], ["Shivika", "Burman"], ["Yana", "Shulaeva"], ["Niroshita", "Madanala"], ["Abigail", "Olivier"], ["Eve", "Castaing"], ["Katie", "Welch"], ["Ratchaya", "Chaichanachaicharn"], ["Denisa", "Chiriacu"], ["Anouk", "Tigu"], ["Maria Alexandra", "Maldonado"], ["Julia", "Sagan"], ["Ling", "Zhang"], ["Michaela", "Kucharova"], ["Fumi", "Kawatoko"], ["Kir", "Kemp"], ["Amanda", "Elliott"], ["Farwa", "Husain"], ["Alicia", "De La Capilla"], ["Bing Jie", "Luo"], ["Natalie", "Pluskota"], ["Sarah", "Behbehani"], ["Parija", "Maloo"], ["Ariane", "Maack"], ["Madlen", "Kadur"], ["Renee", "Binnie"], ["Marina", "Nicolas Chueca"], ["Kairangi", "Vano"], ["Andrea", "Hernandez"], ["Isabel", "Mas Breto"], ["Veronika", "Sepp"], ["Niamh", "Coveney"], ["Veronica Ruo Qi", "Li"], ["Clarisse", "Baca"], ["Yuki", "Hasegawa"], ["Emelyn", "Starr"], ["Nungnadda", "Wannasuk"], ["Debora", "Castany Muniente"], ["Uthumporn", "Pudtra"], ["Remeice", "Ellis"], ["Rana", "Ramez"], ["Inge", "Spronk"], ["Karina", "Kedzo"], ["Ayumi", "Okuma"], ["Kotomi", "Takahata"], ["Katherine", "Hoepelman"], ["Jia Jing", "Lu"], ["Lara", "Albini"], ["Malgorzata", "Glodkowska"], ["Natalia", "Glodkowska"], ["Tereza", "Belblova"], ["Wei Ping", "Lee"], ["Ginebra", "Mostajo Estrada"], ["Juliet", "Bocklet"], ["Aya", "Sato"], ["Shinobu", "Kiribayashi"], ["Shalini", "Sahoo"], ["Andrea", "Oates"], ["Jodie", "Mckinnon"], ["Dominika", "Zaprazna"], ["Chi Fan", "Liu"], ["Amel", "Benhaj"], ["Katarina", "Lerga"], ["Maria", "Sanchez"], ["Tiffany", "Kurniawan"], ["Natasa", "Zoric"], ["Asmaa", "Salah Hassan"], ["Claire", "Bartlett"], ["Sara", "Marcionni"], ["Alexandra", "Dachos"], ["Stephanie", "Theiler"], ["Monique", "Lynch"], ["Linda", "Aqvist"], ["Anna", "Agamennone"], ["Miyu", "Date"], ["Marta", "Ruiz Fernandez De Castro"], ["Samantha", "Noble"], ["Ester", "Baschirotto"], ["Caroline", "Beaulieu"], ["Elisa", "Sarmiento Aranda"], ["Natalie", "Fehse"], ["Maria", "Prishlyak"], ["Shilpi", "Jaiswal"], ["Margaryta", "Pashket"], ["Judit", "Nagy"], ["Vivian", "Cassimer"], ["Natalie", "Kolganova"], ["Valeria", "Petrovich"], ["Anastasia", "Ulikhina"], ["Amy", "Sargeant"], ["Nives", "Pavlovic"], ["Chelsea", "Preeg"], ["Grace", "Leake"], ["Cassandra", "Herzberg"], ["Dominice", "Ripoll"], ["Anastasia", "Kharchenko"], ["Anastasia", "Malhotra"], ["Ioana Alexandra", "Oprea"], ["Latrell", "Reed"], ["Ksenia", "Palkina"], ["Pairin", "Panjasilpa"], ["Mika", "Urbancic"], ["Briggitt", "Marcovich"], ["Amparo", "Botella Boix"], ["Ludovica", "Perri"], ["Elisa", "Peth"], ["Ioana Alexandra", "Bara"], ["Paloma", "Navarro Montes De Oca"], ["Arina", "Rodionova"], ["Kelly", "Gebert"], ["Julia", "Livotova"], ["Karla", "Miranda"], ["Irina", "Letseva"], ["Amira", "Benaissa"], ["Tzu Chen", "Hsu"], ["Cristina", "Vasco"], ["Naoko", "Suzuki"], ["Efrat", "Mishor"], ["Caitlyn", "Baines"], ["Margarita", "Vasileva"], ["Kelsey", "Anonsen"], ["Maria", "Komissarova"], ["Yu Chu", "Juan"], ["Nikki", "Prosser"], ["Natasha", "Marks"], ["Keri", "Wong"], ["Ester", "Masuri"], ["Ingrid Esperanza", "Vargas Calvo"], ["Sanne", "Bakker"], ["Ana", "Perlain"], ["Katerina", "Vankova"], ["Simone", "Kalhorn"], ["Darya", "Nakidaylo"], ["Melinda", "Akerbrant Bengtsson"], ["Victoria", "Ford"], ["Julia", "Glushko"], ["Valeria", "Pulido Velasco"], ["Caroline", "Magnusson"], ["Ece", "Firat"], ["Caroline", "Stevens"], ["Victoria", "Brook"], ["Tammi", "Patterson"], ["Marcela", "Fonseca Villarreal"], ["Carmen", "Lopez Rueda"], ["Julia", "Osmolets"], ["Tamara", "Dobrovolna"], ["Ni", "Zhou"], ["Lindsey", "Hardenbergh"], ["Laura", "Gilbert"], ["Ceara", "Oneill"], ["Andrea", "Yacaman"], ["Yoon Young", "Jeong"], ["Yi Ju", "Chen"], ["Dan Ni", "Jiang"], ["Jennifer", "Allan"], ["Irina Alexandra", "Paraschiv"], ["Alina", "Petras"], ["Maria", "Bru Ballara"], ["Jamie", "Hampton"], ["Kristy", "Frilling"], ["Saori", "Oda"], ["Sindy", "Lochon"], ["Bianca", "Spinassi"], ["Jovana", "Petrov"], ["Stefana", "Petrov"], ["Ghizlene", "Douballah"], ["Thi Tam Hao", "Tran"], ["Caroline", "Lilley"], ["Yanisleidis", "Fernandez"], ["Marina", "Canals Bennassar"], ["Alexandria", "Walters"], ["Haruka", "Terashi"], ["Elitsa", "Mileva"], ["Maria", "Shalaeva"], ["Patricia", "Salles Rousseau Guedes"], ["Stefi", "Gjine"], ["Janine", "Weinreich"], ["Roana", "Schiopu"], ["Zhanna", "Panfilkina"], ["Burce", "Kurkan"], ["Teona", "Tsertsvadze"], ["Marcela", "Rivero"], ["Nina", "Vulovich"], ["Jin", "Huang"], ["Mariam", "Kurdadze"], ["Kristina", "Bogacheva"], ["Stacey", "Lee"], ["Ramona", "Czakon"], ["Juliana", "Moscoso"], ["Alison", "Bai"], ["Shiho", "Akita"], ["Regina", "Husak"], ["Emma", "Smith"], ["Tatiana", "Bua"], ["Shiori", "Araki"], ["Antonia", "Kolovou"], ["Carolina", "Delgado"], ["Zhi Xian", "Guo"], ["Dayna", "Grazette"], ["Meutia", "Sabrina"], ["Trudie", "Du Toit"], ["Andjela", "Kankaras"], ["Alejandra", "Gamboa"], ["Paola", "Villalon"], ["Alize", "Cornet"], ["Chu Xian", "Huang"], ["Laura Zsofia", "Biro"], ["Stephanie", "Parker"], ["Mariana", "Diaz De Leon"], ["Risa", "Hasegawa"], ["Zuzana", "Zlochova"], ["Valentina", "Novelo"], ["Nina", "Zander"], ["Astrid", "Thomsen"], ["Mireia", "Recasens Horta"], ["Madeleine", "Dax"], ["Julie", "Verdy"], ["Kai Lin", "Zhang"], ["Ya Ying", "Wang"], ["Dilyara", "Saidkhodjaeva"], ["Marina", "Takimura"], ["Yana", "Kireeva"], ["Esther", "Scheirlynck"], ["Aya", "Minokoshi"], ["Stephanie", "Herz"], ["Bridget", "Healy"], ["Anastasia", "Kontratevidi"], ["May", "El Wardany"], ["Daria", "Tuaeva"], ["Denisa", "Dumitrescu"], ["Eirini", "Georgatou"], ["Chloe", "Jones"], ["Daniela", "Cociorba"], ["Olivia", "Smith"], ["Martina", "Granatelli"], ["Meng", "Liu"], ["Chane", "Hines"], ["Anna", "Tatishvili"], ["Marta", "Espigado Delgado"], ["Lavinia", "Sereteanu"], ["Chiao Fang", "Lo"], ["Yagmur Basak", "Gone"], ["Laura", "Moll Bagur"], ["Alena", "Nogolova"], ["Lara", "Rafful"], ["Alejandra", "Garcia"], ["Christina", "Seib"], ["Anastasia", "Balyuk"], ["Rachel", "Houpapa"], ["Mu Ying", "Chen"], ["Zi Jun", "Yang"], ["Rosalia", "Alda"], ["Mia", "Liimatainen"], ["Fabiana", "Palcic"], ["Abigail", "Greif"], ["Rachel", "Manasse"], ["Andrea Fernanda", "Flores"], ["Natascha", "Kennis"], ["Daniela", "Islamaj"], ["Deisy", "Bolivar Espinosa"], ["Stephanie", "Vogt"], ["Mara", "Zovko"], ["Dwi", "Ariyana"], ["Nina", "Sertic"], ["Ekaterina", "Zapadalova"], ["Natalie", "Barbir"], ["Natalia", "Lozano Anton"], ["Julia", "Gavenko"], ["Ksenija", "Grinshpun"], ["Teresa", "Araujo"], ["Anastasia", "Usova"], ["Paula", "Jaime Agramon"], ["Yulia", "Solonitskaya"], ["Xuan Yu", "Guo"], ["Marija", "Mirkovic"], ["Alice", "Tisset"], ["Sasirin", "Borwornchokchai"], ["Luiza", "Coman"], ["Martha", "Sanchez"], ["Daniela", "Carp"], ["Shivani", "Mysore Sreekantiah"], ["Chen", "Astrogo"], ["Mariya", "Ryzhova"], ["Maryna", "Kariuk"], ["Kelly", "Couturier"], ["Sara", "Czubak"], ["Anastasia", "Butcovscaia"], ["Naomi", "Broady"], ["Paula", "Alvarez Pino"], ["Mariana", "Demichelli Vergara"], ["Justina", "Derungs"], ["Melanie", "Delannoy"], ["Maria Emilia", "Ponton Caamano"], ["Antonia", "Smallbone"], ["Ruo Nan", "Zhang"], ["Esmira", "Gheisary"], ["Artijeta", "Goxhuli"], ["Ai", "Taira"], ["Busra", "Demirtas"], ["Michelle", "Schroeder"], ["Yuuki", "Tanaka"], ["Hye Jin", "Byun"], ["Arletis", "Fernandez"], ["Aliaa", "Kamal"], ["Roberta", "Gerovac"], ["Petra", "Kvitova"], ["Kara", "Knight"], ["Qian", "Wang"], ["Stefanie", "Voegele"], ["Cristina Madalina", "Stancu"], ["Judith", "Collado"], ["Claudine", "Paulson"], ["Ayumi", "Morita"], ["Juliette", "Coupez"], ["Sophie", "Proctor"], ["Yue Yue", "Hu"], ["Ivana", "Milutinovic"], ["Elena", "Nartsissova"], ["Lisa", "Weidenbruck"], ["Katharina", "Brown"], ["Anita", "Paliiska"], ["Dinali", "De Silva"], ["Maureen", "Rielley"], ["Mccall", "Jones"], ["Eugenia", "Vertesheva"], ["Marta", "Rodriguez Carbajo"], ["Renee", "Reinhard"], ["Parvathy", "Vijayan"], ["Inga", "Audrina"], ["Oriana", "Escalante"], ["Olfa", "Dhaoui"], ["So Hyun", "Bae"], ["Julia", "Chernyaeva"], ["Lara", "Pujol Rotger"], ["Roberta", "Greco"], ["Anastasia", "Wagner"], ["Kamolnadda", "Thumrongluck"], ["Ekin", "Koca"], ["Leticia", "Costas"], ["Farah", "Abougeib Selo"], ["Martina", "Erceg"], ["Kateryna", "Byelcheva"], ["Sandra", "Dynka"], ["Paola", "Calderon"], ["Sofiko", "Sharangia"], ["Kirsten", "Magi"], ["Sofia", "Vignau"], ["Emily", "Zanussi"], ["Iveta", "Guneva"], ["Laura", "Babet"], ["Huan", "Li"], ["Charlotte", "Bossy"], ["Mariana", "Levova"], ["Ji Hye", "Shin"], ["Yuliya", "Kalabina"], ["Janina", "Toljan"], ["Courtney", "Clayton"], ["Maria", "Bayon"], ["Lisa", "Brinkmann"], ["Stephanie", "Kent"], ["Erin", "Wilbert"], ["Hitomi", "Saito"], ["Anabel", "Pollan"], ["Tamara", "Stojkovic"], ["Maria Paula", "Hernandez"], ["Sandra", "Podolak"], ["Sandra", "Roma"], ["Paloma", "Diaz Sada"], ["Malena", "Gordo"], ["Lisa", "Wagner"], ["Dredi Inia", "Ghinda"], ["Bianca", "Dumitrascu"], ["Amitha", "Arudpragasam"], ["Pavla", "Smidova"], ["Martina", "Trierweiler"], ["Montserrat", "Blasco Fernandez"], ["Madison", "Brengle"], ["Louise", "Grangette"], ["Carlota", "Calve Munoz"], ["Na Ri", "Kim"], ["Nikolina", "Dominikovic"], ["Lillian", "Aviles"], ["Petra", "Mokra"], ["Harshini", "Reddy"], ["Genevieve", "Lorbergs"], ["Aleksandra", "Zawadzka"], ["Alexandra", "Martin Sanchez"], ["Juan Rosalia", "Tejoprayitno"], ["Sorana", "Cirstea"], ["Martina", "Santoni"], ["Frederike", "Putthoff"], ["Rosaura", "Ramirez Vega"], ["Ekaterina", "Pushkareva"], ["Kana", "Aoki"], ["Elitsa", "Kostova"], ["Julie", "Herve"], ["Hayley", "Ericksen"], ["Anja", "Vreg"], ["Niltooli", "Wilkins"], ["Nina", "Mujezinovic"], ["Anastasija", "Sevastova"], ["Michelle", "Suarez"], ["Jessy", "Rompies"], ["Deyanirr", "Solorio"], ["Diana Madalina", "Zainea"], ["Marina", "Lazic"], ["Carolyn", "Mcveigh"], ["Naa Shika", "Adu"], ["Denisa", "Dolejsova"], ["Ayse Ece", "Yavuz"], ["Barbora", "Matusova"], ["Bibiana", "Almeida"], ["Katarina", "Gajic"], ["Martyna", "Majewska"], ["Ine", "Nowe"], ["Madalina", "Lupu"], ["Sladjana", "Saveljic"], ["Manuela", "Pietzuch"], ["Marlena", "Pietzuch"], ["Carlista", "Mohammed"], ["Jade", "Windley"], ["Laura", "Pola"], ["Krista", "Damico"], ["Aleksandra", "Djokic"], ["Alena", "Luef"], ["Fabienne", "Holz"], ["Luana Georgiana", "Rednic"], ["Lauren", "Mchale"], ["Andrea", "Berkova"], ["Shauna", "Morgan"], ["Kerstin", "Kreis"], ["Stella", "Papaspyrou"], ["Sushrutha", "Reddy Chintala"], ["Alison", "Ramos"], ["Simona", "Synkova"], ["Dania Bianca", "Payer"], ["Fatima Zorah", "Bouabdallah"], ["Sybille", "Khayat"], ["Kristi", "Boxx"], ["Paula", "Appezzato"], ["Nadia", "Lalami"], ["Fiona", "Gracia Tjipto"], ["Sonja", "Molnar"], ["Lisa", "Summerer"], ["Monika", "Sirilova"], ["Marina", "Sato"], ["Aimee", "Jarratt"], ["Sarah", "Makki"], ["Cristiana", "Narchi"], ["Nicole", "Stanziola"], ["Carolin", "Kottutz"], ["Jade", "Curtis"], ["Janna", "Hildebrand"], ["Alexandra", "Cadantu"], ["Sarah", "Jones"], ["Irina", "Falconi"], ["Klio", "Manolopoulou"], ["Syna", "Kayser"], ["Keilly", "Ulery"], ["Stephanie", "Scimone"], ["Julia", "Wais"], ["Dragana", "Pojuzina"], ["Andreea Daniela", "Georgescu"], ["Jane", "Sushkova"], ["Radhika", "Jadhav"], ["Carissa", "Aboubakare"], ["Carolina", "De Los Santos"], ["Chinami", "Ogi"], ["Zina", "Monteiro"], ["Andrea", "Rivera"], ["Salome", "Ugrekhelidze"], ["Hiromi", "Takeuchi"], ["Gabriela", "Barreto"], ["Julia", "Spiridonova"], ["Galina", "Mihaylova"], ["Yingying", "Xi"], ["Adriana", "Pereira"], ["Federica", "Di Sarra"], ["Amanda", "Carreras"], ["Khristina", "Kazimova"], ["Mika", "Morimoto"], ["Aleksandra", "Krupina"], ["Martina", "Balogova"], ["Emily", "Wolf"], ["Marie Claude", "Ndzoudja"], ["Deepna", "Vazirani"], ["Melanie", "Klaffner"], ["Begona", "Garcia Soto"], ["Kristina", "Kucova"], ["Katharina", "Negrin"], ["Dina", "El Farouk"], ["Sandra", "Soler Sola"], ["Rebeca", "Delgado Gerardo"], ["Katarina", "Poljakova"], ["Manon", "Arnaud"], ["Claudia", "Franze"], ["Alina", "Tseplukhova"], ["Jocelyn", "Ffriend"], ["Polina", "Dzyuba"], ["Petra", "Babakova"], ["Irina", "Khatsko"], ["Marsela", "Gunawan"], ["Vivien", "Laszloffy"], ["Daniela Alexandra", "Ilcu"], ["Bianca", "Schlumberger"], ["Carla", "Beltrami"], ["Karola", "Diaconescu"], ["Xinyun", "Han"], ["Erin", "Troedson"], ["Ericka", "Penaranda"], ["Alessa", "Waibel"], ["Achiraya", "Sriprome"], ["Ines", "Ferrer Suarez"], ["Ekaterina", "Komarova"], ["Shiho", "Otake"], ["Rieke", "Honiball"], ["Ekaterina", "Lukomskaya"], ["Claudia", "Hidalgo"], ["Elizabeth", "Ullathorne"], ["Olivia", "Howlett"], ["Yera", "Campos Molina"], ["Magdalena", "Smejova"], ["Franziska", "Goettsching"], ["Sophia", "Mulsap"], ["Andrea", "Quintana"], ["Daniela", "Noceto"], ["Laura", "Claus"], ["Nadja", "Gilchrist"], ["Fabiana", "Mersan"], ["Hanna", "Kapustka"], ["Plamena", "Kurteva"], ["Fernanda", "Dias"], ["Shinann", "Featherston"], ["Christina", "Scherndl"], ["Julia", "Klackenberg"], ["Zeljka", "Gavrilovic"], ["Stephany", "Chang"], ["Anastasia", "Bukhanko"], ["Carolina", "Larco"], ["Edyta", "Cieplucha"], ["Lisa", "Jamais"], ["Silvia", "Cevoli"], ["Nelly", "Ciolkowski"], ["Zaruhi", "Harutyunyan"], ["Priscilla", "Heise"], ["Antonela", "Marincic"], ["Veronika", "Ciganikova"], ["Nicole", "Riner"], ["Haruka", "Naito"], ["Valentina", "Fauviau"], ["Gia", "Mcknight"], ["Lara", "Meccico"], ["Yolanda", "Nieto"], ["Marina", "Gallo"], ["Anastasia", "Pivovarova"], ["Katarina", "Marackova"], ["Unnati", "Purushotham"], ["Yoshiko", "Koizumi"], ["Yi Run", "Han"], ["Ksenia", "Lykina"], ["Magda", "Okruashvili"], ["Alla", "Aleksandrova"], ["Joany", "Pontjodikromo"], ["Alessia", "Bianchi"], ["Orian", "Ben Haim"], ["Yukari", "Nakashima"], ["Veronika", "Sigutova"], ["Abigail", "Guthrie"], ["Nathalie", "Elgales"], ["Kelly", "Irving"], ["Caitlin", "Steel"], ["Kateryna", "Yergina"], ["Sitong", "Yan"], ["Anna", "Voronkova"], ["Marcela", "Gomez"], ["Eva Maria", "Altenburger"], ["Lucia Ioana", "Crisan"], ["Andreea Roxana", "Vaideanu"], ["Marcela", "Cuderman"], ["Martha V", "Blakely"], ["Maria De Los Angeles", "Cardenas"], ["Giulia", "Zambaiti"], ["Petra", "Krejsova"], ["Daria", "Novosad"], ["Yi Ching", "Chen"], ["Mayumi", "Seki"], ["Diana", "Viteri"], ["Giorgia", "Sampietro"], ["Erica", "Krisan"], ["Alison", "Riske"], ["Maria Luiza", "Craciun"], ["Alisa", "Buslayeva"], ["Omlata Rai", "Kumari"], ["Julia", "Thiem"], ["Larn", "Mcshane"], ["Ayano", "Nakamura"], ["Madeleine", "Saari Bystrom"], ["Jeannine", "Prentner"], ["Viet Ha", "Ngo"], ["Carolina", "Kubicska"], ["Tina", "Zimmermann"], ["Dhara Bharat", "Thakor"], ["Trudy Gine", "Amoranto"], ["Carla", "Lindlar"], ["Maria Jose", "Arechavaleta"], ["Claudia Marcela", "Silva Aragon"], ["Caroline", "Wozniacki"], ["Mona", "Barthel"], ["Lisa Maria", "Reichmann"], ["Yaimaris", "Paterson Crespo"], ["Anastasia", "Grymalska"], ["Ivette", "Lopez"], ["Inna", "Sokolova"], ["Astrid", "Quintero"], ["Aziza", "Butoyi"], ["Camila", "Bernal"], ["Alize", "Lim"], ["Audrey", "Van Wolde"], ["Veronica", "Garcia Herrera"], ["Mallory", "Cecil"], ["Claudia", "Giovine"], ["Leyla Esther", "Cabrera"], ["Angela", "Roesler"], ["Maria Cristina", "Selis"], ["Karen", "Filippou"], ["Ana", "Belzunce Crompin"], ["Miku", "Bando"], ["Breanna", "Tilly"], ["Nahoko", "Tanaka"], ["Maria Fernanda", "Macedo"], ["Ionela Andreea", "Iova"], ["Jana", "Jandova"], ["Ioana", "Ivan"], ["Vivian", "Janecki"], ["Marina", "Lysenko"], ["Mai", "Iwasaki"], ["Lorena", "Piedras"], ["Martina", "Vitulli"], ["Jenny", "Claffey"], ["Viktoriya", "Semyrodenko"], ["Poojashree", "Venkatesha"], ["Wen Bo", "Wang"], ["Iuliana", "Oante"], ["Renuka", "Keswani"], ["Shao Fang", "Ong"], ["Barbara", "Lormeau"], ["Courtney", "Byron"], ["Vanessa", "Boey"], ["Betty", "Dautriat"], ["Kalinina", "Sandoval"], ["Chang", "Liu"], ["Chinatsu", "Maeda"], ["Vitalia", "Diatchenko"], ["Ima", "Bohush"], ["Stephanie", "Roy"], ["Sandra", "Ion"], ["Romina", "Gualtieri"], ["Camilla", "Franco"], ["Yasmin", "Clarke"], ["Klara", "Vyskocilova"], ["Sianna", "Simmons"], ["Karina", "Bradnam"], ["Eugenia", "Yordanova"], ["Sanda", "Omerovic"], ["Nour", "Abou Saleh"], ["Rosa Maria", "Mendoza"], ["Maria Gracia", "Ycaza"], ["Anne Christine", "Voicu"], ["Daleidis", "Borrego"], ["Laura", "Bosneag"], ["Emma", "Isberg"], ["Rasika", "Sankpal"], ["Ksenia", "Milevskaya"], ["Sayali", "Bhilare"], ["Se Jin", "Lee"], ["Sara", "Guglielminotti"], ["Mazluma", "Turdyeva"], ["Carolina", "Castro"], ["Lenka", "Jurikova"], ["Paula Cristina", "Goncalves"], ["Franziska", "Koenig"], ["Anastassiya", "Zherdeva"], ["Nini", "Lagvilava"], ["Marine", "Tirel"], ["Ana Sofia", "Camberos"], ["Vanja", "Tomic"], ["Stephanie", "Wiltshire"], ["Jessica", "Moore"], ["Maxi", "Ehmer"], ["Nour", "Kaddour"], ["Sierra A", "Ellison"], ["Marketa", "Havelkova"], ["Anneliese", "Tepper"], ["Lara", "Kamnik"], ["Laura Alicia", "Aguilar"], ["Taylor", "Lindsey"], ["Petra", "Padalikova"], ["Lora", "Stancheva"], ["Maria", "Babanova"], ["Florencia", "Sanchez Gil"], ["Josefin", "Andersson"], ["Nicole", "Arosemena"], ["Narisa", "Luanporn"], ["Mikaela", "Kristofersson"], ["Hermon", "Brhane"], ["Kristina", "Schleich"], ["Alexa", "Wimes"], ["Ganna", "Akhinko"], ["Maria", "Voscekova"], ["Irina Camelia", "Begu"], ["Ivana", "Crnogorac"], ["Yaroslava", "Zhishchenko"], ["Chelsey", "Gullickson"], ["Kate", "Rodger"], ["Tadeja", "Majeric"], ["Lutfiana Aris", "Budiharto"], ["Alexandra", "Vukota"], ["Jovana", "Vasic"], ["Camilla", "Margaroli"], ["Janelle", "Cuthbertson"], ["Amelia", "Harris"], ["Caitlin", "Gordon"], ["Kristina", "Antoniychuk"], ["Marina", "Giral Lores"], ["Ruth", "Markov"], ["Oksana", "Kalashnikova"], ["Francesca", "Segarelli"], ["You Jin", "Kang"], ["Susan", "Darnel"], ["Carla", "Nava"], ["Alessondra", "Parra"], ["Martina", "Gaemperle"], ["Jade", "Schoelink"], ["Anastasia", "Nebojanko"], ["Whitney", "Wolf"], ["Valentina", "Kecman"], ["Zana", "Gospodnetic"], ["Jelena", "Trailovic"], ["Yael", "Anays"], ["Ema", "Polic"], ["Dahilmar", "Saez"], ["Elison", "Amadio"], ["Ami", "Nakano"], ["Nataly", "Yoo"], ["Federica", "Denti"], ["Jacqueline", "Wu"], ["Belma", "Beslagic"], ["Jing Jue", "Lu"], ["Anais", "Dallara"], ["Bronwyn", "Davidson"], ["Dipti", "Srivastava"], ["Maja", "Kazimieruk"], ["Laetitia", "Prat"], ["Helen", "Parish"], ["Odalis", "Sardinas"], ["Lorena", "Vincenzini"], ["Tyra", "Calderwood"], ["Natasha", "Pawlowski"], ["Li", "Xi"], ["Veronika", "Birioukova"], ["Aika", "Osawa"], ["Sarah Marija", "Merlic"], ["Puntila", "Namwong"], ["Veronica", "Popovici"], ["Yadira", "Padilla"], ["Chloe", "Smith"], ["Josefine", "Strom"], ["Amanda", "Cunningham"], ["Morgane", "Zowczak"], ["Montserrat", "De Castro"], ["Maria", "Toncheva"], ["Mariya", "Malkhasyan"], ["Natalie", "Proese"], ["Aeriel", "Ellis"], ["Anggrenny", "Oky Suconong"], ["Asha Saravana", "Mohan"], ["Alexandra", "Zaniewski"], ["Claudia", "Mercado"], ["Anastasia", "Savkina"], ["Rita", "Obasigie"], ["Vladlena", "Petushkova"], ["Yvanna", "Kurlak"], ["Beatrice", "Parolai"], ["Shenelle", "Mohammed"], ["Sina", "Hartmann"], ["Daphne", "Staelens"], ["Jawairiah", "Noordin"], ["Ines", "Janbakhsh"], ["Margarita", "Lazareva"], ["Fernanda", "Aranda"], ["Sindy", "Cespedes"], ["Sahar", "Al Disi"], ["Emma", "Flood"], ["Regina", "Shtyagina"], ["Claire", "Valentin"], ["Amie", "Shyu"], ["Rininta", "Hidayat"], ["Shahin", "Ansari"], ["Alexandra", "Whitehead"], ["Rocio", "De La Torre Sanchez"], ["Elena", "Chernyakova"], ["Romina", "Brante"], ["Arabela", "Fernandez Rabener"], ["Pamela", "Amon"], ["Katharina", "Knoebl"], ["Sandra", "Kristjansdottir"], ["Neira", "Fatic"], ["Dagmar", "Dudlakova"], ["Olga", "Kirpicheva"], ["Barbara", "Sobaszkiewicz"], ["Carla", "Murguia"], ["Martina", "Kostalova"], ["Nancy", "Ferguson"], ["Rocio", "Galarza"], ["Monica", "Cantele"], ["Carlota", "Cartes Andres"], ["Sinika", "Jezkova"], ["Christina", "Bonneau"], ["Carla", "Lucero"], ["Stephanie", "Hoffpauir"], ["Clemence", "Terol"], ["Marina", "Lebrao"], ["Nicolette", "Van Uitert"], ["Sandra", "Vukojicic"], ["Audrey", "Leitz"], ["Shaozhuo", "Liu"], ["Barbora", "Krtickova"], ["Karla", "Bonacic"], ["I Pei", "Cheng"], ["Mi Rae", "Ham"], ["Ana Maria", "Chavez Franco"], ["Maria", "Mokh"], ["Naoko", "Masuda"], ["Monika", "Galikova"], ["Kathrin", "Weinwurm"], ["Kate", "Turvy"], ["Margie", "Milliken"], ["Anne", "Blawatt"], ["Kesica", "Jayapalan"], ["Grace", "Cadona"], ["Sacha", "Jones"], ["Elodie", "Erakovic"], ["Constance", "Sibille"], ["Stefana", "Lakicevic"], ["Csilla", "Argyelan"], ["Nada", "Sghyar"], ["Natasha", "Starling"], ["Imke", "Jagau"], ["Charlotte", "Laevens"], ["Sung Hee", "Han"], ["Nelly", "Radeva"], ["Lidia", "Llanos De La Fuente"], ["Tereza", "Mrdeza"], ["Riley", "Blanks"], ["Yoshie", "Yoshihara"], ["Maria Fernanda", "Alvarez A"], ["Mariam", "Kupreishvili"], ["Alexa", "Guarachi"], ["Zuzana", "Linhova"], ["Jordana", "Lujan"], ["Ajda", "Kolmancic"], ["Veronika", "Maksimchyk"], ["Katie", "Gouyette"], ["Monica", "Pezzotti"], ["Virginia", "Ugrcyc"], ["Emily Theresa", "Weiland"], ["Monica", "Chow"], ["Alenka", "Hubacek"], ["Ielyzaveta", "Rybakova"], ["Pamela", "Salas"], ["Alina", "Wessel"], ["Babs", "Van Kampen"], ["Kristina", "Steiert"], ["Ayram", "Edery"], ["Erica", "Robertson"], ["Carolina", "Zeballos"], ["Fanny", "Fracassi"], ["Petra", "Niedermayerova"], ["Vivien", "Svirkovska"], ["Anouk", "Delefortrie"], ["Maria", "Martinez Romero"], ["Alexandra Andreea", "Oancea"], ["Maria", "Kouvatsos"], ["Kjersti", "Lund"], ["Marisela", "Aviles"], ["Natalia", "Piszczkiewicz"], ["Yasmine", "Guimaraes"], ["Kristina", "Benashvili"], ["Xenia", "Suworowa"], ["Magda", "Riutort Bou"], ["Laura", "Heinrichs"], ["Sharon", "Fichman"], ["Elzyata", "Sovaeva"], ["Melisa", "Morales"], ["Laura", "Gambarini"], ["Tatiana", "Carpio"], ["Deirdre", "Cienki"], ["Tamira", "Paszek"], ["Urszula", "Radwanska"], ["Nathalie", "Gunthard"], ["Nigora", "Sirojiddinova"], ["Benita", "Milenkiewicz"], ["Maria", "Nivia"], ["Blessing", "Samuel"], ["Caroline", "Hitimana"], ["Carolina", "Camargo De Luca"], ["Bianca", "Bonotto"], ["Karen Johanna", "Ramirez Rivera"], ["Ana Paula", "Antelo"], ["Bryony", "Hunter"], ["Arantxa", "Rus"], ["Raphaela", "Cordeiro"], ["Nimom", "Segodo"], ["Tina", "Potisk"], ["Rebecca", "Marino"], ["Anais", "Gomar Isart"], ["Ekaterina", "Kamendova"], ["Hiroko", "Kuwata"], ["Aleksandra", "Tucakov"], ["Andra", "Cornea"], ["Ginet", "Pinero"], ["Reka", "Rohonyi"], ["Myrtille", "Georges"], ["Parichart", "Charoensukployphol"], ["Klaudia", "Boczova"], ["Micaela", "Silva"], ["Tatevik", "Yedigaryan"], ["Anna", "Lukashevich"], ["Conny", "Perrin"], ["Irina", "Carrillo Marti"], ["Daniela", "Gonzalez Martinez"], ["Diamond", "Jackson"], ["Silvia", "Carvajal"], ["Daria", "Shilina"], ["Angelina", "Gordienko"], ["Zaida", "Abreu"], ["Rebeca", "Neves"], ["Jaklin", "Alawi"], ["Dilara", "Ahmetagic"], ["Inna", "Gavrilenko"], ["Marine", "Verbeken"], ["Anna", "Jeczmionka"], ["Erin", "Vierra"], ["Julia", "Zakharova"], ["Beatrice", "Gumulya"], ["Pamela", "Montez"], ["A Ram", "Sim"], ["Wen", "Sun"], ["Jennie", "Brobeck"], ["Ji Hye", "Kim"], ["Monika", "Tumova"], ["Dajana", "Csongradyova"], ["Kristina", "Bekavac"], ["Gabriella", "Boboc"], ["Ilaria", "Alessi"], ["Bianca", "Swanepoel"], ["Muriel", "Wacker"], ["Yara", "Abou El Ghar"], ["Menanteau", "Moolman"], ["Yolande", "Leacock"], ["Idil", "Haciraifoglu"], ["Olivia", "Bennett"], ["Lauren", "Embree"], ["Linda", "Fritschken"], ["Elien", "Crombez"], ["Adeline", "Goncalves"], ["Eleonor", "Picot"], ["Elaine", "Genovese"], ["Sankriti", "Sinha"], ["Kai Chen", "Chang"], ["Yun Hee", "Kim"], ["Chutharat", "Rungtein"], ["Yasmine", "Alkema"], ["Kristina", "Pejkovic"], ["Vivian", "Hansen"], ["Silvia Priscila", "Montoya"], ["Karen Elena", "Montoya"], ["Maria", "Klein"], ["Elizabeth", "Johnson"], ["Mo", "Cao"], ["Anna", "Vidgof"], ["Petra", "Martic"], ["Polona", "Hercog"], ["Lorena", "Aviles"], ["Laura", "Beltran"], ["Dilara", "Yurtkuran"], ["Inna", "Agaeva"], ["Lucia", "Kovarcikova"], ["Xiao", "Zhou"], ["Ana", "Quevedo"], ["Andrea", "Popluharova"], ["Veronika", "Studena"], ["Diana", "Kyllmann"], ["Katrin", "Schmidt"], ["Nicole", "Herzog"], ["Jun Yi", "Zheng"], ["Shereen", "Peterson Paul"], ["Celine", "Ghesquiere"], ["Melissa", "Mcqueen"], ["Kristina N", "Smith"], ["Maria Agustina", "Reyes Molina"], ["Prerana Mythri", "Appineni"], ["Martina", "Pradova"], ["Anastasia", "Shchilinskaya"], ["Angie", "Solorzano"], ["Hae Jin", "Jeong"], ["Michelle", "Green"], ["Mallory", "Burdette"], ["Valentina", "Parrilla"], ["Taij Mishma", "Kumar"], ["Patricia", "Vilas Ibanez"], ["Niku", "Amin"], ["Lisa", "Piller"], ["Mona", "Piller"], ["Charlotte", "Rodier"], ["Gabriella", "Bongiovanni"], ["Palma", "Kiraly"], ["Katharina", "Jobst"], ["Surama", "Gotera"], ["Theresa", "Jobst"], ["Nikola", "Hofmanova"], ["Lena Marie", "Hofmann"], ["Camelia Elena", "Hristea"], ["Giuliana", "Pino"], ["Hanna", "Albowicz"], ["Narumi", "Kakegawa"], ["Eugenia", "Dubitshkaya"], ["Victoria", "Rode Bager"], ["Eva", "Wacanno"], ["Ganna", "Lukianchykova"], ["Yi Miao", "Zhou"], ["Eden", "Doliveira"], ["Dildora", "Rakhimova"], ["Verena", "Santos"], ["Sarah", "Mahboob Khan"], ["Sofia", "Medina"], ["Kamila", "Marchocka"], ["Martina", "Di Giuseppe"], ["Chihiro", "Takayama"], ["Ji Hyun", "Lee"], ["Christine", "Masite"], ["Raiza", "Verdecia"], ["Serena", "Frazzitta"], ["Tanisha", "Rohira"], ["Ines", "Carabetta"], ["Katerina", "Ilyina"], ["Alexandra", "Kelleher"], ["Sakiko", "Namba"], ["Dina", "Azwar"], ["Alexandra", "Damaschin"], ["Ekaterina", "Abaeva"], ["Lenah Hatsumi", "Sakai"], ["Veronica", "Seruca"], ["Adeline", "Chiang"], ["Katharina", "Braeutigam"], ["Ting Jr", "Li"], ["Katarzyna", "Piter"], ["Anna", "Tajima"], ["Andressa", "Garcia"], ["Maike", "Zeppernick"], ["Alona", "Shubina"], ["Elizabeth", "Kilborn"], ["Slavica", "Milanovic"], ["Irina", "Dementyeva"], ["Olga", "Fischer"], ["Solveig", "Fosser"], ["Tereza", "Vancurova"], ["Ritwika", "Sen"], ["Juliette", "Surlemont"], ["Valeria", "Savinykh"], ["Jocelyn", "Rae"], ["Valentina", "Stephan"], ["Angelique", "Van Der Meet"], ["Alexandra", "Stuparu"], ["Alice", "Moroni"], ["Linda", "Berlinecke"], ["Evelin", "Barboutova"], ["Jessica", "Alexander"], ["Eveliina", "Virtanen"], ["Maria Elena", "Recalde"], ["Dominika", "Kanakova"], ["Ivana", "Klepic"], ["Josephine", "Haraldsson"], ["Jasmina", "Kajtazovic"], ["Josymar", "Escalona"], ["Danijela", "Tomic"], ["Courtney", "Collins"], ["Simona", "Weymar"], ["Jasmina", "Tinjic"], ["Maria", "Knott"], ["Rebecca", "Cook"], ["Chun Wing", "Sher"], ["Ulker", "Yuregir"], ["Lynsey", "Mccullough"], ["Lucia", "Batta"], ["Lucia", "Vrskova"], ["Alina", "Saracin"], ["Alina", "Shazhko"], ["Martina", "Darczuk"], ["Almudena", "Sanz Llaneza Fernandez"], ["Petra", "Januskova"], ["Kirsten", "Willems"], ["Montana", "Grenfell"], ["Dunja", "Sunkic"], ["Chihiro", "Oasa"], ["Barbara", "Montiel"], ["Marion", "Cammilleri"], ["Darja", "Pribitkow"], ["Taylor", "Douglas"], ["Elisabeth", "Fournier"], ["Nastasiya", "Kipina"], ["Tetyana", "Arefyeva"], ["Jodie", "Williams"], ["Daniella", "Rabkin"], ["Lauren", "Townrow"], ["Martina", "Gledacheva"], ["Giulia", "Bruzzone"], ["Mia", "Fiocca"], ["Alexandra", "Ban"], ["Malou", "Ejdesgaard"], ["Yevgeniya", "Kryvoruchko"], ["Jill M", "Saunders"], ["Camila", "Quesada"], ["Miki", "Kanehira"], ["Karina", "Pimkina"], ["Sarah", "Serrano"], ["Isabel M", "Brito Cardoso"], ["Catarina", "Morais"], ["Yun", "Ku"], ["Tomoko", "Iyori"], ["Gabi", "Rojas"], ["Wanrong", "Li"], ["Camilla", "Boniek"], ["Sasarin", "Borwornchokchai"], ["Geraldine", "Salazar"], ["Adrianna", "Daszkiewicz"], ["Liya", "Tsanava"], ["Tajda", "Bestijanic"], ["Marta", "Sirotkina"], ["Sevil", "Aliyeva"], ["Dana", "Adelson"], ["Chizuru", "Yamazaki"], ["Dalila", "Jakupovic"], ["Jessica", "Picas"], ["Emilie", "Logiacco"], ["Nozomi", "Matsuda"], ["Kumari Sweta", "Solanki"], ["Catia", "Rodrigues"], ["Raquel", "Perez Ruescas"], ["Danielle", "Mills"], ["Lisa Maria", "Moser"], ["Michelle", "De Groot"], ["Monica", "Gorny"], ["Kim Alice", "Grajdek"], ["Carmen", "Lopez Blanco"], ["Charlotte", "Pires"], ["Gracia", "Radovanovic"], ["Catalina", "Maya"], ["Catalina", "Ucros"], ["Yana", "Orlova"], ["Radka", "Jarosova"], ["Alice", "Watter"], ["Hymke", "Maurick"], ["Dalia", "Zafirova"], ["Paulina", "Schippers"], ["Camille", "Sapene"], ["Elyne", "Boeykens"], ["Maria Florencia", "Novillo"], ["Haley", "Gay"], ["Van Ai Ngog", "Nguyen"], ["Asia", "Muhammed"], ["Natalia", "Ryzhonkova"], ["Maria", "Fagerstrom"], ["Jasmine Pernill", "Shankar"], ["Perrine", "Fouche"], ["Anik", "Cepeda"], ["Ilse", "Pacheco"], ["Luana", "Flessak"], ["Tanya", "Raykova"], ["Yuko", "Adachi"], ["Kelsey", "Sundaram"], ["Ksenia", "Mikhaylova"], ["Maria Grazia", "Tonani"], ["Daria", "Maslennikova"], ["Ana", "Gomez Aleman"], ["Maria", "Meliuk"], ["Karin", "Morgosova"], ["Jade", "Pondicas"], ["Fiorella", "Nocino"], ["Vivienne", "Vierin"], ["Alexandra", "Riley"], ["Rocio", "Lopez Alberca"], ["Catalina", "Diaz"], ["Lucy", "Bird"], ["Andrea", "Eskauriatza Ruiz"], ["Daniela", "Trigo"], ["Stefania", "Postorino"], ["Carolina", "Barboza"], ["Giadagiovanna", "Dortona"], ["Maria", "Petrova"], ["Flavia", "Borges"], ["Claudia", "Razzeto"], ["Hannah", "James"], ["Olga", "Blank"], ["Lizeth", "Ramirez"], ["Allie", "Will"], ["Arianna", "Colffer"], ["Sarah", "Leonard"], ["Leire", "Martinez Barredo"], ["Karolina", "Vlachova"], ["Jessica", "Courtnell"], ["Lucia", "Cervera Vazquez"], ["Amira", "Pirovani"], ["Nilupul", "Goonasekera"], ["Nevena", "Arsic"], ["Gabriela", "Scaff Haddad"], ["Lynn", "Schonhage"], ["Theresa Maria", "Braun"], ["Miyu", "Terada"], ["Yu Xuan", "Liu"], ["Aleksandra", "Kecman"], ["Lucie", "Fleischmannov"], ["Marina", "Galkina"], ["Clarissa", "Chen"], ["Rachael", "White"], ["Ximena", "Hermoso"], ["Giulia", "Bruschi"], ["Misaki", "Doi"], ["Afroditi", "Latinopoulou"], ["Margarita", "Edinarova"], ["Francesca", "Mazzali"], ["Kelly", "Blake"], ["Adriana", "Quezada"], ["Bouwiena", "Boer"], ["Veronika", "Domagala"], ["Puja", "Patel"], ["Mandy", "Brown"], ["Victoria", "Larriere"], ["Satjaporn", "Mahajaroenkul"], ["Ofir", "Morag"], ["Aleksandra", "Josifoska"], ["Sandra Mihaela", "Sida"], ["Jelena", "Tomasovic"], ["Jana", "Bezbradica"], ["Marissa", "Armienta"], ["Amaia", "Ormazabal Oregui"], ["Valeria", "Filiaeva"], ["Elena", "Kulikova"], ["Elena", "Andrei"], ["Natalia", "Ziminova"], ["Romana Caroline", "Tabak"], ["Mariana", "Sonnervig"], ["Katie", "Gater"], ["Luiza", "Sonnervig"], ["Karina", "Gootman"], ["Laura", "Apaolaza Miradevilla"], ["Marcela", "Henriques Brandao"], ["Ju Eun", "Kim"], ["Michaela", "Bezdickova"], ["Anne", "Luijpen"], ["Lisa", "Whybourn"], ["Sandra", "Herrera"], ["Julia", "Gragera Cano"], ["Denise", "Atzinger"], ["Kanoko", "Ohara"], ["Victoria", "Vaara"], ["Gabriela", "Coglitore"], ["Melanie", "Junod"], ["Hilary", "Toole"], ["Candice", "Laurent"], ["Rafaela", "Efstathiou"], ["Maria", "Kiparenko"], ["Isabel", "Rapisarda Calvo"], ["Lucia", "Martinez Gomez"], ["Marina", "Jozipovic"], ["Marcella", "Jones"], ["Daphne", "Charalambous"], ["Carlotta", "Sartori"], ["Charlotte", "Fabricius"], ["Johanna", "Konta"], ["Cindy", "Chala"], ["Martina", "Borecka"], ["Khunpak", "Issara"], ["Paloma", "Cuervo"], ["Vivian Mayumi", "Toma"], ["Fatma", "Al Nabhani"], ["Laura", "Collins"], ["Kristina", "Huba"], ["Andree", "Sime"], ["Deeon", "Mladin"], ["Nana", "Miyakawa"], ["Masa", "Grgan"], ["Eda", "Bora"], ["Caroline", "Gherega"], ["Carmen", "Sandor"], ["Lucia", "Bosio"], ["Ida", "Alfredsson"], ["Arantxa", "Andrady"], ["Ksenia", "Pervak"], ["Regina Marica", "Matyak"], ["Danielle", "Lao"], ["Laura", "Revert Oroz"], ["Alexandra", "Skripkina"], ["Magdalena", "Sekrecka"], ["Yuka", "Ito"], ["Carolin", "Habich"], ["Maria Victoria", "Puga"], ["Marina", "Novak"], ["Paula", "Espinoza Pena"], ["Maria Tania", "Abraham"], ["Julie", "Bigot"], ["Karolina", "Dziubanii"], ["Cagla", "Azgari"], ["Kelly K", "Barry"], ["Geraldine", "Leong"], ["Annaelle", "Bejar"], ["Sally", "Peers"], ["Alejandra", "Granillo"], ["Giovanna", "Portiolli"], ["Gabriela", "Horackova"], ["Iuliia", "Kiriienko"], ["Gail", "Brodsky"], ["Selina", "Scheffer"], ["Bianca", "Botto"], ["Joelle", "Kissell"], ["Malika", "Arifjanova"], ["Simona", "Horsikyan"], ["Olivia", "Rogowska"], ["Jithmie", "Jayawickrema"], ["Kristina", "Shishkina"], ["Karolina", "Zamiela"], ["Irina", "Ramialison"], ["Elora", "Dabija"], ["Daria", "Abdrakhmanova"], ["Carlotta", "Ripa"], ["Salma", "El Semary"], ["Catherine R", "Isip"], ["Madalina Daniela", "Gugila"], ["Ioana Laura", "Alecsiu"], ["Hana", "Ritterova"], ["Ana", "Grindeanu"], ["Tanya", "Murtagh"], ["Shiori", "Kikukawa"], ["Tugce", "Dogan"], ["Natali", "Balige"], ["Alice Andrada", "Radu"], ["Casey", "Robinson"], ["Tereza", "Svecova"], ["Alexandra", "Gracova"], ["Victoria", "Lozano"], ["Alejandra", "Lozano"], ["Raquel", "Piltcher"], ["Marie", "Zalameda"], ["Jasmin", "Ladurner"], ["Emily J", "Harman"], ["Ranim", "Mkahal"], ["Velina", "Ivanova"], ["Sofia", "Espana"], ["Lisanne", "Van Riet"], ["Kristyna", "Kucianova"], ["Henrietta", "Alton"], ["Menna", "El Nagdy"], ["Maryna", "Chumak"], ["Christie Ann", "Hale"], ["Marion", "Pereira"], ["Desislava", "Lazarova"], ["Marianna", "Natali"], ["Othilia", "Lindqvist"], ["Mariya", "Slupska"], ["Greta", "Joksyte"], ["Sofia", "Pacifico"], ["Mariana", "Charalambous"], ["Tanvi", "Shah"], ["Julia", "Kushnereva"], ["Kaysara", "Mandry"], ["Indire", "Akiki"], ["Anna", "Zaja"], ["Angelina", "Jogasuria"], ["Angelika", "Jogasuria"], ["Julia", "Comas Espona"], ["Natalia", "Alvarez Bilbao"], ["Rebecka", "Tarnstrom"], ["Stefania Cristina", "Nicolae"], ["Yue", "Yuan"], ["Sandra", "Milojevic"], ["Kara", "Cecil"], ["Krishnali", "Bhonsle"], ["Zuzana", "Luknarova"], ["Magdalena", "Osterle"], ["Leonie", "Athanasiadis"], ["Anastasia", "Pavlyuchenkova"], ["Ana", "Jikia"], ["Tereza", "Bekerova"], ["Lina", "Bennani"], ["Carolina", "Orsi"], ["Michaela", "Boev"], ["Swetha", "Nalikala"], ["Volha", "Kalodzitsa"], ["Ofri", "Lankri"], ["Dragana", "Bozovic"], ["Camila", "San Martin"], ["Victoria Corina", "Mirea"], ["Samantha", "Vickers"], ["Josella Francisca", "Valderrama Ahumada"], ["Simona", "Syleouni"], ["Gioia", "Barbieri"], ["Violetta", "Degtiareva"], ["Katerina", "Petrenko"], ["Malika", "Rose"], ["Gabriella", "Barbosa Costa Silva"], ["Maxine", "Thomas"], ["Milica", "Milosavljevic"], ["Stina", "Kailaheimo"], ["Ilinca Thea", "Anghel"], ["Olivia", "Janowicz"], ["Laura", "Oates"], ["Shradha", "Dali"], ["Bianca", "Sousa"], ["Aranza", "Salut"], ["Yvett", "Imre"], ["Alina", "Baronova"], ["Veronique", "Luksich"], ["Jade", "Hopper"], ["Tereza", "Malikova"], ["Larraine", "Saavedra"], ["Brittany", "Sheed"], ["Carla", "Venticinque Torres"], ["Nuria", "Parrizas Diaz"], ["Jennifer", "Smith"], ["Ljubica", "Stojanovic"], ["Stacey", "Lock"], ["Stacey", "Tan"], ["Carolyn", "Monson"], ["Francesca", "Lewis"], ["Julie", "Gervais"], ["Selma", "Dahbi"], ["Viktoria", "Yemialyanava"], ["Iris", "Michailidou"], ["Veronika", "Makovey"], ["Marie Louise", "Schuetz"], ["Shabnam", "Eslami"], ["Juliana", "Pires"], ["Aleksandra", "Vukadinovic"], ["Natasha", "Bredl"], ["Alexandra", "Perper"], ["Kristen", "Lopez"], ["Reka Luca", "Jani"], ["Ros Polly", "Nguyen"], ["Natalie", "Dillon"], ["Nilgen", "Ahmetspahic"], ["Ana Gabriela", "Llera"], ["Anette", "Munozova"], ["Brynn", "Boren"], ["Diana", "Batista"], ["Nadja", "Barz"], ["Jeanna", "Schmidt"], ["Celina", "Goetti"], ["Mary", "Weatherholt"], ["Marie Christine", "Chartier"], ["Preethi", "Srinivasan"], ["Veronika", "Blaskova"], ["Prissy", "Annoual"], ["Stacey", "Kyriakopoulos"], ["Dominika", "Jasova"], ["Aleksandra", "Ludvig"], ["Julia", "Mayr"], ["Hannah", "Berner"], ["Nicha", "Lertpitaksinchai"], ["Angelika", "Aliev"], ["Elanqua", "Griffin"], ["Whitney", "Ritchie"], ["Andjela", "Nemcevic"], ["Justine", "Lo Presti"], ["Isabella", "Reibmayr"], ["Lam Anh", "Tran"], ["Karis", "Ryan"], ["Marine", "Sorg"], ["Benyapa", "Phumtip"], ["Anna", "Morgina"], ["Aimee", "Gibson"], ["Talissa", "Kucera"], ["Romy", "Koelzer"], ["Guntisa", "Boonlaing"], ["Ines", "Kertesz"], ["Marika", "Kobayashi"], ["Anett", "Schutting"], ["Olga", "Makhova"], ["Janine", "Tiszolczy"], ["Charline", "Braidy"], ["Sarah Ellen", "Hofmann"], ["Stephanie", "Baldinucci"], ["Eva", "Husakova"], ["Daniela", "Kraberger"], ["Sabrina", "Meier"], ["Isabell", "Seidlitz"], ["Diana", "Rivera"], ["Viktoria", "Viduka"], ["Jacqueline", "Cako"], ["Ho Ching", "Wu"], ["Jennifer", "Betancourt Hurtado"], ["Alexandra", "Ion"], ["Arina", "Alilueva"], ["Bruna", "Macedo Soares"], ["Lucia", "Gallego Jover"], ["Elixane", "Lechemia"], ["Weijia", "Sun"], ["Rajna", "Jankovic"], ["Callie", "Craig"], ["Caitlin", "Mcgraw"], ["Jacqueline", "Kasler"], ["Vidushi", "Gupta"], ["Olga", "Tatarchenko"], ["Blanca", "Garcia"], ["Mary", "Malkin"], ["Martina", "Mikulcikova"], ["Stefanie", "Mikesz"], ["Susita", "Das"], ["Julia", "Boserup"], ["Gisella", "Pere"], ["Estelle", "Suys"], ["Michelle", "Farley"], ["Jenny", "Jullien"], ["Monique", "Albuquerque"], ["Maria Paula", "Sanchez"], ["Kennedy", "Scott"], ["Carol", "Fernandez"], ["Sakina", "Nshimirimana"], ["Anastasia", "Aleshcheva"], ["Jung Eun", "Nam"], ["Julia", "Courter"], ["Line", "Jouayed"], ["Diana", "Bukajeva"], ["Justyna", "Jegiolka"], ["Urszula", "Kolodziejczak"], ["Thien Trang", "Nguyen"], ["Gabriela", "Pintos"], ["Brittany", "Augustine"], ["Ayano", "Honda"], ["Lisa", "Grosselius"], ["Sinead", "Disaya"], ["Anzhelika", "Adzhamyan"], ["Rebecca", "Leahy"], ["Paulina", "Hinojosa"], ["So Yeon", "Kim"], ["Jennifer", "Hadjieva"], ["Cristina Andreea", "Mitu"], ["Sonya", "Dayal"], ["Melanie", "Oudin"], ["Aleah", "Marrow"], ["Aki", "Yamasoto"], ["Aline", "Laurioux"], ["Yoko", "Nagai"], ["Veronika", "Tobolova"], ["Bistra", "Otashliyska"], ["Julia", "Jagodzinska"], ["Josselin", "Lattanzio"], ["Simona", "Halep"], ["Ksenia", "Moskal"], ["Maho", "Kowase"], ["Cierra", "Gaytan Leach"], ["Margaret", "Boyette"], ["Anastasiya", "Lytovchenko"], ["Gabriela", "Paz"], ["Julie", "Queval"], ["Daria", "Yakauleva"], ["Ai", "Koga"], ["Marcela", "Jimenez Ramos"], ["Filipa", "Correia"], ["Anna", "Brazhnikova"], ["Maria", "Fedosyuk"], ["Haruka", "Yoshida"], ["Millie", "Nichols"], ["Jessica", "Green"], ["Nathaly", "Miranda"], ["Paulina", "Milosavljevic"], ["Arezou", "Youlghouni"], ["Elzbieta", "Kowalczyk"], ["Patricia", "Chirea"], ["Jenny", "Lunde"], ["Alexandra", "Apostu"], ["Cayla", "Cross"], ["Shiho", "Sakagawa"], ["C C", "Sardinha"], ["Yoo Ri", "Song"], ["Sabina", "Kovtunova"], ["Mia", "Ramic"], ["Ruxandra Gabriela", "Costov"], ["Ekaterina", "Strogonova"], ["Stefania", "Di Vasto"], ["Alisa Juliana", "Caluseriu"], ["Alice", "Grilli"], ["Shoko", "Yamamoto"], ["Marketa", "Placha"], ["Mawuena", "Ankutse"], ["Lucia", "Zavarcikova"], ["Pamela", "Adom Mendez"], ["Gally", "De Wael"], ["Francesca", "Campigotto"], ["Lucie", "Rey"], ["Elizabeth", "Tapia"], ["Ana", "Puerto Jaimez"], ["Camila Vital", "De Castro"], ["Federica", "Severi"], ["Sofia", "Vaynberg"], ["Loveth", "Nnadozie"], ["Monique", "Zuur"], ["Sina", "Bader"], ["Natchanok", "Saenyaukhot"], ["Hui", "Li"], ["Daniela", "Lozano"], ["Disha", "Saigal"], ["Bernice", "Van De Velde"], ["Carina", "Paulitsch"], ["Roxana", "Rabago"], ["Isabella", "Shinikova"], ["Cecilia", "Crevani"], ["Victoire", "Mfoumouangana"], ["Ana Claudia", "Carbajal Espinosa"], ["Lisa", "Borckink"], ["Raphaela", "Zotter"], ["Cristina Bianca", "Danaila"], ["Nida", "Hamilton"], ["Nicole", "Bartnik"], ["Giulia", "Gasparri"], ["Francesca", "Gonzalez"], ["Lilly F", "Kimbell"], ["Beatriz Magdalena", "Flores"], ["Kanako", "Ootsuka"], ["Ai", "Kamiyoshihara"], ["Ya Qi", "Deng"], ["Lesley", "Kerkhove"], ["Olga", "Zaicenco"], ["Diana", "Marcu"], ["Argyro", "Christofi"], ["Lilija", "Sabirzjanova"], ["Maria", "Kuznetsova"], ["Sally", "Dischmann"], ["Anna", "Saito"], ["Hanna", "Mar"], ["Karolina", "Kostro"], ["Alexandra", "Wetterstrom"], ["Hope", "Johnson"], ["Ashleigh", "Richardson"], ["Iesha", "Holton"], ["Aleksandra", "Grela"], ["Jessica Marie", "Agra"], ["Carolina", "Viteri"], ["Dalya", "Pupchenok"], ["Anastasia", "Putilina"], ["Magali", "Van Landegem"], ["Demi", "Barao Rodrigues"], ["Prang", "Pantusart"], ["Ludmila", "Vasilieva"], ["Sandra", "Arsovska"], ["Claudia Gianina", "Dumitrescu"], ["Le", "Ma"], ["Sabina", "Ramirez"], ["Emma", "Reyes Baca"], ["Bianca", "Ambros"], ["Noppawan", "Lertcheewakarn"], ["Valentina", "Starkova"], ["Margarita Greta", "Skripnik"], ["Constance", "Alexander"], ["Miyabi", "Inoue"], ["Prachi", "Nadkarni"], ["Jana", "Mihalovicova"], ["Stephanie", "Cornish"], ["Raquel", "Barcala Lopez"], ["Yessica", "Medina"], ["Giulia", "Coletti"], ["Nathalie", "Mohn"], ["Hannah", "Toro"], ["Luca", "Pump"], ["Mary", "Clayton"], ["Melissa", "Bolivar"], ["Milica", "Stepanovic"], ["Tereza", "Budilova"], ["Milana", "Spremo"], ["Viktoria", "Kamenskaya"], ["Ana Paula", "Folch"], ["Julieta Soledad", "Rodriguez"], ["Gemma", "Praditngam"], ["Maria Claudia", "Santos Santanna"], ["Elisa", "Tassotti"], ["Gayeong", "Back"], ["Cristina", "Bachiller Madrono"], ["Alexandra", "Cercone"], ["Hilda", "Melander"], ["Maria", "Pulido"], ["Ekaterine", "Gorgodze"], ["Maria", "Jespersen"], ["Fernanda", "Faria"], ["Antonina", "Rafikova"], ["Manuela", "Leme"], ["Maria Fernanda", "Aguirre Arteaga"], ["Dejana", "Raickovic"], ["Janaki", "Gunuganti"], ["Coco", "Vandeweghe"], ["Veronica M", "Corning"], ["Yen Ling", "Chen"], ["Kaede", "Hayase"], ["Sandra", "Herrera Gonzalez"], ["Kiki", "Bertens"], ["Aleksandra", "Filipovski"], ["Mariona", "Del Peral Francin"], ["Sophia", "Bouganga"], ["Martina", "Kubicikova"], ["Verena", "Joechle"], ["Eduarda", "Piai"], ["Sandra", "Bellver Fructuoso"], ["Raquel", "Martini"], ["Brittany", "Wowchuk"], ["Elisa", "Brentino"], ["Tiffany", "Tran"], ["Maria Andreina", "Varela"], ["Anna", "Naumova"], ["Shahzodaxon", "Hatamova"], ["Chantelle", "Rigozzi"], ["Gabriella", "Witdarmono"], ["Jessica", "Cohen"], ["Leah", "Daw"], ["Treta", "Bhattacharyya"], ["Charlotte", "Van Der Meij"], ["Neesha", "Thirumalaichelvam"], ["Yui", "Takauchi"], ["Sabrina", "Baumgarten"], ["Pauline", "Paire"], ["Laura", "Slater"], ["Yan Tung", "Ki"], ["Nadine", "Ruegg"], ["Alexandra", "Cannizzaro"], ["Hyun Hee", "Jang"], ["Alena", "Gerasimova"], ["Tina", "Miller"], ["Lara", "Michel"], ["Quirine", "Lemoine"], ["Anastacia", "Simons"], ["Mohana", "Chintala"], ["Larissa", "Horat"], ["Hyun Hui", "Hong"], ["Belen", "Tajmuch"], ["Jessica", "Brito"], ["Marifer", "Abreu"], ["Anna Christine", "Patrimonio"], ["Alex", "Geremia"], ["Kurumi", "Nara"], ["Camila", "Giorgi"], ["Nimisha", "Mohan"], ["Bojana", "Jovanovski"], ["Tanja", "Winkler"], ["Mariami", "Samkanashvili"], ["Marilia", "Camara"], ["Nazil", "Ander"], ["Sonia Stefania", "Negrila"], ["Isabella", "Holland"], ["Elena", "Kuznetsova"], ["Nataliya", "Pintusova"], ["Anna Arina", "Marenko"], ["Sandra", "Zaniewska"], ["Carla", "Roset Franco"], ["Nutwadee", "Suthiprapha"], ["Petra", "Capin"], ["Alia", "Nour"], ["Iris", "Verboven"], ["Anastasia", "Vivdenko"], ["Ioana Andreea", "Cristea"], ["Nanuli", "Pipiya"], ["Adnya", "Naik"], ["Victoria", "Schweizer"], ["Xin Tong", "Liu"], ["Oksana", "Pavlova"], ["Rocio Maria", "Diaz"], ["Ursa", "Jerman"], ["Melina", "Gonzalez Morganti"], ["Natasha", "Bertolucci"], ["Bella", "Destriana"], ["Joanna", "Horne"], ["Tea", "Palandacic"], ["Tara", "Vasovic"], ["Rashmi", "Teltumbde"], ["Nan Nan", "Zhang"], ["Jana", "Urbanova"], ["Kate", "Fuller"], ["Elena", "Corsini"], ["Ekaterina", "Verho"], ["Nadejda", "Guskova"], ["Alejandra", "Sala Juste"], ["Thanyarat", "Karnjanapong"], ["Ale", "Rojas"], ["Elyse", "Edwards"], ["Lavanya", "Nath"], ["Daria", "Kuchmina"], ["Amreetha", "Muttiah"], ["Maria", "Barbed Isusi"], ["Ze Xin", "Pu"], ["Bhavani", "Ravisankar"], ["Dinah", "Pfizenmaier"], ["Kaitlyn", "Christian"], ["Emily", "Askew"], ["Sophia", "Bursulaya"], ["Sabrina", "Man Son Hing"], ["Chieh Yu", "Hsu"], ["Qiang", "Wang"], ["Ganna", "Piven"], ["Elizabeth", "Begley"], ["Fiorella Maria", "Jarufe"], ["Mia", "Radulovic"], ["Jamila", "Paul"], ["Trivena Monika", "Putri"], ["Jovanna", "Pecovski"], ["Yui Lynn", "Miao"], ["Karolina", "Cechova"], ["Paula Natalia", "Orlini Campos"], ["Cody", "Morris"], ["Mia", "Lancaster"], ["Simona", "Pascau"], ["Biljana", "Milosevska"], ["Minori", "Tamura"], ["Anastasiya", "Vasylyeva"], ["Ania", "Mazor"], ["Yang", "Shen"], ["Veronica", "Cepede Royg"], ["Ann Sophie", "Porry"], ["Boyan", "Wang"], ["Andrea", "Konjuh"], ["Barbara", "Pietrkiewicz"], ["Andrea", "Lopez Seco"], ["Irina", "Repede"], ["Dominique", "Harmath"], ["Risako", "Sugihara"], ["Liana", "Todorova"], ["Sylwia", "Mikolajczuk"], ["Deborah", "Paulo Lamelas"], ["Talia", "Rojas"], ["Jihye", "Choi"], ["Tatiana", "Postnikova"], ["Gabrielle", "Zambotto Interlich"], ["Rina", "Fujiwara"], ["Alexia", "Quartetto"], ["Katarena", "Paliivets"], ["Thais", "Xavier"], ["Sheila", "Moradian"], ["Anezka", "Makovickova"], ["Anastasia", "Koroliova"], ["Isadora", "Busch"], ["Samara", "Amour"], ["Ana Maria", "Nedelcu"], ["Emily", "Crowe"], ["Leia", "Kaukonen"], ["Nicole", "Saracino"], ["Diana Carolina", "Casas"], ["Kristina", "Korochinskaya"], ["Gabrielle", "Alford"], ["Ajeng", "Aquinia"], ["Martina", "Krischkeova"], ["Maya", "Milosevic"], ["Sofie", "Oyen"], ["Garima", "Vatwani"], ["Saadgi", "Rajani"], ["Kanae", "Iha"], ["Xi", "Bai"], ["Yasmina", "Demane"], ["Katharina", "Morth"], ["Yana", "Buchina"], ["Oriana", "Nowicki"], ["Alicia", "Perez Gonzalez"], ["Julia", "Landauer"], ["Polina", "Rodionova"], ["Magda", "Linette"], ["Kristina", "Kinarkina"], ["Camila", "Basto"], ["Mina", "Gardic"], ["Fernanda", "Brito"], ["Johanna", "Hyoty"], ["Nilaya", "Tarimela"], ["Mary Anne", "Macfarlane"], ["Yu Ting", "Deng"], ["Elen", "Chelidze"], ["Zsofia", "Susanyi"], ["Viktoriya", "Serenkova"], ["Alina Silvana", "Moise"], ["Hui I", "Huang"], ["Jelena", "Simic"], ["Ashvarya", "Shrivastava"], ["Nastassja", "Burnett"], ["Morgan", "Basil"], ["Ekin", "Gunaysu"], ["Marie", "Menacer"], ["Milica", "Hadzi Tanovic"], ["Maria Clara", "Bernardez"], ["Andrea", "Blazevic"], ["Vicky", "Stuckey"], ["Giulia", "Pasini"], ["Mara", "Schmidt"], ["Alexandra", "Anghelescu"], ["Maria", "Biryukova"], ["Rebecca", "Horompoliova"], ["Fernanda", "Soares"], ["Giorgia", "Pinto"], ["Kurumi", "Sensui"], ["Jasmin", "Matter"], ["Alex", "Martin"], ["Lola", "Azimova"], ["Cecilia", "Estlander"], ["Alexandra", "Borovina"], ["Aleksandrina", "Naydenova"], ["Shakhnoza", "Karieva"], ["Marta", "Stoyanova"], ["Giulia", "Lambiase"], ["Brittany", "Dubins"], ["Maria", "Lawton"], ["Nikolina", "Rimac"], ["Bao Yi", "Xu"], ["Diana", "Davitaia"], ["Oleksandra", "Piskun"], ["Nadja", "Teufel"], ["Roshenka", "Fernando"], ["Chloe", "Babet"], ["Karina", "Isayan"], ["Margarida", "Fernandes"], ["Sarah Lynn", "Du Plessis"], ["Julie", "Tringa"], ["Martina", "Puglierin"], ["Paola", "Garrido Rodriguez"], ["Amina", "El Khattabi"], ["Helena", "Martinez Soler"], ["Natalia", "Berezhnaya"], ["Nikki Camille", "Zoleta"], ["Patricia", "Avramescu"], ["Joanna", "Bougon"], ["Jolien", "De Wulf"], ["Neus", "Bestard Pomar"], ["Kirsten", "Mcarthur"], ["Klara", "Koprivova"], ["Ana Izabela", "Oliveira"], ["Vanessa", "Foltinger Garcia"], ["Amber", "Walker"], ["Joyce", "Van Der Linden"], ["Carolina", "Abello"], ["Johana", "Hernandez"], ["Anastasia", "Golovatch"], ["Marina", "Raicevic"], ["Malak", "Demerdash"], ["Katrina", "Raicevic"], ["Rebeca", "Mitrea"], ["Sabine", "Van Der Sar"], ["Soledad", "Blanco"], ["Giulia", "Porcu"], ["Beatriz Maria", "Martins Cecato"], ["Nuria", "Sanjurjo"], ["Anna", "Momot"], ["Marcela", "Costa Quintas"], ["Michika", "Ozeki"], ["Laili", "Rahmawati Ulfa"], ["Karni", "Cohen"], ["Zulema", "Zelaya"], ["Emilia", "Banos Gregorians"], ["Madeleine", "Kobelt"], ["Gabriela", "Vazquez"], ["Lara", "Arruabarrena"], ["Aya", "Bara"], ["Costanza", "Mecchi"], ["Sofia", "Hager"], ["Karolina", "Pliskova"], ["Kristyna", "Pliskova"], ["Polina", "Pekhova"], ["Laura", "Perez"], ["Roosh", "Wijesundera"], ["Chelsie Marie", "Yacks"], ["Martina", "Toto"], ["Karen", "Hernandez"], ["Sabastiani", "Leon"], ["Lisa", "Canova"], ["Giovanna", "Palumbo"], ["Nadine", "Klug"], ["Francesca", "Aureli"], ["Courtney B", "Dolehide"], ["Lizette", "Gomez"], ["Mami", "Hasegawa"], ["Gabriela Alejandra", "Carrillo Palacios"], ["Isaura", "Enrique Aguilar"], ["Deborah", "Pagani"], ["Fumika", "Kumagai"], ["Bitna", "Lee"], ["Ji Su", "Bae"], ["Elena", "Bogdan"], ["Carolina", "Pillot"], ["Anastasia", "Etkin"], ["Dominique", "Bruce"], ["Kaja", "Rajh"], ["Isabella", "Robbiani"], ["Panoria", "Tsekoura"], ["Iris", "Mannarino"], ["Silvia", "Ranocchi"], ["Natalia", "Marques Melibeu"], ["Gabriela", "Dabrowski"], ["Klaudia", "Gawlik"], ["Gaia", "Sanesi"], ["Bianca", "Brasoveanu"], ["Amel", "Ouahab"], ["Giulia", "Calafiore"], ["Sanne", "Lemmers"], ["Antonela", "Susak"], ["Milagros", "Abal"], ["Rocio", "Portela"], ["Jia Bei", "Mei"], ["Morgane", "Pons"], ["Lucia", "Kovalova"], ["Monika", "Wejnert"], ["Beatrice", "Capra"], ["Alexandra", "Hietaniemi"], ["Flora", "Birnbaum"], ["Klara", "Ellingerova"], ["Lise", "Marbach"], ["Greta", "Veinberga"], ["Brooke", "Bolender"], ["Marie Frederique", "Bedard"], ["Alessia", "Carrozzo"], ["Marlen", "Hacke"], ["Ekaterina", "Mitroshina"], ["Laura", "Maisonnave"], ["Rocio", "Benavent Rojas"], ["Alexandra", "Reboul"], ["Caroline", "Rohde Moe"], ["Ksenia", "Kolesnikova"], ["Fiorella", "Zecchino"], ["Gesa", "Focke"], ["Tanja", "Rebholz"], ["Kerrie", "Cartwright"], ["Mayka", "Zima"], ["Ilaria", "Popovic"], ["Anastasia", "Erofeeva"], ["Katarina", "Baranova"], ["Or", "Meir"], ["Lorena", "Gheorghe"], ["Caryssa L", "Peretz"], ["Sandra", "Andriamarosoa"], ["Ya", "Zhou"], ["Georgina", "Bastick"], ["Teresa", "Pladevall Oroz"], ["Roberta", "Di Rosa"], ["Richel", "Hogenkamp"], ["Mai", "Minokoshi"], ["Aranxta", "Portugal"], ["Seung Yeon", "Hong"], ["Lina", "Lileikite"], ["Misa", "Eguchi"], ["Mai", "Grage"], ["Malak", "Elazze"], ["Susan", "Mcrann"], ["Noura", "Abdul Aal"], ["Viviana", "Bolivar"], ["Rita", "Oliveira"], ["Barbara", "Ferreira"], ["Chinami", "Takada"], ["Tania", "Alaby"], ["Yamini", "Reddy"], ["Anna", "Depenau"], ["Mayna", "Andrade"], ["Isadora", "Bickham"], ["Alexandra", "Clay"], ["Lolia", "Kienka"], ["Saya", "Yoshimi"], ["Mariana", "Perez Saaibi"], ["Anastasiya", "Kyrylova"], ["Daniela Lucia", "Sierra Jurado"], ["Estelle", "Mehta"], ["Irina Mihaela", "Giusca"], ["Andrea", "Ka"], ["Imogen", "Golder"], ["Carolyn Ann", "Lim Hui"], ["Laura", "Lim"], ["Sun Young", "Choi"], ["Valentine", "Confalonieri"], ["Ema", "Mikulcic"], ["Flavia", "Nagayama"], ["Kaede", "Ikuma"], ["Vladislava", "Kuzmenkova"], ["Lorena", "Arandia"], ["Valeria", "Podda"], ["Emmerentia", "Marx"], ["Maria Teresa", "Torro Flor"], ["Courtney", "Gulihur"], ["Alyona", "Sotnikova"], ["Davina", "Meza"], ["Joke", "De Kok"], ["Feronika", "Katarina"], ["Mara", "Nowak"], ["Christina", "Auer"], ["Kimberley", "Cassar"], ["Simone Lindsay", "Krog"], ["Charlotte", "Windley"], ["Khristina", "Blajkevitch"], ["April", "Bisharat"], ["Dinka", "Lujinovic"], ["Kadi Liis", "Saar"], ["Gabriela", "Eufrasio"], ["Christina", "Mchale"], ["Albina", "Khabibulina"], ["Clara", "Matias"], ["Martina", "Spigarelli"], ["Hong Kyung", "Shin"], ["Zi Xuan", "Ma"], ["Hana", "Kovacova"], ["Georgina", "Garcia Perez"], ["Flavia", "Guimaraes Bueno"], ["Ana Paula", "Molero"], ["Katy", "Oshea"], ["Angela", "Dishkova"], ["Emily", "Southall"], ["Tamara", "Alvarado"], ["Lorena", "Hernandez"], ["Alessia", "Piran"], ["Thi Thanh Binh", "Phan"], ["Caroline", "Huberty"], ["Lottie", "Fox"], ["Marta", "Bertolaso"], ["Daphne", "Friedrichs"], ["Karyn", "Emeralda"], ["Natasha Natalia", "Shigina"], ["Dana", "Ihsanova"], ["Elin", "Winkler"], ["Heather", "Watson"], ["Martina", "Caregaro"], ["Jasmine Janelle", "Williams"], ["Welma", "Luus"], ["Miharu", "Imanishi"], ["Yuliya", "Artsiomava"], ["Ivonne", "Cavalle Reimers"], ["Derly", "Cunya"], ["Julija", "Lukac"], ["Ivana", "Spasojevic"], ["Zane", "Zarina"], ["Fiorella", "Jerardino"], ["Anastasia", "Mukhametova"], ["Diane", "Trebalag"], ["Elizaveta", "Kuzmina"], ["Ayaka", "Terashi"], ["Marion", "Dupuy"], ["Sarah", "Moundir"], ["Giulia", "Sussarello"], ["Julie", "Gonzalez Rodriguez"], ["Mila", "Marinkovic"], ["Isel", "Martinez Marcos"], ["Danny", "Engel"], ["Constanza Lara", "Tempone"], ["Sibel", "Ruzkar"], ["Seven", "Oral"], ["Este", "Potgieter"], ["Sabrina", "Stewart"], ["Barbara", "Bonic"], ["Shir", "Aharon"], ["Carolina", "Maso"], ["Martina", "Furlanetto"], ["Elena", "Mandzhukova"], ["Adriana", "Chavez"], ["Dana", "Machalkova"], ["Isabella", "Aumueller"], ["Arushi", "Sharma"], ["Yasmine", "Abou Farah Trigueros"], ["Ye Ji", "Mun"], ["Pilar", "Quintana"], ["Natasha", "Yonan"], ["Carolin", "Daniels"], ["Nupur", "Kaul"], ["Kelsey", "Lawson"], ["Amanda", "Bertani"], ["Lilien", "Pacheco"], ["Marcela", "Rosales"], ["Jovana", "Karac"], ["Alejandra", "Barragan"], ["Alyssa", "Hibberd"], ["Valeria", "Osadchenko"], ["Irene", "Gonzalez Olivar"], ["Alexandra Alina", "Tincu"], ["Anastasia", "Burmistrova"], ["Ida", "Krnic"], ["Kristie", "Ahn"], ["Clara", "Perez Marcos"], ["Marina", "Lushchina"], ["Christina", "Mathis"], ["Louise", "Johansson"], ["Suzy", "Larkin"], ["Alice", "Savoretti"], ["Ghislaine", "Van Baal"], ["Ivana", "Filipi"], ["Nina", "Pfahler"], ["Renata", "Bakieva"], ["Genevieve", "Barnes"], ["Maria", "Belaya"], ["Maria Jose", "Rodriguez"], ["Gvantsa", "Robakidze"], ["Milena", "Vujanovic"], ["Anna", "Mangano"], ["Ashley", "Krysiak"], ["Yi", "Zhong"], ["Monica", "Yajima"], ["Sandy", "Marti"], ["Maiko", "Yamashita"], ["Harriet", "Sheahan"], ["Tomoko", "Hagita"], ["Carla", "Manzi"], ["Jolien", "Gadeyne"], ["Chihiro", "Nunome"], ["Ecaterina", "Vasenina"], ["Pui Wing", "Sher"], ["Ayna", "Ereshova"], ["Yamit", "Vodovoz"], ["Paloma", "Mielgo"], ["Georgina", "Campins Schonofer"], ["Alejandra", "Renda Bouzada"], ["Gemma", "Triay Pons"], ["Adelaide", "Wood"], ["Adriana", "Guzman"], ["Carolina", "Barrionuevo"], ["Nerea", "Piquer Albisu"], ["Elena", "Burrone"], ["Katharina", "Hock"], ["Petra", "Jaskova"], ["Veronica", "Virseda Sanchez"], ["Noemi", "Novo Pereira"], ["Jin", "Yoo"], ["Cristina", "Melgarejo"], ["Karen", "Barbat"], ["Sarah Rebecca", "Sekulic"], ["Tamara", "Stanic"], ["Daria", "Kulbikova"], ["Chi Chi", "Scholl"], ["Nelo", "Phiri"], ["Na Lae", "Han"], ["Tricia", "Mar"], ["Xin", "Wen"], ["Majoly", "De Wilde"], ["Kamila", "Rafkat"], ["Alina", "Jerjomina"], ["Abi", "Claydon"], ["Yurina", "Tago"], ["Natalia", "Kozel"], ["Aselya", "Arginbayeva"], ["Kotchamon", "Kongkerd"], ["Abigail", "Tere Apisah"], ["Olivia", "Rich"], ["Natali", "Coronel"], ["Alexandra", "Walters"], ["Marina", "Kachar"], ["Alyssa", "Fuentes"], ["Dominika", "Schlehoferova"], ["Rachel", "Michell"], ["Simone", "Vranov Brown"], ["Claudia", "Ortiz Albert"], ["Nadine", "Pauli"], ["Rachel", "Kahan"], ["Lyudmyla", "Kichenok"], ["Nadiya", "Kichenok"], ["Francesca", "Franco"], ["Bianca", "Hincu"], ["Indra", "Bigi"], ["Catrin", "Levers"], ["Carina", "Litfin"], ["Alrissa", "Tobe"], ["Marie", "Temin"], ["Hyun Jung", "Kim"], ["Yu", "Nakashima"], ["Sarah", "Seiderer"], ["Mafalda", "Lhorca"], ["Sarah", "Mclean"], ["Kristyna", "Hancarova"], ["Oana", "Danescu"], ["Raye Ann", "Sandy"], ["Marina", "Kozachenko"], ["Doroteja", "Eric"], ["Sarah", "Pham"], ["Amelia", "Herring"], ["Diana", "Marcinkevica"], ["Rowie", "Kouw"], ["Dijana", "Banovec"], ["Yvonne", "Neuwirth"], ["Anja", "Koell"], ["Fanny", "Lundsgard"], ["Tara", "Moore"], ["Anna", "Velica"], ["Ana Maria", "Szilagyi"], ["Yvonne Elizabeth", "Tirado Tejeda"], ["Chanel", "Simmonds"], ["Kobkanok", "Upapong"], ["Natalia", "Escobar"], ["Franziska Louise", "Koehler"], ["Bianca", "Tepper"], ["Tamaryn", "Hendler"], ["Isabella", "Escobar"], ["Alexandra", "Leatu"], ["Giulia", "Mecca"], ["Jimena", "Wu"], ["Hannah", "Hume"], ["Manisha", "Chowdhury"], ["Song Yee", "You"], ["Elliesa", "Ball"], ["Yuri", "Okada"], ["Kim", "Berghaus"], ["Amit", "Berkovitz"], ["Karina", "Fiamenghi"], ["Matilda", "Hamlin"], ["Barbara", "Gueno"], ["Dagmara", "Baskova"], ["Ema", "Burgic"], ["Karolina", "Lisiecka"], ["Mia", "Vriens"], ["Sena", "Bensafi"], ["Ivana", "Kubickova"], ["Mariya", "Sukhareva"], ["Nicola", "George"], ["Yuliana", "Umanets"], ["Agathe", "Timsit"], ["Andrea", "Tabachnik"], ["Agata", "Bachanek"], ["Emily", "Madill"], ["Julianna Barbosa", "Bacelar"], ["Karina", "Goia"], ["Raquel", "Diaz"], ["Paola", "Cos"], ["Ting Fei", "Juan"], ["Elisha", "Hande"], ["Fanni", "Varga"], ["Ashley", "Mackey"], ["Akilah", "James"], ["Annie", "Sullivan"], ["Hadar", "Ostashinsky"], ["Maria Jesus", "Ibanez Galindo"], ["Sandra", "Gonzalez Salas"], ["Kristina", "Vesse"], ["Tina", "Tehrani"], ["Stephanie", "Fox"], ["Yuliana", "Motyl"], ["Jenny Thuy", "Le"], ["Xenia", "Knoll"], ["Laura", "Antonana Iriarte"], ["Sachie", "Ishizu"], ["Julia", "Samuseva"], ["Vanessa", "Moor"], ["Claudia Irene", "Ponton Caamano"], ["Sibilla", "Fiorentino"], ["Sasha", "Khabibulina"], ["Andrea", "Lippe"], ["Lu", "Lin"], ["Violetta", "Milkova"], ["Houda", "Bellamine"], ["Chantal", "Brutschin"], ["Rebecca", "Kaineder"], ["Nino", "Mebuke"], ["Sindhu Nila", "Partheepan"], ["Anna", "Rapoport"], ["Melina", "Ferrero"], ["Natasha", "Afridi"], ["Anastasia", "Stepu"], ["Ursula", "Castillejos"], ["Petra Maria", "Kulhova"], ["Petra", "Jurova"], ["Miruki", "Kugai"], ["Stephanie", "Slaveski"], ["Prerna", "Bhambri"], ["Sviatlana", "Pirazhenka"], ["Sabrina", "Kierberg"], ["Francisca", "Matos"], ["Alexandra", "Mitrovska"], ["Melissa", "Lutring"], ["Seyedeh", "Saadat"], ["Anastasia", "Kriz"], ["Kanyapat", "Narattana"], ["Rebecca", "Pedrazzi"], ["Mako", "Mizunuma"], ["Virginia Eliana", "Tica"], ["Christina", "Madenoglou"], ["Silviya", "Zhelyazkova"], ["Maria Fernanda", "Jimenez"], ["Vincenza", "Ciraolo"], ["Rani Fitriya", "Wardhani"], ["Stefanie", "Tan"], ["Maria Angelica", "Tangarife"], ["Laura Sofia", "Sanchez Perez"], ["Martina", "Frantova"], ["Chelsea", "Te Tai"], ["Michele Ayomide", "Idera"], ["Alexandra", "Avirvarei"], ["Christina Lavinia", "Badan"], ["Karina Natalia", "Lojo"], ["Fernanda", "Guilhaume Correa"], ["Priscila", "Nunez"], ["Isabela", "Espinosa Davila"], ["Hitomi", "Ozaki"], ["Sina", "Haas"], ["Alexandra", "Walker"], ["Kayla", "Rizzolo"], ["Alessia", "Camplone"], ["Claudia", "Basciani"], ["Andrea", "Gomez Carus"], ["Pia", "Rygh"], ["Nikola", "Horakova"], ["Xi Yao", "Wang"], ["Monica", "Aguado"], ["Daniel", "Hava"], ["Shukufa", "Abdullayeva"], ["Anett", "Ferenczi Bako"], ["Nayara", "Candido De Moraes"], ["Carolina", "Prats Millan"], ["Federica", "Colmari"], ["Paula", "Ormaechea"], ["Derja", "Turhan"], ["Louise", "Harbo Schmidt"], ["Tarlina", "Tipungwuti"], ["Kendal", "Drake"], ["Gorana", "Stevanovic"], ["Georgina", "Fedosenkova"], ["Jessica", "Bertoldo"], ["Daria", "Kirpicheva"], ["Irina", "Koripenko"], ["Isabella", "Assad"], ["Simonka", "Parajova"], ["Melissa", "Minniti"], ["Rubi", "Morales"], ["Dasa", "Orlic"], ["Maria Joao", "Koehler"], ["Lidziya", "Marozava"], ["Giulia", "Squadrin"], ["Andrea", "Caamano"], ["Dominique", "Wahl"], ["Hwa", "Lee"], ["Colet", "Weening"], ["Maria Daniela", "Frascini"], ["Elizabeth", "Golovkin"], ["Shelby", "Rogers"], ["Tatiana", "Rodens"], ["Andrea", "Medina Tomas"], ["Christi", "Potgieter"], ["Lee Anne", "Lingo"], ["Viktorija", "Golubic"], ["Stephanie", "Hirsch"], ["Anne Laure", "Dorseuil"], ["Inna", "Volkovich"], ["Emiliana", "Spinardi"], ["Kyra", "Shroff"], ["Janneke", "Wikkerink"], ["Greys", "Moroder"], ["Diana", "Isaeva"], ["Huai Hsuan", "Huang"], ["Aida", "Zukic"], ["Jessica", "Ginier"], ["Daniela", "Vidal"], ["Ayelen", "Quinteros"], ["Gislaine", "Conceicao Farias"], ["Verena", "Schmid"], ["Marcelina", "Cichon"], ["Anjyu", "Kanda"], ["Ebba", "Unden"], ["Ana", "Claro"], ["Helga", "Pinones"], ["Esthefhanie Darehly", "Juarez Rojo"], ["Antea", "Dedic"], ["Kiki", "Filippou"], ["Niriantsa", "Rasolomalala"], ["Aleksandra", "Treskunova"], ["Julia Christine", "Fellerhoff"], ["Rocio", "Sanchez Palacio"], ["Jade", "Frampton"], ["Isabela", "Miro"], ["Julia", "Rissanen"], ["Dalma Maria", "Rojas Rodas"], ["Evelyne", "Dom"], ["Kristina", "Horsikyan"], ["Moe", "Aoki"], ["Camila", "Silva"], ["Andrea", "Gamiz"], ["Kim", "Stubbe"], ["Katarzyna", "Kaleta"], ["Adelina Georgiana", "Lipan"], ["Tanja", "Grzan"], ["Sabrina", "Xu"], ["Valeria", "Solovieva"], ["Marta", "Lewandowska"], ["Nicole", "Peterson"], ["Khrystyna", "Pavlyuk"], ["Ioana", "Dinescu"], ["Amala", "Amol Warrick"], ["Leona", "Masuoka"], ["Paula", "Kania"], ["Anna Benita", "Fuchs"], ["Santina", "Mushtakova"], ["Polina", "Konop"], ["Morocco", "Hitt"], ["Belen", "Luduena"], ["Sofia", "Luini"], ["Alessandra", "Bonte"], ["Riko", "Fujioka"], ["Peangtarn", "Plipuech"], ["Daniela", "Seguel"], ["Marta", "Hnatyshyn"], ["Nikolina", "Grbac"], ["Emily", "Leenen"], ["Alexandra", "Moreno Kaste"], ["Katarzyna", "Kawa"], ["Ran", "Meng"], ["Ana Maria", "Stroe"], ["Alexandra", "Artamonova"], ["Adriana", "Perez"], ["Amina", "Berdieva"], ["Lynda", "Xepoleas"], ["Julia", "Goloborodko"], ["Michela", "Casanova"], ["Ana", "Bogdan"], ["Cindy", "Burger"], ["Irina", "Chaukina"], ["Jennifer", "Witthoeft"], ["Rebecca", "Siegler"], ["Macarena", "Acuna"], ["Nadia", "Frederika"], ["Cielo Marisol", "Castro Chao"], ["Leticia", "Sanchez"], ["Maria", "Navarro Cruz"], ["Eliana Elizabeth", "Pistone"], ["Sophie", "Letcher"], ["Anna", "Livadaru"], ["Maria Patricia", "Cordova"], ["Juliette", "Sapene"], ["Emily", "Gelber"], ["Hannah", "Mueller"], ["Amina", "St Hill"], ["Maryna", "Zhytska"], ["Alena", "Gizdic"], ["Aurora", "Davis"], ["Ana Victoria", "Pimienta"], ["Varvara", "Kuznetsova"], ["Stefania", "Rubini"], ["Shalaka", "Uddur Manjunath"], ["Loreto", "Alonso Martinez"], ["Vanda", "Lukacs"], ["Taylor", "Hollander"], ["Olga", "Serbyn"], ["Marina", "Cernea"], ["Johana Maria", "Vitanzo Maravi"], ["Alicia", "Doms Golobart"], ["Katie", "Le"], ["Katelyn", "Stokes"], ["Andrea Natalia", "Martin"], ["Julieta Evangelina", "Bidahorria"], ["Francesca", "Bernardi"], ["Charo", "Bintureira"], ["Alexandra", "Kolesnichenko"], ["Rozike", "Janzen Van Rensburg"], ["Farah", "Baracat"], ["Kaitlin", "Ray"], ["Nigina", "Rahmanova"], ["Ulrikke", "Eikeri"], ["Erika", "Sugamura"], ["Sarah", "Urbanek"], ["Epiphany B", "Turner"], ["Kataraina", "Hunia"], ["Yana", "Koroleva"], ["Iveta", "Masarova"], ["Cynthia Alejandra", "Lopez"], ["Michaela", "Frlicka"], ["Michaela", "Honcova"], ["Gopika", "Kapoor"], ["Nika", "Kovac"], ["Patricia", "Guerreiro"], ["Eva", "Raszkiewicz"], ["Katie", "Goepel"], ["Linda", "Prenkovic"], ["Alina", "Yanovskaya"], ["Ashling", "Sumner"], ["Jitsupang", "Samrej"], ["Arisa", "Murakami"], ["Cecilia", "Costa Melgar"], ["Sabina", "Stilu"], ["Claudia Noemi", "Cascella"], ["Flavia", "Dechandt Araujo"], ["Ann Sophie", "Rufyikiri"], ["Amy", "Hoburn"], ["Louise", "Brunskog"], ["Karolina", "Chernaya"], ["Nives", "Baric"], ["Diana", "Makki"], ["Laura", "Hornsby"], ["Chloe", "Murphy"], ["Janina", "Ruhstaller"], ["Yisel", "Nodarse Darvois"], ["Milena", "Zubkov"], ["Anastasia", "Poliakova"], ["Sabrina", "Tahir"], ["Di", "Zhao"], ["Tory", "Parravi"], ["Sederique", "Merola"], ["Ece", "Unlu"], ["Tamara", "Alvarez Riobo"], ["Caroline", "Wegner"], ["Lindsey", "Lyles"], ["Fernanda", "Sandoval"], ["Varunya", "Wongteanchai"], ["Mariana", "Salvador"], ["Lindsay", "Graff"], ["Hana", "Shimokawa"], ["Michelle", "Fischer"], ["Monica", "Turewicz"], ["Maria Florencia", "Albertalli"], ["Komal", "Safdar"], ["Laura", "Fiala"], ["Costanza", "Bruno De Lisi"], ["Paula", "Lopez"], ["Martina", "Zerbola"], ["Roisin", "Mullins"], ["Lucy", "Brown"], ["Ankita", "Raina"], ["Cassidy", "Crawford"], ["Amanda", "Belgini Franchi"], ["Jana", "Stankovicova"], ["Chiara", "Basso Basset"], ["Marianne", "Jodoin"], ["Naomi", "Bleisch"], ["Mashaal", "Hameed"], ["Charlotte", "Phillips"], ["Sabrina", "Dos Reis"], ["Thais", "Romero"], ["Linnea", "Pedersen"], ["Maria Sol", "Carrasco"], ["Livia", "Turiano"], ["Shelby", "Talcott"], ["Yunjun", "Wu"], ["Sofia Giantvigka", "Zengou Nieviantomska"], ["Aida", "Martinez Sanjuan"], ["Amandine", "Hesse"], ["Rosie", "Bird"], ["Ramona", "Ghermani"], ["Cristina", "Dinu"], ["Jainy", "Scheepens"], ["Nadiya", "Kolb"], ["Meheq", "Khokhar"], ["Rebecca", "Poikajarvi"], ["Midori", "Yamamoto"], ["Alexandra M", "Sheeran"], ["Jennifer", "Ren"], ["Valeria", "Detogni"], ["Laurie", "Gingras"], ["Violetta", "Tosmuk"], ["Gabriela", "Markova"], ["Mishel", "Kenin"], ["Samira", "Giger"], ["Nicol", "Signorini"], ["Jessica", "Gomez Galloso"], ["Kaori", "Yamazaki"], ["Mayte", "Cuellar"], ["Eleanor", "Lika"], ["Rachael", "Tredoux"], ["Candela", "Munoz Giron"], ["Ruxandra", "Ababii"], ["Elisha", "Gabb"], ["Samantha", "Lieb"], ["Maria Paula", "Ribero"], ["Hailey M", "Johnson"], ["Chisato", "Kobayashi"], ["Michelle", "Larcher De Brito"], ["Akiko", "Omae"], ["Iveta", "Dapkute"], ["Alena", "Shichkova"], ["Nina", "Nagode"], ["Margot", "De Haan"], ["Veronika", "Bacikova"], ["Catalina", "Pella"], ["Rosaline Zafir", "Chavez Tello"], ["Mirjam", "Gamperli"], ["Clotilde", "Barriere"], ["Marija", "Mirosavljevic"], ["Joanna Mary", "Smith"], ["Beladora", "Matallah"], ["Kim Alena", "Twelker"], ["Zsofia", "Miko"], ["Misaki", "Yoshimoto"], ["Noel", "Scott"], ["Florencia", "Di Biasi"], ["Maryam", "Eslami"], ["Natalla", "Khaniejo"], ["Daniella", "Patton"], ["Min", "Liu"], ["Berat Sena", "Dogru"], ["Ladina", "Soler"], ["Namita", "Bal"], ["Claire Cynthia", "Mulyadi"], ["Isabella", "Williams"], ["Sian", "Bayliss"], ["Anastasia", "Trubich"], ["Jil", "Wagner"], ["Chiara", "Mossi"], ["Anna", "Peregudova"], ["Anjana", "Kompally"], ["Despina", "Papamichail"], ["Veronika", "Zavodska"], ["Judit", "Domingo Casas"], ["Lisa", "Bastianello"], ["Nathaly", "Kurata"], ["Briar", "Preston"], ["Antonella", "Galeano"], ["Maria Del Rosario", "Rodriguez Arias"], ["Tamara", "Blum"], ["Sandy", "Vo"], ["Saana", "Saarteinen"], ["Kalliopi", "Zamanoudi"], ["Nicole", "Martinez"], ["Alejandra", "Hernandez Medel"], ["Beatrice", "Cedermark"], ["Lucia", "Paz Monteagudo"], ["Natasha", "Kanvinde"], ["Romilda", "Zitarosa"], ["Sanne", "Louwers"], ["Sanskriti", "Sinha"], ["Dane", "Vorster"], ["Mishel", "Okhremchuk"], ["Ekaterina", "Kiseleva"], ["Kat", "Facey"], ["Alexandra", "Facey"], ["Desiree", "Jakle"], ["Stephanie", "Vidov"], ["Viktoriya", "Bon"], ["Eva Maria", "Sjolund"], ["Natalia", "Lysova"], ["Stefania", "Haddad"], ["Juliana", "Gajic"], ["Mora", "Eshak"], ["Maja", "Jovic"], ["Jeni", "Patel"], ["Ana Mihaela", "Vladutu"], ["Zhen", "Yan"], ["Jazmin", "Britos"], ["Ziqi", "Hou"], ["Anamaria", "Candanoza"], ["Natasha Mayumi", "Tomishima"], ["Chisato", "Nakagawa"], ["Kayla", "Gammie"], ["Cristina", "Gimenez Pena"], ["Alicia", "Robinson"], ["Xiao Jing", "Lu"], ["Vassiliki", "Giannakaki"], ["Hsin Ting", "Tsai"], ["Yuka", "Sadakane"], ["Mara", "Benz"], ["Sabrina", "Santamaria"], ["Alexandra", "Petrzalkova"], ["Vaszilisza", "Bulgakova"], ["Hisaimet", "Mendez Gonzalez"], ["Nina", "Wellnitz"], ["Marina", "Danzini"], ["Elisa", "Celi"], ["Natela", "Dzalamidze"], ["Gabrielle", "Desimone"], ["Iulia", "Vodislav"], ["Yuka", "Iijima"], ["Serena", "Venica"], ["Jasmin", "Kling"], ["Se Won", "Lee"], ["Michaela", "Meszarosova"], ["Debora", "Echeverria"], ["Paula", "Montoya"], ["Nicole", "Gibbs"], ["Gabriela", "Ce"], ["Giuliana", "Olmos"], ["Milagros", "Cubelli"], ["Ekin", "Bahitli"], ["Karina", "Saeri Ono"], ["Anna", "Orlik"], ["Hana", "Umek"], ["Marina Raluca", "Tudorache"], ["Marion", "Codino"], ["Eleni", "Kordolaimi"], ["Denisa", "Allertova"], ["Ruth", "Seaborne"], ["Marcella", "Cucca"], ["Dora", "Andrejszki"], ["Christina", "Laskaridou"], ["Elizaveta", "Ianchuk"], ["Laetitia", "Sarrazin"], ["Diana", "Stomlega"], ["Sara", "Pilic"], ["Ellina", "Kornilova"], ["Denise", "Scheiflinger"], ["Adreanna", "Christopoulou"], ["Camilia", "Benabdeljalil"], ["Sara", "Benabdeljalil"], ["Anna", "Smirnova"], ["Katharina", "Holert"], ["Larisa", "Sporea"], ["Nozomi", "Fujioka"], ["Taro", "Keens"], ["Anastasiya", "Prenko"], ["Sayaka", "Koumura"], ["Caroline", "Price"], ["Suzana", "Sava"], ["Antigoni", "Kleftouri"], ["Katherine", "Westbury"], ["Sheila Bertha", "Aquino Aragon"], ["You Na", "Sul"], ["Aleksandra", "Krunic"], ["Paula", "Rincon Otero"], ["Johanna", "Skoglund"], ["Beatriz", "Nallar"], ["Elena", "Garcia Garrido"], ["Alix", "Collombon"], ["Ekaterina", "Yakovleva"], ["Nicole Theresa", "Leisher"], ["Janine", "Erasmus"], ["Danica", "Milinkovicova"], ["Besarta", "Avdullahi"], ["Kirsten", "Scott"], ["Mercedes", "Giner Gasco"], ["Catherine", "Chantraine"], ["Leyla", "Taracena"], ["Sloane", "Stephens"], ["Esther", "Santiago"], ["Sharni", "Stocker Jones"], ["Mukhabbat", "Saidova"], ["Ekaterina", "Nikitina"], ["Amanda", "Rodgers"], ["Nihal", "El Aasar"], ["Rebeca", "Pereira"], ["Kadi", "Ilves"], ["Veronika", "Zatekova"], ["Antonella", "La Viola"], ["Dora", "Vajdic"], ["Olga", "Parres Azcoitia"], ["Ke Hsin", "Chen"], ["Elisaveta", "Baer"], ["Monika", "Magusiak"], ["Cecilia Maria", "Barbiero"], ["Annie", "Mulholland"], ["Tal", "Gorenstein"], ["Helene", "Meuleman"], ["Sophia", "Dzulynsky"], ["Emina", "Bektas"], ["Carolina", "Betancourt"], ["Dunja", "Stamenkovic"], ["Priscila", "Garcia"], ["Daniela", "Degano"], ["Charlene", "Monterrain"], ["Yang", "Pang"], ["Ainhoa", "Zamora Rubio"], ["Martina", "Natali"], ["Sarah", "Mateo"], ["Giovanna", "Tomita"], ["Jennifer", "Rink"], ["Na Hee", "Lee"], ["Ksenia", "Chimpoake"], ["Louise", "Boinay"], ["Saya", "Nishi"], ["Polina", "Monova"], ["Helena", "Bel Franquesa"], ["Alisa", "Danilova"], ["Ines", "Martins"], ["Rut Ester", "Prudencio Csapek"], ["Daria", "Mironova"], ["Catalina", "Ronco"], ["Brigith Alejandra", "Teran"], ["Dominique Chante", "Mclean"], ["Adi", "Ella"], ["Sofia", "Holmberg"], ["Robin", "Anderson"], ["Liat", "Zimmermann"], ["Irini", "Papageorgiou"], ["Anastasia", "Matyukhina"], ["Isabella", "Dale"], ["Federica", "Arcidiacono"], ["Nadiia", "Baryshpolets"], ["Nova", "Patel"], ["Jeong Min", "Jeon"], ["Mehreen", "Izhar"], ["Melita", "Ferjanic"], ["Laura", "Ubeda Lopez"], ["Natalia", "Zamora Jimenez"], ["Ksenia", "Gospodinova"], ["Marta", "Stojanovic"], ["Olga", "Terteac"], ["Brenda", "Moreira"], ["Leyla", "Erkan"], ["Sarah", "Hellstern"], ["Aishwarya", "Agrawal"], ["Karen Johana", "Martinez"], ["Laura", "Bernard"], ["Laura", "Schaeder"], ["Viktoria", "Matejevic"], ["Xianghong", "Yin"], ["Jessica", "Wacnik"], ["Oana", "Ionescu"], ["Silvia", "Tumova"], ["Seunghyun", "Lee"], ["Alexandra", "Romanova"], ["Thale", "Myhre"], ["Dajana", "Ognjenovic"], ["Mimi", "Fotopoulos"], ["Alina", "Savchuk"], ["Lisa", "Vallone"], ["Constanze", "Lotz"], ["Lina", "Padegimaite"], ["Clare", "Fong"], ["Karolina", "Pondusova"], ["Erika", "Faba Lopez"], ["Niu Xuan", "Zhou"], ["Lucia", "Butkovska"], ["Melina", "Gonzalez"], ["Dana", "Nussralla"], ["Katerina", "Popova"], ["Erin Carol", "Stephens"], ["Nicole", "Meyer"], ["Julia", "Schiller"], ["Ajla", "Tomljanovic"], ["Gloire", "Mfoumouangana"], ["Natasa", "Vukovic"], ["Maria", "Bengtsson"], ["Madina", "Yekubjanova"], ["Andrea", "Pavlovic"], ["Viktoria", "Stojanova"], ["Denise", "Konig"], ["Timea", "Babos"], ["Grace Sari", "Ysidora"], ["Paula", "Mocete Talamantes"], ["Carla", "Mocete Talamantes"], ["Ji Yun", "Park"], ["Kristina", "Mladenovic"], ["Rishika", "Sunkara"], ["Pia", "Konig"], ["Daneika", "Borthwick"], ["Mikele", "Irazusta"], ["Klara", "Dohnalova"], ["Haruka", "Yamaura"], ["Divija", "Mandava"], ["Elena", "Zenko"], ["Chiara", "Mendo"], ["Raluca", "Mita"], ["Ivana", "Vukovic"], ["Ma Regina", "Santiago"], ["Mizuki", "Konakawa"], ["Romina", "Aufieri"], ["Ana Maria", "Ayala Villacorta"], ["Breanna Alexa Bachini", "Bachini"], ["Michal", "Yogev"], ["Laura", "Deigman"], ["Cyntia Soledad", "Gimenez"], ["Jaruwadee", "Kaewma"], ["Yuliana", "Lizarazo"], ["Verena", "Gantschnig"], ["Marina", "Cunningham Pereira"], ["Andrea", "Murillo"], ["Sabrina", "Bamburac"], ["Abbi", "Melrose"], ["Ainhoa", "Atucha Gomez"], ["Steffi", "Carruthers"], ["Matea", "Curic"], ["Ireen", "Kuipers"], ["Lok Sze", "Leung"], ["Katarzyna", "Kossowska"], ["Kseniia", "Berestetskaya"], ["Su San Na", "Sim"], ["Melanie", "Maietti"], ["Julia", "Lorca"], ["Barbara", "Luz"], ["Siriporn", "Phakamad"], ["Shir", "Perkis"], ["Jana", "Cepelova"], ["Sonia", "Daggou"], ["Yekaterina", "Sagitova"], ["Beatriz", "Prieto Cabrera"], ["Alejandra", "Reyes Menacho"], ["Ingrid Alexandra", "Radu"], ["Steffi", "Distelmans"], ["Melis", "Sezer"], ["Farangiz", "Shamsieva"], ["Paula", "Feitosa"], ["Marija", "Milutinovic"], ["Melissa", "Kopinski"], ["Madison", "Craft"], ["Lisa", "Ehrensberger"], ["Ksenya", "Bardabush"], ["Julia", "Stamatova"], ["Elizabeth", "Rafailidis"], ["Viktoria", "Bjork"], ["Mari", "Mahoni"], ["Tine", "Maertens"], ["Lesbia", "Zuniga"], ["Shruti", "Archita"], ["Theresa", "Smith"], ["Vorranavaporn", "Vorrarattanamongkol"], ["Cordelia Currey", "Witten"], ["Sofia", "Baptista"], ["Kana", "Okada"], ["Jessica", "Sabeshinskaja"], ["Catherine", "Leduc"], ["Michaela", "Jasenakova"], ["Pauline", "Lollia"], ["Dane", "Joubert"], ["Raluca Elena", "Platon"], ["Tamara", "Mihajlovic"], ["Yuriko", "Shinmura"], ["Maria Jose", "Marino Calvino"], ["Amy", "Askew"], ["Dan Ni", "Wang"], ["Renata", "Kuricova"], ["Abhilasha", "Ahuja"], ["Xuanshuo", "Ou"], ["Eliana Maria", "Lopez Pappalardo"], ["Lorraine M", "Guillermo"], ["Matilda", "Hurst"], ["Svetlana", "Piquerez"], ["Irina", "Glimakova"], ["Giulia", "Andreazza"], ["Hyejin", "Lee"], ["Marina", "Prosenica"], ["Chanel", "Glasper"], ["Machika", "Miyaji"], ["Marta", "Dallosso"], ["Lidiia", "Dashchenko"], ["Ksenia", "Kirillova"], ["Nour", "Abbes"], ["Meghan", "Blevins"], ["Ashleigh", "De Wet"], ["Rosalyn", "Small"], ["Silvia", "Miguel"], ["Ivanna", "Slobodian"], ["Emma", "Marti"], ["Romina Soledad", "Sanio Juarez"], ["Patricia", "Cyranowski"], ["Whitney P", "Kay"], ["Oceane", "Adam"], ["Ushna", "Suhail"], ["Nikoleta", "Vlaikoudi"], ["Amonica", "Arcos"], ["Ikttesh", "Chahal"], ["Valentyna", "Ivakhnenko"], ["Camelia", "Abdellah"], ["Katja", "Milas"], ["Miu", "Hongo"], ["Agustina Sol", "Eskenazi"], ["Or", "Sasson"], ["Ana Lorena", "Belmar"], ["Ester", "Goldfeld"], ["Pauline", "Clavel"], ["Ivana", "Kopsova"], ["Lauren", "Mcminn"], ["Hanna", "Tolonen"], ["Ivana", "Kafedjiyska"], ["Fausthyara", "Pietersz"], ["Satomi", "Fujitani"], ["Yasemin", "Cetinel"], ["Sayako", "Matsunaga"], ["Silvia", "Njiric"], ["Nikolette", "Budai"], ["Andreea", "Zabrac"], ["Marina", "Lidiya"], ["Cynthia", "Melita"], ["Yasmin", "Ebada"], ["Pilar", "Dominguez Lopez"], ["Heini", "Salonen"], ["Megumi", "Nishimoto"], ["Paula Alejandra", "Saenz"], ["Vaniya", "Dangwal"], ["Sarah", "Means"], ["Ani", "Vangelova"], ["Jana", "Matouskova"], ["Salome", "Kvitashvili"], ["Stefania", "Fadabini"], ["Vivien", "Juhaszova"], ["Michelle Paz", "Coccio Nieto"], ["Clorinda", "Wessels"], ["Georgina", "Carswell"], ["Luksika", "Kumkhum"], ["Shu Ying", "Hsieh"], ["Lauren", "Herring"], ["Nikol", "Hristova"], ["Camille", "Cheli"], ["Joanna", "Nalborska"], ["Mubina", "Vahobova"], ["Sofya", "Malysheva"], ["Hongrui", "Sun"], ["Aneliya", "Kairlenova"], ["Raquel", "Madrigal Rodriguez"], ["Nicole", "Melichar"], ["Aminat", "Kushkhova"], ["Nikolina Marija", "Turudic"], ["Lana", "Groenvynck"], ["Andela", "Brguljan"], ["Margarida", "Moura"], ["Liz Tatiane", "Koehler Bogarin"], ["Jessica", "Laing"], ["Teona", "Tatishvili"], ["Diana", "Reverte"], ["Grace", "Denga"], ["Charlene", "Seateun"], ["Trang", "Huynh Phuong Dai"], ["Demi", "Schuurs"], ["Hannah", "Liljekvist"], ["Martina", "Lombardi"], ["Adriana", "Moedano"], ["Michiru", "Furuya"], ["Stefanie", "Stemmer"], ["Maja", "Mladenovic"], ["Natasa", "Trailovic"], ["Trevine", "Sellier"], ["Giulia", "Costa"], ["Robyn", "Beddow"], ["Alina", "Mikheeva"], ["Josephine", "Boualem"], ["Alma Michelle", "Espinosa Rodriguez"], ["Satomi", "Yasuno"], ["Ekaterina", "Yashina"], ["Yurika", "Aoki"], ["Catalina", "Lopez"], ["Ellie", "Yates"], ["Sharmada", "Balu"], ["Shweta", "Rana"], ["Nadine", "Zeitoun"], ["Maria", "Zela"], ["Molly", "Okoniewski"], ["Beatrice", "Krauss Granate"], ["Karen M", "Gomez Gonzalez"], ["Lyubov", "Pogribnyak"], ["Mako", "Irie"], ["Maria", "Arenas"], ["Napatsakorn", "Sankaew"], ["Martha Paola", "Sanchez Merigo"], ["Sina", "Niketta"], ["Sarah", "Lee"], ["Sung Ah", "Park"], ["Kemalie", "Herath"], ["Valeriya", "Savina"], ["Masa", "Smic"], ["Lenka", "Filipova"], ["Jamie", "Pawid"], ["Natsumi", "Kujime"], ["Paula", "De Man"], ["Ariel", "Sulimany"], ["Manisha", "Foster"], ["Rafaela", "Orenga Panizza"], ["Yue", "Fei"], ["Francesca", "Stephenson"], ["Camila", "Franco"], ["Giovanna", "Ramos"], ["Dilyara", "Merzadinova"], ["Maryna", "Zanevska"], ["Patricia", "Fargas Osorio"], ["Yuki", "Ito"], ["Andrea", "Castillo Gutierrez"], ["Aleksandra", "Trifunovic"], ["Maria Belen", "Mosca"], ["Jasmine Nicole", "Minor"], ["Edmee", "Morin Kougoucheff"], ["Maria", "Benkirane"], ["Dide", "Beijer"], ["Grazia", "Ripepi"], ["Haine", "Ogata"], ["Elizaveta Anna", "Nemchinov"], ["Yukako", "Noi"], ["Anastasiya", "Tripolskaya"], ["Alexandra", "Nancarrow"], ["Mateja", "Kraljevic"], ["Renata", "Campagnolo"], ["Dominika", "Rozanska"], ["Marjorie", "Wladimirski"], ["Chantal", "Skamlova"], ["Laura", "Valkova"], ["Renata", "Arshavskaya"], ["Sandra", "Garriga Catala"], ["Iva", "Jancevski"], ["Lucia", "Soulie"], ["Pascalle", "Thenoux Acuna"], ["Chen Lu", "Wu"], ["Rita", "Vilaca"], ["Elena", "Bertoia"], ["Zanmarie", "Pienaar"], ["Karoline", "Grieshofer"], ["Luisanna", "Rodriguez"], ["Linn", "Timmermann"], ["Ankita", "Bhatia"], ["Luicelena", "Perez"], ["Chihiro", "Matsumoto"], ["Soumeya", "Anane"], ["Patricia", "Haas"], ["Agustina", "Valenzuela"], ["Smriti", "Joon"], ["Isabel", "Bischof"], ["Zi", "Yang"], ["Marie Elise", "Casares"], ["Chaimae", "Roudami"], ["Valentina", "Beccaria"], ["Akiko", "Okuda"], ["Melanie", "Benyadi"], ["Hua Chen", "Lee"], ["Skylar", "Kuykendall"], ["Denise", "Van Der Ben"], ["Viktoria", "Malova"], ["Tanya", "Noury"], ["Devon", "Kuijstermans"], ["Stacia", "Kissell"], ["Nattawadee", "Kotcha"], ["Rio", "Kitagawa"], ["Andrea", "Berzal Albaladejo"], ["Carlotta", "Orlando"], ["Amy", "Bowtell"], ["Ilinca", "Stoica"], ["Melanie", "Vlak"], ["Nikarat", "Wateenukit"], ["Kenna", "Kilgo"], ["Hao Ching", "Chan"], ["Noy", "Mor"], ["Ilijana", "Ivic"], ["Claudia", "Lorenzo Fernandez"], ["Zoe Gwen", "Scandalis"], ["Tracy", "Plant"], ["Eleni", "Konstantinidou"], ["Yaiza", "Franco"], ["Sarah", "Petrides"], ["Idia", "Amen"], ["Binasa", "Beslagic"], ["Hannah", "Martin Merchant"], ["Katarina", "Adamovic"], ["India", "Maggen"], ["Maria Eduarda", "Medeiros"], ["Aiko", "Yoshitomi"], ["Anastasia", "Klyueva"], ["Gwendolyne", "Laugier"], ["Yasmin", "Hamzawy"], ["Alexiina", "Ahonkivi"], ["Diletta", "Alessandrelli"], ["Natallia", "Vavulina"], ["Monica", "Puig"], ["Louise", "Reis De Campos"], ["Manon", "Provost"], ["Solene", "Ficheux"], ["Stephanie", "Ntcha"], ["Natalia", "Maynetto"], ["Irene", "Gandara Gonzalez"], ["Emi", "Mutaguchi"], ["Jovana", "Jaksic"], ["Caterina", "Ghedin"], ["Liv", "Geurts"], ["Flavia", "Porru"], ["Sabina", "Lupu"], ["Kim", "Sadi"], ["Karine", "Celis"], ["Gun Hee", "Kim"], ["Anna", "Vasilyeva"], ["Kinga", "Anusiewicz"], ["Paulina", "Petriskova"], ["Martha Elena", "Garza Del Alto"], ["Juliana", "Silva De Carvalho"], ["Yana", "Filyushina"], ["Maci", "Epstein"], ["Charlotte", "Villeminot"], ["Garbine", "Muguruza"], ["Ellen", "Tsay"], ["Kriszina", "Kapitany"], ["Marina", "Zhurba"], ["Wan Yi", "Sweeting"], ["Marina", "Moreno"], ["Laura Silva", "De Arruda"], ["Lauren", "Davis"], ["Ani", "Amiraghyan"], ["Emily", "Gitman"], ["Agnese", "Rella"], ["Jovana", "Blagojevic"], ["Julia", "Kimmelmann"], ["Daniela", "Garcia Diaz"], ["Reykan", "Woro"], ["Alexandra", "Aiello"], ["Caitlyn", "Williams"], ["Caroline", "Garcia"], ["Georgiana", "Patrasc"], ["Zarina", "Diyas"], ["Alicia", "Barnett"], ["Rejhana", "Mekic"], ["Daniel", "Kestenboum"], ["Ravnoor", "Kaur"], ["Kaede", "Matsuo"], ["Nikita", "Uberoi"], ["Stefana", "Andrei"], ["Charlotte", "Koning"], ["Raquel", "Fernandes"], ["Klara", "Fabikova"], ["Yanina", "Darishina"], ["Mojca", "Fijavz"], ["Blanka", "Szavay"], ["Elizabeth", "Thoms"], ["Manoela Corbellini", "Chiacchio"], ["Tijana", "Uzelac"], ["Luz Rocio", "Jara"], ["Amina", "Mrad"], ["Zeljana", "Radicevic"], ["Estelle", "Metadieu"], ["Cemre", "Anil"], ["Agnes", "Bukta"], ["Liliana", "Stoiu"], ["Valeriya", "Maksimchenko"], ["Ina", "Kaufinger"], ["Josepha", "Adam"], ["Lisa", "Ruckenbaum"], ["Felicitas", "Kastner"], ["Martina", "Trevisan"], ["Alessia", "Rossetti"], ["Jennifer", "Pusey"], ["Ainhoa", "Rico Martin"], ["Susana", "Florez"], ["Ingrid", "Vojcinakova"], ["Jil Nora", "Engelmann"], ["Nelli", "Buyuklianova"], ["Charitomeni", "Matoula"], ["Barbora", "Ruffini"], ["Beatriz", "Morales Hernandez"], ["Andreea", "Istrate"], ["Yulia", "Georgieva"], ["Matea", "Cutura"], ["Desiree", "Tran"], ["Christine", "Guerrazzi"], ["Stephanie M", "Vlad"], ["Hristina", "Dishkova"], ["Julia Mihaela", "Moldovan"], ["Emily", "Mazzola"], ["Amreen", "Chaudhary"], ["Anna", "Klasen"], ["Pleun", "Burgmans"], ["Sandra", "Roldan"], ["Ancia", "Ifill"], ["Tatiana", "Filaire"], ["Bianca", "Nicolela Susanna"], ["Jessica", "Lawrence"], ["Martina Alejandra", "Baca Villagomez"], ["Yauheniya", "Shapaval"], ["Disha Satish", "Agarwal"], ["Leticia", "Giudici"], ["Helen", "Harvey"], ["Sylwia", "Kociecka"], ["Valeria", "Campigotto"], ["Kamila", "Abdukadirova"], ["Darya", "Shulzhanok"], ["Elena", "Fayner"], ["Martina", "Demichelis"], ["Sofia", "Lozano"], ["Anna Clarice", "Patrimonio"], ["Mary Ann", "Balint"], ["Isabel", "Steger"], ["Polina", "Vinogradova"], ["Jenna", "Laroussi"], ["Sinem", "Alptekin"], ["Anastasia", "Vovk"], ["Rona", "Lavian"], ["Olga", "Kishchun"], ["Valentina", "Gemini"], ["Viktoriya", "Karmenova"], ["Adrija", "Runcha"], ["Naomi", "Holopainen"], ["Kelli", "Hine"], ["Ronit", "Yurovsky"], ["Leighann", "Sahagun"], ["Fabiana", "Araya"], ["Francesca M", "Fanchin"], ["Kateryna", "Pyatakova"], ["Julia", "Casselbury"], ["Meng Ning", "Deng"], ["Juliana", "Jofre"], ["Arney", "Johanessdottir"], ["Nadejda", "Sidorenko"], ["Belen", "Rivera"], ["Rachael", "Reed"], ["Antonia", "Markuskova"], ["Ekaterina", "Tour"], ["Polina", "Movchan"], ["Marzhan", "Kukoneva"], ["Sowjanya", "Bavisetti"], ["Mina", "Matsuba"], ["Anaeve", "Pain"], ["Nithya Raj", "Babu Raj"], ["Danielle Rose", "Collins"], ["Yongyuan", "Wang"], ["Fatima Zohra", "Boukezzi"], ["Patricia", "Ku Flores"], ["Caroline Betzave", "Lojan Cruz"], ["Nathania Ratih Putri", "Karsita"], ["Iryna", "Kyrychenko"], ["Petra", "Kubinova"], ["Risa", "Nakahara"], ["Catalina Paz", "Arce Riquelme"], ["Agata", "Baranska"], ["Jeanette", "Draeger"], ["Alina", "Pakharenko"], ["Khaoula", "Allaoui"], ["Karyna", "Alesha"], ["Gabrielle", "Moxey"], ["Eden Megan", "Chang"], ["Kana", "Natsume"], ["Haruka", "Taniguchi"], ["Vivian", "Heisen"], ["Eirdis", "Ragnarsdottir"], ["Jane", "Stewart"], ["Biola", "Akewula"], ["Viktoryia", "Kisialeva"], ["Lizeth Vanessa", "Gomez Diaz"], ["Camille", "Goodman"], ["Anna", "Makuha"], ["Bruna", "Magalhaes"], ["Kyria", "Dunford"], ["Emily", "Rodbourne"], ["Tamar", "Komakhidze"], ["Sarahi", "Garcia Carrera"], ["Aina", "Morey Juan"], ["Dora", "Pavlinic"], ["Eleanor", "Deaves"], ["Ioana Daniela", "Bighiu"], ["Kimika", "Sakamoto"], ["Lee", "Levy"], ["Aikaterini", "Stavroulaki"], ["Theresa", "Kleinsteuber"], ["Patricia", "Quintana Cerezo"], ["Nadya", "Syarifah"], ["Aggeliki", "Prezani"], ["Mina", "Saygi"], ["Lina", "Amouzoune"], ["Rebeca", "Aguilar Dominguez"], ["Fiona", "Gervais"], ["Julija", "Kulibaba"], ["Kendal", "Woodard"], ["Yujia", "Wang"], ["Mckenzie", "Thomas"], ["Ran", "Tian"], ["Simona", "Ionescu"], ["Marines", "Holguin"], ["Charlotte", "Roemer"], ["Anne Sophie", "Forget"], ["Yasuyo", "Numajiri"], ["Rachel", "Girard"], ["Carla", "Forte"], ["Camila Andrea", "Roca"], ["Shi Ying", "Li"], ["Desirae", "Krawczyk"], ["Kenia", "Vasallo Soto"], ["Stephanie", "Carmans"], ["Isidora", "Radojkovic"], ["Elizaveta", "Deykun"], ["Audrey", "Capouet"], ["Nicole", "Collie"], ["Elizabeta", "Bauer"], ["Benedetta", "Fasciani"], ["Paulina", "Czarnik"], ["Alice", "Garcia"], ["Mariangeles", "Gomez Quintana"], ["Sanae", "Ohta"], ["Tian", "Cao"], ["Angie", "Torres"], ["Brooke", "Taylor"], ["Maria Jose", "Buil Tellaeche"], ["Kerstin", "Gressmann"], ["Natasha", "Palha"], ["Ilona", "Kremen"], ["Lyuboslava", "Peruhova"], ["Chanelle", "Van Nguyen"], ["Soledad", "Calderon Arroyo"], ["Julia", "Teufel"], ["Laura", "Robson"], ["Nicole", "Hoynaski"], ["Samantha", "Pribaz"], ["Claudia Antonia", "Enache"], ["Vaibhavi", "Trivedi"], ["Libby", "Muma"], ["Aida", "Golman"], ["Seraina", "Jaeger"], ["Corina", "Jaeger"], ["Mirjam", "Zeller"], ["Aleksandra", "Nionova"], ["Karin", "Hoppler"], ["Jenya", "Plevako"], ["Robu", "Kajitani"], ["Nino G", "Sujashvili"], ["Pei Yu", "Sieh"], ["Maria", "Panaite"], ["Lin", "Zhu"], ["Maria", "Masini"], ["Alexandra", "Bykova"], ["Inna", "Bondarenko"], ["Valeryia", "Kulikouskaya"], ["Natasha", "Fourouclas"], ["Stephanie", "Nauta"], ["Antoaneta", "Tzarvulkova"], ["Diala", "Jamaleddine"], ["Anna Lena", "Friedsam"], ["Kate", "Vialle"], ["Anna", "Schubries"], ["Estelle", "Balan"], ["Elyzaveta", "Tymchenko"], ["Tessa", "Breve"], ["Saisai", "Zheng"], ["Katerina", "Kaminkova"], ["Tijana", "Rotim"], ["Fernanda Luvizotto Do", "Amaral"], ["Dariya", "Dashutina"], ["Dominika", "Toronyi"], ["Sarah", "Tremuth"], ["Ksenia", "Khatsey"], ["Camila", "Aguirri"], ["Giulia", "Ferrari"], ["Morgan", "Mccray"], ["Leela", "Beattie"], ["Danielle", "Zinn"], ["Astrid Maria", "Gehre Boettner"], ["Nelly", "Garcia Sanchez"], ["Steffany", "Bermudez"], ["Katharina", "Blik"], ["Siria Elena", "Brebenel"], ["Liubov", "Vasilyeva"], ["Katherine Gabriela", "Miranda Chang"], ["Jeannette", "Moesgen"], ["Deimante", "Bulatovaite"], ["Hyojung", "Yea"], ["Lorenza", "Stefanelli"], ["Charlene", "Favier"], ["Anais", "Deville"], ["Annika", "Beck"], ["Beatriz Valente", "De Castro Coelho"], ["Megane", "Bianco"], ["Morven", "Mcculloch"], ["Brenda", "Njuki"], ["Eri", "Hozumi"], ["Xinyi", "Jiang"], ["Katharina", "Lehnert"], ["Tijana", "Vrhovac"], ["Katerina", "Latalova"], ["Brianna", "Morgan"], ["Michala", "Kucharova"], ["Kateryna", "Kozlova"], ["Hao Chen", "Tang"], ["Mayte", "Calmet"], ["Vanessa Steffi", "Ortiz Perez"], ["Anna", "Montserrat Sanchez"], ["Elizabeth", "Arce"], ["Frances", "Altick"], ["Aminat", "Quadri"], ["Jessica", "Pegula"], ["Natalia", "Galan Gomez"], ["Elena Teodora", "Cadar"], ["Carol", "Augustine Benito"], ["Manon", "Peral"], ["Karolina", "Stuchla"], ["Eugenie", "Bouchard"], ["Caterina", "Lepore Palmisano"], ["Joanna", "Henderson"], ["Fang Chi", "Tsao"], ["Maria", "Pujol Serra"], ["Sinhee", "Kim"], ["Camila", "Acuna"], ["Michele", "Erkens"], ["Malin", "Ulvefeldt"], ["Da Un", "Lee"], ["Yuly Marcela", "Tamayo"], ["Petra", "Pokorna"], ["Elsa", "Pellegrinelli"], ["Cheng Ling", "Huang"], ["Candelaria", "Sedano Acosta"], ["Dafna", "Peleg"], ["Ekaterina", "Semenova"], ["Noemi", "Hemmerich"], ["Lize", "Leenknecht"], ["Soraya", "Moradian"], ["Sofiya", "Bogatova"], ["Maria Paula", "Deheza"], ["Maria Ines", "Deheza"], ["Jessie Felisia", "Pakaya"], ["Barbora", "Kijasova"], ["Caroline", "Van De Wijgaart"], ["Magdalena", "Cordero"], ["Ananya", "Sarkar"], ["Ashley M", "Kitchen"], ["Daria", "Gavrilova"], ["Asmae", "Benzit"], ["Deniz", "Ulutug"], ["Thaisa", "Pereira"], ["Daphne", "Van Den Heuvel"], ["An Sophie", "Mestach"], ["Andromachi", "Bakagianni"], ["Anna", "Mamalat"], ["Andreea", "Badileanu"], ["Nada", "Zaher"], ["Sofia", "Montemayor"], ["Vicki", "Saxegaard"], ["Cecilia", "Mercier"], ["Charlotte", "Pearce"], ["Daniela Renee", "Leitch"], ["Giulia", "Mastellone"], ["Carolin", "Schmidt"], ["Natalie", "Laus"], ["Ha Young", "Ji"], ["Maria", "Garoz Moreno"], ["Juliana", "Goncalves"], ["Nilushi", "Fernando"], ["Paloma Margarita", "Mereles Aranda"], ["Suzanna", "Grigoryan"], ["Carmene", "Dotto"], ["Alejandra", "Starkova"], ["Irina", "Constantinide"], ["Emma", "Onila"], ["Alisa", "Ogorodova"], ["Bruna", "Ponce"], ["Jaeyeon", "Kim"], ["Dariya", "Berezhnaya"], ["Barbara Guadalupe", "Urrutia"], ["Vlada", "Svarkovskaya"], ["Aliaksandra", "Sasnovich"], ["Elianne", "Douglas Miron"], ["Francesca", "Sella"], ["Cynthia", "Del Rey Guardiola"], ["Andrea Renee", "Villarreal"], ["Ekaterina", "Lavrikova"], ["Courtney", "Colton"], ["Maria Fernanda", "Vargas"], ["Ioana", "Posirca"], ["Janine", "Remler"], ["Alison", "Van Uytvanck"], ["Marcela", "Zacarias"], ["Qianqian", "Zhao"], ["Jana", "Boubelikova"], ["Olha", "Romanyshyn"], ["Dina", "El Harazi"], ["Ekaterina", "Tugarinova"], ["Daria", "Afanasyeva"], ["Kari", "Gunton"], ["Kamila", "Pavelkova"], ["Andrea", "Rodriguez Company"], ["Daria", "Salnikova"], ["Lena", "Specht"], ["Elisabeth", "Abanda"], ["Konstantina", "Tsadari"], ["Claudia Lazara", "Magarino Lopez"], ["Alicia", "Fernandez Galvez"], ["Waka", "Kirihata"], ["Rei", "Ikeda"], ["Elizaveta", "Ignatova"], ["Antonia", "Conze"], ["Shani", "Blecher"], ["Hanna", "Landener"], ["Julia", "Jones"], ["Olena", "Kyrpot"], ["Cristina", "Nicolae"], ["Kelly", "Southwood"], ["Kyle", "Mcphillips"], ["Eva", "Rodriguez De Las Heras"], ["Arantxa", "Sanchez"], ["Brittany", "Lashway"], ["Viktorija", "Rajicic"], ["Sarai", "Flores Diaz"], ["Silky", "Sachdeva"], ["Ganna", "Poznikhirenko"], ["Amy", "He"], ["Catherine", "Harrison"], ["Chia Hsien", "Yang"], ["Kelli Elizabeth", "Close"], ["Florencia", "Magni"], ["Risa", "Ozaki"], ["Maria Ximena", "Herrera Rea"], ["Olivia", "Larsson"], ["Samantha Rose", "Droop"], ["Yuumi", "Totsuka"], ["Maayan", "Mastey"], ["Anna", "Abadias Morales"], ["Ana Sofia", "Sanchez"], ["Julia", "Wachaczyk"], ["Natalia", "Davila"], ["Patrizia", "Fusco"], ["Daniela", "Vanko"], ["Magdalena", "Stencel"], ["Sofico", "Kadzhaya"], ["Natnicha", "Ruangsumrej"], ["So Hee", "Jung"], ["Sohinee", "Ghosh"], ["Katarzyna", "Kapustka"], ["Alejandra", "Diaz Mares"], ["Anastasia", "Vdovenco"], ["Kirandeep Kaur", "Kotade"], ["Nela", "Platkova"], ["Vera", "Tverdikova"], ["Marta", "Galka"], ["Alexia", "Rycroft"], ["Steffy", "Canals Baker"], ["Romaine", "Zenhausern"], ["Andrea", "Norlander"], ["Skylar Alexandra", "Morton"], ["Mandy", "Wagemaker"], ["Anastasiya", "Zubkova"], ["Aashima", "Garg"], ["Andjela", "Novcic"], ["Katarina", "Pavlovic"], ["Rosalie", "Willig"], ["Vannesa", "Gunawan"], ["Sung Hee", "Kim"], ["Sharifah Syafeenaz", "Syed Azmir"], ["Daria", "Shakoulina"], ["Christina", "Shakovets"], ["Stephany", "Gamiz"], ["Caty", "Santos"], ["Janina", "Mistecky"], ["Angelica", "Sepulveda"], ["Laura", "Svatikova"], ["Sophie", "Dunlop"], ["April", "Van Gennip"], ["Yafan", "Wang"], ["Tria Rizki", "Amalia"], ["Tristen Z", "Dewar"], ["Roumeila", "Zhir"], ["Carita", "Moolman"], ["Noelia", "Zeballos"], ["Simina Teodora", "Bodea"], ["Misano", "Sato"], ["Caitlin Paige", "Hindmarsh"], ["Jelena", "Lazarevic"], ["Konstantina", "Papaoikonomou"], ["Alejandra", "Obando"], ["Haruna", "Umemoto"], ["Nadejda", "Stavreva"], ["Irene", "Martinez Del Olmo"], ["Irina", "Slizovskaya"], ["Asel", "Espolova"], ["Grace", "Min"], ["Rocio", "Martin Fernandez"], ["Giada", "Clerici"], ["Reem", "Fayed"], ["Elisa", "Idini"], ["Ecaterina", "Oproiu"], ["Adina Alexandra", "Marinescu"], ["Kirsten", "Lewis"], ["Saneeya", "Singh"], ["Ellen", "Allgurin"], ["Kelsey", "King"], ["Stephanie", "Loutsenko"], ["Zalina", "Khairudinova"], ["Melissa Emile", "Kandinata"], ["Deborah", "Suarez"], ["Kathinka", "Von Deichmann"], ["Isadora Borges", "Zwetsch"], ["Andrea", "Crespo De La Concepcion"], ["Athena", "Nathalia"], ["Lisa", "Andersson"], ["Martina", "Biollo"], ["Chinatsu", "Shimizu"], ["Asya", "Latifoglu"], ["Daria", "Prytkova"], ["Camille", "Lalou"], ["Yana", "Yurchenko"], ["Georgina", "Sellyn"], ["Snigdha", "Padamata"], ["Mila", "Majtan"], ["Miu", "Ema"], ["Yara", "Abed"], ["Maeva", "Razakasoa"], ["Cornelia", "Lister"], ["Mariami", "Skhirtladze"], ["Isabella", "Catelani"], ["Maya", "Jansen"], ["Ana Maria", "Gilca"], ["Isotta", "Mancini"], ["Makoto", "Ninomiya"], ["Zainab", "Ali Sajjad"], ["Devan", "Mccluskey"], ["Paula", "Castro"], ["Cisil Buse", "Ilgazli"], ["Nina", "Catovic"], ["Gabriela", "Porubin"], ["Sara", "Castellano"], ["Maria Jose", "Samano Moreno"], ["Mariah", "Plauth"], ["Lucie", "Chrastecka"], ["Tijana", "Filipovic"], ["Samantha", "Koelliker"], ["Soo Bin", "Oh"], ["Melissa", "Missaglia"], ["Emiliya", "Gadzhieva"], ["Ann Kathrin", "Schmitz"], ["Denise", "Maxl"], ["Sharon Sanchana", "Paul"], ["Karolina", "Rozenberg"], ["Lorena", "Constantin"], ["Nadia Yahya Tear", "Tjahjana"], ["Pernilla", "Mendesova"], ["Sara", "Sherif"], ["Martina", "Chrobakova"], ["Giulia", "Riepe"], ["Julia", "Dinhof"], ["Dinara", "Khalilova"], ["Vesilina", "Ivanova"], ["Malene", "Stripp"], ["Sari", "Baba"], ["Giulia", "Guidetti"], ["Lenice", "Van Eyk"], ["Suleika", "Besser"], ["Reika", "Agata"], ["Emy", "Damiani"], ["Federica", "Spazzacampagna"], ["Naomi", "Tran"], ["Tabata Oshiro", "Coutinho"], ["Julia", "Elbaba"], ["Silvia", "Margaroli"], ["Sofia", "Garcia Morales"], ["Susan", "Niemann"], ["Valentina", "Quinones"], ["Manya", "Nagpal"], ["Michelle", "Bertolini"], ["Sonya", "Latycheva"], ["Martina", "Parmigiani"], ["Yuriko", "Ono"], ["Angelika", "Sobiecka"], ["Elizaveta", "Luzina"], ["Martina", "Zavarise"], ["Francesca", "Fusinato"], ["Darina", "Dobrovolski"], ["Bilyana", "Savova"], ["Prarthana G", "Thombare"], ["Liora", "Krasnopolski"], ["Andrea", "Mekel"], ["Lauren", "Stratman"], ["Carla", "Tur Mari"], ["Theiviya", "Selvarajoo"], ["Rana", "Sherif Ahmed"], ["Emilija", "Ceranic"], ["Rona", "Berisha"], ["Basak", "Eraydin"], ["Anastasia", "Frolova"], ["Nadia", "Ravita"], ["Kristina", "Beznakova"], ["Brooke Lindsey", "Hughes"], ["Rhiann", "Newborn"], ["Annika", "Sillanpaa"], ["Ana Paula", "Menezes Simoes"], ["Reka", "Muller"], ["Sonora", "Ijdo"], ["Olivia", "Boesing"], ["Barbara", "Rivera Rivera"], ["Olga", "Doroshina"], ["Emma", "Allen"], ["Konstantina", "Lalaouni"], ["Aldea", "Rinciari"], ["Carla", "Georgescu"], ["Anita", "Husaric"], ["Patricia", "Martins"], ["Andressa Cristina", "Souza"], ["Arushi", "Jain"], ["Maria", "Milanova"], ["Yaar Ester", "Shafir"], ["Tanaporn", "Thongsing"], ["Isabella", "Fernandez Diaz"], ["Yui", "Tomita"], ["Hui Ling", "Sun"], ["Chloe", "Paquet"], ["Montserrat", "Gonzalez"], ["Jessica", "Birowski"], ["Andrea", "Retolaza Andrade"], ["Taisiya", "Zakarlyuk"], ["Pauline", "Payet"], ["Sara", "Eccel"], ["Katya", "Malikova"], ["Giovana", "Patitucci"], ["Daiana", "Hail"], ["Elizabeth", "Means"], ["Nigina", "Abduraimova"], ["Gabriela", "Van De Graaf"], ["Daria", "Gajos"], ["Shannon", "Cox"], ["Lauren", "Chypyha"], ["Janine", "Koleta"], ["Ann Kathrin", "Wind"], ["Selma", "Husic"], ["Lobke", "Haepers"], ["Tina", "Mohorcic"], ["Camilla", "Scala"], ["Sofiya", "Kovalets"], ["Natsumi", "Kobayashi"], ["Tamitha", "Nguyen"], ["Michele", "Grimm"], ["Vimbai Patience", "Ugaro"], ["Chiara", "Pappacena"], ["Tanya Amala", "Burgula"], ["Nastja", "Kolar"], ["Abla", "Chadli"], ["Ana Helena", "De Moraes Pinto"], ["Yuka", "Hayashi"], ["Sara", "Sussarello"], ["Caroline", "Romeo"], ["Covadonga", "Muradas"], ["Maria Concepcion", "Bulilan"], ["Ratnika", "Batra"], ["Mingyang", "Liu"], ["Julia", "Valetova"], ["Abbie", "Myers"], ["Eloise", "Gournay"], ["Honoka", "Kawauchi"], ["Nicole", "Ballach"], ["Jazzamay", "Drew"], ["Tiffany", "William"], ["Luise", "Intert"], ["Natasha", "Micevski"], ["Alena", "Karpova"], ["Rachel", "Porter"], ["Erina", "Hayashi"], ["So Ra", "Lee"], ["Maria", "Palhoto"], ["Xue", "Zhang"], ["Alejandra", "Alvarez"], ["Brandy", "Mina"], ["Miriam Ruth", "Lane"], ["Antonia", "Berse"], ["Kimberley Ann", "Surin"], ["Natalija", "Kostic"], ["Chiara", "Trovi"], ["Ella", "Leivo"], ["Gussie", "Osullivan"], ["Consuelo", "Costantino"], ["Patricia Maria", "Tig"], ["Viktoria", "Laskutova"], ["Kirstie", "Pathumanun Hearn"], ["Andrea", "Duva"], ["Kathleen", "Derienzo"], ["Tjasa", "Srimpf"], ["Irem", "Ergun"], ["Eleonore", "Tchakarova"], ["Pamela", "Lopez Cervantes"], ["Ekaterina", "Donetskova"], ["Verginie", "Tchakarova"], ["Silvia", "Garcia Jimenez"], ["Loes", "Janssen"], ["Lea", "Winkler"], ["Beatriz", "Leon Hernandez"], ["Ashley", "Keir"], ["Sybille", "Gauvain"], ["Emira", "Spaho"], ["Anel", "Luus"], ["Emi", "Yamaguchi"], ["Alina", "Hoelzel"], ["Laura", "Pigossi"], ["Monica Putri Kusuma", "Wardhani"], ["Tamara", "Bizhukova"], ["Lina", "Gjorcheska"], ["Sveva", "Mazzari"], ["Noemi", "Giraudo"], ["Amrita", "Mukherjee"], ["Siyu", "Qin"], ["Beatrice Shirin", "Khosravi"], ["Seda", "Arantekin"], ["Dina", "Karina"], ["Natalie", "Novakova"], ["Hui Zhen", "Ruan"], ["Federica", "Benitez Zafra"], ["Thyra", "Taune"], ["Samantha", "Lee"], ["Ericka Roxana", "Rivero"], ["Storm", "Sanders"], ["Sofia", "Dmitrieva"], ["Alexandra", "Martinez"], ["Mariame", "Toure"], ["Vijayalakshmi", "Radhakrishnan"], ["Ximena", "Siles Luna"], ["Natalie", "Lozano"], ["Amanda", "Gilson"], ["Blair", "Shankle"], ["Stella", "Di Michele"], ["Alisa", "Kniazeva"], ["Gunjee", "Sukhbat"], ["Pauline", "Descat"], ["Jesika", "Maleckova"], ["Avni", "Jain"], ["Konstantina", "Adami"], ["Galina", "Bykova"], ["Sonya Sheeran", "Stover"], ["Eva", "Castiglioni"], ["Thais", "Castiglioni"], ["Marian", "Martin Garcia"], ["Maria", "Alvarez Aguaron"], ["Angelica", "Moratelli"], ["Preethi", "Ujjini"], ["Paloma", "Villalba"], ["Yuxuan", "Zhang"], ["Guadalupe", "Perez Rojas"], ["Svetlana", "Patakhonova"], ["Ursula", "Alvarado Camino"], ["Kelsey", "Laurente"], ["Areeporn", "Wanichayapanich"], ["Shkekyana", "Dubova"], ["Francesca", "Rescaldani"], ["Alena", "Vasilyeva"], ["Miki", "Ukai"], ["Jessica", "Ren"], ["Saray", "Sterenbach"], ["Natasha", "Prokhnevska"], ["Dael Alma", "Mckenna"], ["Zarah", "Razafimahatratra"], ["Verena Jane", "Scott"], ["Olivera", "Tadijin"], ["Solomiya", "Zinko"], ["Veronika", "Mazalova"], ["Catherine", "Parenteau St Antoine"], ["Samantha", "Czarniak Rego"], ["Joanna", "Jurca"], ["Ons", "Jabeur"], ["Manon", "Arcangioli"], ["Lauren", "Schmidt"], ["Giovanna", "Manifacio"], ["Ysaline", "Bonaventure"], ["Ayane", "Iwai"], ["Jaimy Gayle", "Van De Wal"], ["Victoria", "Pahlett"], ["Suzy", "Tan"], ["Margarita", "Gasparyan"], ["Anna", "Smolina"], ["Minori", "Himeno"], ["Alexandra", "Sigouin"], ["Elena", "Maltseva"], ["Sabina", "Sharipova"], ["Jennifer", "Slotow"], ["Melisa", "Martinov"], ["Hanna", "Victorsson"], ["Meriem", "Chaouachi"], ["Sophie", "Arnuti"], ["Diera", "Saidmukhamedova"], ["Suzuka", "Furukawa"], ["Paula", "Veza"], ["Sarie", "Swanepoel"], ["Kourtney J", "Keegan"], ["Macarena", "Asensos"], ["Aimee", "Tarun"], ["Lien", "Van Geel"], ["Mai", "El Kamash"], ["Madeline", "Lipp"], ["Silvia", "Albano"], ["Elina", "Svitolina"], ["Karyn", "Guttormsen"], ["Anna Karolina", "Schmiedlova"], ["Ki Ryang", "Kim"], ["Stefanie", "Kastner"], ["Barbora", "Trestikova"], ["Krista", "Hardebeck"], ["Mana", "Ayukawa"], ["Tamari", "Tskhakaia"], ["Gabrielle Olamide", "Idera"], ["Alana", "Parnaby"], ["Aareyalee Amrutsinh", "Chavan"], ["Misaki", "Mori"], ["Stefania", "Hristov"], ["Yana", "Erkeeva"], ["Stephanie", "Wagner"], ["Mariagiovanna", "Nanti"], ["Olga", "Saez Larra"], ["Genevieve", "Luksich"], ["Estefania Julieta", "Valli"], ["Polina", "Leykina"], ["Ornella Marcela", "Spinetta"], ["Ana Maria", "Crisan"], ["Marinel", "Rudas"], ["Camille", "Descamps"], ["Christine", "Kandler"], ["Helen", "De Cesare"], ["Ai Wen", "Zhu"], ["Gabriela", "Duca"], ["Daniella", "Daniel"], ["Likitha", "Shetty"], ["Diana", "Sumova"], ["Lisa", "Wegmair"], ["Haruka", "Kaji"], ["Sabina", "Kairanbayeva"], ["Sophie", "Watts"], ["Anneka", "Watts"], ["Clementina Eugenia", "Riobueno De Paola"], ["Marijana", "Novakovic"], ["Aina", "Hernandez Soler"], ["Laia", "Hernandez Soler"], ["Petra", "Kopic"], ["Momoka", "Hoshino"], ["Alexandra", "Clark"], ["Philippa", "Tepper"], ["Giovana", "Da Costa Rodrigues Alves"], ["Joana", "Eidukonyte"], ["Shizuka", "Hisamitsu"], ["Victoria", "Bosio"], ["Charlotte", "Swaans"], ["Xi Wei", "Cai"], ["Ivana", "Horvat"], ["Dominika", "Lackova"], ["Sabina Elena", "Preda"], ["Sabina", "Kurbanova"], ["Elpida", "Papanelopoulou"], ["Valeria", "Franco"], ["Eva", "Sung"], ["Molly", "Polak"], ["Louise", "Holtum"], ["Giulia", "Cerutti"], ["Nidhi", "Chilumula"], ["Alena", "Poletinova"], ["Raquel", "Mateus"], ["Bogna", "Nowicka"], ["Tereza", "Smitkova"], ["Karin", "Terami"], ["Yi Ping", "Chang"], ["Teresa", "Afuang Haro"], ["Sofiya", "Chekunova"], ["Luna", "Cagnoni"], ["Emilie", "Elsvad"], ["Anna Kate", "Anderson"], ["Nanami", "Masuoka"], ["Sophie", "Pismont"], ["Stella", "Crick"], ["Laura Margareta", "Luca"], ["Pei Chi", "Lee"], ["Justyna", "Pajak"], ["Tereza", "Jankovska"], ["Nune", "Khachatryan"], ["Imane Maelle", "Kocher"], ["Chiara", "Rinaldi"], ["Rebecca", "Andrade"], ["Anastasiya", "Halaburda"], ["Tanya", "Samodelok"], ["Audrey", "Jumel"], ["Hannah", "Sulz"], ["Mariana", "Ranzahuer Garcia Calderon"], ["Kelly", "Williford"], ["Laura", "Cardone"], ["Macie", "Elliott"], ["Tereza", "Martincova"], ["Deniz", "Khazaniuk"], ["Audrey", "Albie"], ["Andreea Ana", "Buiculescu"], ["Riko", "Sawayanagi"], ["Giovanna", "Lombardi"], ["Michaela", "Capannolo"], ["Olivia", "Nicholls"], ["Nastasia", "Boitier Legourd"], ["Francesca", "Palmigiano"], ["Stephanie", "Tedja Abdi"], ["Spirit", "Edley"], ["Tina", "Rupert"], ["Amy", "Zhu"], ["Salma", "Charif"], ["Mia Nicole", "Eklund"], ["Tamara", "Curovic"], ["Caroline B", "Dailey"], ["Fatem Zahra", "Erraji"], ["Puspa Ratih", "Tri Oktavira"], ["Julia", "Bochkareva"], ["Marcela", "Alves Pereira Valle"], ["Clemence", "Fayol"], ["Helga Margret", "Jeske"], ["Andrea", "Lazaro Garcia"], ["Katarzyna", "Witos"], ["Lynn", "Chi"], ["Luiza", "Sharipova"], ["Marine", "Partaud"], ["Anastasia", "Rudakova"], ["Georgia", "Craven"], ["Quinn", "Gleason"], ["Jana", "Mccord"], ["Maria Azul", "Cortiana"], ["Yana", "Sizikova"], ["Babilina", "Machaidze"], ["Giorgia", "Stridacchio"], ["Rachel May", "Pierson"], ["Darya", "Chernetsova"], ["Fatyha", "Berjane"], ["Minami", "Shuto"], ["Ekaterina", "Alexandrova"], ["Misato", "Negi"], ["Clothilde", "De Bernardi"], ["Vladyslava", "Zanosiyenko"], ["Sofia", "Benhalima"], ["Adela", "Jarosova"], ["Dorota", "Markowska"], ["Danka", "Kovinic"], ["Kelly", "Versteeg"], ["Marie", "Natroshvili"], ["Annika", "Hepp"], ["Santina", "Lange"], ["Emilija", "Kokanovic"], ["Lauren", "Harrington"], ["Adas", "Luiza Ferrari"], ["Miyu", "Kato"], ["Olga", "Babanova"], ["Sarah", "Candeloro"], ["Saroop", "Dhatt"], ["Masa", "Jovanovic"], ["Takhmina", "Burkhanova"], ["Mariajose", "Cardona"], ["Carolina", "Likhatcheva"], ["Azra", "Hadzic"], ["Mikayla", "Morkel Brink"], ["Gaelle", "Rey"], ["Cristina", "Bejarano Jimenez"], ["Mallaurie", "Noel"], ["Yukari", "Tsujimoto"], ["Borislava", "Botusharova"], ["Nao", "Hibino"], ["Si Ying Julienne", "Keong"], ["Daniella", "Arcila"], ["Amanda", "Cerda Miranda"], ["Veronica", "Lacerda"], ["Louise", "Lampla"], ["Kim", "Borg"], ["Sofia", "Araujo"], ["Jane", "Fennelly"], ["Xiaorong", "Dong"], ["Bernarda", "Pera"], ["Polina", "Lyuksheva"], ["Jacqueline", "Crawford"], ["Emily", "Burns"], ["Christina", "Oberger"], ["Lauren", "Burich"], ["Claudia", "Coppola"], ["Ipek", "Birol"], ["Alina", "Jane"], ["Susanne", "Celik"], ["Daniela", "Montoya Sierra"], ["Zerina", "Gozhdari"], ["Alena", "Tarasova"], ["Montserrat", "Alonso"], ["Annika", "Schneider"], ["Nina", "Khrisanova"], ["Rano", "Nizamova"], ["Nicoleta", "Dan"], ["Nana", "Nemoto"], ["Jillian", "Rooney"], ["Khanh Phi", "Huynh"], ["Ana", "Batiri"], ["Olivia", "Messineo"], ["Mariella", "Calderon"], ["Brittany", "Brewster"], ["Chiara", "Rebecchi"], ["Patcharin", "Cheapchandej"], ["Viktoryia", "Mun"], ["Hitomi", "Hasebe"], ["Iris Julia Antje", "Verweij"], ["Victoria", "Bensimon"], ["Viviana", "Tedino Morandi"], ["Beatrice", "Kight"], ["Alexandra", "Goncharova"], ["Emma", "Devine"], ["Maria Andrea", "Cardenas"], ["Rosalie", "Van Der Hoek"], ["Ting Ya", "Wang"], ["Elodie", "Busson"], ["Preeti", "Gokhale"], ["Ayaka", "Santo"], ["Zoe Adeline", "Katz"], ["Rowan", "Arafat"], ["Maylis", "Lafaysse"], ["Sarah", "Savedra"], ["Yana", "Sluzhiteleva"], ["Morgan", "Barnhill"], ["Sheila", "Jacobo"], ["Maria Julia", "Bernal Penteado De Lima Mendes"], ["Victoria", "Zukowski"], ["Eva", "Paalma"], ["Paula", "Insaurralde"], ["Michela", "Verpelli"], ["Breaunna", "Addison"], ["Neda", "Koprcina"], ["Sandra", "Bendlova"], ["Anna Signe", "Rasmussen"], ["Pei Chuan", "Kao"], ["Manon Cristina", "Peri"], ["Maria", "Kajikawa"], ["Erin", "Faulkner"], ["Anna", "Tyulpa"], ["Elke", "Lemmens"], ["Anna", "Woosley"], ["Madison", "Crawford"], ["Yukiho", "Yasuda"], ["Natalia L S", "Abdalla"], ["Lee", "Or"], ["Nicole", "Robinson"], ["Fatmanur", "Atilgan"], ["Gulsah", "Cetin"], ["Madina", "Khatamova"], ["Yuanyi", "Yu"], ["Ana", "Stojacic"], ["Saori", "Enmoto"], ["Inas", "Ziki"], ["Marijana", "Vlahinic"], ["Dhanielly", "Quevedo"], ["Gulnaz", "Dokey"], ["Jessica", "Perez"], ["Maree Teiwa", "Casey"], ["Elena", "Pavolucci"], ["Carol Yubitza", "Arnez  Mercado"], ["Michaela", "Marikova"], ["Zeineb", "Ben Hamida"], ["Liniques", "Theron"], ["Evy", "Van Genechten"], ["Saska", "Gavrilovska"], ["Danielle", "Konotoptseva"], ["Louise", "Kwong"], ["Angeles", "De Los Rios"], ["Lena", "Lutzeier"], ["Adriana", "Gergelyova"], ["Yulia", "Putintseva"], ["Laura", "Mueller"], ["Si Qi", "Liu"], ["Hedda", "Odegaard"], ["Greta", "Di Majo"], ["Alanna", "Wolff"], ["Mariana", "Drazic"], ["Violeta", "Jankovic"], ["Miriana", "Tona"], ["Arthi", "M"], ["Ivanka", "Mocic"], ["Nora", "Niedmers"], ["Milena", "Toseva"], ["Sitara", "Prabhu"], ["Nicole", "Cianci"], ["Klaartje", "Liebens"], ["Nicole", "Bonnaffoux"], ["Ao", "Gai"], ["Ana", "Ruiz"], ["Apichaya", "Runglerdkriangkrai"], ["Nastassia", "Rubel"], ["Nadia", "Echeverria Alam"], ["Samira", "Radjaa"], ["Marina", "Marti Hernanz"], ["Fang Ying", "Xun"], ["Khee Yen", "Wee"], ["Laksmi", "Nuraningsih"], ["Nikita", "Deshmukh"], ["Savannah", "Wood"], ["Lara", "Afonso Garcia"], ["Shivani", "Manchanda"], ["Jerricka", "Boone"], ["Sai Samhitha", "Chamarthi"], ["Taylor L", "Davidson"], ["Kiah", "Generette"], ["Miho", "Kowase"], ["Zuzanna", "Maciejewska"], ["Marnelle", "Boshoff"], ["Grace", "Orourke"], ["Silvia", "Fuentes Perez"], ["Katerina", "Baka"], ["Giorgia", "Marchetti"], ["Anushka", "Bhargava"], ["Kett", "Sadi"], ["Guadalupe", "Delgado"], ["Sonja", "Becarevic"], ["Grace Maleka", "Mpassy Nzoumba"], ["Michelle", "Erasmus"], ["Isadora", "Vieira"], ["Belinda", "Woolcock"], ["Spencer", "Liang"], ["Wing Man", "Lin"], ["Salma", "Cabrera"], ["Libi", "Mesh"], ["Carla", "Bruzzesi Avella"], ["Nuria", "Ormeno Ruiz"], ["Kristina", "Ostojic"], ["Anna", "Shkudun"], ["Julaluck", "Sae Eung"], ["Majlena", "Pedersen"], ["Maria", "Limanskaya"], ["Tamara", "Vrhovac"], ["Shanna", "Krimatschow"], ["Bhuvana", "Kalva"], ["Yuliya", "Alexsandrova"], ["Yulia", "Shupenia"], ["Nabila", "Farah"], ["Cassie", "Pough"], ["Diana", "Shevchenko"], ["Peeraya", "Charoensirisutthikul"], ["Yani", "Genesse"], ["Caroline", "Cordat Auclair"], ["Hanna", "Karczewska"], ["Laura", "Holterbosch"], ["Cecilie Lundgaard", "Melsted"], ["Alicia Andrea", "Rodriguez Castillo"], ["Mariami", "Gogelashvili"], ["Arianna", "Fardanesh"], ["Gornganok", "Tiraganok"], ["Hee Jin", "Oh"], ["Sydney", "Campbell"], ["Alina", "Soltanici"], ["Sol", "Ferrero"], ["Franziska", "Lautenschlager"], ["Ebony", "Panoho"], ["Sherry", "Li"], ["Eduarda Nardi Dos", "Santos"], ["Ksenia", "Gaydarzhi"], ["Carlotta", "Svaluto"], ["Ivana", "Andric"], ["Ji Hee", "Choi"], ["Gabriela", "Pantuckova"], ["Kim Jana", "Hausler"], ["Sinead", "Lohan"], ["Zhaoxuan", "Yang"], ["Claudia", "Gaspar"], ["Chu Chen", "Chuen"], ["Chiara", "Quattrone"], ["Jessica", "Cortes"], ["Ye Rin", "Lee"], ["Disha", "Dang"], ["Marta", "Morga Alonso"], ["Alpha", "Ambaye"], ["Saumya", "Vig"], ["Weronika", "Halicka"], ["Ana Laura", "Gutierrez"], ["Zeynep", "Nalbantoglu"], ["Francesca Dorothea", "Ciutescu"], ["Stefani", "Stojic"], ["Alyssa Grace", "Smith"], ["Alina", "Robok"], ["Yuan", "Xin"], ["Carina", "Witthoeft"], ["Katy", "Dunne"], ["Daria", "Glushich"], ["Oksana", "Koshman"], ["Anastasiya", "Saitova"], ["Madison", "Keys"], ["Natalie", "Faeh"], ["Ana Marija", "Banic"], ["Samantha", "Crawford"], ["Ana Beatriz", "Balderas"], ["Dominique", "Covington"], ["Adrianna", "Zorawska"], ["Magnolia", "Galvez"], ["Mayara", "Galvez"], ["Giulia", "Maiorana"], ["Victoria", "Jorjoliani"], ["Parminder", "Kaur"], ["Lana", "Rostiashvili"], ["Alice", "Lamaro"], ["Pattaraporn", "Salirathavibhaga"], ["Rotem", "Shveber"], ["Begum", "Dilek"], ["Zarina", "Yunusalieva"], ["Skye", "Hopper"], ["Idil", "Ozdamar"], ["Sofia", "Henning"], ["Maura", "Aveta"], ["Iva", "Mekovec"], ["Andrea", "Vosecka"], ["So Dam", "Park"], ["Fabiana", "Pitisci"], ["Alexandra", "Morozova"], ["Ima", "Nindi"], ["Viktoriya", "Tomova"], ["Lauren Joanna", "Lang"], ["Femke", "Van Diemen"], ["Coline", "Chauvet"], ["Natnicha", "Sirijariyaporn"], ["Michelle", "Werbrouck"], ["Laura", "Gulbe"], ["Ann Christin", "Nilsson"], ["Svetlana", "Zdorova"], ["Paula Estefania", "Diaz Cabrera"], ["Milena", "Vitez"], ["Alejandra Maria", "Marma Gutierrez"], ["Jialu", "Huang"], ["Katharina", "Hering"], ["Sonja", "Liasovska"], ["Jan", "Abaza"], ["Adriana", "Lavoretti"], ["Erika", "Vogelsang"], ["Mirea", "Signorini"], ["Siyu", "Chen"], ["Tess", "Sugnaux"], ["Annie", "Donaldson"], ["Zoel", "Kastelic"], ["Carmen", "Smolka"], ["Anna Maria", "Levers"], ["Xin", "Yang"], ["Claudia", "Sanchez Gonzalez"], ["Johanna", "Ranta Aho"], ["Camille", "Giacalone"], ["Nagi", "Hanatani"], ["Xu Liu", "Sun"], ["Saravinder", "Pannu"], ["Jamie", "Loeb"], ["Rongrong", "Leenabanchong"], ["Daniela", "Ciobanu"], ["Yulia", "Zakharova"], ["Farah", "Abdelaziz"], ["Anjali", "Thakur"], ["Deborah", "Kerfs"], ["Amanda", "Spindola Veiga"], ["Zineb", "Rajib"], ["Marlou", "Kluiving"], ["Su Jeong", "Jang"], ["Nahathai", "Khuntaket"], ["Sanaa", "Benkaddour"], ["Klara", "Skopac"], ["Arianna", "Tricarico"], ["Anna", "Arustamyan"], ["Marie", "Benoit"], ["Amelia", "Stuart"], ["Angela", "Sokovnikova"], ["Megha", "Sehrawat"], ["Liza", "Fieldsend"], ["Morgan", "Chumney"], ["Sanae", "Guenfoudi"], ["Margarita", "Kotok"], ["Rikako", "Suga"], ["Irina Maria", "Bara"], ["Maria", "Martin Lozano"], ["Lisa", "Schlatter"], ["Shehnaz", "Singh"], ["Caroline", "Kallberg"], ["Justine", "De Sutter"], ["Mayya", "Katsitadze"], ["Irina Elena", "Preotescu"], ["Anna", "Veleva"], ["Aggeliki", "Kokkota"], ["Andreea", "Mihai"], ["Alina", "Abdurakhimova"], ["Andrada", "Hai"], ["Aliya", "Tarpischeva"], ["Lucia", "Zelenka"], ["Marie", "Klocker"], ["Natalia", "Janowicz"], ["Tereza", "Susen"], ["Kanika", "Vaidya"], ["Vanja", "Babunski"], ["Tatiana", "Guskova"], ["Daniela", "Schippers"], ["Marina", "Hruba"], ["Olga", "Ianchuk"], ["Esther", "Zelaya"], ["Midian", "Tulio"], ["Elpida", "Malamou"], ["Julija", "Jauk"], ["Amy", "Sneath"], ["Alison Brigette", "Sanders"], ["Tanvee", "Bose"], ["Vivienne", "Kulicke"], ["Jin Li", "Tang"], ["Valeria", "Bhunu"], ["Chih Hsien", "Chu"], ["Teodora", "Stinga"], ["Alexandra", "Rey"], ["Catrine", "Landstrom"], ["Taryn", "Swanepoel"], ["Iga", "Odrzywolek"], ["Claudia", "Herrero Garcia Honorato"], ["Paula Andrea", "Puentes Jimenez"], ["Barbora", "Stefkova"], ["Christina", "Lao"], ["Shakhlo", "Saidova"], ["Brittany", "Collens"], ["Darya", "Lebesheva"], ["Sofia", "Sabljarevic"], ["Mia", "King"], ["Georgina", "Segarra Ferrer"], ["Michelle Marie", "Valdez"], ["Tyra", "Kotuwattegedera"], ["Alexandra", "Osborne"], ["Anastasiia", "Zviahintseva"], ["Soyeon", "Park"], ["Ana M", "Sanchez"], ["Nancy", "Karaky"], ["Grace Lola", "Lymer Sullivan"], ["Erin", "Routliffe"], ["Gema", "Mendoza"], ["Alina", "Ageichik"], ["Ines", "Fontanarosa"], ["Wendy Qi Wen", "Zhang"], ["Petra", "Uberalova"], ["Brigit", "Folland"], ["Jennifer", "Brady"], ["Zhamilia", "Duisheeva"], ["Donika", "Bashota"], ["Nora Luciana", "David"], ["Rocio Daniela", "Merlo"], ["Miriam", "Monsutti"], ["Valeria", "Prosperi"], ["Ines", "Nicault"], ["Lucia", "Ioli"], ["Maegan", "Manasse"], ["Miki", "Kobayashi"], ["Mengjuan", "Yi"], ["Denise", "Starr"], ["Ana", "Baran"], ["Amiru", "Shimoguchi"], ["Alejandra", "Cisneros"], ["Evangeline", "Repic"], ["Gabriela", "Srodowski"], ["Maaya", "Uno"], ["Madrie", "Le Roux"], ["Madina", "Hatamova"], ["Lisa Marie", "Maetschke"], ["Kathryn", "Hughes"], ["Monica", "Robinson"], ["Joanna Nena", "Savva"], ["Alba", "Escalona Perny"], ["Diana", "Bogoliy"], ["Akiho", "Kakuya"], ["Victoria", "Rodriguez"], ["Kassandra", "Dunser"], ["Tarrannum", "Handa"], ["Anastasia", "Pogorelskaya"], ["Sarah Inga", "Senger"], ["Nicolin", "Luecke"], ["Intissar", "Rassif"], ["Efriliya", "Herlina"], ["Amanda", "Carrillo Galera"], ["Nihel", "Adjali"], ["Sarah", "De Clercq"], ["Natalia", "Vajdova"], ["Valeria", "Salazar"], ["Jade", "Suvrijn"], ["Tina", "Jiang"], ["Valeria", "Danilova"], ["Luisa", "Rosa"], ["Alisa", "Tymofeyeva"], ["Sofia", "Santa Maria"], ["Hanna", "Sohn"], ["Brooke", "Rischbieth"], ["Minami", "Akiyama"], ["Solene", "Guyomard"], ["Aldila", "Sutjiadi"], ["Nicole", "Aragones Miro Quesada"], ["Xixi", "Feng"], ["Natella", "Nabieva"], ["Nataliya", "Naumova"], ["Valeria", "Koussenkova"], ["Rana", "Sabry"], ["Margarita", "Febrer Marza"], ["Evgeniya", "Svintsova"], ["Joy", "Yaich"], ["Izabella", "Ismailova"], ["Tsveta Konstantinova", "Dimitrova"], ["Alory Regina Elorriaga", "Pereira"], ["Fatma", "Al Janahi"], ["Andrea", "Ivanovic"], ["Lea", "Godallier"], ["Tena", "Lukas"], ["Cassidy", "Spearman"], ["Sachia", "Vickery"], ["Jieke", "Stroobant"], ["Alzbeta", "Veverkova"], ["Jenna", "Davidson"], ["Jodi", "Davidson"], ["Irina", "Khromacheva"], ["Lolade", "Ogungbesan"], ["Tamara", "Korpatsch"], ["Anabel", "Ossombi"], ["Ingrid", "Navarro Rodriguez"], ["Helena", "Phillips"], ["Corina", "Mader"], ["Yuliya", "Lysa"], ["Voni", "Darlina"], ["Stefani", "Andreeva"], ["Natalia", "Zhuravleva"], ["Vishesh", "Vkc"], ["Marine", "Beugre Guyot"], ["Maria", "Cespedes"], ["Laura", "Gibanel Velasco"], ["Michela", "Isella"], ["Hayley", "Carter"], ["Lauren", "Marker"], ["Mihoki", "Miyahara"], ["Daniela", "Vita"], ["Lou", "Brouleau"], ["Anna", "Segarra Rius"], ["Selma", "Saran"], ["Beatrice", "Caruso"], ["Tereza", "Hejlova"], ["Olaya", "Garrido Rivas"], ["Daniela", "Raygadas Dominguez"], ["Paula", "Pastor Mir"], ["Maria Paula", "Coyos"], ["Vanessa", "Dobson"], ["Nikola", "Schweinerova"], ["Nina", "Asanin"], ["Lexi", "Borr"], ["Barbara", "Capellari Abou Haikal"], ["Mouna", "Jebri"], ["Ana Carolina", "Sigaki"], ["Nicole", "Fossa Huergo"], ["Jiahui", "Chen"], ["Samantha", "Asch"], ["Camilla", "Rosatello"], ["Maurien", "Rikkert"], ["Sophie", "Blom"], ["Amanda", "Castillo"], ["Olivera", "Veskovac"], ["Victoria", "Vorontsova"], ["Sabina", "Jeresic"], ["Jessica", "Raith"], ["Isil", "Ileri"], ["Razina", "Shaibu"], ["Andrea", "Prisco"], ["Marlies", "Szupper"], ["Mariami", "Kurasbediani"], ["Sansitha", "Nandakumar"], ["Carolina", "Cuevas Bucio"], ["Angela", "Assal"], ["Caterina", "Brunamonti"], ["Thais", "Nascimento"], ["Marija", "Bogicevic"], ["Alexis", "Thoma"], ["Nataliya", "Kotova"], ["Clara", "Hoffman Loza"], ["Beatriz", "Machado Santos"], ["Natasha", "Piludu"], ["Laura", "Gamarra"], ["Valeriya", "Strakhova"], ["Eliza", "Long"], ["Aneta", "Dvorakova"], ["Mingxiu", "Du"], ["Kristin Vivien", "Rehse"], ["Marine", "Fontaine"], ["Nehel", "Sahni"], ["Carolina", "Costamagna"], ["Emily", "Fanning"], ["Laura", "Ucros"], ["Kamilla", "Galieva"], ["Maria", "Kefala"], ["Jennifer", "Zerbone"], ["Volha", "Barshcheuskaya"], ["Barbare", "Eristavi"], ["Daria", "Sharapova"], ["Eugenie", "Chapelle"], ["Marta", "Sramkova"], ["Rozel Asuncion", "Hernandez"], ["Skylar", "Holloway"], ["Antonella", "Altamirano"], ["Kamila", "Kerimbayeva"], ["Aldana", "Ciccarelli"], ["June", "Lee"], ["Jessica", "Simpson"], ["Nadja", "Stojcic"], ["Anna Maria", "Battista"], ["Tayla", "Stenta"], ["Carol", "Zhao"], ["Mi Jeong", "Kwon"], ["Anna Maria", "Heil"], ["Berta", "Bonardi"], ["Ayaka", "Okuno"], ["Giuliana", "Verbauwen"], ["Luisa Marie", "Huber"], ["Yana", "Parshina"], ["Ella", "Taylor"], ["Yuko", "Kimura"], ["Yennifer", "Delgado"], ["Leslie", "Espinoza"], ["Perrine", "Boisset"], ["Fabienne", "Vincon"], ["Vilma Y", "Gomez"], ["Ana", "Gonzalez Andrade"], ["Matea", "Zemunik"], ["Giovanna", "Fioretti"], ["Susanna", "Ciccone"], ["Adrijana", "Lekaj"], ["Alexandra", "Kiick"], ["Camila", "Tobar"], ["Emma", "Janssen"], ["Melissa", "Ullrich"], ["Allie", "Kiick"], ["Rasheeda", "Mcadoo"], ["Salma", "Chouhib"], ["Kristina", "Chasovskikh"], ["Yukiko", "Midorikawa"], ["Aleksandra", "Reljic"], ["Natalia", "Perepadenko"], ["Andrea", "Martinovska"], ["Xiao Xuan", "Guo"], ["Karin", "Kennel"], ["Maria Camila", "Trujillo Hoyos"], ["Gisele", "Dufour"], ["Yelena", "Nemchen"], ["Karina", "Rovira"], ["Jelena", "Stefanovic"], ["Camilla", "Diez"], ["Despoina", "Vogasari"], ["Maayan", "Sela"], ["Katerina", "Boiko"], ["Ilinca Teodora", "Bercaru"], ["Millie", "Radovic"], ["Megan", "Mccray"], ["Spurti", "Shivalingaiah"], ["Anna Katalina", "Alzate Esmurzaeva"], ["Claudia", "Marini"], ["Anastasia", "Tokareva"], ["Minori", "Yonehara"], ["Lu", "Yu"], ["Teodora Adina", "Ardeleanu"], ["Anabel", "Carbo Estruch"], ["Swetha", "Sree Hari"], ["Yasmine", "Rashad"], ["Natalia", "Kattah"], ["Alix", "Theodossiou"], ["Andrea", "Ternera"], ["Judit", "Vives Joan"], ["Ya Hsuan", "Lee"], ["Natsumi", "Chimura"], ["Danielle", "Wagland"], ["Ana Gabriela", "Gerbasi"], ["Eva", "Rutarova"], ["Georgiana", "Ruhrig"], ["Victoria", "Todorova"], ["Alice", "Bacquie"], ["Anna", "Zhylchuk"], ["Samantha", "Palacio"], ["Alexis", "Casati"], ["Senaida", "Kambel"], ["Carlee", "Rizzolo"], ["Maria", "Sakkari"], ["Carmen", "Blanco"], ["Adriana", "Silva"], ["Ivania", "Martinich"], ["Alena", "Mayevskaya"], ["Farah", "Mouri"], ["Natasa", "Brnovic"], ["Dasha", "Sergeeva"], ["Sujin", "Yoon"], ["Carmen", "Schauer"], ["Hanemas", "Pangestu"], ["Diana", "Ryashko"], ["Julyette Maria Josephine", "Steur"], ["Beatriz", "Abreu"], ["Ann", "Okoro"], ["Lenka", "Kuncikova"], ["Claudia", "Chavarria Perez"], ["Kana", "Daniel"], ["Angelina", "Salihbaeva"], ["Anastasiya", "Zablotskaya"], ["Ines", "Canepa"], ["Di Andrea", "Galloway"], ["Alena", "Panfilova"], ["Taylor", "Ng"], ["Sofia", "Rojas"], ["Agustina", "Serio"], ["Jana", "Haid"], ["Victoria", "Kan"], ["Tamar", "Shahaf"], ["Saule", "Valantiejute"], ["Chanikarn", "Silakul"], ["Luca", "Fabian"], ["Rebecca", "Peterson"], ["Lynn", "Kiro"], ["Ana Sofia", "Cordero"], ["Nour", "Tohamy"], ["Sarah Beth", "Askew"], ["Cristiana", "Ferrando"], ["Kristina", "Lagoda"], ["Miriam", "Rosell Canudas"], ["Andreea Maria", "Trocan"], ["Alexandra", "Zachem"], ["Claudia", "Cirillo"], ["Gozde", "Adar"], ["Petra", "Rohanova"], ["Leolia", "Jeanjean"], ["Luisa Maria", "Varon Diaz"], ["Tatiana", "Feliciano Granda"], ["Jelena", "Popovic"], ["Gabriela", "Valdes Garcia"], ["Viktoriya", "Klimushkina"], ["Zamira", "Jadue"], ["Aya", "Tanaka"], ["Mara Sofia", "Martinez Santori"], ["Mary", "Closs"], ["Yulia", "Chubarova"], ["Ka Man Carina", "Ma"], ["Yasmine", "Xantos"], ["Chalena", "Scholl"], ["Minami", "Uesugi"], ["Tiffany", "Hoberth"], ["Emilia", "Granstrom"], ["Varunya", "Chandrashekar"], ["Carolina", "Barsante"], ["Yuki Kristina", "Chiang"], ["Alice", "Zapolla"], ["Anna", "Danilina"], ["Isabella", "Kimberly"], ["Fernanda", "Rodriguez Navarro"], ["Vita", "Taher"], ["Amy", "Olivier"], ["Shangqing", "Yang"], ["Gabriela", "Talaba"], ["Katrina", "Andrzejevska"], ["Malin", "Cubukcu"], ["Nicolette", "Tran"], ["Se Hyun", "Kim"], ["Cecilia", "Barrionuevo"], ["Charlene", "Mueller"], ["Nishtha", "Dudeja"], ["Tereza", "Janatova"], ["Anastasia", "Gavryukova"], ["Anastasia", "Reimchen"], ["Madeline", "Bosnjak"], ["Fiona", "Codino"], ["Astrid", "Leclere"], ["Ximena", "Mino"], ["Yumeka", "Maeda"], ["Audrey", "Bois"], ["Ilona", "Golynker"], ["Sarah", "Finck"], ["Lea", "Tholey"], ["Bruna", "Pacheco Chaves"], ["Kalita", "Saraiva"], ["Karla", "Popovic"], ["Rika", "Yamamoto"], ["Szabina", "Szlavikovics"], ["Aissa", "Muamba"], ["Eszter", "Palinkas"], ["Yui", "Kiyohara"], ["Frederikke", "Karst"], ["Selina", "Jordi"], ["Emilia", "Tenizbaeva"], ["Wu", "Mei Qi"], ["Nini", "Guensler"], ["Sydney", "Rider"], ["Sanya", "Madan"], ["Astra", "Sharma"], ["Larissa", "Ravanini De Souza"], ["Jasmina", "Stojiljkovic"], ["Sofia", "Compostizo De Andres"], ["Sonja", "Larsen"], ["Alice Alexandra", "Banica"], ["Paula", "Sanchez"], ["Madara", "Straume"], ["Shannon", "Hudson"], ["Mieri", "Aoki"], ["Kikka", "Adachi"], ["Marian Jade", "Capadocia"], ["Katherine", "Ip"], ["Arianna", "Paules Aldrey"], ["Laura", "Enea"], ["Marina", "Albert"], ["Elke", "Tiel"], ["Dominika", "Paterova"], ["Elena", "Sava"], ["Valentina", "Lia"], ["Margarita", "Khasanova"], ["Khwanthiti", "Banthao"], ["Leonela", "Gonzalez"], ["Maria Constanza De Las Mercedes", "Vega"], ["Maria", "Avgerinos"], ["Noelia Alejandra", "Acuna"], ["Patricia", "Lancranjan"], ["Olga", "Baikoulova"], ["Mariana", "Gould"], ["Carmen", "Pestano Hernandez"], ["Ji Hey", "Lee"], ["Alice", "Wenner"], ["Rocio", "Macri"], ["Ambika", "Pande"], ["Nikki", "Luttikhuis"], ["Denisa", "Kulhankova"], ["Makoto", "Nishida"], ["Camila", "Fuentes"], ["Alice", "Matteucci"], ["Zhi Yan", "Ye"], ["Dominique", "Karregat"], ["Riko", "Tachibana"], ["Pippa", "Horn"], ["Diana", "Vlad"], ["Keiko", "Fukui"], ["Anna", "Davydova"], ["Abir", "El Fahimi"], ["Sri Vaishnavi", "Peddi Reddy"], ["Laura", "Pertusa Garcia"], ["Feruzabonu", "Saidova"], ["Helena", "Korompis"], ["Franceske", "Stroh"], ["Jana", "Nabel"], ["Hikari", "Yamamoto"], ["Luisa", "Fernandez"], ["Diana", "Tokar"], ["Ines Miren", "De Pablo"], ["Kyoka", "Okamura"], ["Liberty", "Crawford"], ["Josephine", "Jedrychowski"], ["Ayano", "Sonoda"], ["Laura", "Sanchez"], ["Melissa", "Laing"], ["Charlotte", "Klasen"], ["Ellen", "Perez"], ["Brooke", "Broda"], ["Nina", "Stadler"], ["Ayaka", "Kanai"], ["Aniek", "Van Rossum"], ["Eetee", "Maheta"], ["Brianna", "Lashway"], ["Laura", "Torres"], ["Stuti", "Singh Tomar"], ["Tamari", "Chalaganidze"], ["Rafaela Arsenia", "Alipranti"], ["Violetta", "Shatalova"], ["Julia", "Albuquerque"], ["Ana", "Glumac"], ["Amina", "Mukhametshina"], ["Sang Hee", "Park"], ["Lani", "Tuemmers"], ["Naomi", "Totka"], ["Andjela", "Stojkovic"], ["Na Young", "Lee"], ["Elena", "Cortimiglia"], ["Giovanna", "Baccarini"], ["Anastasiya", "Shestakova"], ["Alexandra", "Grinchishina"], ["Ivanka", "Karamalak"], ["Ana Gabriela", "Meis"], ["Yuliya", "Brotgal"], ["Kathrin", "Spendier"], ["Cristina", "Adamescu"], ["Danielle", "Vernier"], ["Zhi Huan Eva", "Chen"], ["Maika Jae", "Tanpoco"], ["Vladica", "Babic"], ["Kim", "Kermet"], ["Polina", "Bezsmertnaya"], ["Bridget", "Liddell"], ["Sofia", "Salimova"], ["Luize Liva", "Strike"], ["Audrey", "Marquard"], ["Burcu", "Tari"], ["Angela", "Tejedor Espinosa"], ["Joana", "Vale Costa"], ["Veronika", "Stotyka"], ["Lisanna", "Pihlak"], ["Gabriella", "De Santis"], ["Mariam", "Kiknadze"], ["Janina", "Geiss"], ["Sultan", "Gonen"], ["Hannah", "King"], ["Wallis", "Vitis"], ["Chiara", "Icardi"], ["Chompoothip", "Jandakate"], ["Cassandre", "Thebault"], ["Elena", "Cerezo Codina"], ["Deborah", "Cruciani"], ["Masa", "Marc"], ["Josie", "Kuhlman"], ["Nam Yeon", "Jun"], ["Brooke", "Harding"], ["Snezhana", "Nekrasova"], ["Elizaveta", "Kardaseva"], ["Marijana", "Acimovic"], ["Gabriela", "Bueno"], ["Marika", "Akkerman"], ["Teodora", "Djordjevic"], ["Florencia", "Dezotti"], ["Kimberley", "Zimmermann"], ["Marie", "Decamps"], ["Ivona", "Stankovic"], ["Elaine", "Van Zyl"], ["Peggy", "Porter"], ["Polina", "Merenkova"], ["Yuriko", "Miyazaki"], ["Giulia", "Perrone"], ["Brenda", "Rique"], ["Carolina", "Sa"], ["Emily", "Dunne"], ["Juli", "Raventos"], ["Liudmila", "Gazzaeva"], ["Surya", "Tejaswini"], ["Catherine", "Shulman"], ["Eva", "Zagorac"], ["Marija", "Radulovic"], ["Gabriele", "Bertasiute"], ["Yesmine", "Kharrat"], ["Rima", "Asatrian"], ["Christiana", "Brigante"], ["Elise", "Mertens"], ["Leciane", "Comparin Da Silva"], ["Juana", "Zambrano"], ["Aandrita", "Deb"], ["Sofia", "Blanco"], ["Daria", "Sapogova"], ["Mizuno", "Kijima"], ["Abbie", "Pahz"], ["Kristin", "Wiley"], ["Alyza", "Benotto"], ["Julia", "Wagner"], ["Ludivine", "Burguiere"], ["Ioanna", "Markesini"], ["Maria Vitoria", "Beirao"], ["Nikol", "Yordanova"], ["Dajana", "Cvjetkovic"], ["Nadja", "Dzafic"], ["Bolzan", "Ana Paula"], ["Elena", "Rief"], ["Ferny", "Angeles Paz"], ["Laura", "Correia"], ["Victoria", "Duval"], ["Aymet", "Uzcategui"], ["Avika", "Sagwal"], ["Agne", "Cepelyte"], ["Tatsiana", "Sakovich"], ["Breana", "Stampfli"], ["Kristina", "Mathis"], ["Shellita", "Haughton"], ["Sharon", "Biondi"], ["Camila", "Blanes"], ["Paula", "Rodriguez"], ["Ethel", "Kouniavsky"], ["Jelena", "Dzinic"], ["Ege", "Kurtoglu"], ["Selenay", "Heper"], ["Gabriella", "Castaneda"], ["Teodora", "Radosavljevic"], ["Ani", "Gogvadze"], ["Natalia", "Siedliska"], ["Anastasia", "Koveshnikova"], ["Eden", "Konorti"], ["Vera", "Bessonova"], ["Laura Sarah", "Ambrozic"], ["Fangzhou", "Liu"], ["Kristina", "Savchenkova"], ["Adi", "Milstein"], ["Anastasia", "Kuprina"], ["Hila", "Mizrahi"], ["Maria", "Zubkova"], ["Hannah", "Nagel"], ["Katrin", "Tebaldini"], ["Assem", "Myssyr"], ["Miriam", "Civera Lima"], ["Barbora", "Krejcikova"], ["Cristina", "Ene"], ["Anita", "Safronenka"], ["Ee Yi Olivia", "Koh"], ["Nicoleta Catalina", "Dascalu"], ["Nerma", "Caluk"], ["Samantha", "Harris"], ["Celina", "Bester"], ["Chiara", "Carboni"], ["Misaki", "Shuto"], ["Camila", "Valencia"], ["Shreya", "Pasricha"], ["Barbara", "Rico Godino"], ["Sofia", "Macias Mendoza"], ["Vania", "Ivanova"], ["Zongzhen", "Li"], ["Anett", "Kontaveit"], ["Yukun", "Zhang"], ["Nouha", "Ziki"], ["Maria Belen", "Da Luz"], ["Marine", "Meraut"], ["Nicol", "Padilla"], ["Macarena", "Olivares Lopez"], ["Jessie Lynn", "Paul"], ["Blaga", "Delic"], ["Alessandra", "Polese"], ["Maria", "Ouazzani"], ["Alberta", "Detogni"], ["Maftuna", "Yunusova"], ["Elif", "Turgul"], ["Yan", "Wang"], ["Paulina", "Wulcan"], ["Anna", "Bini"], ["Idhun", "Safaati"], ["Elba", "Kasum"], ["Yosr", "Elmi"], ["Caroline", "Brinson"], ["Mina", "Markovic"], ["Federica", "Prati"], ["Yuqi", "Sheng"], ["Jasmine", "Paolini"], ["Roksana", "Lukasiak"], ["Dinara", "Imazhanova"], ["Marija", "Mastilovic"], ["Sanya", "Sinha"], ["Oana Carmen", "Trus"], ["Simone", "Pratt"], ["Eleanor", "Dean"], ["Monet", "Willis"], ["Sara", "Marjanovic"], ["Trinidad Maria", "Merdeni"], ["Ioana Andreea", "Sascau"], ["Alzbeta", "Houbova"], ["Francisca", "Hernandez"], ["Helene", "Scholsen"], ["Ailen", "Crespo Azconzabal"], ["Amangul", "Mollayeva"], ["Sara", "Mitrovic"], ["Sara", "Palcic"], ["Xenia", "Oberson"], ["Ivana", "Klac"], ["Maria Paulina", "Perez Garcia"], ["Paula Andrea", "Perez Garcia"], ["Nouha", "Bazir"], ["Anke", "Poncelet"], ["Shanon", "Bronzi"], ["Kayla Symone", "Price"], ["Anastassiya", "Bessarab"], ["Suellen", "Abel"], ["Ming Ming Joy", "Chia"], ["Gabrielle", "Smith"], ["Yu Mi", "Hwang"], ["Gulben", "Guldas"], ["Aleksandra", "Zenovka"], ["Rebecca", "Smaller"], ["Giulia", "Leone"], ["Katharina", "Feldmer"], ["Mineri", "Sukegawa"], ["Victoria", "Ocheva"], ["Fanny", "Caramaro"], ["Kamilla", "Farhad"], ["Olivia", "Pimia"], ["Natalie", "Cvackova"], ["Olga", "Arruabarrena Vecino"], ["Giulia", "Pairone"], ["Irina", "Lidkovskaya"], ["Olivia", "Sneed"], ["Morgan", "Bernabe"], ["Amreen", "Naaz"], ["Mercedes", "Lopez Velez"], ["Molly", "Reed"], ["Megan", "Smith"], ["Khrystsina", "Kandratsiuk"], ["Catiana", "Kaercher"], ["Naz", "Karagoz"], ["Kanami", "Tsuji"], ["Yukino", "Emi"], ["Daniela", "Carrillo"], ["Asiya", "Dair"], ["Angelique", "Svinos"], ["Maliha", "Al Awaidy"], ["Tatiana", "Grigoryan"], ["Anna", "Grigoryan"], ["Brigitte", "Beck"], ["Angela", "Lorenzo Garrido"], ["Aslina", "Chua"], ["Ariana", "Rodriguez"], ["Jacqueline", "Cabaj Awad"], ["Hsin Min", "Chin"], ["Anna", "Sanford"], ["Elena", "Golovnyova"], ["Cristina", "Perez De La Torre Ma"], ["Jana", "Schober"], ["Zofia", "Kulig"], ["Ulyana", "Ayzatulina"], ["Sophie", "Cloessner"], ["Dominique", "Esparza Fuster"], ["Siriyakorn", "Makpoon"], ["Chiara", "Volejnicek"], ["Antonella", "Murialdo"], ["Jana", "Jablonovska"], ["Petra", "Remedio"], ["Sona", "Priscakova"], ["Christi", "Woodson"], ["Gaby Alexandra", "Fonseca Tamayo"], ["Yana", "Mogilnitskaya"], ["Daniela", "Garstea"], ["Aziza", "Berriri"], ["Yuliya", "Latokhina"], ["Roos", "Van Der Zwaan"], ["Justina", "Mikulskyte"], ["Resha", "Chandak"], ["Emma", "Haakansson"], ["Sabina", "Shaydullina"], ["Lena", "Pacholski"], ["Emily", "Casteleyn"], ["Katya", "Krivoshapov"], ["Tiare", "Rebolledo"], ["Woyla", "Waluyo"], ["Georgia", "Brescia"], ["Yeong Won", "Jeong"], ["Anja", "Bebic"], ["Kristina", "Pastukhova"], ["Brooke", "Austin"], ["Domenica", "Gonzalez"], ["Ana Filipa", "Santos"], ["Janet", "Koch"], ["Isabella", "Capato Camargo"], ["Maria", "Ahumada"], ["Anastasia", "Pribylova"], ["Verolalaina Helene", "Radilofe"], ["Emily", "Da Silva Chang"], ["Maria Del", "Prados Cid"], ["Ekaterina", "Popova"], ["Felicitas", "Runkel"], ["Kamonwan", "Buayam"], ["Beatrice", "Lombardo"], ["Lyann", "Hoang"], ["Eleonora", "Mindiyarova"], ["Julia", "Przybylska"], ["Ines", "Arfaoui"], ["Greta", "Mokrousova"], ["Carol", "Finke"], ["Sonja", "Balic"], ["Kelly", "Shaffer"], ["Angeliki", "Kairi"], ["Dajana", "Dukic"], ["Daria", "Chernyshkova"], ["Britt", "Geukens"], ["Komal", "Nagare"], ["Evita", "Febri Habsari"], ["Karolina", "Snita"], ["Sumina", "Eshiro"], ["Juliana Jose", "Parra Gomez"], ["Adriana", "Rajkovic"], ["Janaya", "Smith"], ["Cassie", "Mercer"], ["Grace", "Dixon"], ["Ayumi", "Mori"], ["Claudia", "Williams"], ["Aida", "Kalimullina"], ["Ralina", "Kalimullina"], ["Oleksandra", "Korashvili"], ["Elizaveta", "Khabarova"], ["Nikola", "Tomanova"], ["Helena", "Nyikos"], ["Laura", "Tanfin"], ["Maria Jose", "Zehnder"], ["Hayley", "Macpherson"], ["Jandayia", "Lubin"], ["Natalie", "Syme"], ["Alize", "Boccard"], ["Tatjana", "Stoll"], ["Alena", "Macharova"], ["Busra", "Kayrun"], ["Julia", "Terziyska"], ["Mahitha", "Dadi Reddy"], ["Lea", "Bruno"], ["Sarvinoz", "Sharipova"], ["Stephanie J", "Smith"], ["Monika", "Stanikova"], ["Viktoriya", "Yankovskaya"], ["Sara", "Ottomano"], ["Alba", "Carrillo Marin"], ["India", "Sanders"], ["Oana Georgeta", "Simion"], ["Mana", "Furuhashi"], ["Madison", "Frahn"], ["Sandra", "Segura Mandarino"], ["Hadley", "Berg"], ["Bianca", "Ravinis Lombardi"], ["Erin", "Larner"], ["Estelle", "Cascino"], ["Hayaka", "Murase"], ["Amanda Miguel", "Perez Franco"], ["Stephani", "Rodriguez"], ["Francesca", "Gariglio"], ["Eden", "Silva"], ["Devin", "Chypyha"], ["Katrine Isabel", "Steffensen"], ["Caroline", "Doyle"], ["Mia", "Middleton"], ["Ji Yun", "Yun"], ["Jade", "Hilton"], ["Giorgia", "Bove"], ["Kennan", "Johnson"], ["Mami", "Adachi"], ["Barbara", "Haas"], ["Julie", "Noe"], ["Klaudia", "Szabo"], ["Veronica", "Napolitano"], ["Angela", "Dahnous"], ["Raquel", "Montalvo"], ["Colomba", "Di Filippo"], ["Natalie", "Hepburn"], ["Katarzyna", "Pyka"], ["Stephanie", "Doboara"], ["Martine", "Ditlev"], ["Jeongyun", "Lee"], ["Maria", "Uvarova"], ["Anna", "Shepita"], ["Alina", "Zolotareva"], ["Chisa", "Hosonuma"], ["Regina", "Clark"], ["Alina", "Lazareva"], ["Cheyenne", "Biancheri"], ["Rutuja", "Bhosale"], ["Maria", "Gomez Saldarriaga"], ["Lise", "Brulmans"], ["Camila", "Ramos"], ["Aneta", "Miksovska"], ["Sandra", "Bolstad"], ["Nour", "Azzouz"], ["Yagmur", "Akgul"], ["Alessandra", "Vacca"], ["Man Ying Maggie", "Ng"], ["Srijita", "Ghosh"], ["Alma", "Thell Lenntorp"], ["Klara", "Thell Lenntorp"], ["Andrea", "Kulova"], ["Linda", "Dubska"], ["Giulia", "Crescenzi"], ["Ayumi", "Oishi"], ["Maria", "Martinez Martinez"], ["Viviana", "Onorato"], ["Ana", "Oparenovic"], ["Maria Elisa", "Franco"], ["Andrea", "Dikosavljevic"], ["Jin Ju", "Lee"], ["Madison", "Westby"], ["Mayo", "Hibi"], ["Mari", "Osaka"], ["Kristyna", "Hrabalova"], ["Jihene", "Benzeggouta"], ["Oana", "Irimescu"], ["Nagisa", "Nishimura"], ["Valeriya", "Boyanovska"], ["Caitlin", "Bernard"], ["Maria Regina", "Espindola Mancera"], ["Aziza", "Bhiri"], ["Damira", "Muminovic"], ["Gyung Eun", "Song"], ["Caroline", "Uebelhoer"], ["Priscilla", "Medlich Leal"], ["Mouna Naila", "Azzouni"], ["Manon", "Robine"], ["Aleksandra", "Mally"], ["Iva", "Primorac"], ["Amit", "Gavrieli"], ["Leire", "Martin Tena"], ["Marta", "Ruszczynska"], ["Pippa", "Carr"], ["Elizaveta", "Kulichkova"], ["Lou", "Adler"], ["Ilka", "Csoregi"], ["Magdalena", "Stoilkovska"], ["Hristina", "Dyankova"], ["Kelly", "Pedrazzoli"], ["Silvia", "Russo"], ["Mariia", "Tcakanian"], ["Drousile", "Dzeubou"], ["Alizee", "Michaud"], ["Ipek", "Soylu"], ["Ying", "Zhang"], ["Taylor", "Townsend"], ["Nicole", "Mingazzini"], ["Irina", "Fetecau"], ["Andrea", "Raaholdt"], ["Aliona", "Ladutska"], ["Ioana", "Ducu"], ["Aysenur", "Durmus"], ["Nikki", "Kallenberg"], ["Kathrine", "Berge"], ["Sarah", "Dvorak"], ["Daria", "Vasekina"], ["Eliana", "Antequera"], ["Alessandra", "Vargas"], ["Arianne", "Hartono"], ["Anastasiya", "Yepisheva"], ["Ilze", "Hattingh"], ["Eudice Wong", "Chong"], ["Carolina Meligeni Rodrigues", "Alves"], ["Ashleigh", "Barty"], ["Anastasiya", "Shcherbakova"], ["Rheeya", "Doshi"], ["Iana", "Tishchenko"], ["Eliana Sol", "Gonzalez"], ["Paulina", "Rustecka"], ["Da Hye", "Kim"], ["Sumeera", "Kamil"], ["Yukina", "Saigo"], ["Teertha", "Iska"], ["Lizanne", "Jinkertz"], ["Pauline", "Wuarin"], ["Meike", "Vorschel"], ["Natalie Greer Watts", "Da Silveira"], ["Claudia", "Negron"], ["Julie", "Garret"], ["Ashley", "Barron"], ["Ksenija", "Sharifova"], ["Gabriela", "Pereira Alves"], ["Silvia", "Mocciola"], ["Marta", "Bellucco"], ["Dominique", "Beauvais"], ["Angeline Devi", "Devanthiran"], ["Paula", "Smetak"], ["Stefani", "Hofer"], ["Tanja", "Tuomi"], ["Nicole", "Mitchell"], ["Mayar", "Sherif"], ["Anna", "Bryukhova"], ["Suryaningsih", "Suryaningsih"], ["Sade", "Atkinson"], ["Crystal", "Sutar"], ["Andreea", "Gradinaru Fometescu"], ["Elisa Mai", "Koonik"], ["Lujza", "Ryskova"], ["Carmen", "Blasco Robaina"], ["Natalie", "Suk"], ["Giulia", "Della Cioppa"], ["Maurine", "Lena"], ["Debora Emanuela", "Scurt"], ["Agustina Elena", "Otegui"], ["Kyra", "Wojcik"], ["Maria", "Bogdanova"], ["Katerina", "Siniakova"], ["Anelisse", "Torrico"], ["Johnnise", "Renaud"], ["Risa", "Ushijima"], ["Valeria", "Patiuk"], ["Camila", "Gil"], ["Alexandria", "Stiteler"], ["Ah", "Song"], ["Erin Kane", "Rodriguez"], ["Annabelle", "Andrinopoulos"], ["Barbara", "Kotelesova"], ["Xiaodi", "You"], ["Marine", "Dans"], ["Sarah", "Baron"], ["Dejana", "Radanovic"], ["Cory Pierina", "Molina Chenet"], ["Hannah En Xin", "Chew"], ["Sandra", "Honigova"], ["Timea", "Jaruskova"], ["Isabela", "Jovanovic"], ["Aleksandra", "Emelianova"], ["Ulrikke", "Hoyer"], ["Ana Fernanda", "Loaiza Esquivias"], ["Louisa", "Chirico"], ["Petra", "Piirtola"], ["Qian Nan", "Feng"], ["Monika", "Rajicic"], ["Martina", "Husarova"], ["Kylie", "Waschuk"], ["Dugleisy", "Linares"], ["Mila", "Popivoda"], ["Indy", "De Vroome"], ["Karoline", "Kurz"], ["Sabrina", "Federici"], ["Paola", "Gullino"], ["Michele Alexandra", "Zmau"], ["Karina", "Silkina"], ["Tereza", "Melicharkova"], ["Daniella", "Silva"], ["Bianca", "Birkenstock"], ["Mariami", "Dolashvili"], ["Yuri", "Sugimoto"], ["Nina Isabella", "Scholten"], ["Eleni", "Stamati"], ["Daria", "Lodikova"], ["Dea Ioanna", "Petropoulou"], ["Anne Liz", "Jeukeng"], ["Nadege", "Jorda"], ["Veronika", "Badurova"], ["Beatriz", "Maia"], ["Yasmina", "El Sayed"], ["Yvonne", "Bruce Tagoe"], ["Christina", "Makarova"], ["Seda", "Vardanyan"], ["Milica", "Sljukic"], ["Gracia", "Mboko"], ["Beatriz", "Haddad Maia"], ["Sara", "Djurdjevic"], ["Maria Styliani", "Botsa"], ["Koralie", "Etienne"], ["Ekaterina", "Klyueva"], ["Maria", "Zotova"], ["Milica", "Novakovic"], ["Valeria", "Cealic"], ["Mao", "Ohmine"], ["Nelise", "Verster"], ["Valeria", "Munoz Velasquez"], ["Marina", "Margulis"], ["Jennifer", "Brown"], ["Laura", "Moreno Martinez"], ["Nozomi", "Kawai"], ["Woo Keoung", "Lee"], ["Maria Jose", "Luque Moreno"], ["Sunam", "Jeong"], ["Sheetal", "Shetty"], ["Claudia", "Cianci"], ["Adel", "Musina"], ["Vanessa", "Dzmurova"], ["Izel Ece", "Yilmaz"], ["Lodovica", "Giannini"], ["Marta", "Sexmilo Pascual"], ["Stefany", "Ferigatto"], ["Ena", "Kajevic"], ["Cecilia", "Pattacini"], ["Elisabet", "Strand"], ["Deborah", "Chiesa"], ["Ines", "Miranda"], ["Huijie", "Li"], ["Sadafmoh", "Tolibova"], ["Anais", "Emelie"], ["Sara", "Quiroga"], ["Eleonore", "Barrere"], ["Mariana Mayer", "Humberg"], ["Nadia", "Mechaala Gordillo"], ["Sara", "Mechaala Gordillo"], ["Marie", "Mayerova"], ["Luana", "Stanciu"], ["Juliana Rocha", "Cardoso"], ["Viktoriya", "Bogoslovska"], ["Sarina", "Kang"], ["Petra", "Ivankovic"], ["Regina", "Lopez Ley"], ["Michelle Kerubo", "Onyancha"], ["Mia", "Jurasic"], ["Emma", "Hurst"], ["Carolina", "Monteiro Ribeiro De Lima"], ["Ning", "Hai"], ["Maria Fernanda", "Navarro Oliva"], ["Samantha", "Echevarria"], ["Simran Kaur", "Sethi"], ["Masako", "Makiba"], ["Anastasia", "Prokopenko"], ["Tjasa", "Jerse"], ["Donna", "Vekic"], ["Olaya", "Inclan Solis"], ["Ariadna", "Marti Riembau"], ["Maja", "Ornberg"], ["Francesca", "Delledera"], ["Jovana", "Kenic"], ["Yumeko", "Yoshitomi"], ["Maria Agustina", "De Carli"], ["Sarah", "Al Balushi"], ["Anastasiya", "Shleptsova"], ["Amelie", "Intert"], ["Marina", "Guinart Espana"], ["Philippine", "Gauduffe"], ["Anastasiya", "Galickaya"], ["Elizaveta", "Kamzolova"], ["Linda", "Guerzize"], ["Julia", "Grabher"], ["Gabriella Angelin", "Alves"], ["Katarina", "Guarino"], ["Ines", "Chibout"], ["Ziyue", "Sun"], ["Marli", "Van Heerden"], ["Eva", "Martinez Regalado"], ["Jeannez", "Daniel"], ["Evgeniya", "Ivanichenko"], ["Yihong", "Li"], ["Daniela Estefania", "Rosado Vega"], ["Gabriella", "Umoquit"], ["Megen", "Cochran"], ["Alina", "Silich"], ["Erica", "Braschi"], ["Misaki", "Kawamura"], ["Kristina", "Mrazova"], ["Ayla", "Aksu"], ["Pei Wen", "Kao"], ["Tomomi", "Takaichi"], ["Jennifer", "Hauer"], ["Vanessa", "Stiegner"], ["Ana", "Madcur"], ["Hanna", "Borjeson"], ["Bhavani", "Balakumar"], ["Louise", "Ronaldson"], ["Thanthita", "Suetrong"], ["Zeina", "El Tawil"], ["Natallia", "Niahrei"], ["Ryann", "Foster"], ["Terri", "Fleming"], ["Jennifer", "Moinard"], ["Nia", "Rose"], ["Chan", "Zhang"], ["Pia", "Cuk"], ["Dzina", "Milovanovic"], ["Barbara", "Rajic"], ["Tina", "Bokhua"], ["Sara", "Kalkenova"], ["Liana", "Sakvarelidze"], ["Tatjana", "Vorobjova"], ["Chatchaya", "Sakchatchawan"], ["Melena", "Lopez"], ["Yenise", "Machado"], ["Ines", "Baccouche"], ["Harriet", "Dart"], ["Angela", "Leweurs"], ["Nina", "Stojanovic"], ["Nyla", "Beenk"], ["Kana", "Kubota"], ["Katie", "Boulter"], ["Nelli", "Ponomareva"], ["Eleonora", "Maserati"], ["Vukosava", "Medojevic"], ["Suzuho", "Oshino"], ["Maria Eleni", "Charalampopoulou"], ["Bianca", "Moldovan"], ["Elizabeth Anita Alexandria", "Profit"], ["Anastasia", "Vasileiou"], ["Lara", "Glavic"], ["Wanyuanyun", "Jin"], ["Reina", "Takahashi"], ["Yolimar", "Ogando"], ["Polina", "Yuzefovich"], ["Paulina", "Lewandowska"], ["Anastasia", "Artemova"], ["Shanshan", "Guo"], ["Ines", "Teixeira"], ["Agata", "Borgman"], ["Alyssa", "Boey"], ["Dona", "Abo Habaga"], ["Jovana", "Petrovic"], ["Mariella", "Blackwell"], ["Valeriya", "Korotina"], ["Antonia", "Lottner"], ["Yusleydis", "Smith Dias"], ["Clara", "Tanielian"], ["Agustine Pangestu", "Palupi"], ["Kristyna", "Rouckova"], ["Tomoe", "Yazawa"], ["Bojana", "Petrovic"], ["Barbara", "Gatica"], ["Michelle", "Van Lier"], ["Viktoriya", "Lushkova"], ["Mathilda", "Malm"], ["Andrea", "Sanchez Sainz"], ["Iva", "Ivkovic"], ["Kimberley", "Koerner"], ["Ching Wen", "Hsu"], ["Alina", "Zubkova"], ["Ioana Florentina", "Popescu"], ["Natsuho", "Nakazawa"], ["Emma", "Ek"], ["Minami", "Sonan"], ["Diandra", "Berliana"], ["Karolina", "Muchova"], ["Giorgia", "Picano"], ["Paulina Javiera", "Obreque"], ["Jiayuan", "Xue"], ["Leticia Nayara Moura", "Monteiro"], ["Ingrid", "Gamarra Martins"], ["Sofia", "Wicker"], ["Tatiana", "Rico Viana"], ["Janina", "Braun"], ["Sharmeen", "Rizvi"], ["Larissa", "Bucher"], ["Camila", "Giangreco Campiz"], ["Gabriela", "Anzola"], ["Alessandra", "Gisonna"], ["Chiara", "Frapolli"], ["Stephanie Mariel", "Petit"], ["Shaddae", "Findley"], ["Anastasia", "Nikolaou"], ["Leslie", "Soto"], ["Jena", "Cheng"], ["Gorica", "Spasojevic"], ["Ksenia", "Laskutova"], ["Carla", "Touly"], ["Klavdija", "Bukovec"], ["Katarina", "Jovanovic"], ["Sara", "Boevska"], ["Lilla", "Barzo"], ["Tanja", "Stojanovska"], ["Habiba", "Shaker"], ["Rianna", "Valdes"], ["Hannah", "Ploner"], ["Sara", "Gimenez"], ["Kanako", "Morisaki"], ["Yassamine", "Boudjadi"], ["Yana", "Tashaev"], ["Barbora", "Kollarova"], ["Isabelle", "Wallace"], ["Ekaterina", "Ilina"], ["Nanette", "Nylund"], ["Kim Janine", "Gefeller"], ["Katelyn", "Jackson"], ["Devi", "Hasan"], ["Madeleine", "Boepple"], ["Xiao", "Fu"], ["Margaux", "Brabant"], ["Septiana", "Zahiroh"], ["Dakota", "Norton"], ["Natalia", "Zorgovska"], ["Giulia", "Cascapera"], ["Eugenia", "Sanchez"], ["Amit", "Lev Ari"], ["Irem", "Karamanoglu"], ["Jennifer", "Wacker"], ["Seohyeon", "Kim"], ["Chiara", "Pascale"], ["Maria Juliana", "Alzate"], ["Laura", "Roig Tortajada"], ["Ioana Loredana", "Rosca"], ["Theresa Alison", "Van Zyl"], ["Chiara", "Arcangeli"], ["Kristina", "Eremina"], ["Maia A", "Magill"], ["Marianna", "Zakarlyuk"], ["Alice", "Patch"], ["Gebriela", "Mihaylova"], ["Hannah", "Cseplo"], ["Anastasia", "Reshetnikova"], ["Inger", "Van Dijkman"], ["Alexis", "Prokopuik"], ["Julia", "Ascua"], ["Sarah", "Vargas"], ["Jessika", "Ponchet"], ["Magdalena", "Boado"], ["Agata Jadwiga", "Bienkowska"], ["Alena", "Gulyaeva"], ["Lyn Yuen", "Choo"], ["Guillermina", "Naya"], ["Arisha", "Ladhani"], ["Margot", "Mercier"], ["Alicia", "Smith"], ["Evelina", "Hennigor"], ["Risa", "Shimizu"], ["Alexa", "Pirok"], ["Melanie", "Stokke"], ["Lorea", "Ganboa"], ["Ema", "Barkovic"], ["Jelena Karla", "Vujicic"], ["Emmanuelle", "De Beer"], ["Jasmin", "Jebawy"], ["Maria", "Schneider"], ["Ana Bianca", "Mihaila"], ["Ke", "Mao"], ["Laura", "Sainsbury"], ["Annelou", "Nab"], ["Sara", "Sorribes Tormo"], ["Stephanie", "Yamada"], ["Tea", "Jandric"], ["Manae", "Miwa"], ["Rio", "Suzuki"], ["Rehmat", "Johal"], ["Antonia", "Sakic"], ["Dasha", "Ivanova"], ["Shannon", "Wong Hon Chan"], ["Maria Victoria", "Quinde Serrano"], ["Anna", "Koval"], ["Kalina", "Bozhilova"], ["Kimberly", "Yee"], ["Gloria", "Liang"], ["Mirna", "Curcic"], ["Mariana", "Carreira"], ["Rebecca", "Sramkova"], ["Katharine", "Fahey"], ["Alina", "Kuzmenkova"], ["Maria", "Tritou"], ["Ana", "Sirovina"], ["Tamara", "Pichkhadze"], ["Saera", "Kanda"], ["Vasilisa", "Aponasenko"], ["Camila", "Pacheco"], ["Thalia", "Martin"], ["Khume", "Herring"], ["Oceane", "Dodin"], ["Zoe", "Hives"], ["Marianna", "Petrei"], ["Ana Marcela", "Rengifo Caracas"], ["Pia", "Brglez"], ["Annely", "Pokras"], ["Josefina", "Surraco"], ["Amanda", "Rebol"], ["Vasundara", "Raju"], ["Anastasija", "Homutova"], ["Albina", "Yanko"], ["Vittoria", "Avvantaggiati"], ["Bojana", "Marinkovic"], ["Caroline", "Daxhelet"], ["Vitaliya", "Nekhoroshikh"], ["Anastasia", "Trunina"], ["Barbara", "Bacic"], ["Maria Paula", "Martinez Gelvez"], ["Melanie Isabella", "Diaz Padron"], ["Jana", "Fett"], ["Eva", "Siskova"], ["Minh Trang", "Dao"], ["Ivone", "Alvaro"], ["Anita Ance", "Detlava"], ["Kasandra", "Kozub"], ["Cyrine", "Ben Cheikh"], ["Tanasha", "Khandpur"], ["Emma Marie", "Jensen"], ["Mara", "Argyriou"], ["Karina", "Komaruk"], ["Julieta Sofia", "Canas"], ["Dea", "Herdzelas"], ["Guljahan", "Kadyrova"], ["Hye Ji", "Ju"], ["Rachel", "Chong"], ["Ellyse", "Hamlin"], ["Judith", "Bohnenkamp Serena"], ["Jane", "Wasserson"], ["Alice", "Keddie"], ["Aleksandra", "Karamanoleva"], ["Caitlin", "Herb"], ["Ana", "Yrazusta Acosta"], ["Margaux", "Deagostini"], ["Polina", "Novoselova"], ["Marie", "Villet"], ["Daniela", "Pedraza Novak"], ["Maria Paula", "Medina Blanco"], ["Tyler", "Smith"], ["Kristina", "Njegus"], ["Angelina", "Zhuravleva"], ["Rafaela", "Francisquiny"], ["Hannah", "Lehfeldt"], ["Juliana", "Pena"], ["Monica", "Matias"], ["Malak Jasim", "Fardan"], ["Maite", "Cano"], ["Abhilasha", "Vishwanath"], ["Shir", "Hornung"], ["Camila", "Wesbrooks"], ["Gizem Melisa", "Ates"], ["Laura", "Argente"], ["Sindhu", "Janagam"], ["Marketa", "Zeminova"], ["Maria Belen", "Vaz Teixeira"], ["Yunjeong", "Park"], ["Nihed", "Benkaddour"], ["Yadira", "Rubio"], ["Hitomi", "Watanabe"], ["Melina", "Lyubomirova"], ["Akvile", "Parazinskaite"], ["Stefania", "Sismanidou"], ["Anna", "Vrbenska"], ["Julia", "Jung"], ["Jasmine Kaur", "Bajaj"], ["Lee", "Ben Or"], ["Magdelini", "Lesvidou"], ["Aina", "Schaffner Riera"], ["Victoria", "Yu"], ["Kristina", "Djamalova"], ["Alli", "Hodges"], ["Francesca", "Bullani"], ["Lisa", "Phillips"], ["Sabina", "Calancea"], ["Jamilya", "Sadykzhanova"], ["Miryam", "Jabri"], ["Dina", "Hegab"], ["Milana", "Drca"], ["Oriana Belen", "Labaqui"], ["Angelina", "Kholikulova"], ["Nina", "Kalezic"], ["Claudia", "Wiktorin"], ["Lara", "Kralj"], ["Sarlota", "Cesnekova"], ["Graciela Patricia", "Rosas Alvarado"], ["Pia", "Ender"], ["Stefanie", "Vorih"], ["Alannah", "Griffin"], ["Ria", "Vaidya"], ["Ana Lorena", "Garcia Navas"], ["Costanza", "Magazzini"], ["Ana", "Lopez Camarero"], ["Martina", "Colmegna"], ["Elina", "Vikhryanova"], ["Sahar", "Najaei"], ["Natalie", "Novotna"], ["Varvara", "Flink"], ["Catalina", "Vives"], ["Cristina", "Moroi"], ["Paula", "Rives Palau"], ["Vineeta", "Singh"], ["Madison", "Harrison"], ["Sofia", "Mariotto"], ["Palina", "Dubavets"], ["Polina", "Ivanova"], ["Francesca", "Wilkes"], ["Alicja", "Zduniak"], ["Yekaterina", "Gubanova"], ["Natalija", "Sipek"], ["Barbara", "Mancera Carrillo"], ["Zarina", "Jumajanova"], ["Sara", "Ramadan"], ["Lara", "Dimmer"], ["Lais", "Carvalho De Oliveira Bicca"], ["Gabrielle Faith", "Andrews"], ["Sumitra", "Basnyat"], ["Kamilla", "Beisenova"], ["Aayushi", "Chouhan"], ["Katherine", "Lee"], ["Vivian", "Hegeman"], ["Ana Victoria", "Gobbi Monllau"], ["Amanda", "Andrade Silva"], ["Dagmar", "Janischova"], ["Sophia", "Grippo"], ["Marta", "Kowalska"], ["Giuliana", "Huerta Mercado"], ["Ariana", "Rahmanparast"], ["Ruth", "Copas"], ["Alessandra", "Lucchetta"], ["Ksenia", "Dmitrieva"], ["Maria Del Rosario", "Canero Perez"], ["Arina", "Folts"], ["Sena Lara", "Nural"], ["Lior", "Pachuorkovski"], ["Simran", "Wadhwa"], ["Yik Yan Suki", "Law"], ["Maria", "Siopacha"], ["Ana Luisa", "Perez Lopez"], ["Dabin", "Kim"], ["Martina", "Malmqvist"], ["Natsumi", "Okamoto"], ["Michela", "Piccioli"], ["Cecilia", "Bahloul"], ["Camille", "Sireix"], ["Laura", "Pimenta"], ["Yada", "Vasupongchai"], ["Lilia", "Talaboulma"], ["Arushi", "Bhasin"], ["Jasmin", "Buchta"], ["Valentina", "Losciale"], ["Jessica", "Ho"], ["Mina Guner", "Karamercan"], ["Ziyu", "Wang"], ["Theresa", "Piontek"], ["Chatmanee", "Jankiaw"], ["Napawee", "Jankiaw"], ["Isabel Veronica", "Boada"], ["Valeriya", "Solopaeva"], ["Andie K", "Daniell"], ["Uljan", "Espolova"], ["Lauren", "Proctor"], ["Dhruthi", "Tatachar Venugopal"], ["Ingy", "Hashish"], ["Pornpawee", "Premthong"], ["Lucia", "Ondrasova"], ["Yijia", "Shao"], ["Eliska", "Kleisnerova"], ["Ivona", "Cudina"], ["Ana", "Roman Dominguez"], ["Sanjana", "Sudhir"], ["Ayane", "Tachibana"], ["Esen", "Kokce"], ["Martina", "Basic"], ["Sejla", "Duzel"], ["Fernanda", "Astete"], ["Nina", "Potocnik"], ["Minja", "Gligic"], ["Anastasiya", "Rychagova"], ["Sofia", "Smagina"], ["Natalia", "Bey Barbe"], ["Clara", "Carotta"], ["Josephine", "Hofmann"], ["Maharevo", "Ramanitrarivo Rosea"], ["Ana Paula", "Neffa De Los Rios"], ["Dona", "Valihanova"], ["Sasipa", "Permpanich"], ["Karina", "Gurgenyan"], ["Raluca", "Ciufrila"], ["Anastasia", "Chikalkina"], ["Alexandra", "Bezmenova"], ["Dina", "Zhamiyeva"], ["Maria", "Patrascu"], ["Jiaqing", "Mo"], ["Josefin", "Halden"], ["Angelina", "Klimova"], ["Nikol", "Zaikin"], ["Amy", "Yang"], ["Luz Angelica", "Solano Delgado"], ["Nilufar", "Ismailova"], ["Tsvetanka", "Trifonova"], ["Rada", "Manataweewat"], ["Alexandra", "Tsereteli"], ["Victoria", "Muntean"], ["Claire", "Verwerda"], ["Isabelle", "Entenza"], ["Katerina", "Stloukalova"], ["Victoria", "Giannaccini"], ["Maria", "Novikova"], ["Isabella", "Hurtado"], ["Pamela", "Wu"], ["Nozomi", "Ohya"], ["Denisa", "Chereches"], ["Barbora", "Kosejkova"], ["Chiara", "Grimm"], ["Alona", "Puskkarevsky"], ["Imen", "Abid"], ["Anna", "Sviripa"], ["Julia", "Suzuki"], ["Melis", "Bayraktaroglu"], ["Sara Catherine", "Parker"], ["Charlotte", "Petrick"], ["Mafalda", "Fernandes"], ["Damini", "Sharma"], ["Morgane", "Michiels"], ["Vittoria", "Beolchi"], ["Paige Mary", "Hourigan"], ["Lidia", "Moreno Arias"], ["Julia", "Schepp"], ["Francoise", "Abanda"], ["Mirabelle", "Njoze"], ["Kim", "Ha Nul"], ["Stacey", "Fung"], ["Alexus", "Jones"], ["Andreina", "Pino"], ["Anhelina", "Kalinina"], ["Eeshita", "Pande"], ["Chantal", "Martinez Blanco"], ["Sthefanie", "Santos"], ["Marina", "Gennimata"], ["Valentini", "Grammatikopoulou"], ["Lana", "Rush"], ["Anja", "Dokic"], ["Evelyn Briyeeth", "Moreno Rivera"], ["Linn", "Ehrenstrom"], ["Nadia", "Podoroska"], ["Agustina", "Chlpac"], ["Nicole Caroline", "Vaz Da Silva"], ["Atlanta ", "Patsali"], ["Valeria", "Nikolaev"], ["Ana Lucia", "Carneiro Revoredo"], ["Hana", "Pektorova"], ["Kseniia", "Bekker"], ["Snehadevi S", "Reddy"], ["Laura", "Botero"], ["Nicole", "Dzenga"], ["Aparna", "Kondaveeti"], ["Vasanti", "Shinde"], ["Jelena", "Janosevic"], ["Margalita", "Tchitchashvili"], ["Muge", "Topsel"], ["Victoria", "Chehal"], ["Natalia", "Vikhlyantseva"], ["Kristina", "Kostic"], ["Tuna", "Kaya"], ["Andreia", "Beberechi"], ["Nur Gulsan", "Bicen"], ["Amanda", "Schneider"], ["Kwan Yau", "Ng"], ["Kamonluk", "Kittitanom"], ["Lin", "Ma"], ["Lamiaa", "Aziz"], ["Montana", "Moore"], ["Kristina", "Samardzic"], ["Carina", "Avram"], ["Anastasija", "Filipovic"], ["Protiksha", "Sharma"], ["Milica", "Cortanovacki"], ["Roosa", "Timonen"], ["Joanna", "Zawadzka"], ["Meng", "Qin"], ["Federica Joe", "Gardella"], ["Giorgie", "Jones"], ["Andria", "Tsaggaridou"], ["Paige", "Cline"], ["Marla", "Mesa"], ["Lucia Annette", "Davila Espejo"], ["Jelena", "Lukic"], ["Camila", "Ramazzini"], ["Lynn", "Janssens"], ["Valentina", "Gazzoli"], ["Katharina", "Herpertz"], ["Yana", "Khon"], ["Julia Mansano", "Gomide"], ["Rebeka", "Stolmar"], ["Anna Maria", "Procacci"], ["Eleonora", "Cecchinato"], ["Yu Ting", "Hsieh"], ["Magda", "Aubets Macia"], ["Jasmine Marina", "Coteanu"], ["Kateryna", "Lymar"], ["Anna", "Sokiran"], ["Yi Ming", "Huang"], ["Alexandra", "Valenstein"], ["Oceane", "Garibal"], ["Sara", "Lanca"], ["Hazal", "Unlugenc"], ["Daniela", "Farfan"], ["Rayene Nour", "Brahimi"], ["Antonella", "Bramato"], ["Jiaxi", "Lu"], ["Maren", "Helgo"], ["Gabriela", "Slavova"], ["Marija", "Kelava"], ["Mckenna Alexandra", "Root"], ["Sarah", "Schaerer"], ["Maria", "Kononova"], ["Laura", "Gomez"], ["Tatiana", "Feygina"], ["Michaela", "Odraskova"], ["Nicole", "Kadlec"], ["Marija Vera", "Stankovic"], ["Victoria Fernanda", "Angulo Pimentel"], ["Arina Gabriela", "Vasilescu"], ["Tayisiya", "Morderger"], ["Yana", "Morderger"], ["Nagisa", "Morimoto"], ["Michelle", "Yang"], ["Neus", "Torregrosa Parets"], ["Giulia", "Porzio"], ["Marta", "Garcia Gausi"], ["Belinda", "Bencic"], ["Andreea", "Ghitescu"], ["Lina", "Qostal"], ["Fiona", "Ferro"], ["Sara", "Cakarevic"], ["Viktoryia", "Viaklenka"], ["Patricia", "Valimaa"], ["Frederikke", "Svarre"], ["Leticia Garcia", "Vidal"], ["Sarra", "Boukezzi"], ["Ty Ana", "Williams"], ["Maryna", "Kolb"], ["Yu Jin", "Ahn"], ["Tamara", "Tomic"], ["Felicity", "Maltby"], ["Hae Ok", "Lee"], ["Hae Seon", "Lee"], ["Kenadi", "Hance"], ["Emel", "Abibula"], ["Julie", "Razafindranaly"], ["Alexis", "Jones"], ["Latifah Amelia", "Dinar"], ["Elvira", "Juravliova"], ["Alija", "Merdeeva"], ["Iryna", "Vardanyan"], ["Natalia", "Serrano Garcia"], ["Bianka", "Bekefi"], ["Diana", "Spissakova"], ["Ghita", "Nassik"], ["Vera", "Sakalouskaya"], ["Anna", "Hermann"], ["Anna", "Ulyashchenko"], ["Nikola", "Dolakova"], ["Siqi", "Xie"], ["Miljana", "Milojevic"], ["Lauren", "Bishop"], ["Savannah", "Sills"], ["Maria Fernanda", "Herazo Gonzalez"], ["Sharon", "Pesch"], ["Kristina", "Evtushenko"], ["Yi Chi", "Ma"], ["Liz Andrea", "Miranda"], ["Vanessa", "Zemp"], ["Francesca", "Bonometti"], ["Ayako", "Hayashi"], ["Mariana Lucia", "Bedon Burgos"], ["Lindsay", "Truscott"], ["Dominique", "Ibarra Gomez"], ["Oceane", "Razakaboana"], ["Camilla", "Fabbri"], ["Harshita", "Chugh"], ["Julia", "Izotova"], ["Anhelina", "Kalita"], ["Jiahuan", "He"], ["Nilay Gizem", "Altay"], ["Darya", "Bulatova"], ["Eliska", "Petrackova"], ["Laura", "Luedemann"], ["Dijana", "Bogicevic"], ["Matilde", "Fernandes"], ["Natalia", "De Ugarte"], ["Iulia", "Truca"], ["Hanna", "Kantenwein"], ["Alisha", "Haas"], ["Madeline", "Rolph"], ["Pauline", "Courcoux"], ["Meropi", "Parousi"], ["Laura", "Moreno Hernandez"], ["Huibre Mare", "Botes"], ["Louise Mare", "Botes"], ["Melan", "Butler"], ["Rafaela", "Gomez"], ["Eliessa", "Vanlangendonck"], ["Kristen", "Thoms"], ["Ioana Larisa", "Fuiorea"], ["Farah", "Baklouti"], ["Ivana", "Marinov"], ["Valentina", "Abrile"], ["Lidia", "Mugelli"], ["Daniela Macarena", "Lopez"], ["Blanca Elena", "Butnaru"], ["Nariman", "Abo Bakr"], ["Anna", "Fajnorova"], ["Ribana", "Roth"], ["Olivia", "Horn"], ["Britt", "Schreuder"], ["Alejandra", "Gil"], ["Miriam", "Kolodziejova"], ["Vanja", "Klaric"], ["Kateryna", "Karpiuk"], ["Jelena", "Stojanovic"], ["Tamachan", "Momkoonthod"], ["Mathilde", "Devits"], ["Dessislava", "Zlateva"], ["Vendula", "Zovincova"], ["Natalia", "Vovk"], ["Sarai Delfina", "Monarrez Yesaki"], ["Margot", "Yerolymos"], ["Yixuan", "Li"], ["Chiara", "De Vito"], ["Helen", "Ploskina"], ["Gabriela", "Ferreira Sanabria"], ["Gabriela Andrea", "Knutson"], ["Nastya", "Gordeeva"], ["Daniela", "Diez"], ["Anabel", "Martinovic"], ["Arina", "Umanskaya"], ["Veronika", "Kudermetova"], ["Jessica", "Pieri"], ["Dalila", "Spiteri"], ["Andra Maria", "Nitescu"], ["Elzbieta", "Iwaniuk"], ["Maddie", "Antoun"], ["Jennifer", "Jussi"], ["Ana Carolina Caiuby", "Mattos"], ["Defne", "Ozerden"], ["Karolina", "Porubska"], ["Anastasia", "Shaulskaya"], ["Maria Jose", "Pintos"], ["Martha", "Matoula"], ["Erika", "Drozd Pereira"], ["Melanie", "Kovacic"], ["Nathalia", "Naomy Sato"], ["Moulika", "Ram"], ["Brianna", "Thompson"], ["Micheline", "Aubuchon"], ["Tatum", "Prudhomme"], ["Anastasiya", "Fedoryshyn"], ["Qi Li", "Ma"], ["Aleksandra", "Stosic"], ["Sara", "Amiri"], ["Sol Hee", "Sim"], ["Tanja", "Gligoric"], ["Yulieth Eliana", "Blanco Molina"], ["Gulchekhra", "Muhammadsidikova"], ["Julia", "Mikulski"], ["Ksenia", "Tortsikava"], ["Lisa Marie", "Rioux"], ["Laura", "Tinello"], ["Margarida", "Abreu"], ["Kateryna", "Baranivska"], ["Ilayda", "Yondem"], ["Zina", "Mehikic"], ["Ivana", "Jorovic"], ["Maftunabonu", "Saidova"], ["Patricia", "Delicado Orihuela"], ["Anna", "Pavlova"], ["Devanshi G", "Bhimjiyani"], ["Daniela", "Ruiz"], ["Fanny", "Ostlund"], ["Ainhoa", "Ramos"], ["Talya", "Zandberg"], ["Maria", "Smith"], ["Valeriya", "Urzhumova"], ["Sabrina", "Rittberger"], ["Liisa", "Pajumets"], ["Odile", "Maesfranckx"], ["Nupur", "Umashankar"], ["Vinja", "Lehmann"], ["Darya", "Kasatkina"], ["Maria Elena", "Medina Betancourt"], ["Rafaella", "Sampaio"], ["Candice", "Paya"], ["Katerina", "Valos"], ["Lara", "Souza Soares"], ["Rui Jie", "Jiang"], ["Olivia", "Tjandramulia"], ["Melanie Azucena", "Millan Acosta"], ["Irem Talya", "Koken"], ["Arina", "Kuznetsova"], ["Aliki", "Kapella"], ["Daniela", "Kabakova"], ["Valeria", "Mishina"], ["Agustina", "Santamaria Teixeira"], ["Merve", "Gulten"], ["Antonina", "Lysakova"], ["Yuchia", "Chen"], ["Danielle", "McIntyre"], ["Valentina", "Vargas"], ["Lena", "Reichel"], ["Maho", "Hatta"], ["Katarina", "Weymouth"], ["Valentina", "Todeschin"], ["Lina", "Grabow"], ["Lorena", "Madahuar"], ["Isabella", "Calves"], ["Zaina", "Sufi"], ["Eugenia", "Todaro"], ["Liliya", "Izmaylova"], ["May", "Wanvisa Thurakitseree"], ["Milka", "Genkova"], ["Meredith", "Xepoleas"], ["Lisa", "Ponomar"], ["Kennedy", "Shaffer"], ["Lotte", "Van Leeuwen"], ["Anastasia", "Goncharova"], ["Birgit", "Burk"], ["Kanako", "Osafune"], ["Ginevra", "Chiara"], ["Pauline", "Van Herck"], ["Alexsandra", "Zhazhelo"], ["Carolyn", "Xie"], ["Mercedes", "Hammond"], ["Arezo", "Ghannadan"], ["Thanyathorn", "Putthuan"], ["Manuela Luz", "Molesini"], ["Anna", "Bondar"], ["Simona", "Heinova"], ["Sophie", "Chang"], ["Adela", "Heinova"], ["Katie", "Poluta"], ["Silvia", "Mattiolo"], ["Maria Victoria", "Valle Zimmernann"], ["Ines", "Murta"], ["Milka Emilia", "Pasanen"], ["Jacqueline", "Pelletier"], ["Mathilde", "Armitano"], ["Ekaterina", "Alekseenko"], ["Jessica", "Failla"], ["Martina", "Okalova"], ["Darta Elizabete", "Emulina"], ["Sena", "Suswam"], ["Maria", "Marfutina"], ["Kylie", "Wilcox"], ["Melissa", "Arnoldi"], ["Edith Ayelen", "Monzon"], ["Deria", "Nur Haliza"], ["Jelena", "Ostapenko"], ["Barbara", "Choon"], ["Lizaveta", "Hancharova"], ["Patricia", "Panta"], ["Meriam", "Rhallab"], ["Zuzanna", "Szuszkiewicz"], ["Madalina", "Grigoriu"], ["Marie", "Norris"], ["Gulnara", "Axmedova"], ["Natalie", "Kallmunzerova"], ["Masa", "Antonijevic"], ["Marina", "Darzyan"], ["Kiko", "Nishizato"], ["Maximiliane", "Wachall"], ["Radina", "Dimitrova"], ["Maria", "Tkachuk"], ["Ege", "Tomey"], ["Natsumi", "Koshino"], ["Camille", "Mignac Haus"], ["Yelyzaveta", "Pletnyeva"], ["Elizaveta", "Voronova"], ["Sandra", "Friedl"], ["Christiana", "Mcdonald"], ["Sneha", "Padamata"], ["Jocelijn", "Cavero Roeper"], ["Ines Karmen", "Vias"], ["Natasa", "Kosanin"], ["Haruka", "Sasaki"], ["Raluca Georgiana", "Serban"], ["Bianca", "Turati"], ["Anna", "Turati"], ["Ceire", "Mullins"], ["Imke", "Schluenzen"], ["Yasmine", "Ince"], ["Carla", "Cerdan Vives"], ["Noelia", "Lopez Lazaro"], ["Rebeca Ruth", "Scurt"], ["Hana", "Sisirak"], ["Joana", "Brites"], ["Katharina", "Hobgarski"], ["Vanessa", "Timm"], ["Lorena", "Clemente"], ["Ariana", "Saki"], ["Isidora", "Pejovic"], ["Mollie", "Crouch"], ["Emma", "Milicevic"], ["Leah", "Luboldt"], ["Maria", "Hamad"], ["Maria Giorgia", "Farrugia Sacco"], ["Tami", "Grende"], ["Diana", "Krasnova"], ["Mariagrazia", "Pedretti"], ["Mariya", "Luss"], ["Cherise", "Slocombe"], ["Francesca", "Brancato"], ["Marta", "Ruedas Burgos"], ["Emilie", "Francati"], ["Sunae", "Ji"], ["Melissa", "Lord"], ["Eliza Maria", "Dan"], ["Guzalhon", "Nizamova"], ["Hassiba", "Munoz Alcaman"], ["Olivia", "Parson"], ["Machiko", "Yahata"], ["Anastasia", "Grosheva"], ["Chloe", "Hule"], ["Joselyn Margarita", "Treyes AlbarracN"], ["Katarina", "Stresnakova"], ["Karola Patricia", "Bejenaru"], ["Iryna", "Shymanovich"], ["Vera", "Aleshcheva"], ["Anna", "Makhorkina"], ["Sasha", "Alexander"], ["Mbolatiana", "Randrianarisoa"], ["Sara", "Orellana"], ["Veronica", "Verzoletto"], ["Anna", "Abualhaj"], ["Natalia", "Ucros"], ["Florencia Sofia", "Galdo"], ["Margaryta", "Demchenko"], ["Anastasiya", "Komardina"], ["Jessica", "Golovin"], ["Lea", "Gasparovic"], ["Anna", "Popescu"], ["Raluca Adriana", "Belehuz"], ["Ellie", "Halbauer"], ["Anita", "Perez Flor"], ["Nina", "Holanova"], ["Milica", "Cubranovic"], ["Sara", "Grubac"], ["Petra", "Melounova"], ["Alexandra", "Borg"], ["Alessandra", "Amodeo"], ["Camilla", "Littlewood"], ["Julieta Lara", "Estable"], ["Jil Belen", "Teichmann"], ["Sarah", "Adegoke"], ["Dorien", "Cuypers"], ["Julie", "Byrne"], ["Nana", "Kanayama"], ["Yagmur", "Akdemir"], ["Katerina", "Stewart"], ["Viktoriia", "Fedorova"], ["Silvia", "Gualtieri"], ["Maria Juliana", "Labrador Morales"], ["Lisa", "Friess"], ["Patrycja", "Polanska"], ["Polina", "Chala"], ["Ana Lena", "Toto"], ["Jia Qi", "Kang"], ["Iman", "Qureshi"], ["Isabella", "Bizzo"], ["Mariela", "Haug"], ["Verena", "Meliss"], ["Tamar", "Kutubidze"], ["Maria", "Kompalka"], ["Alena", "Weiss"], ["Francesca", "Di Lorenzo"], ["Momoko", "Sonoda"], ["Mia", "Horvit"], ["Silvia", "Chinellato"], ["Irene", "Burillo Escorihuela"], ["Sara", "Kelly"], ["Vera", "Ploner"], ["Marta", "Dyba"], ["Sophia", "Chow"], ["Michalina", "Jedrzejczak"], ["Aleksandra", "Vostrikova"], ["Dominika", "Haldinova"], ["Christina", "Rosca"], ["Ya Ting", "Chang"], ["Alejandra", "Gutierrez"], ["Caroline", "Lampl"], ["Paula", "Del Cueto Castillo"], ["Arina", "Nozdracheva"], ["Elena", "Van Der Sypt"], ["Federica", "Sema"], ["Svetlana", "Klyuchnikova"], ["Sabrina", "Rodriguez"], ["Gyselle Ximena", "Daza"], ["Anna", "Brogan"], ["Anamarija", "Stevanovic"], ["Camila Andrea", "Velasquez Moreno"], ["Kristina", "Schmiedlova"], ["Mayu", "Okawa"], ["Chloe", "Hughes"], ["Nina", "Khmelnitckaia"], ["Elina", "Joronen"], ["Karina", "Traxler"], ["Jovana", "Peric"], ["Olesya", "Nesterovich"], ["Luisa", "Stefani"], ["Lior", "Ifergan"], ["Lisa", "Hofbauer"], ["Laura", "Pennanen"], ["Chenchen", "Feng"], ["Ayan", "Broomfield"], ["Ana Maria", "Carrion Rodriguez"], ["Rida", "Khalid"], ["Arina", "Beliaeva"], ["Greetje", "Minnen"], ["Sara Maria", "Farzat"], ["Elisabeth", "Lyukshinova"], ["Mateya", "Radisavljevic"], ["Fatima", "Bizhukova"], ["Anastasiya", "Smirnova"], ["Maria Virginia", "Bosch"], ["Margarita", "Shmeleva"], ["Maria", "Silva"], ["Karla", "Portalatin"], ["Sansriti", "Ranjan"], ["Laetitia", "Charbonnet"], ["Klara", "Alenas"], ["Mei", "Date"], ["Emily", "Smith"], ["Natividad", "Lopez Diaz"], ["Marlies", "Steiner"], ["Mahrukh", "Kokni"], ["Maria", "Mukai"], ["Neharika", "Rama"], ["Thisuri", "Molligoda"], ["Mojca", "Mejak"], ["Sae", "Haraguchi"], ["Ting Ya", "Hsu"], ["Dana", "Kremer"], ["Aleksandra", "Kulesza"], ["Siri", "Victorsson"], ["Verena", "Hofer"], ["Tiffany", "Mylonas"], ["Natsuho", "Arakawa"], ["Beatrice", "Torelli"], ["Natalia", "Jelinkova"], ["Emerald", "Able"], ["Chloe Michele", "Ouellet Pizer"], ["Mireia", "Polo"], ["Polina", "Radeva"], ["Laura", "Falceto Font"], ["Veronika", "Vlkovska"], ["Kei", "Kato"], ["Natalia", "Belova"], ["Claudia Paulina", "Lopez"], ["Chaoyi", "Chen"], ["Jasmine Amber", "Asghar"], ["Roberta Maria", "Naicu"], ["Pimpitcha", "Jattavapornvanit"], ["Manca", "Pislak"], ["Margot", "Decker"], ["Harmony", "Tan"], ["Holly", "Hutchinson"], ["Zoe", "Doronjski"], ["Anne Kathrin", "Hierl"], ["Maram", "Selim"], ["Sandra", "Jamrichova"], ["Maria", "Gutierrez Carrasco"], ["Angelica Maria", "Ochoa Martinez"], ["Ema", "Gil Pires"], ["Eleanna", "Koukouvitaki"], ["Bianca", "Monaco"], ["Anna", "Dollar"], ["Guljan", "Muhammetkuliyeva"], ["Jessica", "Hinojosa Gomez"], ["Madison", "Bourguignon"], ["Veronika", "Gardazari"], ["Paula", "Goetz"], ["Emilia", "Occhipinti"], ["Luiza", "Irismetova"], ["Pragya", "Sinha"], ["Kateryna", "Riabtseva"], ["Viktoriya", "Gogol"], ["Alina", "Mekhtieva"], ["Riya", "Bhatia"], ["Avital", "Vaysbuch"], ["Marie", "Leduc"], ["Vinciane", "Remy"], ["Sara", "Amini"], ["Tulin", "Dagilmisgul"], ["Marialuisa", "Zirilli"], ["Myriam", "Enmer"], ["Diana", "Demidova"], ["Victoria", "Naef"], ["Luca", "Nagymihaly"], ["Yifei", "Yang"], ["Laura D", "Arciniegas"], ["Maria", "Tavares"], ["Margaux", "Bovy"], ["Maria", "Chun"], ["Dayana", "Sedova"], ["Claudia", "Papi"], ["Kyla", "Jarrar"], ["Renata", "Zarazua"], ["Naima", "Karamoko"], ["Andrea", "Tomassone"], ["Lesedi Sheya", "Jacobs"], ["Giuliana", "Bestetti"], ["Yuna", "Ito"], ["Julie", "Renson Miquel"], ["Su Yeon", "Chun"], ["Iulia", "Savescu"], ["Claire Yoonkee Choi", "Spackman"], ["Emily", "Arbuthnott"], ["Rouxanne", "Janse Van Rensburg"], ["Sabrina", "Faybyshev"], ["Rebecca", "Weissmann"], ["Antonella", "Martinetti"], ["Lusine", "Avanesyan"], ["Irys", "Ekani"], ["Alexandra", "Heczey"], ["Sophia", "Kryloff"], ["Mariana", "Alvarez"], ["Lisa", "Matviyenko"], ["Valentina", "Kulikova"], ["Aleksandra", "Buczynska"], ["Sofia Daniela", "Duran Vinueza"], ["Mary Victoria", "Cancini"], ["Fernanda", "Contreras Gomez"], ["Ksenia", "Pushkareva"], ["Claudia", "Oravcova"], ["Paula", "Comella Aguilo"], ["Tiffany", "Huber"], ["Seung Hee", "Han"], ["Alexandra", "Neamtu"], ["Janine", "Hemmes"], ["Kate", "Cusick"], ["Kiana", "Marshall"], ["Mai", "Takano"], ["Kimberly", "Mpukusa"], ["Naomi", "Osaka"], ["Sabina", "Latypova"], ["Jinxuan", "Wang"], ["Andjela", "Reljic"], ["Julia", "Kapitanova"], ["Gabriela", "Tenorio"], ["Carol", "Lombardino Petrocinio"], ["Anna", "Ozerova"], ["Luana", "Daus"], ["Eunji", "Lim"], ["Salima", "Fendri"], ["Alisa", "Rudenko"], ["Rebecca", "Gustafson"], ["Elise", "Van Heuvelen"], ["Rita", "Atik"], ["Alejandra Josefina", "Benavides Lopez"], ["Elina", "Nepliy"], ["Patricia", "Boentgen"], ["Gaia", "Squarcialupi"], ["Camila", "Tumosa"], ["Ji", "Lee"], ["Carlotta", "Cima"], ["Luciene", "Benitez Boiero"], ["Mayar", "Eltony"], ["Ananya", "Jha"], ["Athalis Dimitra", "Kratouni"], ["Daniella", "Moreno Kaste"], ["Aoi", "Ishino"], ["Meghan", "Kelley"], ["Shreya", "Swarup"], ["Mariia", "Antoniuk"], ["Sarvinoz", "Saidhujaeva"], ["Bess", "Waldram"], ["Pragati", "Natraj"], ["Oktavia", "Ayu Dewi"], ["Geraldine", "Ang"], ["Reshma", "Ganapathy"], ["Michelle Li Sha", "Khoo"], ["Karolayne", "Alexandre Da Rosa"], ["Melissa", "Sehovic"], ["Ida Seljevoll", "Skancke"], ["Aline", "Thommen"], ["Ekaterina", "Manekina"], ["Nicole", "Baloescu"], ["Anna", "Collins"], ["Arevik", "Tumanyan"], ["Sandra", "Samir"], ["Mary Catherine", "Haffey"], ["Greta", "Ceccomori"], ["Charlotte", "Wellem"], ["Daniella", "Roldan"], ["Jahana", "Bayramova"], ["Monica", "Malinen"], ["Elena Gabriela", "Ruse"], ["Aliona", "Bolsova"], ["Mariana", "Otero"], ["Erika", "Hendsel"], ["Lili", "Fekete"], ["Freya", "Christie"], ["Ni Luh Sintha", "Eka"], ["Vivian", "Zlatanova"], ["Maryna", "Veksler"], ["Alisa", "Martinov"], ["Alice", "Rame"], ["Oyku", "Pekgenc"], ["Milana", "Imamniyazova"], ["Kajsa", "Rinaldo Persson"], ["Suyeon", "Choi"], ["Vanessa", "Valdez Casas"], ["Jemileth", "Aguilar"], ["Jin Sil", "Park"], ["Rebeca", "Reyes"], ["Paula", "Badosa"], ["Johanna", "Silva"], ["Federica", "Mordegan"], ["Victoria Ariadna", "Beccio"], ["Aulia", "Nur Srikandhi"], ["Tatijana", "Sheikhan"], ["Nonna", "Kurginyan"], ["Nazrin", "Jafarova"], ["Maddie", "Pothoff"], ["Maricielo", "Torres Chihuan"], ["Plobrung", "Plipuech"], ["Anna Lena", "Linden"], ["Veronica", "Miroshnichenko"], ["Martina", "Mone"], ["Ari", "Matsumoto"], ["Xinyu", "Gao"], ["Hera", "Brynjarsdottir"], ["Pamela", "Boyanov"], ["Valerie", "Quiceno"], ["Anupreet", "Bedi"], ["Holly", "Horsfall"], ["Brienne", "Minor"], ["Anna", "Bogoslavets"], ["Lauren", "Deegan"], ["Constanze", "Stepan"], ["Assel", "Jumamukhambetova"], ["Kateryna", "Sliusar"], ["Qiu Yu", "Ye"], ["Mila", "Masic"], ["Tamara", "Culibrk"], ["Emma", "Buczko"], ["Magali", "Kempen"], ["Anastasiya", "Shoshyna"], ["Florencia", "Garcia Vazquez"], ["Margita", "Sunjic"], ["Anna", "Iakovleva"], ["Srishti", "Slaria"], ["Miljana", "Ristic"], ["Kaitlyn", "Mccarthy"], ["Martina", "Capurro Taborda"], ["Candela", "Bugnon"], ["Ayano", "Minami"], ["Anna", "Speri"], ["Ekaterina", "Alay"], ["Nikoleta", "Bulatovic"], ["Emilija", "Dancetovic"], ["Minori", "Natsuka"], ["Nadja", "Manjon Mihalic"], ["Kristina", "Parviainen"], ["Camilla", "Abbate"], ["Sabina", "Machalova"], ["Giulia", "Sartori"], ["Emma", "Roenholt"], ["Alexandra Daniela", "Nicoara"], ["Paulina", "Rotaeche"], ["Lana", "Slavica"], ["Celia", "Cervino Ruiz"], ["Karina", "Kalkenova"], ["Magdalena", "Frech"], ["Natalia", "Amineva"], ["Paulina", "Jastrzebska"], ["Lize Elfrida", "Moolman"], ["Gabriella", "Pollner"], ["Sabrina", "Barkdull"], ["Jamie", "Jillissen"], ["Naiktha", "Bains"], ["Sara", "Daavettila"], ["Julia", "Fisch"], ["Klaudia", "Wira"], ["Amalia", "Beksi"], ["Anastasia", "Rentouli"], ["Anna", "Pribylova"], ["Mariana", "Galben"], ["Guzal", "Yusupova"], ["Lizette", "Cabrera"], ["Jue", "Wang"], ["Karolina", "Novotna"], ["Vlada", "Chernikova"], ["Ndindi Inziani", "Mwaruka"], ["Katarzyna", "Wysoczanska"], ["Keyla Manuela", "Cifuentes Monsalve"], ["Tamara", "Zidansek"], ["Tamara", "Teufl"], ["Ana", "Konjuh"], ["Valeria", "Mantilla"], ["Alena", "Mashtakova"], ["Lidija", "Samardzic"], ["Ruken Dilara", "Kizilay"], ["Kindha", "Nacef"], ["Jule", "Salzburg"], ["Shiori", "Fukuda"], ["Eva Pauline", "Payet"], ["Bhargavi", "Nitin Mangudkar"], ["Catalina", "Obrecht"], ["Cristina", "Bucsa"], ["Mariam", "Bolkvadze"], ["Andrada Ioana", "Surdeanu"], ["Christina", "Wolfgruber"], ["Habiba", "Lasheen"], ["Karen", "Alvarez"], ["Oyku", "Boz"], ["En Pei", "Huang"], ["Lejla", "Colic"], ["Gabriela", "Feitosa Rezende"], ["Petra", "Granic"], ["Diana", "Valverde"], ["Lucie", "Prochazkova"], ["Zhanlan", "Wei"], ["Aleyna", "Buyun"], ["Alissa", "Selivenko"], ["Valentina", "Sottile"], ["Yuki", "Ukai"], ["Mbalia", "Bangoura"], ["Anastasia", "Zarytska"], ["Julia", "Payola"], ["Ghada", "Alajeely"], ["Fanny", "Bengtsson"], ["Apolline", "Rassat"], ["Ekaterina", "Zaitseva"], ["Simone", "Alipieva"], ["Shilin", "Xu"], ["Maia", "Lumsden"], ["Adriana", "Sosnovschi"], ["Yasmine", "Ben Abdallah"], ["Alba", "Cortina Pou"], ["Megan", "Rogers"], ["Tereza", "Polanska"], ["Rosabianca", "Satta"], ["Phillis", "Vanenburg"], ["Wijitbanjong", "Pakkaro"], ["Sena", "Sahin"], ["Martina", "Pratesi"], ["Jiaqi", "Yang"], ["Tatyana", "Vialichka"], ["Zhangwenli", "Yan"], ["Teresa", "Zorrilla Medrano"], ["Daniela", "Obando"], ["Nurin Nabilah", "Roslan"], ["Maddison", "Inglis"], ["Camila", "Vargas Gomez"], ["Shuo", "Feng"], ["Barbara", "Belis"], ["Rikeetha", "Pereira"], ["Pei Hsuan", "Kuo"], ["Hristina", "Cvetkovic"], ["Shohsiyat", "Tuhtamatova"], ["Alessandra", "Simonelli"], ["Do Hee", "Bae"], ["Javiera", "Alvarez"], ["Birte", "Langenstein"], ["Margarita", "Markaki"], ["Farah", "Yasser Abd El Wahab"], ["Daniela", "Morales Beckmann"], ["Valentina", "Mokrova"], ["Shiran", "Arol Wiegand"], ["Lina", "Hohnhold"], ["Irene", "Nunez Xifre"], ["Bermet", "Talantkyzy"], ["Julia", "Keranovic"], ["Marie", "Van Aelst"], ["Akshara", "Iska"], ["Barbora", "Palcatova"], ["Saya", "Usui"], ["Lila", "Humaloja"], ["Sofya", "Gulnova"], ["Yulia", "Bryzgalova"], ["Juliana", "Valero"], ["Raquel", "Pedraza"], ["Radmila", "Djordjevic"], ["Xeniya", "Prokopchuk"], ["Dolores", "Molina Portela"], ["Emma Christine", "Higuchi"], ["Zala", "Dovnik"], ["Marjorie", "Antohi"], ["Ambre", "Boccard"], ["Tamara", "Kupkova"], ["Michelle", "Fux"], ["Kaylah", "Mcphee"], ["Constanza", "Gorches"], ["Sara", "Tomic"], ["Ksenia", "Kuznetsova"], ["Alica", "Rusova"], ["Sofia", "Ragona"], ["Yana", "Grechkina"], ["Iulia Maria", "Ivascu"], ["Laura", "Marti"], ["Aksiniya", "Miakota"], ["Ena", "Ovcina"], ["Seon Young", "Um"], ["Aloise", "Dorey"], ["Hana", "Mraz"], ["Ekaterina", "Grinevich"], ["Lucia", "Montano"], ["Girisha", "Arora"], ["Laura", "Rizzi"], ["Selyn", "Ozgur"], ["Maria Paula", "Torres"], ["Elin", "Hellberg"], ["Ena", "Shibahara"], ["Abinikka", "Renganathan"], ["Dominika", "Hrabalova"], ["Ana Luiza", "Farinha"], ["Ioana", "Gheorghita"], ["Yelyzaveta", "Aksonova"], ["Elena", "Belenova"], ["Ghita", "Benhadi"], ["Polina", "Novikova"], ["Ioana Diana", "Pietroiu"], ["Anastasija", "Cobanovic"], ["Julia", "Tozzi"], ["Yi", "Yuan"], ["Talya", "Onyer"], ["Rifanty", "Kahfiani"], ["Katharina", "Gerlach"], ["Anna", "Kraus"], ["Karen Sofia", "Romero"], ["Jasmina", "Samardzic"], ["Imren", "Kurt"], ["Tereza", "Kolarova"], ["Yessmine", "Zhir"], ["Anne Marie", "Medcalf"], ["Katerina", "Romanyuta"], ["Taylor", "Russo"], ["Nina", "Kruijer"], ["Bettina", "Kuznini"], ["Souha", "Chibout"], ["Hanna", "Chang"], ["Viktoriya", "Zheleva"], ["Makenna", "Jones"], ["Serena", "Nash"], ["Melany Solange", "Krywoj"], ["Gyulnara", "Nazarova"], ["Zeynep", "Ates"], ["Seriana", "Saltzen"], ["Jeannine", "Hopfgartner"], ["Katka", "Stach"], ["Karolina", "Silwanowicz"], ["Jelena", "Polovina"], ["Diana", "Monsalve"], ["Laura", "Maluniakova"], ["Buse", "Cehreli"], ["Anne Sophie", "Courteau"], ["Manuela", "Huckfeldt"], ["Gabriella", "Taylor"], ["Yuika", "Sano"], ["Ani", "Safaryan"], ["Yus Syazlin Nabila Binti", "Yusri"], ["Cristiana Miruna", "Tudor"], ["Duda", "Ewa"], ["Sofia", "Sualehe"], ["Bianca", "Bostrom"], ["Aleksandra", "Stakhanova"], ["Angelina", "Skidanova"], ["Florence", "Abbott"], ["Bar", "Shimoni"], ["Alissia", "Gleixner"], ["Agostina", "Zamprogno"], ["Elizaveta", "Sokolova"], ["Erica", "Oosterhout"], ["Mayu", "Iwai"], ["Rosario", "Perez Salinas"], ["Jade", "Rafalovicz"], ["Nandini", "Gupta"], ["Ramu", "Ueda"], ["Natalya", "Malenko"], ["Luisa Fernanda", "Echeverry Rodriguez"], ["Nina", "Marjanovic"], ["Jada", "Hart"], ["Alisa", "Solovieva"], ["Nida", "Shahid Kamal"], ["Jente", "Smit"], ["Pragati", "Solankar"], ["Julia", "Rosenquist"], ["Mariana", "Oliveira"], ["Allison", "Quammen"], ["Rafaella", "Baquerizo"], ["Saranya", "Nagpal"], ["Linnea", "Bjork"], ["Alma", "Garcia Valle"], ["Hanna", "Wikberg"], ["Camila", "Recalde"], ["Thanushree", "Vale"], ["Renee", "Ren"], ["Ylona Georgiana", "Ghioroaie"], ["Karolina", "Benackova"], ["Ha Eun", "Lim"], ["Beatrice", "Reda"], ["Barbora", "Miklova"], ["Sandra", "Anglesjo"], ["Zeynep", "Saricam"], ["Valeria", "Gorlats"], ["Angela", "Kulikov"], ["Elisa", "Elhadj"], ["Ghita", "Idrissi Kaitouni"], ["Kimberley", "Van Rijn"], ["Zina", "Graves"], ["Rafaela", "Rodrigues Dos Santos"], ["Josephine", "Strandfors"], ["Sonia", "Grzywocz"], ["Mayuka", "Aikawa"], ["Caroline", "Sautter"], ["Patricia", "Eftenoiu"], ["Ekaterina", "Kunina"], ["Tatiana", "Eftenoiu"], ["Alessia", "Dario"], ["Ana", "Royo Marco"], ["Satori", "Seki"], ["Angelica E", "Karlsson Hantzis"], ["Alla", "Safolova"], ["Nikolina", "Jovic"], ["Grace", "Janis"], ["Roos", "Nederstigt"], ["Andrea", "Nikic"], ["Elizabeth", "Danailova"], ["Lingwei", "Kong"], ["Sasa", "Klanecek"], ["Sandra", "Ortevall"], ["Darina", "Mueller"], ["Anastasiya", "Klymenko"], ["Vladislava", "Kutuzova"], ["Alexandra", "Lazarova"], ["Yulia", "Sokolovskaya"], ["Haluka", "Higurashi"], ["Ruth", "Artaza Martin"], ["Sem", "Wensveen"], ["Ayano", "Shimizu"], ["Oliwia", "Szymczuch"], ["Rita", "Pedroso"], ["Anastasiya", "Sukhorukova"], ["Jesica", "Audina"], ["Zhuo Ma", "Ge Rong"], ["Stephanie", "Nemtsova"], ["Aleksandra", "Draganova"], ["Andrea", "Beneroso Lacaba"], ["Jone", "Kruger"], ["Federica", "Pulcino"], ["Mihaela", "Ghioca"], ["Lusine", "Chobanyan"], ["Marleen", "Tilgner"], ["Katarina", "Jokic"], ["Jessie", "Aney"], ["Oana", "Gavrila"], ["Emmanuelle", "Salas"], ["Nadine", "De Villiers"], ["Ana", "Akhalkatsi"], ["Alexandra", "Shchipakina"], ["Kseniya", "Savenkava"], ["Amira", "Handous"], ["Aleksandra", "Pospelova"], ["Anastasiya", "Mulder Syrovatskaia"], ["Diana", "Chehoudi"], ["Lamis", "Alhussein Abdel Aziz"], ["Lamyae", "Dad"], ["Petia", "Arshinkova"], ["Polina", "Miroshnichenko"], ["Marina", "Ivanova"], ["Sofie", "Woon"], ["Ekaterina", "Tretyak"], ["Celine", "Schepers"], ["Andrina", "Peer"], ["Alessandra", "Mecchi De Oliveira Silva"], ["Shura", "Poppe"], ["Nicole", "Frenkel"], ["Juliet Jia Wen", "Zhang"], ["Kimberly", "Birrell"], ["Shir", "Azran"], ["Janja", "Kovacevic"], ["Erem", "Akyurt"], ["Darya", "Startseva"], ["Katarina", "Kozarov"], ["Yasmine", "Ansari"], ["Ema", "Mulalic"], ["Aleksandra", "Rojek"], ["Zi Yi", "Wang"], ["Anna", "Turco"], ["Amanda", "Zapata"], ["Aryna", "Sabalenka"], ["Emma", "Alos Chiquillo"], ["Adna", "Sofradzija"], ["Susanne", "Boyden"], ["Reagan", "Collins"], ["Naomi", "Jackson"], ["Laura", "Garcia Martinez"], ["Vlada", "Filinskaya"], ["Daria", "Kruzhkova"], ["Nanako", "Ono"], ["Arisa", "Abe"], ["Alejandra", "Tamayo Gomez"], ["Anna", "Ustinoff"], ["Priscilla", "Hon"], ["Viktoria", "Kuzmova"], ["Ines", "Mesquita"], ["Tornado Alicia", "Black"], ["Esther", "Thebault"], ["Ceylin", "Gunay"], ["Ahlam", "Shawkat"], ["Arianne", "De Winter"], ["Deniz", "Paykoc"], ["Judith Maria", "Barrios Rolon"], ["Lucrezia", "Stefanini"], ["Beatriz Rodrigues", "Bento"], ["Francisca", "Vasquez Pongruber"], ["Xiuyuan", "Li"], ["Juanita", "Diaz"], ["Dorota", "Szczygielska"], ["Anamarija", "Zokic"], ["Maria", "Suarez Alonso"], ["Anna", "Fischer"], ["May", "Kimhi"], ["Hanyu", "Guo"], ["Juliette", "Bastin"], ["Askin", "Arslan"], ["Ghita", "Lahjouji"], ["Nina", "Nikitovic"], ["Helen Abigail", "Altick"], ["Tatiana", "Papakanellou"], ["Chihiro", "Muramatsu"], ["Teodora Elena", "Radu"], ["Marta", "Canas Alvarez"], ["Malalasoa Jackinah", "Rakotohasy"], ["Andrea", "Garcia Fernandez"], ["Gloria", "Ceschi"], ["Natsuki", "Asakura"], ["Anna", "Gabric"], ["Swara", "Kulkarni"], ["Anjana", "Suresh"], ["Lucia", "Diaz Saez"], ["Michelle", "Pits"], ["Gaya", "Solomon"], ["Eri", "Shimizu"], ["Belen", "Calero Vega"], ["Nora", "Szoke"], ["Saadia", "Belhadj"], ["Linnea", "Malmqvist"], ["Setia Indri", "Harti"], ["Nicoli", "Attili Pereira"], ["Tereza", "Mihalikova"], ["Anastassia", "Pantelic"], ["Eliska", "Kropackova"], ["Qianting", "Yan"], ["Lijia", "Huang"], ["Lavanya", "Khanuja"], ["Jaqueline Adina", "Cristian"], ["Marija", "Curnic"], ["Leyla", "Azaeva"], ["Dafni", "Demenega"], ["Sarah", "Stoerbrauck"], ["Karine", "Sarkisova"], ["Hernanda Melia", "Cholis"], ["Florencia", "Rossi"], ["Ksenia", "Stashenkova"], ["Linda", "Sevcikova"], ["Junjuti", "Dorkkulab"], ["Elena", "Antonova"], ["Marina", "Antonova"], ["Sara", "Kostic"], ["Elisa", "Cordovani"], ["Katheryne Stephanie", "Valencia Perez"], ["Brooke", "Lashway"], ["Enni", "Zander"], ["Cindy", "Oest"], ["Ingrid", "Neel"], ["Karman", "Thandi"], ["Valentina", "Mariotto"], ["Marija", "Venta"], ["Tamijean", "Fumagalli"], ["Faiza Munabari", "Saskia"], ["Hana", "Mortagy"], ["Arrum", "Damarsari"], ["Melissa Ishuan", "Ifidzhen"], ["Anna Maria", "Kalavska"], ["Phonexay", "Chitdara"], ["Melanie", "Dveksler Celin"], ["Elisa", "Lauri"], ["Ida", "Jarlskog"], ["Hoyeon", "Nor"], ["Michelle", "Roth"], ["Gabriela", "Yakalieva"], ["Jennifer", "Ruetten"], ["Danna Valentina", "Galeano"], ["Tereza", "Koplova"], ["Sophia", "Intert"], ["Anastasia", "Khlestova"], ["Denise", "Buberl"], ["Theodora", "Soldatou"], ["Soha", "Sadiq"], ["Bianca Elena", "Mihailescu"], ["Katarzyna", "Skrzypczynska"], ["Joanna", "Skrzypczynska"], ["Elianne Magali", "Matto Chaparro"], ["Costanza", "Pera"], ["Cindy", "Castille"], ["Angella", "Raman"], ["Daria", "Ponomareva"], ["Katerina", "Brozova"], ["Victoria", "Dimuzio"], ["Diana", "Dehterevich"], ["Susan", "Bandecchi"], ["Seoin", "Choi"], ["Ana Maria Andreea", "Ileana"], ["Shira", "Goldberger"], ["Andjela", "Sebrek"], ["Mia", "Golubovic"], ["Maria Elena", "Rojas Loaiza"], ["Anamarija", "Spoljaric"], ["Alexa", "Bortles"], ["Sofia", "Booth"], ["Zaineb", "El Houari"], ["Brenda Sarahi", "Baez"], ["Jacara", "Gillis"], ["Junsai", "Wang"], ["Joana", "Ferreira"], ["Hjordis Rosa", "Gudmundsdottir"], ["Arlinda", "Herforth"], ["Alexa", "Graham"], ["Parris", "Todd"], ["Olga", "Esteve Mendez"], ["Giovanna", "Ferreira Caputo"], ["Imogen", "Magner"], ["Chiara", "Pusceddu"], ["Nataliya", "Pogribnyak"], ["Hada", "Chang"], ["Areej", "Fareh"], ["Andrea", "Perez Lopez"], ["Lena", "Babunski"], ["Giorgia", "Testa"], ["Ioana", "Toanchina"], ["Yuenu", "Li"], ["Julia", "Perez Wienese"], ["Fabiola Estefania", "Cardenas Gutierrez"], ["Jana", "Kuzovkova"], ["Lucia", "Gutierrez"], ["Anna", "Ramos Vinolas"], ["Aspasia", "Avgeri"], ["Jaipet", "Anontaweesil"], ["Sandra", "Maletin"], ["Lenka", "Antonijevic"], ["Marina", "Alcaide Bakari"], ["Olla", "Mourad"], ["Jovana", "Knezevic"], ["Nina", "Van Oost"], ["Hana", "Sakamoto"], ["Adeliya", "Zabirova"], ["Alexandra", "Champion"], ["Medea", "Petriashvili"], ["Rebecca", "Van Orshaegen"], ["Marie", "Bouzkova"], ["Sonja", "Krtenova"], ["Vicky", "Geurinckx"], ["Maria", "Shishkina"], ["Raveena", "Kingsley"], ["Chiraz", "Bechri"], ["Andrea", "Solano Jimenez"], ["Sehzade", "Gur"], ["Marina", "Olalla Abajo"], ["Mariya", "Koloney"], ["Jessica", "Bruehwiler"], ["Estela", "Perez Somarriba"], ["Costanza", "Federici"], ["Ksenia", "Slavina"], ["Lara Isis", "Teodoro De Oliveira"], ["Andreea", "Cula"], ["Victoria", "Slavina"], ["Bunyawi", "Thamchaiwat"], ["Mirjam", "Bjorklund"], ["Alba", "Conejero Gutierrez"], ["Laia", "Conejero Gutierrez"], ["Theo", "Gravouil"], ["Carla", "Soto Villalobos"], ["Veronika", "Bencova"], ["Pancha", "Aguilar Sepulveda Francisca Gisella"], ["Annabelle", "Hageman"], ["Valerie Ann", "Valencia Castillo"], ["Rosie", "Cheng"], ["Caroline", "Ilowska"], ["Sasha", "Bollweg"], ["Milena", "Achlamov"], ["Elena Madalina", "Capraru"], ["Nicole", "Gadient"], ["Alexandra", "Filip"], ["Yasmyn", "Gulman"], ["Sofia Haydee", "Nicolini"], ["Maxine", "Palmen"], ["Paiton", "Wagner"], ["Eleni", "Christofi"], ["Alexis", "Nelson"], ["Alaina", "Miller"], ["Ayaka", "Narita"], ["Maria", "Toran Ribes"], ["Nethmi Himashi", "Waduge"], ["Natsuko", "Yamada"], ["Giulia", "Cereghetti"], ["Eugenia", "Ganga"], ["Alexia", "Coutino Castillo"], ["Maria", "Figueroa"], ["Nina", "Furmaniak"], ["Dalma", "Galfi"], ["Ana Maria", "Gavrilovici"], ["Eduarda", "Ferreira"], ["Alice", "Gillan"], ["Stefy Lorena", "Varon Diaz"], ["Cassie", "Chung"], ["Elvira", "Edstrom"], ["Marina", "Rodriguez Garcia"], ["Vivien", "Teglas"], ["Arina", "Petrova"], ["Ojasvinee", "Singh"], ["Qianxin", "Kong"], ["Barbora", "Slucikova"], ["Daryna", "Gukasyan"], ["Gabija", "Druteikaite"], ["Martina", "Zerulo"], ["Misaki", "Matsuda"], ["Gozal", "Ainitdinova"], ["Paola Valentina", "Quintana Rojas"], ["Momoko", "Kobori"], ["Lena", "Rueffer"], ["Khim", "Iglupas"], ["Itzi Janikuari", "Torres Millan"], ["Valeriya", "Pogrebnyak"], ["Sabina", "Safarova"], ["Julia", "Herlogsson"], ["Chiara", "Lommer"], ["Nami", "Otsuka"], ["Rosellina", "Masala"], ["Sarah", "Fernandez Ruiz"], ["Yu", "Morishima"], ["Ju Eun", "Heo"], ["Dalila", "Pejkovic"], ["Eden", "Richardson"], ["Kennedy", "Wicker"], ["Ghazal", "Pakbaten"], ["Dewi", "Dijkman"], ["Elisa", "Gugnali"], ["Serena", "Gugnali"], ["Laura Mariana", "Montalvo"], ["Caroline", "Dolehide"], ["Nadia", "Rawson"], ["Anastasia", "Blyukhterova"], ["Ganeshi", "Aniya"], ["Ayaka", "Ozeki"], ["Laura", "Cabrera Lafuente"], ["Anna", "Blinkova"], ["Akari", "Kakizawa"], ["Jana", "Jais"], ["Shahar", "Biran"], ["Silvija", "Perosa"], ["Kumi", "So"], ["Rimi", "So"], ["Victoria", "Wuilloud"], ["Nato", "Shaburishvili"], ["Martina", "Lo Pumo"], ["Clara Patricia", "Rizea"], ["Marta Huqi", "Gonzalez Encinas"], ["Milagros", "Montero"], ["Jovana", "Bogicevic"], ["Virginia", "Ciccone"], ["Moni", "Potrc"], ["Izumi", "Asano"], ["Yuliana", "Monroy"], ["Lourdes", "Ramalle"], ["Emma", "Lioi"], ["Alessia", "Di Pietro"], ["Maria Veronica", "Jimenez Coello"], ["Yana", "Kochneva"], ["Laura Alejandra", "Gutierrez Gomez"], ["Laura", "Illanes"], ["Isabella", "Gaban"], ["Maria", "Turrillo"], ["Eleonora", "Liga"], ["Erandi Xanat", "Martinez Hernandez"], ["Katarzyna", "Pitak"], ["Clarissa", "Gai"], ["Renata", "Ivandic"], ["Ioana", "Minca"], ["Anna", "Skabelka"], ["Milana", "Gasymova"], ["Panna", "Udvardy"], ["Vera", "Lapko"], ["Caroline", "Dunleavy"], ["Anamaria", "Vladescu"], ["Olga", "Fridman"], ["Anastasia", "Smirnova"], ["Victoria", "Smirnova"], ["Chelsea May", "Samways"], ["Erika", "Yakhimovich"], ["Luciana", "Rabines"], ["Irina", "Tuturina"], ["Jessica", "Zeynel"], ["Mariana", "Gonzalez Romero"], ["Blanca", "Puig Caballero"], ["Ena", "Babic"], ["Liron", "Sasson"], ["Anna", "Savchenko"], ["Camila", "Romero"], ["Ziyi", "Yang"], ["Rosie", "Johanson"], ["Eva", "Nyikos"], ["Glauka", "Carvajal Vicente"], ["Ana Paula", "Leal"], ["Berta", "Acero Garcia"], ["Miriam Bianca", "Bulgaru"], ["Vivian", "Wolff"], ["Maria Alexandra", "Giura"], ["Tessah", "Andrianjafitrimo"], ["Irene", "Lavino"], ["Alana", "Lolaeva"], ["Ornella", "Garavani"], ["Christina", "Schoener"], ["Ana M", "Becerra"], ["Meritxell", "Perera Ros"], ["Nency", "Chipan"], ["Elyse", "Lavender"], ["Liza", "Lebedzeva"], ["Aida", "Arafa"], ["Lara", "Escauriza"], ["Teodora", "Sabljarevic"], ["Karla", "De La Luz Montalvo"], ["Mariya", "Taukumova"], ["Shamika", "Dhar"], ["Anna", "Kadagidze"], ["Michela", "Xibilia"], ["Nicole", "Petchey"], ["Laura", "Rincon"], ["Darya", "Possokhova"], ["Matea", "Mihaljevic"], ["Alessia", "Dauria"], ["Wanda", "Rodriguez"], ["Valeriya", "Zeleva"], ["Sara", "Lizariturry"], ["Karina Kristina", "Vyrlan"], ["Mia", "Rabinowitz"], ["Jovana", "Jankovic"], ["Laura", "Fitzgerald"], ["Chiara", "Merico"], ["Djasmine", "Garnacho"], ["Louise Line", "Odet"], ["Kristina Tina", "Godec"], ["Lena", "Ruppert"], ["Mary", "Lewis"], ["Maheen", "Dada"], ["Trisha", "Sundaram"], ["Usue Maitane", "Arconada"], ["Delaney", "Nothaft"], ["Viktoria", "Bardarova"], ["Jana", "Lazarevic"], ["Tasha", "Cacciato"], ["Hyojin", "Kong"], ["Allison", "Bojczuk"], ["Carolin", "Nonnenmacher"], ["Subin", "Park"], ["Anastasia", "Tsyganova"], ["Nikola", "Novotna"], ["Wl Joanne", "Koh"], ["Lola", "Asis Espuche"], ["Dorthea", "Faa Hviding"], ["Nevena", "Georgieva"], ["Karthiga", "Thavarajasingam"], ["Delfina", "Glorioso"], ["Bojana", "Jovanovic"], ["Sissi", "Kroustalaki"], ["Senay", "Ince"], ["Ludmilla", "Samsonova"], ["Livia", "Kraus"], ["Fanny", "Stollar"], ["Ziyin", "Zhu"], ["Darya", "Shevchenko"], ["Claudia", "Hoste Ferrer"], ["Franziska Anna", "Hotter"], ["Nina Rebecca", "Hotter"], ["Sofia", "Kenin"], ["Casandra", "Metzer"], ["Angelica", "Raggi"], ["Valentina", "Dancenco"], ["Mariam", "Bayatyan"], ["Sabrina", "Bouheddi"], ["Defne", "Basbakkal"], ["Florencia", "Paez"], ["Maria Del Rosario", "Vazquez"], ["Vivien", "Klein"], ["Miriam", "Siljic"], ["Kimberley", "Gintrand"], ["Marija", "Jovicic"], ["Jiaxue", "Zang"], ["Elisa", "Patta"], ["Marina", "Cozac"], ["Tamara", "Milosevic"], ["Arely Estefania", "Vilchis Sanchez"], ["Marthe Eugenie", "Sime"], ["Jessica", "Crivelletto"], ["Katarzyna", "Kubicz"], ["Rocio Macarena", "Parodi"], ["Diletta", "Paperini"], ["Wushuang", "Zheng"], ["Sachi", "Belwal"], ["Vanesa", "Pappa"], ["Mir", "Ambaye"], ["Hanna", "Yedzelkina"], ["Olga", "Zavarotnaya"], ["Anna", "Kalinskaya"], ["Mei", "Otsuka"], ["Daniela", "Vukovic"], ["Medina", "Sahinagic"], ["Prachi", "Sinha"], ["Linda", "Ohanyan"], ["Taylor", "Bridges"], ["Maria Aurelia", "Scotti"], ["Shubhi", "Dwivedi"], ["Andreea Giorgiana", "Tupan"], ["Wei", "Tang"], ["Polina", "Malykh"], ["Julia", "Candiotto"], ["Dzenita", "Zverotic"], ["Daniela", "Cozzi"], ["Shiraz", "Bronstein"], ["Nina", "Alibalic"], ["Lucia", "Bronzetti"], ["Monika", "Pavlaskova"], ["Anna", "Sedinkina"], ["Manel", "Refaa"], ["Tamar", "Shoshani"], ["Anastasia", "Detiuc"], ["Michaela", "Bayerlova"], ["Lola", "Benedetti"], ["Martina", "Fricova"], ["Magdalena", "Radkova"], ["Vanshika", "Sawhney"], ["Mira", "Antonitsch"], ["Elodie", "Leune"], ["Risa", "Fukushige"], ["Lindsay", "Song"], ["Adilya", "Isabekova"], ["Jade", "Lewis"], ["Meiting", "Liu"], ["Hanna", "Kryvatulava"], ["Phenomena", "Radovcic"], ["Mari Cruz", "Garcia Sanchez"], ["Hsiang Wen", "Huang"], ["Hanna", "Sokal"], ["Weronika Jasmina", "Forys"], ["Aylen", "Hubeaut"], ["Anastasia", "Bursa"], ["Daniela", "Ramirez"], ["Alvina", "Lai"], ["Ema", "Lazic"], ["Lauren", "Dowling"], ["Malika", "Auger Aliassime"], ["Xianlin", "Zeng"], ["Yuseung", "Suh"], ["Alicia", "Herrero Linana"], ["Keren", "Rozen"], ["Sean", "Lodzki"], ["Gorana", "Kadijevic"], ["Zhanelya", "Turarbek"], ["Sihem", "Sahli"], ["Maria", "Naoum"], ["Kristina", "Miletic"], ["Harsha Sai", "Challa"], ["Monique", "Belovukovic"], ["Ines", "Ibbou"], ["Sofiya", "Esterman"], ["Katherine", "Sebov"], ["Viktoriia", "Kalinina"], ["Alexandra", "Sanford"], ["Janice", "Shin"], ["Pei Ju", "Chien"], ["Nicole", "Bunea"], ["Zanya Manola", "Sanchez"], ["Philippine", "Picard"], ["Dominique", "Schaefer"], ["Hristina", "Djokic"], ["Monica", "Cappelletti"], ["Kelia", "Le Bihan"], ["Tamara", "Arnold"], ["Nandini", "Sharma"], ["Marta", "Bettinelli"], ["Maya", "Tahan"], ["Sara", "Cvorovic"], ["Zhou", "Mingjun"], ["Diana", "Belalova"], ["Ekaterina", "Trashchenko"], ["Wanyu", "Tang"], ["Ares", "Llobera Irun"], ["Arina", "Taluenko"], ["Tatiana", "Nikolaeva"], ["Vanessa", "Wong"], ["Stanislava", "Starostoyants"], ["Anastasia Evgenyevna", "Nefedova"], ["Muazzez", "Demirci"], ["Charlotte", "Robillard Millette"], ["Inbar", "Cohen"], ["Ekaterina", "Kazionova"], ["Niditra", "Rajmohan"], ["Tijana", "Spasojevic"], ["Maria", "Galiy"], ["Rocio", "Safont Branchadell"], ["Alisa", "Deen"], ["Carolin", "Jung"], ["Inasse", "Hamouti"], ["Kariann", "Pierre Louis"], ["Radina", "Rakic"], ["Siqi", "Cao"], ["Luisa", "Pelayo"], ["Schena", "Benamar"], ["Chen", "Wang"], ["Anna", "Makarova"], ["Laura", "Bente"], ["Vasavi", "Ganesan"], ["Rukshika", "Wijesooriya"], ["Jovana", "Gvozdenovic"], ["Bojana", "Vuksan"], ["Yufei", "Long"], ["Milena", "Amedieva"], ["Nadezhda", "Sedysheva"], ["Karla", "Contreras"], ["Maria", "Soler Valverde"], ["Laylo", "Bahodyrova"], ["Arianna Maria", "Stagni Lailla"], ["Alejandra", "Morales"], ["Hanna", "Levina"], ["Sarah", "Funedda"], ["Shauna", "Casey"], ["Natalia", "Garcia Molina"], ["Seira", "Shimizu"], ["Maria", "Toma"], ["Manuela Stephania", "Cruz Rodriguez"], ["Georgie", "Walker"], ["Catalina", "Medici"], ["Yui", "Chikaraishi"], ["Meredith G", "Jones"], ["Katharina", "Kukaras"], ["Sara", "Ramirez"], ["Magdalena", "Pantuckova"], ["Anastasiia", "Gevel"], ["Jada", "Robinson"], ["Lara", "Salden"], ["Yu Tong", "Tang"], ["Victoria", "Walter"], ["Valentina", "Gonzalez Ramirez"], ["Yi", "Wang"], ["Kassandra", "Davesne"], ["Gitte", "Heynemans"], ["Napharat", "Swangkaew"], ["Nika", "Shytkouskaya"], ["Nadia", "Justiniano"], ["Medhira", "Samarasinghe"], ["Elena", "De Santis"], ["Ingrid", "Di Carlo"], ["Shrishti", "Daas"], ["Camille", "Verden Anderson"], ["Florencia", "Devincenti"], ["Ramya", "Natarajan"], ["Ksieniia", "Rudenko"], ["Sofia", "Johansson"], ["Le", "Zhao"], ["Ashley", "Kratzer"], ["Yulia", "Almiron Solano"], ["Matilda", "Lenngren"], ["Natalie", "Kohoutkova"], ["Isabella", "Montini"], ["Tzarina", "Tuen Matthews"], ["Giana", "Cormos"], ["Nastja", "Rettich"], ["Lenka", "Piskova"], ["Eimear", "Maher"], ["Michaela", "Haet"], ["Rosanna", "Maffei"], ["Ioana", "Guna"], ["Eimi", "Friant"], ["Alina", "Karazhova"], ["Lucie", "Wargnier"], ["Mouna", "Idlkadi"], ["Aanandita", "Gupta"], ["Altea", "Ricci"], ["Nitzan", "Bruner"], ["Alexandra", "Bozovic"], ["Alona", "Kruglov"], ["Boba", "Kotlica"], ["Aza", "Petrova"], ["Sara", "Gambogi"], ["Tamara", "Bojanic"], ["Klara", "Mrcela"], ["Yuval", "Keren"], ["Momoka", "Chimura"], ["Laila", "Elnimr"], ["Daria", "Zheludchenko"], ["Mika", "Misgav"], ["Zeel", "Desai"], ["Isha", "Budwal"], ["Guiomar", "Maristany Zuleta De Reales"], ["Alessandra", "Traub"], ["Anna Lena", "Neuwirth"], ["Marta", "Magalhaes"], ["Nora Lima", "Dahl"], ["Barbara", "Huyskes"], ["Rebecca", "Ehn"], ["Tomiris", "Koshmukhanova"], ["Lorena", "Marruffo"], ["Sidal", "Ak"], ["Nermeen", "Shawky"], ["Maria Vittoria", "Viviani"], ["Olivia", "Robert"], ["Dana Katherine", "Santiago Benavides"], ["Maria", "Mikhaylova"], ["Ciney", "Bekker"], ["Catalina", "Bloch"], ["Daniela Alejandra", "La Fuente Strassburger"], ["Amelie", "Boy"], ["Daria", "Kuczer"], ["Victoria", "Tournebize"], ["Adrienn", "Zsitvay"], ["Bojana", "Markovic"], ["Iesha", "Shepherd"], ["Sofija", "Zecevic"], ["Jiatian", "Qi"], ["Hind", "Abdelouahid"], ["Esther", "Lopez Alcaraz"], ["Tina", "Sojkova"], ["Paulina", "Cota"], ["Megan", "Davies"], ["Nao", "Shimoji"], ["Marta", "Paigina"], ["Isidora", "Zivkovic"], ["Xiangruyi", "Ji"], ["Xinyu", "Jiang"], ["Sakura", "Hondo"], ["Petra", "Hule"], ["Marta", "Oliveira"], ["Karolina", "Szmit"], ["Ylena", "In Albon"], ["Natasha", "Irani"], ["Sangeeta", "Roopan"], ["Miranda", "Ramirez"], ["Madeline", "Meredith"], ["Marcelle", "Cirino"], ["Pauline", "Dore"], ["Olivia", "Rohrbacher"], ["Tara", "Damnjanovic"], ["Meredith", "Roberts"], ["Katarina", "Sasaroga"], ["Camila", "Millan Santacruz"], ["Steph", "Booth"], ["Jiakang", "Li"], ["Zoe", "Richard"], ["Tinkara", "Kovac"], ["Jia Qi", "Yang"], ["Cecilia", "Engback"], ["Shaline Doreen", "Pipa"], ["Isabel", "Iglesias Prieto"], ["Fernanda", "Labrana"], ["Mar", "Gendra Felip"], ["Anezka", "Bartosova"], ["Lee", "Barnard"], ["Zani", "Barnard"], ["Birdem", "Oz"], ["Maria Celeste", "Lamagni"], ["Camilla", "Ciaccia"], ["Florencia Natalia", "Grieco"], ["Maria Jose", "Zacarias"], ["Alexia", "Carlone"], ["Andreea Amalia", "Rosca"], ["Jo", "Weisen"], ["Sofia", "Gorovits"], ["Kylie", "Mckenzie"], ["Polina", "Golubovskaya"], ["Katie", "Swan"], ["Anastasiya", "Joyner"], ["Jenny", "Duerst"], ["Anna", "Ukolova"], ["Mixcoatl", "Trabulse Garcia"], ["Tea", "Jezidzic"], ["Eva Marie", "Voracek"], ["Itza", "Trabulse Garci"], ["Arlinda", "Rushiti"], ["Emelie Luisa", "Schwarte"], ["Valeriia", "Bazhanova"], ["Tatiana", "Pieri"], ["Mikaela", "Molina Bugarija"], ["Carolina", "Bulatovic"], ["Pranjala", "Yadlapalli"], ["Aastha", "Dargude"], ["Leia", "Balkevarn"], ["Palina", "Padabed"], ["Rachel", "Zipfel"], ["Ludovica", "Infantino"], ["Arianna", "Capogrosso"], ["Ekaterina", "Korzhova"], ["Victoria", "Flores"], ["Paola", "Exposito Diaz Delgad"], ["Milena", "Avetisyan"], ["Anna", "Slovakova"], ["Anna", "Tonoyan"], ["Mina Adelin", "Pedersen"], ["Yusta", "Dorofeeva"], ["Mihaela", "Kaftanova"], ["Snehal", "Mane"], ["Alika", "Ismailova"], ["Isolde", "De Jong"], ["Silvia", "Saccani"], ["Vivien", "Abraham"], ["Catherine Cartan", "Bellis"], ["Nicole", "De O Crispino De Souza"], ["Mia", "Mijatovic"], ["Mako", "Ganaha"], ["Halla", "Alajeely"], ["Francescamaria", "Pannarale"], ["Serena", "Buonaccorso"], ["Anastasia", "Abramyan"], ["Alexandra", "Parra"], ["Bronte", "Murgett"], ["Victoria", "Saldh"], ["Lalita", "Devarakonda"], ["Olivia Alexandra", "Placzek"], ["Nino", "Memishishi"], ["Morgan", "Coppoc"], ["Klara", "Hajkova"], ["Kristina", "Kislyak"], ["Ines", "Milosevic"], ["Dea", "Lako"], ["Tania Andrada", "Mare"], ["Eden Sophie", "Schlagenhauf"], ["Famke", "Wilhelm"], ["Madison", "Gallegos"], ["Anastasia", "Ushakova"], ["Annalisa", "Molino"], ["Evelyne Christelle Atticia", "Tiron"], ["Rana", "Essam"], ["Soomin", "Kim"], ["Yarden", "Akler"], ["Ai Qi", "Chen"], ["Adrianna", "Sosnowska"], ["Jana", "Bojovic"], ["Flavia", "Gutierrez"], ["Matea", "Mamic"], ["Polina", "Bakhmutkina"], ["Gerda", "Zykute"], ["Dominique", "Meyer"], ["Nicole Taylor", "Pafundi"], ["Mahiro", "Date"], ["Lucie", "Devier"], ["Malin", "Falk"], ["Nurseda", "Akovalier"], ["Julita", "Saner"], ["Lucelena", "Hoyo"], ["Sydney", "Van Alphen"], ["Jiaying", "He"], ["Radia", "Lalami"], ["Lixin", "Wang"], ["Annick", "Melgers"], ["Nidhi", "Surapaneni"], ["Mathilde", "Trigaux"], ["Giulia", "Turconi"], ["Elisa Teodora", "Sararu"], ["Ysabel", "Gonzalez Rico"], ["Alexandra", "Zaicenco"], ["Janina", "Scheffbuch"], ["Alena", "Kovaleva"], ["Katarina", "Marinkovikj"], ["Sofia", "Munera Sanchez"], ["Anusha", "Kondaveeti"], ["Jitasha", "Shastri M"], ["Nicole", "Coopersmith"], ["Maria Jose", "Portillo Ramirez"], ["Kelly", "Chen"], ["Ellie Rose", "Griffiths"], ["Selin GLseren", "Simsek"], ["Claudia", "Kieffer"], ["Kathleen", "Biong Percegona"], ["Ryan", "Peus"], ["Oumeima", "Charrad"], ["Ema", "Vasic"], ["Kimika", "Sakata"], ["Lilya", "Hadab"], ["Neta", "Berman"], ["Alice", "Di Matteo"], ["Andrea", "Hernando Gutierrez"], ["Thai Sa Grana", "Pedretti"], ["Mariana", "Borges"], ["Anastasia", "Gasanova"], ["Seone", "Mendez"], ["Nadia", "Van Heerden"], ["Anastasiya", "Gorbacheva"], ["Johana", "Markova"], ["Ginevra", "Peiretti"], ["Stefani", "Arsova"], ["Afroditi", "Tzanopoulou"], ["Rina", "Tateyama"], ["Meible", "Chi"], ["Maria", "Casas Blas"], ["Yuka", "Hosoki"], ["Irina", "Lapustina"], ["Fariza", "Abdullaeva"], ["Habiba", "Khaled Aly"], ["Georgina", "Axon"], ["Wiktoria", "Kulik"], ["Minette", "Van Vreden"], ["Marcelina", "Podlinska"], ["Evgeniya", "Levashova"], ["Jodie Anna", "Burrage"], ["Anastasia", "Mikheeva"], ["Anastasia", "Veselova"], ["Teresia", "Londol"], ["Lourdes", "Sprinckmoller"], ["Lucia", "Natal Gomez"], ["Martina", "Bokulic"], ["Marharyta", "Smolyak"], ["Daria", "Shelomentseva"], ["Andiyo", "Inwang"], ["Adelaide", "Maesfranckx"], ["Carmen", "Schultheiss"], ["Vilma", "Berglund"], ["Luna", "Meers"], ["Andreea", "Stanescu"], ["Francesca", "Denti"], ["Carolina", "Torrico"], ["Salma", "El Garhi"], ["Zainab", "Bendahhou"], ["Anna Soffia", "Gronholm"], ["Izabela Gabriela", "Novac"], ["Avital", "Vulf"], ["Denisa", "Pospisilova"], ["Agustina Belen", "Diaz"], ["Ulyana", "Grib"], ["Csenge", "Furak"], ["Katarina", "Ljujic"], ["Moira Valeria", "Miranda"], ["Makenzie", "Myers"], ["Ye Xin", "Ma"], ["Yanni", "Liu"], ["Sina", "Zuger"], ["Adi", "Spiegelman"], ["Angie", "Laporal"], ["Irem", "Kaftan"], ["Irma Elita", "Evania"], ["Mei", "Yamaguchi"], ["Alessandra", "Maya Thompson"], ["Valentine", "Bacher"], ["Riley", "Mcquaid"], ["Taylor", "Gruber"], ["Maria Paula", "Uhrich"], ["Kamilla", "Bolatova"], ["Aleksandra", "Kasatkina"], ["Paulina Ela", "Mihokova"], ["Sybella", "Garvin"], ["Elena", "Rybakina"], ["Aleksandra", "Kulik"], ["Mara", "Vasiliev"], ["Kintan Pratiwi", "Anwar"], ["Kateryna", "Popova"], ["Alexandra", "Almborg"], ["Sol Maria", "Terracina"], ["Carla", "Hassaine"], ["Alina", "Povidalo"], ["Tereza", "Prochazkova"], ["Brooke", "Winley"], ["Valeriya", "Denisenko"], ["Franziska Marie", "Ahrend"], ["Ellie", "Tsimbilakis"], ["Mila", "Hartig"], ["Astrid Wanja", "Brune Olsen"], ["Noa", "Lasry"], ["Nagomi", "Higashitani"], ["Maryna", "Chernyshova"], ["Sonia", "Poveda Marsal"], ["Valeriya", "Yushchenko"], ["Himani", "Mor"], ["Isabel", "Donaldson"], ["Anjelika", "Vlasenkova"], ["Veronika", "Koberlingova"], ["Erika", "Botalieva"], ["Marketa", "Vondrousova"], ["Maria Sol", "Zeyen"], ["Shuyue", "Ma"], ["Alisha", "Reayer"], ["Alexandra", "Belaya"], ["Tizia", "Brocks"], ["Yesica", "De Lucas"], ["Marion", "Chatenet"], ["Anna Marija", "Bukina"], ["Susanna", "Giovanardi"], ["Nefisa", "Berberovic"], ["Victoria", "Rey"], ["Sofiya", "Kuzina"], ["Martina", "Kudelova"], ["Suzan", "Lamens"], ["Arina", "Amaning"], ["Federica", "Bilardo"], ["Hazal", "Karaaliler"], ["Sofia", "Ayuso"], ["Emmanuelle", "Girard"], ["Ipek", "Oz"], ["Shelly", "Krolitzky"], ["Mccartney", "Kessler"], ["Ana", "Biskic"], ["Malaika Alex", "Fernandes"], ["Angela", "Fita Boluda"], ["Franziska", "Kommer"], ["Laura", "Gil Lerin"], ["Romana", "Tarajova"], ["Georgia Andreea", "Craciun"], ["Anastazja", "Rosnowska"], ["Fang Hsien", "Wu"], ["Emma", "Lene"], ["Julia", "Saving"], ["Sandra", "Azorin Vilella"], ["Yumi", "Takaichi"], ["Cagla", "Badem"], ["Claudia", "Bartolome Ortiz"], ["Ecaterina", "Ivasco"], ["Yelyzaveta", "Rachenko"], ["Dominika", "Paczena"], ["Chiara", "Catini"], ["Dami", "Lee"], ["Amanda", "Meyer"], ["Maria", "Mateas"], ["Sofia", "Sewing"], ["Mikayla", "Parks"], ["Zaklin", "Bokan"], ["Celine", "Kern"], ["Ana", "Martinez Bencomo"], ["Luna", "Milovanovic"], ["Michaela", "Gordon"], ["Sadaf", "Sadeghvaziri"], ["Lauryn", "John Baptiste"], ["Jaeda", "Daniel"], ["Rishika", "Ravindran"], ["Kim", "Fontana"], ["Somer", "Dalla Bona"], ["Michelle", "Janis"], ["Bianca", "Vitale"], ["Sabina", "Smirnova"], ["Vlada", "Medvedcova"], ["Dakshata", "Girishkumar Patel"], ["Daria", "Orichkevitch"], ["Paola", "Landin Lopez"], ["Pamela", "Hernandez"], ["Anna", "Bowtell"], ["Angeles", "Moreno Barranquero"], ["Ginelle  Michelle", "Samson"], ["Jiahe", "Cai"], ["Mariella", "Minetti"], ["Sandra", "Bozinovic"], ["Rebeka", "Masarova"], ["Natalija", "Popovic"], ["Victoria", "Emma"], ["Gaelle", "Ratianarimanana"], ["Ivon", "Mihaleva"], ["Selin", "Karaer"], ["Caroline", "Szabo"], ["Alina", "Kislitskaya"], ["Sharmada", "Iyer"], ["Diana", "Bakuta"], ["Urska", "Velec"], ["Jule", "Niemeier"], ["Nastasia", "Jedrychowski"], ["Jasmine", "Boyd"], ["Lorena", "Vano  Martin"], ["Lily", "Ghodrati"], ["Poschanun", "Warakulnukroh"], ["Leonor", "Meliveo Saragusti"], ["Camilla", "Priuli"], ["Elisa", "Visentin"], ["Yuliya", "Kim"], ["Sofija", "Mandic"], ["Merel", "Hoedt"], ["Frana", "Ugarkovic"], ["Gabriella", "Akopian"], ["Sabrina Mary", "Woll"], ["Silvia", "Bordes Caselles"], ["Eliza", "Omirou"], ["Imren", "Bilgic"], ["Malene", "Helgo"], ["Vitoria", "Okuyama"], ["Ines Belkis", "Alimoussa"], ["Mai", "Hontama"], ["Anna", "Stefani"], ["Tatiana", "Simova"], ["Emily", "Appleton"], ["Katerina", "Filip"], ["Neri", "Cohen"], ["Defne", "Olcay"], ["Eva", "Guerrero Alvarez"], ["Vasilisa", "Mikhaylova"], ["Caragh", "Courtney"], ["Angela", "Charles Alfred"], ["Magdalini", "Adaloglou"], ["Lauren", "Gish"], ["Inci", "Ogut"], ["Noelia", "Bouzo Zanotti"], ["Julieta", "Albornoz"], ["Marta", "Perez Mur"], ["Eva", "Alexandrova"], ["Ebba", "Rosberg"], ["Amina", "Anshba"], ["Zhijie", "Ma"], ["Lisa", "Zang"], ["Pareen", "Shivekar"], ["Daryna", "Kovalenko"], ["Agnes Ornella", "Biba"], ["Paula", "Baranano"], ["Shivani", "Manjanna"], ["Dilara", "Spicer"], ["Andrea", "Arratia Fernandez"], ["Zhima", "Du"], ["Alexandra", "Alegre Ferre"], ["Georgia", "Gulin"], ["Teodora", "Golubovic"], ["Adelina", "Baravi"], ["Peyton", "Pesavento"], ["Nina", "Kolar"], ["Daniela", "Flores Gerez"], ["Advaitas", "Saravanan"], ["Jaimee", "Fourlis"], ["Penelope", "Abreu"], ["Donnaroza", "Gouvernante"], ["Antje", "Rubbrecht"], ["Mathilda", "Vidgren"], ["Sofia", "Carlsson"], ["Cameron", "Morra"], ["Adriana", "Marikova"], ["Lea", "Boskovic"], ["Petra Maria", "Kerdikova"], ["Katrina", "Sammut"], ["Chelsea", "Vanhoutte"], ["Martina", "Girardi"], ["Satsuki", "Takamura"], ["Maria", "Viarkhusha"], ["Nafees Bano", "Syed"], ["Mukadas", "Yussupova"], ["Asli", "Yucebilgin"], ["Maria Gabriela", "Linares De Faria"], ["Viktoria", "Surova"], ["Kayla", "Day"], ["Alexandra", "Dubrovina"], ["Katie", "Lafrance"], ["Yunuen", "Elizarraras Bahena"], ["Karolina", "Hakala"], ["Teresa", "Franco Dias"], ["Aleksandra", "Kuznetsova"], ["Anastasia", "Konstantinova"], ["Lily", "Reynolds"], ["Madoka", "Tominaga"], ["Timea", "Pavlickova"], ["Jennifer", "Luikham"], ["Tamara", "Musulbes"], ["Nathalia", "Wolf Gasparin"], ["Nikola", "Neumannova"], ["Ajda", "Bukovec"], ["Yulia", "Shishova"], ["Milana", "Lysova"], ["Polina", "Nazarchuk"], ["Hanine", "Boudjadi"], ["Deepshikha", "Saw"], ["Monika", "Kilnarova"], ["Zorica", "Spasojevic"], ["Anna", "Bright"], ["Zarema", "Mekhtieva"], ["Angelica Maria", "Vargas Saavedra"], ["Vicky Irma Margaretha", "Oktaviana"], ["Salma", "Ziouti"], ["Noramon", "Tacharungroj"], ["Agustina", "Rimoldi Godoy"], ["Dragana", "Radisic"], ["Helene", "Heiberg"], ["Putri Sanjungan", "Insani"], ["Mouna", "Bouzgarrou"], ["Ya Yun", "Pai"], ["Lara", "Schmidt"], ["Alana", "Tuayeva"], ["Laura", "Barona"], ["Berfu", "Cengiz"], ["Komola", "Umarova"], ["Tamara", "Racine Beauchamp"], ["Sanja", "Fabijancic"], ["Marta", "Vicens Miquel"], ["Ioana", "Bogdan"], ["Rebeka Margareta", "Mertena"], ["Ashley", "Lahey"], ["Haruna", "Arakawa"], ["Jimena Paula", "Garbino"], ["Alejandra", "Garmendia"], ["Amelie Carolin", "Kurpiers"], ["Zinovia", "Vaneva"], ["Alara", "Sener"], ["Zuzanna", "Wilk"], ["Anasztazia", "Fouraev"], ["Priyachanok", "Sukkanha"], ["Nora", "Ayala Serra"], ["Sofya", "Dobronevskaya"], ["Anna", "Ureke"], ["Angelina", "Shakhraychuk"], ["Jennifer", "Timotin"], ["Albertina", "Giacomino"], ["Alina", "Gazizova"], ["Margaux", "Orange"], ["Alexandra", "Tutecky"], ["Novela Rezha", "Millenia Putri"], ["Gabriela Nicole", "Tatarus"], ["Mihika", "Yadav"], ["Naiara", "Uriarte Morillas"], ["Lillian", "Gabrielsen"], ["Kalpaka", "Pradip"], ["Bhargavi", "Kalaga"], ["Anais", "Defossez"], ["Anastassiya", "Sharapova"], ["Marie", "Vicente"], ["River", "Hart"], ["Jacqueline", "Boepple"], ["Karin", "Hiraoka"], ["Valentina", "Giavazzi"], ["Maria", "Tyrina"], ["Maria", "Ryshchina"], ["Julie", "Ball"], ["Anastasia", "Golubeva"], ["Maria Jazmin", "Amicuzi"], ["Aleksa", "Cveticanin"], ["Zuleykha", "Safarova"], ["Ekaterina", "Vishnevskaya"], ["Lea", "Romain"], ["Sophie", "Gerits"], ["Tanit", "Lopez Lopez"], ["Sofya", "Zhuk"], ["Vered", "Bert"], ["Ekaterina", "Kurtukova"], ["Miku", "Kajishita"], ["Matilda", "Vainio"], ["Shakhnoza", "Khatamova"], ["Klara", "Silka"], ["Marija", "Radosavovic"], ["Sofia", "San Jose"], ["Helena", "Jansen Figueras"], ["Laura", "Cazacu"], ["Valeria Paulina", "Humpierres Novikow"], ["Imperia", "Martinez Mora"], ["Katerina", "Krizova"], ["Marina", "Bassols Ribera"], ["Greta Louise", "Von Peschke"], ["Olivia", "Peet"], ["Alessandra", "Mazzola"], ["Valeriya", "Deminova"], ["Laura", "Rijkers"], ["Varvara", "Kuksina"], ["Barbora", "Kolackova"], ["Camila", "Andrade"], ["Mi Zhuoma", "You"], ["Yidi", "Yang"], ["Kristina", "Vasina"], ["Veronika", "Pribylova"], ["Chiara", "Giaquinta"], ["Renee", "McBryde"], ["Elizaveta", "Volodko"], ["Tingting", "Pei"], ["Maria", "Ribeiro"], ["Ekaterina", "Davletova"], ["Linda", "Puppendahl"], ["Veronika", "Erjavec"], ["Emily", "Seibold"], ["Gaia", "Bandini"], ["Alejandra", "Aguilar"], ["Irina", "Cantos Siemers"], ["Elena", "Griessner"], ["Muskaan", "Ranjan"], ["Balsen", "Kaya"], ["Teodora", "Ristic"], ["Aylin", "Abdioglu"], ["Alena", "Yurchenko"], ["Perla", "Nieuwboer"], ["Petra", "Kucerova"], ["Marie", "Mattel"], ["Vera", "Markovic"], ["Carlotta", "Romito"], ["Laura", "Raimkhanova"], ["Sara", "Raimkhanova"], ["Hortencia", "Birnbaumer"], ["Simran", "Kejriwal"], ["Meiqi", "Guo"], ["Yinglak", "Jittakoat"], ["Oceane", "Mialon"], ["Lucie", "Kankova"], ["Kaitlin", "Staines"], ["Reka", "Szalai"], ["Ana", "Giraldi Requena"], ["Vivian", "Glozman"], ["Lina", "Glushko"], ["Emilie", "Lindh Gallagher"], ["Margarita", "Skryabina"], ["Karolina", "Jaskiewicz"], ["Katarina", "Kostic"], ["Tiffany", "Lagarde"], ["Juliana", "Castellanos Fernandez"], ["Ikram", "Rassif"], ["Jovana", "Vukovic"], ["Namu", "Zeren"], ["Watsachol", "Sawasdee"], ["Joleta", "Budiman"], ["Shakhzoda", "Asimova"], ["Hsin Yuan", "Shih"], ["Alisiya", "Soto"], ["Angela", "Rinaldi"], ["Juliette", "Bertagnol"], ["Chunxi", "Xin"], ["Shoval", "Fanani"], ["Derya", "Yahe"], ["Eun Se", "Jang"], ["Katyarina", "Paulenka"], ["Stephanie Judith", "Visscher"], ["Nina", "Rudiukova"], ["Julia", "Konishi Camargo Silva"], ["Isabella", "Perez"], ["Sara", "Urquizu"], ["Hannah", "Mccolgan"], ["Summer", "Yardley"], ["Alisa", "Savina"], ["Sofia", "Bezukladova"], ["Ellen", "Ashley"], ["Karla", "Kilic"], ["Ines", "Salvador"], ["Yusra", "Hegy"], ["Camila", "Rebelo Felizzola"], ["Suzuka", "Takoi"], ["Amanda", "Citre"], ["Evaggelia", "Kokkinaki"], ["Rayen", "Turki"], ["Ece", "Tan"], ["Evgenia", "Kokkinaki"], ["Lucia", "Marzal Martinez"], ["Evelin", "Taise Baziloni Gouveia"], ["Lea", "Dubois Rebiere"], ["Reka", "Farbas"], ["Martina", "Paladini Jennings"], ["Ulyana", "Shirokova"], ["Katarina", "Zavatska"], ["Lucia", "De La Puerta Uribe"], ["Kaaviya", "Balasubramanian"], ["Arina", "Karbolina"], ["Olivia", "Alfredsson"], ["Dainah", "Cameron"], ["Julia", "Rehberg"], ["Kristina", "Sorokolet"], ["Alexis", "Tensfeldt"], ["Amit", "Miran"], ["Andreea", "Prisacariu"], ["Abigail", "Cazarez Gonzalez"], ["Laura", "Prenant"], ["Maria Lourdes", "Carle"], ["Anca", "Craciun"], ["Mila", "Mejic"], ["Alyssa", "Mayo"], ["Svenja", "Ochsner"], ["Natalia", "Nikolopoulou"], ["Axana", "Mareen"], ["Sofia", "Ramirez"], ["Darya", "Mukhina"], ["Baijing", "Lin"], ["Yulia", "Starodubtsewa"], ["Emma", "Decoste"], ["Deniza", "Marcinkevica"], ["Ilana", "Tetruashvili"], ["Vaidehi", "Chaudhari"], ["Basak", "Akbas"], ["Anna", "Titova"], ["Sofia Nami", "Samavati"], ["Tejasvi", "Kate"], ["Anastasia", "Kulikova"], ["Yu", "Shan"], ["Isabela", "Campos Bifano"], ["Warona", "Mdlulwa"], ["Natalia", "Boltinskaya"], ["Emma", "Brust"], ["Adelaida", "Allakhverdiyeva"], ["Ainur", "Suleimenova"], ["I Hsuan", "Cho"], ["Ipek", "Cevik"], ["Valeriya", "Zhupanska"], ["Emna", "Fahmia"], ["Gergana", "Topalova"], ["Meiling", "Wang"], ["Megan", "Lombardi"], ["Wing Kiu Jacqueline", "Lam"], ["Polina", "Avdzhiyan"], ["Tamari", "Sumbadze"], ["Maria Paula", "Tobias"], ["Nell", "Miller"], ["Charmaine Shi Yi", "Seah"], ["Flaminia Maria", "Valci"], ["Dariya", "Detkovskaya"], ["Paula", "Arias Manjon"], ["Jordan", "Ortega Mendez"], ["Megan", "Forster"], ["Pei Hsuan", "Chen"], ["Ella", "Husrefovic"], ["Nevena", "Sokovic"], ["Aynur Cemre", "Aka"], ["Cristina", "Moll Alles"], ["Cherry", "Kim"], ["Radka", "Buzkova"], ["Mireille", "Moreau"], ["Hili", "Kronzon"], ["Ji Min", "Park"], ["Anastasia", "Kharitonova"], ["Nicole", "Conard"], ["Nada", "Dimovska"], ["Carla", "Girbau Romero"], ["Marie Perla", "Biansumba"], ["Denise Antonela", "Stoica"], ["Magdalena", "Santer"], ["Sri Sai Shivani", "K"], ["Laura", "Lopez Giese"], ["Sihem", "Bellahouel"], ["Natalia", "Pietras"], ["Julia", "Khamula"], ["Paulina", "Bednarczyk"], ["Sofia", "Shaykis"], ["Arushi", "Gupta"], ["Ana", "Castillo"], ["Mijeong", "Park"], ["Wing Sze", "Yu"], ["Noa", "Revivo"], ["Kolie", "Allen"], ["Amparo Del Pino", "Hernandez Alonso"], ["Molly", "Helgesson"], ["Alicia Liliana", "Rahem"], ["Prakriti", "Banwani"], ["Patricia", "Zeriu"], ["Alexandra", "Pisareva"], ["Radhika", "Yadav"], ["Elysia", "Bolton"], ["Yanin", "Wisitwarapron"], ["Adeline", "Lardinois"], ["Zhibek", "Kulambayeva"], ["Carlota", "Molina Megias"], ["Ekaterina", "Kholopenko"], ["Doga Selen", "Takunyaci"], ["Yasmin", "Mansouri"], ["Olga", "Helmi"], ["Lenka", "Stara"], ["Yuliya", "Mazur"], ["Vasilisa", "Polunova"], ["Kiara", "Petrovicka"], ["Noya", "Ohana"], ["Nastassia", "Chamoun"], ["Erika Abigail", "Gauto Martinez"], ["Ghizlane", "El Amrani Tchaha"], ["Pauline", "Demel"], ["Anastasia", "Bovolskaya"], ["Serena", "Dercole"], ["Leeloo", "Obrul"], ["Sofie Bomark", "Syversen"], ["Denisa Elena", "Gheorghe"], ["Florencia", "Massardo Brain"], ["Valentina", "Likic"], ["Mariia", "Skuba"], ["Kristina", "Pukhaeva"], ["Kristina", "Baran"], ["Annick", "Verhaar"], ["Sofia", "Bruno"], ["Sonja", "Keranen"], ["Zehra Lara", "Tekbas"], ["Lucia", "Quiterio"], ["Alexandra", "Hunter"], ["Isabelle", "Boulais"], ["Emeline", "Dartron"], ["Mileva", "Cardenas Serna"], ["Eliza", "Askarova"], ["Dilara Romy", "Kubak"], ["Sofia", "Blanco Andrade"], ["Alicia", "Melosch"], ["Georgia", "Drummy"], ["Francisca", "Jorge"], ["Melis", "Yasar"], ["Yuliya", "Hatouka"], ["Emilia", "Dejonckheere"], ["Ekaterina", "Lushnikova"], ["Selma Stefania", "Cadar"], ["Draginja", "Vukovic"], ["Riddhi", "Ramesh Sharma"], ["Jiawen", "Li"], ["Ann Cathrin", "Hummel"], ["Olesya", "Pervushina"], ["Estella", "Jaeger"], ["Maria Lota", "Kaul"], ["Ida", "Ferding"], ["Margo", "Landmann"], ["Teodora", "Mitrovic"], ["Priscila", "Baptista"], ["Alyvia", "Jones"], ["Anri", "Nagata"], ["Gulsina", "Khalimullina"], ["Zoe", "Imes"], ["Laura Sofia", "Rico Garcia"], ["Nikoleta", "Antoniou Karademitrou"], ["Jessie Jiaxin", "Gong"], ["Jayden", "Nielsen"], ["Clara", "Froget"], ["Destanee", "Aiava"], ["Eunhye", "Lee"], ["Alice", "Robbe"], ["Aneta", "Laboutkova"], ["Sofya", "Golubovskaya"], ["Mayssa", "Tebourbi"], ["Alisa", "Axyanova"], ["Katerina", "Tsygourova"], ["Iva", "Krivic"], ["Louise", "Wittouck"], ["Andrijana", "Stoilkovic"], ["Han Byeol", "Lee"], ["Maria", "Oliver Sanchez"], ["Dayana", "Yastremska"], ["Wanning", "Zhu"], ["Lisa Marie", "Lausecker"], ["Lana", "Kentchiashvili"], ["Francisca Emilia", "Vergara Jofre"], ["Marta", "Del Pino Maturano"], ["Jayci", "Goldsmith"], ["Tiphanie", "Fiquet"], ["Yang", "Lee"], ["Noa", "Liauw A Fong"], ["Lungile", "Ntuli"], ["Isabella", "Tcherkes Zade"], ["Chanel", "Janssen"], ["Mei Xu", "Wu"], ["Aneta", "Kladivova"], ["Ellie", "Douglas"], ["Tatiana", "Terwindt"], ["Maileen", "Nuudi"], ["Yasmine", "Wagner"], ["Maja", "Issler"], ["Anna", "Khudoley"], ["Claire", "Liu"], ["Danica", "Malan"], ["Alisa", "Grachova"], ["Xenia", "De Luna"], ["Ali", "Collins"], ["Elena", "Malygina"], ["Daria", "Solovyeva"], ["Francesca", "Gaida"], ["Jia", "Ren"], ["Mara", "Vidal"], ["Ekaterina", "Shalimova"], ["Julia", "Iglesias"], ["Anna Maria", "Jovanovic"], ["Nadja", "Ramskogler"], ["Lucia", "Cortez Llorca"], ["Marina", "Benito"], ["Julieanne", "Bou"], ["Ye Jin", "Kim"], ["Haruna", "Sakamoto"], ["Maria", "Manilova"], ["Oxi", "Gravitas Putri"], ["Polina", "Altukhova"], ["Nicole", "Nadel"], ["Avital", "Kandelis"], ["Ambre", "Feder"], ["Ariana", "Chan Baratau"], ["Svetlana", "Iansitova"], ["Justine", "Pysson"], ["Sophie", "Muntean"], ["Dariya", "Sovich"], ["Bianca", "Andreescu"], ["Gabriela Ana Maria", "Davidescu"], ["Gabriella", "Mujan"], ["Sanjeevani", "Patil"], ["Weronika", "Falkowska"], ["Anja", "Gal"], ["Giulia", "Peoni"], ["Neli", "Sunjic"], ["Mamiko", "Harada"], ["Camille", "Corenthy"], ["Mercedes", "Aristegui"], ["Camilla", "Ceppellini"], ["Nuria", "Brancaccio"], ["Rosa", "Vicens Mas"], ["Ann", "Li"], ["Elizaveta", "Avdonina"], ["Vasiliki", "Karvouni"], ["Daniela", "Baez Friedrich"], ["Maria Jose", "Reynaldo"], ["Sara", "Gvozdenovic"], ["Ana Paula", "Melilo"], ["Azul Agustina", "Pedemonti"], ["Yuki", "Ando"], ["Yasemin Ada", "Boru"], ["Angelina", "Fedorova"], ["Elizabeth", "Popova"], ["Salma", "Abdel Rahim"], ["Ruoyu", "Chen"], ["Maria Jose", "Hernandez Magro Quiroz"], ["Jimena", "Rodriguez Benito"], ["Loretto", "Villalba Rubio"], ["Anna", "Loughlan"], ["Taysia", "Rogers"], ["Shelly", "Bereznyak"], ["Deborah", "Raia"], ["Vanessa Olimpia", "Rauta"], ["Zara", "Lennon"], ["Maria Victoria", "Negoita"], ["Domenika", "Turkovic"], ["Kamilla", "Kokeladze"], ["Silvia Paulina", "Vilchis Sanchez"], ["Viktoria", "Glotova"], ["Enola", "Chiesa"], ["Mariona", "Perez Noguera"], ["Luminita", "Tutunaru"], ["Aurora", "Ciavarelli"], ["Judith", "Van Kessel"], ["Dalia", "Ahmed"], ["Maria", "Marnellou"], ["Paula", "Veyhle"], ["Costanza", "Traversi"], ["Samanta", "Villegas"], ["Olga", "Terletska"], ["Maria", "Pereyra Sellart"], ["Tal", "Zinn"], ["Jodie Annie", "Lawrence Taylor"], ["Dyane Estefania", "Barcena Del Bosque"], ["Ana", "Makatsaria"], ["Aino", "Alkio"], ["Elinor", "Storkaas"], ["Nikoletta", "Muller"], ["Dalila", "Said"], ["Meriem", "Turki"], ["Irem", "Soylu"], ["Adriana", "Senkarova"], ["Gabriel", "Karatantcheva"], ["Ayumi", "Koshiishi"], ["Kathleen", "Kanev"], ["Yashu", "Yang"], ["Lizi", "Morgoshia"], ["Valentina", "Cvackova"], ["Natalie", "Slezakova"], ["Therese", "Ekdahl"], ["Yuxin", "Zhang"], ["Emily", "Welker"], ["Emmanouela", "Antonakis"], ["Leonarda", "Horvat"], ["Anda", "Karanusic"], ["Sabhyata", "Nihalani"], ["Varvara", "Gracheva"], ["Bianca", "Bevione"], ["Yasmine", "Bengebara"], ["Kristina", "Novak"], ["Ana", "Fernandez Villa"], ["Hei Ching Claudia", "Ng"], ["Caitlin", "Ward"], ["Bhavya", "Ramineni"], ["Renata", "Lombera"], ["Nicole", "Mossmer"], ["Elizaveta", "Zaritscaya"], ["Franziska", "Sziedat"], ["Tatiana", "Makarova"], ["Juliette", "Colard"], ["Taylor", "Johnson"], ["Benedetta", "Ivaldi"], ["Catherine", "Roche"], ["Ramona Eva", "Chivu"], ["Malkia", "Menguene"], ["Fadona Titalyana", "Kusumawati"], ["Kalliopi", "Gkouskou"], ["Hanna", "Tarlouskaya"], ["Daniela", "Vismane"], ["Eliz", "Maloney"], ["Lara", "Panfilov"], ["Rita Maria", "Bentes De Oliveira Pinto"], ["Mikaela", "Konstantinova"], ["Susan", "Salinas"], ["Nicole", "Knickerbocker"], ["Diana Maria", "Mihail"], ["Thea Sund", "Jacobsen"], ["Chelsea", "Kung"], ["Giulia", "Spicacci"], ["Danel", "Ashirova"], ["Cristina", "Torres Sanchez"], ["Gabriella", "Da Silva Fick"], ["Paula Andrea", "Coronado"], ["Chengyiyi", "Yuan"], ["Christina", "Berchtold"], ["Fidana", "Khalilzada"], ["Giulia", "La Rocca"], ["Simone", "Simas"], ["Sura", "Assadova"], ["Salma", "Ewing"], ["Katia Monserrat", "De La Garza Valdez"], ["Ana", "Stefanovic"], ["Suhana Sofia", "Mohd Adam Das"], ["Prarisa", "Rachdanone"], ["Arabella", "Koller"], ["Danai", "Petroula"], ["Kisa", "Yoshioka"], ["Julia", "Oczachowska"], ["Adela", "Joldic"], ["Ana", "Lantigua De La Nuez"], ["Eleonora", "Molinaro"], ["Alexandra", "Marina"], ["Giulia", "Carbonaro"], ["Elene", "Mchedlidze"], ["Carson", "Branstine"], ["Qianhui", "Tang"], ["Andreea", "Craciun"], ["Arielle", "Nealy"], ["Anastasia", "Iamachkine"], ["Mihaela Lorena", "Marculescu"], ["Anna", "Solovyeva"], ["Klaudia", "Fedosenkova"], ["Jessica", "Bruyns"], ["Itxaso", "Blanco Fernandez De Leceta"], ["Keyi", "Zhou"], ["Fiona", "Ganz"], ["Elizabet", "Hamaliy"], ["Lana", "Sipek"], ["Zorana", "Samardzic"], ["Francesca", "Jones"], ["Ivana", "Popovic"], ["Adele Diana", "Biba"], ["Olivia", "Sonnekus Williams"], ["Maria", "Oreshkina"], ["Barbara", "Quagliardi"], ["Shevita", "Aulana"], ["Wai Yiu", "Tsang"], ["Ilaria", "Sposetti"], ["Thitirat", "Kanaphuet"], ["Liubov", "Demidova"], ["Dina", "Chayka"], ["Tamara", "Malesevic"], ["Sofya", "Lansere"], ["Julia", "Vulpio"], ["Kanyalak", "Boonyarat"], ["Milica", "Vujovic"], ["En Shuo", "Liang"], ["Antonia", "Balzert"], ["Andrea Agostina", "Farulla Di Palma"], ["Karolina", "Berankova"], ["Adi", "Gavish"], ["Nasty", "Surkova"], ["Kanna", "Nishida"], ["Aurora", "Urso"], ["Abla", "El Kadri"], ["Zeynep", "Cakirer"], ["Manuela", "Hernandez"], ["Pamela", "Cohen"], ["Lisa", "Mays"], ["Maria", "SOLNYSHKINA"], ["Victoria", "Schnell Jacobsen"], ["Tiana", "Windbuchler"], ["Marcella", "Cruz"], ["Milana", "Semenova"], ["Alexandra", "Viktorovitch"], ["Diae", "El Jardi"], ["Paulina", "Engback"], ["Nicha", "Jitmanee"], ["Fran", "Booth"], ["Sara", "Yadav"], ["Ludovica", "Fusco"], ["Leonie", "Kung"], ["Victoria", "Mikhaylova"], ["Deeksha", "Manju Prasad"], ["Ania", "Hertel"], ["Aurora", "Zantedeschi"], ["Taisia", "Polyarush"], ["Stephanie", "Belovukovic"], ["Oleksandra", "Andrieieva"], ["Sofia", "Voll"], ["Chiara", "Fermi"], ["Viktoriia", "Dema"], ["Marily", "Canellopoulos"], ["Mila", "Saric"], ["Evangeline", "Du Toit"], ["Tuana", "Oz"], ["Yubarani", "Banerjee"], ["Syeda", "Gulras Begum"], ["Dagmar", "Zdrubecka"], ["Solomiya", "Rohovets"], ["Maria", "Fernandez Zaragoza"], ["Polina", "Goloputova"], ["Angel", "Macleod"], ["Joanne", "Zuger"], ["Akanksha A", "Bhan"], ["Lledo", "Tena Guzman"], ["Anhzelika", "Isaeva"], ["Elina", "Sharipova"], ["Alexandra Maria", "Staiculescu"], ["Lisa", "Piccinetti"], ["Kaja", "Juvan"], ["Celine", "Fritsch"], ["Lena", "Greiner"], ["Marianthi", "Tsesmetzi"], ["Emiliana", "Arango"], ["Tamara", "Barad Itzhaki"], ["Sarra", "Ata"], ["Shou Na", "Mu"], ["Alicia", "Alegre"], ["Marina", "Davtyan"], ["Shalimar", "Talbi"], ["Katherine", "Fleischman"], ["Brindtha", "Ramasamy"], ["Alice", "Viglianisi"], ["Anna", "TSELYKOVSKAYA"], ["Jennifer Rosa", "Dourado"], ["Jacquline", "Nylander Altelius"], ["Ryeong Gyeong", "Park"], ["Ekaterina", "Grib"], ["Simona", "Waltert"], ["Elisabeth", "Chantraine"], ["Sing Le", "Fan Chiang"], ["Svetlana", "Bubnova"], ["Dalayna", "Hewitt"], ["Mariya", "Ponomareva"], ["Ayumi", "Miyamoto"], ["Zejda", "Veljacic"], ["Nikolina", "Dzunov"], ["Maren", "Nordklev"], ["Sofya", "Treshcheva"], ["Anabel", "Aran Torrente"], ["Zhuoma", "Ni Ma"], ["Adrienn", "Horvath"], ["Alise", "Cernecka"], ["Priscilla", "Baron Zichar"], ["Xiaoxi", "Zhao"], ["Eleftheria", "Gkogkou"], ["Takalani", "Molaoa"], ["Alexandera", "Inozemtseva"], ["Ekaterina", "Ovcharenko"], ["Alycia", "Parks"], ["Oleksandra", "Balaba"], ["Andreea", "Velcea"], ["Irene", "Garceran"], ["Ebru Zeynep", "Yazgan"], ["Selin", "Ovunc"], ["Vitalia", "Stamat"], ["Lucianna", "Piedra"], ["Stephanie", "Bertschmann"], ["Chloe", "Cirotte"], ["Yasmeen", "Ghaoui"], ["Azaliya", "Badegyeva"], ["Saara", "Kunakunova"], ["Samantha", "Nanere"], ["Aleksandra", "Efremova"], ["Carmen Roxana", "Manu"], ["Vicky", "Van De Peer"], ["Maria Ignacia", "Yapur Lopez"], ["Nicole", "Khirin"], ["Timea", "Visontai"], ["Ares", "Teixido Garcia"], ["Maria Aran", "Teixido Garcia"], ["Evgeniya", "Burdina"], ["Emma Erin", "Kiernan"], ["Ellie", "Murphy"], ["Maayan", "Shtern"], ["Laetitia", "Pulchartova"], ["Manon", "Leonard"], ["Ines", "Benito"], ["Kseniya", "Yersh"], ["Oona", "Orpana"], ["Abigail", "Desiatnikov"], ["Zeynep", "Ay"], ["Gal", "Shemesh"], ["Martina", "Biagianti"], ["Olga", "Danilovic"], ["Rozalina", "Youseva"], ["Shir", "Bakshi"], ["Sarah", "Heckel"], ["Carmen", "Aizpurua Bernabe"], ["Adva", "Dabah"], ["Rebeca", "C Silva"], ["Alice", "Tubello"], ["Elena", "Milovanovic"], ["Angie Carolina", "Yepes Medina"], ["Christina", "Baer"], ["Heden", "Ly"], ["Nerea", "Guerra Santana"], ["Yuzuka", "Shimizu"], ["Anna", "Kubareva"], ["Daria", "Rakitskaya"], ["Sara", "Neves"], ["Raffaela", "Alhach"], ["Katherine", "Lyman"], ["Marta", "Gonzalez Ballbe"], ["Iariniaina", "Tsantaniony"], ["Yuki", "Naito"], ["Mariana", "Vargas Carrascal"], ["Catarina Castro", "Cerqueira"], ["Lavinia", "Lancellotti"], ["Lina", "Sachica"], ["Anja", "Draskovic"], ["Yaroslava", "Gadiatska"], ["Elisabeth", "Andryukhova"], ["Celine", "El Ghali"], ["Shani", "Dubinchik"], ["Carolina", "Cerowska"], ["Honami", "Sodeyama"], ["Victoria", "Allen"], ["Oleksandra", "Gorchanyuk"], ["Vivien", "Sandberg"], ["Hurricane Tyra", "Black"], ["Ayana", "Noguchi"], ["Marthina Diyani", "Schwencke"], ["Oumaima", "Aziz"], ["Zoe", "Hitt"], ["Gaini", "Ibrasheva"], ["Maria Florencia", "Urrutia"], ["Viktoria", "Morvayova"], ["Abigail", "Forbes"], ["Lynda", "Benkaddour"], ["Valeriya", "Olyanovskaya"], ["Nina", "Olyanovskaya"], ["Ting Pei", "Chang"], ["Sivan", "Raizman"], ["Andei", "Fukushige"], ["Elena", "Jamshidi"], ["Valentina Andrea", "Vasquez Pongruber"], ["Paula", "Joukanen"], ["Nesrine", "Troubia"], ["Ksenija", "Tmusic"], ["Caijsa Wilda", "Hennemann"], ["Valentina", "Gaggini"], ["Valentina", "Ryser"], ["Djihane", "Tefani"], ["Adrienn", "Nagy"], ["Clara", "Burel"], ["Avril", "Look"], ["Margaryta", "Bilokin"], ["Xiyu", "Wang"], ["Lizaveta", "Artsiomenka"], ["Iulia Bianca", "Ilinca"], ["Anastasia", "Potapova"], ["Andrea", "Cetkovic"], ["Amine", "Dik"], ["Rut", "Galindo"], ["Kristin", "Younes"], ["Marilyn", "Shekhter"], ["Taylor", "Dean"], ["Sabina", "Dadaciu"], ["Alexia", "Witthaus Vine"], ["Elena", "Di Battista"], ["Lina", "Shokry"], ["Luiza", "Fullana"], ["Sofia", "Epur"], ["Ya Hsin", "Lee"], ["Nazli Nader", "Redha"], ["Amina", "Lasheen"], ["Lulu", "Radovcic"], ["Nikol", "Dobrilova"], ["Nicole", "Bueno Sandoval"], ["Alice", "Amendola"], ["Alesya", "Yakubovich"], ["Azradeniz", "Comlek"], ["Ekin", "Ercetin"], ["Sada", "Nahimana"], ["Andjela", "Skrobonja"], ["Natalia", "Roca Ward"], ["Giorgia", "Di Muzio"], ["Hyeran", "Yun"], ["Aleksandra", "Pitak"], ["Liisa", "Vehvilainen"], ["Sherry", "Sherry Ayad Abd Elmalek Wassef"], ["Yi Tsen", "Cho"], ["Maria", "Pages Mere"], ["Riva", "Hondiashvili"], ["Anita", "Hutellier"], ["Tamara", "Cherkassova"], ["Reka", "Zadori"], ["Valentina", "Del Marco"], ["Jillian", "Taggart"], ["Camille", "Kirket"], ["Yasmine", "Mansouri"], ["Kristin", "Yordanova"], ["Anna", "Novikova"], ["Emma", "Navarro"], ["Elizabeth", "Mandlik"], ["Noor", "Omara"], ["Anamaria", "Kiszner Luca"], ["Buket", "Dogan"], ["Nicole Marlene", "Sanjon"], ["Rachida", "Berjane"], ["Laia", "Conde Monfort"], ["Karolina", "Kubanova"], ["Loudmilla", "Bencheikh"], ["Anne", "Knuettel"], ["Iga", "Swiatek"], ["Alexandra", "Vagramov"], ["Manar", "Charrouf"], ["Ana", "Shanidze"], ["Anastasiya", "Zaharova"], ["Anna", "Laguza"], ["Iveta", "Daujotaite"], ["Ruxandra", "Schech"], ["Martyna", "Habrych"], ["Kristina", "Milenkovic"], ["Salma", "Abdelbaset"], ["Mariia", "Bergen"], ["Ferdaous", "Bahri"], ["Shauna", "Heffernan"], ["Zoe", "Bourbotte"], ["Emma", "Nurgazieva"], ["Xinyu", "Cai"], ["Zeynep", "Erman"], ["Sara", "El Ghazouly"], ["Isabel", "Adrover Gallego"], ["Antonia", "Schmidt"], ["Feriel", "Mahbouli"], ["Burcak", "Ekin Yildiztekin"], ["Mahak", "Jain"], ["Oana Smaranda", "Corneanu"], ["Benedetta", "Prato"], ["Adelina", "Doguzova"], ["Funa", "Kozaki"], ["Anand Dharana", "Mudaliar"], ["Sophia", "Edwards"], ["Anna", "Siskova"], ["Katarina", "Trickovic"], ["Myriam", "Gheziel"], ["Camila Magali", "Romero"], ["Isabella", "Harvison"], ["Stefania", "Rogozinska Dzik"], ["Alexia", "Alvarez Gerochristodoulou"], ["Arina", "Solomatina"], ["Elizaveta", "Koklina"], ["Melody", "Todorova"], ["Vlada", "Koval"], ["Kexuan", "Zhou"], ["Elizabeth", "Scotty"], ["Lana", "Stefanovic"], ["Giuliana", "Liga"], ["Maram Mohamed", "Sharif"], ["Nikola", "Breckova"], ["Zoziya", "Kardava"], ["Katarina Duic", "Plumtree"], ["Eliza", "Eglit"], ["Joanna", "Garland"], ["Ksenia", "Domnina"], ["Alexandra Diana", "Braga"], ["Dorra", "Roumani"], ["Sophia", "Kermet"], ["Angela", "Diez Plagaro"], ["Nadja", "Bay Christians"], ["Nesrine", "Korso Feciane"], ["Lauren", "Cooper"], ["Aisha", "Kukushkina"], ["Alexandra", "Anttila"], ["Mariami", "Akhalaia"], ["Mana", "Kawamura"], ["Aida", "Garcia Mendez"], ["Tanysha", "Dissanayake"], ["Laura", "Ashley"], ["Anika", "Yarlagadda"], ["Caroline", "Furlaneto"], ["Mylene", "Halemai"], ["Moyuka", "Uchijima"], ["Gemma", "Heath"], ["Andreea Elena", "Iordachi"], ["Milana", "Maslenkova"], ["Zeynep Naz", "Ozturk"], ["Nicolle Andrea", "Gomez Romero"], ["Anna", "Baranovski"], ["Sai Dedeepya", "Yeddula"], ["Carolina", "Velazquez"], ["Alisa", "Yakimakho"], ["Diana", "Khodan"], ["Layne", "Sleeth"], ["Thasaporn", "Naklo"], ["Yasmina", "Karimjanova"], ["Leana", "Atlan"], ["Laure Line", "Glaude"], ["Fanni", "Gecsek"], ["Natthapat", "Piwbangruk"], ["Kamilla", "Rakhimova"], ["Ana Luiza", "Cruz"], ["Chloe", "Beck"], ["Amanda", "Anisimova"], ["Vladlena", "Samenkova"], ["Lara", "Biter"], ["Alexa", "Ryngler"], ["Koral", "Koldobski"], ["Najah", "Dawson"], ["Milica", "Bojic"], ["Alessia Beatrice", "Ciuca"], ["Alexandra", "Ferreira Da Silva"], ["Vlada", "Zvereva"], ["Nikol", "Docheva"], ["Barbara", "Dessolis"], ["Lucia", "Garrigues Melendez"], ["Xin Yu", "Wang"], ["Sanyukta", "Gawande"], ["Lilly Elida", "Haseth"], ["Jesse", "Hollins"], ["Valerie", "Litzell"], ["Peyton", "Stearns"], ["Anastasiya", "Belogrivceva"], ["Maja", "Makoric"], ["Lorena", "Alves Castellanos"], ["Maja", "Chwalinska"], ["Ivana", "Loncar Antic"], ["Shale", "Bouchard"], ["Mey", "Ayari"], ["Yekaterina", "Dmitrichenko"], ["Dana", "Ferreyra"], ["Assel", "Tuzelbekova"], ["Pilar", "Astigarraga Harper"], ["Nikki", "Redelijk"], ["Polina", "Lushnikova"], ["Laura", "Masic"], ["Nour", "Damergi"], ["Dolavee", "Tumthong"], ["Cristina", "Mayorova Bakhtina"], ["Havana", "Dauncey"], ["Daniella", "Medvedeva"], ["Ingrid Carolina", "Millan"], ["Ilay", "Yoruk"], ["Nuria", "Garrido Femenias"], ["Mariam", "Dalakishvili"], ["Anastasiya", "Poplavska"], ["Sarah", "Mar"], ["Isabella", "Bozicevic"], ["Mumtoza", "Mamadaliyeva"], ["Gozde", "Turhan"], ["Zoi", "Meers"], ["Caty", "Mcnally"], ["Selina", "Atay"], ["Jazmin", "Ortenzi"], ["Mihaela", "Djakovic"], ["Alessia", "Tagliente"], ["Jiangxue", "Han"], ["Adithya", "Karunaratne"], ["Xue", "Cao"], ["Valeriya", "Rozenkova"], ["Mariam Ashraf", "Mohamed Mostafa"], ["Imani", "Graham"], ["Maria Camila", "Osorio Serrano"], ["Jasmin", "Bruni"], ["Saara", "Orav"], ["Katie", "Volynets"], ["Anna", "Kalabukhova"], ["Tuana", "Tinaztepe"], ["Alexandra", "Vecic"], ["Ran", "Miyachi"], ["Angelina", "Melki"], ["Sevil", "Yuldasheva"], ["Alexandra", "Silna"], ["Shavit", "Kimchi"], ["Eva", "Lys"], ["Giulia", "Morlet"], ["Zeynep  Sena", "Sarioglan"], ["Nina", "Nikprelevic"], ["Anastasia", "Zakharova"], ["Lotta", "Heiskanen"], ["Fabiana", "Marmiroli"], ["Sumin", "Kim"], ["Matilde", "Mariani"], ["Judith", "Perello Saavedra"], ["Dayeon", "Back"], ["Kristyna", "Lavickova"], ["Ange Oby", "Kajuru"], ["Caterina", "Greco"], ["Luisa", "Meyer Auf Der Heide"], ["Maria Ines", "Fonte"], ["Manni", "Zhang"], ["Sara", "Ziodato"], ["Gaia", "Morganti"], ["Jana", "Knaab"], ["Elisa Andrea", "Camerano"], ["Chloe", "Compson"], ["Odul", "Okur"], ["Ludmila", "Kareisova"], ["Ana Maria", "Gonzalez Ruiz"], ["Ana Maria", "Zamfir"], ["Andrea", "Sauco Roque"], ["Valentina", "Shleyn"], ["Carol", "Plakk"], ["Lina", "Sfar"], ["Peppi", "Ramstedt"], ["Tara", "Gancev"], ["Anna", "Zhang"], ["Maria", "Petrovic"], ["Emilie", "Elde"], ["Renon", "Mano"], ["Katriin", "Saar"], ["Hong Yi Cody", "Wong"], ["Irawan", "Deewajee"], ["Maelys", "Bougrat"], ["Lorena Maria", "Danaila"], ["Daniela", "Schekaiban"], ["Jessica", "Plazas"], ["Ella", "Haavisto"], ["Supapitch", "Kuearum"], ["Isabella", "Nunez"], ["Anda", "Ghinga"], ["Marina", "Delgado Valero"], ["Himari", "Sato"], ["Monika", "Popovic"], ["Saki", "Imamura"], ["Whitney", "Osuigwe"], ["Helene", "Pellicano"], ["Miku", "Yamamoto"], ["Olivia", "Gadecki"], ["Zeynep", "Sonmez"], ["Ksenia", "Brich"], ["Wing Ka", "Lin"], ["Dakota", "Fordham"], ["Betina", "Tokac"], ["Chantal", "Sauvant"], ["Leila", "Koster"], ["Emma", "Eerola"], ["Carlota", "Martin Santana"], ["Megan", "Basson"], ["Naomi", "Cheong"], ["Lizette", "Reding"], ["Lauren", "Stein"], ["Momoko", "Nishio"], ["Hedda", "Gurholt"], ["Ana", "Geller"], ["Anastasia", "Petrova"], ["Mina", "Hodzic"], ["Fiona", "Arrese Mata"], ["Angela", "Juarez Blanco"], ["Muslima", "Akhunova"], ["Ariana", "Arseneault"], ["Angelina", "Wirges"], ["Berna", "Yahe"], ["Giulia", "Tedesco"], ["Jihane", "Megdiche"], ["Avelina", "Sayfetdinova"], ["Marta", "Kostyuk"], ["Sohyun", "Park"], ["Leonor", "Oliveira"], ["Mananchaya", "Sawangkaew"], ["Lola", "Marandel"], ["Emilia", "Salo"], ["Denisa", "Hindova"], ["Jovana", "Trickovic"], ["Lian", "Tran"], ["Federica", "Trevisan"], ["Marketa", "Panackova"], ["Zoe", "Kruger"], ["Mariana", "Zuluaga Robledo"], ["Lunda", "Kumhom"], ["Marta", "Cuevas Guerrero"], ["Nasiba", "Espolova"], ["Mai Napatt", "Nirundorn"], ["Elena", "Trencheva"], ["Miyuka", "Kimoto"], ["Diane", "Parry"], ["Leylah Annie", "Fernandez"], ["Alexa", "Noel"], ["Romana", "Cisovska"], ["Dami", "Edibson Messiah"], ["Aunchisa", "Chanta"], ["Elina", "Avanesyan"], ["Doga", "Turkmen"], ["Sophie", "Abrams"], ["Viktoriya", "Kanapatskaya"], ["Lisa", "Kung"], ["Natcharee", "Teerachodjiranon"], ["Salma", "Djoubri"], ["Nelly", "Mezan"], ["Beyda", "Baykal"], ["Rebeka", "Kern"], ["Hania", "Abouelsaad"], ["Punnin", "Kovapitukted"], ["Milana", "Zhabrailova"], ["Jimin", "Kwon"], ["Ryoko", "Ikeda"], ["Paulina Ailin", "Sainz"], ["Yuna", "Saito"], ["Yeon Woo", "Ku"], ["Sapfo", "Sakellaridi"], ["Alice", "Gubertini"], ["Noa", "Krznaric"], ["Sheena Jade", "Masuda Karrasch"], ["Maddalena", "Giordano"], ["Fernanda", "Castillo Huerta"], ["Dorothy", "Whitely"], ["Kay", "Williams"], ["Eva", "De Jong"], ["Valerie", "Caulley"], ["L", "Griffiths"], ["Sandra", "Hole"], ["Beryl", "Jenkins"], ["Loris", "Butterfield"], ["Geri", "Shepard"], ["Marilyn", "Tesch"], ["Helen", "Sheedy"], ["S", "Washbourne"], ["S", "Stephen"], ["Lexie", "Kenny"], ["Lynette", "Mansfield"], ["Janine", "Whyte"], ["Helen", "Oconnor"], ["Joan", "Johnson"], ["Patricia", "Edwards"], ["Heather", "Mckechnie"], ["Ann", "Jenkins"], ["Caroline", "Cooper"], ["Kaye", "Dening"], ["Kerry", "Wilkinson"], ["Alison", "Mckenzie"], ["Sue", "Hastings"], ["Margaret", "Starr"], ["E", "Staples"], ["Yveline", "Boy"], ["Janine", "Murdoch"], ["D", "Brennan"], ["Frances", "Luff"], ["Helen", "Kayser"], ["H", "Rush"], ["Caroline", "Langsford"], ["Sally", "Irvine"], ["Sharon", "Thomson"], ["Teresa", "Van Haren"], ["Sandra", "Walsham"], ["Judy", "Harris"], ["L", "Cameron"], ["Cheryl", "Norquay"], ["Mandy", "Morgan"], ["Norma", "Eastburn"], ["Susan", "Alexander"], ["Janet", "Fallis"], ["Helen", "Taylor"], ["Anne", "Coleman"], ["Kati", "Athorne"], ["Diane", "James"], ["Robyn", "Knobel"], ["Patricia", "Billing"], ["Brenda", "Dart"], ["Maureen", "Pratt"], ["Patricia", "King"], ["Kathy", "Walker"], ["Helen", "Young"], ["Moira", "Whitely"], ["Leslie", "Walker"], ["Marion", "Proisy"], ["Joan", "Walker"], ["Helen", "Crozier"], ["Isabelle", "Larsson"], ["Frances", "Candy"], ["Jd", "Griffiths"], ["Anneloes", "Schothurst"], ["Sally", "Arnott"], ["Gail", "Williams"], ["Miki", "Yokobori"], ["Chris", "Cerato"], ["Vivicca", "Andersson"], ["Gwen", "Stirton"], ["Ai", "Iida"], ["Lois", "Raymond"], ["Julie", "Staines"], ["Cheree", "Walker"], ["Kerry", "Neill"], ["Merrilyn", "Robinson"], ["Julie", "Hanrahan"], ["Karen", "Gulley"], ["Pamela", "Bailey"], ["Michelle", "Pekovitch"], ["Sharon", "Pinchbeck"], ["Jitka", "Volavkova"], ["Paola", "Palacios"], ["Anne Marie", "Studer"], ["Kora", "Schediwy"], ["Marion", "Cristiani"], ["Aline", "Nenot"], ["Gillian", "Dove"], ["Ann", "Phillips Moore"], ["Nicole", "Niox Chateau"], ["Eugenia", "Isopaitis"], ["Ilse", "Buding"], ["Chantal", "Langanay"], ["Janine", "Mauroy Toffier"], ["Michelle", "Rodriguez"], ["Dionissia", "Asteri"], ["Francesca", "Gordigiani"], ["Margarita", "Zuleta"], ["Erzsebet", "Polgar"], ["Yaeko", "Matsuda"], ["Tiiu", "Kivi"], ["Sharon", "Van Brandis"], ["Becky", "Vest"], ["Joan", "Koudelka"], ["Aleksandra", "Ivanova"], ["Marina", "Chuvirina"], ["Carmen", "Ibarra"], ["Alison", "Mcmillan"], ["Sylvie", "Rual"], ["Mimi", "Wheeler"], ["Pixie", "Lamm"], ["Margaret", "Lee"], ["Pauline", "Roberts"], ["Wendy", "Hall"], ["Victoria", "Rogers"], ["Maria Teresa", "Riedl"], ["Marion", "Boundy"], ["Susan", "Northen"], ["Anita", "Van Deventer"], ["Chikako", "Murakami"], ["Lisa", "Fleming"], ["Elena", "Granaturova"], ["Martina", "Walsh"], ["Elizabeth", "Gordon"], ["Shawna", "Martin"], ["Vija", "Vuskalns"], ["Farel", "Footman"], ["Peggy", "Moore"], ["Tish", "Adams"], ["Jade", "Schiffman"], ["Carole", "Herrick"], ["Emilie", "Fisher"], ["Diane", "Matzner"], ["Mary", "Lowdon"], ["Ann", "Moore"], ["Tina", "Lyman"], ["Maricaye", "Christenson"], ["Raymonde", "Jones"], ["Carol", "Hunter"], ["Carol", "Aucamp"], ["Emilie", "Burrer"], ["Pam", "Farmer"], ["Shari", "Barman"], ["Marcy", "Okeefe"], ["Sally", "Moore"], ["Lucy", "Gordon"], ["Xenia", "Anastasiados"], ["Judith", "Mercade"], ["Ana", "Aubone"], ["Iris", "Thompson"], ["Ingrid", "Jonge"], ["Nancy", "Harris"], ["Maria", "Muntanola"], ["Birthe", "Glatzel"], ["Rosemary", "Eden"], ["Patricia", "Gomez"], ["Laura", "Giussani"], ["Kathy", "Barton"], ["Kathleen", "Carey"], ["Keiko", "Morimoto"], ["Suzie", "Holm"], ["Lili", "Bell"], ["Susana", "Rojas"], ["Jane", "Holdren"], ["Darlene", "Williamson"], ["Janthe", "Cunningham"], ["Sherry", "Hull"], ["Edie", "Carell"], ["Robin", "Boss"], ["Annalisa", "Pesce"], ["Clare", "Schmoyer"], ["Marsha", "Bladel"], ["Karen", "Denman"], ["Stephanie", "Hales"], ["Glynis", "Oconnor"], ["Allegra", "Cesare"], ["Kuniyo", "Tsukamoto"], ["Natalya", "Borodina"], ["Yoko", "Mitsuko"], ["Rie", "Nakazaka"], ["Barbara", "Hambridge"], ["Maree", "Booth"], ["Susan", "Kreymborg"], ["Helen", "Middleton"], ["Helen", "Luscombe"], ["Jenny", "Combs"], ["Jackie", "Monsour"], ["Jackie", "Pinto"], ["G", "Wilson"], ["Julie", "Peters"], ["Kathy", "Mantle"], ["Kerrie", "Byrne"], ["Gwen", "Warnock"], ["Petra", "Tesarova"], ["Alison", "De Vries"], ["Gina", "Fogarty"], ["Jennifer", "Fenwick"], ["J", "Tobin"], ["Miyoko", "Sugawara"], ["Diane", "Eastburn"], ["Donna", "Kelly"], ["Sue", "Chancellor"], ["Amanda", "Pryor"], ["Rosalyn", "Mccann"], ["Eri", "Murata"], ["M", "Berta"], ["V", "Von Demleaux"], ["S", "Matthews"], ["C", "Crawford"], ["K", "Leslie"], ["Wendy", "Pearson"], ["J", "Carey"], ["Helen", "Rice"], ["Evelyn", "Lim"], ["M", "Earl"], ["C", "Mcquaide"], ["S", "Middleton"], ["G", "Thacker"], ["G", "Ayre"], ["Michele", "Mizen"], ["Stephanie", "Bardsley"], ["Jacqueline", "Berson"], ["Marie Christine", "Brochard"], ["Kumarani", "Ranga Rao"], ["T", "Novaco"], ["Maria", "Hollingsworth"], ["Christiane", "Sarrazin"], ["J", "Turner"], ["Chantal", "Puget"], ["Susanne", "Korpas"], ["Andrea", "Menezes"], ["J", "Ray"], ["Huguette", "Barat"], ["D", "Jainer"], ["K", "Bluhm"], ["Martine", "Le Rays"], ["B", "Dalzell"], ["J", "James"], ["R", "Witeker"], ["L", "Rios De Almeida"], ["Meiko", "Miyashita"], ["Patricia", "Rime"], ["Elisabeth", "Du Fresne Girard"], ["Catherine", "De Lorme"], ["Cristina", "Ribeiro Britto"], ["Martine", "Cazaux"], ["N", "Marman"], ["Soraya", "Guellas"], ["Saadia", "Mezdel"], ["E", "Kogl"], ["Satoyo", "Funaki"], ["F", "Dawson"], ["Natalie", "Scaramanga"], ["Agnes", "Figueras"], ["Elizabeth", "Dinopoulos"], ["Dominique", "Oustric"], ["Carla", "Mei"], ["Catherine", "Chevalier"], ["A", "Belladonna"], ["D", "Maccloskey"], ["Helen", "Liebenberg"], ["Martine", "Jodin"], ["Pascale", "Bonneteau"], ["", "Marine"], ["Catherine", "Alzate"], ["Ayi", "Sutarno"], ["Cecilia", "Barbat"], ["M", "Mesek"], ["Wendy", "Maccloskey"], ["Diana", "Flickier"], ["Marion", "Foldina"], ["Anne Marie", "Casado"], ["Anne", "Fritz"], ["Jeske", "Van Erven"], ["Sabine", "Mueller"], ["Kim", "Seddon"], ["Ellen", "Walliser"], ["Maria", "Mendez"], ["Ann", "Garbay"], ["Carole", "Luccarelli"], ["Lorrayne", "Gracie"], ["Susan", "Leach"], ["Tonia", "Bayley"], ["A", "Schroeder"], ["Maria", "Fernandez"], ["Karen", "Kennington"], ["Karen", "Dawson"], ["Jenny", "Gardiner"], ["Lisa", "Kearney"], ["Kathy", "Mueller"], ["Pascale", "Bernateau"], ["Judith", "Principe"], ["Becky", "Bell"], ["Connie", "Yowell"], ["Lori", "Miller"], ["Lisa", "Bublitz"], ["Suzanne", "Jarell"], ["Merrilee", "Keller"], ["Hee Jeong", "Baek"], ["Chris", "Gillis"], ["Karen", "Frawley"], ["Xiaojing", "Lu"], ["Natalia", "Vizhunova"], ["Florinda", "Videa"], ["Solma", "Norovz Najeri"], ["Joelie", "Brousseaud"], ["Geraldine", "Rimes"], ["Charlotte", "Sikorra"], ["Joy", "Rodrigues"], ["Maria Carmen", "Gaso"], ["Gabriela", "Delgado"], ["D", "ESPINAL"], ["Y", "FARID"], ["S", "BACCAR"], ["Veronica", "Osogo Nabwire"], ["Gladys", "Imperial"], ["Marisa", "Sanchez"], ["Stefania", "Sernaglia"], ["Paula", "Alvarez"], ["Cleopatra", "Lopez"], ["Monika", "Hassmann"], ["Jacqueline", "Morales"], ["Alice", "Alexandri"], ["Silvia", "Gubler"], ["Norma", "Baylon"], ["Lea", "Degen"], ["Eleanor", "Mcfadden"], ["Klara", "Bardoczy"], ["Sonja", "Fetz"], ["Xantippe", "Vassiliadou"], ["Ping Sr", "Wang"], ["Parvin", "Afshar"], ["Sadigheh", "Akbari"], ["Elza", "Bellens"], ["Ulla", "Pontoppidan"], ["Alice", "Wavre"], ["Janine", "Bourgnon"], ["Rosario", "Briones"], ["Liu Shang", "Ku"], ["Antonia", "Prado"], ["Maureen", "Schwartz"], ["Marketa", "Prochova"], ["Nenni", "Delmestre"], ["Narayanee", "Gopal"], ["Deepika", "Krishnappa"], ["Praveeni", "Srinivasan"], ["Simona", "Borisova"], ["Corin", "De Waal"], ["Eva", "Kolarovska"], ["Loveth", "Donatus"], ["Nina", "Kolar"], ["Aanu", "Ayegbusi"], ["Christie", "Nwankwo"], ["Fabienne", "Schmidt"], ["Delisha", "Guttikonda"], ["Haley", "Giavara"], ["Claudia Cecilia", "Rosas Garcia"], ["Jenna", "Friedel"], ["Hoda", "Habib"], ["Paulina", "Bakaite"], ["Karolina", "Kowall"], ["Maia", "Sosa"], ["Haina", "Franco"], ["G", "NILAND"], ["M", "POOS"], ["Analisa", "Miro"], ["Van", "Nguyen Ai Ngoc"], ["Kaoru", "Okamoto"], ["Helen", "Fraser"], ["Robin", "Lesh"], ["S", "Goot"], ["Jennifer", "Nelson"], ["Sei Rei", "Cho"], ["Robyn", "Davis"], ["Christine", "King"], ["Barbara", "Murphy"], ["Sharon", "Oconnor"], ["J", "Lin"], ["Pamela", "Southcombe"], ["Bernadette", "Heavey"], ["Patricia", "Ahern"], ["Michelle", "Arnott"], ["Jennifer", "Glynn"], ["Mary", "Liddle"], ["Judy", "Forbes"], ["Cheryl", "Germaine"], ["Suzanne", "Lundgren"], ["Jenny", "Burrows"], ["Wendy", "Moore"], ["Beatrice", "Abbas"], ["Maud", "Galtier"], ["Dominique", "Burel"], ["Eleanora", "Dumitrescu"], ["Ekaterina", "Rosianu"], ["Jean", "Knight"], ["Valerie", "Forbes"], ["Barbara", "Walsh"], ["Wendy", "Slaughter"], ["Jan", "Morton"], ["Mary", "Mcanally"], ["Mary", "Johnson"], ["Claire", "Chapman"], ["", "Brown"], ["Barbara", "Lemberg"], ["Denise", "Taylor"], ["Revonne", "Du Toit"], ["Rayleen", "Henningson"], ["Leanne", "Palmisano"], ["Maureen", "Rankine"], ["Hiroko", "Sato"], ["Meg", "Boyle"], ["B", "Rupp"], ["Tanya", "Kovachka"], ["Wendy", "Pattenden"], ["Nancy", "Killingsworth"], ["Keiko", "Hayashi"], ["Stephanie", "Meier"], ["Karen", "Hueffman"], ["", "Mckinney"], ["Ann", "Gorneva Krulevitz"], ["", "Munsell"], ["Michaela", "Masur"], ["Jill", "Patterson"], ["Sheila", "Ohlsson"], ["Aura", "Gheorge"], ["Barbel", "Wohlfahrt"], ["Jennifer", "Rothschild"], ["Akiko", "Ueda"], ["Ellen", "Drieberger"], ["Lynn", "Rolley"], ["I", "Norman"], ["Alexandra", "Boutellier"], ["", "Raimo"], ["Aschara", "Moranon"], ["", "Yoivera"], ["G", "Read"], ["Kiki", "Reuter"], ["Cathy", "Canuti"], ["", "Stafford"], ["Emmy", "Ho"], ["", "Gratton"], ["Claudette", "Laliberte"], ["Daniela", "Russino"], ["Marine", "Jacquet"], ["Ting", "Wang"], ["Lisa", "Barg"], ["Chisa", "Packard"], ["Lindsay", "Lee"], ["Virginia", "Brown"], ["Anne Sophie", "Bruner"], ["Anje", "Lauber"], ["M", "Mcgrath"], ["Christine", "Moroe"], ["Kyung Yee", "Chang"], ["Noemi", "Minzberg"], ["Skywalkie", "Raimrova"], ["Marta", "Rozas"], ["Monica", "Jimenez"], ["Nowlenn", "Peltier"], ["Anne", "Walrick"], ["Makiko", "Inekaku"], ["Grace", "Summerside"], ["Elena", "Ravnlanska"], ["Katja", "Nossik"], ["Dina", "Jovanovic"], ["Robertina", "Marcu"], ["Inna", "Brioukhovets"], ["Machiko", "Fujiwara"], ["Cindy", "Hill"], ["Yanet", "Yanez"], ["Melanie", "Tu"], ["Keri", "Preng"], ["Katherine", "Zordani"], ["Marina", "Komatsu"], ["Yasmeen", "Parviz"], ["Anastasia", "Sukhotina"], ["Hei Ching Claudia", "Ng"], ["Nina", "Knez"], ["Katsiaryna", "Skachkova"], ["Natasha", "Subhash"], ["Addison", "Brown"], ["Safiya", "Carrington"], ["Alisia Stephanie", "Manolescu"], ["Venia", "Yeung"], ["Andrea", "Gerhardt"], ["Dionissia", "Kotsia"], ["Lise", "Hahn Evers"], ["Lena", "Dvornik"], ["Carmencita", "De La Rosa"], ["Margaret", "Burns"], ["Mary", "Marechal"], ["Deanne", "Bell"], ["Meenal", "Maharwal"], ["Farah", "Khalil"], ["Anastasiia", "Chesnokova"], ["Lidya", "Yargovan"], ["Isabella", "Caballero"], ["Paola", "Cortez Vargas"], ["Liria", "Loria Pereyra"], ["Daria", "Lukyanova"], ["Shufaa Changawa", "Ruwa"], ["Katarina", "Karanja"], ["Paige Wanjiku", "Mbugua"], ["Polina", "Smolskaya"], ["Idoia", "Huerta Gallardo"], ["Paulina", "Mecho Hernandez"], ["Shani", "Gatterer"], ["Oluchukwu Jennifer", "Ibeto"], ["Nour", "Dib"], ["Viktoriya", "Petrenko"], ["Daria", "Nazarkina"], ["Anastasiya", "Khrustaleva"], ["Yasmine", "Khiri"], ["Ghita", "Courdi"], ["Hind", "Semlali"], ["Michele", "Zmau"]], "trigger_words": ["First Name", "Last Name"], "Prediction": "first_name || ' ' || last_name AS full_name\nFROM players\nORDER BY birth_date;"}
{"db_id": "wta_1", "query": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "players", "WHERE", "hand", "=", "'L", "'", "ORDER", "BY", "birth_date"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "players", "where", "hand", "=", "value", "order", "by", "birth_date"], "question": "List the first and last name of all players who are left / L hand in the order of birth date.", "question_toks": ["List", "the", "first", "and", "last", "name", "of", "all", "players", "who", "are", "left", "/", "L", "hand", "in", "the", "order", "of", "birth", "date", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"L\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "457", "answer_text": [["Ann", "Jones"], ["Wendy", "Gilchrist"], ["Martina", "Navratilova"], ["Mary", "Carillo"], ["Katerina", "Bohmova"], ["Petra", "Delhees Jauch"], ["Nancy", "Loeffler Caro"], ["Lise", "Gregory"], ["Rene", "Collins"], ["Nicole", "Arendt"], ["Florencia", "Labat"], ["Sabine", "Appelmans"], ["Andreea", "Ehritt Vanc"], ["Monica", "Seles"], ["Gala", "Leon Garcia"], ["Karen", "Cross"], ["Julie", "Pullin"], ["Vanessa", "Webb"], ["Elena", "Tatarkova"], ["Anca", "Barna"], ["Francesca", "Lubiani"], ["Gaelle", "Widmer"], ["Amanda", "Keen"], ["Amanda", "Augustus"], ["Rita", "Kuti Kis"], ["Amelie", "Cocheteux"], ["Amelie", "Castera"], ["Saori", "Obata"], ["Marine", "Nizri Spiegel"], ["Patty", "Schnyder"], ["Julie", "Ditty"], ["Joana", "Cortez"], ["Barbara", "Schwartz"], ["Ludmilla", "Varmuza"], ["Magui", "Serna"], ["Amanda", "Grahame"], ["Kim", "Kilsdonk"], ["Emilie", "Loit"], ["Erika", "Pineider"], ["Anne Gaelle", "Sidot"], ["Erica", "Biro"], ["Stephanie", "Kovacic"], ["Sybille", "Bammer"], ["Lisa", "Fritz"], ["Maja", "Matevzic"], ["Leanne", "Baker"], ["Aurelie", "Vedy"], ["Carla", "Tiene"], ["Erika", "Venere"], ["Jelena", "Kostanic Tosic"], ["Clarisa", "Fernandez"], ["Ansley", "Cargill"], ["Dimana", "Krastevitch"], ["Maria Jose", "Martinez Sanchez"], ["Zerene", "Reyes"], ["Melinda", "Czink"], ["Sandra", "Klemenschits"], ["Maria Elizabeth", "Lopez"], ["Salome", "Llaguno"], ["Lindsay", "Cox"], ["Iveta", "Benesova"], ["Eugenia", "Chialvo"], ["Chun Yan", "He"], ["Maria Fernanda", "Alves"], ["Emily", "Quin"], ["Fernanda", "Oliveira Da Silva"], ["Annabel", "Blow"], ["Julia", "Smith"], ["Ana Lucia", "Migliarini De Leon"], ["Elizabeth", "Bondi"], ["Galina", "Fokina"], ["Elise", "Tamaela"], ["Bit Na", "Lee"], ["Sonia", "Iacovacci"], ["Mariana Pires", "Junqueira"], ["Natalia", "Bogdanova"], ["Irina", "Smirnova"], ["Meghha", "Vakaria"], ["Angela", "Haynes"], ["Karly", "Olson"], ["Casey", "Dellacqua"], ["Kathrin", "Hegel"], ["Beatrix", "Csordas"], ["Zsuzsanna", "Babos"], ["Emily", "Applegate"], ["Olga", "Pasichnichenko"], ["Theresa", "Logar"], ["Jin A", "Lee"], ["Hannah", "Kuervers"], ["Andreea", "Novaceanu"], ["Valentina", "Tizzano"], ["Helen", "Fritche"], ["Sandra", "Sasidharan"], ["Isha", "Lakhani"], ["Krushmi", "Chheda"], ["Ljubica", "Avramovic"], ["Avel Romaly", "Coronado"], ["Shadisha", "Robinson"], ["Carla", "Zabaleta"], ["Diana", "Arutyunova"], ["Cecile", "Baijot"], ["Laura", "Rocchi"], ["Rie", "Imai"], ["Danielle", "Harmsen"], ["Alejandra", "Obregon"], ["Ariela", "Perez"], ["Vasilisa", "Davydova"], ["Emilia", "Yorio"], ["Lizaan", "Du Plessis"], ["Claire", "Feuerstein"], ["Alexandria", "Liles"], ["Katharine", "Baker"], ["Emma", "Laine"], ["Geraldine", "Roma"], ["Aya", "El Akkad"], ["Alexandra", "Kazanova"], ["Allison", "Baker"], ["Lucy", "Fletcher"], ["Monika", "Musilova"], ["Jitka", "Gavdunova"], ["Elena", "Petrucciano"], ["Varvara", "Lepchenko"], ["Claire", "De Gubernatis"], ["Seheno", "Razafindramaso"], ["Karolina", "Soor"], ["Melisa", "Cabrera Handt"], ["Shraddha", "Lodha"], ["Sylvia", "Krywacz"], ["Amina", "El Sahn"], ["Hendrike Lea", "Heitmann"], ["Dunja", "Antunovic"], ["Micaela", "Acosta"], ["Katerina", "Bohmova"], ["Catherine", "Grotz"], ["Yurika", "Sema"], ["Sheng Nan", "Sun"], ["Lucie", "Safarova"], ["Jitka", "Kleisnerova"], ["Carolina", "Escamilla"], ["Tapiwa", "Marobela"], ["Punam", "Reddy"], ["Katia", "Sabate Orera"], ["Shana", "Claes"], ["Chrissie", "Seredni"], ["Yui", "Nagasawa"], ["Marcela", "Vojtiskova"], ["Seul Ki", "Chin"], ["Nina", "Munch Soegaard"], ["Hannah", "Grady"], ["Karen", "Castiblanco"], ["Angelique", "Kerber"], ["Lauren", "Lui"], ["Rana", "Tharwat Hafez"], ["Nicole", "Grunwald"], ["Ana", "Veselinovic"], ["Sanaa", "Bhambri"], ["Diana Andreea", "Gae"], ["Ana", "Beltran Trigueros"], ["Barbora", "Bozkova"], ["Camila", "Belassi"], ["Violette", "Huck"], ["Megumi", "Fukui"], ["Rita", "Gouveia"], ["Mihaela", "Buzarnescu"], ["Liset", "Brito Herrera"], ["Paulina", "Jorquera"], ["Ekaterina", "Makarova"], ["Dessislava", "Mladenova"], ["Sanaz", "Marand"], ["Cristina", "Greco Naccarato"], ["Cagla", "Urcu"], ["Liege", "Vieira"], ["Chang", "Xu"], ["Jessica", "Sweeting"], ["Yi Fan", "Xu"], ["Eloisa Maria", "Compostizo De Andres"], ["Karina", "Porushkevich"], ["Ornella", "Gentile"], ["Valeria", "Casillo"], ["Bianca Ioana", "Bonifate"], ["Michelle", "Russ"], ["Monika", "Lalewicz"], ["Amandine", "Cazeaux"], ["Fatima", "El Allami"], ["Simonetta", "Miori"], ["Gabriela", "Roux"], ["Sherazad", "Benamar"], ["Sherazad", "Reix"], ["Zora", "Vlckova"], ["Naomi", "Cavaday"], ["Nathalia", "Rossi"], ["Maria Eugenia", "Roca Recarey"], ["Lauren", "Jones"], ["Roxane", "Vaisemberg"], ["Ivana", "Belejova"], ["Petra", "Vogel"], ["Majdouline", "Akrate"], ["Laura", "Sadria"], ["Ia", "Jikia"], ["Alessandra", "Caprara"], ["Guadalupe", "Moreno"], ["Lucie", "Sipkova"], ["Xenia", "Samoilova"], ["Kotomi", "Takahata"], ["Stephanie", "Theiler"], ["Maria", "Prishlyak"], ["Grace", "Leake"], ["Ioana Alexandra", "Oprea"], ["Sanne", "Bakker"], ["Katerina", "Vankova"], ["Kristy", "Frilling"], ["Tatiana", "Bua"], ["Anastasia", "Kontratevidi"], ["Chane", "Hines"], ["Julia", "Gavenko"], ["Yuuki", "Tanaka"], ["Petra", "Kvitova"], ["Leticia", "Costas"], ["Sandra", "Roma"], ["Nina", "Mujezinovic"], ["Stella", "Papaspyrou"], ["Chinami", "Ogi"], ["Martina", "Balogova"], ["Xinyun", "Han"], ["Nicole", "Riner"], ["Lara", "Meccico"], ["Mai", "Iwasaki"], ["Oksana", "Kalashnikova"], ["Dipti", "Srivastava"], ["Claudia", "Mercado"], ["Margarita", "Lazareva"], ["Shaozhuo", "Liu"], ["Ana Maria", "Chavez Franco"], ["Arantxa", "Rus"], ["Ekaterina", "Kamendova"], ["Monika", "Tumova"], ["Gabriella", "Boboc"], ["Ganna", "Lukianchykova"], ["Sofia", "Medina"], ["Ekaterina", "Abaeva"], ["Andressa", "Garcia"], ["Giulia", "Bruzzone"], ["Catia", "Rodrigues"], ["Danielle", "Mills"], ["Flavia", "Borges"], ["Misaki", "Doi"], ["Veronika", "Domagala"], ["Cindy", "Chala"], ["Ksenia", "Pervak"], ["Bianca", "Botto"], ["Marianna", "Natali"], ["Carolina", "Orsi"], ["Aleksandra", "Vukadinovic"], ["Elixane", "Lechemia"], ["Sonya", "Dayal"], ["Francesca", "Campigotto"], ["Cristina Bianca", "Danaila"], ["Tereza", "Budilova"], ["Gemma", "Praditngam"], ["Ekaterine", "Gorgodze"], ["Dejana", "Raickovic"], ["Alena", "Gerasimova"], ["Quirine", "Lemoine"], ["Chieh Yu", "Hsu"], ["Anastasiya", "Vasylyeva"], ["Alexia", "Quartetto"], ["Joanna", "Bougon"], ["Kristyna", "Pliskova"], ["Elena", "Bogdan"], ["Fiorella", "Jerardino"], ["Julie", "Gonzalez Rodriguez"], ["Alejandra", "Barragan"], ["Renata", "Bakieva"], ["Ashley", "Krysiak"], ["Sarah Rebecca", "Sekulic"], ["Na Lae", "Han"], ["Natali", "Coronel"], ["Kristyna", "Hancarova"], ["Doroteja", "Eric"], ["Chanel", "Simmonds"], ["Kobkanok", "Upapong"], ["Annie", "Sullivan"], ["Jenny Thuy", "Le"], ["Xenia", "Knoll"], ["Francisca", "Matos"], ["Christina", "Madenoglou"], ["Alexandra", "Avirvarei"], ["Georgina", "Fedosenkova"], ["Alicia", "Doms Golobart"], ["Amy", "Hoburn"], ["Monica", "Turewicz"], ["Martina", "Zerbola"], ["Mashaal", "Hameed"], ["Sabrina", "Dos Reis"], ["Maria Sol", "Carrasco"], ["Ruxandra", "Ababii"], ["Daniella", "Patton"], ["Veronika", "Zavodska"], ["Briar", "Preston"], ["Gabriela", "Ce"], ["Amanda", "Rodgers"], ["Constanze", "Lotz"], ["Paula", "Mocete Talamantes"], ["Verena", "Gantschnig"], ["Ainhoa", "Atucha Gomez"], ["Katarzyna", "Kossowska"], ["Julia", "Stamatova"], ["Vorranavaporn", "Vorrarattanamongkol"], ["Michaela", "Jasenakova"], ["Agustina Sol", "Eskenazi"], ["Maja", "Mladenovic"], ["Sandra", "Garriga Catala"], ["Rita", "Vilaca"], ["Zanmarie", "Pienaar"], ["Julia", "Kimmelmann"], ["Martina", "Trevisan"], ["Charitomeni", "Matoula"], ["Andreea", "Istrate"], ["Sowjanya", "Bavisetti"], ["Gabrielle", "Moxey"], ["Viktoryia", "Kisialeva"], ["Sarahi", "Garcia Carrera"], ["Rachel", "Girard"], ["Laura", "Robson"], ["Kate", "Vialle"], ["Anna", "Montserrat Sanchez"], ["Elena Teodora", "Cadar"], ["Carol", "Augustine Benito"], ["Kamila", "Pavelkova"], ["Arantxa", "Sanchez"], ["Ana Sofia", "Sanchez"], ["Julia", "Wachaczyk"], ["Ecaterina", "Oproiu"], ["Snigdha", "Padamata"], ["Rona", "Berisha"], ["Olga", "Doroshina"], ["So Ra", "Lee"], ["Brandy", "Mina"], ["Natalie", "Novakova"], ["Storm", "Sanders"], ["Alexandra", "Martinez"], ["Ysaline", "Bonaventure"], ["Barbora", "Trestikova"], ["Stefania", "Hristov"], ["Ana Maria", "Crisan"], ["Elpida", "Papanelopoulou"], ["Tereza", "Jankovska"], ["Rebecca", "Andrade"], ["Kelly", "Williford"], ["Tina", "Rupert"], ["Mia Nicole", "Eklund"], ["Bernarda", "Pera"], ["Montserrat", "Alonso"], ["Rosalie", "Van Der Hoek"], ["Hedda", "Odegaard"], ["Samira", "Radjaa"], ["Zuzanna", "Maciejewska"], ["Saumya", "Vig"], ["Marie", "Benoit"], ["Iga", "Odrzywolek"], ["Shakhlo", "Saidova"], ["Irina", "Khromacheva"], ["Yuliya", "Lysa"], ["Sophie", "Blom"], ["Jennifer", "Zerbone"], ["Kristina", "Chasovskikh"], ["Maria Camila", "Trujillo Hoyos"], ["Karina", "Rovira"], ["Teodora Adina", "Ardeleanu"], ["Yasmine", "Rashad"], ["Judit", "Vives Joan"], ["Sarah Beth", "Askew"], ["Yasmine", "Xantos"], ["Lea", "Tholey"], ["Hikari", "Yamamoto"], ["Ines Miren", "De Pablo"], ["Stuti", "Singh Tomar"], ["Naomi", "Totka"], ["Polina", "Bezsmertnaya"], ["Hannah", "King"], ["Gabriele", "Bertasiute"], ["Rebecca", "Smaller"], ["Busra", "Kayrun"], ["Stephani", "Rodriguez"], ["Raquel", "Montalvo"], ["Oana", "Irimescu"], ["Taylor", "Townsend"], ["Carmen", "Blasco Robaina"], ["Giulia", "Della Cioppa"], ["Nadege", "Jorda"], ["Beatriz", "Haddad Maia"], ["Nelise", "Verster"], ["Eleonore", "Barrere"], ["Anastasia", "Prokopenko"], ["Dzina", "Milovanovic"], ["Isabelle", "Wallace"], ["Katelyn", "Jackson"], ["Polina", "Novoselova"], ["Maite", "Cano"], ["Ria", "Vaidya"], ["Ana Lorena", "Garcia Navas"], ["Aayushi", "Chouhan"], ["Ivona", "Cudina"], ["Karina", "Gurgenyan"], ["Maria", "Patrascu"], ["Denisa", "Chereches"], ["Mirabelle", "Njoze"], ["Vasanti", "Shinde"], ["Amanda", "Schneider"], ["Katharina", "Herpertz"], ["Tayisiya", "Morderger"], ["Tamara", "Tomic"], ["Maria Fernanda", "Herazo Gonzalez"], ["Andra Maria", "Nitescu"], ["Micheline", "Aubuchon"], ["Ilayda", "Yondem"], ["Birgit", "Burk"], ["Kanako", "Osafune"], ["Anastasiya", "Komardina"], ["Nina", "Holanova"], ["Jil Belen", "Teichmann"], ["Francesca", "Di Lorenzo"], ["Natsuho", "Arakawa"], ["Emerald", "Able"], ["Manca", "Pislak"], ["Irys", "Ekani"], ["Veronica", "Miroshnichenko"], ["Martina", "Capurro Taborda"], ["Mariam", "Bolkvadze"], ["Diana", "Valverde"], ["Do Hee", "Bae"], ["Daniela", "Morales Beckmann"], ["Ioana Diana", "Pietroiu"], ["Luisa Fernanda", "Echeverry Rodriguez"], ["Mayuka", "Aikawa"], ["Nicole", "Frenkel"], ["Daria", "Kruzhkova"], ["Alejandra", "Tamayo Gomez"], ["Tereza", "Koplova"], ["Chiara", "Lommer"], ["Laura", "Illanes"], ["Olga", "Fridman"], ["Ana Paula", "Leal"], ["Shiraz", "Bronstein"], ["Nicole", "Bunea"], ["Charlotte", "Robillard Millette"], ["Ashley", "Kratzer"], ["Momoka", "Chimura"], ["Anna", "Slovakova"], ["Ai Qi", "Chen"], ["Jiaying", "He"], ["Ysabel", "Gonzalez Rico"], ["Andreea", "Stanescu"], ["Marketa", "Vondrousova"], ["Ecaterina", "Ivasco"], ["Ivon", "Mihaleva"], ["Jasmine", "Boyd"], ["Andrea", "Arratia Fernandez"], ["Kayla", "Day"], ["Ekaterina", "Davletova"], ["Irina", "Cantos Siemers"], ["Oceane", "Mialon"], ["Watsachol", "Sawasdee"], ["Ellen", "Ashley"], ["Mila", "Mejic"], ["Natalia", "Nikolopoulou"], ["Marta", "Del Pino Maturano"], ["Jayci", "Goldsmith"], ["Yang", "Lee"], ["Isabella", "Tcherkes Zade"], ["Mara", "Vidal"], ["Taylor", "Johnson"], ["Julia", "Vulpio"], ["Dagmar", "Zdrubecka"], ["Olga", "Danilovic"], ["Xiyu", "Wang"], ["Lina", "Shokry"], ["Ya Hsin", "Lee"], ["Ruxandra", "Schech"], ["Yasmina", "Karimjanova"], ["Lara", "Biter"], ["Najah", "Dawson"], ["Giulia", "Morlet"], ["Matilde", "Mariani"], ["Isabella", "Nunez"], ["Betina", "Tokac"], ["Noa", "Krznaric"]], "trigger_words": ["First Name", "Last Name"], "Prediction": "first_name, last_name \nFROM players \nWHERE hand = 'L' \nORDER BY birth_date;"}
{"db_id": "wta_1", "query": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "players", "WHERE", "hand", "=", "'L", "'", "ORDER", "BY", "birth_date"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "players", "where", "hand", "=", "value", "order", "by", "birth_date"], "question": "What are the full names of all left handed players, in order of birth date?", "question_toks": ["What", "are", "the", "full", "names", "of", "all", "left", "handed", "players", ",", "in", "order", "of", "birth", "date", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"L\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "458", "answer_text": [["Ann", "Jones"], ["Wendy", "Gilchrist"], ["Martina", "Navratilova"], ["Mary", "Carillo"], ["Katerina", "Bohmova"], ["Petra", "Delhees Jauch"], ["Nancy", "Loeffler Caro"], ["Lise", "Gregory"], ["Rene", "Collins"], ["Nicole", "Arendt"], ["Florencia", "Labat"], ["Sabine", "Appelmans"], ["Andreea", "Ehritt Vanc"], ["Monica", "Seles"], ["Gala", "Leon Garcia"], ["Karen", "Cross"], ["Julie", "Pullin"], ["Vanessa", "Webb"], ["Elena", "Tatarkova"], ["Anca", "Barna"], ["Francesca", "Lubiani"], ["Gaelle", "Widmer"], ["Amanda", "Keen"], ["Amanda", "Augustus"], ["Rita", "Kuti Kis"], ["Amelie", "Cocheteux"], ["Amelie", "Castera"], ["Saori", "Obata"], ["Marine", "Nizri Spiegel"], ["Patty", "Schnyder"], ["Julie", "Ditty"], ["Joana", "Cortez"], ["Barbara", "Schwartz"], ["Ludmilla", "Varmuza"], ["Magui", "Serna"], ["Amanda", "Grahame"], ["Kim", "Kilsdonk"], ["Emilie", "Loit"], ["Erika", "Pineider"], ["Anne Gaelle", "Sidot"], ["Erica", "Biro"], ["Stephanie", "Kovacic"], ["Sybille", "Bammer"], ["Lisa", "Fritz"], ["Maja", "Matevzic"], ["Leanne", "Baker"], ["Aurelie", "Vedy"], ["Carla", "Tiene"], ["Erika", "Venere"], ["Jelena", "Kostanic Tosic"], ["Clarisa", "Fernandez"], ["Ansley", "Cargill"], ["Dimana", "Krastevitch"], ["Maria Jose", "Martinez Sanchez"], ["Zerene", "Reyes"], ["Melinda", "Czink"], ["Sandra", "Klemenschits"], ["Maria Elizabeth", "Lopez"], ["Salome", "Llaguno"], ["Lindsay", "Cox"], ["Iveta", "Benesova"], ["Eugenia", "Chialvo"], ["Chun Yan", "He"], ["Maria Fernanda", "Alves"], ["Emily", "Quin"], ["Fernanda", "Oliveira Da Silva"], ["Annabel", "Blow"], ["Julia", "Smith"], ["Ana Lucia", "Migliarini De Leon"], ["Elizabeth", "Bondi"], ["Galina", "Fokina"], ["Elise", "Tamaela"], ["Bit Na", "Lee"], ["Sonia", "Iacovacci"], ["Mariana Pires", "Junqueira"], ["Natalia", "Bogdanova"], ["Irina", "Smirnova"], ["Meghha", "Vakaria"], ["Angela", "Haynes"], ["Karly", "Olson"], ["Casey", "Dellacqua"], ["Kathrin", "Hegel"], ["Beatrix", "Csordas"], ["Zsuzsanna", "Babos"], ["Emily", "Applegate"], ["Olga", "Pasichnichenko"], ["Theresa", "Logar"], ["Jin A", "Lee"], ["Hannah", "Kuervers"], ["Andreea", "Novaceanu"], ["Valentina", "Tizzano"], ["Helen", "Fritche"], ["Sandra", "Sasidharan"], ["Isha", "Lakhani"], ["Krushmi", "Chheda"], ["Ljubica", "Avramovic"], ["Avel Romaly", "Coronado"], ["Shadisha", "Robinson"], ["Carla", "Zabaleta"], ["Diana", "Arutyunova"], ["Cecile", "Baijot"], ["Laura", "Rocchi"], ["Rie", "Imai"], ["Danielle", "Harmsen"], ["Alejandra", "Obregon"], ["Ariela", "Perez"], ["Vasilisa", "Davydova"], ["Emilia", "Yorio"], ["Lizaan", "Du Plessis"], ["Claire", "Feuerstein"], ["Alexandria", "Liles"], ["Katharine", "Baker"], ["Emma", "Laine"], ["Geraldine", "Roma"], ["Aya", "El Akkad"], ["Alexandra", "Kazanova"], ["Allison", "Baker"], ["Lucy", "Fletcher"], ["Monika", "Musilova"], ["Jitka", "Gavdunova"], ["Elena", "Petrucciano"], ["Varvara", "Lepchenko"], ["Claire", "De Gubernatis"], ["Seheno", "Razafindramaso"], ["Karolina", "Soor"], ["Melisa", "Cabrera Handt"], ["Shraddha", "Lodha"], ["Sylvia", "Krywacz"], ["Amina", "El Sahn"], ["Hendrike Lea", "Heitmann"], ["Dunja", "Antunovic"], ["Micaela", "Acosta"], ["Katerina", "Bohmova"], ["Catherine", "Grotz"], ["Yurika", "Sema"], ["Sheng Nan", "Sun"], ["Lucie", "Safarova"], ["Jitka", "Kleisnerova"], ["Carolina", "Escamilla"], ["Tapiwa", "Marobela"], ["Punam", "Reddy"], ["Katia", "Sabate Orera"], ["Shana", "Claes"], ["Chrissie", "Seredni"], ["Yui", "Nagasawa"], ["Marcela", "Vojtiskova"], ["Seul Ki", "Chin"], ["Nina", "Munch Soegaard"], ["Hannah", "Grady"], ["Karen", "Castiblanco"], ["Angelique", "Kerber"], ["Lauren", "Lui"], ["Rana", "Tharwat Hafez"], ["Nicole", "Grunwald"], ["Ana", "Veselinovic"], ["Sanaa", "Bhambri"], ["Diana Andreea", "Gae"], ["Ana", "Beltran Trigueros"], ["Barbora", "Bozkova"], ["Camila", "Belassi"], ["Violette", "Huck"], ["Megumi", "Fukui"], ["Rita", "Gouveia"], ["Mihaela", "Buzarnescu"], ["Liset", "Brito Herrera"], ["Paulina", "Jorquera"], ["Ekaterina", "Makarova"], ["Dessislava", "Mladenova"], ["Sanaz", "Marand"], ["Cristina", "Greco Naccarato"], ["Cagla", "Urcu"], ["Liege", "Vieira"], ["Chang", "Xu"], ["Jessica", "Sweeting"], ["Yi Fan", "Xu"], ["Eloisa Maria", "Compostizo De Andres"], ["Karina", "Porushkevich"], ["Ornella", "Gentile"], ["Valeria", "Casillo"], ["Bianca Ioana", "Bonifate"], ["Michelle", "Russ"], ["Monika", "Lalewicz"], ["Amandine", "Cazeaux"], ["Fatima", "El Allami"], ["Simonetta", "Miori"], ["Gabriela", "Roux"], ["Sherazad", "Benamar"], ["Sherazad", "Reix"], ["Zora", "Vlckova"], ["Naomi", "Cavaday"], ["Nathalia", "Rossi"], ["Maria Eugenia", "Roca Recarey"], ["Lauren", "Jones"], ["Roxane", "Vaisemberg"], ["Ivana", "Belejova"], ["Petra", "Vogel"], ["Majdouline", "Akrate"], ["Laura", "Sadria"], ["Ia", "Jikia"], ["Alessandra", "Caprara"], ["Guadalupe", "Moreno"], ["Lucie", "Sipkova"], ["Xenia", "Samoilova"], ["Kotomi", "Takahata"], ["Stephanie", "Theiler"], ["Maria", "Prishlyak"], ["Grace", "Leake"], ["Ioana Alexandra", "Oprea"], ["Sanne", "Bakker"], ["Katerina", "Vankova"], ["Kristy", "Frilling"], ["Tatiana", "Bua"], ["Anastasia", "Kontratevidi"], ["Chane", "Hines"], ["Julia", "Gavenko"], ["Yuuki", "Tanaka"], ["Petra", "Kvitova"], ["Leticia", "Costas"], ["Sandra", "Roma"], ["Nina", "Mujezinovic"], ["Stella", "Papaspyrou"], ["Chinami", "Ogi"], ["Martina", "Balogova"], ["Xinyun", "Han"], ["Nicole", "Riner"], ["Lara", "Meccico"], ["Mai", "Iwasaki"], ["Oksana", "Kalashnikova"], ["Dipti", "Srivastava"], ["Claudia", "Mercado"], ["Margarita", "Lazareva"], ["Shaozhuo", "Liu"], ["Ana Maria", "Chavez Franco"], ["Arantxa", "Rus"], ["Ekaterina", "Kamendova"], ["Monika", "Tumova"], ["Gabriella", "Boboc"], ["Ganna", "Lukianchykova"], ["Sofia", "Medina"], ["Ekaterina", "Abaeva"], ["Andressa", "Garcia"], ["Giulia", "Bruzzone"], ["Catia", "Rodrigues"], ["Danielle", "Mills"], ["Flavia", "Borges"], ["Misaki", "Doi"], ["Veronika", "Domagala"], ["Cindy", "Chala"], ["Ksenia", "Pervak"], ["Bianca", "Botto"], ["Marianna", "Natali"], ["Carolina", "Orsi"], ["Aleksandra", "Vukadinovic"], ["Elixane", "Lechemia"], ["Sonya", "Dayal"], ["Francesca", "Campigotto"], ["Cristina Bianca", "Danaila"], ["Tereza", "Budilova"], ["Gemma", "Praditngam"], ["Ekaterine", "Gorgodze"], ["Dejana", "Raickovic"], ["Alena", "Gerasimova"], ["Quirine", "Lemoine"], ["Chieh Yu", "Hsu"], ["Anastasiya", "Vasylyeva"], ["Alexia", "Quartetto"], ["Joanna", "Bougon"], ["Kristyna", "Pliskova"], ["Elena", "Bogdan"], ["Fiorella", "Jerardino"], ["Julie", "Gonzalez Rodriguez"], ["Alejandra", "Barragan"], ["Renata", "Bakieva"], ["Ashley", "Krysiak"], ["Sarah Rebecca", "Sekulic"], ["Na Lae", "Han"], ["Natali", "Coronel"], ["Kristyna", "Hancarova"], ["Doroteja", "Eric"], ["Chanel", "Simmonds"], ["Kobkanok", "Upapong"], ["Annie", "Sullivan"], ["Jenny Thuy", "Le"], ["Xenia", "Knoll"], ["Francisca", "Matos"], ["Christina", "Madenoglou"], ["Alexandra", "Avirvarei"], ["Georgina", "Fedosenkova"], ["Alicia", "Doms Golobart"], ["Amy", "Hoburn"], ["Monica", "Turewicz"], ["Martina", "Zerbola"], ["Mashaal", "Hameed"], ["Sabrina", "Dos Reis"], ["Maria Sol", "Carrasco"], ["Ruxandra", "Ababii"], ["Daniella", "Patton"], ["Veronika", "Zavodska"], ["Briar", "Preston"], ["Gabriela", "Ce"], ["Amanda", "Rodgers"], ["Constanze", "Lotz"], ["Paula", "Mocete Talamantes"], ["Verena", "Gantschnig"], ["Ainhoa", "Atucha Gomez"], ["Katarzyna", "Kossowska"], ["Julia", "Stamatova"], ["Vorranavaporn", "Vorrarattanamongkol"], ["Michaela", "Jasenakova"], ["Agustina Sol", "Eskenazi"], ["Maja", "Mladenovic"], ["Sandra", "Garriga Catala"], ["Rita", "Vilaca"], ["Zanmarie", "Pienaar"], ["Julia", "Kimmelmann"], ["Martina", "Trevisan"], ["Charitomeni", "Matoula"], ["Andreea", "Istrate"], ["Sowjanya", "Bavisetti"], ["Gabrielle", "Moxey"], ["Viktoryia", "Kisialeva"], ["Sarahi", "Garcia Carrera"], ["Rachel", "Girard"], ["Laura", "Robson"], ["Kate", "Vialle"], ["Anna", "Montserrat Sanchez"], ["Elena Teodora", "Cadar"], ["Carol", "Augustine Benito"], ["Kamila", "Pavelkova"], ["Arantxa", "Sanchez"], ["Ana Sofia", "Sanchez"], ["Julia", "Wachaczyk"], ["Ecaterina", "Oproiu"], ["Snigdha", "Padamata"], ["Rona", "Berisha"], ["Olga", "Doroshina"], ["So Ra", "Lee"], ["Brandy", "Mina"], ["Natalie", "Novakova"], ["Storm", "Sanders"], ["Alexandra", "Martinez"], ["Ysaline", "Bonaventure"], ["Barbora", "Trestikova"], ["Stefania", "Hristov"], ["Ana Maria", "Crisan"], ["Elpida", "Papanelopoulou"], ["Tereza", "Jankovska"], ["Rebecca", "Andrade"], ["Kelly", "Williford"], ["Tina", "Rupert"], ["Mia Nicole", "Eklund"], ["Bernarda", "Pera"], ["Montserrat", "Alonso"], ["Rosalie", "Van Der Hoek"], ["Hedda", "Odegaard"], ["Samira", "Radjaa"], ["Zuzanna", "Maciejewska"], ["Saumya", "Vig"], ["Marie", "Benoit"], ["Iga", "Odrzywolek"], ["Shakhlo", "Saidova"], ["Irina", "Khromacheva"], ["Yuliya", "Lysa"], ["Sophie", "Blom"], ["Jennifer", "Zerbone"], ["Kristina", "Chasovskikh"], ["Maria Camila", "Trujillo Hoyos"], ["Karina", "Rovira"], ["Teodora Adina", "Ardeleanu"], ["Yasmine", "Rashad"], ["Judit", "Vives Joan"], ["Sarah Beth", "Askew"], ["Yasmine", "Xantos"], ["Lea", "Tholey"], ["Hikari", "Yamamoto"], ["Ines Miren", "De Pablo"], ["Stuti", "Singh Tomar"], ["Naomi", "Totka"], ["Polina", "Bezsmertnaya"], ["Hannah", "King"], ["Gabriele", "Bertasiute"], ["Rebecca", "Smaller"], ["Busra", "Kayrun"], ["Stephani", "Rodriguez"], ["Raquel", "Montalvo"], ["Oana", "Irimescu"], ["Taylor", "Townsend"], ["Carmen", "Blasco Robaina"], ["Giulia", "Della Cioppa"], ["Nadege", "Jorda"], ["Beatriz", "Haddad Maia"], ["Nelise", "Verster"], ["Eleonore", "Barrere"], ["Anastasia", "Prokopenko"], ["Dzina", "Milovanovic"], ["Isabelle", "Wallace"], ["Katelyn", "Jackson"], ["Polina", "Novoselova"], ["Maite", "Cano"], ["Ria", "Vaidya"], ["Ana Lorena", "Garcia Navas"], ["Aayushi", "Chouhan"], ["Ivona", "Cudina"], ["Karina", "Gurgenyan"], ["Maria", "Patrascu"], ["Denisa", "Chereches"], ["Mirabelle", "Njoze"], ["Vasanti", "Shinde"], ["Amanda", "Schneider"], ["Katharina", "Herpertz"], ["Tayisiya", "Morderger"], ["Tamara", "Tomic"], ["Maria Fernanda", "Herazo Gonzalez"], ["Andra Maria", "Nitescu"], ["Micheline", "Aubuchon"], ["Ilayda", "Yondem"], ["Birgit", "Burk"], ["Kanako", "Osafune"], ["Anastasiya", "Komardina"], ["Nina", "Holanova"], ["Jil Belen", "Teichmann"], ["Francesca", "Di Lorenzo"], ["Natsuho", "Arakawa"], ["Emerald", "Able"], ["Manca", "Pislak"], ["Irys", "Ekani"], ["Veronica", "Miroshnichenko"], ["Martina", "Capurro Taborda"], ["Mariam", "Bolkvadze"], ["Diana", "Valverde"], ["Do Hee", "Bae"], ["Daniela", "Morales Beckmann"], ["Ioana Diana", "Pietroiu"], ["Luisa Fernanda", "Echeverry Rodriguez"], ["Mayuka", "Aikawa"], ["Nicole", "Frenkel"], ["Daria", "Kruzhkova"], ["Alejandra", "Tamayo Gomez"], ["Tereza", "Koplova"], ["Chiara", "Lommer"], ["Laura", "Illanes"], ["Olga", "Fridman"], ["Ana Paula", "Leal"], ["Shiraz", "Bronstein"], ["Nicole", "Bunea"], ["Charlotte", "Robillard Millette"], ["Ashley", "Kratzer"], ["Momoka", "Chimura"], ["Anna", "Slovakova"], ["Ai Qi", "Chen"], ["Jiaying", "He"], ["Ysabel", "Gonzalez Rico"], ["Andreea", "Stanescu"], ["Marketa", "Vondrousova"], ["Ecaterina", "Ivasco"], ["Ivon", "Mihaleva"], ["Jasmine", "Boyd"], ["Andrea", "Arratia Fernandez"], ["Kayla", "Day"], ["Ekaterina", "Davletova"], ["Irina", "Cantos Siemers"], ["Oceane", "Mialon"], ["Watsachol", "Sawasdee"], ["Ellen", "Ashley"], ["Mila", "Mejic"], ["Natalia", "Nikolopoulou"], ["Marta", "Del Pino Maturano"], ["Jayci", "Goldsmith"], ["Yang", "Lee"], ["Isabella", "Tcherkes Zade"], ["Mara", "Vidal"], ["Taylor", "Johnson"], ["Julia", "Vulpio"], ["Dagmar", "Zdrubecka"], ["Olga", "Danilovic"], ["Xiyu", "Wang"], ["Lina", "Shokry"], ["Ya Hsin", "Lee"], ["Ruxandra", "Schech"], ["Yasmina", "Karimjanova"], ["Lara", "Biter"], ["Najah", "Dawson"], ["Giulia", "Morlet"], ["Matilde", "Mariani"], ["Isabella", "Nunez"], ["Betina", "Tokac"], ["Noa", "Krznaric"]], "trigger_words": ["First Name", "Last Name"], "Prediction": "first_name || ' ' || last_name AS full_name\nFROM players\nWHERE hand = 'L'\nORDER BY birth_date;"}
{"db_id": "wta_1", "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1", "query_toks": ["SELECT", "T1.country_code", ",", "T1.first_name", "FROM", "players", "AS", "T1", "JOIN", "rankings", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "ORDER", "BY", "T2.tours", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "country_code", ",", "t1", ".", "first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "order", "by", "t2", ".", "tours", "desc", "limit", "value"], "question": "Find the first name and country code of the player who did the most number of tours.", "question_toks": ["Find", "the", "first", "name", "and", "country", "code", "of", "the", "player", "who", "did", "the", "most", "number", "of", "tours", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 41, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 43, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "459", "answer_text": [["USA", "Julia"]], "trigger_words": ["Country Code", "First Name"], "Prediction": "players.first_name, players.country_code\nFROM players\nJOIN rankings ON players.player_id = rankings.player_id\nGROUP BY players.player_id\nORDER BY SUM(rankings.tours) DESC\nLIMIT 1;"}
{"db_id": "wta_1", "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1", "query_toks": ["SELECT", "T1.country_code", ",", "T1.first_name", "FROM", "players", "AS", "T1", "JOIN", "rankings", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "ORDER", "BY", "T2.tours", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "country_code", ",", "t1", ".", "first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "order", "by", "t2", ".", "tours", "desc", "limit", "value"], "question": "What is the first name and country code of the player with the most tours?", "question_toks": ["What", "is", "the", "first", "name", "and", "country", "code", "of", "the", "player", "with", "the", "most", "tours", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 41, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 43, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "460", "answer_text": [["USA", "Julia"]], "trigger_words": ["Country Code", "First Name"], "Prediction": "players.first_name, players.country_code \nFROM players \nJOIN rankings ON players.player_id = rankings.player_id \nGROUP BY players.player_id \nORDER BY COUNT(rankings.tours) DESC \nLIMIT 1;"}
{"db_id": "wta_1", "query": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "YEAR", "FROM", "matches", "GROUP", "BY", "YEAR", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "year", "from", "matches", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the year that has the most number of matches.", "question_toks": ["Find", "the", "year", "that", "has", "the", "most", "number", "of", "matches", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [[0, 38, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "461", "answer_text": [[2016]], "trigger_words": ["Year"], "Prediction": "year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;"}
{"db_id": "wta_1", "query": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "YEAR", "FROM", "matches", "GROUP", "BY", "YEAR", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "year", "from", "matches", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which year had the most matches?", "question_toks": ["Which", "year", "had", "the", "most", "matches", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [[0, 38, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "462", "answer_text": [[2016]], "trigger_words": ["Year"], "Prediction": "year, COUNT(*) AS num_matches\n FROM matches\n GROUP BY year\n ORDER BY num_matches DESC\n LIMIT 1;"}
{"db_id": "wta_1", "query": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "winner_name", ",", "winner_rank_points", "FROM", "matches", "GROUP", "BY", "winner_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "winner_name", ",", "winner_rank_points", "from", "matches", "group", "by", "winner_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the name and rank points of the winner who won the most times.", "question_toks": ["Find", "the", "name", "and", "rank", "points", "of", "the", "winner", "who", "won", "the", "most", "times", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 36, false], null]]]], "where": [], "groupBy": [[0, 34, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "463", "answer_text": [["Angelique Kerber", 3715]], "trigger_words": ["Winner Name", "Winner Rank Points"], "Prediction": "winner_name, MAX(winner_rank_points) \n FROM matches \n JOIN players ON matches.winner_id=players.player_id \n GROUP BY winner_name \n ORDER BY COUNT(*) DESC \n LIMIT 1;"}
{"db_id": "wta_1", "query": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "winner_name", ",", "winner_rank_points", "FROM", "matches", "GROUP", "BY", "winner_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "winner_name", ",", "winner_rank_points", "from", "matches", "group", "by", "winner_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the winner who has won the most matches, and how many rank points does this player have?", "question_toks": ["What", "is", "the", "name", "of", "the", "winner", "who", "has", "won", "the", "most", "matches", ",", "and", "how", "many", "rank", "points", "does", "this", "player", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 36, false], null]]]], "where": [], "groupBy": [[0, 34, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "464", "answer_text": [["Angelique Kerber", 3715]], "trigger_words": ["Winner Name", "Winner Rank Points"], "Prediction": "winner_name, SUM(winner_rank_points) AS total_rank_points\n FROM matches\n JOIN players ON matches.winner_id=players.player_id\n GROUP BY winner_name\n ORDER BY COUNT(*) DESC\n LIMIT 1;"}
{"db_id": "wta_1", "query": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1", "query_toks": ["SELECT", "winner_name", "FROM", "matches", "WHERE", "tourney_name", "=", "'Australian", "Open", "'", "ORDER", "BY", "winner_rank_points", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "winner_name", "from", "matches", "where", "tourney_name", "=", "value", "order", "by", "winner_rank_points", "desc", "limit", "value"], "question": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.", "question_toks": ["Find", "the", "name", "of", "the", "winner", "who", "has", "the", "highest", "rank", "points", "and", "participated", "in", "the", "Australian", "Open", "tourney", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Australian Open\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 36, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "465", "answer_text": [["Serena Williams"]], "trigger_words": ["Winner Name"], "Prediction": "winner_name \nFROM matches \nJOIN players ON matches.winner_id=players.player_id \nJOIN rankings ON players.player_id=rankings.player_id \nWHERE tourney_name='Australian Open' \nORDER BY ranking_points DESC \nLIMIT 1;"}
{"db_id": "wta_1", "query": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1", "query_toks": ["SELECT", "winner_name", "FROM", "matches", "WHERE", "tourney_name", "=", "'Australian", "Open", "'", "ORDER", "BY", "winner_rank_points", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "winner_name", "from", "matches", "where", "tourney_name", "=", "value", "order", "by", "winner_rank_points", "desc", "limit", "value"], "question": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?", "question_toks": ["What", "is", "the", "name", "of", "the", "winner", "with", "the", "most", "rank", "points", "who", "participated", "in", "the", "Australian", "Open", "tournament", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Australian Open\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 36, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "466", "answer_text": [["Serena Williams"]], "trigger_words": ["Winner Name"], "Prediction": "winner_name \nFROM matches \nJOIN players ON matches.winner_id=players.player_id \nJOIN rankings ON players.player_id=rankings.player_id \nWHERE tourney_name='Australian Open' \nORDER BY ranking_points DESC \nLIMIT 1;"}
{"db_id": "wta_1", "query": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1", "query_toks": ["SELECT", "winner_name", ",", "loser_name", "FROM", "matches", "ORDER", "BY", "minutes", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "winner_name", ",", "loser_name", "from", "matches", "order", "by", "minutes", "desc", "limit", "value"], "question": "find the names of loser and winner who played in the match with greatest number of minutes.", "question_toks": ["find", "the", "names", "of", "loser", "and", "winner", "who", "played", "in", "the", "match", "with", "greatest", "number", "of", "minutes", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "467", "answer_text": [["Petra Kvitova", "Angelique Kerber"]], "trigger_words": ["Winner Name", "Loser Name"], "Prediction": "matches.winner_name, matches.loser_name\n FROM matches\n WHERE minutes = (SELECT MAX(minutes) FROM matches);"}
{"db_id": "wta_1", "query": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1", "query_toks": ["SELECT", "winner_name", ",", "loser_name", "FROM", "matches", "ORDER", "BY", "minutes", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "winner_name", ",", "loser_name", "from", "matches", "order", "by", "minutes", "desc", "limit", "value"], "question": "What are the names of the winner and loser who played in the longest match?", "question_toks": ["What", "are", "the", "names", "of", "the", "winner", "and", "loser", "who", "played", "in", "the", "longest", "match", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "468", "answer_text": [["Petra Kvitova", "Angelique Kerber"]], "trigger_words": ["Winner Name", "Loser Name"], "Prediction": "matches.winner_name, matches.loser_name\n FROM matches\n WHERE minutes = (SELECT MAX(minutes) FROM matches)"}
{"db_id": "wta_1", "query": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "query_toks": ["SELECT", "avg", "(", "ranking", ")", ",", "T1.first_name", "FROM", "players", "AS", "T1", "JOIN", "rankings", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "GROUP", "BY", "T1.first_name"], "query_toks_no_value": ["select", "avg", "(", "ranking", ")", ",", "t1", ".", "first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "group", "by", "t1", ".", "first_name"], "question": "Find the average ranking for each player and their first name.", "question_toks": ["Find", "the", "average", "ranking", "for", "each", "player", "and", "their", "first", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 41, false], null]]}, "select": [false, [[5, [0, [0, 40, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "469", "answer_text": [[1199.8235294117646, "Aastha"], [1110.0434782608695, "Abbi"], [808.4545454545455, "Abbie"], [387.66706161137444, "Abigail"], [1039.6744186046512, "Abiodun"], [1228.75, "Abir"], [790.1538461538462, "Adeliya"], [1122.4423076923076, "Adnya"], [619.6814159292036, "Adriana"], [1213.1666666666667, "Adrienn"], [627.12, "Adrijana"], [1255.3333333333333, "Adva"], [1155.0392156862745, "Afroditi"], [960.6770186335403, "Agata"], [1082.3548387096773, "Agata Jadwiga"], [1231.5, "Agne"], [391.3003629764065, "Agnes"], [694.0659898477157, "Agnese"], [940.2125603864735, "Agni"], [122.19587628865979, "Agnieszka"], [684.8497652582159, "Agustina"], [1154.25, "Agustina Elena"], [1156.340425531915, "Ah"], [1248.72, "Ahlam"], [728.5, "Ahsha"], [890.8728448275862, "Ai"], [912.1523178807947, "Ai Wen"], [1110.3333333333333, "Aida"], [284.8724727838258, "Aiko"], [1034.5833333333333, "Ailen"], [1200.2, "Aimee"], [1164.95, "Aina"], [943.7397959183673, "Ainhoa"], [1024.625, "Aishwarya"], [302.84831460674155, "Ajla"], [704.9618138424821, "Akari"], [215.25185185185185, "Akgul"], [710.9617224880383, "Aki"], [1145.8235294117646, "Akiho"], [493.98205383848455, "Akiko"], [772.8571428571429, "Akilah"], [1038.35, "Akvile"], [1119.1639344262296, "Alana"], [843.7260273972603, "Alba"], [343.22432701894314, "Alberta"], [775.2734375, "Albina"], [1185.7142857142858, "Aldana"], [1067.019801980198, "Alejandra"], [450.22998544395927, "Aleksandra"], [578.07962529274, "Aleksandrina"], [820.4563492063492, "Alena"], [1123.4864864864865, "Alessandra"], [1057.628205128205, "Alessia"], [1145.1641791044776, "Alessondra"], [383.9921465968586, "Alexa"], [569.2647632558965, "Alexandra"], [945.625, "Alexandria"], [718.5202702702703, "Alexia"], [604.15, "Alexis"], [441.9846743295019, "Aliaksandra"], [710.3822682786414, "Alice"], [951.9764150943396, "Alice Andrada"], [1105.1298701298701, "Alicia"], [855.813627254509, "Alicja"], [925.0028776978418, "Alina"], [611.35, "Aliona"], [453.01556420233464, "Alisa"], [403.48784576697403, "Alison"], [822.3459915611814, "Alix"], [252.11485774499474, "Alize"], [217.85922330097088, "Alla"], [557.9232456140351, "Allie"], [1157.8, "Almudena"], [871.6926829268293, "Alona"], [1181.6078431372548, "Alory Regina Elorriaga"], [496.9431818181818, "Alyona"], [650.6240276577355, "Amanda"], [747.4375, "Amandine"], [1011.3666666666667, "Amelie"], [803.9764705882353, "Amina"], [613.195652173913, "Aminat"], [1075.8260869565217, "Amira"], [415.9078341013825, "Amra"], [1209.4, "Amrita"], [763.888198757764, "Amy"], [460.8932038834951, "An Sophie"], [396.2893280632411, "Ana"], [842.8446601941747, "Ana Bianca"], [524.9192825112108, "Ana Clara"], [1084.7916666666667, "Ana Gabriela"], [1243.4285714285713, "Ana Luisa"], [1031.228855721393, "Ana Paula"], [496.7156398104265, "Ana Sofia"], [961.2631578947369, "Ana Victoria"], [144.3264367816092, "Anabel"], [922.2255639097745, "Anaeve"], [482.26169844020797, "Anais"], [859.3059701492538, "Anamika"], [430.0872542522642, "Anastasia"], [956.5754716981132, "Anastasia Evgenyevna"], [1245.75, "Anastasiia"], [221.66153846153847, "Anastasija"], [671.2584369449378, "Anastasiya"], [1127.7368421052631, "Anca"], [1150.0, "Anda"], [970.3620689655172, "Andie K"], [1063.4736842105262, "Andjela"], [1275.8235294117646, "Andra Maria"], [414.4332292750607, "Andrea"], [878.3939393939394, "Andrea Renee"], [956.0333333333333, "Andreea"], [801.84375, "Andreea Amalia"], [726.2657657657658, "Andreea Roxana"], [424.64521739130436, "Andreja"], [1184.0416666666667, "Andressa Cristina"], [1045.6666666666667, "Andrina"], [1152.0857142857142, "Aneta"], [367.2274678111588, "Anett"], [969.8181818181819, "Anette"], [1226.3333333333333, "Ange Oby"], [1128.7272727272727, "Angela"], [686.2234432234433, "Angelica"], [1089.1603773584907, "Angeliki"], [750.3207810320781, "Angelina"], [308.56833824975416, "Angelique"], [432.6949152542373, "Anhelina"], [850.9791666666666, "Anhzelika"], [720.1431870669746, "Ani"], [947.472972972973, "Anita"], [725.3893333333333, "Anja"], [1228.388888888889, "Anke"], [618.4714285714285, "Ankita"], [907.4, "Ann"], [551.5557158312297, "Anna"], [760.639175257732, "Anna Arina"], [428.5496828752643, "Anna Giulia"], [345.51020408163265, "Anna Karolina"], [916.7115384615385, "Anna Katalina"], [201.87700534759358, "Anna Lena"], [1070.3967391304348, "Anna Maria"], [583.9347826086956, "Annalisa"], [248.74237737516572, "Anne"], [762.7606382978723, "Anne Liz"], [1237.6363636363637, "Anne Marie"], [1252.0, "Anne Sophie"], [1042.037037037037, "Annie"], [265.79487179487177, "Annika"], [969.5882352941177, "Anouk"], [1051.7096774193549, "Antonela"], [589.1298076923077, "Antonia"], [1049.4655172413793, "Antonina"], [1037.0833333333333, "Anushka"], [617.3333333333334, "Ao"], [1016.5714285714286, "Apichaya"], [658.5074074074074, "Arabela"], [279.23336006415394, "Arantxa"], [490.4144736842105, "Aranza"], [200.97080291970804, "Aravane"], [951.4146341463414, "Ariadna"], [560.6778190830236, "Arina"], [1224.0, "Arina Gabriela"], [1074.3333333333333, "Arlinda"], [1281.8461538461538, "Arthi"], [349.54794520547944, "Aryna"], [1181.27868852459, "Aselya"], [1151.95, "Asha"], [331.3681818181818, "Ashleigh"], [638.88, "Ashley"], [823.0909090909091, "Ashling"], [1018.6637931034483, "Ashmitha"], [803.3904761904762, "Ashvarya"], [453.43392070484583, "Asia"], [790.46875, "Asiya"], [1172.5531914893618, "Assia"], [829.5625, "Astra"], [1086.45, "Astrid Wanja"], [591.2544731610338, "Audrey"], [1208.4285714285713, "Avgusta"], [1064.0, "Axana"], [552.4653465346535, "Ayaka"], [901.8717948717949, "Ayan"], [597.6981132075472, "Ayano"], [397.83561643835617, "Ayla"], [915.5932203389831, "Aymet"], [479.5530612244898, "Ayu Fani"], [412.74466019417474, "Ayumi"], [556.2303370786517, "Azra"], [763.8900651465798, "Barbara"], [252.6093155893536, "Barbora"], [656.2932551319648, "Basak"], [785.0707482993197, "Beatrice"], [457.4050279329609, "Beatriz"], [1253.4, "Beatriz Magdalena"], [971.2865853658536, "Beatriz Maria"], [1382.1538461538462, "Beauty"], [1167.3368421052633, "Belen"], [681.7736842105263, "Belinda"], [705.4688346883469, "Benedetta"], [625.013698630137, "Berfu"], [717.7932330827068, "Bermet"], [541.273631840796, "Bernarda"], [834.1005025125628, "Bernice"], [1005.75, "Berta"], [146.59709379128137, "Bethanie"], [1229.5714285714287, "Betina"], [878.0138888888889, "Bhuvana"], [653.2805383022775, "Bianca"], [696.952380952381, "Bianka"], [550.1941544885177, "Bibiane"], [912.71875, "Blair"], [904.6538461538462, "Blanca"], [1221.8333333333333, "Blessing"], [1254.6341463414635, "Boba"], [392.7313829787234, "Bojana"], [834.2066115702479, "Borislava"], [992.4222222222222, "Boyan"], [970.9846153846154, "Brandy"], [872.0930232558139, "Breaunna"], [211.01377118644066, "Brenda"], [854.3170731707318, "Brianna"], [917.0, "Brienne"], [1126.3333333333333, "Brindtha"], [647.5205479452055, "Britt"], [990.5210084033613, "Brittany"], [804.6277056277056, "Brooke"], [952.5619834710744, "Brynn"], [555.3384615384615, "Bunyawi"], [1140.981981981982, "Busra"], [311.87854251012146, "Cagla"], [709.4247787610619, "Caitlin"], [803.7139479905437, "Camelia Elena"], [1192.1818181818182, "Cameron"], [539.7944621938232, "Camila"], [1192.3783783783783, "Camila Vital"], [801.6850649350649, "Camilla"], [1112.9450549450548, "Camille"], [236.07412398921832, "Cara"], [416.3666666666667, "Carina"], [411.70779777206513, "Carla"], [1236.7777777777778, "Carlota"], [1127.9338842975208, "Carlotta"], [318.69978858350953, "Carly"], [890.6351351351351, "Carmen"], [842.1553398058253, "Carmen Raluca"], [564.1434426229508, "Carol"], [645.2279792746114, "Carolin"], [718.725321888412, "Carolina"], [799.0650406504066, "Carolina Meligeni Rodrigues"], [342.40130505709624, "Caroline"], [1161.5675675675675, "Caroline B"], [1197.578947368421, "Carolyn"], [1020.6, "Carson"], [378.0163727959698, "Casey"], [293.76942355889724, "Catalina"], [941.4724409448819, "Catherine"], [134.21917808219177, "Catherine Cartan"], [744.0, "Caty"], [755.4649681528663, "Cecilia"], [1141.842105263158, "Cecilie Lundgaard"], [708.618398637138, "Celine"], [1123.3855421686746, "Cemre"], [650.1367521367522, "Chalena"], [343.2835365853659, "Chanel"], [215.6615811373093, "Chanelle"], [575.4626436781609, "Chang"], [1281.8461538461538, "Chanikarn"], [609.90625, "Chantal"], [1128.030303030303, "Chantelle"], [1232.8, "Chaoyi"], [766.4794520547945, "Charlene"], [927.7647058823529, "Charlotte"], [593.9759036144578, "Chayenne"], [1132.0, "Chelsea"], [719.3061224489796, "Chelsey"], [524.7444668008048, "Chen"], [789.2857142857143, "Chengyiyi"], [464.1367781155015, "Chi Chi"], [1039.3902439024391, "Chi Fan"], [950.8813559322034, "Chia Hsien"], [359.3764705882353, "Chia Jung"], [437.73858921161826, "Chiaki"], [977.9640591966173, "Chiara"], [533.9586374695864, "Chieh Yu"], [848.9908952959029, "Chihiro"], [385.2651515151515, "Chin Wei"], [615.2230215827338, "Chinami"], [583.530303030303, "Ching Wen"], [749.3582089552239, "Chiraz"], [874.8181818181819, "Chisa"], [675.2445414847161, "Chloe"], [1112.1458333333333, "Chompoothip"], [1112.875, "Christie"], [454.9920529801324, "Christina"], [841.4051724137931, "Christine"], [692.390625, "Chun Mei"], [986.3944099378882, "Chun Yan"], [659.3055555555555, "Cindy"], [443.45754716981133, "Claire"], [1190.7307692307693, "Clara"], [826.2619047619048, "Claudia"], [967.2978723404256, "Claudia Antonia"], [996.2574257425742, "Claudia Gianina"], [383.6413199426112, "Claudine"], [823.6306306306307, "Clelia"], [875.9772727272727, "Clemence"], [964.1224489795918, "Clementina Eugenia"], [620.4120171673819, "Clothilde"], [270.5896860986547, "Coco"], [1165.093023255814, "Colomba"], [390.0, "Conny"], [570.2723004694835, "Constance"], [835.1132075471698, "Constanza"], [1245.3333333333333, "Constanze"], [832.7818181818182, "Corina"], [356.8219696969697, "Corinna"], [757.2253521126761, "Cornelia"], [406.5511363636364, "Cory Ann"], [1049.0, "Costanza"], [554.5376344086021, "Cristiana"], [643.616049382716, "Cristina"], [439.5747863247863, "Cristina Andreea"], [720.6428571428571, "Cristina Madalina"], [949.7944444444445, "Csilla"], [998.7722772277227, "Cynthia"], [1010.3333333333334, "Da Hye"], [920.1276595744681, "Dabin"], [1159.1818181818182, "Dagmara"], [720.7490039840637, "Daiana"], [1181.4736842105262, "Dajana"], [801.6933333333334, "Dalia"], [525.9552572706936, "Dalila"], [279.16438356164383, "Dalma"], [1493.0, "Damilola"], [1242.0, "Damini"], [1198.3333333333333, "Damira"], [994.4769230769231, "Dan Ni"], [805.7028985507246, "Dana"], [977.4539007092199, "Daneika"], [380.609375, "Danica"], [348.6364892881825, "Daniela"], [643.9216101694915, "Daniella"], [744.7453250222618, "Danielle"], [434.68, "Danielle Rose"], [1107.0919540229886, "Danijela"], [302.83268482490274, "Danka"], [1226.5454545454545, "Daphne"], [629.6443987667009, "Daria"], [464.95631067961165, "Darija"], [1132.1744186046512, "Dariya"], [531.1829405162739, "Darya"], [722.6986301369863, "Dasha"], [576.4307692307692, "Dayana"], [550.9545454545455, "Dea"], [764.6785714285714, "Deborah"], [1115.0851063829787, "Deeon"], [758.5342960288808, "Dejana"], [983.4174757281553, "Demi"], [419.1633466135458, "Denisa"], [949.1239316239316, "Denise"], [1160.3125, "Denise Antonela"], [551.5304659498208, "Deniz"], [1123.6486486486488, "Deria"], [863.7826086956521, "Desirae"], [1032.2666666666667, "Desiree"], [665.686684073107, "Despina"], [746.0962962962963, "Despoina"], [483.77464788732397, "Destanee"], [1154.2857142857142, "Dewi"], [615.1506849315068, "Dhruthi"], [736.1650485436893, "Di"], [383.7832512315271, "Dia"], [654.3773657782928, "Diana"], [1205.7692307692307, "Diana Maria"], [809.697247706422, "Dianne"], [669.2982456140351, "Dijana"], [1248.2, "Dilara"], [1094.4583333333333, "Dina"], [268.05945945945945, "Dinah"], [1234.6176470588234, "Doga Selen"], [803.8666666666667, "Domenica"], [171.71134020618555, "Dominika"], [1042.7843137254902, "Dominique"], [1131.6333333333334, "Donika"], [223.50900900900902, "Donna"], [1196.56, "Dorien"], [520.9397993311037, "Doroteja"], [913.7272727272727, "Draginja"], [929.0599369085173, "Dunja"], [1073.1752577319587, "Ebony"], [1029.6888888888889, "Eden"], [211.67325428194994, "Edina"], [656.2851711026616, "Eduarda"], [842.7045454545455, "Eetee"], [1214.857142857143, "Ege"], [471.8367290748899, "Ekaterina"], [553.9434782608696, "Ekaterine"], [1221.7931034482758, "Elaine"], [1066.5343511450383, "Eleanor"], [324.3720930232558, "Elena"], [392.44444444444446, "Elena Gabriela"], [686.6470588235294, "Elena Teodora"], [249.5244140625, "Eleni"], [950.0277777777778, "Eleonora"], [1087.372340425532, "Eleonore"], [876.1730769230769, "Eliessa"], [421.6573033707865, "Elina"], [888.2213114754098, "Elisabeth"], [334.7118644067797, "Elise"], [418.39748953974896, "Elitsa"], [579.5214723926381, "Elixane"], [978.2708333333334, "Eliza"], [1154.2714285714285, "Elizabeta"], [736.9747747747748, "Elizabeth"], [1006.2982456140351, "Elizabeth Anita Alexandria"], [489.5307517084282, "Elizaveta"], [981.9814814814815, "Elizaveta Anna"], [1011.9433962264151, "Elke"], [1168.7967479674796, "Ella"], [750.9460093896714, "Ellen"], [508.340206185567, "Ellie"], [1211.2333333333333, "Elodie"], [652.1984732824427, "Elyne"], [819.3400503778338, "Ema"], [672.730407523511, "Emelyn"], [770.8472222222222, "Emi"], [1232.0, "Emilia"], [1022.9174311926605, "Emiliana"], [705.4716981132076, "Emilie"], [1209.625, "Emilija"], [1092.2771084337348, "Emiliya"], [585.093851132686, "Emily"], [1041.948717948718, "Emily J"], [682.0972222222222, "Emina"], [641.046992481203, "Emma"], [1193.3529411764705, "Emma Christine"], [943.7716535433071, "Emmanuelle"], [1229.7333333333333, "En Pei"], [980.3333333333334, "Ena"], [321.23595505617976, "Eri"], [788.0384615384615, "Erica"], [544.5041866028708, "Erika"], [942.7969696969697, "Erin"], [733.1351351351351, "Erina"], [1218.5652173913043, "Esen"], [966.0540540540541, "Estela"], [617.4935251798561, "Estelle"], [950.9090909090909, "Ester"], [347.34943639291464, "Estrella"], [781.3218390804598, "Etsuko"], [911.7241379310345, "Eudice Wong"], [1157.5, "Eugenia"], [477.62886597938143, "Eugenie"], [620.6746411483253, "Eugeniya"], [500.29483037156706, "Eva"], [1083.8333333333333, "Eva Marie"], [1023.8690476190476, "Eveliina"], [471.5439093484419, "Evelyn"], [414.66339869281046, "Evgenia"], [442.0344827586207, "Evgeniya"], [612.0185185185185, "Fang Ying"], [406.9281767955801, "Fangzhou"], [569.1904761904761, "Fanny"], [1106.3076923076924, "Farah"], [673.7509157509157, "Fatima"], [1070.9463414634147, "Fatimah"], [648.2984054669704, "Fatma"], [1015.5, "Fatyha"], [722.7286493034525, "Federica"], [1204.7272727272727, "Federica Joe"], [647.922077922078, "Fernanda"], [1187.0384615384614, "Ferny"], [853.3908045977012, "Fiona"], [376.47888446215137, "Flavia"], [451.5810397553517, "Florencia"], [999.2, "Frances"], [570.534951862704, "Francesca"], [903.1666666666666, "Francisca"], [437.05298013245033, "Francoise"], [949.6575342465753, "Franziska"], [1244.3333333333333, "Frederikke"], [544.1627906976744, "Freya"], [696.7697332607512, "Gabriela"], [994.0612244897959, "Gabriela Nicole"], [792.5, "Gabriella"], [985.7211538461538, "Gabrielle Faith"], [1052.8314606741574, "Gaelle"], [759.5352697095435, "Gaia"], [526.2644836272041, "Gail"], [305.19563522992985, "Galina"], [606.7211740041929, "Ganna"], [229.3774193548387, "Garbine"], [1152.142857142857, "Gebriela"], [772.2857142857143, "Genevieve"], [533.5940594059406, "Georgia"], [763.1014492753624, "Georgia Andreea"], [1153.9166666666667, "Georgiana"], [396.225, "Georgina"], [1150.6607142857142, "Ghislaine"], [813.1351351351351, "Giada"], [567.8518518518518, "Gioia"], [960.4941860465116, "Giorgia"], [1226.5, "Giorgie"], [1197.0, "Giovanna"], [693.6215943491422, "Giulia"], [584.359375, "Giuliana"], [794.7118644067797, "Gloria"], [716.3150684931506, "Gozal"], [454.06233062330625, "Grace"], [783.8288043478261, "Gracia"], [547.277108433735, "Greetje"], [296.8219584569733, "Greta"], [797.383606557377, "Guadalupe"], [1027.0, "Guillermina"], [957.9512195121952, "Guiomar"], [1168.3396226415093, "Gulben"], [1196.0, "Gulchekhra"], [1236.6153846153845, "Gulnaz"], [995.4074074074074, "Guzal"], [1087.6216216216217, "Gyulnara"], [1051.623188405797, "Habiba"], [844.3856812933026, "Hae Sung"], [1179.4153846153847, "Haine"], [1110.5376344086021, "Hana"], [957.2, "Hanna"], [543.968253968254, "Hanyu"], [680.1050228310502, "Hao Chen"], [1153.936507936508, "Hao Ching"], [574.8723404255319, "Harmony"], [694.341935483871, "Harriet"], [774.6837606837607, "Haruka"], [512.1515151515151, "Haruna"], [914.5321100917431, "Hayley"], [1214.7692307692307, "Hazal"], [167.50632911392404, "Heather"], [417.44323483670297, "Heidi"], [1019.4107142857143, "Helen"], [696.4752475247525, "Helene"], [1095.1176470588234, "Hikari"], [673.6635071090047, "Hilda"], [1219.0, "Himari"], [534.890243902439, "Hiroko"], [860.8104265402843, "Hirono"], [925.9865771812081, "Ho Ching"], [1185.75, "Hollie"], [914.8607594936709, "Hongrui"], [1251.1333333333334, "Hortencia"], [1107.7142857142858, "Hsin Yuan"], [726.1737089201878, "Hua Chen"], [1118.904761904762, "Huijie"], [888.0055096418732, "Hulya"], [1020.28125, "Hye Min"], [1069.3208955223881, "Hyojung"], [729.0671936758894, "Hyun Hui"], [1038.6911764705883, "I Hsuan"], [1085.581818181818, "Iana"], [962.5, "Ida"], [1232.2, "Idia"], [705.5625, "Iga"], [1135.5, "Ilay"], [868.2191780821918, "Ilka"], [452.625, "Ilona"], [847.0941176470589, "Ilze"], [845.375, "Imane Maelle"], [1165.5573770491803, "Ina"], [1069.0925925925926, "Inci"], [954.046875, "India"], [627.7027027027027, "Indire"], [485.9559748427673, "Indy"], [919.6147540983607, "Ineke"], [687.0229885057471, "Ines"], [1039.0, "Inger"], [766.2549019607843, "Ingrid"], [869.3571428571429, "Ingrid Alexandra"], [748.6622691292876, "Ingrid Esperanza"], [1192.5454545454545, "Intissar"], [980.2232142857143, "Ioana"], [482.43243243243245, "Ioana Diana"], [646.0441176470588, "Ioana Loredana"], [799.0552486187845, "Ionela Andreea"], [655.7828348504552, "Ipek"], [288.74423480083857, "Irena"], [579.2153846153847, "Irene"], [436.84339509862525, "Irina"], [285.84388185654007, "Irina Camelia"], [578.1381578947369, "Irina Maria"], [866.1075949367089, "Iris"], [489.5294964028777, "Iryna"], [724.9178743961353, "Isabel"], [1114.99375, "Isabela"], [566.7873931623932, "Isabella"], [781.6993464052288, "Isabelle"], [1170.9411764705883, "Iulia Maria"], [732.7386018237082, "Iva"], [439.81414868105514, "Ivana"], [871.109375, "Ivania"], [1079.05, "Ivanka"], [117.95684523809524, "Iveta"], [1136.8535031847134, "Ivette"], [872.0, "Ivone"], [591.3809523809524, "Ivonne"], [624.6089494163424, "Jacqueline"], [909.2, "Jada"], [739.04802259887, "Jade"], [760.4920634920635, "Jaeda"], [562.8450704225352, "Jaimee"], [1243.875, "Jaimy Gayle"], [1037.5274725274726, "Jainy"], [402.36756756756756, "Jamie"], [1247.3333333333333, "Jamilya"], [592.5990783410139, "Jan"], [406.6258503401361, "Jana"], [240.5306603773585, "Janette"], [699.7864583333334, "Janina"], [1262.5416666666667, "Janja"], [861.5102040816327, "Janneke"], [748.7238095238096, "Jaqueline Adina"], [1121.767857142857, "Jara"], [149.46360759493672, "Jarmila"], [633.027027027027, "Jasmin"], [642.1811989100818, "Jasmina"], [437.86915887850466, "Jasmine"], [1117.64, "Jasmine Amber"], [1070.5648854961833, "Jawairiah"], [1035.46, "Jazmin"], [983.1290322580645, "Jazzamay"], [767.7730496453901, "Jeannine"], [348.19338235294117, "Jelena"], [556.7936681222708, "Jennifer"], [902.1470588235294, "Jenny"], [501.5860215053763, "Jesika"], [655.7464059804486, "Jessica"], [818.2043795620438, "Jessika"], [967.6708860759494, "Jessy"], [823.9789029535865, "Ji Hee"], [833.5061082024433, "Ji Young"], [1169.6923076923076, "Jia"], [682.961038961039, "Jia Jing"], [529.7777777777778, "Jia Qi"], [794.4931506849315, "Jiahui"], [1230.6, "Jiakang"], [1232.032258064516, "Jiatian"], [578.5, "Jiaxi"], [1161.0, "Jiaxue"], [114.05571428571429, "Jie"], [501.0619469026549, "Jil Belen"], [1116.4190476190477, "Jil Nora"], [121.9579326923077, "Jill"], [721.14, "Jillian"], [1267.0, "Jin"], [492.8915187376726, "Jin A"], [1035.6470588235295, "Jin Ju"], [369.1620469083156, "Jing Jing"], [863.3225806451613, "Joana"], [931.025641025641, "Joanna"], [1227.8, "Joanne"], [925.4230769230769, "Jodie Anna"], [1111.8333333333333, "Johana"], [310.3405299313052, "Johanna"], [1022.6198347107438, "Jordana"], [924.9325842696629, "Josepha"], [684.4892086330935, "Josephine"], [993.2105263157895, "Josie"], [601.9846625766871, "Jovana"], [812.6, "Ju Eun"], [1224.0, "Judith"], [1243.904761904762, "Jule"], [576.9173467252564, "Julia"], [1024.6666666666667, "Julia Mansano"], [1110.0816326530612, "Juliana"], [1175.7666666666667, "Juliana Rocha"], [512.3787128712871, "Julie"], [707.1467889908257, "Julieta Lara"], [1019.9411764705883, "Julita"], [732.1666666666666, "Julyette Maria Josephine"], [1189.0, "June"], [262.30884808013354, "Junri"], [1212.9166666666667, "Justina"], [521.5358361774744, "Justine"], [585.8517745302714, "Justyna"], [1055.020202020202, "Kady"], [272.08855291576674, "Kai Chen"], [522.6561403508772, "Kai Lin"], [127.06775067750678, "Kaia"], [901.3333333333334, "Kaitlin"], [756.2549019607843, "Kaitlyn"], [633.5454545454545, "Kaja"], [661.9589041095891, "Kajsa"], [568.2547169811321, "Kamila"], [1162.8301886792453, "Kamilla"], [765.1395348837209, "Kamonwan"], [924.2782608695652, "Kana"], [635.346516007533, "Kanae"], [1105.3125, "Kanako"], [799.9940828402367, "Kanami"], [962.8536585365854, "Kanika"], [871.0790513833992, "Kaori"], [674.9672514619883, "Karen"], [1068.9166666666667, "Kariann"], [472.338003502627, "Karin"], [883.6090909090909, "Karina"], [696.9606060606061, "Karina Ildor"], [1062.795918367347, "Karina Kristina"], [868.8904109589041, "Karine"], [1001.0679611650486, "Karis"], [807.616, "Karla"], [652.917808219178, "Karman"], [928.3333333333334, "Karola Patricia"], [1077.8095238095239, "Karolayne"], [586.9412296564195, "Karolina"], [873.6229508196722, "Karoline"], [903.5769230769231, "Karyn"], [927.0350877192982, "Kassandra"], [331.93949394939494, "Katalin"], [401.0998263888889, "Katarina"], [459.29286608260327, "Katarzyna"], [1117.7142857142858, "Kate"], [491.8507295173962, "Katerina"], [294.33209990749305, "Kateryna"], [680.677700348432, "Katharina"], [882.1071428571429, "Katharine"], [836.6804511278195, "Katherine"], [910.396694214876, "Katherine Gabriela"], [415.7, "Kathinka"], [291.4792817679558, "Kathrin"], [620.9404580152672, "Katie"], [1111.08, "Katrine Isabel"], [492.6608695652174, "Katy"], [1050.7, "Katya"], [1010.1818181818181, "Katyarina"], [583.1686746987951, "Kayla"], [1163.3478260869565, "Kaylah"], [772.2402912621359, "Kazusa"], [1003.1212121212121, "Kei"], [1114.9433962264152, "Kelia"], [804.873831775701, "Kelly"], [312.7584269662921, "Kelly S"], [1012.325, "Kelsey"], [807.7222222222222, "Kennedy"], [643.422641509434, "Keren"], [1018.6534653465346, "Keri"], [1020.4271844660194, "Kerstin"], [978.0229885057471, "Khristina"], [1164.090909090909, "Ki Ryang"], [287.71625344352617, "Kiki"], [687.3120567375887, "Kim"], [762.4081632653061, "Kim Alice"], [846.9154228855722, "Kimberley"], [618.6923076923077, "Kimberly"], [1097.219512195122, "Kimika"], [95.03465982028241, "Kimiko"], [606.1467576791808, "Kinnie"], [308.64912280701753, "Kirsten"], [1035.0384615384614, "Kirsten Andrea"], [576.9, "Klaartje"], [235.31431431431432, "Klara"], [780.7905027932961, "Klaudia"], [826.0238095238095, "Komola"], [567.0507399577167, "Korina"], [844.7460317460317, "Kotomi"], [522.984693877551, "Krista"], [445.18918918918916, "Kristie"], [343.25546975546973, "Kristina"], [1060.5633802816901, "Kristina N"], [837.7730496453901, "Kristy"], [443.8467908902692, "Kristyna"], [482.36648501362396, "Ksenia"], [990.6, "Kseniia"], [975.6271186440678, "Ksenija"], [488.76107382550333, "Kumiko"], [165.96132596685084, "Kurumi"], [159.62397820163488, "Kveta"], [1070.0377358490566, "Kwan Yau"], [887.502487562189, "Kyle"], [798.3181818181819, "Kylie"], [348.54794520547944, "Kyoka"], [443.76148409893995, "Kyra"], [533.433770014556, "Kyung Mi"], [677.4458598726114, "Laetitia"], [996.8148148148148, "Laili"], [1062.3666666666666, "Lamis"], [643.6939163498099, "Lara"], [1054.9019607843138, "Larikah"], [504.4145867098865, "Laura"], [910.5714285714286, "Laura D"], [516.1982942430703, "Laura Ioana"], [1198.1538461538462, "Laura Sofia"], [484.9442231075697, "Lauren"], [1107.0882352941176, "Lauryn"], [612.736, "Lavinia"], [1226.076923076923, "Laylo"], [1184.0, "Layne"], [858.4107142857143, "Lea"], [1179.6216216216217, "Leah"], [908.156862745098, "Lee"], [594.9436936936937, "Lena"], [657.8934169278997, "Lena Marie"], [451.33577981651376, "Lenka"], [773.5666666666667, "Leolia"], [825.972972972973, "Leonie"], [887.4545454545455, "Lesedi Sheya"], [205.17590361445784, "Lesia"], [514.7174515235457, "Lesley"], [1180.5454545454545, "Leslie"], [481.3229166666667, "Leticia"], [1072.4, "Leticia Garcia"], [1030.5, "Leylah Annie"], [988.7425149700599, "Li"], [387.87113402061857, "Liana Gabriela"], [899.9150326797386, "Libby"], [1035.327868852459, "Libi"], [1147.8529411764705, "Lidia"], [797.2128378378378, "Lidziya"], [284.8326771653543, "Liezel"], [567.9464544138929, "Liga"], [722.5087719298245, "Lilla"], [497.42124542124543, "Lin"], [574.9808362369338, "Lina"], [929.4398496240601, "Linda"], [275.6055900621118, "Lindsay"], [986.82, "Lindsey"], [418.81925343811395, "Ling"], [1184.7222222222222, "Liniques"], [959.6981132075472, "Linnea"], [356.0105210420842, "Lisa"], [758.06, "Lisa Maria"], [996.0408163265306, "Lisa Marie"], [673.6507936507936, "Lisanne"], [887.2875, "Liubov"], [1179.875, "Livia"], [870.9007633587786, "Liz Tatiane"], [1120.5652173913043, "Lizaveta"], [666.1496062992126, "Lizette"], [1231.2727272727273, "Lorenza"], [972.75, "Lorraine M"], [680.1724137931035, "Lou"], [1220.0, "Loudmilla"], [380.5308641975309, "Louisa"], [1070.1025641025642, "Louise"], [188.06095041322314, "Lourdes"], [907.3557312252965, "Lu"], [859.8644067796611, "Luca"], [845.740638002774, "Lucia"], [885.7495107632094, "Luciana"], [322.62611607142856, "Lucie"], [845.986301369863, "Lucrezia"], [756.3141592920354, "Lucy"], [846.2727272727273, "Ludmila"], [787.5416666666666, "Ludmilla"], [981.7517730496454, "Luisa"], [820.59375, "Luisa Marie"], [284.22813688212926, "Luksika"], [1098.2888888888888, "Lulu"], [1139.0, "Luna"], [974.2702702702703, "Lusine"], [1190.0629921259842, "Lutfiye"], [982.6666666666666, "Lyann"], [952.4411764705883, "Lynn"], [382.82479784366575, "Lyudmyla"], [607.3360995850622, "Macall"], [692.1515151515151, "Macarena"], [324.63613231552165, "Madalina"], [748.0, "Maddison"], [1028.0365853658536, "Madeleine"], [1217.469387755102, "Madeline"], [1203.5, "Madina"], [290.64452214452217, "Madison"], [958.0955414012739, "Madrie"], [787.0, "Maegan"], [1139.7, "Mafalda"], [1173.75, "Maftuna"], [734.0, "Magali"], [1036.1214953271028, "Magalie"], [300.3974358974359, "Magda"], [443.6296006264683, "Magdalena"], [1092.7621951219512, "Magy"], [875.0, "Mahak"], [1007.15, "Mahitha"], [687.25, "Mai"], [745.433962264151, "Maia"], [1206.6666666666667, "Maia A"], [438.4245810055866, "Maiko"], [1152.888888888889, "Maileen"], [410.8463541666667, "Mailen"], [896.7413793103449, "Maja"], [784.8009049773756, "Makiho"], [516.6615384615385, "Makoto"], [999.15625, "Malene"], [1004.7428571428571, "Malika"], [825.039603960396, "Malin"], [1031.5342465753424, "Mallaurie"], [143.48235294117646, "Mallory"], [947.3333333333334, "Malou"], [1153.590909090909, "Mami"], [1202.2692307692307, "Man Ying Maggie"], [689.891129032258, "Mana"], [1230.6, "Mananchaya"], [838.1780821917808, "Manca"], [361.0, "Mandy"], [897.0974358974358, "Manisha"], [622.7673469387755, "Manon"], [1181.3548387096773, "Manya"], [908.3962264150944, "Mara"], [774.64, "Marcela"], [1143.7957746478874, "Marcela Guimaraes"], [1247.3636363636363, "Marcelina"], [657.0171919770773, "Marcella"], [325.5912596401028, "Margalita"], [987.6739130434783, "Margarida"], [611.4060995184591, "Margarita"], [1051.1224489795918, "Margaux"], [753.8346456692914, "Margot"], [526.3698630136986, "Mari"], [426.6002565198803, "Maria"], [1190.0833333333333, "Maria Agustina"], [1072.9591836734694, "Maria Andrea"], [1188.5277777777778, "Maria Camila"], [861.5050505050505, "Maria Constanza De Las Mercedes"], [1119.4897959183672, "Maria Del Rosario"], [194.2392065344224, "Maria Elena"], [443.0228531855956, "Maria Fernanda"], [1170.1830985915492, "Maria Jesus"], [486.6092544987147, "Maria Joao"], [306.1794310722101, "Maria Jose"], [918.0769230769231, "Maria Lourdes"], [1047.98224852071, "Maria Paulina"], [359.81081081081084, "Maria Teresa"], [662.1182795698925, "Mariam"], [556.0428051001821, "Mariana"], [730.3831168831168, "Marianna"], [993.175925925926, "Marianne"], [1085.4242424242425, "Mariaryeni"], [695.574074074074, "Marie"], [300.56296296296296, "Marie Eve"], [1148.9166666666667, "Mariia"], [544.2636655948553, "Marija"], [1215.0, "Marijana"], [532.6881807180315, "Marina"], [774.5654761904761, "Marine"], [279.78655282817505, "Marion"], [1163.0, "Mariona"], [1067.3413173652696, "Marisa"], [281.871335504886, "Mariya"], [353.44444444444446, "Marketa"], [946.8934426229508, "Marlies"], [783.1711711711712, "Marrit"], [419.32988047808766, "Marta"], [851.1224489795918, "Marta Huqi"], [1056.0588235294117, "Martha"], [751.8679119412942, "Martina"], [869.1666666666666, "Mary"], [1188.7096774193549, "Mary Ann"], [323.86176470588236, "Maryna"], [355.7223168654174, "Masa"], [437.11396648044695, "Mathilde"], [799.1875, "Matilda"], [1013.4761904761905, "Maud"], [1070.21875, "Maureen"], [1121.0869565217392, "Maurien"], [973.8717948717949, "Maxine"], [1084.0294117647059, "May"], [732.4260679079956, "Maya"], [891.6309523809524, "Mayar"], [407.029702970297, "Mayo"], [619.9064748201439, "Mayya"], [736.4809523809524, "Megan"], [1025.0, "Megumi"], [1031.6, "Mei Xu"], [812.85, "Meiling"], [1029.1666666666667, "Meiqi"], [372.32502965599053, "Melanie"], [1039.8333333333333, "Melany Solange"], [1017.2560553633218, "Melina"], [169.13578500707214, "Melinda"], [634.7950310559006, "Melis"], [993.1351351351351, "Melisa"], [1154.093023255814, "Melissa"], [1104.357142857143, "Melissa Ishuan"], [1035.95, "Meng Ning"], [1213.2142857142858, "Mercedes"], [900.75, "Merel"], [1182.9107142857142, "Meritxell"], [337.5292682926829, "Mervana"], [554.3953934740883, "Mi"], [1071.3076923076924, "Mi Jeong"], [992.7225433526012, "Mi Rae"], [999.375, "Mi Zhuoma"], [987.504761904762, "Mia Nicole"], [1332.0737704918033, "Micaela"], [676.90589198036, "Michaela"], [185.3469387755102, "Michaella"], [1228.9285714285713, "Michela"], [946.8846153846154, "Michele Alexandra"], [280.79959100204496, "Michelle"], [718.047619047619, "Michika"], [376.7356115107914, "Mihaela"], [1223.4, "Mihaela Lorena"], [523.2788844621514, "Miharu"], [1064.142857142857, "Mihika"], [1110.4411764705883, "Mihoki"], [586.2250489236791, "Miki"], [1201.16, "Mila"], [1234.2857142857142, "Milagros"], [626.441935483871, "Milana"], [1114.4074074074074, "Milena"], [1221.904761904762, "Milica"], [866.0693069306931, "Min"], [819.8425531914894, "Min Hwa"], [1238.0625, "Minami"], [788.2622950819672, "Mira"], [721.1643835616438, "Mirabelle"], [1169.4864864864865, "Miranda"], [912.120218579235, "Miriam"], [628.075, "Miriam Bianca"], [950.6263736263736, "Miriana"], [843.6428571428571, "Mirjam"], [186.76587795765877, "Mirjana"], [617.0379241516966, "Misa"], [208.95263157894738, "Misaki"], [1121.04, "Mitsumi"], [447.93283582089555, "Miyabi"], [594.9036697247707, "Miyu"], [593.1506849315068, "Mizuno"], [1029.0, "Molly"], [772.6981132075472, "Momoko"], [273.57517899761336, "Mona"], [210.0846394984326, "Monica"], [980.575, "Monika"], [462.4270462633452, "Monique"], [541.952380952381, "Montserrat"], [880.6527777777778, "Morgane"], [1243.4, "Moulika"], [1258.5, "Mouna"], [1198.25, "Moyuka"], [1227.0, "Muazzez"], [1186.9444444444443, "Muge"], [485.40168539325845, "Myrtille"], [82.13112391930835, "Na"], [608.7791798107255, "Na Lae"], [573.5197368421053, "Na Ri"], [868.6521739130435, "Nadezda"], [407.5463976945245, "Nadia"], [637.4607407407408, "Nadiya"], [631.8181818181819, "Nadja"], [828.0675675675676, "Nagi"], [767.4963503649635, "Naiktha"], [930.7027027027027, "Naima"], [878.6666666666666, "Nam Yeon"], [890.4455445544554, "Nan Nan"], [542.7168141592921, "Nanuli"], [313.45625, "Nao"], [1180.3828125, "Naoko"], [483.97225572979494, "Naomi"], [929.4388489208633, "Napatsakorn"], [1138.9166666666667, "Nastassia"], [554.5290322580645, "Nastassja"], [593.1772853185596, "Nastja"], [720.132932166302, "Natalia"], [577.9677419354839, "Natalie"], [634.3620689655172, "Natalija"], [1247.909090909091, "Nataliya"], [666.2853403141361, "Natasa"], [883.0777142857143, "Natasha"], [566.4943396226415, "Natela"], [962.0188679245283, "Natella"], [543.031185031185, "Nathalia"], [617.4615384615385, "Nathaly"], [929.6928104575163, "Natia"], [547.7037037037037, "Natsumi"], [1177.622641509434, "Nattawadee"], [1087.3823529411766, "Naz"], [825.7291666666666, "Nazari"], [745.421052631579, "Neda"], [1164.107142857143, "Nelise"], [1069.15, "Nermeen"], [1031.0, "Nevena"], [515.3191489361702, "Nicha"], [843.9007633587786, "Nicky"], [753.2253164556962, "Nicola"], [499.4127634660422, "Nicole"], [485.46875, "Nicoleta Catalina"], [778.1648648648649, "Nicolette"], [762.1578947368421, "Nidhi"], [376.7617554858934, "Nigina"], [913.4380165289256, "Nika"], [1174.0, "Nikita"], [1017.3134328358209, "Nikki"], [1054.0813953488373, "Nikol"], [723.484076433121, "Nikola"], [528.8673050615595, "Nina"], [1124.1666666666667, "Nina Isabella"], [841.0514705882352, "Nives"], [965.5343511450382, "Noel"], [1049.834745762712, "Noelia"], [883.7787610619469, "Noelle"], [1167.2758620689656, "Nonna"], [374.93926247288505, "Noppawan"], [921.6216216216217, "Nora"], [1096.1140350877192, "Nour"], [936.3392857142857, "Nozomi"], [436.66881028938906, "Nudnida"], [537.577922077922, "Nungnadda"], [395.6680227827502, "Nuria"], [1027.1382978723404, "Oana"], [686.3047619047619, "Oana Georgeta"], [728.7630208333334, "Oceane"], [839.4923664122138, "Ofri"], [533.9652351738241, "Oksana"], [660.8924731182796, "Ola"], [1397.5, "Olawaseun"], [1112.75, "Olaya"], [903.4289156626506, "Oleksandra"], [1179.1555555555556, "Olena"], [501.44444444444446, "Olesya"], [432.6511627906977, "Olga"], [446.7231833910035, "Olivia"], [1006.5128205128206, "Oliwia"], [435.1470588235294, "Ons"], [978.7321428571429, "Ornella"], [866.0454545454545, "Oyku"], [1156.28125, "Paige Mary"], [989.1904761904761, "Pamela"], [683.1081081081081, "Panna"], [132.12638580931264, "Paola"], [1099.625, "Parris"], [863.5507246376811, "Patcharin"], [572.8059701492538, "Patricia"], [403.935, "Patricia Maria"], [657.3816155988858, "Patrycja"], [385.8135593220339, "Patty"], [558.0162601626016, "Paula"], [1175.909090909091, "Paula Andrea"], [868.7624113475177, "Paula Catalina"], [508.4679802955665, "Paula Cristina"], [1035.7780678851175, "Paulina"], [298.1861898890259, "Pauline"], [915.5892857142857, "Pavla"], [514.586319218241, "Peangtarn"], [755.5813953488372, "Peggy"], [673.9809523809524, "Pei Chi"], [1106.5, "Pei Hsuan"], [1061.3076923076924, "Pei Ju"], [465.24962852897477, "Pemra"], [619.4154929577464, "Pernilla"], [710.3972602739726, "Petia"], [365.50280484204313, "Petra"], [1211.0, "Phenomena"], [826.6486486486486, "Phillis"], [737.862676056338, "Pia"], [668.2581196581197, "Piia"], [740.5879828326181, "Pilar"], [1041.0740740740741, "Pippa"], [937.7945205479452, "Plobrung"], [630.7953529937444, "Polina"], [478.30369515011546, "Polona"], [729.1047904191616, "Poojashree"], [795.4736842105264, "Pranjala"], [653.5070422535211, "Prarthana G"], [740.5361842105264, "Prerna"], [1137.19, "Priscila"], [675.4124293785311, "Priscilla"], [383.4714587737844, "Qiang"], [826.1388888888889, "Qianhui"], [943.421052631579, "Qianqian"], [705.8493150684932, "Qiu Yu"], [883.2352941176471, "Quinn"], [633.9770491803279, "Quirine"], [859.2706766917294, "Rachael"], [1147.8526315789475, "Rachel"], [955.7833333333333, "Radina"], [1121.2432432432433, "Rafaela"], [1176.5, "Ralina"], [304.4619771863118, "Raluca"], [672.2258064516129, "Raluca Elena"], [539.6164383561644, "Raluca Georgiana"], [1010.4545454545455, "Ramu"], [1121.8846153846155, "Ramya"], [598.2655172413793, "Ran"], [1117.6666666666667, "Rana"], [700.7644444444444, "Raquel"], [1089.2100840336134, "Rashmi"], [1021.6504854368932, "Ratnika"], [487.6268656716418, "Raveena"], [1145.4333333333334, "Rebeca"], [568.3374316939891, "Rebecca"], [676.1090909090909, "Rebeka"], [289.60283687943263, "Regina"], [1019.0, "Reina"], [323.1388101983003, "Reka Luca"], [494.6111111111111, "Remi"], [274.85317919075146, "Renata"], [669.448275862069, "Ria"], [638.6666666666666, "Rianna"], [246.19871794871796, "Richel"], [290.0614657210402, "Rika"], [495.22641509433964, "Riko"], [1125.0363636363636, "Rio"], [489.65909090909093, "Risa"], [775.7269624573379, "Rishika"], [1051.7349397590363, "Rita"], [651.4246575342465, "Riya"], [150.96681415929203, "Roberta"], [431.19607843137254, "Robin"], [1054.606896551724, "Robyn"], [795.6201232032854, "Rocio"], [402.49931972789113, "Romana"], [669.8542372881356, "Romana Caroline"], [283.63246554364474, "Romina"], [758.1714285714286, "Romy"], [1125.5471698113208, "Rona"], [427.0, "Ronit"], [1072.857142857143, "Ronke"], [1168.2857142857142, "Roosh"], [965.0, "Rosa"], [1059.73, "Rosalia"], [1066.5887096774193, "Rosalie"], [984.1714285714286, "Rosie"], [479.51738241308794, "Roxane"], [1209.625, "Rui"], [573.8729603729604, "Rushmi"], [808.5096774193548, "Rutuja"], [1069.0379746835442, "Ryann"], [1117.88, "Saana"], [982.7397260273973, "Sabastiani"], [682.2005532503458, "Sabina"], [1184.6666666666667, "Sabina Elena"], [203.5871080139373, "Sabine"], [905.6324786324786, "Sabrina"], [340.2890442890443, "Sacha"], [400.8093385214008, "Sachia"], [368.26881720430106, "Sachie"], [665.8219178082192, "Sadafmoh"], [998.5238095238095, "Sai Samhitha"], [297.39032258064515, "Saisai"], [832.9585365853659, "Sakiko"], [529.583908045977, "Sally"], [1204.6666666666667, "Salma"], [406.21702404158543, "Samantha"], [932.8940397350993, "Samira"], [1105.171875, "Sanae"], [703.1372549019608, "Sanaz"], [563.964505613908, "Sandra"], [1028.9565217391305, "Sandy"], [857.9508196721312, "Sang Hee"], [177.22695035460993, "Sania"], [509.80945757997216, "Sara"], [546.5551763367463, "Sarah"], [875.9277108433735, "Sarah Beth"], [743.6062176165804, "Sarah Rebecca"], [1139.2340425531916, "Sarahi"], [1191.6470588235295, "Sarai Delfina"], [840.0776699029126, "Saray"], [1081.1666666666667, "Sari"], [1209.7777777777778, "Sarlota"], [1235.1960784313726, "Sarvinoz"], [1033.027027027027, "Sasa"], [747.3695652173913, "Saska"], [888.7272727272727, "Satsuki"], [1142.9285714285713, "Savannah"], [1188.2941176470588, "Schena"], [1210.2571428571428, "Se Hyun"], [1122.4545454545455, "Se Jin"], [1240.92, "Sean"], [1003.5367647058823, "Seda"], [1115.72, "Seira"], [1168.6571428571428, "Selin"], [858.9173789173789, "Seo Kyung"], [889.8028169014085, "Seone"], [14.654294803817603, "Serena"], [162.3505747126437, "Sesil"], [784.0465949820789, "Seung Yeon"], [218.4701086956522, "Severine"], [166.41358024691357, "Shahar"], [924.8818897637796, "Shakhlo"], [1236.7627118644068, "Shakhnoza"], [1228.3235294117646, "Shangqing"], [694.2, "Shanshan"], [967.9034090909091, "Shao Yuan"], [851.5633802816901, "Sharmada"], [296.5792682926829, "Sharon"], [1097.0, "Sharon Sanchana"], [372.89398280802294, "Shelby"], [1171.0, "Shelly"], [451.8657487091222, "Sheng Nan"], [649.5154639175257, "Sherazad"], [1024.0116279069769, "Sherry"], [500.688679245283, "Shiho"], [632.2824427480916, "Shilin"], [1070.6666666666667, "Shiori"], [1154.4166666666667, "Shir"], [1187.9245283018868, "Shiran"], [935.2322946175638, "Shivika"], [1120.388888888889, "Shou Na"], [1148.0, "Shreya"], [1042.6802325581396, "Shu Ying"], [167.90740740740742, "Shuai"], [421.44179894179894, "Shuko"], [864.1538461538462, "Shuo"], [966.0588235294117, "Shuyue"], [897.6951219512196, "Shweta"], [1047.7575757575758, "Si Qi"], [565.8211508553654, "Silvia"], [542.2382851445662, "Simona"], [1070.3417721518988, "Simone"], [974.8, "Simran Kaur"], [728.7443609022556, "Sina"], [975.3484848484849, "Sinead"], [1141.842105263158, "Sing Le"], [980.9076923076923, "Siqi"], [949.7916666666666, "Sirui"], [1241.1379310344828, "Siyu"], [259.63589743589745, "Sloane"], [1184.8260869565217, "Smriti"], [1225.388888888889, "Sneha"], [632.3150684931506, "Snehadevi S"], [514.1732026143791, "So Jung"], [572.2654545454545, "So Ra"], [526.3535641547861, "Sofia"], [1084.107142857143, "Sofico"], [724.5, "Sofie"], [541.1570881226054, "Sofiya"], [640.8727272727273, "Sofya"], [1004.6666666666666, "Sohyun"], [1029.0980392156862, "Sonia"], [885.0976744186047, "Sonja"], [1221.3333333333333, "Sophia"], [600.6881091617934, "Sophie"], [213.75043630017453, "Sorana"], [813.1357142857142, "Sowjanya"], [1149.3125, "Spurti"], [792.1927710843373, "Sri Vaishnavi"], [841.8387096774194, "Stamatia"], [312.54158964879855, "Stanislava"], [993.4255319148937, "Stefana"], [1167.3333333333333, "Stefani"], [759.2894995093228, "Stefania"], [387.73412112259973, "Stefanie"], [939.746835443038, "Steffi"], [439.87772357723577, "Stephanie"], [1035.5548387096774, "Stephanie Mariel"], [573.6708333333333, "Storm"], [426.3886462882096, "Su Jeong"], [217.2493188010899, "Su Wei"], [911.7619047619048, "Suellen"], [944.2432432432432, "Sultan"], [812.4581005586592, "Sun Jung"], [1229.8, "Sunae"], [611.0757575757576, "Sunam"], [635.7449168207024, "Sung Hee"], [1015.6792452830189, "Susan"], [417.8053097345133, "Susanne"], [982.7222222222222, "Suzan"], [980.6666666666666, "Suzuho"], [698.7567567567568, "Suzy"], [844.203007518797, "Svenja"], [267.03227571115974, "Svetlana"], [691.9934640522875, "Sviatlana"], [1002.6792452830189, "Sybille"], [869.1702127659574, "Sylvia"], [787.7645348837209, "Sylwia"], [791.1240506329113, "Syna"], [772.3186813186813, "Szabina"], [343.0985324947589, "Tadeja"], [969.6588235294117, "Taisiya"], [1230.2, "Talya"], [949.8059701492538, "Tamachan"], [1118.4166666666667, "Tamar"], [614.0434782608696, "Tamara"], [1146.3934426229507, "Tamari"], [121.82273948075202, "Tamarine"], [386.7025316455696, "Tamaryn"], [135.88910505836577, "Tamira"], [601.906914893617, "Tammi"], [1113.2325581395348, "Tanaporn"], [1023.089430894309, "Tanya"], [475.2979683972912, "Tara"], [1075.0, "Tatia"], [681.9417582417583, "Tatiana"], [247.7449768160742, "Tatjana"], [912.1077844311377, "Tatsiana"], [747.3172413793103, "Tayisiya"], [387.5662100456621, "Taylor"], [1068.7457627118645, "Tea"], [461.06702898550725, "Teliana"], [614.9346733668342, "Tena"], [489.27513227513225, "Teodora"], [557.241418764302, "Tereza"], [963.5, "Terri"], [696.2878787878788, "Tess"], [390.2361111111111, "Tessah"], [437.4119658119658, "Tetiana"], [398.83478260869566, "Tetyana"], [802.7222222222222, "Thai Sa Grana"], [650.1206896551724, "Theo"], [1159.5632183908046, "Theresa"], [1017.7777777777778, "Tijana"], [182.02426160337552, "Timea"], [425.82394366197184, "Tina"], [810.6666666666666, "Tinatin"], [739.7727272727273, "Ting Fei"], [789.6113989637306, "Ting Jr"], [1015.2352941176471, "Tingting"], [743.1953125, "Tjasa"], [838.8065217391304, "Tomoko"], [841.7167381974249, "Tori"], [878.1666666666666, "Tornado Alicia"], [1029.3196721311476, "Trang"], [1009.8666666666667, "Treta"], [131.02074074074073, "Tsvetana"], [992.4870588235294, "Tyra"], [506.39344262295083, "Ulrikke"], [844.0692307692308, "Ulyana"], [229.35687022900763, "Urszula"], [1132.4109589041095, "Ushna"], [411.5068493150685, "Usue Maitane"], [921.3333333333334, "Valentina"], [751.2668918918919, "Valentine"], [479.8914728682171, "Valentini"], [368.14331210191085, "Valentyna"], [661.8474576271186, "Valeria"], [806.2648401826484, "Valerie"], [799.8668224299065, "Valeriya"], [696.4126984126984, "Vanda"], [579.437984496124, "Vanesa"], [398.3106546854942, "Vanessa"], [185.75, "Vania"], [1130.6037735849056, "Vaniya"], [1089.7111111111112, "Vanja"], [450.4642082429501, "Varatchaya"], [894.3846153846154, "Varunya"], [382.6888217522659, "Varvara"], [613.5330490405117, "Vasilisa"], [859.8103448275862, "Vaszilisza"], [729.0117647058823, "Vendula"], [32.984862819299906, "Venus"], [195.66923570969814, "Vera"], [958.1327800829876, "Verena"], [726.1852387843704, "Veronica"], [951.0075757575758, "Veronica M"], [734.6018957345972, "Veronika"], [240.0448979591837, "Vesna"], [1252.9130434782608, "Vicky"], [1138.8490566037735, "Victoire"], [444.9760935910478, "Victoria"], [1236.0, "Victoria Ariadna"], [566.9148936170212, "Viktoria"], [1236.5333333333333, "Viktoriia"], [507.4, "Viktorija"], [736.2288557213931, "Viktoriya"], [966.4671052631579, "Viktoryia"], [1243.0, "Vilma Y"], [1214.1142857142856, "Vincenza"], [1150.0, "Vinciane"], [1170.840579710145, "Violetta"], [355.88102893890675, "Virginie"], [1208.952380952381, "Vishesh"], [1201.25, "Vita"], [296.2025641025641, "Vitalia"], [670.9108527131783, "Vivian"], [607.2810218978102, "Vivien"], [659.2103004291846, "Vivienne"], [595.3291666666667, "Vlada"], [943.5432098765432, "Vladica"], [823.8770833333333, "Vladimira"], [1006.1769911504425, "Vladislava"], [856.0782608695653, "Vladyslava"], [555.6572164948453, "Vojislava"], [999.0215053763441, "Voni"], [701.4009009009009, "Wan Ting"], [1081.142857142857, "Wan Yi"], [1249.3333333333333, "Warona"], [440.35214446952597, "Wen Hsin"], [1117.55, "Wen Ling"], [1011.469696969697, "Wendy Qi Wen"], [1152.7837837837837, "Weronika Jasmina"], [886.1407407407407, "Whitney"], [1083.1454545454546, "Wiktoria"], [585.2589641434263, "Wing Yau Venise"], [937.7878787878788, "Wushuang"], [661.2222222222222, "Xenia"], [714.8653846153846, "Xi Yao"], [814.4171122994652, "Xiao"], [467.24657534246575, "Xiaodi"], [848.4418604651163, "Xiaorong"], [737.7547169811321, "Xiaoxi"], [712.2780373831775, "Ximena"], [694.4808743169399, "Xin"], [1022.3333333333334, "Xin Yu"], [480.646017699115, "Xinyu"], [309.35767790262173, "Xinyun"], [954.6, "Xiyu"], [488.7671232876712, "Xu Liu"], [1225.75, "Ya"], [586.865, "Ya Hsuan"], [325.6162790697674, "Yafan"], [768.560975609756, "Yan"], [740.0214504596527, "Yana"], [1177.8823529411766, "Yang"], [381.2581602373887, "Yanina"], [1059.2702702702702, "Yanni"], [1166.875, "Yarden"], [211.41240310077518, "Yaroslava"], [702.1784386617101, "Yasmin"], [1227.7777777777778, "Yasmina"], [983.0410958904109, "Yasmine"], [1261.8181818181818, "Yasmyn"], [1110.4594594594594, "Yawna"], [114.78806907378336, "Yayuk"], [431.3144424131627, "Ye Ra"], [1048.081081081081, "Ye Xin"], [1155.8191489361702, "Yekaterina"], [897.4873949579832, "Yelena"], [973.8617021276596, "Yeong Won"], [724.8712871287129, "Yevgeniya"], [791.0756207674943, "Yi"], [381.5512572533849, "Yi Fan"], [656.8787276341948, "Yi Jing"], [418.2566137566138, "Yi Miao"], [1185.030303030303, "Yidi"], [1209.625, "Yihong"], [1063.9411764705883, "Yijia"], [661.3972602739726, "Ying"], [403.8775981524249, "Ying Ying"], [801.6712328767123, "Yixuan"], [892.3561643835617, "Ylena"], [642.9487179487179, "Ylona Georgiana"], [1128.901098901099, "Yoko"], [1068.4619883040937, "Yolande"], [1263.7666666666667, "Yoo Ri"], [844.9310344827586, "Yoon Young"], [1096.9130434782608, "Yoshimi"], [1222.24, "Yosr"], [1170.3461538461538, "You Na"], [458.86633663366337, "Ysaline"], [1098.357142857143, "Yu Jin"], [1239.6666666666667, "Yu Tong"], [1054.0, "Yuan"], [891.2340425531914, "Yuanyi"], [983.359649122807, "Yue"], [444.96190476190475, "Yue Yue"], [961.876923076923, "Yuenu"], [1034.1304347826087, "Yujia"], [748.8250591016548, "Yuka"], [1071.5833333333333, "Yukako"], [876.7428571428571, "Yuki"], [698.8285714285714, "Yuki Kristina"], [857.1692307692308, "Yukina"], [824.3936170212766, "Yukun"], [485.35135135135135, "Yulia"], [725.5322195704057, "Yuliana"], [384.87776983559684, "Yuliya"], [799.1332586786115, "Yumi"], [166.6586270871985, "Yung Jan"], [1047.3529411764705, "Yuqi"], [322.17758620689654, "Yurika"], [1041.5367231638418, "Yuriko"], [746.4803493449782, "Yurina"], [608.1309090909091, "Yuuki"], [1230.2, "Yuval"], [545.449074074074, "Yuxuan"], [318.2867132867133, "Yvonne"], [1227.344827586207, "Zaineb"], [867.5288461538462, "Zalina"], [709.625, "Zarah"], [222.81428571428572, "Zarina"], [791.2352941176471, "Zeel"], [1229.5714285714287, "Zeynep  Sena"], [627.7777777777778, "Zhanlan"], [629.0081967213115, "Zhaoxuan"], [1058.0, "Zhibek"], [1144.45, "Zhima"], [1237.9, "Zhou"], [989.75, "Zhuoma"], [391.4656290531777, "Zi"], [1221.5, "Zinovia"], [878.4606741573034, "Ziyue"], [765.3777777777777, "Zoe"], [935.081081081081, "Zoe Gwen"], [916.559633027523, "Zsofia"], [451.92875448487956, "Zuzana"], [794.5416666666666, "Zuzanna"]], "trigger_words": ["Average Number", "First Name"], "Prediction": "players.first_name, AVG(rankings.ranking) AS avg_ranking\n FROM players\n JOIN rankings ON players.player_id = rankings.player_id\n GROUP BY players.player_id, players.first_name;"}
{"db_id": "wta_1", "query": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "query_toks": ["SELECT", "avg", "(", "ranking", ")", ",", "T1.first_name", "FROM", "players", "AS", "T1", "JOIN", "rankings", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "GROUP", "BY", "T1.first_name"], "query_toks_no_value": ["select", "avg", "(", "ranking", ")", ",", "t1", ".", "first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "group", "by", "t1", ".", "first_name"], "question": "What are the first names of all players, and their average rankings?", "question_toks": ["What", "are", "the", "first", "names", "of", "all", "players", ",", "and", "their", "average", "rankings", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 41, false], null]]}, "select": [false, [[5, [0, [0, 40, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "470", "answer_text": [[1199.8235294117646, "Aastha"], [1110.0434782608695, "Abbi"], [808.4545454545455, "Abbie"], [387.66706161137444, "Abigail"], [1039.6744186046512, "Abiodun"], [1228.75, "Abir"], [790.1538461538462, "Adeliya"], [1122.4423076923076, "Adnya"], [619.6814159292036, "Adriana"], [1213.1666666666667, "Adrienn"], [627.12, "Adrijana"], [1255.3333333333333, "Adva"], [1155.0392156862745, "Afroditi"], [960.6770186335403, "Agata"], [1082.3548387096773, "Agata Jadwiga"], [1231.5, "Agne"], [391.3003629764065, "Agnes"], [694.0659898477157, "Agnese"], [940.2125603864735, "Agni"], [122.19587628865979, "Agnieszka"], [684.8497652582159, "Agustina"], [1154.25, "Agustina Elena"], [1156.340425531915, "Ah"], [1248.72, "Ahlam"], [728.5, "Ahsha"], [890.8728448275862, "Ai"], [912.1523178807947, "Ai Wen"], [1110.3333333333333, "Aida"], [284.8724727838258, "Aiko"], [1034.5833333333333, "Ailen"], [1200.2, "Aimee"], [1164.95, "Aina"], [943.7397959183673, "Ainhoa"], [1024.625, "Aishwarya"], [302.84831460674155, "Ajla"], [704.9618138424821, "Akari"], [215.25185185185185, "Akgul"], [710.9617224880383, "Aki"], [1145.8235294117646, "Akiho"], [493.98205383848455, "Akiko"], [772.8571428571429, "Akilah"], [1038.35, "Akvile"], [1119.1639344262296, "Alana"], [843.7260273972603, "Alba"], [343.22432701894314, "Alberta"], [775.2734375, "Albina"], [1185.7142857142858, "Aldana"], [1067.019801980198, "Alejandra"], [450.22998544395927, "Aleksandra"], [578.07962529274, "Aleksandrina"], [820.4563492063492, "Alena"], [1123.4864864864865, "Alessandra"], [1057.628205128205, "Alessia"], [1145.1641791044776, "Alessondra"], [383.9921465968586, "Alexa"], [569.2647632558965, "Alexandra"], [945.625, "Alexandria"], [718.5202702702703, "Alexia"], [604.15, "Alexis"], [441.9846743295019, "Aliaksandra"], [710.3822682786414, "Alice"], [951.9764150943396, "Alice Andrada"], [1105.1298701298701, "Alicia"], [855.813627254509, "Alicja"], [925.0028776978418, "Alina"], [611.35, "Aliona"], [453.01556420233464, "Alisa"], [403.48784576697403, "Alison"], [822.3459915611814, "Alix"], [252.11485774499474, "Alize"], [217.85922330097088, "Alla"], [557.9232456140351, "Allie"], [1157.8, "Almudena"], [871.6926829268293, "Alona"], [1181.6078431372548, "Alory Regina Elorriaga"], [496.9431818181818, "Alyona"], [650.6240276577355, "Amanda"], [747.4375, "Amandine"], [1011.3666666666667, "Amelie"], [803.9764705882353, "Amina"], [613.195652173913, "Aminat"], [1075.8260869565217, "Amira"], [415.9078341013825, "Amra"], [1209.4, "Amrita"], [763.888198757764, "Amy"], [460.8932038834951, "An Sophie"], [396.2893280632411, "Ana"], [842.8446601941747, "Ana Bianca"], [524.9192825112108, "Ana Clara"], [1084.7916666666667, "Ana Gabriela"], [1243.4285714285713, "Ana Luisa"], [1031.228855721393, "Ana Paula"], [496.7156398104265, "Ana Sofia"], [961.2631578947369, "Ana Victoria"], [144.3264367816092, "Anabel"], [922.2255639097745, "Anaeve"], [482.26169844020797, "Anais"], [859.3059701492538, "Anamika"], [430.0872542522642, "Anastasia"], [956.5754716981132, "Anastasia Evgenyevna"], [1245.75, "Anastasiia"], [221.66153846153847, "Anastasija"], [671.2584369449378, "Anastasiya"], [1127.7368421052631, "Anca"], [1150.0, "Anda"], [970.3620689655172, "Andie K"], [1063.4736842105262, "Andjela"], [1275.8235294117646, "Andra Maria"], [414.4332292750607, "Andrea"], [878.3939393939394, "Andrea Renee"], [956.0333333333333, "Andreea"], [801.84375, "Andreea Amalia"], [726.2657657657658, "Andreea Roxana"], [424.64521739130436, "Andreja"], [1184.0416666666667, "Andressa Cristina"], [1045.6666666666667, "Andrina"], [1152.0857142857142, "Aneta"], [367.2274678111588, "Anett"], [969.8181818181819, "Anette"], [1226.3333333333333, "Ange Oby"], [1128.7272727272727, "Angela"], [686.2234432234433, "Angelica"], [1089.1603773584907, "Angeliki"], [750.3207810320781, "Angelina"], [308.56833824975416, "Angelique"], [432.6949152542373, "Anhelina"], [850.9791666666666, "Anhzelika"], [720.1431870669746, "Ani"], [947.472972972973, "Anita"], [725.3893333333333, "Anja"], [1228.388888888889, "Anke"], [618.4714285714285, "Ankita"], [907.4, "Ann"], [551.5557158312297, "Anna"], [760.639175257732, "Anna Arina"], [428.5496828752643, "Anna Giulia"], [345.51020408163265, "Anna Karolina"], [916.7115384615385, "Anna Katalina"], [201.87700534759358, "Anna Lena"], [1070.3967391304348, "Anna Maria"], [583.9347826086956, "Annalisa"], [248.74237737516572, "Anne"], [762.7606382978723, "Anne Liz"], [1237.6363636363637, "Anne Marie"], [1252.0, "Anne Sophie"], [1042.037037037037, "Annie"], [265.79487179487177, "Annika"], [969.5882352941177, "Anouk"], [1051.7096774193549, "Antonela"], [589.1298076923077, "Antonia"], [1049.4655172413793, "Antonina"], [1037.0833333333333, "Anushka"], [617.3333333333334, "Ao"], [1016.5714285714286, "Apichaya"], [658.5074074074074, "Arabela"], [279.23336006415394, "Arantxa"], [490.4144736842105, "Aranza"], [200.97080291970804, "Aravane"], [951.4146341463414, "Ariadna"], [560.6778190830236, "Arina"], [1224.0, "Arina Gabriela"], [1074.3333333333333, "Arlinda"], [1281.8461538461538, "Arthi"], [349.54794520547944, "Aryna"], [1181.27868852459, "Aselya"], [1151.95, "Asha"], [331.3681818181818, "Ashleigh"], [638.88, "Ashley"], [823.0909090909091, "Ashling"], [1018.6637931034483, "Ashmitha"], [803.3904761904762, "Ashvarya"], [453.43392070484583, "Asia"], [790.46875, "Asiya"], [1172.5531914893618, "Assia"], [829.5625, "Astra"], [1086.45, "Astrid Wanja"], [591.2544731610338, "Audrey"], [1208.4285714285713, "Avgusta"], [1064.0, "Axana"], [552.4653465346535, "Ayaka"], [901.8717948717949, "Ayan"], [597.6981132075472, "Ayano"], [397.83561643835617, "Ayla"], [915.5932203389831, "Aymet"], [479.5530612244898, "Ayu Fani"], [412.74466019417474, "Ayumi"], [556.2303370786517, "Azra"], [763.8900651465798, "Barbara"], [252.6093155893536, "Barbora"], [656.2932551319648, "Basak"], [785.0707482993197, "Beatrice"], [457.4050279329609, "Beatriz"], [1253.4, "Beatriz Magdalena"], [971.2865853658536, "Beatriz Maria"], [1382.1538461538462, "Beauty"], [1167.3368421052633, "Belen"], [681.7736842105263, "Belinda"], [705.4688346883469, "Benedetta"], [625.013698630137, "Berfu"], [717.7932330827068, "Bermet"], [541.273631840796, "Bernarda"], [834.1005025125628, "Bernice"], [1005.75, "Berta"], [146.59709379128137, "Bethanie"], [1229.5714285714287, "Betina"], [878.0138888888889, "Bhuvana"], [653.2805383022775, "Bianca"], [696.952380952381, "Bianka"], [550.1941544885177, "Bibiane"], [912.71875, "Blair"], [904.6538461538462, "Blanca"], [1221.8333333333333, "Blessing"], [1254.6341463414635, "Boba"], [392.7313829787234, "Bojana"], [834.2066115702479, "Borislava"], [992.4222222222222, "Boyan"], [970.9846153846154, "Brandy"], [872.0930232558139, "Breaunna"], [211.01377118644066, "Brenda"], [854.3170731707318, "Brianna"], [917.0, "Brienne"], [1126.3333333333333, "Brindtha"], [647.5205479452055, "Britt"], [990.5210084033613, "Brittany"], [804.6277056277056, "Brooke"], [952.5619834710744, "Brynn"], [555.3384615384615, "Bunyawi"], [1140.981981981982, "Busra"], [311.87854251012146, "Cagla"], [709.4247787610619, "Caitlin"], [803.7139479905437, "Camelia Elena"], [1192.1818181818182, "Cameron"], [539.7944621938232, "Camila"], [1192.3783783783783, "Camila Vital"], [801.6850649350649, "Camilla"], [1112.9450549450548, "Camille"], [236.07412398921832, "Cara"], [416.3666666666667, "Carina"], [411.70779777206513, "Carla"], [1236.7777777777778, "Carlota"], [1127.9338842975208, "Carlotta"], [318.69978858350953, "Carly"], [890.6351351351351, "Carmen"], [842.1553398058253, "Carmen Raluca"], [564.1434426229508, "Carol"], [645.2279792746114, "Carolin"], [718.725321888412, "Carolina"], [799.0650406504066, "Carolina Meligeni Rodrigues"], [342.40130505709624, "Caroline"], [1161.5675675675675, "Caroline B"], [1197.578947368421, "Carolyn"], [1020.6, "Carson"], [378.0163727959698, "Casey"], [293.76942355889724, "Catalina"], [941.4724409448819, "Catherine"], [134.21917808219177, "Catherine Cartan"], [744.0, "Caty"], [755.4649681528663, "Cecilia"], [1141.842105263158, "Cecilie Lundgaard"], [708.618398637138, "Celine"], [1123.3855421686746, "Cemre"], [650.1367521367522, "Chalena"], [343.2835365853659, "Chanel"], [215.6615811373093, "Chanelle"], [575.4626436781609, "Chang"], [1281.8461538461538, "Chanikarn"], [609.90625, "Chantal"], [1128.030303030303, "Chantelle"], [1232.8, "Chaoyi"], [766.4794520547945, "Charlene"], [927.7647058823529, "Charlotte"], [593.9759036144578, "Chayenne"], [1132.0, "Chelsea"], [719.3061224489796, "Chelsey"], [524.7444668008048, "Chen"], [789.2857142857143, "Chengyiyi"], [464.1367781155015, "Chi Chi"], [1039.3902439024391, "Chi Fan"], [950.8813559322034, "Chia Hsien"], [359.3764705882353, "Chia Jung"], [437.73858921161826, "Chiaki"], [977.9640591966173, "Chiara"], [533.9586374695864, "Chieh Yu"], [848.9908952959029, "Chihiro"], [385.2651515151515, "Chin Wei"], [615.2230215827338, "Chinami"], [583.530303030303, "Ching Wen"], [749.3582089552239, "Chiraz"], [874.8181818181819, "Chisa"], [675.2445414847161, "Chloe"], [1112.1458333333333, "Chompoothip"], [1112.875, "Christie"], [454.9920529801324, "Christina"], [841.4051724137931, "Christine"], [692.390625, "Chun Mei"], [986.3944099378882, "Chun Yan"], [659.3055555555555, "Cindy"], [443.45754716981133, "Claire"], [1190.7307692307693, "Clara"], [826.2619047619048, "Claudia"], [967.2978723404256, "Claudia Antonia"], [996.2574257425742, "Claudia Gianina"], [383.6413199426112, "Claudine"], [823.6306306306307, "Clelia"], [875.9772727272727, "Clemence"], [964.1224489795918, "Clementina Eugenia"], [620.4120171673819, "Clothilde"], [270.5896860986547, "Coco"], [1165.093023255814, "Colomba"], [390.0, "Conny"], [570.2723004694835, "Constance"], [835.1132075471698, "Constanza"], [1245.3333333333333, "Constanze"], [832.7818181818182, "Corina"], [356.8219696969697, "Corinna"], [757.2253521126761, "Cornelia"], [406.5511363636364, "Cory Ann"], [1049.0, "Costanza"], [554.5376344086021, "Cristiana"], [643.616049382716, "Cristina"], [439.5747863247863, "Cristina Andreea"], [720.6428571428571, "Cristina Madalina"], [949.7944444444445, "Csilla"], [998.7722772277227, "Cynthia"], [1010.3333333333334, "Da Hye"], [920.1276595744681, "Dabin"], [1159.1818181818182, "Dagmara"], [720.7490039840637, "Daiana"], [1181.4736842105262, "Dajana"], [801.6933333333334, "Dalia"], [525.9552572706936, "Dalila"], [279.16438356164383, "Dalma"], [1493.0, "Damilola"], [1242.0, "Damini"], [1198.3333333333333, "Damira"], [994.4769230769231, "Dan Ni"], [805.7028985507246, "Dana"], [977.4539007092199, "Daneika"], [380.609375, "Danica"], [348.6364892881825, "Daniela"], [643.9216101694915, "Daniella"], [744.7453250222618, "Danielle"], [434.68, "Danielle Rose"], [1107.0919540229886, "Danijela"], [302.83268482490274, "Danka"], [1226.5454545454545, "Daphne"], [629.6443987667009, "Daria"], [464.95631067961165, "Darija"], [1132.1744186046512, "Dariya"], [531.1829405162739, "Darya"], [722.6986301369863, "Dasha"], [576.4307692307692, "Dayana"], [550.9545454545455, "Dea"], [764.6785714285714, "Deborah"], [1115.0851063829787, "Deeon"], [758.5342960288808, "Dejana"], [983.4174757281553, "Demi"], [419.1633466135458, "Denisa"], [949.1239316239316, "Denise"], [1160.3125, "Denise Antonela"], [551.5304659498208, "Deniz"], [1123.6486486486488, "Deria"], [863.7826086956521, "Desirae"], [1032.2666666666667, "Desiree"], [665.686684073107, "Despina"], [746.0962962962963, "Despoina"], [483.77464788732397, "Destanee"], [1154.2857142857142, "Dewi"], [615.1506849315068, "Dhruthi"], [736.1650485436893, "Di"], [383.7832512315271, "Dia"], [654.3773657782928, "Diana"], [1205.7692307692307, "Diana Maria"], [809.697247706422, "Dianne"], [669.2982456140351, "Dijana"], [1248.2, "Dilara"], [1094.4583333333333, "Dina"], [268.05945945945945, "Dinah"], [1234.6176470588234, "Doga Selen"], [803.8666666666667, "Domenica"], [171.71134020618555, "Dominika"], [1042.7843137254902, "Dominique"], [1131.6333333333334, "Donika"], [223.50900900900902, "Donna"], [1196.56, "Dorien"], [520.9397993311037, "Doroteja"], [913.7272727272727, "Draginja"], [929.0599369085173, "Dunja"], [1073.1752577319587, "Ebony"], [1029.6888888888889, "Eden"], [211.67325428194994, "Edina"], [656.2851711026616, "Eduarda"], [842.7045454545455, "Eetee"], [1214.857142857143, "Ege"], [471.8367290748899, "Ekaterina"], [553.9434782608696, "Ekaterine"], [1221.7931034482758, "Elaine"], [1066.5343511450383, "Eleanor"], [324.3720930232558, "Elena"], [392.44444444444446, "Elena Gabriela"], [686.6470588235294, "Elena Teodora"], [249.5244140625, "Eleni"], [950.0277777777778, "Eleonora"], [1087.372340425532, "Eleonore"], [876.1730769230769, "Eliessa"], [421.6573033707865, "Elina"], [888.2213114754098, "Elisabeth"], [334.7118644067797, "Elise"], [418.39748953974896, "Elitsa"], [579.5214723926381, "Elixane"], [978.2708333333334, "Eliza"], [1154.2714285714285, "Elizabeta"], [736.9747747747748, "Elizabeth"], [1006.2982456140351, "Elizabeth Anita Alexandria"], [489.5307517084282, "Elizaveta"], [981.9814814814815, "Elizaveta Anna"], [1011.9433962264151, "Elke"], [1168.7967479674796, "Ella"], [750.9460093896714, "Ellen"], [508.340206185567, "Ellie"], [1211.2333333333333, "Elodie"], [652.1984732824427, "Elyne"], [819.3400503778338, "Ema"], [672.730407523511, "Emelyn"], [770.8472222222222, "Emi"], [1232.0, "Emilia"], [1022.9174311926605, "Emiliana"], [705.4716981132076, "Emilie"], [1209.625, "Emilija"], [1092.2771084337348, "Emiliya"], [585.093851132686, "Emily"], [1041.948717948718, "Emily J"], [682.0972222222222, "Emina"], [641.046992481203, "Emma"], [1193.3529411764705, "Emma Christine"], [943.7716535433071, "Emmanuelle"], [1229.7333333333333, "En Pei"], [980.3333333333334, "Ena"], [321.23595505617976, "Eri"], [788.0384615384615, "Erica"], [544.5041866028708, "Erika"], [942.7969696969697, "Erin"], [733.1351351351351, "Erina"], [1218.5652173913043, "Esen"], [966.0540540540541, "Estela"], [617.4935251798561, "Estelle"], [950.9090909090909, "Ester"], [347.34943639291464, "Estrella"], [781.3218390804598, "Etsuko"], [911.7241379310345, "Eudice Wong"], [1157.5, "Eugenia"], [477.62886597938143, "Eugenie"], [620.6746411483253, "Eugeniya"], [500.29483037156706, "Eva"], [1083.8333333333333, "Eva Marie"], [1023.8690476190476, "Eveliina"], [471.5439093484419, "Evelyn"], [414.66339869281046, "Evgenia"], [442.0344827586207, "Evgeniya"], [612.0185185185185, "Fang Ying"], [406.9281767955801, "Fangzhou"], [569.1904761904761, "Fanny"], [1106.3076923076924, "Farah"], [673.7509157509157, "Fatima"], [1070.9463414634147, "Fatimah"], [648.2984054669704, "Fatma"], [1015.5, "Fatyha"], [722.7286493034525, "Federica"], [1204.7272727272727, "Federica Joe"], [647.922077922078, "Fernanda"], [1187.0384615384614, "Ferny"], [853.3908045977012, "Fiona"], [376.47888446215137, "Flavia"], [451.5810397553517, "Florencia"], [999.2, "Frances"], [570.534951862704, "Francesca"], [903.1666666666666, "Francisca"], [437.05298013245033, "Francoise"], [949.6575342465753, "Franziska"], [1244.3333333333333, "Frederikke"], [544.1627906976744, "Freya"], [696.7697332607512, "Gabriela"], [994.0612244897959, "Gabriela Nicole"], [792.5, "Gabriella"], [985.7211538461538, "Gabrielle Faith"], [1052.8314606741574, "Gaelle"], [759.5352697095435, "Gaia"], [526.2644836272041, "Gail"], [305.19563522992985, "Galina"], [606.7211740041929, "Ganna"], [229.3774193548387, "Garbine"], [1152.142857142857, "Gebriela"], [772.2857142857143, "Genevieve"], [533.5940594059406, "Georgia"], [763.1014492753624, "Georgia Andreea"], [1153.9166666666667, "Georgiana"], [396.225, "Georgina"], [1150.6607142857142, "Ghislaine"], [813.1351351351351, "Giada"], [567.8518518518518, "Gioia"], [960.4941860465116, "Giorgia"], [1226.5, "Giorgie"], [1197.0, "Giovanna"], [693.6215943491422, "Giulia"], [584.359375, "Giuliana"], [794.7118644067797, "Gloria"], [716.3150684931506, "Gozal"], [454.06233062330625, "Grace"], [783.8288043478261, "Gracia"], [547.277108433735, "Greetje"], [296.8219584569733, "Greta"], [797.383606557377, "Guadalupe"], [1027.0, "Guillermina"], [957.9512195121952, "Guiomar"], [1168.3396226415093, "Gulben"], [1196.0, "Gulchekhra"], [1236.6153846153845, "Gulnaz"], [995.4074074074074, "Guzal"], [1087.6216216216217, "Gyulnara"], [1051.623188405797, "Habiba"], [844.3856812933026, "Hae Sung"], [1179.4153846153847, "Haine"], [1110.5376344086021, "Hana"], [957.2, "Hanna"], [543.968253968254, "Hanyu"], [680.1050228310502, "Hao Chen"], [1153.936507936508, "Hao Ching"], [574.8723404255319, "Harmony"], [694.341935483871, "Harriet"], [774.6837606837607, "Haruka"], [512.1515151515151, "Haruna"], [914.5321100917431, "Hayley"], [1214.7692307692307, "Hazal"], [167.50632911392404, "Heather"], [417.44323483670297, "Heidi"], [1019.4107142857143, "Helen"], [696.4752475247525, "Helene"], [1095.1176470588234, "Hikari"], [673.6635071090047, "Hilda"], [1219.0, "Himari"], [534.890243902439, "Hiroko"], [860.8104265402843, "Hirono"], [925.9865771812081, "Ho Ching"], [1185.75, "Hollie"], [914.8607594936709, "Hongrui"], [1251.1333333333334, "Hortencia"], [1107.7142857142858, "Hsin Yuan"], [726.1737089201878, "Hua Chen"], [1118.904761904762, "Huijie"], [888.0055096418732, "Hulya"], [1020.28125, "Hye Min"], [1069.3208955223881, "Hyojung"], [729.0671936758894, "Hyun Hui"], [1038.6911764705883, "I Hsuan"], [1085.581818181818, "Iana"], [962.5, "Ida"], [1232.2, "Idia"], [705.5625, "Iga"], [1135.5, "Ilay"], [868.2191780821918, "Ilka"], [452.625, "Ilona"], [847.0941176470589, "Ilze"], [845.375, "Imane Maelle"], [1165.5573770491803, "Ina"], [1069.0925925925926, "Inci"], [954.046875, "India"], [627.7027027027027, "Indire"], [485.9559748427673, "Indy"], [919.6147540983607, "Ineke"], [687.0229885057471, "Ines"], [1039.0, "Inger"], [766.2549019607843, "Ingrid"], [869.3571428571429, "Ingrid Alexandra"], [748.6622691292876, "Ingrid Esperanza"], [1192.5454545454545, "Intissar"], [980.2232142857143, "Ioana"], [482.43243243243245, "Ioana Diana"], [646.0441176470588, "Ioana Loredana"], [799.0552486187845, "Ionela Andreea"], [655.7828348504552, "Ipek"], [288.74423480083857, "Irena"], [579.2153846153847, "Irene"], [436.84339509862525, "Irina"], [285.84388185654007, "Irina Camelia"], [578.1381578947369, "Irina Maria"], [866.1075949367089, "Iris"], [489.5294964028777, "Iryna"], [724.9178743961353, "Isabel"], [1114.99375, "Isabela"], [566.7873931623932, "Isabella"], [781.6993464052288, "Isabelle"], [1170.9411764705883, "Iulia Maria"], [732.7386018237082, "Iva"], [439.81414868105514, "Ivana"], [871.109375, "Ivania"], [1079.05, "Ivanka"], [117.95684523809524, "Iveta"], [1136.8535031847134, "Ivette"], [872.0, "Ivone"], [591.3809523809524, "Ivonne"], [624.6089494163424, "Jacqueline"], [909.2, "Jada"], [739.04802259887, "Jade"], [760.4920634920635, "Jaeda"], [562.8450704225352, "Jaimee"], [1243.875, "Jaimy Gayle"], [1037.5274725274726, "Jainy"], [402.36756756756756, "Jamie"], [1247.3333333333333, "Jamilya"], [592.5990783410139, "Jan"], [406.6258503401361, "Jana"], [240.5306603773585, "Janette"], [699.7864583333334, "Janina"], [1262.5416666666667, "Janja"], [861.5102040816327, "Janneke"], [748.7238095238096, "Jaqueline Adina"], [1121.767857142857, "Jara"], [149.46360759493672, "Jarmila"], [633.027027027027, "Jasmin"], [642.1811989100818, "Jasmina"], [437.86915887850466, "Jasmine"], [1117.64, "Jasmine Amber"], [1070.5648854961833, "Jawairiah"], [1035.46, "Jazmin"], [983.1290322580645, "Jazzamay"], [767.7730496453901, "Jeannine"], [348.19338235294117, "Jelena"], [556.7936681222708, "Jennifer"], [902.1470588235294, "Jenny"], [501.5860215053763, "Jesika"], [655.7464059804486, "Jessica"], [818.2043795620438, "Jessika"], [967.6708860759494, "Jessy"], [823.9789029535865, "Ji Hee"], [833.5061082024433, "Ji Young"], [1169.6923076923076, "Jia"], [682.961038961039, "Jia Jing"], [529.7777777777778, "Jia Qi"], [794.4931506849315, "Jiahui"], [1230.6, "Jiakang"], [1232.032258064516, "Jiatian"], [578.5, "Jiaxi"], [1161.0, "Jiaxue"], [114.05571428571429, "Jie"], [501.0619469026549, "Jil Belen"], [1116.4190476190477, "Jil Nora"], [121.9579326923077, "Jill"], [721.14, "Jillian"], [1267.0, "Jin"], [492.8915187376726, "Jin A"], [1035.6470588235295, "Jin Ju"], [369.1620469083156, "Jing Jing"], [863.3225806451613, "Joana"], [931.025641025641, "Joanna"], [1227.8, "Joanne"], [925.4230769230769, "Jodie Anna"], [1111.8333333333333, "Johana"], [310.3405299313052, "Johanna"], [1022.6198347107438, "Jordana"], [924.9325842696629, "Josepha"], [684.4892086330935, "Josephine"], [993.2105263157895, "Josie"], [601.9846625766871, "Jovana"], [812.6, "Ju Eun"], [1224.0, "Judith"], [1243.904761904762, "Jule"], [576.9173467252564, "Julia"], [1024.6666666666667, "Julia Mansano"], [1110.0816326530612, "Juliana"], [1175.7666666666667, "Juliana Rocha"], [512.3787128712871, "Julie"], [707.1467889908257, "Julieta Lara"], [1019.9411764705883, "Julita"], [732.1666666666666, "Julyette Maria Josephine"], [1189.0, "June"], [262.30884808013354, "Junri"], [1212.9166666666667, "Justina"], [521.5358361774744, "Justine"], [585.8517745302714, "Justyna"], [1055.020202020202, "Kady"], [272.08855291576674, "Kai Chen"], [522.6561403508772, "Kai Lin"], [127.06775067750678, "Kaia"], [901.3333333333334, "Kaitlin"], [756.2549019607843, "Kaitlyn"], [633.5454545454545, "Kaja"], [661.9589041095891, "Kajsa"], [568.2547169811321, "Kamila"], [1162.8301886792453, "Kamilla"], [765.1395348837209, "Kamonwan"], [924.2782608695652, "Kana"], [635.346516007533, "Kanae"], [1105.3125, "Kanako"], [799.9940828402367, "Kanami"], [962.8536585365854, "Kanika"], [871.0790513833992, "Kaori"], [674.9672514619883, "Karen"], [1068.9166666666667, "Kariann"], [472.338003502627, "Karin"], [883.6090909090909, "Karina"], [696.9606060606061, "Karina Ildor"], [1062.795918367347, "Karina Kristina"], [868.8904109589041, "Karine"], [1001.0679611650486, "Karis"], [807.616, "Karla"], [652.917808219178, "Karman"], [928.3333333333334, "Karola Patricia"], [1077.8095238095239, "Karolayne"], [586.9412296564195, "Karolina"], [873.6229508196722, "Karoline"], [903.5769230769231, "Karyn"], [927.0350877192982, "Kassandra"], [331.93949394939494, "Katalin"], [401.0998263888889, "Katarina"], [459.29286608260327, "Katarzyna"], [1117.7142857142858, "Kate"], [491.8507295173962, "Katerina"], [294.33209990749305, "Kateryna"], [680.677700348432, "Katharina"], [882.1071428571429, "Katharine"], [836.6804511278195, "Katherine"], [910.396694214876, "Katherine Gabriela"], [415.7, "Kathinka"], [291.4792817679558, "Kathrin"], [620.9404580152672, "Katie"], [1111.08, "Katrine Isabel"], [492.6608695652174, "Katy"], [1050.7, "Katya"], [1010.1818181818181, "Katyarina"], [583.1686746987951, "Kayla"], [1163.3478260869565, "Kaylah"], [772.2402912621359, "Kazusa"], [1003.1212121212121, "Kei"], [1114.9433962264152, "Kelia"], [804.873831775701, "Kelly"], [312.7584269662921, "Kelly S"], [1012.325, "Kelsey"], [807.7222222222222, "Kennedy"], [643.422641509434, "Keren"], [1018.6534653465346, "Keri"], [1020.4271844660194, "Kerstin"], [978.0229885057471, "Khristina"], [1164.090909090909, "Ki Ryang"], [287.71625344352617, "Kiki"], [687.3120567375887, "Kim"], [762.4081632653061, "Kim Alice"], [846.9154228855722, "Kimberley"], [618.6923076923077, "Kimberly"], [1097.219512195122, "Kimika"], [95.03465982028241, "Kimiko"], [606.1467576791808, "Kinnie"], [308.64912280701753, "Kirsten"], [1035.0384615384614, "Kirsten Andrea"], [576.9, "Klaartje"], [235.31431431431432, "Klara"], [780.7905027932961, "Klaudia"], [826.0238095238095, "Komola"], [567.0507399577167, "Korina"], [844.7460317460317, "Kotomi"], [522.984693877551, "Krista"], [445.18918918918916, "Kristie"], [343.25546975546973, "Kristina"], [1060.5633802816901, "Kristina N"], [837.7730496453901, "Kristy"], [443.8467908902692, "Kristyna"], [482.36648501362396, "Ksenia"], [990.6, "Kseniia"], [975.6271186440678, "Ksenija"], [488.76107382550333, "Kumiko"], [165.96132596685084, "Kurumi"], [159.62397820163488, "Kveta"], [1070.0377358490566, "Kwan Yau"], [887.502487562189, "Kyle"], [798.3181818181819, "Kylie"], [348.54794520547944, "Kyoka"], [443.76148409893995, "Kyra"], [533.433770014556, "Kyung Mi"], [677.4458598726114, "Laetitia"], [996.8148148148148, "Laili"], [1062.3666666666666, "Lamis"], [643.6939163498099, "Lara"], [1054.9019607843138, "Larikah"], [504.4145867098865, "Laura"], [910.5714285714286, "Laura D"], [516.1982942430703, "Laura Ioana"], [1198.1538461538462, "Laura Sofia"], [484.9442231075697, "Lauren"], [1107.0882352941176, "Lauryn"], [612.736, "Lavinia"], [1226.076923076923, "Laylo"], [1184.0, "Layne"], [858.4107142857143, "Lea"], [1179.6216216216217, "Leah"], [908.156862745098, "Lee"], [594.9436936936937, "Lena"], [657.8934169278997, "Lena Marie"], [451.33577981651376, "Lenka"], [773.5666666666667, "Leolia"], [825.972972972973, "Leonie"], [887.4545454545455, "Lesedi Sheya"], [205.17590361445784, "Lesia"], [514.7174515235457, "Lesley"], [1180.5454545454545, "Leslie"], [481.3229166666667, "Leticia"], [1072.4, "Leticia Garcia"], [1030.5, "Leylah Annie"], [988.7425149700599, "Li"], [387.87113402061857, "Liana Gabriela"], [899.9150326797386, "Libby"], [1035.327868852459, "Libi"], [1147.8529411764705, "Lidia"], [797.2128378378378, "Lidziya"], [284.8326771653543, "Liezel"], [567.9464544138929, "Liga"], [722.5087719298245, "Lilla"], [497.42124542124543, "Lin"], [574.9808362369338, "Lina"], [929.4398496240601, "Linda"], [275.6055900621118, "Lindsay"], [986.82, "Lindsey"], [418.81925343811395, "Ling"], [1184.7222222222222, "Liniques"], [959.6981132075472, "Linnea"], [356.0105210420842, "Lisa"], [758.06, "Lisa Maria"], [996.0408163265306, "Lisa Marie"], [673.6507936507936, "Lisanne"], [887.2875, "Liubov"], [1179.875, "Livia"], [870.9007633587786, "Liz Tatiane"], [1120.5652173913043, "Lizaveta"], [666.1496062992126, "Lizette"], [1231.2727272727273, "Lorenza"], [972.75, "Lorraine M"], [680.1724137931035, "Lou"], [1220.0, "Loudmilla"], [380.5308641975309, "Louisa"], [1070.1025641025642, "Louise"], [188.06095041322314, "Lourdes"], [907.3557312252965, "Lu"], [859.8644067796611, "Luca"], [845.740638002774, "Lucia"], [885.7495107632094, "Luciana"], [322.62611607142856, "Lucie"], [845.986301369863, "Lucrezia"], [756.3141592920354, "Lucy"], [846.2727272727273, "Ludmila"], [787.5416666666666, "Ludmilla"], [981.7517730496454, "Luisa"], [820.59375, "Luisa Marie"], [284.22813688212926, "Luksika"], [1098.2888888888888, "Lulu"], [1139.0, "Luna"], [974.2702702702703, "Lusine"], [1190.0629921259842, "Lutfiye"], [982.6666666666666, "Lyann"], [952.4411764705883, "Lynn"], [382.82479784366575, "Lyudmyla"], [607.3360995850622, "Macall"], [692.1515151515151, "Macarena"], [324.63613231552165, "Madalina"], [748.0, "Maddison"], [1028.0365853658536, "Madeleine"], [1217.469387755102, "Madeline"], [1203.5, "Madina"], [290.64452214452217, "Madison"], [958.0955414012739, "Madrie"], [787.0, "Maegan"], [1139.7, "Mafalda"], [1173.75, "Maftuna"], [734.0, "Magali"], [1036.1214953271028, "Magalie"], [300.3974358974359, "Magda"], [443.6296006264683, "Magdalena"], [1092.7621951219512, "Magy"], [875.0, "Mahak"], [1007.15, "Mahitha"], [687.25, "Mai"], [745.433962264151, "Maia"], [1206.6666666666667, "Maia A"], [438.4245810055866, "Maiko"], [1152.888888888889, "Maileen"], [410.8463541666667, "Mailen"], [896.7413793103449, "Maja"], [784.8009049773756, "Makiho"], [516.6615384615385, "Makoto"], [999.15625, "Malene"], [1004.7428571428571, "Malika"], [825.039603960396, "Malin"], [1031.5342465753424, "Mallaurie"], [143.48235294117646, "Mallory"], [947.3333333333334, "Malou"], [1153.590909090909, "Mami"], [1202.2692307692307, "Man Ying Maggie"], [689.891129032258, "Mana"], [1230.6, "Mananchaya"], [838.1780821917808, "Manca"], [361.0, "Mandy"], [897.0974358974358, "Manisha"], [622.7673469387755, "Manon"], [1181.3548387096773, "Manya"], [908.3962264150944, "Mara"], [774.64, "Marcela"], [1143.7957746478874, "Marcela Guimaraes"], [1247.3636363636363, "Marcelina"], [657.0171919770773, "Marcella"], [325.5912596401028, "Margalita"], [987.6739130434783, "Margarida"], [611.4060995184591, "Margarita"], [1051.1224489795918, "Margaux"], [753.8346456692914, "Margot"], [526.3698630136986, "Mari"], [426.6002565198803, "Maria"], [1190.0833333333333, "Maria Agustina"], [1072.9591836734694, "Maria Andrea"], [1188.5277777777778, "Maria Camila"], [861.5050505050505, "Maria Constanza De Las Mercedes"], [1119.4897959183672, "Maria Del Rosario"], [194.2392065344224, "Maria Elena"], [443.0228531855956, "Maria Fernanda"], [1170.1830985915492, "Maria Jesus"], [486.6092544987147, "Maria Joao"], [306.1794310722101, "Maria Jose"], [918.0769230769231, "Maria Lourdes"], [1047.98224852071, "Maria Paulina"], [359.81081081081084, "Maria Teresa"], [662.1182795698925, "Mariam"], [556.0428051001821, "Mariana"], [730.3831168831168, "Marianna"], [993.175925925926, "Marianne"], [1085.4242424242425, "Mariaryeni"], [695.574074074074, "Marie"], [300.56296296296296, "Marie Eve"], [1148.9166666666667, "Mariia"], [544.2636655948553, "Marija"], [1215.0, "Marijana"], [532.6881807180315, "Marina"], [774.5654761904761, "Marine"], [279.78655282817505, "Marion"], [1163.0, "Mariona"], [1067.3413173652696, "Marisa"], [281.871335504886, "Mariya"], [353.44444444444446, "Marketa"], [946.8934426229508, "Marlies"], [783.1711711711712, "Marrit"], [419.32988047808766, "Marta"], [851.1224489795918, "Marta Huqi"], [1056.0588235294117, "Martha"], [751.8679119412942, "Martina"], [869.1666666666666, "Mary"], [1188.7096774193549, "Mary Ann"], [323.86176470588236, "Maryna"], [355.7223168654174, "Masa"], [437.11396648044695, "Mathilde"], [799.1875, "Matilda"], [1013.4761904761905, "Maud"], [1070.21875, "Maureen"], [1121.0869565217392, "Maurien"], [973.8717948717949, "Maxine"], [1084.0294117647059, "May"], [732.4260679079956, "Maya"], [891.6309523809524, "Mayar"], [407.029702970297, "Mayo"], [619.9064748201439, "Mayya"], [736.4809523809524, "Megan"], [1025.0, "Megumi"], [1031.6, "Mei Xu"], [812.85, "Meiling"], [1029.1666666666667, "Meiqi"], [372.32502965599053, "Melanie"], [1039.8333333333333, "Melany Solange"], [1017.2560553633218, "Melina"], [169.13578500707214, "Melinda"], [634.7950310559006, "Melis"], [993.1351351351351, "Melisa"], [1154.093023255814, "Melissa"], [1104.357142857143, "Melissa Ishuan"], [1035.95, "Meng Ning"], [1213.2142857142858, "Mercedes"], [900.75, "Merel"], [1182.9107142857142, "Meritxell"], [337.5292682926829, "Mervana"], [554.3953934740883, "Mi"], [1071.3076923076924, "Mi Jeong"], [992.7225433526012, "Mi Rae"], [999.375, "Mi Zhuoma"], [987.504761904762, "Mia Nicole"], [1332.0737704918033, "Micaela"], [676.90589198036, "Michaela"], [185.3469387755102, "Michaella"], [1228.9285714285713, "Michela"], [946.8846153846154, "Michele Alexandra"], [280.79959100204496, "Michelle"], [718.047619047619, "Michika"], [376.7356115107914, "Mihaela"], [1223.4, "Mihaela Lorena"], [523.2788844621514, "Miharu"], [1064.142857142857, "Mihika"], [1110.4411764705883, "Mihoki"], [586.2250489236791, "Miki"], [1201.16, "Mila"], [1234.2857142857142, "Milagros"], [626.441935483871, "Milana"], [1114.4074074074074, "Milena"], [1221.904761904762, "Milica"], [866.0693069306931, "Min"], [819.8425531914894, "Min Hwa"], [1238.0625, "Minami"], [788.2622950819672, "Mira"], [721.1643835616438, "Mirabelle"], [1169.4864864864865, "Miranda"], [912.120218579235, "Miriam"], [628.075, "Miriam Bianca"], [950.6263736263736, "Miriana"], [843.6428571428571, "Mirjam"], [186.76587795765877, "Mirjana"], [617.0379241516966, "Misa"], [208.95263157894738, "Misaki"], [1121.04, "Mitsumi"], [447.93283582089555, "Miyabi"], [594.9036697247707, "Miyu"], [593.1506849315068, "Mizuno"], [1029.0, "Molly"], [772.6981132075472, "Momoko"], [273.57517899761336, "Mona"], [210.0846394984326, "Monica"], [980.575, "Monika"], [462.4270462633452, "Monique"], [541.952380952381, "Montserrat"], [880.6527777777778, "Morgane"], [1243.4, "Moulika"], [1258.5, "Mouna"], [1198.25, "Moyuka"], [1227.0, "Muazzez"], [1186.9444444444443, "Muge"], [485.40168539325845, "Myrtille"], [82.13112391930835, "Na"], [608.7791798107255, "Na Lae"], [573.5197368421053, "Na Ri"], [868.6521739130435, "Nadezda"], [407.5463976945245, "Nadia"], [637.4607407407408, "Nadiya"], [631.8181818181819, "Nadja"], [828.0675675675676, "Nagi"], [767.4963503649635, "Naiktha"], [930.7027027027027, "Naima"], [878.6666666666666, "Nam Yeon"], [890.4455445544554, "Nan Nan"], [542.7168141592921, "Nanuli"], [313.45625, "Nao"], [1180.3828125, "Naoko"], [483.97225572979494, "Naomi"], [929.4388489208633, "Napatsakorn"], [1138.9166666666667, "Nastassia"], [554.5290322580645, "Nastassja"], [593.1772853185596, "Nastja"], [720.132932166302, "Natalia"], [577.9677419354839, "Natalie"], [634.3620689655172, "Natalija"], [1247.909090909091, "Nataliya"], [666.2853403141361, "Natasa"], [883.0777142857143, "Natasha"], [566.4943396226415, "Natela"], [962.0188679245283, "Natella"], [543.031185031185, "Nathalia"], [617.4615384615385, "Nathaly"], [929.6928104575163, "Natia"], [547.7037037037037, "Natsumi"], [1177.622641509434, "Nattawadee"], [1087.3823529411766, "Naz"], [825.7291666666666, "Nazari"], [745.421052631579, "Neda"], [1164.107142857143, "Nelise"], [1069.15, "Nermeen"], [1031.0, "Nevena"], [515.3191489361702, "Nicha"], [843.9007633587786, "Nicky"], [753.2253164556962, "Nicola"], [499.4127634660422, "Nicole"], [485.46875, "Nicoleta Catalina"], [778.1648648648649, "Nicolette"], [762.1578947368421, "Nidhi"], [376.7617554858934, "Nigina"], [913.4380165289256, "Nika"], [1174.0, "Nikita"], [1017.3134328358209, "Nikki"], [1054.0813953488373, "Nikol"], [723.484076433121, "Nikola"], [528.8673050615595, "Nina"], [1124.1666666666667, "Nina Isabella"], [841.0514705882352, "Nives"], [965.5343511450382, "Noel"], [1049.834745762712, "Noelia"], [883.7787610619469, "Noelle"], [1167.2758620689656, "Nonna"], [374.93926247288505, "Noppawan"], [921.6216216216217, "Nora"], [1096.1140350877192, "Nour"], [936.3392857142857, "Nozomi"], [436.66881028938906, "Nudnida"], [537.577922077922, "Nungnadda"], [395.6680227827502, "Nuria"], [1027.1382978723404, "Oana"], [686.3047619047619, "Oana Georgeta"], [728.7630208333334, "Oceane"], [839.4923664122138, "Ofri"], [533.9652351738241, "Oksana"], [660.8924731182796, "Ola"], [1397.5, "Olawaseun"], [1112.75, "Olaya"], [903.4289156626506, "Oleksandra"], [1179.1555555555556, "Olena"], [501.44444444444446, "Olesya"], [432.6511627906977, "Olga"], [446.7231833910035, "Olivia"], [1006.5128205128206, "Oliwia"], [435.1470588235294, "Ons"], [978.7321428571429, "Ornella"], [866.0454545454545, "Oyku"], [1156.28125, "Paige Mary"], [989.1904761904761, "Pamela"], [683.1081081081081, "Panna"], [132.12638580931264, "Paola"], [1099.625, "Parris"], [863.5507246376811, "Patcharin"], [572.8059701492538, "Patricia"], [403.935, "Patricia Maria"], [657.3816155988858, "Patrycja"], [385.8135593220339, "Patty"], [558.0162601626016, "Paula"], [1175.909090909091, "Paula Andrea"], [868.7624113475177, "Paula Catalina"], [508.4679802955665, "Paula Cristina"], [1035.7780678851175, "Paulina"], [298.1861898890259, "Pauline"], [915.5892857142857, "Pavla"], [514.586319218241, "Peangtarn"], [755.5813953488372, "Peggy"], [673.9809523809524, "Pei Chi"], [1106.5, "Pei Hsuan"], [1061.3076923076924, "Pei Ju"], [465.24962852897477, "Pemra"], [619.4154929577464, "Pernilla"], [710.3972602739726, "Petia"], [365.50280484204313, "Petra"], [1211.0, "Phenomena"], [826.6486486486486, "Phillis"], [737.862676056338, "Pia"], [668.2581196581197, "Piia"], [740.5879828326181, "Pilar"], [1041.0740740740741, "Pippa"], [937.7945205479452, "Plobrung"], [630.7953529937444, "Polina"], [478.30369515011546, "Polona"], [729.1047904191616, "Poojashree"], [795.4736842105264, "Pranjala"], [653.5070422535211, "Prarthana G"], [740.5361842105264, "Prerna"], [1137.19, "Priscila"], [675.4124293785311, "Priscilla"], [383.4714587737844, "Qiang"], [826.1388888888889, "Qianhui"], [943.421052631579, "Qianqian"], [705.8493150684932, "Qiu Yu"], [883.2352941176471, "Quinn"], [633.9770491803279, "Quirine"], [859.2706766917294, "Rachael"], [1147.8526315789475, "Rachel"], [955.7833333333333, "Radina"], [1121.2432432432433, "Rafaela"], [1176.5, "Ralina"], [304.4619771863118, "Raluca"], [672.2258064516129, "Raluca Elena"], [539.6164383561644, "Raluca Georgiana"], [1010.4545454545455, "Ramu"], [1121.8846153846155, "Ramya"], [598.2655172413793, "Ran"], [1117.6666666666667, "Rana"], [700.7644444444444, "Raquel"], [1089.2100840336134, "Rashmi"], [1021.6504854368932, "Ratnika"], [487.6268656716418, "Raveena"], [1145.4333333333334, "Rebeca"], [568.3374316939891, "Rebecca"], [676.1090909090909, "Rebeka"], [289.60283687943263, "Regina"], [1019.0, "Reina"], [323.1388101983003, "Reka Luca"], [494.6111111111111, "Remi"], [274.85317919075146, "Renata"], [669.448275862069, "Ria"], [638.6666666666666, "Rianna"], [246.19871794871796, "Richel"], [290.0614657210402, "Rika"], [495.22641509433964, "Riko"], [1125.0363636363636, "Rio"], [489.65909090909093, "Risa"], [775.7269624573379, "Rishika"], [1051.7349397590363, "Rita"], [651.4246575342465, "Riya"], [150.96681415929203, "Roberta"], [431.19607843137254, "Robin"], [1054.606896551724, "Robyn"], [795.6201232032854, "Rocio"], [402.49931972789113, "Romana"], [669.8542372881356, "Romana Caroline"], [283.63246554364474, "Romina"], [758.1714285714286, "Romy"], [1125.5471698113208, "Rona"], [427.0, "Ronit"], [1072.857142857143, "Ronke"], [1168.2857142857142, "Roosh"], [965.0, "Rosa"], [1059.73, "Rosalia"], [1066.5887096774193, "Rosalie"], [984.1714285714286, "Rosie"], [479.51738241308794, "Roxane"], [1209.625, "Rui"], [573.8729603729604, "Rushmi"], [808.5096774193548, "Rutuja"], [1069.0379746835442, "Ryann"], [1117.88, "Saana"], [982.7397260273973, "Sabastiani"], [682.2005532503458, "Sabina"], [1184.6666666666667, "Sabina Elena"], [203.5871080139373, "Sabine"], [905.6324786324786, "Sabrina"], [340.2890442890443, "Sacha"], [400.8093385214008, "Sachia"], [368.26881720430106, "Sachie"], [665.8219178082192, "Sadafmoh"], [998.5238095238095, "Sai Samhitha"], [297.39032258064515, "Saisai"], [832.9585365853659, "Sakiko"], [529.583908045977, "Sally"], [1204.6666666666667, "Salma"], [406.21702404158543, "Samantha"], [932.8940397350993, "Samira"], [1105.171875, "Sanae"], [703.1372549019608, "Sanaz"], [563.964505613908, "Sandra"], [1028.9565217391305, "Sandy"], [857.9508196721312, "Sang Hee"], [177.22695035460993, "Sania"], [509.80945757997216, "Sara"], [546.5551763367463, "Sarah"], [875.9277108433735, "Sarah Beth"], [743.6062176165804, "Sarah Rebecca"], [1139.2340425531916, "Sarahi"], [1191.6470588235295, "Sarai Delfina"], [840.0776699029126, "Saray"], [1081.1666666666667, "Sari"], [1209.7777777777778, "Sarlota"], [1235.1960784313726, "Sarvinoz"], [1033.027027027027, "Sasa"], [747.3695652173913, "Saska"], [888.7272727272727, "Satsuki"], [1142.9285714285713, "Savannah"], [1188.2941176470588, "Schena"], [1210.2571428571428, "Se Hyun"], [1122.4545454545455, "Se Jin"], [1240.92, "Sean"], [1003.5367647058823, "Seda"], [1115.72, "Seira"], [1168.6571428571428, "Selin"], [858.9173789173789, "Seo Kyung"], [889.8028169014085, "Seone"], [14.654294803817603, "Serena"], [162.3505747126437, "Sesil"], [784.0465949820789, "Seung Yeon"], [218.4701086956522, "Severine"], [166.41358024691357, "Shahar"], [924.8818897637796, "Shakhlo"], [1236.7627118644068, "Shakhnoza"], [1228.3235294117646, "Shangqing"], [694.2, "Shanshan"], [967.9034090909091, "Shao Yuan"], [851.5633802816901, "Sharmada"], [296.5792682926829, "Sharon"], [1097.0, "Sharon Sanchana"], [372.89398280802294, "Shelby"], [1171.0, "Shelly"], [451.8657487091222, "Sheng Nan"], [649.5154639175257, "Sherazad"], [1024.0116279069769, "Sherry"], [500.688679245283, "Shiho"], [632.2824427480916, "Shilin"], [1070.6666666666667, "Shiori"], [1154.4166666666667, "Shir"], [1187.9245283018868, "Shiran"], [935.2322946175638, "Shivika"], [1120.388888888889, "Shou Na"], [1148.0, "Shreya"], [1042.6802325581396, "Shu Ying"], [167.90740740740742, "Shuai"], [421.44179894179894, "Shuko"], [864.1538461538462, "Shuo"], [966.0588235294117, "Shuyue"], [897.6951219512196, "Shweta"], [1047.7575757575758, "Si Qi"], [565.8211508553654, "Silvia"], [542.2382851445662, "Simona"], [1070.3417721518988, "Simone"], [974.8, "Simran Kaur"], [728.7443609022556, "Sina"], [975.3484848484849, "Sinead"], [1141.842105263158, "Sing Le"], [980.9076923076923, "Siqi"], [949.7916666666666, "Sirui"], [1241.1379310344828, "Siyu"], [259.63589743589745, "Sloane"], [1184.8260869565217, "Smriti"], [1225.388888888889, "Sneha"], [632.3150684931506, "Snehadevi S"], [514.1732026143791, "So Jung"], [572.2654545454545, "So Ra"], [526.3535641547861, "Sofia"], [1084.107142857143, "Sofico"], [724.5, "Sofie"], [541.1570881226054, "Sofiya"], [640.8727272727273, "Sofya"], [1004.6666666666666, "Sohyun"], [1029.0980392156862, "Sonia"], [885.0976744186047, "Sonja"], [1221.3333333333333, "Sophia"], [600.6881091617934, "Sophie"], [213.75043630017453, "Sorana"], [813.1357142857142, "Sowjanya"], [1149.3125, "Spurti"], [792.1927710843373, "Sri Vaishnavi"], [841.8387096774194, "Stamatia"], [312.54158964879855, "Stanislava"], [993.4255319148937, "Stefana"], [1167.3333333333333, "Stefani"], [759.2894995093228, "Stefania"], [387.73412112259973, "Stefanie"], [939.746835443038, "Steffi"], [439.87772357723577, "Stephanie"], [1035.5548387096774, "Stephanie Mariel"], [573.6708333333333, "Storm"], [426.3886462882096, "Su Jeong"], [217.2493188010899, "Su Wei"], [911.7619047619048, "Suellen"], [944.2432432432432, "Sultan"], [812.4581005586592, "Sun Jung"], [1229.8, "Sunae"], [611.0757575757576, "Sunam"], [635.7449168207024, "Sung Hee"], [1015.6792452830189, "Susan"], [417.8053097345133, "Susanne"], [982.7222222222222, "Suzan"], [980.6666666666666, "Suzuho"], [698.7567567567568, "Suzy"], [844.203007518797, "Svenja"], [267.03227571115974, "Svetlana"], [691.9934640522875, "Sviatlana"], [1002.6792452830189, "Sybille"], [869.1702127659574, "Sylvia"], [787.7645348837209, "Sylwia"], [791.1240506329113, "Syna"], [772.3186813186813, "Szabina"], [343.0985324947589, "Tadeja"], [969.6588235294117, "Taisiya"], [1230.2, "Talya"], [949.8059701492538, "Tamachan"], [1118.4166666666667, "Tamar"], [614.0434782608696, "Tamara"], [1146.3934426229507, "Tamari"], [121.82273948075202, "Tamarine"], [386.7025316455696, "Tamaryn"], [135.88910505836577, "Tamira"], [601.906914893617, "Tammi"], [1113.2325581395348, "Tanaporn"], [1023.089430894309, "Tanya"], [475.2979683972912, "Tara"], [1075.0, "Tatia"], [681.9417582417583, "Tatiana"], [247.7449768160742, "Tatjana"], [912.1077844311377, "Tatsiana"], [747.3172413793103, "Tayisiya"], [387.5662100456621, "Taylor"], [1068.7457627118645, "Tea"], [461.06702898550725, "Teliana"], [614.9346733668342, "Tena"], [489.27513227513225, "Teodora"], [557.241418764302, "Tereza"], [963.5, "Terri"], [696.2878787878788, "Tess"], [390.2361111111111, "Tessah"], [437.4119658119658, "Tetiana"], [398.83478260869566, "Tetyana"], [802.7222222222222, "Thai Sa Grana"], [650.1206896551724, "Theo"], [1159.5632183908046, "Theresa"], [1017.7777777777778, "Tijana"], [182.02426160337552, "Timea"], [425.82394366197184, "Tina"], [810.6666666666666, "Tinatin"], [739.7727272727273, "Ting Fei"], [789.6113989637306, "Ting Jr"], [1015.2352941176471, "Tingting"], [743.1953125, "Tjasa"], [838.8065217391304, "Tomoko"], [841.7167381974249, "Tori"], [878.1666666666666, "Tornado Alicia"], [1029.3196721311476, "Trang"], [1009.8666666666667, "Treta"], [131.02074074074073, "Tsvetana"], [992.4870588235294, "Tyra"], [506.39344262295083, "Ulrikke"], [844.0692307692308, "Ulyana"], [229.35687022900763, "Urszula"], [1132.4109589041095, "Ushna"], [411.5068493150685, "Usue Maitane"], [921.3333333333334, "Valentina"], [751.2668918918919, "Valentine"], [479.8914728682171, "Valentini"], [368.14331210191085, "Valentyna"], [661.8474576271186, "Valeria"], [806.2648401826484, "Valerie"], [799.8668224299065, "Valeriya"], [696.4126984126984, "Vanda"], [579.437984496124, "Vanesa"], [398.3106546854942, "Vanessa"], [185.75, "Vania"], [1130.6037735849056, "Vaniya"], [1089.7111111111112, "Vanja"], [450.4642082429501, "Varatchaya"], [894.3846153846154, "Varunya"], [382.6888217522659, "Varvara"], [613.5330490405117, "Vasilisa"], [859.8103448275862, "Vaszilisza"], [729.0117647058823, "Vendula"], [32.984862819299906, "Venus"], [195.66923570969814, "Vera"], [958.1327800829876, "Verena"], [726.1852387843704, "Veronica"], [951.0075757575758, "Veronica M"], [734.6018957345972, "Veronika"], [240.0448979591837, "Vesna"], [1252.9130434782608, "Vicky"], [1138.8490566037735, "Victoire"], [444.9760935910478, "Victoria"], [1236.0, "Victoria Ariadna"], [566.9148936170212, "Viktoria"], [1236.5333333333333, "Viktoriia"], [507.4, "Viktorija"], [736.2288557213931, "Viktoriya"], [966.4671052631579, "Viktoryia"], [1243.0, "Vilma Y"], [1214.1142857142856, "Vincenza"], [1150.0, "Vinciane"], [1170.840579710145, "Violetta"], [355.88102893890675, "Virginie"], [1208.952380952381, "Vishesh"], [1201.25, "Vita"], [296.2025641025641, "Vitalia"], [670.9108527131783, "Vivian"], [607.2810218978102, "Vivien"], [659.2103004291846, "Vivienne"], [595.3291666666667, "Vlada"], [943.5432098765432, "Vladica"], [823.8770833333333, "Vladimira"], [1006.1769911504425, "Vladislava"], [856.0782608695653, "Vladyslava"], [555.6572164948453, "Vojislava"], [999.0215053763441, "Voni"], [701.4009009009009, "Wan Ting"], [1081.142857142857, "Wan Yi"], [1249.3333333333333, "Warona"], [440.35214446952597, "Wen Hsin"], [1117.55, "Wen Ling"], [1011.469696969697, "Wendy Qi Wen"], [1152.7837837837837, "Weronika Jasmina"], [886.1407407407407, "Whitney"], [1083.1454545454546, "Wiktoria"], [585.2589641434263, "Wing Yau Venise"], [937.7878787878788, "Wushuang"], [661.2222222222222, "Xenia"], [714.8653846153846, "Xi Yao"], [814.4171122994652, "Xiao"], [467.24657534246575, "Xiaodi"], [848.4418604651163, "Xiaorong"], [737.7547169811321, "Xiaoxi"], [712.2780373831775, "Ximena"], [694.4808743169399, "Xin"], [1022.3333333333334, "Xin Yu"], [480.646017699115, "Xinyu"], [309.35767790262173, "Xinyun"], [954.6, "Xiyu"], [488.7671232876712, "Xu Liu"], [1225.75, "Ya"], [586.865, "Ya Hsuan"], [325.6162790697674, "Yafan"], [768.560975609756, "Yan"], [740.0214504596527, "Yana"], [1177.8823529411766, "Yang"], [381.2581602373887, "Yanina"], [1059.2702702702702, "Yanni"], [1166.875, "Yarden"], [211.41240310077518, "Yaroslava"], [702.1784386617101, "Yasmin"], [1227.7777777777778, "Yasmina"], [983.0410958904109, "Yasmine"], [1261.8181818181818, "Yasmyn"], [1110.4594594594594, "Yawna"], [114.78806907378336, "Yayuk"], [431.3144424131627, "Ye Ra"], [1048.081081081081, "Ye Xin"], [1155.8191489361702, "Yekaterina"], [897.4873949579832, "Yelena"], [973.8617021276596, "Yeong Won"], [724.8712871287129, "Yevgeniya"], [791.0756207674943, "Yi"], [381.5512572533849, "Yi Fan"], [656.8787276341948, "Yi Jing"], [418.2566137566138, "Yi Miao"], [1185.030303030303, "Yidi"], [1209.625, "Yihong"], [1063.9411764705883, "Yijia"], [661.3972602739726, "Ying"], [403.8775981524249, "Ying Ying"], [801.6712328767123, "Yixuan"], [892.3561643835617, "Ylena"], [642.9487179487179, "Ylona Georgiana"], [1128.901098901099, "Yoko"], [1068.4619883040937, "Yolande"], [1263.7666666666667, "Yoo Ri"], [844.9310344827586, "Yoon Young"], [1096.9130434782608, "Yoshimi"], [1222.24, "Yosr"], [1170.3461538461538, "You Na"], [458.86633663366337, "Ysaline"], [1098.357142857143, "Yu Jin"], [1239.6666666666667, "Yu Tong"], [1054.0, "Yuan"], [891.2340425531914, "Yuanyi"], [983.359649122807, "Yue"], [444.96190476190475, "Yue Yue"], [961.876923076923, "Yuenu"], [1034.1304347826087, "Yujia"], [748.8250591016548, "Yuka"], [1071.5833333333333, "Yukako"], [876.7428571428571, "Yuki"], [698.8285714285714, "Yuki Kristina"], [857.1692307692308, "Yukina"], [824.3936170212766, "Yukun"], [485.35135135135135, "Yulia"], [725.5322195704057, "Yuliana"], [384.87776983559684, "Yuliya"], [799.1332586786115, "Yumi"], [166.6586270871985, "Yung Jan"], [1047.3529411764705, "Yuqi"], [322.17758620689654, "Yurika"], [1041.5367231638418, "Yuriko"], [746.4803493449782, "Yurina"], [608.1309090909091, "Yuuki"], [1230.2, "Yuval"], [545.449074074074, "Yuxuan"], [318.2867132867133, "Yvonne"], [1227.344827586207, "Zaineb"], [867.5288461538462, "Zalina"], [709.625, "Zarah"], [222.81428571428572, "Zarina"], [791.2352941176471, "Zeel"], [1229.5714285714287, "Zeynep  Sena"], [627.7777777777778, "Zhanlan"], [629.0081967213115, "Zhaoxuan"], [1058.0, "Zhibek"], [1144.45, "Zhima"], [1237.9, "Zhou"], [989.75, "Zhuoma"], [391.4656290531777, "Zi"], [1221.5, "Zinovia"], [878.4606741573034, "Ziyue"], [765.3777777777777, "Zoe"], [935.081081081081, "Zoe Gwen"], [916.559633027523, "Zsofia"], [451.92875448487956, "Zuzana"], [794.5416666666666, "Zuzanna"]], "trigger_words": ["Average Number", "First Name"], "Prediction": "players.first_name, AVG(rankings.ranking) \n FROM players \n JOIN rankings ON players.player_id=rankings.player_id \n GROUP BY players.first_name;"}
{"db_id": "wta_1", "query": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "query_toks": ["SELECT", "sum", "(", "ranking_points", ")", ",", "T1.first_name", "FROM", "players", "AS", "T1", "JOIN", "rankings", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "GROUP", "BY", "T1.first_name"], "query_toks_no_value": ["select", "sum", "(", "ranking_points", ")", ",", "t1", ".", "first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "group", "by", "t1", ".", "first_name"], "question": "Find the total ranking points for each player and their first name.", "question_toks": ["Find", "the", "total", "ranking", "points", "for", "each", "player", "and", "their", "first", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 41, false], null]]}, "select": [false, [[4, [0, [0, 42, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "471", "answer_text": [[68, "Aastha"], [304, "Abbi"], [5214, "Abbie"], [115293, "Abigail"], [120, "Abiodun"], [72, "Abir"], [490, "Adeliya"], [219, "Adnya"], [28045, "Adriana"], [107, "Adrienn"], [4619, "Adrijana"], [9, "Adva"], [156, "Afroditi"], [1901, "Agata"], [219, "Agata Jadwiga"], [110, "Agne"], [390148, "Agnes"], [13717, "Agnese"], [2929, "Agni"], [1801033, "Agnieszka"], [21728, "Agustina"], [158, "Agustina Elena"], [141, "Ah"], [85, "Ahlam"], [52, "Ahsha"], [10751, "Ai"], [2217, "Ai Wen"], [703, "Aida"], [140108, "Aiko"], [288, "Ailen"], [226, "Aimee"], [92, "Aina"], [2433, "Ainhoa"], [96, "Aishwarya"], [116548, "Ajla"], [11873, "Akari"], [228538, "Akgul"], [14838, "Aki"], [83, "Akiho"], [84446, "Akiko"], [742, "Akilah"], [640, "Akvile"], [385, "Alana"], [1424, "Alba"], [238803, "Alberta"], [10507, "Albina"], [71, "Aldana"], [1578, "Alejandra"], [451414, "Aleksandra"], [35957, "Aleksandrina"], [8832, "Alena"], [235, "Alessandra"], [2524, "Alessia"], [265, "Alessondra"], [138782, "Alexa"], [955267, "Alexandra"], [191, "Alexandria"], [12829, "Alexia"], [13389, "Alexis"], [61196, "Aliaksandra"], [57745, "Alice"], [2358, "Alice Andrada"], [993, "Alicia"], [5216, "Alicja"], [11393, "Alina"], [2369, "Aliona"], [369810, "Alisa"], [323527, "Alison"], [5422, "Alix"], [596901, "Alize"], [253320, "Alla"], [33054, "Allie"], [206, "Almudena"], [4052, "Alona"], [155, "Alory Regina Elorriaga"], [25183, "Alyona"], [68207, "Amanda"], [41575, "Amandine"], [887, "Amelie"], [1990, "Amina"], [12708, "Aminat"], [157, "Amira"], [60702, "Amra"], [159, "Amrita"], [10616, "Amy"], [51803, "An Sophie"], [1589674, "Ana"], [2421, "Ana Bianca"], [36696, "Ana Clara"], [288, "Ana Gabriela"], [21, "Ana Luisa"], [2141, "Ana Paula"], [15955, "Ana Sofia"], [1367, "Ana Victoria"], [678793, "Anabel"], [1962, "Anaeve"], [46908, "Anais"], [2338, "Anamika"], [1433335, "Anastasia"], [1235, "Anastasia Evgenyevna"], [12, "Anastasiia"], [268277, "Anastasija"], [75850, "Anastasiya"], [101, "Anca"], [160, "Anda"], [605, "Andie K"], [228, "Andjela"], [51, "Andra Maria"], [920433, "Andrea"], [464, "Andrea Renee"], [1484, "Andreea"], [1365, "Andreea Amalia"], [12727, "Andreea Roxana"], [74453, "Andreja"], [72, "Andressa Cristina"], [159, "Andrina"], [202, "Aneta"], [71072, "Anett"], [1657, "Anette"], [36, "Ange Oby"], [245, "Angela"], [13643, "Angelica"], [677, "Angeliki"], [19048, "Angelina"], [1132514, "Angelique"], [17967, "Anhelina"], [836, "Anhzelika"], [48811, "Ani"], [2177, "Anita"], [11596, "Anja"], [54, "Anke"], [21599, "Ankita"], [62, "Ann"], [1017069, "Anna"], [6650, "Anna Arina"], [49207, "Anna Giulia"], [107880, "Anna Karolina"], [907, "Anna Katalina"], [359374, "Anna Lena"], [1427, "Anna Maria"], [29442, "Annalisa"], [647811, "Anne"], [5269, "Anne Liz"], [99, "Anne Marie"], [33, "Anne Sophie"], [172, "Annie"], [169371, "Annika"], [3621, "Anouk"], [280, "Antonela"], [21624, "Antonia"], [484, "Antonina"], [480, "Anushka"], [4941, "Ao"], [126, "Apichaya"], [11608, "Arabela"], [434692, "Arantxa"], [24184, "Aranza"], [383495, "Aravane"], [980, "Ariadna"], [96852, "Arina"], [3, "Arina Gabriela"], [154, "Arlinda"], [39, "Arthi"], [19446, "Aryna"], [238, "Aselya"], [99, "Asha"], [58741, "Ashleigh"], [49980, "Ashley"], [5155, "Ashling"], [648, "Ashmitha"], [2321, "Ashvarya"], [48788, "Asia"], [802, "Asiya"], [141, "Assia"], [1083, "Astra"], [269, "Astrid Wanja"], [33624, "Audrey"], [21, "Avgusta"], [7, "Axana"], [7996, "Ayaka"], [571, "Ayan"], [5173, "Ayano"], [7444, "Ayla"], [791, "Aymet"], [38501, "Ayu Fani"], [309990, "Ayumi"], [11721, "Azra"], [53401, "Barbara"], [515957, "Barbora"], [26624, "Basak"], [27061, "Beatrice"], [98798, "Beatriz"], [75, "Beatriz Magdalena"], [1920, "Beatriz Maria"], [26, "Beauty"], [351, "Belen"], [137327, "Belinda"], [11032, "Benedetta"], [2850, "Berfu"], [8441, "Bermet"], [19092, "Bernarda"], [3894, "Bernice"], [814, "Berta"], [371662, "Bethanie"], [21, "Betina"], [1152, "Bhuvana"], [63998, "Bianca"], [1213, "Bianka"], [50184, "Bibiane"], [905, "Blair"], [312, "Blanca"], [662, "Blessing"], [123, "Boba"], [283166, "Bojana"], [3470, "Borislava"], [1465, "Boyan"], [725, "Brandy"], [676, "Breaunna"], [166760, "Brenda"], [2922, "Brianna"], [12, "Brienne"], [30, "Brindtha"], [2487, "Britt"], [1119, "Brittany"], [7062, "Brooke"], [1344, "Brynn"], [3187, "Bunyawi"], [537, "Busra"], [119797, "Cagla"], [15218, "Caitlin"], [9147, "Camelia Elena"], [38, "Cameron"], [202172, "Camila"], [136, "Camila Vital"], [11714, "Camilla"], [574, "Camille"], [240762, "Cara"], [90451, "Carina"], [669546, "Carla"], [27, "Carlota"], [562, "Carlotta"], [67459, "Carly"], [8174, "Carmen"], [1077, "Carmen Raluca"], [14213, "Carol"], [9093, "Carolin"], [36889, "Carolina"], [3627, "Carolina Meligeni Rodrigues"], [2076949, "Caroline"], [111, "Caroline B"], [72, "Carolyn"], [289, "Carson"], [202697, "Casey"], [250056, "Catalina"], [4987, "Catherine"], [45884, "Catherine Cartan"], [22, "Caty"], [11954, "Cecilia"], [95, "Cecilie Lundgaard"], [18824, "Celine"], [958, "Cemre"], [4914, "Chalena"], [62861, "Chanel"], [275364, "Chanelle"], [26585, "Chang"], [39, "Chanikarn"], [15001, "Chantal"], [187, "Chantelle"], [15, "Chaoyi"], [5683, "Charlene"], [4356, "Charlotte"], [20132, "Chayenne"], [5, "Chelsea"], [6777, "Chelsey"], [26779, "Chen"], [277, "Chengyiyi"], [49122, "Chi Chi"], [667, "Chi Fan"], [679, "Chia Hsien"], [33301, "Chia Jung"], [42773, "Chiaki"], [6159, "Chiara"], [34796, "Chieh Yu"], [15401, "Chihiro"], [70504, "Chin Wei"], [13141, "Chinami"], [7975, "Ching Wen"], [1726, "Chiraz"], [358, "Chisa"], [15190, "Chloe"], [276, "Chompoothip"], [24, "Christie"], [310215, "Christina"], [2438, "Christine"], [12519, "Chun Mei"], [3374, "Chun Yan"], [31620, "Cindy"], [141876, "Claire"], [116, "Clara"], [32581, "Claudia"], [1227, "Claudia Antonia"], [934, "Claudia Gianina"], [106762, "Claudine"], [2221, "Clelia"], [1622, "Clemence"], [538, "Clementina Eugenia"], [12304, "Clothilde"], [235721, "Coco"], [129, "Colomba"], [52274, "Conny"], [25166, "Constance"], [907, "Constanza"], [18, "Constanze"], [1002, "Corina"], [102260, "Corinna"], [4053, "Cornelia"], [20869, "Cory Ann"], [1236, "Costanza"], [7486, "Cristiana"], [59412, "Cristina"], [75414, "Cristina Andreea"], [317, "Cristina Madalina"], [6256, "Csilla"], [1034, "Cynthia"], [1417, "Da Hye"], [1261, "Dabin"], [160, "Dagmara"], [8589, "Daiana"], [150, "Dajana"], [8939, "Dalia"], [48857, "Dalila"], [15935, "Dalma"], [0, "Damilola"], [12, "Damini"], [30, "Damira"], [639, "Dan Ni"], [3121, "Dana"], [1607, "Daneika"], [17597, "Danica"], [1165205, "Daniela"], [16663, "Daniella"], [40823, "Danielle"], [8507, "Danielle Rose"], [545, "Danijela"], [87958, "Danka"], [33, "Daphne"], [170617, "Daria"], [41925, "Darija"], [857, "Dariya"], [163036, "Darya"], [1923, "Dasha"], [5619, "Dayana"], [7027, "Dea"], [7605, "Deborah"], [141, "Deeon"], [9846, "Dejana"], [1192, "Demi"], [65522, "Denisa"], [3298, "Denise"], [168, "Denise Antonela"], [23620, "Deniz"], [215, "Deria"], [354, "Desirae"], [709, "Desiree"], [19065, "Despina"], [3942, "Despoina"], [9227, "Destanee"], [134, "Dewi"], [2738, "Dhruthi"], [9780, "Di"], [79958, "Dia"], [119279, "Diana"], [99, "Diana Maria"], [6369, "Dianne"], [7353, "Dijana"], [85, "Dilara"], [149, "Dina"], [67017, "Dinah"], [117, "Doga Selen"], [1614, "Domenica"], [918746, "Dominika"], [455, "Dominique"], [164, "Donika"], [114098, "Donna"], [109, "Dorien"], [23976, "Doroteja"], [392, "Draginja"], [4703, "Dunja"], [713, "Ebony"], [1978, "Eden"], [249446, "Edina"], [11216, "Eduarda"], [2446, "Eetee"], [50, "Ege"], [1005319, "Ekaterina"], [26897, "Ekaterine"], [103, "Elaine"], [2287, "Eleanor"], [1247887, "Elena"], [7772, "Elena Gabriela"], [6547, "Elena Teodora"], [439179, "Eleni"], [405, "Eleonora"], [567, "Eleonore"], [882, "Eliessa"], [314747, "Elina"], [4709, "Elisabeth"], [43779, "Elise"], [87263, "Elitsa"], [18211, "Elixane"], [480, "Eliza"], [536, "Elizabeta"], [20368, "Elizabeth"], [1103, "Elizabeth Anita Alexandria"], [62977, "Elizaveta"], [636, "Elizaveta Anna"], [960, "Elke"], [526, "Ella"], [13761, "Ellen"], [8079, "Ellie"], [90, "Elodie"], [12554, "Elyne"], [11218, "Ema"], [12728, "Emelyn"], [3880, "Emi"], [43, "Emilia"], [1258, "Emiliana"], [1440, "Emilie"], [24, "Emilija"], [541, "Emiliya"], [52889, "Emily"], [964, "Emily J"], [3029, "Emina"], [85022, "Emma"], [65, "Emma Christine"], [1609, "Emmanuelle"], [52, "En Pei"], [823, "Ena"], [34570, "Eri"], [472, "Erica"], [165477, "Erika"], [5356, "Erin"], [1225, "Erina"], [69, "Esen"], [376, "Estela"], [39989, "Estelle"], [3908, "Ester"], [126811, "Estrella"], [7147, "Etsuko"], [976, "Eudice Wong"], [36, "Eugenia"], [204801, "Eugenie"], [20989, "Eugeniya"], [320083, "Eva"], [41, "Eva Marie"], [744, "Eveliina"], [27011, "Evelyn"], [59775, "Evgenia"], [206981, "Evgeniya"], [7755, "Fang Ying"], [33388, "Fangzhou"], [11260, "Fanny"], [167, "Farah"], [10865, "Fatima"], [898, "Fatimah"], [21261, "Fatma"], [80, "Fatyha"], [56817, "Federica"], [44, "Federica Joe"], [17587, "Fernanda"], [78, "Ferny"], [18219, "Fiona"], [1011058, "Flavia"], [89361, "Florencia"], [359, "Frances"], [1306087, "Francesca"], [157, "Francisca"], [21685, "Francoise"], [994, "Franziska"], [9, "Frederikke"], [6525, "Freya"], [102623, "Gabriela"], [468, "Gabriela Nicole"], [6179, "Gabriella"], [1093, "Gabrielle Faith"], [1000, "Gaelle"], [7998, "Gaia"], [38651, "Gail"], [302957, "Galina"], [30136, "Ganna"], [412872, "Garbine"], [143, "Gebriela"], [440, "Genevieve"], [9600, "Georgia"], [1848, "Georgia Andreea"], [48, "Georgiana"], [11569, "Georgina"], [290, "Ghislaine"], [677, "Giada"], [31741, "Gioia"], [2484, "Giorgia"], [13, "Giorgie"], [289, "Giovanna"], [106520, "Giulia"], [2935, "Giuliana"], [1297, "Gloria"], [2864, "Gozal"], [70613, "Grace"], [7999, "Gracia"], [6168, "Greetje"], [240195, "Greta"], [14277, "Guadalupe"], [576, "Guillermina"], [687, "Guiomar"], [410, "Gulben"], [18, "Gulchekhra"], [39, "Gulnaz"], [775, "Guzal"], [238, "Gyulnara"], [811, "Habiba"], [8180, "Hae Sung"], [294, "Haine"], [413, "Hana"], [2782, "Hanna"], [4643, "Hanyu"], [9631, "Hao Chen"], [224, "Hao Ching"], [5944, "Harmony"], [8608, "Harriet"], [3633, "Haruka"], [1873, "Haruna"], [1679, "Hayley"], [78, "Hazal"], [202780, "Heather"], [88542, "Heidi"], [1039, "Helen"], [3928, "Helene"], [122, "Hikari"], [10191, "Hilda"], [3, "Himari"], [27580, "Hiroko"], [4368, "Hirono"], [2371, "Ho Ching"], [24, "Hollie"], [1063, "Hongrui"], [98, "Hortencia"], [120, "Hsin Yuan"], [7367, "Hua Chen"], [118, "Huijie"], [7797, "Hulya"], [1222, "Hye Min"], [870, "Hyojung"], [8301, "Hyun Hui"], [511, "I Hsuan"], [395, "Iana"], [467, "Ida"], [45, "Idia"], [916, "Iga"], [52, "Ilay"], [1142, "Ilka"], [26950, "Ilona"], [1527, "Ilze"], [1676, "Imane Maelle"], [292, "Ina"], [406, "Inci"], [762, "India"], [12633, "Indire"], [17382, "Indy"], [1358, "Ineke"], [40410, "Ines"], [221, "Inger"], [3471, "Ingrid"], [4766, "Ingrid Alexandra"], [10133, "Ingrid Esperanza"], [33, "Intissar"], [1225, "Ioana"], [2403, "Ioana Diana"], [5425, "Ioana Loredana"], [6948, "Ionela Andreea"], [39352, "Ipek"], [88369, "Irena"], [3133, "Irene"], [299698, "Irina"], [293366, "Irina Camelia"], [13843, "Irina Maria"], [4743, "Iris"], [87844, "Iryna"], [6688, "Isabel"], [714, "Isabela"], [83476, "Isabella"], [4777, "Isabelle"], [74, "Iulia Maria"], [10322, "Iva"], [100848, "Ivana"], [2094, "Ivania"], [291, "Ivanka"], [443695, "Iveta"], [543, "Ivette"], [253, "Ivone"], [13010, "Ivonne"], [27462, "Jacqueline"], [64, "Jada"], [26209, "Jade"], [1375, "Jaeda"], [5007, "Jaimee"], [24, "Jaimy Gayle"], [761, "Jainy"], [190997, "Jamie"], [18, "Jamilya"], [10947, "Jan"], [268372, "Jana"], [143422, "Janette"], [12525, "Janina"], [72, "Janja"], [861, "Janneke"], [5416, "Jaqueline Adina"], [464, "Jara"], [333150, "Jarmila"], [34453, "Jasmin"], [43862, "Jasmina"], [14865, "Jasmine"], [142, "Jasmine Amber"], [822, "Jawairiah"], [908, "Jazmin"], [628, "Jazzamay"], [3426, "Jeannine"], [2515436, "Jelena"], [81222, "Jennifer"], [1002, "Jenny"], [17819, "Jesika"], [154599, "Jessica"], [4122, "Jessika"], [923, "Jessy"], [7179, "Ji Hee"], [8592, "Ji Young"], [52, "Jia"], [48117, "Jia Jing"], [4612, "Jia Qi"], [1553, "Jiahui"], [15, "Jiakang"], [100, "Jiatian"], [3002, "Jiaxi"], [96, "Jiaxue"], [610820, "Jie"], [13978, "Jil Belen"], [611, "Jil Nora"], [359013, "Jill"], [1991, "Jillian"], [15, "Jin"], [46355, "Jin A"], [414, "Jin Ju"], [68925, "Jing Jing"], [1955, "Joana"], [472, "Joanna"], [15, "Joanne"], [355, "Jodie Anna"], [40, "Johana"], [553107, "Johanna"], [1092, "Jordana"], [2710, "Josepha"], [4980, "Josephine"], [804, "Josie"], [39270, "Jovana"], [3453, "Ju Eun"], [3, "Judith"], [63, "Jule"], [891796, "Julia"], [21, "Julia Mansano"], [414, "Juliana"], [129, "Juliana Rocha"], [156531, "Julie"], [4093, "Julieta Lara"], [286, "Julita"], [1446, "Julyette Maria Josephine"], [114, "June"], [128183, "Junri"], [36, "Justina"], [39418, "Justine"], [30304, "Justyna"], [467, "Kady"], [172004, "Kai Chen"], [37817, "Kai Lin"], [625836, "Kaia"], [416, "Kaitlin"], [3905, "Kaitlyn"], [1176, "Kaja"], [2280, "Kajsa"], [12906, "Kamila"], [249, "Kamilla"], [5866, "Kamonwan"], [1536, "Kana"], [20142, "Kanae"], [229, "Kanako"], [3724, "Kanami"], [919, "Kanika"], [8406, "Kaori"], [32169, "Karen"], [85, "Kariann"], [254520, "Karin"], [9355, "Karina"], [5493, "Karina Ildor"], [410, "Karina Kristina"], [1936, "Karine"], [1003, "Karis"], [3127, "Karla"], [3193, "Karman"], [776, "Karola Patricia"], [465, "Karolayne"], [512490, "Karolina"], [910, "Karoline"], [330, "Karyn"], [704, "Kassandra"], [112562, "Katalin"], [444303, "Katarina"], [93730, "Katarzyna"], [34, "Kate"], [160945, "Katerina"], [435038, "Kateryna"], [24595, "Katharina"], [363, "Katharine"], [7843, "Katherine"], [1894, "Katherine Gabriela"], [15970, "Kathinka"], [141281, "Kathrin"], [30035, "Katie"], [308, "Katrine Isabel"], [11572, "Katy"], [515, "Katya"], [97, "Katyarina"], [13697, "Kayla"], [237, "Kaylah"], [10107, "Kazusa"], [294, "Kei"], [324, "Kelia"], [4705, "Kelly"], [5880, "Kelly S"], [410, "Kelsey"], [653, "Kennedy"], [24062, "Keren"], [894, "Keri"], [942, "Kerstin"], [3748, "Khristina"], [86, "Ki Ryang"], [214121, "Kiki"], [4580, "Kim"], [12388, "Kim Alice"], [5393, "Kimberley"], [4831, "Kimberly"], [272, "Kimika"], [270102, "Kimiko"], [15102, "Kinnie"], [383077, "Kirsten"], [462, "Kirsten Andrea"], [5818, "Klaartje"], [568191, "Klara"], [4809, "Klaudia"], [701, "Komola"], [21417, "Korina"], [4962, "Kotomi"], [17577, "Krista"], [34647, "Kristie"], [601693, "Kristina"], [555, "Kristina N"], [1899, "Kristy"], [148728, "Kristyna"], [371140, "Ksenia"], [298, "Kseniia"], [625, "Ksenija"], [56212, "Kumiko"], [177170, "Kurumi"], [210101, "Kveta"], [403, "Kwan Yau"], [3200, "Kyle"], [1236, "Kylie"], [9036, "Kyoka"], [102022, "Kyra"], [26059, "Kyung Mi"], [6078, "Laetitia"], [595, "Laili"], [456, "Lamis"], [177458, "Lara"], [255, "Larikah"], [578964, "Laura"], [281, "Laura D"], [33822, "Laura Ioana"], [97, "Laura Sofia"], [244807, "Lauren"], [207, "Lauryn"], [23897, "Lavinia"], [39, "Laylo"], [22, "Layne"], [4197, "Lea"], [152, "Leah"], [733, "Lee"], [27997, "Lena"], [14942, "Lena Marie"], [164900, "Lenka"], [750, "Leolia"], [672, "Leonie"], [286, "Lesedi Sheya"], [225987, "Lesia"], [42925, "Lesley"], [173, "Leslie"], [45115, "Leticia"], [87, "Leticia Garcia"], [48, "Leylah Annie"], [1696, "Li"], [59997, "Liana Gabriela"], [2362, "Libby"], [522, "Libi"], [169, "Lidia"], [6809, "Lidziya"], [39782, "Liezel"], [23411, "Liga"], [1960, "Lilla"], [40341, "Lin"], [91117, "Lina"], [4216, "Linda"], [142454, "Lindsay"], [500, "Lindsey"], [64525, "Ling"], [72, "Liniques"], [697, "Linnea"], [594217, "Lisa"], [7898, "Lisa Maria"], [1583, "Lisa Marie"], [8284, "Lisanne"], [2662, "Liubov"], [128, "Livia"], [2216, "Liz Tatiane"], [135, "Lizaveta"], [11623, "Lizette"], [33, "Lorenza"], [40, "Lorraine M"], [10167, "Lou"], [6, "Loudmilla"], [50700, "Louisa"], [1633, "Louise"], [371035, "Lourdes"], [3445, "Lu"], [1013, "Luca"], [17185, "Lucia"], [8305, "Luciana"], [1108372, "Lucie"], [1589, "Lucrezia"], [6542, "Lucy"], [645, "Ludmila"], [1187, "Ludmilla"], [1671, "Luisa"], [1822, "Luisa Marie"], [77519, "Luksika"], [304, "Lulu"], [15, "Luna"], [377, "Lusine"], [876, "Lutfiye"], [30, "Lyann"], [837, "Lynn"], [54172, "Lyudmyla"], [12379, "Macall"], [2133, "Macarena"], [62938, "Madalina"], [2434, "Maddison"], [715, "Madeleine"], [147, "Madeline"], [6, "Madina"], [476768, "Madison"], [2266, "Madrie"], [525, "Maegan"], [163, "Mafalda"], [54, "Maftuna"], [1917, "Magali"], [511, "Magalie"], [103659, "Magda"], [401857, "Magdalena"], [756, "Magy"], [154, "Mahak"], [395, "Mahitha"], [19173, "Mai"], [1235, "Maia"], [12, "Maia A"], [11320, "Maiko"], [83, "Maileen"], [39523, "Mailen"], [1067, "Maja"], [5592, "Makiho"], [14129, "Makoto"], [316, "Malene"], [323, "Malika"], [2489, "Malin"], [688, "Mallaurie"], [44497, "Mallory"], [3073, "Malou"], [96, "Mami"], [102, "Man Ying Maggie"], [9593, "Mana"], [15, "Mananchaya"], [2070, "Manca"], [193767, "Mandy"], [3112, "Manisha"], [14608, "Manon"], [93, "Manya"], [702, "Mara"], [16790, "Marcela"], [683, "Marcela Guimaraes"], [33, "Marcelina"], [13037, "Marcella"], [99836, "Margalita"], [1997, "Margarida"], [78265, "Margarita"], [905, "Margaux"], [4787, "Margot"], [38086, "Mari"], [3613355, "Maria"], [185, "Maria Agustina"], [323, "Maria Andrea"], [148, "Maria Camila"], [1892, "Maria Constanza De Las Mercedes"], [296, "Maria Del Rosario"], [296736, "Maria Elena"], [141257, "Maria Fernanda"], [294, "Maria Jesus"], [72682, "Maria Joao"], [413759, "Maria Jose"], [156, "Maria Lourdes"], [1388, "Maria Paulina"], [106375, "Maria Teresa"], [4060, "Mariam"], [201258, "Mariana"], [10178, "Marianna"], [1090, "Marianne"], [226, "Mariaryeni"], [25496, "Marie"], [114687, "Marie Eve"], [206, "Mariia"], [20481, "Marija"], [3, "Marijana"], [362372, "Marina"], [4314, "Marine"], [1272285, "Marion"], [4, "Mariona"], [1026, "Marisa"], [154484, "Mariya"], [18286, "Marketa"], [1624, "Marlies"], [1339, "Marrit"], [267679, "Marta"], [778, "Marta Huqi"], [153, "Martha"], [109192, "Martina"], [653, "Mary"], [102, "Mary Ann"], [85425, "Maryna"], [117472, "Masa"], [245139, "Mathilde"], [3466, "Matilda"], [210, "Maud"], [219, "Maureen"], [138, "Maurien"], [390, "Maxine"], [225, "May"], [23668, "Maya"], [1788, "Mayar"], [32445, "Mayo"], [9064, "Mayya"], [13254, "Megan"], [407, "Megumi"], [40, "Mei Xu"], [417, "Meiling"], [96, "Meiqi"], [385636, "Melanie"], [97, "Melany Solange"], [2609, "Melina"], [290299, "Melinda"], [20196, "Melis"], [340, "Melisa"], [200, "Melissa"], [171, "Melissa Ishuan"], [542, "Meng Ning"], [48, "Mercedes"], [101, "Merel"], [284, "Meritxell"], [102693, "Mervana"], [24569, "Mi"], [176, "Mi Jeong"], [1858, "Mi Rae"], [72, "Mi Zhuoma"], [1098, "Mia Nicole"], [230, "Micaela"], [76586, "Michaela"], [242619, "Michaella"], [90, "Michela"], [596, "Michele Alexandra"], [160164, "Michelle"], [3657, "Michika"], [69242, "Mihaela"], [15, "Mihaela Lorena"], [21205, "Miharu"], [427, "Mihika"], [201, "Mihoki"], [24542, "Miki"], [107, "Mila"], [42, "Milagros"], [14123, "Milana"], [279, "Milena"], [63, "Milica"], [1884, "Min"], [9938, "Min Hwa"], [96, "Minami"], [1626, "Mira"], [1977, "Mirabelle"], [180, "Miranda"], [3825, "Miriam"], [1458, "Miriam Bianca"], [1180, "Miriana"], [272, "Mirjam"], [331434, "Mirjana"], [55981, "Misa"], [203782, "Misaki"], [309, "Mitsumi"], [22840, "Miyabi"], [23968, "Miyu"], [2927, "Mizuno"], [565, "Molly"], [2061, "Momoko"], [282445, "Mona"], [587309, "Monica"], [1240, "Monika"], [114104, "Monique"], [23564, "Montserrat"], [6906, "Morgane"], [15, "Moulika"], [12, "Mouna"], [32, "Moyuka"], [6, "Muazzez"], [162, "Muge"], [43550, "Myrtille"], [1358928, "Na"], [26185, "Na Lae"], [19223, "Na Ri"], [5027, "Nadezda"], [1401125, "Nadia"], [56596, "Nadiya"], [2661, "Nadja"], [1535, "Nagi"], [4380, "Naiktha"], [440, "Naima"], [259, "Nam Yeon"], [3094, "Nan Nan"], [16494, "Nanuli"], [59671, "Nao"], [857, "Naoko"], [163239, "Naomi"], [1945, "Napatsakorn"], [72, "Nastassia"], [65152, "Nastassja"], [29250, "Nastja"], [97400, "Natalia"], [120995, "Natalie"], [13686, "Natalija"], [33, "Nataliya"], [14212, "Natasa"], [15365, "Natasha"], [16303, "Natela"], [649, "Natella"], [28098, "Nathalia"], [13241, "Nathaly"], [2526, "Natia"], [37981, "Natsumi"], [224, "Nattawadee"], [251, "Naz"], [980, "Nazari"], [9536, "Neda"], [142, "Nelise"], [279, "Nermeen"], [170, "Nevena"], [30972, "Nicha"], [2531, "Nicky"], [33550, "Nicola"], [447434, "Nicole"], [8146, "Nicoleta Catalina"], [9627, "Nicolette"], [5425, "Nidhi"], [47651, "Nigina"], [9120, "Nika"], [22, "Nikita"], [614, "Nikki"], [491, "Nikol"], [78513, "Nikola"], [201173, "Nina"], [115, "Nina Isabella"], [2706, "Nives"], [1558, "Noel"], [2025, "Noelia"], [1795, "Noelle"], [134, "Nonna"], [73589, "Noppawan"], [1082, "Nora"], [760, "Nour"], [1333, "Nozomi"], [63013, "Nudnida"], [24523, "Nungnadda"], [259116, "Nuria"], [1096, "Oana"], [4294, "Oana Georgeta"], [56853, "Oceane"], [5372, "Ofri"], [58279, "Oksana"], [3497, "Ola"], [2, "Olawaseun"], [40, "Olaya"], [8700, "Oleksandra"], [484, "Olena"], [3811, "Olesya"], [773929, "Olga"], [119756, "Olivia"], [363, "Oliwia"], [56242, "Ons"], [2133, "Ornella"], [382, "Oyku"], [147, "Paige Mary"], [241, "Pamela"], [1446, "Panna"], [403127, "Paola"], [209, "Parris"], [1188, "Patcharin"], [197904, "Patricia"], [43755, "Patricia Maria"], [17514, "Patrycja"], [7323, "Patty"], [172431, "Paula"], [269, "Paula Andrea"], [3714, "Paula Catalina"], [37384, "Paula Cristina"], [3208, "Paulina"], [313187, "Pauline"], [4128, "Pavla"], [26280, "Peangtarn"], [1016, "Peggy"], [8900, "Pei Chi"], [24, "Pei Hsuan"], [181, "Pei Ju"], [60908, "Pemra"], [6573, "Pernilla"], [1832, "Petia"], [1958404, "Petra"], [3, "Phenomena"], [664, "Phillis"], [10859, "Pia"], [21340, "Piia"], [6404, "Pilar"], [243, "Pippa"], [934, "Plobrung"], [76747, "Polina"], [325216, "Polona"], [13006, "Poojashree"], [1214, "Pranjala"], [5687, "Prarthana G"], [9318, "Prerna"], [510, "Priscila"], [8203, "Priscilla"], [116857, "Qiang"], [683, "Qianhui"], [641, "Qianqian"], [2034, "Qiu Yu"], [646, "Quinn"], [22978, "Quirine"], [2592, "Rachael"], [469, "Rachel"], [699, "Radina"], [228, "Rafaela"], [40, "Ralina"], [148701, "Raluca"], [9202, "Raluca Elena"], [4258, "Raluca Georgiana"], [443, "Ramu"], [161, "Ramya"], [14709, "Ran"], [9, "Rana"], [30401, "Raquel"], [741, "Rashmi"], [957, "Ratnika"], [5387, "Raveena"], [168, "Rebeca"], [165013, "Rebecca"], [5803, "Rebeka"], [122331, "Regina"], [64, "Reina"], [66271, "Reka Luca"], [38116, "Remi"], [201856, "Renata"], [5566, "Ria"], [984, "Rianna"], [84184, "Richel"], [141257, "Rika"], [23195, "Riko"], [556, "Rio"], [62252, "Risa"], [8448, "Rishika"], [1401, "Rita"], [2634, "Riya"], [809611, "Roberta"], [12295, "Robin"], [1103, "Robyn"], [16886, "Rocio"], [29214, "Romana"], [17020, "Romana Caroline"], [253471, "Romina"], [911, "Romy"], [308, "Rona"], [3165, "Ronit"], [49, "Ronke"], [28, "Roosh"], [111, "Rosa"], [803, "Rosalia"], [880, "Rosalie"], [336, "Rosie"], [38793, "Roxane"], [24, "Rui"], [27452, "Rushmi"], [3642, "Rutuja"], [597, "Ryann"], [195, "Saana"], [780, "Sabastiani"], [49784, "Sabina"], [27, "Sabina Elena"], [590911, "Sabine"], [6810, "Sabrina"], [78204, "Sacha"], [49767, "Sachia"], [42676, "Sachie"], [2275, "Sadafmoh"], [1034, "Sai Samhitha"], [113359, "Saisai"], [9338, "Sakiko"], [53480, "Sally"], [66, "Salma"], [1437656, "Samantha"], [2020, "Samira"], [354, "Sanae"], [17975, "Sanaz"], [266197, "Sandra"], [224, "Sandy"], [1277, "Sang Hee"], [272889, "Sania"], [914981, "Sara"], [78461, "Sarah"], [1270, "Sarah Beth"], [13064, "Sarah Rebecca"], [461, "Sarahi"], [148, "Sarai Delfina"], [2061, "Saray"], [464, "Sari"], [27, "Sarlota"], [178, "Sarvinoz"], [316, "Sasa"], [2641, "Saska"], [906, "Satsuki"], [70, "Savannah"], [148, "Schena"], [143, "Se Hyun"], [681, "Se Jin"], [75, "Sean"], [1469, "Seda"], [144, "Seira"], [169, "Selin"], [6564, "Seo Kyung"], [1312, "Seone"], [4232828, "Serena"], [208108, "Sesil"], [6650, "Seung Yeon"], [192296, "Severine"], [662926, "Shahar"], [2122, "Shakhlo"], [198, "Shakhnoza"], [111, "Shangqing"], [2378, "Shanshan"], [1363, "Shao Yuan"], [4106, "Sharmada"], [117825, "Sharon"], [522, "Sharon Sanchana"], [102140, "Shelby"], [142, "Shelly"], [53610, "Sheng Nan"], [22977, "Sherazad"], [801, "Sherry"], [39960, "Shiho"], [9634, "Shilin"], [18, "Shiori"], [117, "Shir"], [236, "Shiran"], [4611, "Shivika"], [105, "Shou Na"], [6, "Shreya"], [1483, "Shu Ying"], [913829, "Shuai"], [46124, "Shuko"], [597, "Shuo"], [336, "Shuyue"], [3255, "Shweta"], [531, "Si Qi"], [221695, "Silvia"], [724638, "Simona"], [1149, "Simone"], [467, "Simran Kaur"], [10360, "Sina"], [688, "Sinead"], [95, "Sing Le"], [716, "Siqi"], [276, "Sirui"], [87, "Siyu"], [352458, "Sloane"], [96, "Smriti"], [134, "Sneha"], [2820, "Snehadevi S"], [47282, "So Jung"], [18210, "So Ra"], [484140, "Sofia"], [336, "Sofico"], [10539, "Sofie"], [18371, "Sofiya"], [9180, "Sofya"], [108, "Sohyun"], [480, "Sonia"], [4499, "Sonja"], [96, "Sophia"], [39307, "Sophie"], [457043, "Sorana"], [2961, "Sowjanya"], [159, "Spurti"], [1744, "Sri Vaishnavi"], [8072, "Stamatia"], [49412, "Stanislava"], [497, "Stefana"], [126, "Stefani"], [24897, "Stefania"], [247237, "Stefanie"], [3085, "Steffi"], [608309, "Stephanie"], [1397, "Stephanie Mariel"], [21152, "Storm"], [33672, "Su Jeong"], [274936, "Su Wei"], [320, "Suellen"], [1544, "Sultan"], [6591, "Sun Jung"], [15, "Sunae"], [3594, "Sunam"], [29852, "Sung Hee"], [502, "Susan"], [16276, "Susanne"], [344, "Suzan"], [324, "Suzuho"], [1054, "Suzy"], [6341, "Svenja"], [1906587, "Svetlana"], [11201, "Sviatlana"], [581, "Sybille"], [1626, "Sylvia"], [8268, "Sylwia"], [9001, "Syna"], [2127, "Szabina"], [83659, "Tadeja"], [1050, "Taisiya"], [45, "Talya"], [843, "Tamachan"], [60, "Tamar"], [54140, "Tamara"], [304, "Tamari"], [594281, "Tamarine"], [40060, "Tamaryn"], [322202, "Tamira"], [26077, "Tammi"], [764, "Tanaporn"], [1229, "Tanya"], [54798, "Tara"], [42, "Tatia"], [34795, "Tatiana"], [230262, "Tatjana"], [1289, "Tatsiana"], [5051, "Tayisiya"], [38850, "Taylor"], [2127, "Tea"], [112570, "Teliana"], [12402, "Tena"], [41792, "Teodora"], [193362, "Tereza"], [18, "Terri"], [7165, "Tess"], [9116, "Tessah"], [75337, "Tetiana"], [43020, "Tetyana"], [706, "Thai Sa Grana"], [2249, "Theo"], [377, "Theresa"], [333, "Tijana"], [612072, "Timea"], [57585, "Tina"], [476, "Tinatin"], [8145, "Ting Fei"], [8676, "Ting Jr"], [151, "Tingting"], [3361, "Tjasa"], [7431, "Tomoko"], [10630, "Tori"], [1864, "Tornado Alicia"], [1884, "Trang"], [736, "Treta"], [456422, "Tsvetana"], [4543, "Tyra"], [27118, "Ulrikke"], [2400, "Ulyana"], [275255, "Urszula"], [413, "Ushna"], [7874, "Usue Maitane"], [338, "Valentina"], [9926, "Valentine"], [15198, "Valentini"], [47854, "Valentyna"], [159155, "Valeria"], [6146, "Valerie"], [16621, "Valeriya"], [10087, "Vanda"], [30669, "Vanesa"], [71645, "Vanessa"], [299530, "Vania"], [255, "Vaniya"], [291, "Vanja"], [54340, "Varatchaya"], [3623, "Varunya"], [401409, "Varvara"], [42527, "Vasilisa"], [3763, "Vaszilisza"], [2221, "Vendula"], [2875425, "Venus"], [1929137, "Vera"], [3018, "Verena"], [84543, "Veronica"], [1678, "Veronica M"], [73192, "Veronika"], [169500, "Vesna"], [77, "Vicky"], [454, "Victoire"], [2142854, "Victoria"], [106, "Victoria Ariadna"], [30191, "Viktoria"], [90, "Viktoriia"], [79511, "Viktorija"], [26226, "Viktoriya"], [1987, "Viktoryia"], [27, "Vilma Y"], [105, "Vincenza"], [37, "Vinciane"], [298, "Violetta"], [519208, "Virginie"], [71, "Vishesh"], [64, "Vita"], [106927, "Vitalia"], [36714, "Vivian"], [13041, "Vivien"], [8918, "Vivienne"], [22578, "Vlada"], [997, "Vladica"], [6470, "Vladimira"], [1254, "Vladislava"], [2570, "Vladyslava"], [18781, "Vojislava"], [1036, "Voni"], [11653, "Wan Ting"], [42, "Wan Yi"], [9, "Warona"], [40633, "Wen Hsin"], [120, "Wen Ling"], [613, "Wendy Qi Wen"], [179, "Weronika Jasmina"], [5604, "Whitney"], [363, "Wiktoria"], [11694, "Wing Yau Venise"], [879, "Wushuang"], [14578, "Xenia"], [1445, "Xi Yao"], [4789, "Xiao"], [5057, "Xiaodi"], [717, "Xiaorong"], [1352, "Xiaoxi"], [19495, "Ximena"], [8744, "Xin"], [187, "Xin Yu"], [10705, "Xinyu"], [109256, "Xinyun"], [315, "Xiyu"], [4535, "Xu Liu"], [24, "Ya"], [17078, "Ya Hsuan"], [39687, "Yafan"], [4196, "Yan"], [39102, "Yana"], [73, "Yang"], [602453, "Yanina"], [275, "Yanni"], [32, "Yarden"], [404915, "Yaroslava"], [11251, "Yasmin"], [27, "Yasmina"], [1748, "Yasmine"], [71, "Yasmyn"], [648, "Yawna"], [128509, "Yayuk"], [47867, "Ye Ra"], [281, "Ye Xin"], [376, "Yekaterina"], [1856, "Yelena"], [966, "Yeong Won"], [6288, "Yevgeniya"], [19989, "Yi"], [60646, "Yi Fan"], [22443, "Yi Jing"], [61839, "Yi Miao"], [136, "Yidi"], [24, "Yihong"], [366, "Yijia"], [3783, "Ying"], [107595, "Ying Ying"], [1380, "Yixuan"], [1546, "Ylena"], [1453, "Ylona Georgiana"], [285, "Yoko"], [1381, "Yolande"], [182, "Yoo Ri"], [3592, "Yoon Young"], [677, "Yoshimi"], [75, "Yosr"], [242, "You Na"], [27804, "Ysaline"], [452, "Yu Jin"], [9, "Yu Tong"], [281, "Yuan"], [772, "Yuanyi"], [1259, "Yue"], [21360, "Yue Yue"], [682, "Yuenu"], [184, "Yujia"], [12474, "Yuka"], [84, "Yukako"], [505, "Yuki"], [2191, "Yuki Kristina"], [998, "Yukina"], [1828, "Yukun"], [155143, "Yulia"], [15248, "Yuliana"], [206375, "Yuliya"], [20269, "Yumi"], [229391, "Yung Jan"], [559, "Yuqi"], [101816, "Yurika"], [1728, "Yuriko"], [12693, "Yurina"], [15071, "Yuuki"], [45, "Yuval"], [24279, "Yuxuan"], [254491, "Yvonne"], [87, "Zaineb"], [2052, "Zalina"], [3809, "Zarah"], [123243, "Zarina"], [702, "Zeel"], [21, "Zeynep  Sena"], [2166, "Zhanlan"], [20236, "Zhaoxuan"], [7, "Zhibek"], [99, "Zhima"], [30, "Zhou"], [121, "Zhuoma"], [110290, "Zi"], [74, "Zinovia"], [1420, "Ziyue"], [2772, "Zoe"], [2877, "Zoe Gwen"], [1501, "Zsofia"], [266251, "Zuzana"], [2258, "Zuzanna"]], "trigger_words": ["Total Number", "First Name"], "Prediction": "players.first_name, SUM(rankings.ranking_points) AS total_ranking_points\n FROM players\n JOIN rankings ON players.player_id = rankings.player_id\n GROUP BY players.player_id;"}
{"db_id": "wta_1", "query": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "query_toks": ["SELECT", "sum", "(", "ranking_points", ")", ",", "T1.first_name", "FROM", "players", "AS", "T1", "JOIN", "rankings", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "GROUP", "BY", "T1.first_name"], "query_toks_no_value": ["select", "sum", "(", "ranking_points", ")", ",", "t1", ".", "first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "group", "by", "t1", ".", "first_name"], "question": "What are the first names of all players, and their total ranking points?", "question_toks": ["What", "are", "the", "first", "names", "of", "all", "players", ",", "and", "their", "total", "ranking", "points", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 41, false], null]]}, "select": [false, [[4, [0, [0, 42, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "472", "answer_text": [[68, "Aastha"], [304, "Abbi"], [5214, "Abbie"], [115293, "Abigail"], [120, "Abiodun"], [72, "Abir"], [490, "Adeliya"], [219, "Adnya"], [28045, "Adriana"], [107, "Adrienn"], [4619, "Adrijana"], [9, "Adva"], [156, "Afroditi"], [1901, "Agata"], [219, "Agata Jadwiga"], [110, "Agne"], [390148, "Agnes"], [13717, "Agnese"], [2929, "Agni"], [1801033, "Agnieszka"], [21728, "Agustina"], [158, "Agustina Elena"], [141, "Ah"], [85, "Ahlam"], [52, "Ahsha"], [10751, "Ai"], [2217, "Ai Wen"], [703, "Aida"], [140108, "Aiko"], [288, "Ailen"], [226, "Aimee"], [92, "Aina"], [2433, "Ainhoa"], [96, "Aishwarya"], [116548, "Ajla"], [11873, "Akari"], [228538, "Akgul"], [14838, "Aki"], [83, "Akiho"], [84446, "Akiko"], [742, "Akilah"], [640, "Akvile"], [385, "Alana"], [1424, "Alba"], [238803, "Alberta"], [10507, "Albina"], [71, "Aldana"], [1578, "Alejandra"], [451414, "Aleksandra"], [35957, "Aleksandrina"], [8832, "Alena"], [235, "Alessandra"], [2524, "Alessia"], [265, "Alessondra"], [138782, "Alexa"], [955267, "Alexandra"], [191, "Alexandria"], [12829, "Alexia"], [13389, "Alexis"], [61196, "Aliaksandra"], [57745, "Alice"], [2358, "Alice Andrada"], [993, "Alicia"], [5216, "Alicja"], [11393, "Alina"], [2369, "Aliona"], [369810, "Alisa"], [323527, "Alison"], [5422, "Alix"], [596901, "Alize"], [253320, "Alla"], [33054, "Allie"], [206, "Almudena"], [4052, "Alona"], [155, "Alory Regina Elorriaga"], [25183, "Alyona"], [68207, "Amanda"], [41575, "Amandine"], [887, "Amelie"], [1990, "Amina"], [12708, "Aminat"], [157, "Amira"], [60702, "Amra"], [159, "Amrita"], [10616, "Amy"], [51803, "An Sophie"], [1589674, "Ana"], [2421, "Ana Bianca"], [36696, "Ana Clara"], [288, "Ana Gabriela"], [21, "Ana Luisa"], [2141, "Ana Paula"], [15955, "Ana Sofia"], [1367, "Ana Victoria"], [678793, "Anabel"], [1962, "Anaeve"], [46908, "Anais"], [2338, "Anamika"], [1433335, "Anastasia"], [1235, "Anastasia Evgenyevna"], [12, "Anastasiia"], [268277, "Anastasija"], [75850, "Anastasiya"], [101, "Anca"], [160, "Anda"], [605, "Andie K"], [228, "Andjela"], [51, "Andra Maria"], [920433, "Andrea"], [464, "Andrea Renee"], [1484, "Andreea"], [1365, "Andreea Amalia"], [12727, "Andreea Roxana"], [74453, "Andreja"], [72, "Andressa Cristina"], [159, "Andrina"], [202, "Aneta"], [71072, "Anett"], [1657, "Anette"], [36, "Ange Oby"], [245, "Angela"], [13643, "Angelica"], [677, "Angeliki"], [19048, "Angelina"], [1132514, "Angelique"], [17967, "Anhelina"], [836, "Anhzelika"], [48811, "Ani"], [2177, "Anita"], [11596, "Anja"], [54, "Anke"], [21599, "Ankita"], [62, "Ann"], [1017069, "Anna"], [6650, "Anna Arina"], [49207, "Anna Giulia"], [107880, "Anna Karolina"], [907, "Anna Katalina"], [359374, "Anna Lena"], [1427, "Anna Maria"], [29442, "Annalisa"], [647811, "Anne"], [5269, "Anne Liz"], [99, "Anne Marie"], [33, "Anne Sophie"], [172, "Annie"], [169371, "Annika"], [3621, "Anouk"], [280, "Antonela"], [21624, "Antonia"], [484, "Antonina"], [480, "Anushka"], [4941, "Ao"], [126, "Apichaya"], [11608, "Arabela"], [434692, "Arantxa"], [24184, "Aranza"], [383495, "Aravane"], [980, "Ariadna"], [96852, "Arina"], [3, "Arina Gabriela"], [154, "Arlinda"], [39, "Arthi"], [19446, "Aryna"], [238, "Aselya"], [99, "Asha"], [58741, "Ashleigh"], [49980, "Ashley"], [5155, "Ashling"], [648, "Ashmitha"], [2321, "Ashvarya"], [48788, "Asia"], [802, "Asiya"], [141, "Assia"], [1083, "Astra"], [269, "Astrid Wanja"], [33624, "Audrey"], [21, "Avgusta"], [7, "Axana"], [7996, "Ayaka"], [571, "Ayan"], [5173, "Ayano"], [7444, "Ayla"], [791, "Aymet"], [38501, "Ayu Fani"], [309990, "Ayumi"], [11721, "Azra"], [53401, "Barbara"], [515957, "Barbora"], [26624, "Basak"], [27061, "Beatrice"], [98798, "Beatriz"], [75, "Beatriz Magdalena"], [1920, "Beatriz Maria"], [26, "Beauty"], [351, "Belen"], [137327, "Belinda"], [11032, "Benedetta"], [2850, "Berfu"], [8441, "Bermet"], [19092, "Bernarda"], [3894, "Bernice"], [814, "Berta"], [371662, "Bethanie"], [21, "Betina"], [1152, "Bhuvana"], [63998, "Bianca"], [1213, "Bianka"], [50184, "Bibiane"], [905, "Blair"], [312, "Blanca"], [662, "Blessing"], [123, "Boba"], [283166, "Bojana"], [3470, "Borislava"], [1465, "Boyan"], [725, "Brandy"], [676, "Breaunna"], [166760, "Brenda"], [2922, "Brianna"], [12, "Brienne"], [30, "Brindtha"], [2487, "Britt"], [1119, "Brittany"], [7062, "Brooke"], [1344, "Brynn"], [3187, "Bunyawi"], [537, "Busra"], [119797, "Cagla"], [15218, "Caitlin"], [9147, "Camelia Elena"], [38, "Cameron"], [202172, "Camila"], [136, "Camila Vital"], [11714, "Camilla"], [574, "Camille"], [240762, "Cara"], [90451, "Carina"], [669546, "Carla"], [27, "Carlota"], [562, "Carlotta"], [67459, "Carly"], [8174, "Carmen"], [1077, "Carmen Raluca"], [14213, "Carol"], [9093, "Carolin"], [36889, "Carolina"], [3627, "Carolina Meligeni Rodrigues"], [2076949, "Caroline"], [111, "Caroline B"], [72, "Carolyn"], [289, "Carson"], [202697, "Casey"], [250056, "Catalina"], [4987, "Catherine"], [45884, "Catherine Cartan"], [22, "Caty"], [11954, "Cecilia"], [95, "Cecilie Lundgaard"], [18824, "Celine"], [958, "Cemre"], [4914, "Chalena"], [62861, "Chanel"], [275364, "Chanelle"], [26585, "Chang"], [39, "Chanikarn"], [15001, "Chantal"], [187, "Chantelle"], [15, "Chaoyi"], [5683, "Charlene"], [4356, "Charlotte"], [20132, "Chayenne"], [5, "Chelsea"], [6777, "Chelsey"], [26779, "Chen"], [277, "Chengyiyi"], [49122, "Chi Chi"], [667, "Chi Fan"], [679, "Chia Hsien"], [33301, "Chia Jung"], [42773, "Chiaki"], [6159, "Chiara"], [34796, "Chieh Yu"], [15401, "Chihiro"], [70504, "Chin Wei"], [13141, "Chinami"], [7975, "Ching Wen"], [1726, "Chiraz"], [358, "Chisa"], [15190, "Chloe"], [276, "Chompoothip"], [24, "Christie"], [310215, "Christina"], [2438, "Christine"], [12519, "Chun Mei"], [3374, "Chun Yan"], [31620, "Cindy"], [141876, "Claire"], [116, "Clara"], [32581, "Claudia"], [1227, "Claudia Antonia"], [934, "Claudia Gianina"], [106762, "Claudine"], [2221, "Clelia"], [1622, "Clemence"], [538, "Clementina Eugenia"], [12304, "Clothilde"], [235721, "Coco"], [129, "Colomba"], [52274, "Conny"], [25166, "Constance"], [907, "Constanza"], [18, "Constanze"], [1002, "Corina"], [102260, "Corinna"], [4053, "Cornelia"], [20869, "Cory Ann"], [1236, "Costanza"], [7486, "Cristiana"], [59412, "Cristina"], [75414, "Cristina Andreea"], [317, "Cristina Madalina"], [6256, "Csilla"], [1034, "Cynthia"], [1417, "Da Hye"], [1261, "Dabin"], [160, "Dagmara"], [8589, "Daiana"], [150, "Dajana"], [8939, "Dalia"], [48857, "Dalila"], [15935, "Dalma"], [0, "Damilola"], [12, "Damini"], [30, "Damira"], [639, "Dan Ni"], [3121, "Dana"], [1607, "Daneika"], [17597, "Danica"], [1165205, "Daniela"], [16663, "Daniella"], [40823, "Danielle"], [8507, "Danielle Rose"], [545, "Danijela"], [87958, "Danka"], [33, "Daphne"], [170617, "Daria"], [41925, "Darija"], [857, "Dariya"], [163036, "Darya"], [1923, "Dasha"], [5619, "Dayana"], [7027, "Dea"], [7605, "Deborah"], [141, "Deeon"], [9846, "Dejana"], [1192, "Demi"], [65522, "Denisa"], [3298, "Denise"], [168, "Denise Antonela"], [23620, "Deniz"], [215, "Deria"], [354, "Desirae"], [709, "Desiree"], [19065, "Despina"], [3942, "Despoina"], [9227, "Destanee"], [134, "Dewi"], [2738, "Dhruthi"], [9780, "Di"], [79958, "Dia"], [119279, "Diana"], [99, "Diana Maria"], [6369, "Dianne"], [7353, "Dijana"], [85, "Dilara"], [149, "Dina"], [67017, "Dinah"], [117, "Doga Selen"], [1614, "Domenica"], [918746, "Dominika"], [455, "Dominique"], [164, "Donika"], [114098, "Donna"], [109, "Dorien"], [23976, "Doroteja"], [392, "Draginja"], [4703, "Dunja"], [713, "Ebony"], [1978, "Eden"], [249446, "Edina"], [11216, "Eduarda"], [2446, "Eetee"], [50, "Ege"], [1005319, "Ekaterina"], [26897, "Ekaterine"], [103, "Elaine"], [2287, "Eleanor"], [1247887, "Elena"], [7772, "Elena Gabriela"], [6547, "Elena Teodora"], [439179, "Eleni"], [405, "Eleonora"], [567, "Eleonore"], [882, "Eliessa"], [314747, "Elina"], [4709, "Elisabeth"], [43779, "Elise"], [87263, "Elitsa"], [18211, "Elixane"], [480, "Eliza"], [536, "Elizabeta"], [20368, "Elizabeth"], [1103, "Elizabeth Anita Alexandria"], [62977, "Elizaveta"], [636, "Elizaveta Anna"], [960, "Elke"], [526, "Ella"], [13761, "Ellen"], [8079, "Ellie"], [90, "Elodie"], [12554, "Elyne"], [11218, "Ema"], [12728, "Emelyn"], [3880, "Emi"], [43, "Emilia"], [1258, "Emiliana"], [1440, "Emilie"], [24, "Emilija"], [541, "Emiliya"], [52889, "Emily"], [964, "Emily J"], [3029, "Emina"], [85022, "Emma"], [65, "Emma Christine"], [1609, "Emmanuelle"], [52, "En Pei"], [823, "Ena"], [34570, "Eri"], [472, "Erica"], [165477, "Erika"], [5356, "Erin"], [1225, "Erina"], [69, "Esen"], [376, "Estela"], [39989, "Estelle"], [3908, "Ester"], [126811, "Estrella"], [7147, "Etsuko"], [976, "Eudice Wong"], [36, "Eugenia"], [204801, "Eugenie"], [20989, "Eugeniya"], [320083, "Eva"], [41, "Eva Marie"], [744, "Eveliina"], [27011, "Evelyn"], [59775, "Evgenia"], [206981, "Evgeniya"], [7755, "Fang Ying"], [33388, "Fangzhou"], [11260, "Fanny"], [167, "Farah"], [10865, "Fatima"], [898, "Fatimah"], [21261, "Fatma"], [80, "Fatyha"], [56817, "Federica"], [44, "Federica Joe"], [17587, "Fernanda"], [78, "Ferny"], [18219, "Fiona"], [1011058, "Flavia"], [89361, "Florencia"], [359, "Frances"], [1306087, "Francesca"], [157, "Francisca"], [21685, "Francoise"], [994, "Franziska"], [9, "Frederikke"], [6525, "Freya"], [102623, "Gabriela"], [468, "Gabriela Nicole"], [6179, "Gabriella"], [1093, "Gabrielle Faith"], [1000, "Gaelle"], [7998, "Gaia"], [38651, "Gail"], [302957, "Galina"], [30136, "Ganna"], [412872, "Garbine"], [143, "Gebriela"], [440, "Genevieve"], [9600, "Georgia"], [1848, "Georgia Andreea"], [48, "Georgiana"], [11569, "Georgina"], [290, "Ghislaine"], [677, "Giada"], [31741, "Gioia"], [2484, "Giorgia"], [13, "Giorgie"], [289, "Giovanna"], [106520, "Giulia"], [2935, "Giuliana"], [1297, "Gloria"], [2864, "Gozal"], [70613, "Grace"], [7999, "Gracia"], [6168, "Greetje"], [240195, "Greta"], [14277, "Guadalupe"], [576, "Guillermina"], [687, "Guiomar"], [410, "Gulben"], [18, "Gulchekhra"], [39, "Gulnaz"], [775, "Guzal"], [238, "Gyulnara"], [811, "Habiba"], [8180, "Hae Sung"], [294, "Haine"], [413, "Hana"], [2782, "Hanna"], [4643, "Hanyu"], [9631, "Hao Chen"], [224, "Hao Ching"], [5944, "Harmony"], [8608, "Harriet"], [3633, "Haruka"], [1873, "Haruna"], [1679, "Hayley"], [78, "Hazal"], [202780, "Heather"], [88542, "Heidi"], [1039, "Helen"], [3928, "Helene"], [122, "Hikari"], [10191, "Hilda"], [3, "Himari"], [27580, "Hiroko"], [4368, "Hirono"], [2371, "Ho Ching"], [24, "Hollie"], [1063, "Hongrui"], [98, "Hortencia"], [120, "Hsin Yuan"], [7367, "Hua Chen"], [118, "Huijie"], [7797, "Hulya"], [1222, "Hye Min"], [870, "Hyojung"], [8301, "Hyun Hui"], [511, "I Hsuan"], [395, "Iana"], [467, "Ida"], [45, "Idia"], [916, "Iga"], [52, "Ilay"], [1142, "Ilka"], [26950, "Ilona"], [1527, "Ilze"], [1676, "Imane Maelle"], [292, "Ina"], [406, "Inci"], [762, "India"], [12633, "Indire"], [17382, "Indy"], [1358, "Ineke"], [40410, "Ines"], [221, "Inger"], [3471, "Ingrid"], [4766, "Ingrid Alexandra"], [10133, "Ingrid Esperanza"], [33, "Intissar"], [1225, "Ioana"], [2403, "Ioana Diana"], [5425, "Ioana Loredana"], [6948, "Ionela Andreea"], [39352, "Ipek"], [88369, "Irena"], [3133, "Irene"], [299698, "Irina"], [293366, "Irina Camelia"], [13843, "Irina Maria"], [4743, "Iris"], [87844, "Iryna"], [6688, "Isabel"], [714, "Isabela"], [83476, "Isabella"], [4777, "Isabelle"], [74, "Iulia Maria"], [10322, "Iva"], [100848, "Ivana"], [2094, "Ivania"], [291, "Ivanka"], [443695, "Iveta"], [543, "Ivette"], [253, "Ivone"], [13010, "Ivonne"], [27462, "Jacqueline"], [64, "Jada"], [26209, "Jade"], [1375, "Jaeda"], [5007, "Jaimee"], [24, "Jaimy Gayle"], [761, "Jainy"], [190997, "Jamie"], [18, "Jamilya"], [10947, "Jan"], [268372, "Jana"], [143422, "Janette"], [12525, "Janina"], [72, "Janja"], [861, "Janneke"], [5416, "Jaqueline Adina"], [464, "Jara"], [333150, "Jarmila"], [34453, "Jasmin"], [43862, "Jasmina"], [14865, "Jasmine"], [142, "Jasmine Amber"], [822, "Jawairiah"], [908, "Jazmin"], [628, "Jazzamay"], [3426, "Jeannine"], [2515436, "Jelena"], [81222, "Jennifer"], [1002, "Jenny"], [17819, "Jesika"], [154599, "Jessica"], [4122, "Jessika"], [923, "Jessy"], [7179, "Ji Hee"], [8592, "Ji Young"], [52, "Jia"], [48117, "Jia Jing"], [4612, "Jia Qi"], [1553, "Jiahui"], [15, "Jiakang"], [100, "Jiatian"], [3002, "Jiaxi"], [96, "Jiaxue"], [610820, "Jie"], [13978, "Jil Belen"], [611, "Jil Nora"], [359013, "Jill"], [1991, "Jillian"], [15, "Jin"], [46355, "Jin A"], [414, "Jin Ju"], [68925, "Jing Jing"], [1955, "Joana"], [472, "Joanna"], [15, "Joanne"], [355, "Jodie Anna"], [40, "Johana"], [553107, "Johanna"], [1092, "Jordana"], [2710, "Josepha"], [4980, "Josephine"], [804, "Josie"], [39270, "Jovana"], [3453, "Ju Eun"], [3, "Judith"], [63, "Jule"], [891796, "Julia"], [21, "Julia Mansano"], [414, "Juliana"], [129, "Juliana Rocha"], [156531, "Julie"], [4093, "Julieta Lara"], [286, "Julita"], [1446, "Julyette Maria Josephine"], [114, "June"], [128183, "Junri"], [36, "Justina"], [39418, "Justine"], [30304, "Justyna"], [467, "Kady"], [172004, "Kai Chen"], [37817, "Kai Lin"], [625836, "Kaia"], [416, "Kaitlin"], [3905, "Kaitlyn"], [1176, "Kaja"], [2280, "Kajsa"], [12906, "Kamila"], [249, "Kamilla"], [5866, "Kamonwan"], [1536, "Kana"], [20142, "Kanae"], [229, "Kanako"], [3724, "Kanami"], [919, "Kanika"], [8406, "Kaori"], [32169, "Karen"], [85, "Kariann"], [254520, "Karin"], [9355, "Karina"], [5493, "Karina Ildor"], [410, "Karina Kristina"], [1936, "Karine"], [1003, "Karis"], [3127, "Karla"], [3193, "Karman"], [776, "Karola Patricia"], [465, "Karolayne"], [512490, "Karolina"], [910, "Karoline"], [330, "Karyn"], [704, "Kassandra"], [112562, "Katalin"], [444303, "Katarina"], [93730, "Katarzyna"], [34, "Kate"], [160945, "Katerina"], [435038, "Kateryna"], [24595, "Katharina"], [363, "Katharine"], [7843, "Katherine"], [1894, "Katherine Gabriela"], [15970, "Kathinka"], [141281, "Kathrin"], [30035, "Katie"], [308, "Katrine Isabel"], [11572, "Katy"], [515, "Katya"], [97, "Katyarina"], [13697, "Kayla"], [237, "Kaylah"], [10107, "Kazusa"], [294, "Kei"], [324, "Kelia"], [4705, "Kelly"], [5880, "Kelly S"], [410, "Kelsey"], [653, "Kennedy"], [24062, "Keren"], [894, "Keri"], [942, "Kerstin"], [3748, "Khristina"], [86, "Ki Ryang"], [214121, "Kiki"], [4580, "Kim"], [12388, "Kim Alice"], [5393, "Kimberley"], [4831, "Kimberly"], [272, "Kimika"], [270102, "Kimiko"], [15102, "Kinnie"], [383077, "Kirsten"], [462, "Kirsten Andrea"], [5818, "Klaartje"], [568191, "Klara"], [4809, "Klaudia"], [701, "Komola"], [21417, "Korina"], [4962, "Kotomi"], [17577, "Krista"], [34647, "Kristie"], [601693, "Kristina"], [555, "Kristina N"], [1899, "Kristy"], [148728, "Kristyna"], [371140, "Ksenia"], [298, "Kseniia"], [625, "Ksenija"], [56212, "Kumiko"], [177170, "Kurumi"], [210101, "Kveta"], [403, "Kwan Yau"], [3200, "Kyle"], [1236, "Kylie"], [9036, "Kyoka"], [102022, "Kyra"], [26059, "Kyung Mi"], [6078, "Laetitia"], [595, "Laili"], [456, "Lamis"], [177458, "Lara"], [255, "Larikah"], [578964, "Laura"], [281, "Laura D"], [33822, "Laura Ioana"], [97, "Laura Sofia"], [244807, "Lauren"], [207, "Lauryn"], [23897, "Lavinia"], [39, "Laylo"], [22, "Layne"], [4197, "Lea"], [152, "Leah"], [733, "Lee"], [27997, "Lena"], [14942, "Lena Marie"], [164900, "Lenka"], [750, "Leolia"], [672, "Leonie"], [286, "Lesedi Sheya"], [225987, "Lesia"], [42925, "Lesley"], [173, "Leslie"], [45115, "Leticia"], [87, "Leticia Garcia"], [48, "Leylah Annie"], [1696, "Li"], [59997, "Liana Gabriela"], [2362, "Libby"], [522, "Libi"], [169, "Lidia"], [6809, "Lidziya"], [39782, "Liezel"], [23411, "Liga"], [1960, "Lilla"], [40341, "Lin"], [91117, "Lina"], [4216, "Linda"], [142454, "Lindsay"], [500, "Lindsey"], [64525, "Ling"], [72, "Liniques"], [697, "Linnea"], [594217, "Lisa"], [7898, "Lisa Maria"], [1583, "Lisa Marie"], [8284, "Lisanne"], [2662, "Liubov"], [128, "Livia"], [2216, "Liz Tatiane"], [135, "Lizaveta"], [11623, "Lizette"], [33, "Lorenza"], [40, "Lorraine M"], [10167, "Lou"], [6, "Loudmilla"], [50700, "Louisa"], [1633, "Louise"], [371035, "Lourdes"], [3445, "Lu"], [1013, "Luca"], [17185, "Lucia"], [8305, "Luciana"], [1108372, "Lucie"], [1589, "Lucrezia"], [6542, "Lucy"], [645, "Ludmila"], [1187, "Ludmilla"], [1671, "Luisa"], [1822, "Luisa Marie"], [77519, "Luksika"], [304, "Lulu"], [15, "Luna"], [377, "Lusine"], [876, "Lutfiye"], [30, "Lyann"], [837, "Lynn"], [54172, "Lyudmyla"], [12379, "Macall"], [2133, "Macarena"], [62938, "Madalina"], [2434, "Maddison"], [715, "Madeleine"], [147, "Madeline"], [6, "Madina"], [476768, "Madison"], [2266, "Madrie"], [525, "Maegan"], [163, "Mafalda"], [54, "Maftuna"], [1917, "Magali"], [511, "Magalie"], [103659, "Magda"], [401857, "Magdalena"], [756, "Magy"], [154, "Mahak"], [395, "Mahitha"], [19173, "Mai"], [1235, "Maia"], [12, "Maia A"], [11320, "Maiko"], [83, "Maileen"], [39523, "Mailen"], [1067, "Maja"], [5592, "Makiho"], [14129, "Makoto"], [316, "Malene"], [323, "Malika"], [2489, "Malin"], [688, "Mallaurie"], [44497, "Mallory"], [3073, "Malou"], [96, "Mami"], [102, "Man Ying Maggie"], [9593, "Mana"], [15, "Mananchaya"], [2070, "Manca"], [193767, "Mandy"], [3112, "Manisha"], [14608, "Manon"], [93, "Manya"], [702, "Mara"], [16790, "Marcela"], [683, "Marcela Guimaraes"], [33, "Marcelina"], [13037, "Marcella"], [99836, "Margalita"], [1997, "Margarida"], [78265, "Margarita"], [905, "Margaux"], [4787, "Margot"], [38086, "Mari"], [3613355, "Maria"], [185, "Maria Agustina"], [323, "Maria Andrea"], [148, "Maria Camila"], [1892, "Maria Constanza De Las Mercedes"], [296, "Maria Del Rosario"], [296736, "Maria Elena"], [141257, "Maria Fernanda"], [294, "Maria Jesus"], [72682, "Maria Joao"], [413759, "Maria Jose"], [156, "Maria Lourdes"], [1388, "Maria Paulina"], [106375, "Maria Teresa"], [4060, "Mariam"], [201258, "Mariana"], [10178, "Marianna"], [1090, "Marianne"], [226, "Mariaryeni"], [25496, "Marie"], [114687, "Marie Eve"], [206, "Mariia"], [20481, "Marija"], [3, "Marijana"], [362372, "Marina"], [4314, "Marine"], [1272285, "Marion"], [4, "Mariona"], [1026, "Marisa"], [154484, "Mariya"], [18286, "Marketa"], [1624, "Marlies"], [1339, "Marrit"], [267679, "Marta"], [778, "Marta Huqi"], [153, "Martha"], [109192, "Martina"], [653, "Mary"], [102, "Mary Ann"], [85425, "Maryna"], [117472, "Masa"], [245139, "Mathilde"], [3466, "Matilda"], [210, "Maud"], [219, "Maureen"], [138, "Maurien"], [390, "Maxine"], [225, "May"], [23668, "Maya"], [1788, "Mayar"], [32445, "Mayo"], [9064, "Mayya"], [13254, "Megan"], [407, "Megumi"], [40, "Mei Xu"], [417, "Meiling"], [96, "Meiqi"], [385636, "Melanie"], [97, "Melany Solange"], [2609, "Melina"], [290299, "Melinda"], [20196, "Melis"], [340, "Melisa"], [200, "Melissa"], [171, "Melissa Ishuan"], [542, "Meng Ning"], [48, "Mercedes"], [101, "Merel"], [284, "Meritxell"], [102693, "Mervana"], [24569, "Mi"], [176, "Mi Jeong"], [1858, "Mi Rae"], [72, "Mi Zhuoma"], [1098, "Mia Nicole"], [230, "Micaela"], [76586, "Michaela"], [242619, "Michaella"], [90, "Michela"], [596, "Michele Alexandra"], [160164, "Michelle"], [3657, "Michika"], [69242, "Mihaela"], [15, "Mihaela Lorena"], [21205, "Miharu"], [427, "Mihika"], [201, "Mihoki"], [24542, "Miki"], [107, "Mila"], [42, "Milagros"], [14123, "Milana"], [279, "Milena"], [63, "Milica"], [1884, "Min"], [9938, "Min Hwa"], [96, "Minami"], [1626, "Mira"], [1977, "Mirabelle"], [180, "Miranda"], [3825, "Miriam"], [1458, "Miriam Bianca"], [1180, "Miriana"], [272, "Mirjam"], [331434, "Mirjana"], [55981, "Misa"], [203782, "Misaki"], [309, "Mitsumi"], [22840, "Miyabi"], [23968, "Miyu"], [2927, "Mizuno"], [565, "Molly"], [2061, "Momoko"], [282445, "Mona"], [587309, "Monica"], [1240, "Monika"], [114104, "Monique"], [23564, "Montserrat"], [6906, "Morgane"], [15, "Moulika"], [12, "Mouna"], [32, "Moyuka"], [6, "Muazzez"], [162, "Muge"], [43550, "Myrtille"], [1358928, "Na"], [26185, "Na Lae"], [19223, "Na Ri"], [5027, "Nadezda"], [1401125, "Nadia"], [56596, "Nadiya"], [2661, "Nadja"], [1535, "Nagi"], [4380, "Naiktha"], [440, "Naima"], [259, "Nam Yeon"], [3094, "Nan Nan"], [16494, "Nanuli"], [59671, "Nao"], [857, "Naoko"], [163239, "Naomi"], [1945, "Napatsakorn"], [72, "Nastassia"], [65152, "Nastassja"], [29250, "Nastja"], [97400, "Natalia"], [120995, "Natalie"], [13686, "Natalija"], [33, "Nataliya"], [14212, "Natasa"], [15365, "Natasha"], [16303, "Natela"], [649, "Natella"], [28098, "Nathalia"], [13241, "Nathaly"], [2526, "Natia"], [37981, "Natsumi"], [224, "Nattawadee"], [251, "Naz"], [980, "Nazari"], [9536, "Neda"], [142, "Nelise"], [279, "Nermeen"], [170, "Nevena"], [30972, "Nicha"], [2531, "Nicky"], [33550, "Nicola"], [447434, "Nicole"], [8146, "Nicoleta Catalina"], [9627, "Nicolette"], [5425, "Nidhi"], [47651, "Nigina"], [9120, "Nika"], [22, "Nikita"], [614, "Nikki"], [491, "Nikol"], [78513, "Nikola"], [201173, "Nina"], [115, "Nina Isabella"], [2706, "Nives"], [1558, "Noel"], [2025, "Noelia"], [1795, "Noelle"], [134, "Nonna"], [73589, "Noppawan"], [1082, "Nora"], [760, "Nour"], [1333, "Nozomi"], [63013, "Nudnida"], [24523, "Nungnadda"], [259116, "Nuria"], [1096, "Oana"], [4294, "Oana Georgeta"], [56853, "Oceane"], [5372, "Ofri"], [58279, "Oksana"], [3497, "Ola"], [2, "Olawaseun"], [40, "Olaya"], [8700, "Oleksandra"], [484, "Olena"], [3811, "Olesya"], [773929, "Olga"], [119756, "Olivia"], [363, "Oliwia"], [56242, "Ons"], [2133, "Ornella"], [382, "Oyku"], [147, "Paige Mary"], [241, "Pamela"], [1446, "Panna"], [403127, "Paola"], [209, "Parris"], [1188, "Patcharin"], [197904, "Patricia"], [43755, "Patricia Maria"], [17514, "Patrycja"], [7323, "Patty"], [172431, "Paula"], [269, "Paula Andrea"], [3714, "Paula Catalina"], [37384, "Paula Cristina"], [3208, "Paulina"], [313187, "Pauline"], [4128, "Pavla"], [26280, "Peangtarn"], [1016, "Peggy"], [8900, "Pei Chi"], [24, "Pei Hsuan"], [181, "Pei Ju"], [60908, "Pemra"], [6573, "Pernilla"], [1832, "Petia"], [1958404, "Petra"], [3, "Phenomena"], [664, "Phillis"], [10859, "Pia"], [21340, "Piia"], [6404, "Pilar"], [243, "Pippa"], [934, "Plobrung"], [76747, "Polina"], [325216, "Polona"], [13006, "Poojashree"], [1214, "Pranjala"], [5687, "Prarthana G"], [9318, "Prerna"], [510, "Priscila"], [8203, "Priscilla"], [116857, "Qiang"], [683, "Qianhui"], [641, "Qianqian"], [2034, "Qiu Yu"], [646, "Quinn"], [22978, "Quirine"], [2592, "Rachael"], [469, "Rachel"], [699, "Radina"], [228, "Rafaela"], [40, "Ralina"], [148701, "Raluca"], [9202, "Raluca Elena"], [4258, "Raluca Georgiana"], [443, "Ramu"], [161, "Ramya"], [14709, "Ran"], [9, "Rana"], [30401, "Raquel"], [741, "Rashmi"], [957, "Ratnika"], [5387, "Raveena"], [168, "Rebeca"], [165013, "Rebecca"], [5803, "Rebeka"], [122331, "Regina"], [64, "Reina"], [66271, "Reka Luca"], [38116, "Remi"], [201856, "Renata"], [5566, "Ria"], [984, "Rianna"], [84184, "Richel"], [141257, "Rika"], [23195, "Riko"], [556, "Rio"], [62252, "Risa"], [8448, "Rishika"], [1401, "Rita"], [2634, "Riya"], [809611, "Roberta"], [12295, "Robin"], [1103, "Robyn"], [16886, "Rocio"], [29214, "Romana"], [17020, "Romana Caroline"], [253471, "Romina"], [911, "Romy"], [308, "Rona"], [3165, "Ronit"], [49, "Ronke"], [28, "Roosh"], [111, "Rosa"], [803, "Rosalia"], [880, "Rosalie"], [336, "Rosie"], [38793, "Roxane"], [24, "Rui"], [27452, "Rushmi"], [3642, "Rutuja"], [597, "Ryann"], [195, "Saana"], [780, "Sabastiani"], [49784, "Sabina"], [27, "Sabina Elena"], [590911, "Sabine"], [6810, "Sabrina"], [78204, "Sacha"], [49767, "Sachia"], [42676, "Sachie"], [2275, "Sadafmoh"], [1034, "Sai Samhitha"], [113359, "Saisai"], [9338, "Sakiko"], [53480, "Sally"], [66, "Salma"], [1437656, "Samantha"], [2020, "Samira"], [354, "Sanae"], [17975, "Sanaz"], [266197, "Sandra"], [224, "Sandy"], [1277, "Sang Hee"], [272889, "Sania"], [914981, "Sara"], [78461, "Sarah"], [1270, "Sarah Beth"], [13064, "Sarah Rebecca"], [461, "Sarahi"], [148, "Sarai Delfina"], [2061, "Saray"], [464, "Sari"], [27, "Sarlota"], [178, "Sarvinoz"], [316, "Sasa"], [2641, "Saska"], [906, "Satsuki"], [70, "Savannah"], [148, "Schena"], [143, "Se Hyun"], [681, "Se Jin"], [75, "Sean"], [1469, "Seda"], [144, "Seira"], [169, "Selin"], [6564, "Seo Kyung"], [1312, "Seone"], [4232828, "Serena"], [208108, "Sesil"], [6650, "Seung Yeon"], [192296, "Severine"], [662926, "Shahar"], [2122, "Shakhlo"], [198, "Shakhnoza"], [111, "Shangqing"], [2378, "Shanshan"], [1363, "Shao Yuan"], [4106, "Sharmada"], [117825, "Sharon"], [522, "Sharon Sanchana"], [102140, "Shelby"], [142, "Shelly"], [53610, "Sheng Nan"], [22977, "Sherazad"], [801, "Sherry"], [39960, "Shiho"], [9634, "Shilin"], [18, "Shiori"], [117, "Shir"], [236, "Shiran"], [4611, "Shivika"], [105, "Shou Na"], [6, "Shreya"], [1483, "Shu Ying"], [913829, "Shuai"], [46124, "Shuko"], [597, "Shuo"], [336, "Shuyue"], [3255, "Shweta"], [531, "Si Qi"], [221695, "Silvia"], [724638, "Simona"], [1149, "Simone"], [467, "Simran Kaur"], [10360, "Sina"], [688, "Sinead"], [95, "Sing Le"], [716, "Siqi"], [276, "Sirui"], [87, "Siyu"], [352458, "Sloane"], [96, "Smriti"], [134, "Sneha"], [2820, "Snehadevi S"], [47282, "So Jung"], [18210, "So Ra"], [484140, "Sofia"], [336, "Sofico"], [10539, "Sofie"], [18371, "Sofiya"], [9180, "Sofya"], [108, "Sohyun"], [480, "Sonia"], [4499, "Sonja"], [96, "Sophia"], [39307, "Sophie"], [457043, "Sorana"], [2961, "Sowjanya"], [159, "Spurti"], [1744, "Sri Vaishnavi"], [8072, "Stamatia"], [49412, "Stanislava"], [497, "Stefana"], [126, "Stefani"], [24897, "Stefania"], [247237, "Stefanie"], [3085, "Steffi"], [608309, "Stephanie"], [1397, "Stephanie Mariel"], [21152, "Storm"], [33672, "Su Jeong"], [274936, "Su Wei"], [320, "Suellen"], [1544, "Sultan"], [6591, "Sun Jung"], [15, "Sunae"], [3594, "Sunam"], [29852, "Sung Hee"], [502, "Susan"], [16276, "Susanne"], [344, "Suzan"], [324, "Suzuho"], [1054, "Suzy"], [6341, "Svenja"], [1906587, "Svetlana"], [11201, "Sviatlana"], [581, "Sybille"], [1626, "Sylvia"], [8268, "Sylwia"], [9001, "Syna"], [2127, "Szabina"], [83659, "Tadeja"], [1050, "Taisiya"], [45, "Talya"], [843, "Tamachan"], [60, "Tamar"], [54140, "Tamara"], [304, "Tamari"], [594281, "Tamarine"], [40060, "Tamaryn"], [322202, "Tamira"], [26077, "Tammi"], [764, "Tanaporn"], [1229, "Tanya"], [54798, "Tara"], [42, "Tatia"], [34795, "Tatiana"], [230262, "Tatjana"], [1289, "Tatsiana"], [5051, "Tayisiya"], [38850, "Taylor"], [2127, "Tea"], [112570, "Teliana"], [12402, "Tena"], [41792, "Teodora"], [193362, "Tereza"], [18, "Terri"], [7165, "Tess"], [9116, "Tessah"], [75337, "Tetiana"], [43020, "Tetyana"], [706, "Thai Sa Grana"], [2249, "Theo"], [377, "Theresa"], [333, "Tijana"], [612072, "Timea"], [57585, "Tina"], [476, "Tinatin"], [8145, "Ting Fei"], [8676, "Ting Jr"], [151, "Tingting"], [3361, "Tjasa"], [7431, "Tomoko"], [10630, "Tori"], [1864, "Tornado Alicia"], [1884, "Trang"], [736, "Treta"], [456422, "Tsvetana"], [4543, "Tyra"], [27118, "Ulrikke"], [2400, "Ulyana"], [275255, "Urszula"], [413, "Ushna"], [7874, "Usue Maitane"], [338, "Valentina"], [9926, "Valentine"], [15198, "Valentini"], [47854, "Valentyna"], [159155, "Valeria"], [6146, "Valerie"], [16621, "Valeriya"], [10087, "Vanda"], [30669, "Vanesa"], [71645, "Vanessa"], [299530, "Vania"], [255, "Vaniya"], [291, "Vanja"], [54340, "Varatchaya"], [3623, "Varunya"], [401409, "Varvara"], [42527, "Vasilisa"], [3763, "Vaszilisza"], [2221, "Vendula"], [2875425, "Venus"], [1929137, "Vera"], [3018, "Verena"], [84543, "Veronica"], [1678, "Veronica M"], [73192, "Veronika"], [169500, "Vesna"], [77, "Vicky"], [454, "Victoire"], [2142854, "Victoria"], [106, "Victoria Ariadna"], [30191, "Viktoria"], [90, "Viktoriia"], [79511, "Viktorija"], [26226, "Viktoriya"], [1987, "Viktoryia"], [27, "Vilma Y"], [105, "Vincenza"], [37, "Vinciane"], [298, "Violetta"], [519208, "Virginie"], [71, "Vishesh"], [64, "Vita"], [106927, "Vitalia"], [36714, "Vivian"], [13041, "Vivien"], [8918, "Vivienne"], [22578, "Vlada"], [997, "Vladica"], [6470, "Vladimira"], [1254, "Vladislava"], [2570, "Vladyslava"], [18781, "Vojislava"], [1036, "Voni"], [11653, "Wan Ting"], [42, "Wan Yi"], [9, "Warona"], [40633, "Wen Hsin"], [120, "Wen Ling"], [613, "Wendy Qi Wen"], [179, "Weronika Jasmina"], [5604, "Whitney"], [363, "Wiktoria"], [11694, "Wing Yau Venise"], [879, "Wushuang"], [14578, "Xenia"], [1445, "Xi Yao"], [4789, "Xiao"], [5057, "Xiaodi"], [717, "Xiaorong"], [1352, "Xiaoxi"], [19495, "Ximena"], [8744, "Xin"], [187, "Xin Yu"], [10705, "Xinyu"], [109256, "Xinyun"], [315, "Xiyu"], [4535, "Xu Liu"], [24, "Ya"], [17078, "Ya Hsuan"], [39687, "Yafan"], [4196, "Yan"], [39102, "Yana"], [73, "Yang"], [602453, "Yanina"], [275, "Yanni"], [32, "Yarden"], [404915, "Yaroslava"], [11251, "Yasmin"], [27, "Yasmina"], [1748, "Yasmine"], [71, "Yasmyn"], [648, "Yawna"], [128509, "Yayuk"], [47867, "Ye Ra"], [281, "Ye Xin"], [376, "Yekaterina"], [1856, "Yelena"], [966, "Yeong Won"], [6288, "Yevgeniya"], [19989, "Yi"], [60646, "Yi Fan"], [22443, "Yi Jing"], [61839, "Yi Miao"], [136, "Yidi"], [24, "Yihong"], [366, "Yijia"], [3783, "Ying"], [107595, "Ying Ying"], [1380, "Yixuan"], [1546, "Ylena"], [1453, "Ylona Georgiana"], [285, "Yoko"], [1381, "Yolande"], [182, "Yoo Ri"], [3592, "Yoon Young"], [677, "Yoshimi"], [75, "Yosr"], [242, "You Na"], [27804, "Ysaline"], [452, "Yu Jin"], [9, "Yu Tong"], [281, "Yuan"], [772, "Yuanyi"], [1259, "Yue"], [21360, "Yue Yue"], [682, "Yuenu"], [184, "Yujia"], [12474, "Yuka"], [84, "Yukako"], [505, "Yuki"], [2191, "Yuki Kristina"], [998, "Yukina"], [1828, "Yukun"], [155143, "Yulia"], [15248, "Yuliana"], [206375, "Yuliya"], [20269, "Yumi"], [229391, "Yung Jan"], [559, "Yuqi"], [101816, "Yurika"], [1728, "Yuriko"], [12693, "Yurina"], [15071, "Yuuki"], [45, "Yuval"], [24279, "Yuxuan"], [254491, "Yvonne"], [87, "Zaineb"], [2052, "Zalina"], [3809, "Zarah"], [123243, "Zarina"], [702, "Zeel"], [21, "Zeynep  Sena"], [2166, "Zhanlan"], [20236, "Zhaoxuan"], [7, "Zhibek"], [99, "Zhima"], [30, "Zhou"], [121, "Zhuoma"], [110290, "Zi"], [74, "Zinovia"], [1420, "Ziyue"], [2772, "Zoe"], [2877, "Zoe Gwen"], [1501, "Zsofia"], [266251, "Zuzana"], [2258, "Zuzanna"]], "trigger_words": ["Total Number", "First Name"], "Prediction": "players.first_name, SUM(rankings.ranking_points) \n FROM players \n JOIN rankings ON players.player_id=rankings.player_id \n GROUP BY players.first_name;"}
{"db_id": "wta_1", "query": "SELECT count(*) ,  country_code FROM players GROUP BY country_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "country_code", "FROM", "players", "GROUP", "BY", "country_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "country_code", "from", "players", "group", "by", "country_code"], "question": "find the number of players for each country.", "question_toks": ["find", "the", "number", "of", "players", "for", "each", "country", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "473", "answer_text": [[6, "AHO"], [2, "ALB"], [63, "ALG"], [1, "AND"], [1, "ANG"], [8, "ANT"], [456, "ARG"], [27, "ARM"], [742, "AUS"], [236, "AUT"], [10, "AZE"], [22, "BAH"], [20, "BAR"], [5, "BDI"], [247, "BEL"], [2, "BEN"], [20, "BER"], [75, "BIH"], [144, "BLR"], [97, "BOL"], [17, "BOT"], [456, "BRA"], [5, "BRN"], [4, "BRU"], [181, "BUL"], [331, "CAN"], [2, "CGO"], [114, "CHI"], [391, "CHN"], [8, "CMR"], [240, "COL"], [24, "CRC"], [240, "CRO"], [39, "CUB"], [22, "CYP"], [456, "CZE"], [79, "DEN"], [38, "DOM"], [3, "ECA"], [90, "ECU"], [112, "EGY"], [33, "ESA"], [853, "ESP"], [48, "EST"], [8, "ETH"], [5, "FIJ"], [103, "FIN"], [736, "FRA"], [22, "FRG"], [660, "GBR"], [91, "GEO"], [833, "GER"], [4, "GHA"], [163, "GRE"], [1, "GRN"], [29, "GUA"], [8, "GUD"], [5, "HAI"], [56, "HKG"], [8, "HON"], [169, "HUN"], [181, "INA"], [478, "IND"], [15, "IRI"], [68, "IRL"], [7, "IRQ"], [18, "ISL"], [232, "ISR"], [866, "ITA"], [19, "JAM"], [6, "JOR"], [823, "JPN"], [99, "KAZ"], [23, "KEN"], [23, "KGZ"], [274, "KOR"], [3, "KUW"], [56, "LAT"], [3, "LES"], [11, "LIB"], [15, "LIE"], [31, "LTU"], [37, "LUX"], [21, "MAD"], [97, "MAR"], [35, "MAS"], [45, "MDA"], [416, "MEX"], [1, "MGL"], [23, "MKD"], [17, "MLT"], [25, "MNE"], [2, "MON"], [15, "MRI"], [4, "MRN"], [13, "NAM"], [3, "NCA"], [342, "NED"], [80, "NGR"], [68, "NOR"], [104, "NZL"], [3, "OMA"], [18, "PAK"], [22, "PAN"], [56, "PAR"], [76, "PER"], [70, "PHI"], [1, "PNG"], [12, "POC"], [266, "POL"], [142, "POR"], [43, "PUR"], [1, "QAT"], [17, "REU"], [3, "RHO"], [422, "ROU"], [283, "RSA"], [810, "RUS"], [3, "SAM"], [16, "SCG"], [7, "SEN"], [44, "SIN"], [145, "SLO"], [4, "SMR"], [224, "SRB"], [32, "SRI"], [243, "SUI"], [247, "SVK"], [324, "SWE"], [21, "SYR"], [21, "TCH"], [171, "THA"], [6, "TJK"], [12, "TKM"], [2, "TOG"], [146, "TPE"], [29, "TRI"], [1, "TTO"], [57, "TUN"], [203, "TUR"], [1, "UAE"], [311, "UKR"], [11, "UNK"], [22, "URS"], [56, "URU"], [2217, "USA"], [123, "UZB"], [150, "VEN"], [19, "VIE"], [48, "YUG"], [1, "ZAM"], [26, "ZIM"], [4, "rc="]], "trigger_words": ["Number", "Country Code"], "Prediction": "country_code, COUNT(*) FROM players GROUP BY country_code;"}
{"db_id": "wta_1", "query": "SELECT count(*) ,  country_code FROM players GROUP BY country_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "country_code", "FROM", "players", "GROUP", "BY", "country_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "country_code", "from", "players", "group", "by", "country_code"], "question": "How many players are from each country?", "question_toks": ["How", "many", "players", "are", "from", "each", "country", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "474", "answer_text": [[6, "AHO"], [2, "ALB"], [63, "ALG"], [1, "AND"], [1, "ANG"], [8, "ANT"], [456, "ARG"], [27, "ARM"], [742, "AUS"], [236, "AUT"], [10, "AZE"], [22, "BAH"], [20, "BAR"], [5, "BDI"], [247, "BEL"], [2, "BEN"], [20, "BER"], [75, "BIH"], [144, "BLR"], [97, "BOL"], [17, "BOT"], [456, "BRA"], [5, "BRN"], [4, "BRU"], [181, "BUL"], [331, "CAN"], [2, "CGO"], [114, "CHI"], [391, "CHN"], [8, "CMR"], [240, "COL"], [24, "CRC"], [240, "CRO"], [39, "CUB"], [22, "CYP"], [456, "CZE"], [79, "DEN"], [38, "DOM"], [3, "ECA"], [90, "ECU"], [112, "EGY"], [33, "ESA"], [853, "ESP"], [48, "EST"], [8, "ETH"], [5, "FIJ"], [103, "FIN"], [736, "FRA"], [22, "FRG"], [660, "GBR"], [91, "GEO"], [833, "GER"], [4, "GHA"], [163, "GRE"], [1, "GRN"], [29, "GUA"], [8, "GUD"], [5, "HAI"], [56, "HKG"], [8, "HON"], [169, "HUN"], [181, "INA"], [478, "IND"], [15, "IRI"], [68, "IRL"], [7, "IRQ"], [18, "ISL"], [232, "ISR"], [866, "ITA"], [19, "JAM"], [6, "JOR"], [823, "JPN"], [99, "KAZ"], [23, "KEN"], [23, "KGZ"], [274, "KOR"], [3, "KUW"], [56, "LAT"], [3, "LES"], [11, "LIB"], [15, "LIE"], [31, "LTU"], [37, "LUX"], [21, "MAD"], [97, "MAR"], [35, "MAS"], [45, "MDA"], [416, "MEX"], [1, "MGL"], [23, "MKD"], [17, "MLT"], [25, "MNE"], [2, "MON"], [15, "MRI"], [4, "MRN"], [13, "NAM"], [3, "NCA"], [342, "NED"], [80, "NGR"], [68, "NOR"], [104, "NZL"], [3, "OMA"], [18, "PAK"], [22, "PAN"], [56, "PAR"], [76, "PER"], [70, "PHI"], [1, "PNG"], [12, "POC"], [266, "POL"], [142, "POR"], [43, "PUR"], [1, "QAT"], [17, "REU"], [3, "RHO"], [422, "ROU"], [283, "RSA"], [810, "RUS"], [3, "SAM"], [16, "SCG"], [7, "SEN"], [44, "SIN"], [145, "SLO"], [4, "SMR"], [224, "SRB"], [32, "SRI"], [243, "SUI"], [247, "SVK"], [324, "SWE"], [21, "SYR"], [21, "TCH"], [171, "THA"], [6, "TJK"], [12, "TKM"], [2, "TOG"], [146, "TPE"], [29, "TRI"], [1, "TTO"], [57, "TUN"], [203, "TUR"], [1, "UAE"], [311, "UKR"], [11, "UNK"], [22, "URS"], [56, "URU"], [2217, "USA"], [123, "UZB"], [150, "VEN"], [19, "VIE"], [48, "YUG"], [1, "ZAM"], [26, "ZIM"], [4, "rc="]], "trigger_words": ["Number", "Country Code"], "Prediction": "country_code, COUNT(*) FROM players GROUP BY country_code;"}
{"db_id": "wta_1", "query": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "country_code", "FROM", "players", "GROUP", "BY", "country_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "country_code", "from", "players", "group", "by", "country_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "find the code of the country where has the greatest number of players.", "question_toks": ["find", "the", "code", "of", "the", "country", "where", "has", "the", "greatest", "number", "of", "players", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "475", "answer_text": [["USA"]], "trigger_words": ["Country Code"], "Prediction": "country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1;"}
{"db_id": "wta_1", "query": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "country_code", "FROM", "players", "GROUP", "BY", "country_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "country_code", "from", "players", "group", "by", "country_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the code of the country with the most players?", "question_toks": ["What", "is", "the", "code", "of", "the", "country", "with", "the", "most", "players", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "476", "answer_text": [["USA"]], "trigger_words": ["Country Code"], "Prediction": "country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1;"}
{"db_id": "wta_1", "query": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50", "query_toks": ["SELECT", "country_code", "FROM", "players", "GROUP", "BY", "country_code", "HAVING", "count", "(", "*", ")", ">", "50"], "query_toks_no_value": ["select", "country_code", "from", "players", "group", "by", "country_code", "having", "count", "(", "*", ")", ">", "value"], "question": "Find the codes of countries that have more than 50 players.", "question_toks": ["Find", "the", "codes", "of", "countries", "that", "have", "more", "than", "50", "players", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 50.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "477", "answer_text": [["ALG"], ["ARG"], ["AUS"], ["AUT"], ["BEL"], ["BIH"], ["BLR"], ["BOL"], ["BRA"], ["BUL"], ["CAN"], ["CHI"], ["CHN"], ["COL"], ["CRO"], ["CZE"], ["DEN"], ["ECU"], ["EGY"], ["ESP"], ["FIN"], ["FRA"], ["GBR"], ["GEO"], ["GER"], ["GRE"], ["HKG"], ["HUN"], ["INA"], ["IND"], ["IRL"], ["ISR"], ["ITA"], ["JPN"], ["KAZ"], ["KOR"], ["LAT"], ["MAR"], ["MEX"], ["NED"], ["NGR"], ["NOR"], ["NZL"], ["PAR"], ["PER"], ["PHI"], ["POL"], ["POR"], ["ROU"], ["RSA"], ["RUS"], ["SLO"], ["SRB"], ["SUI"], ["SVK"], ["SWE"], ["THA"], ["TPE"], ["TUN"], ["TUR"], ["UKR"], ["URU"], ["USA"], ["UZB"], ["VEN"]], "trigger_words": ["Country Code"], "Prediction": "country_code FROM players GROUP BY country_code HAVING COUNT(*) > 50;"}
{"db_id": "wta_1", "query": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50", "query_toks": ["SELECT", "country_code", "FROM", "players", "GROUP", "BY", "country_code", "HAVING", "count", "(", "*", ")", ">", "50"], "query_toks_no_value": ["select", "country_code", "from", "players", "group", "by", "country_code", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the codes of countries with more than 50 players?", "question_toks": ["What", "are", "the", "codes", "of", "countries", "with", "more", "than", "50", "players", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 50.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "478", "answer_text": [["ALG"], ["ARG"], ["AUS"], ["AUT"], ["BEL"], ["BIH"], ["BLR"], ["BOL"], ["BRA"], ["BUL"], ["CAN"], ["CHI"], ["CHN"], ["COL"], ["CRO"], ["CZE"], ["DEN"], ["ECU"], ["EGY"], ["ESP"], ["FIN"], ["FRA"], ["GBR"], ["GEO"], ["GER"], ["GRE"], ["HKG"], ["HUN"], ["INA"], ["IND"], ["IRL"], ["ISR"], ["ITA"], ["JPN"], ["KAZ"], ["KOR"], ["LAT"], ["MAR"], ["MEX"], ["NED"], ["NGR"], ["NOR"], ["NZL"], ["PAR"], ["PER"], ["PHI"], ["POL"], ["POR"], ["ROU"], ["RSA"], ["RUS"], ["SLO"], ["SRB"], ["SUI"], ["SVK"], ["SWE"], ["THA"], ["TPE"], ["TUN"], ["TUR"], ["UKR"], ["URU"], ["USA"], ["UZB"], ["VEN"]], "trigger_words": ["Country Code"], "Prediction": "country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;"}
{"db_id": "wta_1", "query": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date", "query_toks": ["SELECT", "sum", "(", "tours", ")", ",", "ranking_date", "FROM", "rankings", "GROUP", "BY", "ranking_date"], "query_toks_no_value": ["select", "sum", "(", "tours", ")", ",", "ranking_date", "from", "rankings", "group", "by", "ranking_date"], "question": "Find the total number of tours for each ranking date.", "question_toks": ["Find", "the", "total", "number", "of", "tours", "for", "each", "ranking", "date", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 43, false], null]], [0, [0, [0, 39, false], null]]]], "where": [], "groupBy": [[0, 39, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "479", "answer_text": [[0, 19870119], [0, 19870126], [0, 19870202], [0, 19870209], [0, 19870302], [0, 19870330], [0, 19870406], [0, 19870413], [0, 19870420], [0, 19870427], [0, 19870504], [0, 19870511], [0, 19870518], [0, 19870525], [0, 19870601], [0, 19870608], [0, 19870615], [0, 19870622], [0, 19870629], [0, 19870706], [0, 19870713], [0, 19870720], [0, 19870727], [0, 19870803], [0, 19870810], [0, 19870817], [0, 19870824], [0, 19870831], [0, 19870907], [0, 19870914], [0, 19870921], [0, 19870928], [0, 19871005], [0, 19871012], [0, 19871019], [0, 19871026], [0, 19871102], [0, 19871109], [0, 19871116], [0, 19871123], [0, 19871130], [0, 19871207], [0, 19871214], [0, 19871221], [0, 19871228], [0, 19880101], [0, 19880104], [0, 19880111], [0, 19880118], [0, 19880125], [0, 19880201], [0, 19880208], [0, 19880215], [0, 19880222], [0, 19880229], [0, 19880307], [0, 19880314], [0, 19880321], [0, 19880328], [0, 19880404], [0, 19880411], [0, 19880418], [0, 19880425], [0, 19880502], [0, 19880509], [0, 19880516], [0, 19880523], [0, 19880530], [0, 19880606], [0, 19880613], [0, 19880620], [0, 19880627], [0, 19880704], [0, 19880711], [0, 19880718], [0, 19880725], [0, 19880801], [0, 19880808], [0, 19880815], [0, 19880822], [0, 19880829], [0, 19880905], [0, 19880912], [0, 19880919], [0, 19880926], [0, 19881003], [0, 19881010], [0, 19881017], [0, 19881024], [0, 19881031], [0, 19881107], [0, 19881114], [29, 19881121], [29, 19881128], [29, 19881205], [29, 19881212], [29, 19881219], [29, 19881226], [28, 19890101], [29, 19890102], [29, 19890109], [29, 19890116], [29, 19890123], [29, 19890130], [29, 19890206], [0, 19890213], [0, 19890220], [0, 19890227], [0, 19890306], [29, 19890313], [29, 19890320], [0, 19890327], [0, 19890403], [29, 19890410], [29, 19890417], [29, 19890424], [29, 19890501], [29, 19890508], [29, 19890515], [29, 19890522], [29, 19890529], [29, 19890605], [29, 19890612], [29, 19890619], [29, 19890626], [29, 19890703], [29, 19890710], [29, 19890717], [29, 19890724], [29, 19890731], [29, 19890807], [29, 19890814], [29, 19890821], [29, 19890828], [29, 19890904], [29, 19890911], [29, 19890918], [29, 19890925], [29, 19891002], [29, 19891009], [29, 19891016], [29, 19891023], [29, 19891030], [29, 19891106], [29, 19891113], [29, 19891120], [29, 19891127], [29, 19891204], [29, 19891211], [29, 19891218], [29, 19891225], [28, 19900101], [29, 19900108], [29, 19900115], [29, 19900122], [29, 19900129], [29, 19900205], [29, 19900212], [29, 19900219], [29, 19900226], [29, 19900305], [29, 19900312], [29, 19900319], [29, 19900326], [29, 19900402], [29, 19900409], [29, 19900416], [29, 19900423], [29, 19900430], [29, 19900507], [29, 19900514], [29, 19900521], [29, 19900528], [29, 19900604], [29, 19900611], [30, 19900618], [30, 19900625], [30, 19900702], [30, 19900709], [30, 19900716], [30, 19900723], [30, 19900730], [30, 19900806], [30, 19900813], [30, 19900820], [30, 19900827], [30, 19900903], [30, 19900910], [30, 19900917], [30, 19900924], [30, 19901001], [30, 19901008], [30, 19901015], [30, 19901022], [30, 19901029], [30, 19901105], [30, 19901112], [30, 19901119], [30, 19901126], [30, 19901203], [30, 19901210], [30, 19901217], [30, 19901224], [30, 19901231], [29, 19910101], [30, 19910107], [30, 19910114], [30, 19910121], [30, 19910128], [30, 19910204], [30, 19910211], [30, 19910218], [30, 19910225], [30, 19910304], [29, 19910311], [29, 19910318], [29, 19910325], [29, 19910401], [29, 19910408], [29, 19910415], [29, 19910422], [29, 19910429], [29, 19910506], [29, 19910513], [29, 19910520], [29, 19910527], [29, 19910603], [29, 19910610], [29, 19910617], [29, 19910624], [29, 19910701], [30, 19910708], [29, 19910715], [29, 19910722], [29, 19910729], [29, 19910805], [29, 19910812], [29, 19910819], [30, 19910826], [30, 19910902], [30, 19910909], [30, 19910916], [30, 19910923], [30, 19910930], [31, 19911007], [31, 19911014], [31, 19911021], [31, 19911028], [44, 19911104], [44, 19911111], [44, 19911118], [44, 19911125], [31, 19911202], [44, 19911209], [45, 19911216], [45, 19911223], [45, 19911230], [44, 19920101], [45, 19920106], [45, 19920113], [45, 19920120], [45, 19920127], [45, 19920203], [29, 19920210], [45, 19920217], [45, 19920224], [45, 19920302], [45, 19920309], [45, 19920316], [45, 19920323], [45, 19920330], [45, 19920406], [45, 19920413], [45, 19920420], [45, 19920427], [45, 19920504], [45, 19920511], [45, 19920518], [45, 19920525], [45, 19920601], [45, 19920608], [45, 19920615], [45, 19920622], [45, 19920629], [45, 19920706], [46, 19920713], [46, 19920720], [45, 19920727], [73, 19920803], [73, 19920810], [73, 19920817], [119, 19920824], [90, 19920831], [90, 19920907], [90, 19920914], [90, 19920921], [90, 19920928], [62, 19921005], [62, 19921012], [62, 19921019], [62, 19921026], [62, 19921102], [62, 19921109], [62, 19921116], [62, 19921123], [62, 19921130], [62, 19921207], [62, 19921214], [62, 19921221], [45, 19921228], [44, 19930101], [45, 19930104], [45, 19930111], [45, 19930118], [45, 19930125], [45, 19930201], [32, 19930208], [45, 19930215], [45, 19930222], [45, 19930301], [45, 19930308], [45, 19930315], [45, 19930322], [45, 19930329], [45, 19930405], [62, 19930412], [62, 19930419], [62, 19930426], [62, 19930503], [62, 19930510], [44, 19930517], [44, 19930524], [44, 19930531], [44, 19930607], [44, 19930614], [44, 19930621], [44, 19930628], [62, 19930705], [62, 19930712], [62, 19930719], [62, 19930726], [43, 19930802], [43, 19930809], [43, 19930816], [43, 19930823], [43, 19930830], [43, 19930906], [43, 19930913], [76, 19930920], [75, 19930927], [58, 19931004], [58, 19931011], [58, 19931018], [58, 19931025], [58, 19931101], [58, 19931108], [75, 19931115], [75, 19931122], [75, 19931129], [75, 19931206], [75, 19931213], [75, 19931220], [75, 19931227], [73, 19940101], [75, 19940103], [75, 19940110], [75, 19940117], [75, 19940124], [62, 19940131], [63, 19940207], [63, 19940214], [63, 19940221], [62, 19940228], [62, 19940307], [62, 19940314], [62, 19940321], [61, 19940328], [62, 19940404], [61, 19940411], [44, 19940418], [57, 19940425], [57, 19940502], [57, 19940509], [57, 19940516], [57, 19940523], [57, 19940530], [65, 19940606], [65, 19940613], [65, 19940620], [65, 19940627], [67, 19940704], [67, 19940711], [60, 19940718], [60, 19940725], [60, 19940801], [60, 19940808], [60, 19940815], [60, 19940822], [60, 19940829], [60, 19940905], [68, 19940912], [68, 19940919], [69, 19940926], [69, 19941003], [69, 19941010], [69, 19941017], [59, 19941024], [59, 19941031], [69, 19941107], [69, 19941114], [69, 19941121], [69, 19941128], [69, 19941205], [69, 19941212], [69, 19941219], [69, 19941226], [69, 19950101], [69, 19950102], [69, 19950109], [69, 19950116], [69, 19950123], [69, 19950130], [69, 19950206], [69, 19950213], [69, 19950220], [69, 19950227], [69, 19950306], [69, 19950313], [69, 19950320], [69, 19950327], [69, 19950403], [69, 19950410], [69, 19950417], [69, 19950424], [69, 19950501], [69, 19950508], [69, 19950515], [69, 19950522], [69, 19950529], [69, 19950605], [96, 19950612], [96, 19950619], [96, 19950626], [96, 19950703], [97, 19950710], [118, 19950717], [118, 19950724], [118, 19950731], [118, 19950807], [118, 19950814], [131, 19950821], [131, 19950828], [131, 19950904], [131, 19950911], [131, 19950918], [131, 19950925], [131, 19951002], [131, 19951009], [131, 19951016], [131, 19951023], [131, 19951030], [131, 19951106], [138, 19951113], [138, 19951120], [138, 19951127], [138, 19951204], [138, 19951211], [138, 19951218], [138, 19951225], [138, 19960101], [125, 19960108], [125, 19960115], [125, 19960122], [125, 19960129], [125, 19960205], [125, 19960212], [125, 19960219], [147, 19960226], [147, 19960304], [147, 19960311], [147, 19960318], [147, 19960325], [147, 19960401], [147, 19960408], [147, 19960415], [147, 19960422], [147, 19960429], [147, 19960506], [147, 19960513], [147, 19960520], [147, 19960527], [147, 19960603], [147, 19960610], [147, 19960617], [147, 19960624], [147, 19960701], [171, 19960708], [171, 19960715], [171, 19960722], [171, 19960729], [171, 19960805], [171, 19960812], [171, 19960819], [171, 19960826], [171, 19960902], [194, 19960909], [172, 19960916], [172, 19960923], [172, 19960930], [172, 19961007], [175, 19961014], [175, 19961021], [191, 19961028], [191, 19961104], [213, 19961111], [213, 19961118], [213, 19961125], [213, 19961202], [213, 19961209], [213, 19961216], [185, 19961223], [185, 19961230], [185, 19970101], [185, 19970106], [185, 19970113], [185, 19970120], [209, 19970127], [209, 19970203], [209, 19970210], [209, 19970217], [223, 19970224], [223, 19970303], [223, 19970310], [223, 19970317], [223, 19970324], [223, 19970331], [223, 19970407], [225, 19970414], [225, 19970421], [225, 19970428], [225, 19970505], [225, 19970512], [225, 19970519], [225, 19970526], [225, 19970602], [225, 19970609], [225, 19970616], [225, 19970623], [225, 19970630], [164, 19970707], [257, 19970714], [257, 19970721], [257, 19970728], [273, 19970804], [273, 19970811], [273, 19970818], [273, 19970825], [273, 19970901], [273, 19970908], [273, 19970915], [273, 19970922], [273, 19970929], [273, 19971006], [299, 19971013], [314, 19971020], [314, 19971027], [337, 19971103], [337, 19971110], [363, 19971117], [363, 19971124], [363, 19971201], [394, 19971208], [394, 19971215], [394, 19971222], [394, 19971229], [394, 19980101], [394, 19980105], [394, 19980112], [394, 19980119], [394, 19980126], [394, 19980202], [394, 19980209], [394, 19980216], [394, 19980223], [394, 19980302], [394, 19980309], [394, 19980316], [394, 19980323], [426, 19980330], [426, 19980406], [459, 19980413], [459, 19980420], [459, 19980427], [459, 19980504], [459, 19980511], [459, 19980518], [459, 19980525], [459, 19980601], [543, 19980608], [569, 19980615], [590, 19980622], [590, 19980629], [633, 19980706], [633, 19980713], [633, 19980720], [634, 19980727], [634, 19980803], [634, 19980810], [631, 19980817], [631, 19980824], [660, 19980831], [660, 19980907], [663, 19980914], [663, 19980921], [683, 19980928], [688, 19981005], [688, 19981012], [696, 19981019], [693, 19981026], [693, 19981102], [692, 19981109], [692, 19981116], [692, 19981123], [709, 19981130], [703, 19981207], [703, 19981214], [703, 19981221], [703, 19981228], [703, 19990101], [722, 19990104], [722, 19990111], [722, 19990118], [722, 19990125], [728, 19990201], [723, 19990208], [723, 19990215], [723, 19990222], [723, 19990301], [723, 19990308], [728, 19990315], [728, 19990322], [728, 19990329], [728, 19990405], [728, 19990412], [728, 19990419], [752, 19990426], [761, 19990503], [761, 19990510], [777, 19990517], [777, 19990524], [777, 19990531], [804, 19990607], [804, 19990614], [804, 19990621], [804, 19990628], [804, 19990705], [829, 19990712], [829, 19990719], [829, 19990726], [829, 19990802], [870, 19990809], [873, 19990816], [853, 19990823], [861, 19990830], [861, 19990906], [879, 19990913], [879, 19990920], [899, 19990927], [927, 19991004], [941, 19991011], [964, 19991018], [941, 19991025], [941, 19991101], [941, 19991108], [941, 19991115], [941, 19991122], [966, 19991129], [966, 19991206], [989, 19991213], [989, 19991220], [989, 19991227], [989, 20000101], [989, 20000103], [989, 20000110], [989, 20000117], [989, 20000124], [1013, 20000131], [1038, 20000207], [1038, 20000214], [1038, 20000221], [1038, 20000228], [1065, 20000306], [1065, 20000313], [1065, 20000320], [1065, 20000327], [1065, 20000403], [1093, 20000410], [1093, 20000417], [1093, 20000424], [1122, 20000501], [1122, 20000508], [1106, 20000515], [1106, 20000522], [1106, 20000529], [1106, 20000605], [1160, 20000612], [1160, 20000619], [1188, 20000626], [1188, 20000703], [1204, 20000710], [1205, 20000717], [1212, 20000724], [1276, 20000731], [1276, 20000807], [1224, 20000814], [1224, 20000821], [1224, 20000828], [1224, 20000904], [1241, 20000911], [1265, 20000918], [1231, 20000925], [1223, 20001002], [1232, 20001009], [1253, 20001016], [1245, 20001023], [1247, 20001030], [1173, 20001106], [964, 20001113], [961, 20001120], [961, 20001127], [961, 20001204], [964, 20001211], [964, 20001218], [964, 20001225], [964, 20010101], [964, 20010108], [964, 20010115], [964, 20010122], [977, 20010129], [977, 20010205], [1004, 20010212], [1027, 20010219], [1027, 20010226], [1027, 20010305], [1027, 20010312], [1101, 20010319], [1101, 20010326], [914, 20010402], [930, 20010409], [952, 20010416], [961, 20010423], [988, 20010430], [1011, 20010507], [1011, 20010514], [1029, 20010521], [1067, 20010528], [1067, 20010604], [1094, 20010611], [1094, 20010618], [1073, 20010625], [1073, 20010702], [1113, 20010709], [1135, 20010716], [1149, 20010723], [1149, 20010730], [1175, 20010806], [1175, 20010813], [1175, 20010820], [1201, 20010827], [1201, 20010903], [1228, 20010910], [1231, 20010917], [1263, 20010924], [1287, 20011001], [1267, 20011008], [1288, 20011015], [1291, 20011022], [1312, 20011029], [1312, 20011105], [1412, 20011112], [1412, 20011119], [1437, 20011126], [1437, 20011203], [1437, 20011210], [1430, 20011217], [1430, 20011224], [1430, 20011231], [1430, 20020101], [1430, 20020107], [1430, 20020114], [1430, 20020121], [1430, 20020128], [1422, 20020204], [1422, 20020211], [1422, 20020218], [1424, 20020225], [1424, 20020304], [1424, 20020311], [1448, 20020318], [1448, 20020325], [1573, 20020401], [1574, 20020408], [1574, 20020415], [1574, 20020422], [1577, 20020429], [1730, 20020506], [1577, 20020513], [1577, 20020520], [1577, 20020527], [1577, 20020603], [1783, 20020610], [1803, 20020617], [1783, 20020624], [1783, 20020701], [1834, 20020708], [1835, 20020715], [1828, 20020722], [1853, 20020729], [1853, 20020805], [1925, 20020812], [1915, 20020819], [2111, 20020826], [2111, 20020902], [2451, 20020909], [2457, 20020916], [2462, 20020923], [2496, 20020930], [2526, 20021007], [2520, 20021014], [2505, 20021021], [2505, 20021028], [2498, 20021104], [2497, 20021111], [2497, 20021118], [2497, 20021125], [2497, 20021202], [2497, 20021209], [2497, 20021216], [2497, 20021223], [2497, 20021230], [2497, 20030101], [2497, 20030106], [2497, 20030113], [2497, 20030120], [2497, 20030127], [2517, 20030203], [2507, 20030210], [2490, 20030217], [2528, 20030224], [2549, 20030303], [2549, 20030310], [2571, 20030317], [2571, 20030324], [2614, 20030331], [2587, 20030407], [2587, 20030414], [2608, 20030421], [2719, 20030428], [2652, 20030505], [2671, 20030512], [2728, 20030519], [1860, 20030526], [2728, 20030602], [2753, 20030609], [2753, 20030616], [2731, 20030623], [2731, 20030630], [2730, 20030707], [2755, 20030714], [2759, 20030721], [2777, 20030728], [2732, 20030804], [2734, 20030811], [2755, 20030818], [2801, 20030825], [2801, 20030901], [2798, 20030908], [2847, 20030915], [2862, 20030922], [2930, 20030929], [2961, 20031006], [2966, 20031013], [3035, 20031020], [3020, 20031027], [3038, 20031103], [3052, 20031110], [3065, 20031117], [3092, 20031124], [3120, 20031201], [3190, 20031208], [3211, 20031215], [3211, 20031222], [3214, 20031229], [3214, 20040101], [3206, 20040105], [3206, 20040112], [3206, 20040119], [3206, 20040126], [3257, 20040202], [3265, 20040209], [3282, 20040216], [3282, 20040223], [3279, 20040301], [3286, 20040308], [3286, 20040315], [3286, 20040322], [3286, 20040329], [3277, 20040405], [3286, 20040412], [1489, 20040419], [3379, 20040426], [2613, 20040503], [1187, 20040510], [2361, 20040517], [2955, 20040524], [2535, 20040531], [3433, 20040607], [3456, 20040614], [3492, 20040621], [3492, 20040628], [3498, 20040705], [3516, 20040712], [3587, 20040719], [3592, 20040726], [3592, 20040802], [3645, 20040809], [3647, 20040816], [3661, 20040823], [3705, 20040830], [3705, 20040906], [3785, 20040913], [3831, 20040920], [3913, 20040927], [3957, 20041004], [3986, 20041011], [3987, 20041018], [3968, 20041025], [4011, 20041101], [4071, 20041108], [4124, 20041115], [4145, 20041122], [4147, 20041129], [4160, 20041206], [4160, 20041213], [4160, 20041220], [4160, 20041227], [4160, 20050101], [4160, 20050103], [4160, 20050110], [4160, 20050117], [4160, 20050124], [4198, 20050131], [4198, 20050207], [4211, 20050214], [4286, 20050221], [4286, 20050228], [4313, 20050307], [4313, 20050314], [4333, 20050321], [4333, 20050328], [4362, 20050404], [4371, 20050411], [4379, 20050418], [4379, 20050425], [4379, 20050502], [4470, 20050509], [4489, 20050516], [4522, 20050523], [4522, 20050530], [4682, 20050606], [4705, 20050613], [4727, 20050620], [4727, 20050627], [4792, 20050704], [4816, 20050711], [4847, 20050718], [4859, 20050725], [4926, 20050801], [4982, 20050808], [5020, 20050815], [5090, 20050822], [5100, 20050829], [5100, 20050905], [5187, 20050912], [5173, 20050919], [5175, 20050926], [5215, 20051003], [5249, 20051010], [5237, 20051017], [5257, 20051024], [5331, 20051031], [5362, 20051107], [5357, 20051114], [5391, 20051121], [5401, 20051128], [5452, 20051205], [5452, 20051212], [5452, 20051219], [5452, 20051226], [5452, 20060101], [5452, 20060102], [5452, 20060109], [5452, 20060116], [5452, 20060123], [5441, 20060130], [5425, 20060206], [5441, 20060213], [5478, 20060220], [5528, 20060227], [5548, 20060306], [5548, 20060313], [5559, 20060320], [5559, 20060327], [5626, 20060403], [5626, 20060410], [5644, 20060417], [5658, 20060424], [5656, 20060501], [5654, 20060508], [5683, 20060515], [5721, 20060522], [5798, 20060529], [5798, 20060605], [5862, 20060612], [5897, 20060619], [5944, 20060626], [5944, 20060703], [5983, 20060710], [6026, 20060717], [6065, 20060724], [6133, 20060731], [6151, 20060807], [6226, 20060814], [6289, 20060821], [6284, 20060828], [6284, 20060904], [6304, 20060911], [6347, 20060918], [6376, 20060925], [6436, 20061002], [6520, 20061009], [6629, 20061016], [6730, 20061023], [6808, 20061030], [6816, 20061106], [6807, 20061113], [6893, 20061120], [6896, 20061127], [6931, 20061204], [6953, 20061211], [6953, 20061218], [6953, 20061225], [6953, 20070101], [6926, 20070108], [6926, 20070115], [6926, 20070122], [6925, 20070129], [6925, 20070205], [6930, 20070212], [6942, 20070219], [6988, 20070226], [7017, 20070305], [7017, 20070312], [7058, 20070319], [7058, 20070326], [7139, 20070402], [7175, 20070409], [7197, 20070416], [7197, 20070423], [7197, 20070430], [7233, 20070507], [7317, 20070514], [7341, 20070521], [7365, 20070528], [7365, 20070604], [7448, 20070611], [7448, 20070618], [7473, 20070625], [7473, 20070702], [7495, 20070709], [7478, 20070716], [7470, 20070723], [7528, 20070730], [7522, 20070806], [7527, 20070813], [7503, 20070820], [7504, 20070827], [7504, 20070903], [7602, 20070910], [7643, 20070917], [7686, 20070924], [7697, 20071001], [7707, 20071008], [7687, 20071015], [7638, 20071022], [7711, 20071029], [7677, 20071105], [7664, 20071112], [7666, 20071119], [7674, 20071126], [7650, 20071203], [7659, 20071210], [7659, 20071217], [7682, 20071224], [7682, 20071231], [7682, 20080101], [7682, 20080107], [7711, 20080114], [7711, 20080121], [7691, 20080128], [7716, 20080204], [7743, 20080211], [7742, 20080218], [7731, 20080225], [7761, 20080303], [7790, 20080310], [7790, 20080317], [7832, 20080324], [7832, 20080331], [7873, 20080407], [7889, 20080414], [7917, 20080421], [7917, 20080428], [7929, 20080505], [8002, 20080512], [8022, 20080519], [8090, 20080526], [8090, 20080602], [8030, 20080609], [7970, 20080616], [7966, 20080623], [7966, 20080630], [8089, 20080707], [8113, 20080714], [8235, 20080721], [8280, 20080728], [8325, 20080804], [8372, 20080811], [8387, 20080818], [8417, 20080825], [8417, 20080901], [8527, 20080908], [8639, 20080915], [8690, 20080922], [8731, 20080929], [8762, 20081006], [8794, 20081013], [8836, 20081020], [8898, 20081027], [8956, 20081103], [8996, 20081110], [9003, 20081117], [9019, 20081124], [9050, 20081201], [9076, 20081208], [9077, 20081215], [9070, 20081222], [9070, 20081229], [9070, 20090101], [9064, 20090105], [9064, 20090112], [9064, 20090119], [9064, 20090126], [9087, 20090202], [9087, 20090209], [9059, 20090216], [9063, 20090223], [9063, 20090302], [9053, 20090309], [9053, 20090316], [9057, 20090323], [9057, 20090330], [9066, 20090406], [9121, 20090413], [9110, 20090420], [9111, 20090427], [9094, 20090504], [9143, 20090511], [9140, 20090518], [9153, 20090525], [9153, 20090601], [9203, 20090608], [9239, 20090615], [9255, 20090622], [9255, 20090629], [9310, 20090706], [9376, 20090713], [9474, 20090720], [9589, 20090727], [9611, 20090803], [9598, 20090810], [9642, 20090817], [9682, 20090824], [9682, 20090831], [9682, 20090907], [9808, 20090914], [9856, 20090921], [9918, 20090928], [9929, 20091005], [9925, 20091012], [10003, 20091019], [10025, 20091026], [10061, 20091102], [10116, 20091109], [10137, 20091116], [10204, 20091123], [10238, 20091130], [10221, 20091207], [10272, 20091214], [10272, 20091221], [10318, 20091228], [10318, 20100101], [10318, 20100104], [10320, 20100111], [10329, 20100118], [10329, 20100125], [10373, 20100201], [10372, 20100208], [10389, 20100215], [10404, 20100222], [10430, 20100301], [10442, 20100308], [10442, 20100315], [10412, 20100322], [10412, 20100329], [10481, 20100405], [10515, 20100412], [10543, 20100419], [10580, 20100426], [10590, 20100503], [10576, 20100510], [10593, 20100517], [10634, 20100524], [10634, 20100531], [10613, 20100607], [10630, 20100614], [10634, 20100621], [10634, 20100628], [10685, 20100705], [10726, 20100712], [10756, 20100719], [10817, 20100726], [10835, 20100802], [10937, 20100809], [10999, 20100816], [11026, 20100823], [11125, 20100830], [11125, 20100906], [11256, 20100913], [11290, 20100920], [11339, 20100927], [11460, 20101004], [11566, 20101011], [11594, 20101018], [11617, 20101025], [11687, 20101101], [11735, 20101108], [11814, 20101115], [11845, 20101122], [11877, 20101129], [11888, 20101206], [11907, 20101213], [11913, 20101220], [11904, 20101227], [11904, 20110101], [12060, 20110103], [12067, 20110110], [12094, 20110117], [12094, 20110124], [12143, 20110131], [12181, 20110207], [12204, 20110214], [12201, 20110221], [12254, 20110228], [12267, 20110307], [12267, 20110314], [12303, 20110321], [12303, 20110328], [12343, 20110404], [12398, 20110411], [12434, 20110418], [12422, 20110425], [12438, 20110502], [12482, 20110509], [12467, 20110516], [12522, 20110523], [12522, 20110530], [12659, 20110606], [12682, 20110613], [12686, 20110620], [12686, 20110627], [12867, 20110704], [12895, 20110711], [12927, 20110718], [13006, 20110725], [12999, 20110801], [13081, 20110808], [13129, 20110815], [13140, 20110822], [13174, 20110829], [13174, 20110905], [13299, 20110912], [13342, 20110919], [13382, 20110926], [13372, 20111003], [13382, 20111010], [13411, 20111017], [13443, 20111024], [13465, 20111031], [13443, 20111107], [13482, 20111114], [13518, 20111121], [13517, 20111128], [13542, 20111205], [13536, 20111212], [13565, 20111219], [13603, 20111226], [13603, 20120101], [13610, 20120102], [13628, 20120109], [13618, 20120116], [13618, 20120123], [13667, 20120130], [13666, 20120206], [13674, 20120213], [13719, 20120220], [13788, 20120227], [13791, 20120305], [13791, 20120312], [13818, 20120319], [13818, 20120326], [13881, 20120402], [13902, 20120409], [13938, 20120416], [13964, 20120423], [13983, 20120430], [14016, 20120507], [14015, 20120514], [14034, 20120521], [14087, 20120528], [14087, 20120604], [14072, 20120611], [14138, 20120618], [14172, 20120625], [14172, 20120702], [14180, 20120709], [14223, 20120716], [14250, 20120723], [14264, 20120730], [14286, 20120806], [14331, 20120813], [14361, 20120820], [14389, 20120827], [14389, 20120903], [14389, 20120910], [14402, 20120917], [14438, 20120924], [14472, 20121001], [14480, 20121008], [14513, 20121015], [14525, 20121022], [14547, 20121029], [14585, 20121105], [14621, 20121112], [14624, 20121119], [14612, 20121126], [14610, 20121203], [14639, 20121210], [14633, 20121217], [14649, 20121224], [13949, 20121231], [14648, 20130101], [13966, 20130107], [14667, 20130114], [14667, 20130121], [14667, 20130128], [14652, 20130204], [14651, 20130211], [14649, 20130218], [14554, 20130225], [14695, 20130304], [14727, 20130311], [13048, 20130318], [6790, 20130401], [14591, 20130408], [14449, 20130415], [14451, 20130422], [14462, 20130429], [14487, 20130506], [14516, 20130513], [14531, 20130520], [14545, 20130527], [14545, 20130603], [14553, 20130610], [14569, 20130617], [14650, 20130624], [14651, 20130708], [14689, 20130715], [14751, 20130722], [14766, 20130729], [14679, 20130805], [14599, 20130812], [14740, 20130819], [14714, 20130826], [14796, 20130902], [14820, 20130909], [14866, 20130916], [14878, 20130923], [14885, 20130930], [15028, 20131007], [15072, 20131014], [15025, 20131021], [15071, 20131028], [15098, 20131104], [15101, 20131111], [15151, 20131118], [15337, 20131125], [15334, 20131202], [15512, 20131209], [15540, 20131216], [15701, 20131223], [15708, 20131230], [15703, 20140106], [15637, 20140113], [8585, 20140120], [15646, 20140127], [15632, 20140203], [15637, 20140210], [8565, 20140217], [15659, 20140224], [15557, 20150302], [15578, 20150406], [15545, 20150413], [15568, 20150420], [15475, 20150427], [15710, 20150511], [15623, 20150518], [15741, 20150525], [15741, 20150608], [15810, 20150622], [15761, 20150803], [15776, 20150810], [15908, 20150824], [16184, 20150831], [15832, 20150914], [15800, 20150921], [16178, 20151005], [16191, 20151012], [16138, 20151019], [16293, 20151102], [4812, 20160111], [16518, 20160118], [16629, 20160201], [16586, 20160208], [16529, 20160215], [16454, 20160222], [16515, 20160229], [16517, 20160307], [16446, 20160411], [16454, 20160418], [16489, 20160425], [16388, 20160502], [16374, 20160509], [16351, 20160523], [16361, 20160606], [16314, 20160620], [16293, 20160627], [16325, 20160815], [16316, 20160919], [16305, 20160926], [16233, 20161010], [16349, 20161031], [16364, 20161107], [16249, 20161114], [16345, 20161121], [16294, 20161128], [16336, 20161205], [16387, 20161212], [16372, 20170102], [16406, 20170109], [16379, 20170116], [16305, 20170213], [16207, 20170220], [16111, 20170306], [16230, 20170320], [16270, 20170417], [16226, 20170424], [16303, 20170501], [16124, 20170508], [16204, 20170515], [16290, 20170522], [16649, 20170529], [16157, 20170612], [16189, 20170619], [16184, 20170626], [16597, 20170703], [15983, 20170717], [16138, 20170724], [16145, 20170731], [16147, 20170807], [16268, 20170814], [16279, 20170821], [16301, 20170828], [16161, 20170911]], "trigger_words": ["Total Number", "Ranking Date"], "Prediction": "ranking_date, SUM(tours) AS total_tours\n FROM rankings\n GROUP BY ranking_date;"}
{"db_id": "wta_1", "query": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date", "query_toks": ["SELECT", "sum", "(", "tours", ")", ",", "ranking_date", "FROM", "rankings", "GROUP", "BY", "ranking_date"], "query_toks_no_value": ["select", "sum", "(", "tours", ")", ",", "ranking_date", "from", "rankings", "group", "by", "ranking_date"], "question": "How many total tours were there for each ranking date?", "question_toks": ["How", "many", "total", "tours", "were", "there", "for", "each", "ranking", "date", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 43, false], null]], [0, [0, [0, 39, false], null]]]], "where": [], "groupBy": [[0, 39, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "480", "answer_text": [[0, 19870119], [0, 19870126], [0, 19870202], [0, 19870209], [0, 19870302], [0, 19870330], [0, 19870406], [0, 19870413], [0, 19870420], [0, 19870427], [0, 19870504], [0, 19870511], [0, 19870518], [0, 19870525], [0, 19870601], [0, 19870608], [0, 19870615], [0, 19870622], [0, 19870629], [0, 19870706], [0, 19870713], [0, 19870720], [0, 19870727], [0, 19870803], [0, 19870810], [0, 19870817], [0, 19870824], [0, 19870831], [0, 19870907], [0, 19870914], [0, 19870921], [0, 19870928], [0, 19871005], [0, 19871012], [0, 19871019], [0, 19871026], [0, 19871102], [0, 19871109], [0, 19871116], [0, 19871123], [0, 19871130], [0, 19871207], [0, 19871214], [0, 19871221], [0, 19871228], [0, 19880101], [0, 19880104], [0, 19880111], [0, 19880118], [0, 19880125], [0, 19880201], [0, 19880208], [0, 19880215], [0, 19880222], [0, 19880229], [0, 19880307], [0, 19880314], [0, 19880321], [0, 19880328], [0, 19880404], [0, 19880411], [0, 19880418], [0, 19880425], [0, 19880502], [0, 19880509], [0, 19880516], [0, 19880523], [0, 19880530], [0, 19880606], [0, 19880613], [0, 19880620], [0, 19880627], [0, 19880704], [0, 19880711], [0, 19880718], [0, 19880725], [0, 19880801], [0, 19880808], [0, 19880815], [0, 19880822], [0, 19880829], [0, 19880905], [0, 19880912], [0, 19880919], [0, 19880926], [0, 19881003], [0, 19881010], [0, 19881017], [0, 19881024], [0, 19881031], [0, 19881107], [0, 19881114], [29, 19881121], [29, 19881128], [29, 19881205], [29, 19881212], [29, 19881219], [29, 19881226], [28, 19890101], [29, 19890102], [29, 19890109], [29, 19890116], [29, 19890123], [29, 19890130], [29, 19890206], [0, 19890213], [0, 19890220], [0, 19890227], [0, 19890306], [29, 19890313], [29, 19890320], [0, 19890327], [0, 19890403], [29, 19890410], [29, 19890417], [29, 19890424], [29, 19890501], [29, 19890508], [29, 19890515], [29, 19890522], [29, 19890529], [29, 19890605], [29, 19890612], [29, 19890619], [29, 19890626], [29, 19890703], [29, 19890710], [29, 19890717], [29, 19890724], [29, 19890731], [29, 19890807], [29, 19890814], [29, 19890821], [29, 19890828], [29, 19890904], [29, 19890911], [29, 19890918], [29, 19890925], [29, 19891002], [29, 19891009], [29, 19891016], [29, 19891023], [29, 19891030], [29, 19891106], [29, 19891113], [29, 19891120], [29, 19891127], [29, 19891204], [29, 19891211], [29, 19891218], [29, 19891225], [28, 19900101], [29, 19900108], [29, 19900115], [29, 19900122], [29, 19900129], [29, 19900205], [29, 19900212], [29, 19900219], [29, 19900226], [29, 19900305], [29, 19900312], [29, 19900319], [29, 19900326], [29, 19900402], [29, 19900409], [29, 19900416], [29, 19900423], [29, 19900430], [29, 19900507], [29, 19900514], [29, 19900521], [29, 19900528], [29, 19900604], [29, 19900611], [30, 19900618], [30, 19900625], [30, 19900702], [30, 19900709], [30, 19900716], [30, 19900723], [30, 19900730], [30, 19900806], [30, 19900813], [30, 19900820], [30, 19900827], [30, 19900903], [30, 19900910], [30, 19900917], [30, 19900924], [30, 19901001], [30, 19901008], [30, 19901015], [30, 19901022], [30, 19901029], [30, 19901105], [30, 19901112], [30, 19901119], [30, 19901126], [30, 19901203], [30, 19901210], [30, 19901217], [30, 19901224], [30, 19901231], [29, 19910101], [30, 19910107], [30, 19910114], [30, 19910121], [30, 19910128], [30, 19910204], [30, 19910211], [30, 19910218], [30, 19910225], [30, 19910304], [29, 19910311], [29, 19910318], [29, 19910325], [29, 19910401], [29, 19910408], [29, 19910415], [29, 19910422], [29, 19910429], [29, 19910506], [29, 19910513], [29, 19910520], [29, 19910527], [29, 19910603], [29, 19910610], [29, 19910617], [29, 19910624], [29, 19910701], [30, 19910708], [29, 19910715], [29, 19910722], [29, 19910729], [29, 19910805], [29, 19910812], [29, 19910819], [30, 19910826], [30, 19910902], [30, 19910909], [30, 19910916], [30, 19910923], [30, 19910930], [31, 19911007], [31, 19911014], [31, 19911021], [31, 19911028], [44, 19911104], [44, 19911111], [44, 19911118], [44, 19911125], [31, 19911202], [44, 19911209], [45, 19911216], [45, 19911223], [45, 19911230], [44, 19920101], [45, 19920106], [45, 19920113], [45, 19920120], [45, 19920127], [45, 19920203], [29, 19920210], [45, 19920217], [45, 19920224], [45, 19920302], [45, 19920309], [45, 19920316], [45, 19920323], [45, 19920330], [45, 19920406], [45, 19920413], [45, 19920420], [45, 19920427], [45, 19920504], [45, 19920511], [45, 19920518], [45, 19920525], [45, 19920601], [45, 19920608], [45, 19920615], [45, 19920622], [45, 19920629], [45, 19920706], [46, 19920713], [46, 19920720], [45, 19920727], [73, 19920803], [73, 19920810], [73, 19920817], [119, 19920824], [90, 19920831], [90, 19920907], [90, 19920914], [90, 19920921], [90, 19920928], [62, 19921005], [62, 19921012], [62, 19921019], [62, 19921026], [62, 19921102], [62, 19921109], [62, 19921116], [62, 19921123], [62, 19921130], [62, 19921207], [62, 19921214], [62, 19921221], [45, 19921228], [44, 19930101], [45, 19930104], [45, 19930111], [45, 19930118], [45, 19930125], [45, 19930201], [32, 19930208], [45, 19930215], [45, 19930222], [45, 19930301], [45, 19930308], [45, 19930315], [45, 19930322], [45, 19930329], [45, 19930405], [62, 19930412], [62, 19930419], [62, 19930426], [62, 19930503], [62, 19930510], [44, 19930517], [44, 19930524], [44, 19930531], [44, 19930607], [44, 19930614], [44, 19930621], [44, 19930628], [62, 19930705], [62, 19930712], [62, 19930719], [62, 19930726], [43, 19930802], [43, 19930809], [43, 19930816], [43, 19930823], [43, 19930830], [43, 19930906], [43, 19930913], [76, 19930920], [75, 19930927], [58, 19931004], [58, 19931011], [58, 19931018], [58, 19931025], [58, 19931101], [58, 19931108], [75, 19931115], [75, 19931122], [75, 19931129], [75, 19931206], [75, 19931213], [75, 19931220], [75, 19931227], [73, 19940101], [75, 19940103], [75, 19940110], [75, 19940117], [75, 19940124], [62, 19940131], [63, 19940207], [63, 19940214], [63, 19940221], [62, 19940228], [62, 19940307], [62, 19940314], [62, 19940321], [61, 19940328], [62, 19940404], [61, 19940411], [44, 19940418], [57, 19940425], [57, 19940502], [57, 19940509], [57, 19940516], [57, 19940523], [57, 19940530], [65, 19940606], [65, 19940613], [65, 19940620], [65, 19940627], [67, 19940704], [67, 19940711], [60, 19940718], [60, 19940725], [60, 19940801], [60, 19940808], [60, 19940815], [60, 19940822], [60, 19940829], [60, 19940905], [68, 19940912], [68, 19940919], [69, 19940926], [69, 19941003], [69, 19941010], [69, 19941017], [59, 19941024], [59, 19941031], [69, 19941107], [69, 19941114], [69, 19941121], [69, 19941128], [69, 19941205], [69, 19941212], [69, 19941219], [69, 19941226], [69, 19950101], [69, 19950102], [69, 19950109], [69, 19950116], [69, 19950123], [69, 19950130], [69, 19950206], [69, 19950213], [69, 19950220], [69, 19950227], [69, 19950306], [69, 19950313], [69, 19950320], [69, 19950327], [69, 19950403], [69, 19950410], [69, 19950417], [69, 19950424], [69, 19950501], [69, 19950508], [69, 19950515], [69, 19950522], [69, 19950529], [69, 19950605], [96, 19950612], [96, 19950619], [96, 19950626], [96, 19950703], [97, 19950710], [118, 19950717], [118, 19950724], [118, 19950731], [118, 19950807], [118, 19950814], [131, 19950821], [131, 19950828], [131, 19950904], [131, 19950911], [131, 19950918], [131, 19950925], [131, 19951002], [131, 19951009], [131, 19951016], [131, 19951023], [131, 19951030], [131, 19951106], [138, 19951113], [138, 19951120], [138, 19951127], [138, 19951204], [138, 19951211], [138, 19951218], [138, 19951225], [138, 19960101], [125, 19960108], [125, 19960115], [125, 19960122], [125, 19960129], [125, 19960205], [125, 19960212], [125, 19960219], [147, 19960226], [147, 19960304], [147, 19960311], [147, 19960318], [147, 19960325], [147, 19960401], [147, 19960408], [147, 19960415], [147, 19960422], [147, 19960429], [147, 19960506], [147, 19960513], [147, 19960520], [147, 19960527], [147, 19960603], [147, 19960610], [147, 19960617], [147, 19960624], [147, 19960701], [171, 19960708], [171, 19960715], [171, 19960722], [171, 19960729], [171, 19960805], [171, 19960812], [171, 19960819], [171, 19960826], [171, 19960902], [194, 19960909], [172, 19960916], [172, 19960923], [172, 19960930], [172, 19961007], [175, 19961014], [175, 19961021], [191, 19961028], [191, 19961104], [213, 19961111], [213, 19961118], [213, 19961125], [213, 19961202], [213, 19961209], [213, 19961216], [185, 19961223], [185, 19961230], [185, 19970101], [185, 19970106], [185, 19970113], [185, 19970120], [209, 19970127], [209, 19970203], [209, 19970210], [209, 19970217], [223, 19970224], [223, 19970303], [223, 19970310], [223, 19970317], [223, 19970324], [223, 19970331], [223, 19970407], [225, 19970414], [225, 19970421], [225, 19970428], [225, 19970505], [225, 19970512], [225, 19970519], [225, 19970526], [225, 19970602], [225, 19970609], [225, 19970616], [225, 19970623], [225, 19970630], [164, 19970707], [257, 19970714], [257, 19970721], [257, 19970728], [273, 19970804], [273, 19970811], [273, 19970818], [273, 19970825], [273, 19970901], [273, 19970908], [273, 19970915], [273, 19970922], [273, 19970929], [273, 19971006], [299, 19971013], [314, 19971020], [314, 19971027], [337, 19971103], [337, 19971110], [363, 19971117], [363, 19971124], [363, 19971201], [394, 19971208], [394, 19971215], [394, 19971222], [394, 19971229], [394, 19980101], [394, 19980105], [394, 19980112], [394, 19980119], [394, 19980126], [394, 19980202], [394, 19980209], [394, 19980216], [394, 19980223], [394, 19980302], [394, 19980309], [394, 19980316], [394, 19980323], [426, 19980330], [426, 19980406], [459, 19980413], [459, 19980420], [459, 19980427], [459, 19980504], [459, 19980511], [459, 19980518], [459, 19980525], [459, 19980601], [543, 19980608], [569, 19980615], [590, 19980622], [590, 19980629], [633, 19980706], [633, 19980713], [633, 19980720], [634, 19980727], [634, 19980803], [634, 19980810], [631, 19980817], [631, 19980824], [660, 19980831], [660, 19980907], [663, 19980914], [663, 19980921], [683, 19980928], [688, 19981005], [688, 19981012], [696, 19981019], [693, 19981026], [693, 19981102], [692, 19981109], [692, 19981116], [692, 19981123], [709, 19981130], [703, 19981207], [703, 19981214], [703, 19981221], [703, 19981228], [703, 19990101], [722, 19990104], [722, 19990111], [722, 19990118], [722, 19990125], [728, 19990201], [723, 19990208], [723, 19990215], [723, 19990222], [723, 19990301], [723, 19990308], [728, 19990315], [728, 19990322], [728, 19990329], [728, 19990405], [728, 19990412], [728, 19990419], [752, 19990426], [761, 19990503], [761, 19990510], [777, 19990517], [777, 19990524], [777, 19990531], [804, 19990607], [804, 19990614], [804, 19990621], [804, 19990628], [804, 19990705], [829, 19990712], [829, 19990719], [829, 19990726], [829, 19990802], [870, 19990809], [873, 19990816], [853, 19990823], [861, 19990830], [861, 19990906], [879, 19990913], [879, 19990920], [899, 19990927], [927, 19991004], [941, 19991011], [964, 19991018], [941, 19991025], [941, 19991101], [941, 19991108], [941, 19991115], [941, 19991122], [966, 19991129], [966, 19991206], [989, 19991213], [989, 19991220], [989, 19991227], [989, 20000101], [989, 20000103], [989, 20000110], [989, 20000117], [989, 20000124], [1013, 20000131], [1038, 20000207], [1038, 20000214], [1038, 20000221], [1038, 20000228], [1065, 20000306], [1065, 20000313], [1065, 20000320], [1065, 20000327], [1065, 20000403], [1093, 20000410], [1093, 20000417], [1093, 20000424], [1122, 20000501], [1122, 20000508], [1106, 20000515], [1106, 20000522], [1106, 20000529], [1106, 20000605], [1160, 20000612], [1160, 20000619], [1188, 20000626], [1188, 20000703], [1204, 20000710], [1205, 20000717], [1212, 20000724], [1276, 20000731], [1276, 20000807], [1224, 20000814], [1224, 20000821], [1224, 20000828], [1224, 20000904], [1241, 20000911], [1265, 20000918], [1231, 20000925], [1223, 20001002], [1232, 20001009], [1253, 20001016], [1245, 20001023], [1247, 20001030], [1173, 20001106], [964, 20001113], [961, 20001120], [961, 20001127], [961, 20001204], [964, 20001211], [964, 20001218], [964, 20001225], [964, 20010101], [964, 20010108], [964, 20010115], [964, 20010122], [977, 20010129], [977, 20010205], [1004, 20010212], [1027, 20010219], [1027, 20010226], [1027, 20010305], [1027, 20010312], [1101, 20010319], [1101, 20010326], [914, 20010402], [930, 20010409], [952, 20010416], [961, 20010423], [988, 20010430], [1011, 20010507], [1011, 20010514], [1029, 20010521], [1067, 20010528], [1067, 20010604], [1094, 20010611], [1094, 20010618], [1073, 20010625], [1073, 20010702], [1113, 20010709], [1135, 20010716], [1149, 20010723], [1149, 20010730], [1175, 20010806], [1175, 20010813], [1175, 20010820], [1201, 20010827], [1201, 20010903], [1228, 20010910], [1231, 20010917], [1263, 20010924], [1287, 20011001], [1267, 20011008], [1288, 20011015], [1291, 20011022], [1312, 20011029], [1312, 20011105], [1412, 20011112], [1412, 20011119], [1437, 20011126], [1437, 20011203], [1437, 20011210], [1430, 20011217], [1430, 20011224], [1430, 20011231], [1430, 20020101], [1430, 20020107], [1430, 20020114], [1430, 20020121], [1430, 20020128], [1422, 20020204], [1422, 20020211], [1422, 20020218], [1424, 20020225], [1424, 20020304], [1424, 20020311], [1448, 20020318], [1448, 20020325], [1573, 20020401], [1574, 20020408], [1574, 20020415], [1574, 20020422], [1577, 20020429], [1730, 20020506], [1577, 20020513], [1577, 20020520], [1577, 20020527], [1577, 20020603], [1783, 20020610], [1803, 20020617], [1783, 20020624], [1783, 20020701], [1834, 20020708], [1835, 20020715], [1828, 20020722], [1853, 20020729], [1853, 20020805], [1925, 20020812], [1915, 20020819], [2111, 20020826], [2111, 20020902], [2451, 20020909], [2457, 20020916], [2462, 20020923], [2496, 20020930], [2526, 20021007], [2520, 20021014], [2505, 20021021], [2505, 20021028], [2498, 20021104], [2497, 20021111], [2497, 20021118], [2497, 20021125], [2497, 20021202], [2497, 20021209], [2497, 20021216], [2497, 20021223], [2497, 20021230], [2497, 20030101], [2497, 20030106], [2497, 20030113], [2497, 20030120], [2497, 20030127], [2517, 20030203], [2507, 20030210], [2490, 20030217], [2528, 20030224], [2549, 20030303], [2549, 20030310], [2571, 20030317], [2571, 20030324], [2614, 20030331], [2587, 20030407], [2587, 20030414], [2608, 20030421], [2719, 20030428], [2652, 20030505], [2671, 20030512], [2728, 20030519], [1860, 20030526], [2728, 20030602], [2753, 20030609], [2753, 20030616], [2731, 20030623], [2731, 20030630], [2730, 20030707], [2755, 20030714], [2759, 20030721], [2777, 20030728], [2732, 20030804], [2734, 20030811], [2755, 20030818], [2801, 20030825], [2801, 20030901], [2798, 20030908], [2847, 20030915], [2862, 20030922], [2930, 20030929], [2961, 20031006], [2966, 20031013], [3035, 20031020], [3020, 20031027], [3038, 20031103], [3052, 20031110], [3065, 20031117], [3092, 20031124], [3120, 20031201], [3190, 20031208], [3211, 20031215], [3211, 20031222], [3214, 20031229], [3214, 20040101], [3206, 20040105], [3206, 20040112], [3206, 20040119], [3206, 20040126], [3257, 20040202], [3265, 20040209], [3282, 20040216], [3282, 20040223], [3279, 20040301], [3286, 20040308], [3286, 20040315], [3286, 20040322], [3286, 20040329], [3277, 20040405], [3286, 20040412], [1489, 20040419], [3379, 20040426], [2613, 20040503], [1187, 20040510], [2361, 20040517], [2955, 20040524], [2535, 20040531], [3433, 20040607], [3456, 20040614], [3492, 20040621], [3492, 20040628], [3498, 20040705], [3516, 20040712], [3587, 20040719], [3592, 20040726], [3592, 20040802], [3645, 20040809], [3647, 20040816], [3661, 20040823], [3705, 20040830], [3705, 20040906], [3785, 20040913], [3831, 20040920], [3913, 20040927], [3957, 20041004], [3986, 20041011], [3987, 20041018], [3968, 20041025], [4011, 20041101], [4071, 20041108], [4124, 20041115], [4145, 20041122], [4147, 20041129], [4160, 20041206], [4160, 20041213], [4160, 20041220], [4160, 20041227], [4160, 20050101], [4160, 20050103], [4160, 20050110], [4160, 20050117], [4160, 20050124], [4198, 20050131], [4198, 20050207], [4211, 20050214], [4286, 20050221], [4286, 20050228], [4313, 20050307], [4313, 20050314], [4333, 20050321], [4333, 20050328], [4362, 20050404], [4371, 20050411], [4379, 20050418], [4379, 20050425], [4379, 20050502], [4470, 20050509], [4489, 20050516], [4522, 20050523], [4522, 20050530], [4682, 20050606], [4705, 20050613], [4727, 20050620], [4727, 20050627], [4792, 20050704], [4816, 20050711], [4847, 20050718], [4859, 20050725], [4926, 20050801], [4982, 20050808], [5020, 20050815], [5090, 20050822], [5100, 20050829], [5100, 20050905], [5187, 20050912], [5173, 20050919], [5175, 20050926], [5215, 20051003], [5249, 20051010], [5237, 20051017], [5257, 20051024], [5331, 20051031], [5362, 20051107], [5357, 20051114], [5391, 20051121], [5401, 20051128], [5452, 20051205], [5452, 20051212], [5452, 20051219], [5452, 20051226], [5452, 20060101], [5452, 20060102], [5452, 20060109], [5452, 20060116], [5452, 20060123], [5441, 20060130], [5425, 20060206], [5441, 20060213], [5478, 20060220], [5528, 20060227], [5548, 20060306], [5548, 20060313], [5559, 20060320], [5559, 20060327], [5626, 20060403], [5626, 20060410], [5644, 20060417], [5658, 20060424], [5656, 20060501], [5654, 20060508], [5683, 20060515], [5721, 20060522], [5798, 20060529], [5798, 20060605], [5862, 20060612], [5897, 20060619], [5944, 20060626], [5944, 20060703], [5983, 20060710], [6026, 20060717], [6065, 20060724], [6133, 20060731], [6151, 20060807], [6226, 20060814], [6289, 20060821], [6284, 20060828], [6284, 20060904], [6304, 20060911], [6347, 20060918], [6376, 20060925], [6436, 20061002], [6520, 20061009], [6629, 20061016], [6730, 20061023], [6808, 20061030], [6816, 20061106], [6807, 20061113], [6893, 20061120], [6896, 20061127], [6931, 20061204], [6953, 20061211], [6953, 20061218], [6953, 20061225], [6953, 20070101], [6926, 20070108], [6926, 20070115], [6926, 20070122], [6925, 20070129], [6925, 20070205], [6930, 20070212], [6942, 20070219], [6988, 20070226], [7017, 20070305], [7017, 20070312], [7058, 20070319], [7058, 20070326], [7139, 20070402], [7175, 20070409], [7197, 20070416], [7197, 20070423], [7197, 20070430], [7233, 20070507], [7317, 20070514], [7341, 20070521], [7365, 20070528], [7365, 20070604], [7448, 20070611], [7448, 20070618], [7473, 20070625], [7473, 20070702], [7495, 20070709], [7478, 20070716], [7470, 20070723], [7528, 20070730], [7522, 20070806], [7527, 20070813], [7503, 20070820], [7504, 20070827], [7504, 20070903], [7602, 20070910], [7643, 20070917], [7686, 20070924], [7697, 20071001], [7707, 20071008], [7687, 20071015], [7638, 20071022], [7711, 20071029], [7677, 20071105], [7664, 20071112], [7666, 20071119], [7674, 20071126], [7650, 20071203], [7659, 20071210], [7659, 20071217], [7682, 20071224], [7682, 20071231], [7682, 20080101], [7682, 20080107], [7711, 20080114], [7711, 20080121], [7691, 20080128], [7716, 20080204], [7743, 20080211], [7742, 20080218], [7731, 20080225], [7761, 20080303], [7790, 20080310], [7790, 20080317], [7832, 20080324], [7832, 20080331], [7873, 20080407], [7889, 20080414], [7917, 20080421], [7917, 20080428], [7929, 20080505], [8002, 20080512], [8022, 20080519], [8090, 20080526], [8090, 20080602], [8030, 20080609], [7970, 20080616], [7966, 20080623], [7966, 20080630], [8089, 20080707], [8113, 20080714], [8235, 20080721], [8280, 20080728], [8325, 20080804], [8372, 20080811], [8387, 20080818], [8417, 20080825], [8417, 20080901], [8527, 20080908], [8639, 20080915], [8690, 20080922], [8731, 20080929], [8762, 20081006], [8794, 20081013], [8836, 20081020], [8898, 20081027], [8956, 20081103], [8996, 20081110], [9003, 20081117], [9019, 20081124], [9050, 20081201], [9076, 20081208], [9077, 20081215], [9070, 20081222], [9070, 20081229], [9070, 20090101], [9064, 20090105], [9064, 20090112], [9064, 20090119], [9064, 20090126], [9087, 20090202], [9087, 20090209], [9059, 20090216], [9063, 20090223], [9063, 20090302], [9053, 20090309], [9053, 20090316], [9057, 20090323], [9057, 20090330], [9066, 20090406], [9121, 20090413], [9110, 20090420], [9111, 20090427], [9094, 20090504], [9143, 20090511], [9140, 20090518], [9153, 20090525], [9153, 20090601], [9203, 20090608], [9239, 20090615], [9255, 20090622], [9255, 20090629], [9310, 20090706], [9376, 20090713], [9474, 20090720], [9589, 20090727], [9611, 20090803], [9598, 20090810], [9642, 20090817], [9682, 20090824], [9682, 20090831], [9682, 20090907], [9808, 20090914], [9856, 20090921], [9918, 20090928], [9929, 20091005], [9925, 20091012], [10003, 20091019], [10025, 20091026], [10061, 20091102], [10116, 20091109], [10137, 20091116], [10204, 20091123], [10238, 20091130], [10221, 20091207], [10272, 20091214], [10272, 20091221], [10318, 20091228], [10318, 20100101], [10318, 20100104], [10320, 20100111], [10329, 20100118], [10329, 20100125], [10373, 20100201], [10372, 20100208], [10389, 20100215], [10404, 20100222], [10430, 20100301], [10442, 20100308], [10442, 20100315], [10412, 20100322], [10412, 20100329], [10481, 20100405], [10515, 20100412], [10543, 20100419], [10580, 20100426], [10590, 20100503], [10576, 20100510], [10593, 20100517], [10634, 20100524], [10634, 20100531], [10613, 20100607], [10630, 20100614], [10634, 20100621], [10634, 20100628], [10685, 20100705], [10726, 20100712], [10756, 20100719], [10817, 20100726], [10835, 20100802], [10937, 20100809], [10999, 20100816], [11026, 20100823], [11125, 20100830], [11125, 20100906], [11256, 20100913], [11290, 20100920], [11339, 20100927], [11460, 20101004], [11566, 20101011], [11594, 20101018], [11617, 20101025], [11687, 20101101], [11735, 20101108], [11814, 20101115], [11845, 20101122], [11877, 20101129], [11888, 20101206], [11907, 20101213], [11913, 20101220], [11904, 20101227], [11904, 20110101], [12060, 20110103], [12067, 20110110], [12094, 20110117], [12094, 20110124], [12143, 20110131], [12181, 20110207], [12204, 20110214], [12201, 20110221], [12254, 20110228], [12267, 20110307], [12267, 20110314], [12303, 20110321], [12303, 20110328], [12343, 20110404], [12398, 20110411], [12434, 20110418], [12422, 20110425], [12438, 20110502], [12482, 20110509], [12467, 20110516], [12522, 20110523], [12522, 20110530], [12659, 20110606], [12682, 20110613], [12686, 20110620], [12686, 20110627], [12867, 20110704], [12895, 20110711], [12927, 20110718], [13006, 20110725], [12999, 20110801], [13081, 20110808], [13129, 20110815], [13140, 20110822], [13174, 20110829], [13174, 20110905], [13299, 20110912], [13342, 20110919], [13382, 20110926], [13372, 20111003], [13382, 20111010], [13411, 20111017], [13443, 20111024], [13465, 20111031], [13443, 20111107], [13482, 20111114], [13518, 20111121], [13517, 20111128], [13542, 20111205], [13536, 20111212], [13565, 20111219], [13603, 20111226], [13603, 20120101], [13610, 20120102], [13628, 20120109], [13618, 20120116], [13618, 20120123], [13667, 20120130], [13666, 20120206], [13674, 20120213], [13719, 20120220], [13788, 20120227], [13791, 20120305], [13791, 20120312], [13818, 20120319], [13818, 20120326], [13881, 20120402], [13902, 20120409], [13938, 20120416], [13964, 20120423], [13983, 20120430], [14016, 20120507], [14015, 20120514], [14034, 20120521], [14087, 20120528], [14087, 20120604], [14072, 20120611], [14138, 20120618], [14172, 20120625], [14172, 20120702], [14180, 20120709], [14223, 20120716], [14250, 20120723], [14264, 20120730], [14286, 20120806], [14331, 20120813], [14361, 20120820], [14389, 20120827], [14389, 20120903], [14389, 20120910], [14402, 20120917], [14438, 20120924], [14472, 20121001], [14480, 20121008], [14513, 20121015], [14525, 20121022], [14547, 20121029], [14585, 20121105], [14621, 20121112], [14624, 20121119], [14612, 20121126], [14610, 20121203], [14639, 20121210], [14633, 20121217], [14649, 20121224], [13949, 20121231], [14648, 20130101], [13966, 20130107], [14667, 20130114], [14667, 20130121], [14667, 20130128], [14652, 20130204], [14651, 20130211], [14649, 20130218], [14554, 20130225], [14695, 20130304], [14727, 20130311], [13048, 20130318], [6790, 20130401], [14591, 20130408], [14449, 20130415], [14451, 20130422], [14462, 20130429], [14487, 20130506], [14516, 20130513], [14531, 20130520], [14545, 20130527], [14545, 20130603], [14553, 20130610], [14569, 20130617], [14650, 20130624], [14651, 20130708], [14689, 20130715], [14751, 20130722], [14766, 20130729], [14679, 20130805], [14599, 20130812], [14740, 20130819], [14714, 20130826], [14796, 20130902], [14820, 20130909], [14866, 20130916], [14878, 20130923], [14885, 20130930], [15028, 20131007], [15072, 20131014], [15025, 20131021], [15071, 20131028], [15098, 20131104], [15101, 20131111], [15151, 20131118], [15337, 20131125], [15334, 20131202], [15512, 20131209], [15540, 20131216], [15701, 20131223], [15708, 20131230], [15703, 20140106], [15637, 20140113], [8585, 20140120], [15646, 20140127], [15632, 20140203], [15637, 20140210], [8565, 20140217], [15659, 20140224], [15557, 20150302], [15578, 20150406], [15545, 20150413], [15568, 20150420], [15475, 20150427], [15710, 20150511], [15623, 20150518], [15741, 20150525], [15741, 20150608], [15810, 20150622], [15761, 20150803], [15776, 20150810], [15908, 20150824], [16184, 20150831], [15832, 20150914], [15800, 20150921], [16178, 20151005], [16191, 20151012], [16138, 20151019], [16293, 20151102], [4812, 20160111], [16518, 20160118], [16629, 20160201], [16586, 20160208], [16529, 20160215], [16454, 20160222], [16515, 20160229], [16517, 20160307], [16446, 20160411], [16454, 20160418], [16489, 20160425], [16388, 20160502], [16374, 20160509], [16351, 20160523], [16361, 20160606], [16314, 20160620], [16293, 20160627], [16325, 20160815], [16316, 20160919], [16305, 20160926], [16233, 20161010], [16349, 20161031], [16364, 20161107], [16249, 20161114], [16345, 20161121], [16294, 20161128], [16336, 20161205], [16387, 20161212], [16372, 20170102], [16406, 20170109], [16379, 20170116], [16305, 20170213], [16207, 20170220], [16111, 20170306], [16230, 20170320], [16270, 20170417], [16226, 20170424], [16303, 20170501], [16124, 20170508], [16204, 20170515], [16290, 20170522], [16649, 20170529], [16157, 20170612], [16189, 20170619], [16184, 20170626], [16597, 20170703], [15983, 20170717], [16138, 20170724], [16145, 20170731], [16147, 20170807], [16268, 20170814], [16279, 20170821], [16301, 20170828], [16161, 20170911]], "trigger_words": ["Total Number", "Ranking Date"], "Prediction": "ranking_date, SUM(tours) \nFROM rankings \nGROUP BY ranking_date;"}
{"db_id": "wta_1", "query": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "YEAR", "FROM", "matches", "GROUP", "BY", "YEAR"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "year", "from", "matches", "group", "by", "year"], "question": "Find the number of matches happened in each year.", "question_toks": ["Find", "the", "number", "of", "matches", "happened", "in", "each", "year", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [[0, 38, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "481", "answer_text": [[12, 2013], [158, 2016], [108, 2017]], "trigger_words": ["Number", "Year"], "Prediction": "year, COUNT(*) FROM matches GROUP BY year;"}
{"db_id": "wta_1", "query": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "YEAR", "FROM", "matches", "GROUP", "BY", "YEAR"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "year", "from", "matches", "group", "by", "year"], "question": "How many matches were played in each year?", "question_toks": ["How", "many", "matches", "were", "played", "in", "each", "year", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [[0, 38, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "482", "answer_text": [[12, 2013], [158, 2016], [108, 2017]], "trigger_words": ["Number", "Year"], "Prediction": "year, COUNT(*) FROM matches GROUP BY year;"}
{"db_id": "wta_1", "query": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3", "query_toks": ["SELECT", "DISTINCT", "winner_name", ",", "winner_rank", "FROM", "matches", "ORDER", "BY", "winner_age", "LIMIT", "3"], "query_toks_no_value": ["select", "distinct", "winner_name", ",", "winner_rank", "from", "matches", "order", "by", "winner_age", "limit", "value"], "question": "Find the name and rank of the 3 youngest winners across all matches.", "question_toks": ["Find", "the", "name", "and", "rank", "of", "the", "3", "youngest", "winners", "across", "all", "matches", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 34, false], null]], [0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 28, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}, "id": "483", "answer_text": [["Madison Keys", 17], ["Madison Keys", 24], ["Madison Keys", 16]], "trigger_words": ["Winner Name", "Winner Rank"], "Prediction": "winner_name, winner_rank \n FROM matches \n JOIN players ON matches.winner_id=players.player_id \n ORDER BY winner_age ASC \n LIMIT 3;"}
{"db_id": "wta_1", "query": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3", "query_toks": ["SELECT", "DISTINCT", "winner_name", ",", "winner_rank", "FROM", "matches", "ORDER", "BY", "winner_age", "LIMIT", "3"], "query_toks_no_value": ["select", "distinct", "winner_name", ",", "winner_rank", "from", "matches", "order", "by", "winner_age", "limit", "value"], "question": "What are the names and ranks of the three youngest winners across all matches?", "question_toks": ["What", "are", "the", "names", "and", "ranks", "of", "the", "three", "youngest", "winners", "across", "all", "matches", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 34, false], null]], [0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 28, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}, "id": "484", "answer_text": [["Madison Keys", 17], ["Madison Keys", 24], ["Madison Keys", 16]], "trigger_words": ["Winner Name", "Winner Rank"], "Prediction": "winner_name, winner_rank \n FROM matches \n JOIN players ON matches.winner_id=players.player_id \n ORDER BY winner_age ASC \n LIMIT 3;"}
{"db_id": "wta_1", "query": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'", "query_toks": ["SELECT", "count", "(", "DISTINCT", "winner_name", ")", "FROM", "matches", "WHERE", "tourney_name", "=", "'WTA", "Championships", "'", "AND", "winner_hand", "=", "'L", "'"], "query_toks_no_value": ["select", "count", "(", "distinct", "winner_name", ")", "from", "matches", "where", "tourney_name", "=", "value", "and", "winner_hand", "=", "value"], "question": "How many different winners both participated in the WTA Championships and were left handed?", "question_toks": ["How", "many", "different", "winners", "both", "participated", "in", "the", "WTA", "Championships", "and", "were", "left", "handed", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 34, true], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"WTA Championships\"", null], "and", [false, 2, [0, [0, 30, false], null], "\"L\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "485", "answer_text": [[2]], "trigger_words": ["Number Of Winner Name"], "Prediction": "COUNT(DISTINCT winner_id) FROM matches \nWHERE tourney_name = 'WTA Championships' AND winner_hand = 'L';"}
{"db_id": "wta_1", "query": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'", "query_toks": ["SELECT", "count", "(", "DISTINCT", "winner_name", ")", "FROM", "matches", "WHERE", "tourney_name", "=", "'WTA", "Championships", "'", "AND", "winner_hand", "=", "'L", "'"], "query_toks_no_value": ["select", "count", "(", "distinct", "winner_name", ")", "from", "matches", "where", "tourney_name", "=", "value", "and", "winner_hand", "=", "value"], "question": "Find the number of left handed winners who participated in the WTA Championships.", "question_toks": ["Find", "the", "number", "of", "left", "handed", "winners", "who", "participated", "in", "the", "WTA", "Championships", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 34, true], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"WTA Championships\"", null], "and", [false, 2, [0, [0, 30, false], null], "\"L\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "486", "answer_text": [[2]], "trigger_words": ["Number Of Winner Name"], "Prediction": "COUNT(*) FROM matches \nJOIN players ON matches.winner_id=players.player_id \nWHERE winner_hand='L' AND tourney_name='WTA Championships';"}
{"db_id": "wta_1", "query": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1", "query_toks": ["SELECT", "T1.first_name", ",", "T1.country_code", ",", "T1.birth_date", "FROM", "players", "AS", "T1", "JOIN", "matches", "AS", "T2", "ON", "T1.player_id", "=", "T2.winner_id", "ORDER", "BY", "T2.winner_rank_points", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "country_code", ",", "t1", ".", "birth_date", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "winner_id", "order", "by", "t2", ".", "winner_rank_points", "desc", "limit", "value"], "question": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.", "question_toks": ["Find", "the", "first", "name", ",", "country", "code", "and", "birth", "date", "of", "the", "winner", "who", "has", "the", "highest", "rank", "points", "in", "all", "matches", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 36, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "487", "answer_text": [["Serena", "USA", 19810926]], "trigger_words": ["First Name", "Country Code", "Birth Date"], "Prediction": "players.first_name, players.country_code, players.birth_date\n FROM matches\n JOIN players ON matches.winner_id = players.player_id\n JOIN rankings ON players.player_id = rankings.player_id\n WHERE rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings)"}
{"db_id": "wta_1", "query": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1", "query_toks": ["SELECT", "T1.first_name", ",", "T1.country_code", ",", "T1.birth_date", "FROM", "players", "AS", "T1", "JOIN", "matches", "AS", "T2", "ON", "T1.player_id", "=", "T2.winner_id", "ORDER", "BY", "T2.winner_rank_points", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "country_code", ",", "t1", ".", "birth_date", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "winner_id", "order", "by", "t2", ".", "winner_rank_points", "desc", "limit", "value"], "question": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?", "question_toks": ["What", "is", "the", "first", "name", ",", "country", "code", ",", "and", "birth", "date", "of", "the", "player", "with", "the", "most", "winner", "rank", "points", "across", "all", "matches", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 36, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "488", "answer_text": [["Serena", "USA", 19810926]], "trigger_words": ["First Name", "Country Code", "Birth Date"], "Prediction": "players.first_name, players.country_code, players.birth_date\n FROM players\n JOIN matches ON matches.winner_id = players.player_id\n JOIN rankings ON rankings.player_id = players.player_id\n WHERE rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings)"}
{"db_id": "wta_1", "query": "SELECT count(*) ,  hand FROM players GROUP BY hand", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "hand", "FROM", "players", "GROUP", "BY", "hand"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "hand", "from", "players", "group", "by", "hand"], "question": "Find the number of players for each hand type.", "question_toks": ["Find", "the", "number", "of", "players", "for", "each", "hand", "type", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "489", "answer_text": [[954, ""], [487, "L"], [5028, "R"], [14193, "U"]], "trigger_words": ["Number", "Hand"], "Prediction": "hand, COUNT(*) FROM players GROUP BY hand;"}
{"db_id": "wta_1", "query": "SELECT count(*) ,  hand FROM players GROUP BY hand", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "hand", "FROM", "players", "GROUP", "BY", "hand"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "hand", "from", "players", "group", "by", "hand"], "question": "How many players are there for each hand type?", "question_toks": ["How", "many", "players", "are", "there", "for", "each", "hand", "type", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "490", "answer_text": [[954, ""], [487, "L"], [5028, "R"], [14193, "U"]], "trigger_words": ["Number", "Hand"], "Prediction": "hand, COUNT(*) FROM players GROUP BY hand;"}
{"db_id": "battle_death", "query": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "ship", "WHERE", "disposition_of_ship", "=", "'Captured", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "ship", "where", "disposition_of_ship", "=", "value"], "question": "How many ships ended up being 'Captured'?", "question_toks": ["How", "many", "ships", "ended", "up", "being", "'Captured", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Captured\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "491", "answer_text": [[4]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';"}
{"db_id": "battle_death", "query": "SELECT name ,  tonnage FROM ship ORDER BY name DESC", "query_toks": ["SELECT", "name", ",", "tonnage", "FROM", "ship", "ORDER", "BY", "name", "DESC"], "query_toks_no_value": ["select", "name", ",", "tonnage", "from", "ship", "order", "by", "name", "desc"], "question": "List the name and tonnage ordered by in descending alphaetical order for the names.", "question_toks": ["List", "the", "name", "and", "tonnage", "ordered", "by", "in", "descending", "alphaetical", "order", "for", "the", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "492", "answer_text": [["Three Brothers", "t"], ["Mary", "t"], ["Lettice", "t"], ["HMS Avon", "391"], ["HMS Atalanta", "225"], ["Bon Accord", "t"], ["Bacchus", "t"]], "trigger_words": ["Name", "Tonnage"], "Prediction": "name, tonnage FROM ship ORDER BY name DESC;"}
{"db_id": "battle_death", "query": "SELECT name ,  date FROM battle", "query_toks": ["SELECT", "name", ",", "date", "FROM", "battle"], "query_toks_no_value": ["select", "name", ",", "date", "from", "battle"], "question": "List the name, date and result of each battle.", "question_toks": ["List", "the", "name", ",", "date", "and", "result", "of", "each", "battle", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "493", "answer_text": [["Battle of Adrianople", "14 April 1205"], ["Battle of Serres", "June 1205"], ["Battle of Rusion", "31 January 1206"], ["Battle of Rodosto", "February 1206"], ["Battle of Messinopolis", "4 September 1207"], ["Battle of Boruy", "June 1205"], ["Battle of Philippopolis", "31 June 1208"], ["Siege of Constantinople", "1235"]], "trigger_words": ["Name", "Date"], "Prediction": "name, date, result FROM battle;"}
{"db_id": "battle_death", "query": "SELECT max(killed) ,  min(killed) FROM death", "query_toks": ["SELECT", "max", "(", "killed", ")", ",", "min", "(", "killed", ")", "FROM", "death"], "query_toks_no_value": ["select", "max", "(", "killed", ")", ",", "min", "(", "killed", ")", "from", "death"], "question": "What is maximum and minimum death toll caused each time?", "question_toks": ["What", "is", "maximum", "and", "minimum", "death", "toll", "caused", "each", "time", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 17, false], null]], [2, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "494", "answer_text": [[29, 0]], "trigger_words": ["Maximal Number", "Minimal Number"], "Prediction": "MAX(killed), MIN(killed) FROM death;"}
{"db_id": "battle_death", "query": "SELECT avg(injured) FROM death", "query_toks": ["SELECT", "avg", "(", "injured", ")", "FROM", "death"], "query_toks_no_value": ["select", "avg", "(", "injured", ")", "from", "death"], "question": "What is the average number of injuries caused each time?", "question_toks": ["What", "is", "the", "average", "number", "of", "injuries", "caused", "each", "time", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "495", "answer_text": [[1.0769230769230769]], "trigger_words": ["Average Number"], "Prediction": "AVG(injured) FROM death;"}
{"db_id": "battle_death", "query": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'", "query_toks": ["SELECT", "T1.killed", ",", "T1.injured", "FROM", "death", "AS", "T1", "JOIN", "ship", "AS", "t2", "ON", "T1.caused_by_ship_id", "=", "T2.id", "WHERE", "T2.tonnage", "=", "'t", "'"], "query_toks_no_value": ["select", "t1", ".", "killed", ",", "t1", ".", "injured", "from", "death", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "caused_by_ship_id", "=", "t2", ".", "id", "where", "t2", ".", "tonnage", "=", "value"], "question": "What are the death and injury situations caused by the ship with tonnage 't'?", "question_toks": ["What", "are", "the", "death", "and", "injury", "situations", "caused", "by", "the", "ship", "with", "tonnage", "'t", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"t\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "496", "answer_text": [[8, 0], [3, 0], [25, 0], [2, 0], [0, 0], [4, 5], [0, 0], [29, 0], [0, 0], [0, 0], [14, 0]], "trigger_words": ["Killed", "Injured"], "Prediction": "death.killed, death.injured, death.note \nFROM death \nJOIN ship ON death.caused_by_ship_id = ship.id \nWHERE ship.tonnage = 't'"}
{"db_id": "battle_death", "query": "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'", "query_toks": ["SELECT", "name", ",", "RESULT", "FROM", "battle", "WHERE", "bulgarian_commander", "!", "=", "'Boril", "'"], "query_toks_no_value": ["select", "name", ",", "result", "from", "battle", "where", "bulgarian_commander", "!", "=", "value"], "question": "What are the name and results of the battles when the bulgarian commander is not 'Boril'", "question_toks": ["What", "are", "the", "name", "and", "results", "of", "the", "battles", "when", "the", "bulgarian", "commander", "is", "not", "'Boril", "'"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"Boril\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "497", "answer_text": [["Battle of Adrianople", "Bulgarian victory"], ["Battle of Serres", "Bulgarian victory"], ["Battle of Rusion", "Bulgarian victory"], ["Battle of Rodosto", "Bulgarian victory"], ["Battle of Messinopolis", "Bulgarian victory"], ["Siege of Constantinople", "Two Year Truce"]], "trigger_words": ["Name", "Result"], "Prediction": "name, result FROM battle WHERE bulgarian_commander != 'Boril';"}
{"db_id": "battle_death", "query": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'", "query_toks": ["SELECT", "DISTINCT", "T1.id", ",", "T1.name", "FROM", "battle", "AS", "T1", "JOIN", "ship", "AS", "T2", "ON", "T1.id", "=", "T2.lost_in_battle", "WHERE", "T2.ship_type", "=", "'Brig", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "id", ",", "t1", ".", "name", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "lost_in_battle", "where", "t2", ".", "ship_type", "=", "value"], "question": "What are the different ids and names of the battles that lost any 'Brig' type shipes?", "question_toks": ["What", "are", "the", "different", "ids", "and", "names", "of", "the", "battles", "that", "lost", "any", "'Brig", "'", "type", "shipes", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [true, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Brig\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "498", "answer_text": [[8, "Siege of Constantinople"], [7, "Battle of Philippopolis"], [6, "Battle of Boruy"], [5, "Battle of Messinopolis"], [4, "Battle of Rodosto"]], "trigger_words": ["Id", "Name"], "Prediction": "battle.id, battle.name \n FROM battle \n JOIN ship ON ship.lost_in_battle = battle.id \n WHERE ship.ship_type = 'Brig';"}
{"db_id": "battle_death", "query": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10", "query_toks": ["SELECT", "T1.id", ",", "T1.name", "FROM", "battle", "AS", "T1", "JOIN", "ship", "AS", "T2", "ON", "T1.id", "=", "T2.lost_in_battle", "JOIN", "death", "AS", "T3", "ON", "T2.id", "=", "T3.caused_by_ship_id", "GROUP", "BY", "T1.id", "HAVING", "sum", "(", "T3.killed", ")", ">", "10"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "lost_in_battle", "join", "death", "as", "t3", "on", "t2", ".", "id", "=", "t3", ".", "caused_by_ship_id", "group", "by", "t1", ".", "id", "having", "sum", "(", "t3", ".", "killed", ")", ">", "value"], "question": "What are the ids and names of the battles that led to more than 10 people killed in total.", "question_toks": ["What", "are", "the", "ids", "and", "names", "of", "the", "battles", "that", "led", "to", "more", "than", "10", "people", "killed", "in", "total", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [4, 17, false], null], 10.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "499", "answer_text": [[5, "Battle of Messinopolis"], [6, "Battle of Boruy"], [8, "Siege of Constantinople"]], "trigger_words": ["Id", "Name"], "Prediction": "battle.id, battle.name \n FROM battle \n JOIN death ON battle.id = death.caused_by_ship_id \n GROUP BY battle.id \n HAVING SUM(death.killed) > 10;"}
{"db_id": "battle_death", "query": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.id", ",", "T2.name", "FROM", "death", "AS", "T1", "JOIN", "ship", "AS", "t2", "ON", "T1.caused_by_ship_id", "=", "T2.id", "GROUP", "BY", "T2.id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "id", ",", "t2", ".", "name", "from", "death", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "caused_by_ship_id", "=", "t2", ".", "id", "group", "by", "t2", ".", "id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the ship id and name that caused most total injuries?", "question_toks": ["What", "is", "the", "ship", "id", "and", "name", "that", "caused", "most", "total", "injuries", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "500", "answer_text": [[5, "Three Brothers"]], "trigger_words": ["Id", "Name"], "Prediction": "ship.id, ship.name\n FROM ship\n JOIN death ON death.caused_by_ship_id = ship.id\n GROUP BY ship.id\n ORDER BY SUM(death.injured) DESC\n LIMIT 1;"}
{"db_id": "battle_death", "query": "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'", "query_toks": ["SELECT", "name", "FROM", "battle", "WHERE", "bulgarian_commander", "=", "'Kaloyan", "'", "AND", "latin_commander", "=", "'Baldwin", "I", "'"], "query_toks_no_value": ["select", "name", "from", "battle", "where", "bulgarian_commander", "=", "value", "and", "latin_commander", "=", "value"], "question": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?", "question_toks": ["What", "are", "the", "distinct", "battle", "names", "which", "are", "between", "bulgarian", "commander", "'Kaloyan", "'", "and", "latin", "commander", "'Baldwin", "I", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Kaloyan\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Baldwin I\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "501", "answer_text": [["Battle of Adrianople"]], "trigger_words": ["Name"], "Prediction": "DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I';"}
{"db_id": "battle_death", "query": "SELECT count(DISTINCT RESULT) FROM battle", "query_toks": ["SELECT", "count", "(", "DISTINCT", "RESULT", ")", "FROM", "battle"], "query_toks_no_value": ["select", "count", "(", "distinct", "result", ")", "from", "battle"], "question": "How many different results are there for the battles?", "question_toks": ["How", "many", "different", "results", "are", "there", "for", "the", "battles", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 6, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "502", "answer_text": [[3]], "trigger_words": ["Number Of Result"], "Prediction": "COUNT(DISTINCT result) FROM battle;"}
{"db_id": "battle_death", "query": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "battle", "WHERE", "id", "NOT", "IN", "(", "SELECT", "lost_in_battle", "FROM", "ship", "WHERE", "tonnage", "=", "'225", "'", ")", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "battle", "where", "id", "not", "in", "(", "select", "lost_in_battle", "from", "ship", "where", "tonnage", "=", "value", ")"], "question": "How many battles did not lose any ship with tonnage '225'?", "question_toks": ["How", "many", "battles", "did", "not", "lose", "any", "ship", "with", "tonnage", "'225", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"225\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "503", "answer_text": [[7]], "trigger_words": ["Number"], "Prediction": "COUNT(DISTINCT battle.id) \nFROM battle \nLEFT JOIN ship ON ship.lost_in_battle = battle.id AND ship.tonnage = 225 \nWHERE ship.id IS NULL;"}
{"db_id": "battle_death", "query": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'", "query_toks": ["SELECT", "T1.name", ",", "T1.date", "FROM", "battle", "AS", "T1", "JOIN", "ship", "AS", "T2", "ON", "T1.id", "=", "T2.lost_in_battle", "WHERE", "T2.name", "=", "'Lettice", "'", "INTERSECT", "SELECT", "T1.name", ",", "T1.date", "FROM", "battle", "AS", "T1", "JOIN", "ship", "AS", "T2", "ON", "T1.id", "=", "T2.lost_in_battle", "WHERE", "T2.name", "=", "'HMS", "Atalanta", "'"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "date", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "lost_in_battle", "where", "t2", ".", "name", "=", "value", "intersect", "select", "t1", ".", "name", ",", "t1", ".", "date", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "lost_in_battle", "where", "t2", ".", "name", "=", "value"], "question": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'", "question_toks": ["List", "the", "name", "and", "date", "the", "battle", "that", "has", "lost", "the", "ship", "named", "'Lettice", "'", "and", "the", "ship", "named", "'HMS", "Atalanta", "'"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Lettice\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"HMS Atalanta\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "504", "answer_text": [["Siege of Constantinople", "1235"]], "trigger_words": ["Name", "Date"], "Prediction": "battle.name, battle.date\n FROM battle\n JOIN ship ON ship.lost_in_battle = battle.id\n WHERE ship.name = 'Lettice' OR ship.name = 'HMS Atalanta';"}
{"db_id": "battle_death", "query": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'", "query_toks": ["SELECT", "name", ",", "RESULT", ",", "bulgarian_commander", "FROM", "battle", "EXCEPT", "SELECT", "T1.name", ",", "T1.result", ",", "T1.bulgarian_commander", "FROM", "battle", "AS", "T1", "JOIN", "ship", "AS", "T2", "ON", "T1.id", "=", "T2.lost_in_battle", "WHERE", "T2.location", "=", "'English", "Channel", "'"], "query_toks_no_value": ["select", "name", ",", "result", ",", "bulgarian_commander", "from", "battle", "except", "select", "t1", ".", "name", ",", "t1", ".", "result", ",", "t1", ".", "bulgarian_commander", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "lost_in_battle", "where", "t2", ".", "location", "=", "value"], "question": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.", "question_toks": ["Show", "names", ",", "results", "and", "bulgarian", "commanders", "of", "the", "battles", "with", "no", "ships", "lost", "in", "the", "'English", "Channel", "'", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"English Channel\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "505", "answer_text": [["Battle of Adrianople", "Bulgarian victory", "Kaloyan"], ["Battle of Rusion", "Bulgarian victory", "Kaloyan"], ["Battle of Serres", "Bulgarian victory", "Kaloyan"]], "trigger_words": ["Name", "Result", "Bulgarian Commander"], "Prediction": "battle.name, battle.result, battle.bulgarian_commander \n FROM battle \n LEFT JOIN ship ON ship.lost_in_battle = battle.id \n WHERE ship.location = 'English Channel' OR ship.location IS NULL;"}
{"db_id": "battle_death", "query": "SELECT note FROM death WHERE note LIKE '%East%'", "query_toks": ["SELECT", "note", "FROM", "death", "WHERE", "note", "LIKE", "'", "%", "East", "%", "'"], "query_toks_no_value": ["select", "note", "from", "death", "where", "note", "like", "value"], "question": "What are the notes of the death events which has substring 'East'?", "question_toks": ["What", "are", "the", "notes", "of", "the", "death", "events", "which", "has", "substring", "'East", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 9, [0, [0, 16, false], null], "\"%East%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "506", "answer_text": [["East Champaran, Bihar"]], "trigger_words": ["Note"], "Prediction": "death.note FROM death \nINNER JOIN ship ON death.caused_by_ship_id=ship.id \nWHERE death.note LIKE '%East%';"}
{"db_id": "student_transcripts_tracking", "query": "SELECT line_1 ,  line_2 FROM addresses", "query_toks": ["SELECT", "line_1", ",", "line_2", "FROM", "addresses"], "query_toks_no_value": ["select", "line_1", ",", "line_2", "from", "addresses"], "question": "what are all the addresses including line 1 and line 2?", "question_toks": ["what", "are", "all", "the", "addresses", "including", "line", "1", "and", "line", "2", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "507", "answer_text": [["2294 Grant Square Apt. 235", "Apt. 370"], ["3999 Aufderhar Ways Suite 593", "Apt. 388"], ["67942 Carlotta Ferry Apt. 686", "Apt. 583"], ["0144 Lamar Plaza Apt. 346", "Suite 703"], ["858 Peggie Bypass Suite 212", "Apt. 335"], ["16998 Mraz Lodge", "Apt. 689"], ["193 Marlin Brook", "Apt. 406"], ["202 Hessel Views Apt. 468", "Apt. 305"], ["0643 Muller Vista", "Suite 383"], ["7081 Eda Center", "Suite 830"], ["9283 Schulist Falls Apt. 037", "Suite 239"], ["979 Haag Shores Suite 656", "Apt. 468"], ["492 Wilkinson Route", "Suite 865"], ["186 Evan Motorway Apt. 409", "Suite 079"], ["74046 Metz Walk Apt. 113", "Suite 674"]], "trigger_words": ["Address Of Line 1", "Address Of Line 2"], "Prediction": "line_1, line_2 FROM Addresses;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT line_1 ,  line_2 FROM addresses", "query_toks": ["SELECT", "line_1", ",", "line_2", "FROM", "addresses"], "query_toks_no_value": ["select", "line_1", ",", "line_2", "from", "addresses"], "question": "What is the first and second line for all addresses?", "question_toks": ["What", "is", "the", "first", "and", "second", "line", "for", "all", "addresses", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "508", "answer_text": [["2294 Grant Square Apt. 235", "Apt. 370"], ["3999 Aufderhar Ways Suite 593", "Apt. 388"], ["67942 Carlotta Ferry Apt. 686", "Apt. 583"], ["0144 Lamar Plaza Apt. 346", "Suite 703"], ["858 Peggie Bypass Suite 212", "Apt. 335"], ["16998 Mraz Lodge", "Apt. 689"], ["193 Marlin Brook", "Apt. 406"], ["202 Hessel Views Apt. 468", "Apt. 305"], ["0643 Muller Vista", "Suite 383"], ["7081 Eda Center", "Suite 830"], ["9283 Schulist Falls Apt. 037", "Suite 239"], ["979 Haag Shores Suite 656", "Apt. 468"], ["492 Wilkinson Route", "Suite 865"], ["186 Evan Motorway Apt. 409", "Suite 079"], ["74046 Metz Walk Apt. 113", "Suite 674"]], "trigger_words": ["Address Of Line 1", "Address Of Line 2"], "Prediction": "line_1, line_2 FROM Addresses;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT count(*) FROM Courses", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Courses"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "courses"], "question": "How many courses in total are listed?", "question_toks": ["How", "many", "courses", "in", "total", "are", "listed", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "509", "answer_text": [[15]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Courses;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT count(*) FROM Courses", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Courses"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "courses"], "question": "How many courses are there?", "question_toks": ["How", "many", "courses", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "510", "answer_text": [[15]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Courses;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT course_description FROM Courses WHERE course_name  =  'math'", "query_toks": ["SELECT", "course_description", "FROM", "Courses", "WHERE", "course_name", "=", "'math", "'"], "query_toks_no_value": ["select", "course_description", "from", "courses", "where", "course_name", "=", "value"], "question": "How is the math course described?", "question_toks": ["How", "is", "the", "math", "course", "described", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"math\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "511", "answer_text": [["q"]], "trigger_words": ["Course Description"], "Prediction": "course_description FROM Courses WHERE course_name='Math';"}
{"db_id": "student_transcripts_tracking", "query": "SELECT course_description FROM Courses WHERE course_name  =  'math'", "query_toks": ["SELECT", "course_description", "FROM", "Courses", "WHERE", "course_name", "=", "'math", "'"], "query_toks_no_value": ["select", "course_description", "from", "courses", "where", "course_name", "=", "value"], "question": "What are the descriptions for all the math courses?", "question_toks": ["What", "are", "the", "descriptions", "for", "all", "the", "math", "courses", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"math\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "512", "answer_text": [["q"]], "trigger_words": ["Course Description"], "Prediction": "course_description FROM Courses WHERE course_name LIKE '%math%';"}
{"db_id": "student_transcripts_tracking", "query": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'", "query_toks": ["SELECT", "zip_postcode", "FROM", "Addresses", "WHERE", "city", "=", "'Port", "Chelsea", "'"], "query_toks_no_value": ["select", "zip_postcode", "from", "addresses", "where", "city", "=", "value"], "question": "What is the zip code of the address in the city Port Chelsea?", "question_toks": ["What", "is", "the", "zip", "code", "of", "the", "address", "in", "the", "city", "Port", "Chelsea", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Port Chelsea\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "513", "answer_text": [["148"]], "trigger_words": ["Zip Postcode"], "Prediction": "zip_postcode FROM Addresses WHERE city='Port Chelsea';"}
{"db_id": "student_transcripts_tracking", "query": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'", "query_toks": ["SELECT", "zip_postcode", "FROM", "Addresses", "WHERE", "city", "=", "'Port", "Chelsea", "'"], "query_toks_no_value": ["select", "zip_postcode", "from", "addresses", "where", "city", "=", "value"], "question": "What is the zip code for Port Chelsea?", "question_toks": ["What", "is", "the", "zip", "code", "for", "Port", "Chelsea", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Port Chelsea\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "514", "answer_text": [["148"]], "trigger_words": ["Zip Postcode"], "Prediction": "zip_postcode FROM Addresses WHERE city = 'Port Chelsea';"}
{"db_id": "student_transcripts_tracking", "query": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.department_name", ",", "T1.department_id", "FROM", "Degree_Programs", "AS", "T1", "JOIN", "Departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "GROUP", "BY", "T1.department_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "department_name", ",", "t1", ".", "department_id", "from", "degree_programs", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "group", "by", "t1", ".", "department_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which department offers the most number of degrees? List department name and id.", "question_toks": ["Which", "department", "offers", "the", "most", "number", "of", "degrees", "?", "List", "department", "name", "and", "id", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "515", "answer_text": [["statistics", 8]], "trigger_words": ["Department Name", "Department Id"], "Prediction": "Departments.department_id, Departments.department_name\n FROM Departments\n JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id\n GROUP BY Departments.department_id\n ORDER BY COUNT(Degree_Programs.degree_program_id) DESC\n LIMIT 1;"}
{"db_id": "student_transcripts_tracking", "query": "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1", "query_toks": ["select", "t2.department_name", ",", "t1.department_id", "from", "degree_programs", "as", "t1", "join", "departments", "as", "t2", "on", "t1.department_id", "=", "t2.department_id", "group", "by", "t1.department_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1"], "query_toks_no_value": ["select", "t2", ".", "department_name", ",", "t1", ".", "department_id", "from", "degree_programs", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "group", "by", "t1", ".", "department_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name and id of the department with the most number of degrees ?", "question_toks": ["What", "is", "the", "name", "and", "id", "of", "the", "department", "with", "the", "most", "number", "of", "degrees", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "516", "answer_text": [["statistics", 8]], "trigger_words": ["Department Name", "Department Id"], "Prediction": "Departments.department_id, Departments.department_name \n FROM Departments \n INNER JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id \n GROUP BY Departments.department_id \n ORDER BY COUNT(Degree_Programs.degree_program_id) DESC \n LIMIT 1;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT count(DISTINCT department_id) FROM Degree_Programs", "query_toks": ["SELECT", "count", "(", "DISTINCT", "department_id", ")", "FROM", "Degree_Programs"], "query_toks_no_value": ["select", "count", "(", "distinct", "department_id", ")", "from", "degree_programs"], "question": "How many departments offer any degree?", "question_toks": ["How", "many", "departments", "offer", "any", "degree", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 19, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "517", "answer_text": [[10]], "trigger_words": ["Number Of Department Id"], "Prediction": "COUNT(DISTINCT Departments.department_id) FROM Departments INNER JOIN Degree_Programs ON Departments.department_id=Degree_Programs.department_id;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT count(DISTINCT department_id) FROM Degree_Programs", "query_toks": ["SELECT", "count", "(", "DISTINCT", "department_id", ")", "FROM", "Degree_Programs"], "query_toks_no_value": ["select", "count", "(", "distinct", "department_id", ")", "from", "degree_programs"], "question": "How many different departments offer degrees?", "question_toks": ["How", "many", "different", "departments", "offer", "degrees", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 19, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "518", "answer_text": [[10]], "trigger_words": ["Number Of Department Id"], "Prediction": "COUNT(DISTINCT department_id) FROM Degree_Programs;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs", "query_toks": ["SELECT", "count", "(", "DISTINCT", "degree_summary_name", ")", "FROM", "Degree_Programs"], "query_toks_no_value": ["select", "count", "(", "distinct", "degree_summary_name", ")", "from", "degree_programs"], "question": "How many different degree names are offered?", "question_toks": ["How", "many", "different", "degree", "names", "are", "offered", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 20, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "519", "answer_text": [[3]], "trigger_words": ["Number Of Degree Summary Name"], "Prediction": "COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs", "query_toks": ["SELECT", "count", "(", "DISTINCT", "degree_summary_name", ")", "FROM", "Degree_Programs"], "query_toks_no_value": ["select", "count", "(", "distinct", "degree_summary_name", ")", "from", "degree_programs"], "question": "How many different degrees are offered?", "question_toks": ["How", "many", "different", "degrees", "are", "offered", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 20, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "520", "answer_text": [[3]], "trigger_words": ["Number Of Degree Summary Name"], "Prediction": "COUNT(DISTINCT degree_program_id) FROM Degree_Programs;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Departments", "AS", "T1", "JOIN", "Degree_Programs", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "WHERE", "T1.department_name", "=", "'engineer", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "departments", "as", "t1", "join", "degree_programs", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "where", "t1", ".", "department_name", "=", "value"], "question": "How many degrees does the engineering department offer?", "question_toks": ["How", "many", "degrees", "does", "the", "engineering", "department", "offer", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 19, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"engineer\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "521", "answer_text": [[0]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering');"}
{"db_id": "student_transcripts_tracking", "query": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Departments", "AS", "T1", "JOIN", "Degree_Programs", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "WHERE", "T1.department_name", "=", "'engineer", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "departments", "as", "t1", "join", "degree_programs", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "where", "t1", ".", "department_name", "=", "value"], "question": "How many degrees does the engineering department have?", "question_toks": ["How", "many", "degrees", "does", "the", "engineering", "department", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 19, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"engineer\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "522", "answer_text": [[0]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering');"}
{"db_id": "student_transcripts_tracking", "query": "SELECT section_name ,  section_description FROM Sections", "query_toks": ["SELECT", "section_name", ",", "section_description", "FROM", "Sections"], "query_toks_no_value": ["select", "section_name", ",", "section_description", "from", "sections"], "question": "What are the names and descriptions of all the sections?", "question_toks": ["What", "are", "the", "names", "and", "descriptions", "of", "all", "the", "sections", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "523", "answer_text": [["a", "non"], ["b", "voluptatem"], ["c", "qui"], ["d", "voluptas"], ["e", "ex"], ["f", "doloremque"], ["g", "provident"], ["h", "et"], ["j", "quis"], ["k", "nesciunt"], ["l", "ad"], ["o", "et"], ["p", "facilis"], ["u", "reprehenderit"], ["y", "qui"]], "trigger_words": ["Section Name", "Section Description"], "Prediction": "section_name, section_description FROM Sections;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT section_name ,  section_description FROM Sections", "query_toks": ["SELECT", "section_name", ",", "section_description", "FROM", "Sections"], "query_toks_no_value": ["select", "section_name", ",", "section_description", "from", "sections"], "question": "What are the names and descriptions for all the sections?", "question_toks": ["What", "are", "the", "names", "and", "descriptions", "for", "all", "the", "sections", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "524", "answer_text": [["a", "non"], ["b", "voluptatem"], ["c", "qui"], ["d", "voluptas"], ["e", "ex"], ["f", "doloremque"], ["g", "provident"], ["h", "et"], ["j", "quis"], ["k", "nesciunt"], ["l", "ad"], ["o", "et"], ["p", "facilis"], ["u", "reprehenderit"], ["y", "qui"]], "trigger_words": ["Section Name", "Section Description"], "Prediction": "section_name, section_description FROM Sections;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2", "query_toks": ["SELECT", "T1.course_name", ",", "T1.course_id", "FROM", "Courses", "AS", "T1", "JOIN", "Sections", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "GROUP", "BY", "T1.course_id", "HAVING", "count", "(", "*", ")", "<", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "course_name", ",", "t1", ".", "course_id", "from", "courses", "as", "t1", "join", "sections", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "group", "by", "t1", ".", "course_id", "having", "count", "(", "*", ")", "<", "=", "value"], "question": "What are the names and id of courses having at most 2 sections?", "question_toks": ["What", "are", "the", "names", "and", "id", "of", "courses", "having", "at", "most", "2", "sections", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 24, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 6, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "525", "answer_text": [["ds", 1], ["math", 2], ["en", 4], ["fr", 5], ["la", 6], ["cal", 7], ["nlp", 8], ["dl", 9], ["ml", 10], ["db", 12], ["pl", 14]], "trigger_words": ["Course Name", "Course Id"], "Prediction": "Courses.course_id, Courses.course_name \n FROM Courses \n WHERE Courses.course_id IN \n     (SELECT Sections.course_id \n      FROM Sections \n      GROUP BY Sections.course_id \n      HAVING COUNT(*) <= 2);"}
{"db_id": "student_transcripts_tracking", "query": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2", "query_toks": ["SELECT", "T1.course_name", ",", "T1.course_id", "FROM", "Courses", "AS", "T1", "JOIN", "Sections", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "GROUP", "BY", "T1.course_id", "HAVING", "count", "(", "*", ")", "<", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "course_name", ",", "t1", ".", "course_id", "from", "courses", "as", "t1", "join", "sections", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "group", "by", "t1", ".", "course_id", "having", "count", "(", "*", ")", "<", "=", "value"], "question": "What are the names and ids of every course with less than 2 sections?", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "every", "course", "with", "less", "than", "2", "sections", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 24, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 6, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "526", "answer_text": [["ds", 1], ["math", 2], ["en", 4], ["fr", 5], ["la", 6], ["cal", 7], ["nlp", 8], ["dl", 9], ["ml", 10], ["db", 12], ["pl", 14]], "trigger_words": ["Course Name", "Course Id"], "Prediction": "course_id, course_name FROM Courses WHERE course_id NOT IN (SELECT course_id FROM Sections GROUP BY course_id HAVING COUNT(*) >= 2);"}
{"db_id": "student_transcripts_tracking", "query": "SELECT section_name FROM Sections ORDER BY section_name DESC", "query_toks": ["SELECT", "section_name", "FROM", "Sections", "ORDER", "BY", "section_name", "DESC"], "query_toks_no_value": ["select", "section_name", "from", "sections", "order", "by", "section_name", "desc"], "question": "List the section_name in reversed lexicographical order.", "question_toks": ["List", "the", "section_name", "in", "reversed", "lexicographical", "order", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 25, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "527", "answer_text": [["y"], ["u"], ["p"], ["o"], ["l"], ["k"], ["j"], ["h"], ["g"], ["f"], ["e"], ["d"], ["c"], ["b"], ["a"]], "trigger_words": ["Section Name"], "Prediction": "section_name FROM Sections ORDER BY section_name DESC;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT section_name FROM Sections ORDER BY section_name DESC", "query_toks": ["SELECT", "section_name", "FROM", "Sections", "ORDER", "BY", "section_name", "DESC"], "query_toks_no_value": ["select", "section_name", "from", "sections", "order", "by", "section_name", "desc"], "question": "What are the names of the sections in reverse alphabetical order?", "question_toks": ["What", "are", "the", "names", "of", "the", "sections", "in", "reverse", "alphabetical", "order", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 25, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "528", "answer_text": [["y"], ["u"], ["p"], ["o"], ["l"], ["k"], ["j"], ["h"], ["g"], ["f"], ["e"], ["d"], ["c"], ["b"], ["a"]], "trigger_words": ["Section Name"], "Prediction": "section_name FROM Sections ORDER BY section_name DESC;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.semester_name", ",", "T1.semester_id", "FROM", "Semesters", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.semester_id", "=", "T2.semester_id", "GROUP", "BY", "T1.semester_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "semester_name", ",", "t1", ".", "semester_id", "from", "semesters", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "semester_id", "=", "t2", ".", "semester_id", "group", "by", "t1", ".", "semester_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the semester which most student registered in? Show both the name and the id.", "question_toks": ["What", "is", "the", "semester", "which", "most", "student", "registered", "in", "?", "Show", "both", "the", "name", "and", "the", "id", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 28, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 29, false], null]], [0, [0, [0, 28, false], null]]]], "where": [], "groupBy": [[0, 28, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "529", "answer_text": [["summer 2010", 2]], "trigger_words": ["Semester Name", "Semester Id"], "Prediction": "Semesters.semester_id, Semesters.semester_name\n FROM Semesters\n JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id\n GROUP BY Semesters.semester_id\n ORDER BY COUNT(Student_Enrolment.student_id) DESC\n LIMIT 1;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.semester_name", ",", "T1.semester_id", "FROM", "Semesters", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.semester_id", "=", "T2.semester_id", "GROUP", "BY", "T1.semester_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "semester_name", ",", "t1", ".", "semester_id", "from", "semesters", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "semester_id", "=", "t2", ".", "semester_id", "group", "by", "t1", ".", "semester_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "For each semester, what is the name and id of the one with the most students registered?", "question_toks": ["For", "each", "semester", ",", "what", "is", "the", "name", "and", "id", "of", "the", "one", "with", "the", "most", "students", "registered", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 28, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 29, false], null]], [0, [0, [0, 28, false], null]]]], "where": [], "groupBy": [[0, 28, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "530", "answer_text": [["summer 2010", 2]], "trigger_words": ["Semester Name", "Semester Id"], "Prediction": "Semesters.semester_id, Semesters.semester_name\n FROM Semesters\n JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id\n GROUP BY Semesters.semester_id\n ORDER BY COUNT(Student_Enrolment.student_id) DESC\n LIMIT 1;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'", "query_toks": ["SELECT", "department_description", "FROM", "Departments", "WHERE", "department_name", "LIKE", "'", "%", "computer", "%", "'"], "query_toks_no_value": ["select", "department_description", "from", "departments", "where", "department_name", "like", "value"], "question": "What is the description of the department whose name has the substring the computer?", "question_toks": ["What", "is", "the", "description", "of", "the", "department", "whose", "name", "has", "the", "substring", "the", "computer", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%computer%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "531", "answer_text": [["error"]], "trigger_words": ["Department Description"], "Prediction": "department_description FROM Departments WHERE department_name LIKE '%computer%';"}
{"db_id": "student_transcripts_tracking", "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'", "query_toks": ["SELECT", "department_description", "FROM", "Departments", "WHERE", "department_name", "LIKE", "'", "%", "computer", "%", "'"], "query_toks_no_value": ["select", "department_description", "from", "departments", "where", "department_name", "like", "value"], "question": "What is the department description for the one whose name has the word computer?", "question_toks": ["What", "is", "the", "department", "description", "for", "the", "one", "whose", "name", "has", "the", "word", "computer", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%computer%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "532", "answer_text": [["error"]], "trigger_words": ["Department Description"], "Prediction": "department_description FROM Departments WHERE department_name LIKE '%computer%';"}
{"db_id": "student_transcripts_tracking", "query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2", "query_toks": ["SELECT", "T1.first_name", ",", "T1.middle_name", ",", "T1.last_name", ",", "T1.student_id", "FROM", "Students", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id", "HAVING", "count", "(", "*", ")", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "middle_name", ",", "t1", ".", "last_name", ",", "t1", ".", "student_id", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", "=", "value"], "question": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.", "question_toks": ["Who", "are", "enrolled", "in", "2", "degree", "programs", "in", "one", "semester", "?", "List", "the", "first", "name", ",", "middle", "name", "and", "last", "name", "and", "the", "id", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]]}, "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [0, [0, [0, 32, false], null]]]], "where": [], "groupBy": [[0, 32, false]], "having": [[false, 2, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "533", "answer_text": [["Jarvis", "Aaliyah", "Carroll", 4], ["Reva", "Golda", "Osinski", 9], ["Jordy", "Osborne", "Rempel", 14]], "trigger_words": ["First Name", "Middle Name", "Last Name", "Student Id"], "Prediction": "Students.first_name, Students.middle_name, Students.last_name, Students.student_id\n FROM Students\n JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id\n JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id\n WHERE Student_Enrolment.semester_id = [semester_id]\n GROUP BY Students.student_id\n HAVING COUNT(DISTINCT Degree_Programs.degree_program_id) = 2;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2", "query_toks": ["SELECT", "T1.first_name", ",", "T1.middle_name", ",", "T1.last_name", ",", "T1.student_id", "FROM", "Students", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id", "HAVING", "count", "(", "*", ")", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "middle_name", ",", "t1", ".", "last_name", ",", "t1", ".", "student_id", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", "=", "value"], "question": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?", "question_toks": ["What", "are", "the", "first", ",", "middle", ",", "and", "last", "names", ",", "along", "with", "the", "ids", ",", "of", "all", "students", "who", "enrolled", "in", "2", "degree", "programs", "in", "one", "semester", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]]}, "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [0, [0, [0, 32, false], null]]]], "where": [], "groupBy": [[0, 32, false]], "having": [[false, 2, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "534", "answer_text": [["Jarvis", "Aaliyah", "Carroll", 4], ["Reva", "Golda", "Osinski", 9], ["Jordy", "Osborne", "Rempel", 14]], "trigger_words": ["First Name", "Middle Name", "Last Name", "Student Id"], "Prediction": "Students.first_name, Students.middle_name, Students.last_name, Students.student_id\n FROM Students\n JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id\n WHERE Student_Enrolment.semester_id = [insert semester id here]\n GROUP BY Students.student_id\n HAVING COUNT(DISTINCT Student_Enrolment.degree_program_id) = 2;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'", "query_toks": ["SELECT", "DISTINCT", "T1.first_name", ",", "T1.middle_name", ",", "T1.last_name", "FROM", "Students", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "JOIN", "Degree_Programs", "AS", "T3", "ON", "T2.degree_program_id", "=", "T3.degree_program_id", "WHERE", "T3.degree_summary_name", "=", "'Bachelor", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "first_name", ",", "t1", ".", "middle_name", ",", "t1", ".", "last_name", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "join", "degree_programs", "as", "t3", "on", "t2", ".", "degree_program_id", "=", "t3", ".", "degree_program_id", "where", "t3", ".", "degree_summary_name", "=", "value"], "question": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.", "question_toks": ["Who", "is", "enrolled", "in", "a", "Bachelor", "degree", "program", "?", "List", "the", "first", "name", ",", "middle", "name", ",", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null], "and", [false, 2, [0, [0, 45, false], null], [0, 18, false], null]]}, "select": [true, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Bachelor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "535", "answer_text": [["Reva", "Golda", "Osinski"], ["Frida", "Aisha", "Huel"], ["Jarvis", "Aaliyah", "Carroll"], ["Milton", "Vaughn", "Christiansen"], ["Stanford", "Mona", "Rogahn"]], "trigger_words": ["First Name", "Middle Name", "Last Name"], "Prediction": "Students.first_name, Students.middle_name, Students.last_name\n FROM Students\n JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id\n JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id\n WHERE Degree_Programs.degree_summary_name = 'Bachelor';"}
{"db_id": "student_transcripts_tracking", "query": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'", "query_toks": ["SELECT", "DISTINCT", "T1.first_name", ",", "T1.middle_name", ",", "T1.last_name", "FROM", "Students", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "JOIN", "Degree_Programs", "AS", "T3", "ON", "T2.degree_program_id", "=", "T3.degree_program_id", "WHERE", "T3.degree_summary_name", "=", "'Bachelor", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "first_name", ",", "t1", ".", "middle_name", ",", "t1", ".", "last_name", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "join", "degree_programs", "as", "t3", "on", "t2", ".", "degree_program_id", "=", "t3", ".", "degree_program_id", "where", "t3", ".", "degree_summary_name", "=", "value"], "question": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?", "question_toks": ["What", "are", "the", "first", ",", "middle", ",", "and", "last", "names", "for", "everybody", "enrolled", "in", "a", "Bachelors", "program", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null], "and", [false, 2, [0, [0, 45, false], null], [0, 18, false], null]]}, "select": [true, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Bachelor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "536", "answer_text": [["Reva", "Golda", "Osinski"], ["Frida", "Aisha", "Huel"], ["Jarvis", "Aaliyah", "Carroll"], ["Milton", "Vaughn", "Christiansen"], ["Stanford", "Mona", "Rogahn"]], "trigger_words": ["First Name", "Middle Name", "Last Name"], "Prediction": "Students.first_name, Students.middle_name, Students.last_name\nFROM Students\nJOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id\nJOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id\nWHERE Degree_Programs.degree_summary_name = 'Bachelors';"}
{"db_id": "student_transcripts_tracking", "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.degree_summary_name", "FROM", "Degree_Programs", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.degree_program_id", "=", "T2.degree_program_id", "GROUP", "BY", "T1.degree_summary_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "degree_program_id", "=", "t2", ".", "degree_program_id", "group", "by", "t1", ".", "degree_summary_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the kind of program which most number of students are enrolled in?", "question_toks": ["Find", "the", "kind", "of", "program", "which", "most", "number", "of", "students", "are", "enrolled", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [[0, 20, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "537", "answer_text": [["Bachelor"]], "trigger_words": ["Degree Summary Name"], "Prediction": "Degree_Programs.degree_summary_name \nFROM Degree_Programs \nJOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id \nGROUP BY Degree_Programs.degree_program_id \nORDER BY COUNT(Student_Enrolment.student_id) DESC \nLIMIT 1;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.degree_summary_name", "FROM", "Degree_Programs", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.degree_program_id", "=", "T2.degree_program_id", "GROUP", "BY", "T1.degree_summary_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "degree_program_id", "=", "t2", ".", "degree_program_id", "group", "by", "t1", ".", "degree_summary_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the degree summary name that has the most number of students enrolled?", "question_toks": ["What", "is", "the", "degree", "summary", "name", "that", "has", "the", "most", "number", "of", "students", "enrolled", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [[0, 20, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "538", "answer_text": [["Bachelor"]], "trigger_words": ["Degree Summary Name"], "Prediction": "Degree_Programs.degree_summary_name\nFROM Degree_Programs\nJOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id\nGROUP BY Degree_Programs.degree_summary_name\nORDER BY COUNT(Student_Enrolment.student_id) DESC\nLIMIT 1;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.degree_program_id", ",", "T1.degree_summary_name", "FROM", "Degree_Programs", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.degree_program_id", "=", "T2.degree_program_id", "GROUP", "BY", "T1.degree_program_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "degree_program_id", ",", "t1", ".", "degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "degree_program_id", "=", "t2", ".", "degree_program_id", "group", "by", "t1", ".", "degree_program_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the program which most number of students are enrolled in. List both the id and the summary.", "question_toks": ["Find", "the", "program", "which", "most", "number", "of", "students", "are", "enrolled", "in", ".", "List", "both", "the", "id", "and", "the", "summary", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "539", "answer_text": [[9, "Bachelor"]], "trigger_words": ["Degree Program Id", "Degree Summary Name"], "Prediction": "Degree_Programs.degree_program_id, Degree_Programs.degree_summary_name \n FROM Degree_Programs \n JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id \n GROUP BY Degree_Programs.degree_program_id \n ORDER BY COUNT(Student_Enrolment.student_id) DESC \n LIMIT 1;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.degree_program_id", ",", "T1.degree_summary_name", "FROM", "Degree_Programs", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.degree_program_id", "=", "T2.degree_program_id", "GROUP", "BY", "T1.degree_program_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "degree_program_id", ",", "t1", ".", "degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "degree_program_id", "=", "t2", ".", "degree_program_id", "group", "by", "t1", ".", "degree_program_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the program id and the summary of the degree that has the most students enrolled?", "question_toks": ["What", "is", "the", "program", "id", "and", "the", "summary", "of", "the", "degree", "that", "has", "the", "most", "students", "enrolled", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "540", "answer_text": [[9, "Bachelor"]], "trigger_words": ["Degree Program Id", "Degree Summary Name"], "Prediction": "Degree_Programs.degree_program_id, Degree_Programs.degree_summary_name \n FROM Degree_Programs \n JOIN Student_Enrolment ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id \n GROUP BY Degree_Programs.degree_program_id \n ORDER BY COUNT(Student_Enrolment.student_id) DESC \n LIMIT 1;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.student_id", ",", "T1.first_name", ",", "T1.middle_name", ",", "T1.last_name", ",", "count", "(", "*", ")", ",", "T1.student_id", "FROM", "Students", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "student_id", ",", "t1", ".", "first_name", ",", "t1", ".", "middle_name", ",", "t1", ".", "last_name", ",", "count", "(", "*", ")", ",", "t1", ".", "student_id", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.", "question_toks": ["Which", "student", "has", "enrolled", "for", "the", "most", "times", "in", "any", "program", "?", "List", "the", "id", ",", "first", "name", ",", "middle", "name", ",", "last", "name", ",", "the", "number", "of", "enrollments", "and", "student", "id", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]]}, "select": [false, [[0, [0, [0, 32, false], null]], [0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [3, [0, [0, 0, false], null]], [0, [0, [0, 32, false], null]]]], "where": [], "groupBy": [[0, 32, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "541", "answer_text": [[7, "Frida", "Aisha", "Huel", 3, 7]], "trigger_words": ["Student Id", "First Name", "Middle Name", "Last Name", "Number", "Student Id"], "Prediction": "Students.student_id, Students.first_name, Students.middle_name, Students.last_name, COUNT(Student_Enrolment.student_enrolment_id) AS num_enrollments\n FROM Student_Enrolment\n JOIN Students ON Student_Enrolment.student_id = Students.student_id\n GROUP BY Student_Enrolment.student_id\n ORDER BY num_enrollments DESC\n LIMIT 1;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.student_id", ",", "T1.first_name", ",", "T1.middle_name", ",", "T1.last_name", ",", "count", "(", "*", ")", ",", "T1.student_id", "FROM", "Students", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "student_id", ",", "t1", ".", "first_name", ",", "t1", ".", "middle_name", ",", "t1", ".", "last_name", ",", "count", "(", "*", ")", ",", "t1", ".", "student_id", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?", "question_toks": ["What", "is", "the", "first", ",", "middle", ",", "and", "last", "name", ",", "along", "with", "the", "id", "and", "number", "of", "enrollments", ",", "for", "the", "student", "who", "enrolled", "the", "most", "in", "any", "program", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]]}, "select": [false, [[0, [0, [0, 32, false], null]], [0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [3, [0, [0, 0, false], null]], [0, [0, [0, 32, false], null]]]], "where": [], "groupBy": [[0, 32, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "542", "answer_text": [[7, "Frida", "Aisha", "Huel", 3, 7]], "trigger_words": ["Student Id", "First Name", "Middle Name", "Last Name", "Number", "Student Id"], "Prediction": "Students.first_name, Students.middle_name, Students.last_name, Students.student_id, COUNT(Student_Enrolment.student_enrolment_id) AS num_enrollments\n FROM Students\n JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id\n GROUP BY Students.student_id\n ORDER BY num_enrollments DESC\n LIMIT 1;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )", "query_toks": ["SELECT", "semester_name", "FROM", "Semesters", "WHERE", "semester_id", "NOT", "IN", "(", "SELECT", "semester_id", "FROM", "Student_Enrolment", ")"], "query_toks_no_value": ["select", "semester_name", "from", "semesters", "where", "semester_id", "not", "in", "(", "select", "semester_id", "from", "student_enrolment", ")"], "question": "Which semesters do not have any student enrolled? List the semester name.", "question_toks": ["Which", "semesters", "do", "not", "have", "any", "student", "enrolled", "?", "List", "the", "semester", "name", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[true, 8, [0, [0, 28, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 46, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "543", "answer_text": [["fall 2010"], ["spring 2013"], ["spring 2014"], ["spring 2016"], ["spring 2017"], ["winter 2018"]], "trigger_words": ["Semester Name"], "Prediction": "Semesters.semester_name \nFROM Semesters \nLEFT JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id \nWHERE Student_Enrolment.student_enrolment_id IS NULL;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )", "query_toks": ["SELECT", "semester_name", "FROM", "Semesters", "WHERE", "semester_id", "NOT", "IN", "(", "SELECT", "semester_id", "FROM", "Student_Enrolment", ")"], "query_toks_no_value": ["select", "semester_name", "from", "semesters", "where", "semester_id", "not", "in", "(", "select", "semester_id", "from", "student_enrolment", ")"], "question": "What is the name of the semester with no students enrolled?", "question_toks": ["What", "is", "the", "name", "of", "the", "semester", "with", "no", "students", "enrolled", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[true, 8, [0, [0, 28, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 46, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "544", "answer_text": [["fall 2010"], ["spring 2013"], ["spring 2014"], ["spring 2016"], ["spring 2017"], ["winter 2018"]], "trigger_words": ["Semester Name"], "Prediction": "Semesters.semester_name \nFROM Semesters \nLEFT JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id \nWHERE Student_Enrolment.student_enrolment_id IS NULL;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id", "query_toks": ["SELECT", "DISTINCT", "T1.course_name", "FROM", "Courses", "AS", "T1", "JOIN", "Student_Enrolment_Courses", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "course_name", "from", "courses", "as", "t1", "join", "student_enrolment_courses", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id"], "question": "What are all the course names of the courses which ever have students enrolled in?", "question_toks": ["What", "are", "all", "the", "course", "names", "of", "the", "courses", "which", "ever", "have", "students", "enrolled", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 50, false], null]]}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "545", "answer_text": [["la"], ["pl"], ["ai"], ["math"], ["ml"], ["os"], ["en"], ["nlp"], ["rs"], ["db"]], "trigger_words": ["Course Name"], "Prediction": "DISTINCT course_name FROM Courses \nINNER JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id", "query_toks": ["SELECT", "DISTINCT", "T1.course_name", "FROM", "Courses", "AS", "T1", "JOIN", "Student_Enrolment_Courses", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "course_name", "from", "courses", "as", "t1", "join", "student_enrolment_courses", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id"], "question": "What are the names of all courses that have some students enrolled?", "question_toks": ["What", "are", "the", "names", "of", "all", "courses", "that", "have", "some", "students", "enrolled", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 50, false], null]]}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "546", "answer_text": [["la"], ["pl"], ["ai"], ["math"], ["ml"], ["os"], ["en"], ["nlp"], ["rs"], ["db"]], "trigger_words": ["Course Name"], "Prediction": "Courses.course_name \nFROM Courses \nINNER JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.course_name", "FROM", "Courses", "AS", "T1", "JOIN", "Student_Enrolment_Courses", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "GROUP", "BY", "T1.course_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "course_name", "from", "courses", "as", "t1", "join", "student_enrolment_courses", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "group", "by", "t1", ".", "course_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What's the name of the course with most number of enrollments?", "question_toks": ["What", "'s", "the", "name", "of", "the", "course", "with", "most", "number", "of", "enrollments", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 50, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "547", "answer_text": [["rs"]], "trigger_words": ["Course Name"], "Prediction": "Courses.course_name \nFROM Courses \nJOIN Student_Enrolment_Courses \nON Courses.course_id = Student_Enrolment_Courses.course_id \nGROUP BY Courses.course_id \nORDER BY COUNT(Student_Enrolment_Courses.student_enrolment_id) DESC \nLIMIT 1;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.course_name", "FROM", "Courses", "AS", "T1", "JOIN", "Student_Enrolment_Courses", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "GROUP", "BY", "T1.course_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "course_name", "from", "courses", "as", "t1", "join", "student_enrolment_courses", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "group", "by", "t1", ".", "course_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the course with the most students enrolled?", "question_toks": ["What", "is", "the", "name", "of", "the", "course", "with", "the", "most", "students", "enrolled", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 50, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "548", "answer_text": [["rs"]], "trigger_words": ["Course Name"], "Prediction": "Courses.course_name \nFROM Courses \nJOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id \nGROUP BY Courses.course_id \nORDER BY COUNT(Student_Enrolment_Courses.student_course_id) DESC \nLIMIT 1;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id", "query_toks": ["SELECT", "T1.last_name", "FROM", "Students", "AS", "T1", "JOIN", "Addresses", "AS", "T2", "ON", "T1.current_address_id", "=", "T2.address_id", "WHERE", "T2.state_province_county", "=", "'NorthCarolina", "'", "EXCEPT", "SELECT", "DISTINCT", "T3.last_name", "FROM", "Students", "AS", "T3", "JOIN", "Student_Enrolment", "AS", "T4", "ON", "T3.student_id", "=", "T4.student_id"], "query_toks_no_value": ["select", "t1", ".", "last_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1", ".", "current_address_id", "=", "t2", ".", "address_id", "where", "t2", ".", "state_province_county", "=", "value", "except", "select", "distinct", "t3", ".", "last_name", "from", "students", "as", "t3", "join", "student_enrolment", "as", "t4", "on", "t3", ".", "student_id", "=", "t4", ".", "student_id"], "question": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.", "question_toks": ["Find", "the", "last", "name", "of", "the", "students", "who", "currently", "live", "in", "the", "state", "of", "North", "Carolina", "but", "have", "not", "registered", "in", "any", "degree", "program", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 37, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"NorthCarolina\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]]}, "select": [true, [[0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "549", "answer_text": [["Gleichner"], ["Weimann"]], "trigger_words": ["Last Name"], "Prediction": "Students.last_name \nFROM Students \nJOIN Addresses ON Students.current_address_id = Addresses.address_id \nWHERE Addresses.state_province_county = 'North Carolina' \nAND Students.student_id NOT IN (SELECT student_id FROM Student_Enrolment);"}
{"db_id": "student_transcripts_tracking", "query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id", "query_toks": ["SELECT", "T1.last_name", "FROM", "Students", "AS", "T1", "JOIN", "Addresses", "AS", "T2", "ON", "T1.current_address_id", "=", "T2.address_id", "WHERE", "T2.state_province_county", "=", "'NorthCarolina", "'", "EXCEPT", "SELECT", "DISTINCT", "T3.last_name", "FROM", "Students", "AS", "T3", "JOIN", "Student_Enrolment", "AS", "T4", "ON", "T3.student_id", "=", "T4.student_id"], "query_toks_no_value": ["select", "t1", ".", "last_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1", ".", "current_address_id", "=", "t2", ".", "address_id", "where", "t2", ".", "state_province_county", "=", "value", "except", "select", "distinct", "t3", ".", "last_name", "from", "students", "as", "t3", "join", "student_enrolment", "as", "t4", "on", "t3", ".", "student_id", "=", "t4", ".", "student_id"], "question": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?", "question_toks": ["What", "are", "the", "last", "name", "of", "the", "students", "who", "live", "in", "North", "Carolina", "but", "have", "not", "registered", "in", "any", "degree", "programs", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 37, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"NorthCarolina\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]]}, "select": [true, [[0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "550", "answer_text": [["Gleichner"], ["Weimann"]], "trigger_words": ["Last Name"], "Prediction": "Students.last_name \nFROM Students \nJOIN Addresses ON Students.current_address_id = Addresses.address_id \nWHERE Addresses.state_province_county = 'North Carolina' \nAND Students.student_id NOT IN (SELECT student_id FROM Student_Enrolment);"}
{"db_id": "student_transcripts_tracking", "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T2.transcript_date", ",", "T1.transcript_id", "FROM", "Transcript_Contents", "AS", "T1", "JOIN", "Transcripts", "AS", "T2", "ON", "T1.transcript_id", "=", "T2.transcript_id", "GROUP", "BY", "T1.transcript_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "transcript_date", ",", "t1", ".", "transcript_id", "from", "transcript_contents", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1", ".", "transcript_id", "=", "t2", ".", "transcript_id", "group", "by", "t1", ".", "transcript_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the date and id of the transcript with at least 2 course results.", "question_toks": ["Show", "the", "date", "and", "id", "of", "the", "transcript", "with", "at", "least", "2", "course", "results", "."], "sql": {"from": {"table_units": [["table_unit", 10], ["table_unit", 9]], "conds": [[false, 2, [0, [0, 56, false], null], [0, 52, false], null]]}, "select": [false, [[0, [0, [0, 53, false], null]], [0, [0, [0, 56, false], null]]]], "where": [], "groupBy": [[0, 56, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "551", "answer_text": [["2013-06-30 13:01:40", 5], ["2010-12-13 10:55:15", 6], ["1975-05-06 12:04:47", 8], ["1998-11-22 12:18:29", 15]], "trigger_words": ["Transcript Date", "Transcript Id"], "Prediction": "Transcripts.transcript_date, Transcripts.transcript_id\n FROM Transcripts\n JOIN Transcript_Contents ON Transcript_Contents.transcript_id = Transcripts.transcript_id\n GROUP BY Transcript_Contents.transcript_id\n HAVING COUNT(DISTINCT Transcript_Contents.course_id) >= 2;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T2.transcript_date", ",", "T1.transcript_id", "FROM", "Transcript_Contents", "AS", "T1", "JOIN", "Transcripts", "AS", "T2", "ON", "T1.transcript_id", "=", "T2.transcript_id", "GROUP", "BY", "T1.transcript_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "transcript_date", ",", "t1", ".", "transcript_id", "from", "transcript_contents", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1", ".", "transcript_id", "=", "t2", ".", "transcript_id", "group", "by", "t1", ".", "transcript_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What is the date and id of the transcript with at least 2 courses listed?", "question_toks": ["What", "is", "the", "date", "and", "id", "of", "the", "transcript", "with", "at", "least", "2", "courses", "listed", "?"], "sql": {"from": {"table_units": [["table_unit", 10], ["table_unit", 9]], "conds": [[false, 2, [0, [0, 56, false], null], [0, 52, false], null]]}, "select": [false, [[0, [0, [0, 53, false], null]], [0, [0, [0, 56, false], null]]]], "where": [], "groupBy": [[0, 56, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "552", "answer_text": [["2013-06-30 13:01:40", 5], ["2010-12-13 10:55:15", 6], ["1975-05-06 12:04:47", 8], ["1998-11-22 12:18:29", 15]], "trigger_words": ["Transcript Date", "Transcript Id"], "Prediction": "Transcripts.transcript_date, Transcripts.transcript_id\n FROM Transcripts\n JOIN Transcript_Contents ON Transcript_Contents.transcript_id = Transcripts.transcript_id\n GROUP BY Transcript_Contents.transcript_id\n HAVING COUNT(DISTINCT Transcript_Contents.student_course_id) >= 2;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'", "query_toks": ["SELECT", "cell_mobile_number", "FROM", "Students", "WHERE", "first_name", "=", "'Timmothy", "'", "AND", "last_name", "=", "'Ward", "'"], "query_toks_no_value": ["select", "cell_mobile_number", "from", "students", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "What is the phone number of the man with the first name Timmothy and the last name Ward?", "question_toks": ["What", "is", "the", "phone", "number", "of", "the", "man", "with", "the", "first", "name", "Timmothy", "and", "the", "last", "name", "Ward", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [[false, 2, [0, [0, 35, false], null], "\"Timmothy\"", null], "and", [false, 2, [0, [0, 37, false], null], "\"Ward\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "553", "answer_text": [["(096)889-8954x524"]], "trigger_words": ["Cell Mobile Number"], "Prediction": "Students.cell_mobile_number \n FROM Students \n WHERE Students.first_name = 'Timmothy' AND Students.last_name = 'Ward';"}
{"db_id": "student_transcripts_tracking", "query": "select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'", "query_toks": ["select", "cell_mobile_number", "from", "students", "where", "first_name", "=", "\"timmothy\"", "and", "last_name", "=", "\"ward\""], "query_toks_no_value": ["select", "cell_mobile_number", "from", "students", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "What is the mobile phone number of the student named Timmothy Ward ?", "question_toks": ["What", "is", "the", "mobile", "phone", "number", "of", "the", "student", "named", "Timmothy", "Ward", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [[false, 2, [0, [0, 35, false], null], "\"timmothy\"", null], "and", [false, 2, [0, [0, 37, false], null], "\"ward\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "554", "answer_text": [], "trigger_words": ["Cell Mobile Number"], "Prediction": "Students.cell_mobile_number \n FROM Students \n WHERE Students.first_name = 'Timmothy' AND Students.last_name = 'Ward';"}
{"db_id": "student_transcripts_tracking", "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1", "query_toks": ["SELECT", "first_name", ",", "middle_name", ",", "last_name", "FROM", "Students", "ORDER", "BY", "date_first_registered", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_first_registered", "asc", "limit", "value"], "question": "Who is the first student to register? List the first name, middle name and last name.", "question_toks": ["Who", "is", "the", "first", "student", "to", "register", "?", "List", "the", "first", "name", ",", "middle", "name", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 41, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "555", "answer_text": [["Timmothy", "Anna", "Ward"]], "trigger_words": ["First Name", "Middle Name", "Last Name"], "Prediction": "first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1", "query_toks": ["SELECT", "first_name", ",", "middle_name", ",", "last_name", "FROM", "Students", "ORDER", "BY", "date_first_registered", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_first_registered", "asc", "limit", "value"], "question": "What is the first, middle, and last name of the first student to register?", "question_toks": ["What", "is", "the", "first", ",", "middle", ",", "and", "last", "name", "of", "the", "first", "student", "to", "register", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 41, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "556", "answer_text": [["Timmothy", "Anna", "Ward"]], "trigger_words": ["First Name", "Middle Name", "Last Name"], "Prediction": "first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students);"}
{"db_id": "student_transcripts_tracking", "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1", "query_toks": ["SELECT", "first_name", ",", "middle_name", ",", "last_name", "FROM", "Students", "ORDER", "BY", "date_left", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_left", "asc", "limit", "value"], "question": "Who is the earliest graduate of the school? List the first name, middle name and last name.", "question_toks": ["Who", "is", "the", "earliest", "graduate", "of", "the", "school", "?", "List", "the", "first", "name", ",", "middle", "name", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 42, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "557", "answer_text": [["Timmothy", "Anna", "Ward"]], "trigger_words": ["First Name", "Middle Name", "Last Name"], "Prediction": "Students.first_name, Students.middle_name, Students.last_name\nFROM Students\nJOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id\nJOIN Transcripts ON Student_Enrolment.student_enrolment_id = Transcripts.transcript_id\nWHERE degree_program_id = 'Graduate'\nORDER BY transcript_date ASC\nLIMIT 1;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1", "query_toks": ["SELECT", "first_name", ",", "middle_name", ",", "last_name", "FROM", "Students", "ORDER", "BY", "date_left", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_left", "asc", "limit", "value"], "question": "What is the first, middle, and last name of the earliest school graduate?", "question_toks": ["What", "is", "the", "first", ",", "middle", ",", "and", "last", "name", "of", "the", "earliest", "school", "graduate", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 42, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "558", "answer_text": [["Timmothy", "Anna", "Ward"]], "trigger_words": ["First Name", "Middle Name", "Last Name"], "Prediction": "Students.first_name, Students.middle_name, Students.last_name\n FROM Students\n INNER JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id\n INNER JOIN Transcript_Contents ON Student_Enrolment.student_enrolment_id = Transcript_Contents.student_course_id\n INNER JOIN Transcripts ON Transcript_Contents.transcript_id = Transcripts.transcript_id\n ORDER BY Transcripts.transcript_date ASC\n LIMIT 1;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id", "query_toks": ["SELECT", "first_name", "FROM", "Students", "WHERE", "current_address_id", "!", "=", "permanent_address_id"], "query_toks_no_value": ["select", "first_name", "from", "students", "where", "current_address_id", "!", "=", "permanent_address_id"], "question": "Whose permanent address is different from his or her current address? List his or her first name.", "question_toks": ["Whose", "permanent", "address", "is", "different", "from", "his", "or", "her", "current", "address", "?", "List", "his", "or", "her", "first", "name", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [[false, 7, [0, [0, 33, false], null], [0, 34, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "559", "answer_text": [["Timmothy"], ["Hobart"], ["Warren"], ["Jarvis"], ["Stanford"], ["Frida"], ["Delaney"], ["Reva"], ["Helga"], ["Gregg"], ["Orrin"], ["Deon"], ["Jordy"], ["Jett"]], "trigger_words": ["First Name"], "Prediction": "Students.first_name FROM Students \n WHERE Students.permanent_address_id != Students.current_address_id;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id", "query_toks": ["SELECT", "first_name", "FROM", "Students", "WHERE", "current_address_id", "!", "=", "permanent_address_id"], "query_toks_no_value": ["select", "first_name", "from", "students", "where", "current_address_id", "!", "=", "permanent_address_id"], "question": "What is the first name of the student whose permanent address is different from his or her current one?", "question_toks": ["What", "is", "the", "first", "name", "of", "the", "student", "whose", "permanent", "address", "is", "different", "from", "his", "or", "her", "current", "one", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [[false, 7, [0, [0, 33, false], null], [0, 34, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "560", "answer_text": [["Timmothy"], ["Hobart"], ["Warren"], ["Jarvis"], ["Stanford"], ["Frida"], ["Delaney"], ["Reva"], ["Helga"], ["Gregg"], ["Orrin"], ["Deon"], ["Jordy"], ["Jett"]], "trigger_words": ["First Name"], "Prediction": "Students.first_name \nFROM Students \nJOIN Addresses AS perm ON Students.permanent_address_id = perm.address_id \nJOIN Addresses AS curr ON Students.current_address_id = curr.address_id \nWHERE perm.line_1 <> curr.line_1;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.address_id", ",", "T1.line_1", ",", "T1.line_2", "FROM", "Addresses", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.address_id", "=", "T2.current_address_id", "GROUP", "BY", "T1.address_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "address_id", ",", "t1", ".", "line_1", ",", "t1", ".", "line_2", "from", "addresses", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "current_address_id", "group", "by", "t1", ".", "address_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which address holds the most number of students currently? List the address id and all lines.", "question_toks": ["Which", "address", "holds", "the", "most", "number", "of", "students", "currently", "?", "List", "the", "address", "id", "and", "all", "lines", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 33, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "561", "answer_text": [[9, "0643 Muller Vista", "Suite 383"]], "trigger_words": ["Address Id", "Line 1", "Line 2"], "Prediction": "Addresses.address_id, Addresses.line_1, Addresses.line_2, Addresses.line_3\n FROM Addresses\n JOIN Students ON Students.current_address_id = Addresses.address_id\n GROUP BY Addresses.address_id\n ORDER BY COUNT(*) DESC\n LIMIT 1;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.address_id", ",", "T1.line_1", ",", "T1.line_2", "FROM", "Addresses", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.address_id", "=", "T2.current_address_id", "GROUP", "BY", "T1.address_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "address_id", ",", "t1", ".", "line_1", ",", "t1", ".", "line_2", "from", "addresses", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "current_address_id", "group", "by", "t1", ".", "address_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the id, line 1, and line 2 of the address with the most students?", "question_toks": ["What", "is", "the", "id", ",", "line", "1", ",", "and", "line", "2", "of", "the", "address", "with", "the", "most", "students", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 33, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "562", "answer_text": [[9, "0643 Muller Vista", "Suite 383"]], "trigger_words": ["Address Id", "Line 1", "Line 2"], "Prediction": "Addresses.address_id, Addresses.line_1, Addresses.line_2\n FROM Addresses\n JOIN Students ON Students.permanent_address_id = Addresses.address_id OR Students.current_address_id = Addresses.address_id\n GROUP BY Addresses.address_id\n ORDER BY COUNT(*) DESC\n LIMIT 1;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT avg(transcript_date) FROM Transcripts", "query_toks": ["SELECT", "avg", "(", "transcript_date", ")", "FROM", "Transcripts"], "query_toks_no_value": ["select", "avg", "(", "transcript_date", ")", "from", "transcripts"], "question": "On average, when were the transcripts printed?", "question_toks": ["On", "average", ",", "when", "were", "the", "transcripts", "printed", "?"], "sql": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[5, [0, [0, 53, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "563", "answer_text": [[1989.9333333333334]], "trigger_words": ["Average Number"], "Prediction": "AVG(transcript_date) FROM Transcripts;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT avg(transcript_date) FROM Transcripts", "query_toks": ["SELECT", "avg", "(", "transcript_date", ")", "FROM", "Transcripts"], "query_toks_no_value": ["select", "avg", "(", "transcript_date", ")", "from", "transcripts"], "question": "What is the average transcript date?", "question_toks": ["What", "is", "the", "average", "transcript", "date", "?"], "sql": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[5, [0, [0, 53, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "564", "answer_text": [[1989.9333333333334]], "trigger_words": ["Average Number"], "Prediction": "AVG(transcript_date) FROM transcripts;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1", "query_toks": ["SELECT", "transcript_date", ",", "other_details", "FROM", "Transcripts", "ORDER", "BY", "transcript_date", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "transcript_date", ",", "other_details", "from", "transcripts", "order", "by", "transcript_date", "asc", "limit", "value"], "question": "When is the first transcript released? List the date and details.", "question_toks": ["When", "is", "the", "first", "transcript", "released", "?", "List", "the", "date", "and", "details", "."], "sql": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[0, [0, [0, 53, false], null]], [0, [0, [0, 54, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 53, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "565", "answer_text": [["1975-05-06 12:04:47", null]], "trigger_words": ["Transcript Date", "Other Details"], "Prediction": "transcript_date, other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1", "query_toks": ["SELECT", "transcript_date", ",", "other_details", "FROM", "Transcripts", "ORDER", "BY", "transcript_date", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "transcript_date", ",", "other_details", "from", "transcripts", "order", "by", "transcript_date", "asc", "limit", "value"], "question": "What is the earliest date of a transcript release, and what details can you tell me?", "question_toks": ["What", "is", "the", "earliest", "date", "of", "a", "transcript", "release", ",", "and", "what", "details", "can", "you", "tell", "me", "?"], "sql": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[0, [0, [0, 53, false], null]], [0, [0, [0, 54, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 53, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "566", "answer_text": [["1975-05-06 12:04:47", null]], "trigger_words": ["Transcript Date", "Other Details"], "Prediction": "MIN(transcript_date), other_details FROM Transcripts;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT count(*) FROM Transcripts", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Transcripts"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "transcripts"], "question": "How many transcripts are released?", "question_toks": ["How", "many", "transcripts", "are", "released", "?"], "sql": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "567", "answer_text": [[15]], "trigger_words": ["Number"], "Prediction": "COUNT(transcript_id) FROM Transcripts;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT count(*) FROM Transcripts", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Transcripts"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "transcripts"], "question": "How many transcripts are listed?", "question_toks": ["How", "many", "transcripts", "are", "listed", "?"], "sql": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "568", "answer_text": [[15]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Transcripts;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1", "query_toks": ["SELECT", "transcript_date", "FROM", "Transcripts", "ORDER", "BY", "transcript_date", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "transcript_date", "from", "transcripts", "order", "by", "transcript_date", "desc", "limit", "value"], "question": "What is the last transcript release date?", "question_toks": ["What", "is", "the", "last", "transcript", "release", "date", "?"], "sql": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[0, [0, [0, 53, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 53, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "569", "answer_text": [["2013-06-30 13:01:40"]], "trigger_words": ["Transcript Date"], "Prediction": "MAX(transcript_date) FROM Transcripts;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1", "query_toks": ["SELECT", "transcript_date", "FROM", "Transcripts", "ORDER", "BY", "transcript_date", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "transcript_date", "from", "transcripts", "order", "by", "transcript_date", "desc", "limit", "value"], "question": "When was the last transcript released?", "question_toks": ["When", "was", "the", "last", "transcript", "released", "?"], "sql": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[0, [0, [0, 53, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 53, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "570", "answer_text": [["2013-06-30 13:01:40"]], "trigger_words": ["Transcript Date"], "Prediction": "MAX(transcript_date) FROM Transcripts;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "student_course_id", "FROM", "Transcript_Contents", "GROUP", "BY", "student_course_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "student_course_id", "from", "transcript_contents", "group", "by", "student_course_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.", "question_toks": ["How", "many", "times", "at", "most", "can", "a", "course", "enrollment", "result", "show", "in", "different", "transcripts", "?", "Also", "show", "the", "course", "enrollment", "id", "."], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 55, false], null]]]], "where": [], "groupBy": [[0, 55, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "571", "answer_text": [[4, 0]], "trigger_words": ["Number", "Student Course Id"], "Prediction": "Student_Enrolment_Courses.student_course_id, COUNT(DISTINCT Transcript_Contents.transcript_id) AS max_enrollment_result\n FROM Student_Enrolment_Courses\n JOIN Transcript_Contents ON Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id\n GROUP BY Student_Enrolment_Courses.student_course_id\n ORDER BY max_enrollment_result DESC\n LIMIT 1;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "student_course_id", "FROM", "Transcript_Contents", "GROUP", "BY", "student_course_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "student_course_id", "from", "transcript_contents", "group", "by", "student_course_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?", "question_toks": ["What", "is", "the", "maximum", "number", "of", "times", "that", "a", "course", "shows", "up", "in", "different", "transcripts", "and", "what", "is", "that", "course", "'s", "enrollment", "id", "?"], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 55, false], null]]]], "where": [], "groupBy": [[0, 55, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "572", "answer_text": [[4, 0]], "trigger_words": ["Number", "Student Course Id"], "Prediction": "Student_Enrolment_Courses.student_enrolment_id, COUNT(*) AS num_transcripts\n FROM Student_Enrolment_Courses\n JOIN Transcript_Contents ON Student_Enrolment_Courses.student_course_id = Transcript_Contents.student_course_id\n GROUP BY Student_Enrolment_Courses.course_id\n ORDER BY num_transcripts DESC\n LIMIT 1;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "T2.transcript_date", ",", "T1.transcript_id", "FROM", "Transcript_Contents", "AS", "T1", "JOIN", "Transcripts", "AS", "T2", "ON", "T1.transcript_id", "=", "T2.transcript_id", "GROUP", "BY", "T1.transcript_id", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "transcript_date", ",", "t1", ".", "transcript_id", "from", "transcript_contents", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1", ".", "transcript_id", "=", "t2", ".", "transcript_id", "group", "by", "t1", ".", "transcript_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Show the date of the transcript which shows the least number of results, also list the id.", "question_toks": ["Show", "the", "date", "of", "the", "transcript", "which", "shows", "the", "least", "number", "of", "results", ",", "also", "list", "the", "id", "."], "sql": {"from": {"table_units": [["table_unit", 10], ["table_unit", 9]], "conds": [[false, 2, [0, [0, 56, false], null], [0, 52, false], null]]}, "select": [false, [[0, [0, [0, 53, false], null]], [0, [0, [0, 56, false], null]]]], "where": [], "groupBy": [[0, 56, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "573", "answer_text": [["1975-10-28 15:16:51", 2]], "trigger_words": ["Transcript Date", "Transcript Id"], "Prediction": "Transcripts.transcript_id, Transcripts.transcript_date\n FROM Transcripts\n JOIN Transcript_Contents ON Transcript_Contents.transcript_id = Transcripts.transcript_id\n GROUP BY Transcripts.transcript_id\n ORDER BY COUNT(Transcript_Contents.student_course_id) ASC\n LIMIT 1;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "T2.transcript_date", ",", "T1.transcript_id", "FROM", "Transcript_Contents", "AS", "T1", "JOIN", "Transcripts", "AS", "T2", "ON", "T1.transcript_id", "=", "T2.transcript_id", "GROUP", "BY", "T1.transcript_id", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "transcript_date", ",", "t1", ".", "transcript_id", "from", "transcript_contents", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1", ".", "transcript_id", "=", "t2", ".", "transcript_id", "group", "by", "t1", ".", "transcript_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "What is the date and id of the transcript with the least number of results?", "question_toks": ["What", "is", "the", "date", "and", "id", "of", "the", "transcript", "with", "the", "least", "number", "of", "results", "?"], "sql": {"from": {"table_units": [["table_unit", 10], ["table_unit", 9]], "conds": [[false, 2, [0, [0, 56, false], null], [0, 52, false], null]]}, "select": [false, [[0, [0, [0, 53, false], null]], [0, [0, [0, 56, false], null]]]], "where": [], "groupBy": [[0, 56, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "574", "answer_text": [["1975-10-28 15:16:51", 2]], "trigger_words": ["Transcript Date", "Transcript Id"], "Prediction": "Transcripts.transcript_id, Transcripts.transcript_date\n FROM Transcripts\n WHERE Transcripts.transcript_id IN (\n     SELECT Transcript_Contents.transcript_id\n     FROM Transcript_Contents\n     GROUP BY Transcript_Contents.transcript_id\n     HAVING COUNT(*) = (\n         SELECT MIN(result_count)\n         FROM (\n             SELECT COUNT(*) AS result_count\n             FROM Transcript_Contents\n             GROUP BY transcript_id\n         )\n     )\n );"}
{"db_id": "student_transcripts_tracking", "query": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'", "query_toks": ["SELECT", "DISTINCT", "T2.semester_id", "FROM", "Degree_Programs", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.degree_program_id", "=", "T2.degree_program_id", "WHERE", "degree_summary_name", "=", "'Master", "'", "INTERSECT", "SELECT", "DISTINCT", "T2.semester_id", "FROM", "Degree_Programs", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.degree_program_id", "=", "T2.degree_program_id", "WHERE", "degree_summary_name", "=", "'Bachelor", "'"], "query_toks_no_value": ["select", "distinct", "t2", ".", "semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "degree_program_id", "=", "t2", ".", "degree_program_id", "where", "degree_summary_name", "=", "value", "intersect", "select", "distinct", "t2", ".", "semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "degree_program_id", "=", "t2", ".", "degree_program_id", "where", "degree_summary_name", "=", "value"], "question": "Find the semester when both Master students and Bachelor students got enrolled in.", "question_toks": ["Find", "the", "semester", "when", "both", "Master", "students", "and", "Bachelor", "students", "got", "enrolled", "in", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [true, [[0, [0, [0, 46, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Master\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [true, [[0, [0, [0, 46, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Bachelor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "575", "answer_text": [[13]], "trigger_words": ["Semester Id"], "Prediction": "Semesters.semester_name\nFROM Student_Enrolment\nJOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id\nJOIN Semesters ON Student_Enrolment.semester_id = Semesters.semester_id\nWHERE Degree_Programs.degree_summary_name IN ('Master', 'Bachelor')\nGROUP BY Semesters.semester_name\nHAVING COUNT(DISTINCT Degree_Programs.degree_summary_name) = 2;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'", "query_toks": ["SELECT", "DISTINCT", "T2.semester_id", "FROM", "Degree_Programs", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.degree_program_id", "=", "T2.degree_program_id", "WHERE", "degree_summary_name", "=", "'Master", "'", "INTERSECT", "SELECT", "DISTINCT", "T2.semester_id", "FROM", "Degree_Programs", "AS", "T1", "JOIN", "Student_Enrolment", "AS", "T2", "ON", "T1.degree_program_id", "=", "T2.degree_program_id", "WHERE", "degree_summary_name", "=", "'Bachelor", "'"], "query_toks_no_value": ["select", "distinct", "t2", ".", "semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "degree_program_id", "=", "t2", ".", "degree_program_id", "where", "degree_summary_name", "=", "value", "intersect", "select", "distinct", "t2", ".", "semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1", ".", "degree_program_id", "=", "t2", ".", "degree_program_id", "where", "degree_summary_name", "=", "value"], "question": "What is the id of the semester that had both Masters and Bachelors students enrolled?", "question_toks": ["What", "is", "the", "id", "of", "the", "semester", "that", "had", "both", "Masters", "and", "Bachelors", "students", "enrolled", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [true, [[0, [0, [0, 46, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Master\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [true, [[0, [0, [0, 46, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Bachelor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "576", "answer_text": [[13]], "trigger_words": ["Semester Id"], "Prediction": "Semesters.semester_id \nFROM Semesters \nINNER JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id \nINNER JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id \nWHERE Degree_Programs.degree_summary_name IN ('Masters', 'Bachelors') \nGROUP BY Semesters.semester_id \nHAVING COUNT(DISTINCT Degree_Programs.degree_summary_name) = 2;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT count(DISTINCT current_address_id) FROM Students", "query_toks": ["SELECT", "count", "(", "DISTINCT", "current_address_id", ")", "FROM", "Students"], "query_toks_no_value": ["select", "count", "(", "distinct", "current_address_id", ")", "from", "students"], "question": "How many different addresses do the students currently live?", "question_toks": ["How", "many", "different", "addresses", "do", "the", "students", "currently", "live", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 33, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "577", "answer_text": [[9]], "trigger_words": ["Number Of Current Address Id"], "Prediction": "COUNT(DISTINCT Students.current_address_id) FROM Students;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT count(DISTINCT current_address_id) FROM Students", "query_toks": ["SELECT", "count", "(", "DISTINCT", "current_address_id", ")", "FROM", "Students"], "query_toks_no_value": ["select", "count", "(", "distinct", "current_address_id", ")", "from", "students"], "question": "What are the different addresses that have students living there?", "question_toks": ["What", "are", "the", "different", "addresses", "that", "have", "students", "living", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 33, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "578", "answer_text": [[9]], "trigger_words": ["Number Of Current Address Id"], "Prediction": "DISTINCT Addresses.*\n FROM Addresses\n JOIN Students ON Addresses.address_id = Students.current_address_id OR Addresses.address_id = Students.permanent_address_id;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC", "query_toks": ["SELECT", "other_student_details", "FROM", "Students", "ORDER", "BY", "other_student_details", "DESC"], "query_toks_no_value": ["select", "other_student_details", "from", "students", "order", "by", "other_student_details", "desc"], "question": "List all the student details in reversed lexicographical order.", "question_toks": ["List", "all", "the", "student", "details", "in", "reversed", "lexicographical", "order", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 43, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 43, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "579", "answer_text": [["voluptatem"], ["rerum"], ["quia"], ["qui"], ["omnis"], ["omnis"], ["non"], ["nesciunt"], ["laborum"], ["facilis"], ["et"], ["dolorum"], ["autem"], ["atque"], ["assumenda"]], "trigger_words": ["Other Student Details"], "Prediction": "* FROM Students ORDER BY last_name DESC, first_name DESC, middle_name DESC;"}
{"db_id": "student_transcripts_tracking", "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC", "query_toks": ["SELECT", "other_student_details", "FROM", "Students", "ORDER", "BY", "other_student_details", "DESC"], "query_toks_no_value": ["select", "other_student_details", "from", "students", "order", "by", "other_student_details", "desc"], "question": "What other details can you tell me about students in reverse alphabetical order?", "question_toks": ["What", "other", "details", "can", "you", "tell", "me", "about", "students", "in", "reverse", "alphabetical", "order", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 43, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 43, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "580", "answer_text": [["voluptatem"], ["rerum"], ["quia"], ["qui"], ["omnis"], ["omnis"], ["non"], ["nesciunt"], ["laborum"], ["facilis"], ["et"], ["dolorum"], ["autem"], ["atque"], ["assumenda"]], "trigger_words": ["Other Student Details"], "Prediction": "* FROM Students ORDER BY last_name DESC"}
{"db_id": "student_transcripts_tracking", "query": "SELECT section_description FROM Sections WHERE section_name  =  'h'", "query_toks": ["SELECT", "section_description", "FROM", "Sections", "WHERE", "section_name", "=", "'h", "'"], "query_toks_no_value": ["select", "section_description", "from", "sections", "where", "section_name", "=", "value"], "question": "Describe the section h.", "question_toks": ["Describe", "the", "section", "h", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"h\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "581", "answer_text": [["et"]], "trigger_words": ["Section Description"], "Prediction": "* FROM Students WHERE first_name = 'John';"}
{"db_id": "student_transcripts_tracking", "query": "SELECT section_description FROM Sections WHERE section_name  =  'h'", "query_toks": ["SELECT", "section_description", "FROM", "Sections", "WHERE", "section_name", "=", "'h", "'"], "query_toks_no_value": ["select", "section_description", "from", "sections", "where", "section_name", "=", "value"], "question": "What is the description for the section named h?", "question_toks": ["What", "is", "the", "description", "for", "the", "section", "named", "h", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"h\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "582", "answer_text": [["et"]], "trigger_words": ["Section Description"], "Prediction": "section_description FROM Sections WHERE section_name = 'h';"}
{"db_id": "student_transcripts_tracking", "query": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'", "query_toks": ["select", "t1.first_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1.permanent_address_id", "=", "t2.address_id", "where", "t2.country", "=", "\"haiti\"", "or", "t1.cell_mobile_number", "=", "\"09700166582\""], "query_toks_no_value": ["select", "t1", ".", "first_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1", ".", "permanent_address_id", "=", "t2", ".", "address_id", "where", "t2", ".", "country", "=", "value", "or", "t1", ".", "cell_mobile_number", "=", "value"], "question": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .", "question_toks": ["Find", "the", "first", "name", "of", "the", "students", "who", "permanently", "live", "in", "the", "country", "Haiti", "or", "have", "the", "cell", "phone", "number", "09700166582", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 34, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"haiti\"", null], "or", [false, 2, [0, [0, 38, false], null], "\"09700166582\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "583", "answer_text": [["Jarvis"]], "trigger_words": ["First Name"], "Prediction": "Students.first_name \n FROM Students \n JOIN Addresses ON Students.permanent_address_id=Addresses.address_id \n WHERE Addresses.country='Haiti' OR Students.cell_mobile_number='09700166582';"}
{"db_id": "student_transcripts_tracking", "query": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'", "query_toks": ["select", "t1.first_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1.permanent_address_id", "=", "t2.address_id", "where", "t2.country", "=", "\"haiti\"", "or", "t1.cell_mobile_number", "=", "\"09700166582\""], "query_toks_no_value": ["select", "t1", ".", "first_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1", ".", "permanent_address_id", "=", "t2", ".", "address_id", "where", "t2", ".", "country", "=", "value", "or", "t1", ".", "cell_mobile_number", "=", "value"], "question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?", "question_toks": ["What", "are", "the", "first", "names", "of", "the", "students", "who", "live", "in", "Haiti", "permanently", "or", "have", "the", "cell", "phone", "number", "09700166582", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 34, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"haiti\"", null], "or", [false, 2, [0, [0, 38, false], null], "\"09700166582\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "584", "answer_text": [["Jarvis"]], "trigger_words": ["First Name"], "Prediction": "Students.first_name \nFROM Students \nJOIN Addresses ON Students.permanent_address_id = Addresses.address_id \nWHERE Addresses.country = 'Haiti' \nOR Students.cell_mobile_number = '09700166582';"}
{"db_id": "tvshow", "query": "SELECT Title FROM Cartoon ORDER BY title", "query_toks": ["SELECT", "Title", "FROM", "Cartoon", "ORDER", "BY", "title"], "query_toks_no_value": ["select", "title", "from", "cartoon", "order", "by", "title"], "question": "List the title of all cartoons in alphabetical order.", "question_toks": ["List", "the", "title", "of", "all", "cartoons", "in", "alphabetical", "order", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 20, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "585", "answer_text": [["Dawn of the Dead Man!"], ["Day of the Dark Knight!"], ["Deep Cover for Batman!"], ["Enter the Outsiders!"], ["Evil Under the Sea!"], ["Fall of the Blue Beetle!"], ["Invasion of the Secret Santas!"], ["Journey to the Center of the Bat!"], ["Return of the Fearsome Fangs!"], ["Terror on Dinosaur Island!"], ["The Eyes of Despero!"], ["The Rise of the Blue Beetle!"]], "trigger_words": ["Title"], "Prediction": "Title FROM Cartoon ORDER BY Title ASC;"}
{"db_id": "tvshow", "query": "SELECT Title FROM Cartoon ORDER BY title", "query_toks": ["SELECT", "Title", "FROM", "Cartoon", "ORDER", "BY", "title"], "query_toks_no_value": ["select", "title", "from", "cartoon", "order", "by", "title"], "question": "What are the titles of the cartoons sorted alphabetically?", "question_toks": ["What", "are", "the", "titles", "of", "the", "cartoons", "sorted", "alphabetically", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 20, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "586", "answer_text": [["Dawn of the Dead Man!"], ["Day of the Dark Knight!"], ["Deep Cover for Batman!"], ["Enter the Outsiders!"], ["Evil Under the Sea!"], ["Fall of the Blue Beetle!"], ["Invasion of the Secret Santas!"], ["Journey to the Center of the Bat!"], ["Return of the Fearsome Fangs!"], ["Terror on Dinosaur Island!"], ["The Eyes of Despero!"], ["The Rise of the Blue Beetle!"]], "trigger_words": ["Title"], "Prediction": "Title FROM Cartoon ORDER BY Title ASC;"}
{"db_id": "tvshow", "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";", "query_toks": ["SELECT", "Title", "FROM", "Cartoon", "WHERE", "Directed_by", "=", "``", "Ben", "Jones", "''", ";"], "query_toks_no_value": ["select", "title", "from", "cartoon", "where", "directed_by", "=", "value"], "question": "List all cartoon directed by \"Ben Jones\".", "question_toks": ["List", "all", "cartoon", "directed", "by", "``", "Ben", "Jones", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "587", "answer_text": [["The Rise of the Blue Beetle!"], ["Day of the Dark Knight!"], ["Dawn of the Dead Man!"], ["The Eyes of Despero!"]], "trigger_words": ["Title"], "Prediction": "Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";"}
{"db_id": "tvshow", "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";", "query_toks": ["SELECT", "Title", "FROM", "Cartoon", "WHERE", "Directed_by", "=", "``", "Ben", "Jones", "''", ";"], "query_toks_no_value": ["select", "title", "from", "cartoon", "where", "directed_by", "=", "value"], "question": "What are the names of all cartoons directed by Ben Jones?", "question_toks": ["What", "are", "the", "names", "of", "all", "cartoons", "directed", "by", "Ben", "Jones", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "588", "answer_text": [["The Rise of the Blue Beetle!"], ["Day of the Dark Knight!"], ["Dawn of the Dead Man!"], ["The Eyes of Despero!"]], "trigger_words": ["Title"], "Prediction": "Title FROM Cartoon WHERE Directed_by = 'Ben Jones';"}
{"db_id": "tvshow", "query": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Cartoon", "WHERE", "Written_by", "=", "``", "Joseph", "Kuhr", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cartoon", "where", "written_by", "=", "value"], "question": "How many cartoons were written by \"Joseph Kuhr\"?", "question_toks": ["How", "many", "cartoons", "were", "written", "by", "``", "Joseph", "Kuhr", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"Joseph Kuhr\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "589", "answer_text": [[2]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";"}
{"db_id": "tvshow", "query": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Cartoon", "WHERE", "Written_by", "=", "``", "Joseph", "Kuhr", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "cartoon", "where", "written_by", "=", "value"], "question": "What is the number of cartoones written by Joseph Kuhr?", "question_toks": ["What", "is", "the", "number", "of", "cartoones", "written", "by", "Joseph", "Kuhr", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"Joseph Kuhr\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "590", "answer_text": [[2]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';"}
{"db_id": "tvshow", "query": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date", "query_toks": ["SELECT", "title", ",", "Directed_by", "FROM", "Cartoon", "ORDER", "BY", "Original_air_date"], "query_toks_no_value": ["select", "title", ",", "directed_by", "from", "cartoon", "order", "by", "original_air_date"], "question": "list all cartoon titles and their directors ordered by their air date", "question_toks": ["list", "all", "cartoon", "titles", "and", "their", "directors", "ordered", "by", "their", "air", "date"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 23, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "591", "answer_text": [["Invasion of the Secret Santas!", "Brandon Vietti"], ["Evil Under the Sea!", "Michael Chang"], ["Return of the Fearsome Fangs!", "Brandon Vietti"], ["Deep Cover for Batman!", "Michael Chang"], ["The Eyes of Despero!", "Ben Jones"], ["Dawn of the Dead Man!", "Ben Jones"], ["Day of the Dark Knight!", "Ben Jones"], ["Fall of the Blue Beetle!", "Brandon Vietti"], ["Journey to the Center of the Bat!", "Michael Chang"], ["Enter the Outsiders!", "Michael Chang"], ["The Rise of the Blue Beetle!", "Ben Jones"], ["Terror on Dinosaur Island!", "Brandon Vietti"]], "trigger_words": ["Title", "Directed By"], "Prediction": "Title, Directed_by FROM Cartoon ORDER BY Original_air_date;"}
{"db_id": "tvshow", "query": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date", "query_toks": ["SELECT", "title", ",", "Directed_by", "FROM", "Cartoon", "ORDER", "BY", "Original_air_date"], "query_toks_no_value": ["select", "title", ",", "directed_by", "from", "cartoon", "order", "by", "original_air_date"], "question": "What is the name and directors of all the cartoons that are ordered by air date?", "question_toks": ["What", "is", "the", "name", "and", "directors", "of", "all", "the", "cartoons", "that", "are", "ordered", "by", "air", "date", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 23, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "592", "answer_text": [["Invasion of the Secret Santas!", "Brandon Vietti"], ["Evil Under the Sea!", "Michael Chang"], ["Return of the Fearsome Fangs!", "Brandon Vietti"], ["Deep Cover for Batman!", "Michael Chang"], ["The Eyes of Despero!", "Ben Jones"], ["Dawn of the Dead Man!", "Ben Jones"], ["Day of the Dark Knight!", "Ben Jones"], ["Fall of the Blue Beetle!", "Brandon Vietti"], ["Journey to the Center of the Bat!", "Michael Chang"], ["Enter the Outsiders!", "Michael Chang"], ["The Rise of the Blue Beetle!", "Ben Jones"], ["Terror on Dinosaur Island!", "Brandon Vietti"]], "trigger_words": ["Title", "Directed By"], "Prediction": "Title, Directed_by \n FROM Cartoon \n ORDER BY Original_air_date;"}
{"db_id": "tvshow", "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";", "query_toks": ["SELECT", "Title", "FROM", "Cartoon", "WHERE", "Directed_by", "=", "``", "Ben", "Jones", "''", "OR", "Directed_by", "=", "``", "Brandon", "Vietti", "''", ";"], "query_toks_no_value": ["select", "title", "from", "cartoon", "where", "directed_by", "=", "value", "or", "directed_by", "=", "value"], "question": "List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".", "question_toks": ["List", "the", "title", "of", "all", "cartoon", "directed", "by", "``", "Ben", "Jones", "''", "or", "``", "Brandon", "Vietti", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null], "or", [false, 2, [0, [0, 21, false], null], "\"Brandon Vietti\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "593", "answer_text": [["The Rise of the Blue Beetle!"], ["Terror on Dinosaur Island!"], ["Day of the Dark Knight!"], ["Invasion of the Secret Santas!"], ["Dawn of the Dead Man!"], ["Fall of the Blue Beetle!"], ["The Eyes of Despero!"], ["Return of the Fearsome Fangs!"]], "trigger_words": ["Title"], "Prediction": "Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";"}
{"db_id": "tvshow", "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";", "query_toks": ["SELECT", "Title", "FROM", "Cartoon", "WHERE", "Directed_by", "=", "``", "Ben", "Jones", "''", "OR", "Directed_by", "=", "``", "Brandon", "Vietti", "''", ";"], "query_toks_no_value": ["select", "title", "from", "cartoon", "where", "directed_by", "=", "value", "or", "directed_by", "=", "value"], "question": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?", "question_toks": ["What", "are", "the", "titles", "of", "all", "cartoons", "directed", "by", "Ben", "Jones", "or", "Brandon", "Vietti", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null], "or", [false, 2, [0, [0, 21, false], null], "\"Brandon Vietti\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "594", "answer_text": [["The Rise of the Blue Beetle!"], ["Terror on Dinosaur Island!"], ["Day of the Dark Knight!"], ["Invasion of the Secret Santas!"], ["Dawn of the Dead Man!"], ["Fall of the Blue Beetle!"], ["The Eyes of Despero!"], ["Return of the Fearsome Fangs!"]], "trigger_words": ["Title"], "Prediction": "Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';"}
{"db_id": "tvshow", "query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "Country", ",", "count", "(", "*", ")", "FROM", "TV_Channel", "GROUP", "BY", "Country", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which country has the most of TV Channels? List the country and number of TV Channels it has.", "question_toks": ["Which", "country", "has", "the", "most", "of", "TV", "Channels", "?", "List", "the", "country", "and", "number", "of", "TV", "Channels", "it", "has", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "595", "answer_text": [["Italy", 12]], "trigger_words": ["Country", "Number"], "Prediction": "Country, COUNT(*) AS Number_of_Channels FROM TV_Channel GROUP BY Country ORDER BY Number_of_Channels DESC LIMIT 1;"}
{"db_id": "tvshow", "query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "Country", ",", "count", "(", "*", ")", "FROM", "TV_Channel", "GROUP", "BY", "Country", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the country with the most number of TV Channels and how many does it have?", "question_toks": ["What", "is", "the", "country", "with", "the", "most", "number", "of", "TV", "Channels", "and", "how", "many", "does", "it", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "596", "answer_text": [["Italy", 12]], "trigger_words": ["Country", "Number"], "Prediction": "Country, COUNT(*) AS num_channels\n FROM TV_Channel\n GROUP BY Country\n ORDER BY num_channels DESC\n LIMIT 1;"}
{"db_id": "tvshow", "query": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;", "query_toks": ["SELECT", "count", "(", "DISTINCT", "series_name", ")", ",", "count", "(", "DISTINCT", "content", ")", "FROM", "TV_Channel", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "series_name", ")", ",", "count", "(", "distinct", "content", ")", "from", "tv_channel"], "question": "List the number of different series names and contents in the TV Channel table.", "question_toks": ["List", "the", "number", "of", "different", "series", "names", "and", "contents", "in", "the", "TV", "Channel", "table", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 2, true], null]], [3, [0, [0, 5, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "597", "answer_text": [[15, 1]], "trigger_words": ["Number Of Series Name", "Number Of Content"], "Prediction": "COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel;"}
{"db_id": "tvshow", "query": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;", "query_toks": ["SELECT", "count", "(", "DISTINCT", "series_name", ")", ",", "count", "(", "DISTINCT", "content", ")", "FROM", "TV_Channel", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "series_name", ")", ",", "count", "(", "distinct", "content", ")", "from", "tv_channel"], "question": "How many different series and contents are listed in the TV Channel table?", "question_toks": ["How", "many", "different", "series", "and", "contents", "are", "listed", "in", "the", "TV", "Channel", "table", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 2, true], null]], [3, [0, [0, 5, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "598", "answer_text": [[15, 1]], "trigger_words": ["Number Of Series Name", "Number Of Content"], "Prediction": "COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel;"}
{"db_id": "tvshow", "query": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";", "query_toks": ["SELECT", "Content", "FROM", "TV_Channel", "WHERE", "series_name", "=", "``", "Sky", "Radio", "''", ";"], "query_toks_no_value": ["select", "content", "from", "tv_channel", "where", "series_name", "=", "value"], "question": "What is the content of TV Channel with serial name \"Sky Radio\"?", "question_toks": ["What", "is", "the", "content", "of", "TV", "Channel", "with", "serial", "name", "``", "Sky", "Radio", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "599", "answer_text": [["music"]], "trigger_words": ["Content"], "Prediction": "* FROM TV_Channel WHERE series_name = \"Sky Radio\";"}
{"db_id": "tvshow", "query": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";", "query_toks": ["SELECT", "Content", "FROM", "TV_Channel", "WHERE", "series_name", "=", "``", "Sky", "Radio", "''", ";"], "query_toks_no_value": ["select", "content", "from", "tv_channel", "where", "series_name", "=", "value"], "question": "What is the content of the series Sky Radio?", "question_toks": ["What", "is", "the", "content", "of", "the", "series", "Sky", "Radio", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "600", "answer_text": [["music"]], "trigger_words": ["Content"], "Prediction": "TV_Channel.Content \nFROM TV_Channel \nINNER JOIN TV_series ON TV_Channel.id = TV_series.Channel \nWHERE TV_Channel.series_name = 'Sky Radio';"}
{"db_id": "tvshow", "query": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";", "query_toks": ["SELECT", "Package_Option", "FROM", "TV_Channel", "WHERE", "series_name", "=", "``", "Sky", "Radio", "''", ";"], "query_toks_no_value": ["select", "package_option", "from", "tv_channel", "where", "series_name", "=", "value"], "question": "What is the Package Option of TV Channel with serial name \"Sky Radio\"?", "question_toks": ["What", "is", "the", "Package", "Option", "of", "TV", "Channel", "with", "serial", "name", "``", "Sky", "Radio", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "601", "answer_text": [["Sky Famiglia"]], "trigger_words": ["Package Option"], "Prediction": "Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";"}
{"db_id": "tvshow", "query": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";", "query_toks": ["SELECT", "Package_Option", "FROM", "TV_Channel", "WHERE", "series_name", "=", "``", "Sky", "Radio", "''", ";"], "query_toks_no_value": ["select", "package_option", "from", "tv_channel", "where", "series_name", "=", "value"], "question": "What are the Package Options of the TV Channels whose series names are Sky Radio?", "question_toks": ["What", "are", "the", "Package", "Options", "of", "the", "TV", "Channels", "whose", "series", "names", "are", "Sky", "Radio", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "602", "answer_text": [["Sky Famiglia"]], "trigger_words": ["Package Option"], "Prediction": "TV_Channel.Package_Option FROM TV_Channel JOIN TV_series ON TV_Channel.id=TV_series.Channel WHERE TV_Channel.series_name='Sky Radio';"}
{"db_id": "tvshow", "query": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "TV_Channel", "WHERE", "LANGUAGE", "=", "``", "English", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "tv_channel", "where", "language", "=", "value"], "question": "How many TV Channel using language English?", "question_toks": ["How", "many", "TV", "Channel", "using", "language", "English", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "603", "answer_text": [[3]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM TV_Channel WHERE Language='English';"}
{"db_id": "tvshow", "query": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "TV_Channel", "WHERE", "LANGUAGE", "=", "``", "English", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "tv_channel", "where", "language", "=", "value"], "question": "How many TV Channels use the English language?", "question_toks": ["How", "many", "TV", "Channels", "use", "the", "English", "language", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "604", "answer_text": [[3]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM TV_Channel WHERE Language='English';"}
{"db_id": "tvshow", "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;", "query_toks": ["SELECT", "LANGUAGE", ",", "count", "(", "*", ")", "FROM", "TV_Channel", "GROUP", "BY", "LANGUAGE", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "language", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "language", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "List the language used least number of TV Channel. List language and number of TV Channel.", "question_toks": ["List", "the", "language", "used", "least", "number", "of", "TV", "Channel", ".", "List", "language", "and", "number", "of", "TV", "Channel", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "605", "answer_text": [["English", 3]], "trigger_words": ["Language", "Number"], "Prediction": "Language, COUNT(*) AS num_channels\n FROM TV_Channel\n GROUP BY Language\n ORDER BY num_channels ASC\n LIMIT 1;"}
{"db_id": "tvshow", "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;", "query_toks": ["SELECT", "LANGUAGE", ",", "count", "(", "*", ")", "FROM", "TV_Channel", "GROUP", "BY", "LANGUAGE", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "language", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "language", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "What are the languages used by the least number of TV Channels and how many channels use it?", "question_toks": ["What", "are", "the", "languages", "used", "by", "the", "least", "number", "of", "TV", "Channels", "and", "how", "many", "channels", "use", "it", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "606", "answer_text": [["English", 3]], "trigger_words": ["Language", "Number"], "Prediction": "Language, COUNT(*) AS num_channels\n FROM TV_Channel\n GROUP BY Language\n ORDER BY num_channels ASC\n LIMIT 1;"}
{"db_id": "tvshow", "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE", "query_toks": ["SELECT", "LANGUAGE", ",", "count", "(", "*", ")", "FROM", "TV_Channel", "GROUP", "BY", "LANGUAGE"], "query_toks_no_value": ["select", "language", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "language"], "question": "List each language and the number of TV Channels using it.", "question_toks": ["List", "each", "language", "and", "the", "number", "of", "TV", "Channels", "using", "it", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "607", "answer_text": [["English", 3], ["Italian", 12]], "trigger_words": ["Language", "Number"], "Prediction": "Language, COUNT(*) FROM TV_Channel GROUP BY Language;"}
{"db_id": "tvshow", "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE", "query_toks": ["SELECT", "LANGUAGE", ",", "count", "(", "*", ")", "FROM", "TV_Channel", "GROUP", "BY", "LANGUAGE"], "query_toks_no_value": ["select", "language", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "language"], "question": "For each language, list the number of TV Channels that use it.", "question_toks": ["For", "each", "language", ",", "list", "the", "number", "of", "TV", "Channels", "that", "use", "it", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "608", "answer_text": [["English", 3], ["Italian", 12]], "trigger_words": ["Language", "Number"], "Prediction": "Language, COUNT(*) FROM TV_Channel GROUP BY Language;"}
{"db_id": "tvshow", "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";", "query_toks": ["SELECT", "T1.series_name", "FROM", "TV_Channel", "AS", "T1", "JOIN", "Cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T2.Title", "=", "``", "The", "Rise", "of", "the", "Blue", "Beetle", "!", "``", ";"], "query_toks_no_value": ["select", "t1", ".", "series_name", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t2", ".", "title", "=", "value"], "question": "What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.", "question_toks": ["What", "is", "the", "TV", "Channel", "that", "shows", "the", "cartoon", "``", "The", "Rise", "of", "the", "Blue", "Beetle", "!", "''", "?", "List", "the", "TV", "Channel", "'s", "series", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"The Rise of the Blue Beetle!\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "609", "answer_text": [["Sky Radio"]], "trigger_words": ["Series Name"], "Prediction": "TV_Channel.series_name \nFROM Cartoon \nJOIN TV_Channel ON Cartoon.Channel=TV_Channel.id \nWHERE Cartoon.Title=\"The Rise of the Blue Beetle!\";"}
{"db_id": "tvshow", "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";", "query_toks": ["SELECT", "T1.series_name", "FROM", "TV_Channel", "AS", "T1", "JOIN", "Cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T2.Title", "=", "``", "The", "Rise", "of", "the", "Blue", "Beetle", "!", "``", ";"], "query_toks_no_value": ["select", "t1", ".", "series_name", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t2", ".", "title", "=", "value"], "question": "What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?", "question_toks": ["What", "is", "the", "series", "name", "of", "the", "TV", "Channel", "that", "shows", "the", "cartoon", "``", "The", "Rise", "of", "the", "Blue", "Beetle", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"The Rise of the Blue Beetle!\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "610", "answer_text": [["Sky Radio"]], "trigger_words": ["Series Name"], "Prediction": "TV_Channel.series_name \nFROM Cartoon \nJOIN TV_Channel ON Cartoon.Channel=TV_Channel.id \nWHERE Cartoon.Title=\"The Rise of the Blue Beetle\";"}
{"db_id": "tvshow", "query": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "query_toks": ["SELECT", "T2.Title", "FROM", "TV_Channel", "AS", "T1", "JOIN", "Cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T1.series_name", "=", "``", "Sky", "Radio", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "title", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t1", ".", "series_name", "=", "value"], "question": "List the title of all  Cartoons showed on TV Channel with series name \"Sky Radio\".", "question_toks": ["List", "the", "title", "of", "all", "Cartoons", "showed", "on", "TV", "Channel", "with", "series", "name", "``", "Sky", "Radio", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "611", "answer_text": [["The Rise of the Blue Beetle!"], ["Return of the Fearsome Fangs!"]], "trigger_words": ["Title"], "Prediction": "Cartoon.Title \nFROM Cartoon \nJOIN TV_Channel ON Cartoon.Channel=TV_Channel.id \nWHERE TV_Channel.series_name=\"Sky Radio\";"}
{"db_id": "tvshow", "query": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "query_toks": ["SELECT", "T2.Title", "FROM", "TV_Channel", "AS", "T1", "JOIN", "Cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T1.series_name", "=", "``", "Sky", "Radio", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "title", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t1", ".", "series_name", "=", "value"], "question": "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?", "question_toks": ["What", "is", "the", "title", "of", "all", "the", "cartools", "that", "are", "on", "the", "TV", "Channel", "with", "the", "series", "name", "``", "Sky", "Radio", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "612", "answer_text": [["The Rise of the Blue Beetle!"], ["Return of the Fearsome Fangs!"]], "trigger_words": ["Title"], "Prediction": "Cartoon.Title \nFROM Cartoon \nJOIN TV_Channel ON Cartoon.Channel=TV_Channel.id \nWHERE TV_Channel.series_name=\"Sky Radio\";"}
{"db_id": "tvshow", "query": "SELECT Episode FROM TV_series ORDER BY rating", "query_toks": ["SELECT", "Episode", "FROM", "TV_series", "ORDER", "BY", "rating"], "query_toks_no_value": ["select", "episode", "from", "tv_series", "order", "by", "rating"], "question": "List the Episode of all TV series sorted by rating.", "question_toks": ["List", "the", "Episode", "of", "all", "TV", "series", "sorted", "by", "rating", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "613", "answer_text": [["The Hanged Man"], ["Double Down"], ["Home By Another Way"], ["Keepers"], ["Emily"], ["Blowback"], ["The Legend of Dylan McCleen"], ["Winterland"], ["The Year of the Rabbit"], ["Game Three"], ["Friendly Skies"], ["A Love of a Lifetime"]], "trigger_words": ["Episode"], "Prediction": "Episode FROM TV_series ORDER BY Rating DESC;"}
{"db_id": "tvshow", "query": "SELECT Episode FROM TV_series ORDER BY rating", "query_toks": ["SELECT", "Episode", "FROM", "TV_series", "ORDER", "BY", "rating"], "query_toks_no_value": ["select", "episode", "from", "tv_series", "order", "by", "rating"], "question": "What are all of the episodes ordered by ratings?", "question_toks": ["What", "are", "all", "of", "the", "episodes", "ordered", "by", "ratings", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "614", "answer_text": [["The Hanged Man"], ["Double Down"], ["Home By Another Way"], ["Keepers"], ["Emily"], ["Blowback"], ["The Legend of Dylan McCleen"], ["Winterland"], ["The Year of the Rabbit"], ["Game Three"], ["Friendly Skies"], ["A Love of a Lifetime"]], "trigger_words": ["Episode"], "Prediction": "TV_series.Episode \nFROM TV_series \nORDER BY TV_series.Rating DESC;"}
{"db_id": "tvshow", "query": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;", "query_toks": ["SELECT", "Episode", ",", "Rating", "FROM", "TV_series", "ORDER", "BY", "Rating", "DESC", "LIMIT", "3", ";"], "query_toks_no_value": ["select", "episode", ",", "rating", "from", "tv_series", "order", "by", "rating", "desc", "limit", "value"], "question": "List top 3 highest Rating  TV series. List the TV series's Episode and Rating.", "question_toks": ["List", "top", "3", "highest", "Rating", "TV", "series", ".", "List", "the", "TV", "series", "'s", "Episode", "and", "Rating", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 13, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}, "id": "615", "answer_text": [["A Love of a Lifetime", "5.8"], ["Friendly Skies", "5.3"], ["Game Three", "4.4"]], "trigger_words": ["Episode", "Rating"], "Prediction": "Episode, Rating \n FROM TV_series \n ORDER BY Rating DESC \n LIMIT 3;"}
{"db_id": "tvshow", "query": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;", "query_toks": ["SELECT", "Episode", ",", "Rating", "FROM", "TV_series", "ORDER", "BY", "Rating", "DESC", "LIMIT", "3", ";"], "query_toks_no_value": ["select", "episode", ",", "rating", "from", "tv_series", "order", "by", "rating", "desc", "limit", "value"], "question": "What are 3 most highly rated episodes in the TV series table and what were those ratings?", "question_toks": ["What", "are", "3", "most", "highly", "rated", "episodes", "in", "the", "TV", "series", "table", "and", "what", "were", "those", "ratings", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 13, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}, "id": "616", "answer_text": [["A Love of a Lifetime", "5.8"], ["Friendly Skies", "5.3"], ["Game Three", "4.4"]], "trigger_words": ["Episode", "Rating"], "Prediction": "Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;"}
{"db_id": "tvshow", "query": "SELECT max(SHARE) , min(SHARE) FROM TV_series;", "query_toks": ["SELECT", "max", "(", "SHARE", ")", ",", "min", "(", "SHARE", ")", "FROM", "TV_series", ";"], "query_toks_no_value": ["select", "max", "(", "share", ")", ",", "min", "(", "share", ")", "from", "tv_series"], "question": "What is minimum and maximum share of TV series?", "question_toks": ["What", "is", "minimum", "and", "maximum", "share", "of", "TV", "series", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]], [2, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "617", "answer_text": [[9.0, 5.0]], "trigger_words": ["Maximal Number", "Minimal Number"], "Prediction": "MIN(Share), MAX(Share) FROM TV_series;"}
{"db_id": "tvshow", "query": "SELECT max(SHARE) , min(SHARE) FROM TV_series;", "query_toks": ["SELECT", "max", "(", "SHARE", ")", ",", "min", "(", "SHARE", ")", "FROM", "TV_series", ";"], "query_toks_no_value": ["select", "max", "(", "share", ")", ",", "min", "(", "share", ")", "from", "tv_series"], "question": "What is the maximum and minimum share for the TV series?", "question_toks": ["What", "is", "the", "maximum", "and", "minimum", "share", "for", "the", "TV", "series", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]], [2, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "618", "answer_text": [[9.0, 5.0]], "trigger_words": ["Maximal Number", "Minimal Number"], "Prediction": "MAX(Share), MIN(Share) FROM TV_series;"}
{"db_id": "tvshow", "query": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "query_toks": ["SELECT", "Air_Date", "FROM", "TV_series", "WHERE", "Episode", "=", "``", "A", "Love", "of", "a", "Lifetime", "''", ";"], "query_toks_no_value": ["select", "air_date", "from", "tv_series", "where", "episode", "=", "value"], "question": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?", "question_toks": ["What", "is", "the", "air", "date", "of", "TV", "series", "with", "Episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"A Love of a Lifetime\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "619", "answer_text": [["September 24, 2007"]], "trigger_words": ["Air Date"], "Prediction": "Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";"}
{"db_id": "tvshow", "query": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "query_toks": ["SELECT", "Air_Date", "FROM", "TV_series", "WHERE", "Episode", "=", "``", "A", "Love", "of", "a", "Lifetime", "''", ";"], "query_toks_no_value": ["select", "air_date", "from", "tv_series", "where", "episode", "=", "value"], "question": "When did the episode \"A Love of a Lifetime\" air?", "question_toks": ["When", "did", "the", "episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "air", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"A Love of a Lifetime\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "620", "answer_text": [["September 24, 2007"]], "trigger_words": ["Air Date"], "Prediction": "Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";"}
{"db_id": "tvshow", "query": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "query_toks": ["SELECT", "Weekly_Rank", "FROM", "TV_series", "WHERE", "Episode", "=", "``", "A", "Love", "of", "a", "Lifetime", "''", ";"], "query_toks_no_value": ["select", "weekly_rank", "from", "tv_series", "where", "episode", "=", "value"], "question": "What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?", "question_toks": ["What", "is", "Weekly", "Rank", "of", "TV", "series", "with", "Episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"A Love of a Lifetime\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "621", "answer_text": [[43.0]], "trigger_words": ["Weekly Rank"], "Prediction": "Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";"}
{"db_id": "tvshow", "query": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "query_toks": ["SELECT", "Weekly_Rank", "FROM", "TV_series", "WHERE", "Episode", "=", "``", "A", "Love", "of", "a", "Lifetime", "''", ";"], "query_toks_no_value": ["select", "weekly_rank", "from", "tv_series", "where", "episode", "=", "value"], "question": "What is the weekly rank for the episode \"A Love of a Lifetime\"?", "question_toks": ["What", "is", "the", "weekly", "rank", "for", "the", "episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"A Love of a Lifetime\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "622", "answer_text": [[43.0]], "trigger_words": ["Weekly Rank"], "Prediction": "Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";"}
{"db_id": "tvshow", "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";", "query_toks": ["SELECT", "T1.series_name", "FROM", "TV_Channel", "AS", "T1", "JOIN", "TV_series", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T2.Episode", "=", "``", "A", "Love", "of", "a", "Lifetime", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "series_name", "from", "tv_channel", "as", "t1", "join", "tv_series", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t2", ".", "episode", "=", "value"], "question": "What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.", "question_toks": ["What", "is", "the", "TV", "Channel", "of", "TV", "series", "with", "Episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "?", "List", "the", "TV", "Channel", "'s", "series", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"A Love of a Lifetime\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "623", "answer_text": [["Sky Radio"]], "trigger_words": ["Series Name"], "Prediction": "TV_Channel.series_name FROM TV_series \n JOIN TV_Channel ON TV_series.Channel=TV_Channel.id \n WHERE TV_series.Episode=\"A Love of a Lifetime\";"}
{"db_id": "tvshow", "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";", "query_toks": ["SELECT", "T1.series_name", "FROM", "TV_Channel", "AS", "T1", "JOIN", "TV_series", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T2.Episode", "=", "``", "A", "Love", "of", "a", "Lifetime", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "series_name", "from", "tv_channel", "as", "t1", "join", "tv_series", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t2", ".", "episode", "=", "value"], "question": "What is the name of the series that has the episode \"A Love of a Lifetime\"?", "question_toks": ["What", "is", "the", "name", "of", "the", "series", "that", "has", "the", "episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"A Love of a Lifetime\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "624", "answer_text": [["Sky Radio"]], "trigger_words": ["Series Name"], "Prediction": "Cartoon.Title \n FROM Cartoon \n JOIN TV_series ON Cartoon.id = TV_series.id \n WHERE TV_series.Episode = \"A Love of a Lifetime\";"}
{"db_id": "tvshow", "query": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "query_toks": ["SELECT", "T2.Episode", "FROM", "TV_Channel", "AS", "T1", "JOIN", "TV_series", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T1.series_name", "=", "``", "Sky", "Radio", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "episode", "from", "tv_channel", "as", "t1", "join", "tv_series", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t1", ".", "series_name", "=", "value"], "question": "List the Episode of all  TV series showed on TV Channel with series name \"Sky Radio\".", "question_toks": ["List", "the", "Episode", "of", "all", "TV", "series", "showed", "on", "TV", "Channel", "with", "series", "name", "``", "Sky", "Radio", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "625", "answer_text": [["A Love of a Lifetime"], ["Keepers"]], "trigger_words": ["Episode"], "Prediction": "TV_series.Episode \n FROM TV_series \n JOIN TV_Channel ON TV_series.Channel=TV_Channel.id \n WHERE TV_Channel.series_name=\"Sky Radio\";"}
{"db_id": "tvshow", "query": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "query_toks": ["SELECT", "T2.Episode", "FROM", "TV_Channel", "AS", "T1", "JOIN", "TV_series", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T1.series_name", "=", "``", "Sky", "Radio", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "episode", "from", "tv_channel", "as", "t1", "join", "tv_series", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t1", ".", "series_name", "=", "value"], "question": "What is the episode for the TV series named \"Sky Radio\"?", "question_toks": ["What", "is", "the", "episode", "for", "the", "TV", "series", "named", "``", "Sky", "Radio", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "626", "answer_text": [["A Love of a Lifetime"], ["Keepers"]], "trigger_words": ["Episode"], "Prediction": "TV_series.Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel=TV_Channel.id WHERE TV_Channel.series_name=\"Sky Radio\";"}
{"db_id": "tvshow", "query": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "Directed_by", "FROM", "cartoon", "GROUP", "BY", "Directed_by"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "directed_by", "from", "cartoon", "group", "by", "directed_by"], "question": "Find the number of cartoons directed by each of the listed directors.", "question_toks": ["Find", "the", "number", "of", "cartoons", "directed", "by", "each", "of", "the", "listed", "directors", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [[0, 21, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "627", "answer_text": [[4, "Ben Jones"], [4, "Brandon Vietti"], [4, "Michael Chang"]], "trigger_words": ["Number", "Directed By"], "Prediction": "Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by;"}
{"db_id": "tvshow", "query": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "Directed_by", "FROM", "cartoon", "GROUP", "BY", "Directed_by"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "directed_by", "from", "cartoon", "group", "by", "directed_by"], "question": "How many cartoons did each director create?", "question_toks": ["How", "many", "cartoons", "did", "each", "director", "create", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [[0, 21, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "628", "answer_text": [[4, "Ben Jones"], [4, "Brandon Vietti"], [4, "Michael Chang"]], "trigger_words": ["Number", "Directed By"], "Prediction": "Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by;"}
{"db_id": "tvshow", "query": "select production_code ,  channel from cartoon order by original_air_date desc limit 1", "query_toks": ["select", "production_code", ",", "channel", "from", "cartoon", "order", "by", "original_air_date", "desc", "limit", "1"], "query_toks_no_value": ["select", "production_code", ",", "channel", "from", "cartoon", "order", "by", "original_air_date", "desc", "limit", "value"], "question": "Find the production code and channel of the most recently aired cartoon .", "question_toks": ["Find", "the", "production", "code", "and", "channel", "of", "the", "most", "recently", "aired", "cartoon", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 23, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "629", "answer_text": [[102.0, "701"]], "trigger_words": ["Production Code", "Channel"], "Prediction": "Production_code, Channel \nFROM Cartoon \nWHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon)"}
{"db_id": "tvshow", "query": "select production_code ,  channel from cartoon order by original_air_date desc limit 1", "query_toks": ["select", "production_code", ",", "channel", "from", "cartoon", "order", "by", "original_air_date", "desc", "limit", "1"], "query_toks_no_value": ["select", "production_code", ",", "channel", "from", "cartoon", "order", "by", "original_air_date", "desc", "limit", "value"], "question": "What is the produdction code and channel of the most recent cartoon ?", "question_toks": ["What", "is", "the", "produdction", "code", "and", "channel", "of", "the", "most", "recent", "cartoon", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 23, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "630", "answer_text": [[102.0, "701"]], "trigger_words": ["Production Code", "Channel"], "Prediction": "Production_code, Channel FROM Cartoon WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon);"}
{"db_id": "tvshow", "query": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"", "query_toks": ["SELECT", "package_option", ",", "series_name", "FROM", "TV_Channel", "WHERE", "hight_definition_TV", "=", "``", "yes", "''"], "query_toks_no_value": ["select", "package_option", ",", "series_name", "from", "tv_channel", "where", "hight_definition_tv", "=", "value"], "question": "Find the package choice and series name of the TV channel that has high definition TV.", "question_toks": ["Find", "the", "package", "choice", "and", "series", "name", "of", "the", "TV", "channel", "that", "has", "high", "definition", "TV", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"yes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "631", "answer_text": [["Sky Famiglia + Sky HD", "MTV Live HD"]], "trigger_words": ["Package Option", "Series Name"], "Prediction": "TV_Channel.Package_Option, TV_Channel.series_name \n FROM TV_Channel \n WHERE TV_Channel.Hight_definition_TV = 1;"}
{"db_id": "tvshow", "query": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"", "query_toks": ["SELECT", "package_option", ",", "series_name", "FROM", "TV_Channel", "WHERE", "hight_definition_TV", "=", "``", "yes", "''"], "query_toks_no_value": ["select", "package_option", ",", "series_name", "from", "tv_channel", "where", "hight_definition_tv", "=", "value"], "question": "What are the package options and the name of the series for the TV Channel that supports high definition TV?", "question_toks": ["What", "are", "the", "package", "options", "and", "the", "name", "of", "the", "series", "for", "the", "TV", "Channel", "that", "supports", "high", "definition", "TV", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"yes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "632", "answer_text": [["Sky Famiglia + Sky HD", "MTV Live HD"]], "trigger_words": ["Package Option", "Series Name"], "Prediction": "TV_Channel.Package_Option, TV_series.series_name \n FROM TV_Channel \n JOIN TV_series ON TV_Channel.id = TV_series.Channel \n WHERE TV_Channel.Hight_definition_TV = 1;"}
{"db_id": "tvshow", "query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "query_toks": ["SELECT", "T1.country", "FROM", "TV_Channel", "AS", "T1", "JOIN", "cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T2.written_by", "=", "'Todd", "Casey", "'"], "query_toks_no_value": ["select", "t1", ".", "country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t2", ".", "written_by", "=", "value"], "question": "which countries' tv channels are playing some cartoon written by Todd Casey?", "question_toks": ["which", "countries", "'", "tv", "channels", "are", "playing", "some", "cartoon", "written", "by", "Todd", "Casey", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"Todd Casey\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "633", "answer_text": [["United Kingdom"], ["Italy"]], "trigger_words": ["Country"], "Prediction": "TV_Channel.Country\nFROM Cartoon\nJOIN TV_Channel ON Cartoon.Channel=TV_Channel.id\nWHERE Cartoon.Written_by='Todd Casey';"}
{"db_id": "tvshow", "query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "query_toks": ["SELECT", "T1.country", "FROM", "TV_Channel", "AS", "T1", "JOIN", "cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T2.written_by", "=", "'Todd", "Casey", "'"], "query_toks_no_value": ["select", "t1", ".", "country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t2", ".", "written_by", "=", "value"], "question": "What are the countries that have cartoons on TV that were written by Todd Casey?", "question_toks": ["What", "are", "the", "countries", "that", "have", "cartoons", "on", "TV", "that", "were", "written", "by", "Todd", "Casey", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"Todd Casey\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "634", "answer_text": [["United Kingdom"], ["Italy"]], "trigger_words": ["Country"], "Prediction": "TV_Channel.Country\n FROM Cartoon\n JOIN TV_Channel ON Cartoon.Channel=TV_Channel.id\n WHERE Cartoon.Written_by='Todd Casey';"}
{"db_id": "tvshow", "query": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "query_toks": ["SELECT", "country", "FROM", "TV_Channel", "EXCEPT", "SELECT", "T1.country", "FROM", "TV_Channel", "AS", "T1", "JOIN", "cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T2.written_by", "=", "'Todd", "Casey", "'"], "query_toks_no_value": ["select", "country", "from", "tv_channel", "except", "select", "t1", ".", "country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t2", ".", "written_by", "=", "value"], "question": "which countries' tv channels are not playing any cartoon written by Todd Casey?", "question_toks": ["which", "countries", "'", "tv", "channels", "are", "not", "playing", "any", "cartoon", "written", "by", "Todd", "Casey", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"Todd Casey\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "635", "answer_text": [["Poland"]], "trigger_words": ["Country"], "Prediction": "TV_Channel.Country\nFROM TV_Channel\nWHERE TV_Channel.id NOT IN (\n  SELECT Cartoon.Channel\n  FROM Cartoon\n  WHERE Cartoon.Written_by = 'Todd Casey'\n);"}
{"db_id": "tvshow", "query": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "query_toks": ["SELECT", "country", "FROM", "TV_Channel", "EXCEPT", "SELECT", "T1.country", "FROM", "TV_Channel", "AS", "T1", "JOIN", "cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T2.written_by", "=", "'Todd", "Casey", "'"], "query_toks_no_value": ["select", "country", "from", "tv_channel", "except", "select", "t1", ".", "country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t2", ".", "written_by", "=", "value"], "question": "What are the countries that are not playing cartoons written by Todd Casey?", "question_toks": ["What", "are", "the", "countries", "that", "are", "not", "playing", "cartoons", "written", "by", "Todd", "Casey", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"Todd Casey\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "636", "answer_text": [["Poland"]], "trigger_words": ["Country"], "Prediction": "TV_Channel.Country\nFROM TV_Channel\nWHERE TV_Channel.id NOT IN (\n    SELECT Cartoon.Channel\n    FROM Cartoon\n    WHERE Cartoon.Written_by = 'Todd Casey'\n);"}
{"db_id": "tvshow", "query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'", "query_toks": ["SELECT", "T1.series_name", ",", "T1.country", "FROM", "TV_Channel", "AS", "T1", "JOIN", "cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T2.directed_by", "=", "'Michael", "Chang", "'", "INTERSECT", "SELECT", "T1.series_name", ",", "T1.country", "FROM", "TV_Channel", "AS", "T1", "JOIN", "cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T2.directed_by", "=", "'Ben", "Jones", "'"], "query_toks_no_value": ["select", "t1", ".", "series_name", ",", "t1", ".", "country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t2", ".", "directed_by", "=", "value", "intersect", "select", "t1", ".", "series_name", ",", "t1", ".", "country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t2", ".", "directed_by", "=", "value"], "question": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?", "question_toks": ["Find", "the", "series", "name", "and", "country", "of", "the", "tv", "channel", "that", "is", "playing", "some", "cartoons", "directed", "by", "Ben", "Jones", "and", "Michael", "Chang", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Michael Chang\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "637", "answer_text": [["MTV Dance", "United Kingdom"]], "trigger_words": ["Series Name", "Country"], "Prediction": "TV_Channel.series_name, TV_Channel.Country\n FROM Cartoon\n JOIN TV_Channel ON Cartoon.Channel=TV_Channel.id\n WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang');"}
{"db_id": "tvshow", "query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'", "query_toks": ["SELECT", "T1.series_name", ",", "T1.country", "FROM", "TV_Channel", "AS", "T1", "JOIN", "cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T2.directed_by", "=", "'Michael", "Chang", "'", "INTERSECT", "SELECT", "T1.series_name", ",", "T1.country", "FROM", "TV_Channel", "AS", "T1", "JOIN", "cartoon", "AS", "T2", "ON", "T1.id", "=", "T2.Channel", "WHERE", "T2.directed_by", "=", "'Ben", "Jones", "'"], "query_toks_no_value": ["select", "t1", ".", "series_name", ",", "t1", ".", "country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t2", ".", "directed_by", "=", "value", "intersect", "select", "t1", ".", "series_name", ",", "t1", ".", "country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "channel", "where", "t2", ".", "directed_by", "=", "value"], "question": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?", "question_toks": ["What", "is", "the", "series", "name", "and", "country", "of", "all", "TV", "channels", "that", "are", "playing", "cartoons", "directed", "by", "Ben", "Jones", "and", "cartoons", "directed", "by", "Michael", "Chang", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Michael Chang\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "638", "answer_text": [["MTV Dance", "United Kingdom"]], "trigger_words": ["Series Name", "Country"], "Prediction": "TV_Channel.series_name, TV_Channel.Country \n FROM TV_Channel \n JOIN Cartoon ON Cartoon.Channel=TV_Channel.id \n WHERE Cartoon.Directed_by='Ben Jones' OR Cartoon.Directed_by='Michael Chang';"}
{"db_id": "tvshow", "query": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'", "query_toks": ["SELECT", "Pixel_aspect_ratio_PAR", ",", "country", "FROM", "tv_channel", "WHERE", "LANGUAGE", "!", "=", "'English", "'"], "query_toks_no_value": ["select", "pixel_aspect_ratio_par", ",", "country", "from", "tv_channel", "where", "language", "!", "=", "value"], "question": "find the pixel aspect ratio and nation of the tv channels that do not use English.", "question_toks": ["find", "the", "pixel", "aspect", "ratio", "and", "nation", "of", "the", "tv", "channels", "that", "do", "not", "use", "English", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "639", "answer_text": [["4:3", "Italy"], ["4:3", "Italy"], ["4:3 / 16:9", "Italy"], ["16:9", "Italy"], ["4:3", "Italy"], ["16:9", "Italy"], ["4:3", "Italy"], ["16:9", "Italy"], ["4:3 / 16:9", "Italy"], ["4:3 / 16:9", "Italy"], ["4:3", "Italy"], ["4:3", "Italy"]], "trigger_words": ["Pixel Aspect Ratio Par", "Country"], "Prediction": "Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';"}
{"db_id": "tvshow", "query": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'", "query_toks": ["SELECT", "Pixel_aspect_ratio_PAR", ",", "country", "FROM", "tv_channel", "WHERE", "LANGUAGE", "!", "=", "'English", "'"], "query_toks_no_value": ["select", "pixel_aspect_ratio_par", ",", "country", "from", "tv_channel", "where", "language", "!", "=", "value"], "question": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?", "question_toks": ["What", "is", "the", "pixel", "aspect", "ratio", "and", "country", "of", "origin", "for", "all", "TV", "channels", "that", "do", "not", "use", "English", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "640", "answer_text": [["4:3", "Italy"], ["4:3", "Italy"], ["4:3 / 16:9", "Italy"], ["16:9", "Italy"], ["4:3", "Italy"], ["16:9", "Italy"], ["4:3", "Italy"], ["16:9", "Italy"], ["4:3 / 16:9", "Italy"], ["4:3 / 16:9", "Italy"], ["4:3", "Italy"], ["4:3", "Italy"]], "trigger_words": ["Pixel Aspect Ratio Par", "Country"], "Prediction": "Pixel_aspect_ratio_PAR, Country \n FROM TV_Channel \n WHERE Language != 'English';"}
{"db_id": "tvshow", "query": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2", "query_toks": ["SELECT", "id", "FROM", "tv_channel", "GROUP", "BY", "country", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "id", "from", "tv_channel", "group", "by", "country", "having", "count", "(", "*", ")", ">", "value"], "question": "find id of the tv channels that from the countries where have more than two tv channels.", "question_toks": ["find", "id", "of", "the", "tv", "channels", "that", "from", "the", "countries", "where", "have", "more", "than", "two", "tv", "channels", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "641", "answer_text": [["700"]], "trigger_words": ["Id"], "Prediction": "id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(*) > 2);"}
{"db_id": "tvshow", "query": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2", "query_toks": ["SELECT", "id", "FROM", "tv_channel", "GROUP", "BY", "country", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "id", "from", "tv_channel", "group", "by", "country", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the ids of all tv channels that have more than 2 TV channels?", "question_toks": ["What", "are", "the", "ids", "of", "all", "tv", "channels", "that", "have", "more", "than", "2", "TV", "channels", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "642", "answer_text": [["700"]], "trigger_words": ["Id"], "Prediction": "TV_Channel.id \nFROM TV_Channel \nWHERE (SELECT COUNT(*) FROM TV_Channel) > 2;"}
{"db_id": "tvshow", "query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'", "query_toks": ["SELECT", "id", "FROM", "TV_Channel", "EXCEPT", "SELECT", "channel", "FROM", "cartoon", "WHERE", "directed_by", "=", "'Ben", "Jones", "'"], "query_toks_no_value": ["select", "id", "from", "tv_channel", "except", "select", "channel", "from", "cartoon", "where", "directed_by", "=", "value"], "question": "find the id of tv channels that do not play any cartoon directed by Ben Jones.", "question_toks": ["find", "the", "id", "of", "tv", "channels", "that", "do", "not", "play", "any", "cartoon", "directed", "by", "Ben", "Jones", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "643", "answer_text": [["701"], ["703"], ["705"], ["706"], ["708"], ["709"], ["713"], ["714"], ["715"], ["717"], ["719"]], "trigger_words": ["Id"], "Prediction": "TV_Channel.id \nFROM TV_Channel \nLEFT JOIN Cartoon ON Cartoon.Channel=TV_Channel.id \nWHERE Cartoon.Directed_by != 'Ben Jones' OR Cartoon.Directed_by IS NULL;"}
{"db_id": "tvshow", "query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'", "query_toks": ["SELECT", "id", "FROM", "TV_Channel", "EXCEPT", "SELECT", "channel", "FROM", "cartoon", "WHERE", "directed_by", "=", "'Ben", "Jones", "'"], "query_toks_no_value": ["select", "id", "from", "tv_channel", "except", "select", "channel", "from", "cartoon", "where", "directed_by", "=", "value"], "question": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?", "question_toks": ["What", "are", "the", "ids", "of", "the", "TV", "channels", "that", "do", "not", "have", "any", "cartoons", "directed", "by", "Ben", "Jones", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "644", "answer_text": [["701"], ["703"], ["705"], ["706"], ["708"], ["709"], ["713"], ["714"], ["715"], ["717"], ["719"]], "trigger_words": ["Id"], "Prediction": "TV_Channel.id \nFROM TV_Channel \nLEFT JOIN Cartoon ON Cartoon.Channel=TV_Channel.id \nWHERE Cartoon.Directed_by != 'Ben Jones' OR Cartoon.Directed_by IS NULL;"}
{"db_id": "tvshow", "query": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')", "query_toks": ["SELECT", "package_option", "FROM", "TV_Channel", "WHERE", "id", "NOT", "IN", "(", "SELECT", "channel", "FROM", "cartoon", "WHERE", "directed_by", "=", "'Ben", "Jones", "'", ")"], "query_toks_no_value": ["select", "package_option", "from", "tv_channel", "where", "id", "not", "in", "(", "select", "channel", "from", "cartoon", "where", "directed_by", "=", "value", ")"], "question": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.", "question_toks": ["find", "the", "package", "option", "of", "the", "tv", "channel", "that", "do", "not", "have", "any", "cartoon", "directed", "by", "Ben", "Jones", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "645", "answer_text": [["Sky Famiglia"], ["Sky Famiglia"], ["Sky Famiglia"], ["Sky Famiglia"], ["no ( FTV )"], ["Sky Famiglia + Sky HD"], ["no ( FTV )"], ["Sky Famiglia"], ["Sky Famiglia"], ["Sky Famiglia"], ["Sky Famiglia"]], "trigger_words": ["Package Option"], "Prediction": "TV_Channel.Package_Option\nFROM TV_Channel\nWHERE TV_Channel.id NOT IN (\n    SELECT Cartoon.Channel\n    FROM Cartoon\n    WHERE Cartoon.Directed_by = 'Ben Jones'\n);"}
{"db_id": "tvshow", "query": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')", "query_toks": ["SELECT", "package_option", "FROM", "TV_Channel", "WHERE", "id", "NOT", "IN", "(", "SELECT", "channel", "FROM", "cartoon", "WHERE", "directed_by", "=", "'Ben", "Jones", "'", ")"], "query_toks_no_value": ["select", "package_option", "from", "tv_channel", "where", "id", "not", "in", "(", "select", "channel", "from", "cartoon", "where", "directed_by", "=", "value", ")"], "question": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?", "question_toks": ["What", "are", "the", "package", "options", "of", "all", "tv", "channels", "that", "are", "not", "playing", "any", "cartoons", "directed", "by", "Ben", "Jones", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "646", "answer_text": [["Sky Famiglia"], ["Sky Famiglia"], ["Sky Famiglia"], ["Sky Famiglia"], ["no ( FTV )"], ["Sky Famiglia + Sky HD"], ["no ( FTV )"], ["Sky Famiglia"], ["Sky Famiglia"], ["Sky Famiglia"], ["Sky Famiglia"]], "trigger_words": ["Package Option"], "Prediction": "TV_Channel.Package_Option \nFROM TV_Channel \nWHERE TV_Channel.id NOT IN \n(SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = 'Ben Jones')"}
{"db_id": "poker_player", "query": "SELECT count(*) FROM poker_player", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "poker_player"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "poker_player"], "question": "How many poker players are there?", "question_toks": ["How", "many", "poker", "players", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "647", "answer_text": [[5]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM poker_player;"}
{"db_id": "poker_player", "query": "SELECT count(*) FROM poker_player", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "poker_player"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "poker_player"], "question": "Count the number of poker players.", "question_toks": ["Count", "the", "number", "of", "poker", "players", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "648", "answer_text": [[5]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM poker_player;"}
{"db_id": "poker_player", "query": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC", "query_toks": ["SELECT", "Earnings", "FROM", "poker_player", "ORDER", "BY", "Earnings", "DESC"], "query_toks_no_value": ["select", "earnings", "from", "poker_player", "order", "by", "earnings", "desc"], "question": "List the earnings of poker players in descending order.", "question_toks": ["List", "the", "earnings", "of", "poker", "players", "in", "descending", "order", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 6, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "649", "answer_text": [[596462.0], [476090.0], [189233.0], [142800.0], [104871.0]], "trigger_words": ["Earnings"], "Prediction": "Earnings FROM poker_player ORDER BY Earnings DESC;"}
{"db_id": "poker_player", "query": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC", "query_toks": ["SELECT", "Earnings", "FROM", "poker_player", "ORDER", "BY", "Earnings", "DESC"], "query_toks_no_value": ["select", "earnings", "from", "poker_player", "order", "by", "earnings", "desc"], "question": "What are the earnings of poker players, ordered descending by value?", "question_toks": ["What", "are", "the", "earnings", "of", "poker", "players", ",", "ordered", "descending", "by", "value", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 6, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "650", "answer_text": [[596462.0], [476090.0], [189233.0], [142800.0], [104871.0]], "trigger_words": ["Earnings"], "Prediction": "Earnings FROM poker_player ORDER BY Earnings DESC;"}
{"db_id": "poker_player", "query": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player", "query_toks": ["SELECT", "Final_Table_Made", ",", "Best_Finish", "FROM", "poker_player"], "query_toks_no_value": ["select", "final_table_made", ",", "best_finish", "from", "poker_player"], "question": "List the final tables made and the best finishes of poker players.", "question_toks": ["List", "the", "final", "tables", "made", "and", "the", "best", "finishes", "of", "poker", "players", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "651", "answer_text": [[42.0, 1.0], [10.0, 2.0], [21.0, 1.0], [19.0, 2.0], [26.0, 3.0]], "trigger_words": ["Final Table Made", "Best Finish"], "Prediction": "Final_Table_Made, Best_Finish FROM poker_player;"}
{"db_id": "poker_player", "query": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player", "query_toks": ["SELECT", "Final_Table_Made", ",", "Best_Finish", "FROM", "poker_player"], "query_toks_no_value": ["select", "final_table_made", ",", "best_finish", "from", "poker_player"], "question": "What are the final tables made and best finishes for all poker players?", "question_toks": ["What", "are", "the", "final", "tables", "made", "and", "best", "finishes", "for", "all", "poker", "players", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "652", "answer_text": [[42.0, 1.0], [10.0, 2.0], [21.0, 1.0], [19.0, 2.0], [26.0, 3.0]], "trigger_words": ["Final Table Made", "Best Finish"], "Prediction": "poker_player.Final_Table_Made, poker_player.Best_Finish FROM poker_player;"}
{"db_id": "poker_player", "query": "SELECT avg(Earnings) FROM poker_player", "query_toks": ["SELECT", "avg", "(", "Earnings", ")", "FROM", "poker_player"], "query_toks_no_value": ["select", "avg", "(", "earnings", ")", "from", "poker_player"], "question": "What is the average earnings of poker players?", "question_toks": ["What", "is", "the", "average", "earnings", "of", "poker", "players", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "653", "answer_text": [[301891.2]], "trigger_words": ["Average Number"], "Prediction": "AVG(Earnings) FROM poker_player;"}
{"db_id": "poker_player", "query": "SELECT avg(Earnings) FROM poker_player", "query_toks": ["SELECT", "avg", "(", "Earnings", ")", "FROM", "poker_player"], "query_toks_no_value": ["select", "avg", "(", "earnings", ")", "from", "poker_player"], "question": "Return the average earnings across all poker players.", "question_toks": ["Return", "the", "average", "earnings", "across", "all", "poker", "players", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "654", "answer_text": [[301891.2]], "trigger_words": ["Average Number"], "Prediction": "AVG(Earnings) FROM poker_player;"}
{"db_id": "poker_player", "query": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1", "query_toks": ["SELECT", "Money_Rank", "FROM", "poker_player", "ORDER", "BY", "Earnings", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "money_rank", "from", "poker_player", "order", "by", "earnings", "desc", "limit", "value"], "question": "What is the money rank of the poker player with the highest earnings?", "question_toks": ["What", "is", "the", "money", "rank", "of", "the", "poker", "player", "with", "the", "highest", "earnings", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "655", "answer_text": [[58.0]], "trigger_words": ["Money Rank"], "Prediction": "Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);"}
{"db_id": "poker_player", "query": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1", "query_toks": ["SELECT", "Money_Rank", "FROM", "poker_player", "ORDER", "BY", "Earnings", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "money_rank", "from", "poker_player", "order", "by", "earnings", "desc", "limit", "value"], "question": "Return the money rank of the player with the greatest earnings.", "question_toks": ["Return", "the", "money", "rank", "of", "the", "player", "with", "the", "greatest", "earnings", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "656", "answer_text": [[58.0]], "trigger_words": ["Money Rank"], "Prediction": "Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);"}
{"db_id": "poker_player", "query": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000", "query_toks": ["SELECT", "max", "(", "Final_Table_Made", ")", "FROM", "poker_player", "WHERE", "Earnings", "<", "200000"], "query_toks_no_value": ["select", "max", "(", "final_table_made", ")", "from", "poker_player", "where", "earnings", "<", "value"], "question": "What is the maximum number of final tables made among poker players with earnings less than 200000?", "question_toks": ["What", "is", "the", "maximum", "number", "of", "final", "tables", "made", "among", "poker", "players", "with", "earnings", "less", "than", "200000", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [[false, 4, [0, [0, 6, false], null], 200000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "657", "answer_text": [[26.0]], "trigger_words": ["Maximal Number"], "Prediction": "MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000;"}
{"db_id": "poker_player", "query": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000", "query_toks": ["SELECT", "max", "(", "Final_Table_Made", ")", "FROM", "poker_player", "WHERE", "Earnings", "<", "200000"], "query_toks_no_value": ["select", "max", "(", "final_table_made", ")", "from", "poker_player", "where", "earnings", "<", "value"], "question": "Return the maximum final tables made across all poker players who have earnings below 200000.", "question_toks": ["Return", "the", "maximum", "final", "tables", "made", "across", "all", "poker", "players", "who", "have", "earnings", "below", "200000", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [[false, 4, [0, [0, 6, false], null], 200000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "658", "answer_text": [[26.0]], "trigger_words": ["Maximal Number"], "Prediction": "MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000;"}
{"db_id": "poker_player", "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID", "query_toks": ["SELECT", "T1.Name", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id"], "question": "What are the names of poker players?", "question_toks": ["What", "are", "the", "names", "of", "poker", "players", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "659", "answer_text": [["Aleksey Ostapenko"], ["Teodor Salparov"], ["Yevgeni Sivozhelez"], ["Maksim Botin"], ["Semen Poltavskiy"]], "trigger_words": ["Name"], "Prediction": "poker_player.Best_Finish, people.Name \n FROM poker_player \n JOIN people ON poker_player.People_ID=people.People_ID;"}
{"db_id": "poker_player", "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID", "query_toks": ["SELECT", "T1.Name", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id"], "question": "Return the names of all the poker players.", "question_toks": ["Return", "the", "names", "of", "all", "the", "poker", "players", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "660", "answer_text": [["Aleksey Ostapenko"], ["Teodor Salparov"], ["Yevgeni Sivozhelez"], ["Maksim Botin"], ["Semen Poltavskiy"]], "trigger_words": ["Name"], "Prediction": "Name FROM people JOIN poker_player ON people.People_ID=poker_player.People_ID;"}
{"db_id": "poker_player", "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000", "query_toks": ["SELECT", "T1.Name", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "WHERE", "T2.Earnings", ">", "300000"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "where", "t2", ".", "earnings", ">", "value"], "question": "What are the names of poker players whose earnings is higher than 300000?", "question_toks": ["What", "are", "the", "names", "of", "poker", "players", "whose", "earnings", "is", "higher", "than", "300000", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 6, false], null], 300000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "661", "answer_text": [["Aleksey Ostapenko"], ["Maksim Botin"]], "trigger_words": ["Name"], "Prediction": "people.Name \nFROM poker_player \nJOIN people ON poker_player.People_ID=people.People_ID \nWHERE poker_player.Earnings > 300000;"}
{"db_id": "poker_player", "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000", "query_toks": ["SELECT", "T1.Name", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "WHERE", "T2.Earnings", ">", "300000"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "where", "t2", ".", "earnings", ">", "value"], "question": "Give the names of poker players who have earnings above 300000.", "question_toks": ["Give", "the", "names", "of", "poker", "players", "who", "have", "earnings", "above", "300000", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 6, false], null], 300000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "662", "answer_text": [["Aleksey Ostapenko"], ["Maksim Botin"]], "trigger_words": ["Name"], "Prediction": "poker_player.Best_Finish, people.Name \n FROM poker_player \n JOIN people ON poker_player.People_ID=people.People_ID \n WHERE poker_player.Earnings > 300000;"}
{"db_id": "poker_player", "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made", "query_toks": ["SELECT", "T1.Name", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "ORDER", "BY", "T2.Final_Table_Made"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "order", "by", "t2", ".", "final_table_made"], "question": "List the names of poker players ordered by the final tables made in ascending order.", "question_toks": ["List", "the", "names", "of", "poker", "players", "ordered", "by", "the", "final", "tables", "made", "in", "ascending", "order", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "663", "answer_text": [["Teodor Salparov"], ["Maksim Botin"], ["Yevgeni Sivozhelez"], ["Semen Poltavskiy"], ["Aleksey Ostapenko"]], "trigger_words": ["Name"], "Prediction": "people.Name \nFROM poker_player \nJOIN people ON poker_player.People_ID=people.People_ID \nORDER BY poker_player.Final_Table_Made ASC;"}
{"db_id": "poker_player", "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made", "query_toks": ["SELECT", "T1.Name", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "ORDER", "BY", "T2.Final_Table_Made"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "order", "by", "t2", ".", "final_table_made"], "question": "What are the names of poker players, ordered ascending by the number of final tables they have made?", "question_toks": ["What", "are", "the", "names", "of", "poker", "players", ",", "ordered", "ascending", "by", "the", "number", "of", "final", "tables", "they", "have", "made", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "664", "answer_text": [["Teodor Salparov"], ["Maksim Botin"], ["Yevgeni Sivozhelez"], ["Semen Poltavskiy"], ["Aleksey Ostapenko"]], "trigger_words": ["Name"], "Prediction": "people.Name \nFROM poker_player \nJOIN people ON poker_player.People_ID=people.People_ID \nORDER BY poker_player.Final_Table_Made ASC;"}
{"db_id": "poker_player", "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1", "query_toks": ["SELECT", "T1.Birth_Date", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "ORDER", "BY", "T2.Earnings", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "birth_date", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "order", "by", "t2", ".", "earnings", "asc", "limit", "value"], "question": "What is the birth date of the poker player with the lowest earnings?", "question_toks": ["What", "is", "the", "birth", "date", "of", "the", "poker", "player", "with", "the", "lowest", "earnings", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "665", "answer_text": [["August 8, 1986"]], "trigger_words": ["Birth Date"], "Prediction": "people.Birth_Date \n FROM poker_player \n JOIN people ON poker_player.People_ID=people.People_ID \n ORDER BY poker_player.Earnings ASC \n LIMIT 1;"}
{"db_id": "poker_player", "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1", "query_toks": ["SELECT", "T1.Birth_Date", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "ORDER", "BY", "T2.Earnings", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "birth_date", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "order", "by", "t2", ".", "earnings", "asc", "limit", "value"], "question": "Return the birth date of the poker player with the lowest earnings.", "question_toks": ["Return", "the", "birth", "date", "of", "the", "poker", "player", "with", "the", "lowest", "earnings", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "666", "answer_text": [["August 8, 1986"]], "trigger_words": ["Birth Date"], "Prediction": "people.Birth_Date \n FROM poker_player \n JOIN people ON poker_player.People_ID=people.People_ID \n ORDER BY poker_player.Earnings ASC \n LIMIT 1;"}
{"db_id": "poker_player", "query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1", "query_toks": ["SELECT", "T2.Money_Rank", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "ORDER", "BY", "T1.Height", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "money_rank", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "order", "by", "t1", ".", "height", "desc", "limit", "value"], "question": "What is the money rank of the tallest poker player?", "question_toks": ["What", "is", "the", "money", "rank", "of", "the", "tallest", "poker", "player", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "667", "answer_text": [[68.0]], "trigger_words": ["Money Rank"], "Prediction": "poker_player.Money_Rank \nFROM poker_player \nJOIN people ON poker_player.People_ID=people.People_ID \nWHERE people.Height = (SELECT MAX(Height) FROM people)"}
{"db_id": "poker_player", "query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1", "query_toks": ["SELECT", "T2.Money_Rank", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "ORDER", "BY", "T1.Height", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "money_rank", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "order", "by", "t1", ".", "height", "desc", "limit", "value"], "question": "Return the money rank of the poker player with the greatest height.", "question_toks": ["Return", "the", "money", "rank", "of", "the", "poker", "player", "with", "the", "greatest", "height", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "668", "answer_text": [[68.0]], "trigger_words": ["Money Rank"], "Prediction": "poker_player.Money_Rank \n FROM poker_player \n JOIN people ON poker_player.People_ID=people.People_ID \n WHERE people.Height = (SELECT MAX(Height) FROM people);"}
{"db_id": "poker_player", "query": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200", "query_toks": ["SELECT", "avg", "(", "T2.Earnings", ")", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "WHERE", "T1.Height", ">", "200"], "query_toks_no_value": ["select", "avg", "(", "t2", ".", "earnings", ")", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "where", "t1", ".", "height", ">", "value"], "question": "What is the average earnings of poker players with height higher than 200?", "question_toks": ["What", "is", "the", "average", "earnings", "of", "poker", "players", "with", "height", "higher", "than", "200", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 200.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "669", "answer_text": [[309445.0]], "trigger_words": ["Average Number"], "Prediction": "AVG(poker_player.Earnings) \nFROM poker_player \nJOIN people ON poker_player.People_ID=people.People_ID \nWHERE people.Height > 200;"}
{"db_id": "poker_player", "query": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200", "query_toks": ["SELECT", "avg", "(", "T2.Earnings", ")", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "WHERE", "T1.Height", ">", "200"], "query_toks_no_value": ["select", "avg", "(", "t2", ".", "earnings", ")", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "where", "t1", ".", "height", ">", "value"], "question": "Give average earnings of poker players who are taller than 200.", "question_toks": ["Give", "average", "earnings", "of", "poker", "players", "who", "are", "taller", "than", "200", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 200.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "670", "answer_text": [[309445.0]], "trigger_words": ["Average Number"], "Prediction": "AVG(poker_player.Earnings) \nFROM poker_player \nJOIN people ON poker_player.People_ID=people.People_ID \nWHERE people.Height > 200;"}
{"db_id": "poker_player", "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC", "query_toks": ["SELECT", "T1.Name", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "ORDER", "BY", "T2.Earnings", "DESC"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "order", "by", "t2", ".", "earnings", "desc"], "question": "What are the names of poker players in descending order of earnings?", "question_toks": ["What", "are", "the", "names", "of", "poker", "players", "in", "descending", "order", "of", "earnings", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 6, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "671", "answer_text": [["Maksim Botin"], ["Aleksey Ostapenko"], ["Teodor Salparov"], ["Semen Poltavskiy"], ["Yevgeni Sivozhelez"]], "trigger_words": ["Name"], "Prediction": "people.Name FROM people \nJOIN poker_player ON people.People_ID = poker_player.People_ID \nORDER BY poker_player.Earnings DESC;"}
{"db_id": "poker_player", "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC", "query_toks": ["SELECT", "T1.Name", "FROM", "people", "AS", "T1", "JOIN", "poker_player", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "ORDER", "BY", "T2.Earnings", "DESC"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "order", "by", "t2", ".", "earnings", "desc"], "question": "Return the names of poker players sorted by their earnings descending.", "question_toks": ["Return", "the", "names", "of", "poker", "players", "sorted", "by", "their", "earnings", "descending", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 6, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "672", "answer_text": [["Maksim Botin"], ["Aleksey Ostapenko"], ["Teodor Salparov"], ["Semen Poltavskiy"], ["Yevgeni Sivozhelez"]], "trigger_words": ["Name"], "Prediction": "people.Name \nFROM poker_player \nJOIN people ON poker_player.People_ID=people.People_ID \nORDER BY poker_player.Earnings DESC;"}
{"db_id": "poker_player", "query": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality", "query_toks": ["SELECT", "Nationality", ",", "COUNT", "(", "*", ")", "FROM", "people", "GROUP", "BY", "Nationality"], "query_toks_no_value": ["select", "nationality", ",", "count", "(", "*", ")", "from", "people", "group", "by", "nationality"], "question": "What are different nationalities of people and the corresponding number of people from each nation?", "question_toks": ["What", "are", "different", "nationalities", "of", "people", "and", "the", "corresponding", "number", "of", "people", "from", "each", "nation", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "673", "answer_text": [["Bulgaria", 1], ["Russia", 6]], "trigger_words": ["Nationality", "Number"], "Prediction": "Nationality, COUNT(*) FROM people GROUP BY Nationality;"}
{"db_id": "poker_player", "query": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality", "query_toks": ["SELECT", "Nationality", ",", "COUNT", "(", "*", ")", "FROM", "people", "GROUP", "BY", "Nationality"], "query_toks_no_value": ["select", "nationality", ",", "count", "(", "*", ")", "from", "people", "group", "by", "nationality"], "question": "How many people are there of each nationality?", "question_toks": ["How", "many", "people", "are", "there", "of", "each", "nationality", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "674", "answer_text": [["Bulgaria", 1], ["Russia", 6]], "trigger_words": ["Nationality", "Number"], "Prediction": "Nationality, COUNT(*) FROM people GROUP BY Nationality;"}
{"db_id": "poker_player", "query": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Nationality", "FROM", "people", "GROUP", "BY", "Nationality", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "nationality", "from", "people", "group", "by", "nationality", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the most common nationality of people?", "question_toks": ["What", "is", "the", "most", "common", "nationality", "of", "people", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "675", "answer_text": [["Russia"]], "trigger_words": ["Nationality"], "Prediction": "Nationality FROM people\n GROUP BY Nationality\n ORDER BY COUNT(*) DESC\n LIMIT 1;"}
{"db_id": "poker_player", "query": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Nationality", "FROM", "people", "GROUP", "BY", "Nationality", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "nationality", "from", "people", "group", "by", "nationality", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Give the nationality that is most common across all people.", "question_toks": ["Give", "the", "nationality", "that", "is", "most", "common", "across", "all", "people", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "676", "answer_text": [["Russia"]], "trigger_words": ["Nationality"], "Prediction": "Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1;"}
{"db_id": "poker_player", "query": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2", "query_toks": ["SELECT", "Nationality", "FROM", "people", "GROUP", "BY", "Nationality", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "nationality", "from", "people", "group", "by", "nationality", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the nationalities that are shared by at least two people?", "question_toks": ["What", "are", "the", "nationalities", "that", "are", "shared", "by", "at", "least", "two", "people", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "677", "answer_text": [["Russia"]], "trigger_words": ["Nationality"], "Prediction": "Nationality \nFROM people \nGROUP BY Nationality \nHAVING COUNT(*) > 1;"}
{"db_id": "poker_player", "query": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2", "query_toks": ["SELECT", "Nationality", "FROM", "people", "GROUP", "BY", "Nationality", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "nationality", "from", "people", "group", "by", "nationality", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Return the nationalities for which there are two or more people.", "question_toks": ["Return", "the", "nationalities", "for", "which", "there", "are", "two", "or", "more", "people", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "678", "answer_text": [["Russia"]], "trigger_words": ["Nationality"], "Prediction": "Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2;"}
{"db_id": "poker_player", "query": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC", "query_toks": ["SELECT", "Name", ",", "Birth_Date", "FROM", "people", "ORDER", "BY", "Name", "ASC"], "query_toks_no_value": ["select", "name", ",", "birth_date", "from", "people", "order", "by", "name", "asc"], "question": "List the names and birth dates of people in ascending alphabetical order of name.", "question_toks": ["List", "the", "names", "and", "birth", "dates", "of", "people", "in", "ascending", "alphabetical", "order", "of", "name", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "679", "answer_text": [["Aleksey Ostapenko", "May 26, 1986"], ["Maksim Botin", "July 14, 1983"], ["Roman Bragin", "April 17, 1987"], ["Semen Poltavskiy", "February 8, 1981"], ["Sergey Grankin", "January 22, 1987"], ["Teodor Salparov", "August 16, 1982"], ["Yevgeni Sivozhelez", "August 8, 1986"]], "trigger_words": ["Name", "Birth Date"], "Prediction": "Name, Birth_Date FROM people ORDER BY Name ASC;"}
{"db_id": "poker_player", "query": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC", "query_toks": ["SELECT", "Name", ",", "Birth_Date", "FROM", "people", "ORDER", "BY", "Name", "ASC"], "query_toks_no_value": ["select", "name", ",", "birth_date", "from", "people", "order", "by", "name", "asc"], "question": "What are the names and birth dates of people, ordered by their names in alphabetical order?", "question_toks": ["What", "are", "the", "names", "and", "birth", "dates", "of", "people", ",", "ordered", "by", "their", "names", "in", "alphabetical", "order", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "680", "answer_text": [["Aleksey Ostapenko", "May 26, 1986"], ["Maksim Botin", "July 14, 1983"], ["Roman Bragin", "April 17, 1987"], ["Semen Poltavskiy", "February 8, 1981"], ["Sergey Grankin", "January 22, 1987"], ["Teodor Salparov", "August 16, 1982"], ["Yevgeni Sivozhelez", "August 8, 1986"]], "trigger_words": ["Name", "Birth Date"], "Prediction": "Name, Birth_Date FROM people ORDER BY Name ASC;"}
{"db_id": "poker_player", "query": "SELECT Name FROM people WHERE Nationality != \"Russia\"", "query_toks": ["SELECT", "Name", "FROM", "people", "WHERE", "Nationality", "!", "=", "``", "Russia", "''"], "query_toks_no_value": ["select", "name", "from", "people", "where", "nationality", "!", "=", "value"], "question": "Show names of people whose nationality is not \"Russia\".", "question_toks": ["Show", "names", "of", "people", "whose", "nationality", "is", "not", "``", "Russia", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 7, [0, [0, 8, false], null], "\"Russia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "681", "answer_text": [["Teodor Salparov"]], "trigger_words": ["Name"], "Prediction": "Name FROM people WHERE Nationality != \"Russia\";"}
{"db_id": "poker_player", "query": "SELECT Name FROM people WHERE Nationality != \"Russia\"", "query_toks": ["SELECT", "Name", "FROM", "people", "WHERE", "Nationality", "!", "=", "``", "Russia", "''"], "query_toks_no_value": ["select", "name", "from", "people", "where", "nationality", "!", "=", "value"], "question": "What are the names of people who are not from Russia?", "question_toks": ["What", "are", "the", "names", "of", "people", "who", "are", "not", "from", "Russia", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 7, [0, [0, 8, false], null], "\"Russia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "682", "answer_text": [["Teodor Salparov"]], "trigger_words": ["Name"], "Prediction": "Name FROM people WHERE Nationality != 'Russia';"}
{"db_id": "poker_player", "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)", "query_toks": ["SELECT", "Name", "FROM", "people", "WHERE", "People_ID", "NOT", "IN", "(", "SELECT", "People_ID", "FROM", "poker_player", ")"], "query_toks_no_value": ["select", "name", "from", "people", "where", "people_id", "not", "in", "(", "select", "people_id", "from", "poker_player", ")"], "question": "List the names of people that are not poker players.", "question_toks": ["List", "the", "names", "of", "people", "that", "are", "not", "poker", "players", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "683", "answer_text": [["Roman Bragin"], ["Sergey Grankin"]], "trigger_words": ["Name"], "Prediction": "people.Name FROM people LEFT JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.People_ID IS NULL;"}
{"db_id": "poker_player", "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)", "query_toks": ["SELECT", "Name", "FROM", "people", "WHERE", "People_ID", "NOT", "IN", "(", "SELECT", "People_ID", "FROM", "poker_player", ")"], "query_toks_no_value": ["select", "name", "from", "people", "where", "people_id", "not", "in", "(", "select", "people_id", "from", "poker_player", ")"], "question": "What are the names of people who do not play poker?", "question_toks": ["What", "are", "the", "names", "of", "people", "who", "do", "not", "play", "poker", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "684", "answer_text": [["Roman Bragin"], ["Sergey Grankin"]], "trigger_words": ["Name"], "Prediction": "people.Name \nFROM people \nLEFT JOIN poker_player ON people.People_ID = poker_player.People_ID \nWHERE poker_player.Poker_Player_ID IS NULL;"}
{"db_id": "poker_player", "query": "SELECT count(DISTINCT Nationality) FROM people", "query_toks": ["SELECT", "count", "(", "DISTINCT", "Nationality", ")", "FROM", "people"], "query_toks_no_value": ["select", "count", "(", "distinct", "nationality", ")", "from", "people"], "question": "How many distinct nationalities are there?", "question_toks": ["How", "many", "distinct", "nationalities", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 8, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "685", "answer_text": [[2]], "trigger_words": ["Number Of Nationality"], "Prediction": "COUNT(DISTINCT Nationality) FROM people;"}
{"db_id": "poker_player", "query": "SELECT count(DISTINCT Nationality) FROM people", "query_toks": ["SELECT", "count", "(", "DISTINCT", "Nationality", ")", "FROM", "people"], "query_toks_no_value": ["select", "count", "(", "distinct", "nationality", ")", "from", "people"], "question": "Count the number of different nationalities.", "question_toks": ["Count", "the", "number", "of", "different", "nationalities", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 8, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "686", "answer_text": [[2]], "trigger_words": ["Number Of Nationality"], "Prediction": "COUNT(DISTINCT Nationality) FROM people;"}
{"db_id": "voter_1", "query": "SELECT count(*) FROM area_code_state", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "area_code_state"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "area_code_state"], "question": "How many states are there?", "question_toks": ["How", "many", "states", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "687", "answer_text": [[305]], "trigger_words": ["Number"], "Prediction": "COUNT(DISTINCT state) FROM VOTES;"}
{"db_id": "voter_1", "query": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC", "query_toks": ["SELECT", "contestant_number", ",", "contestant_name", "FROM", "contestants", "ORDER", "BY", "contestant_name", "DESC"], "query_toks_no_value": ["select", "contestant_number", ",", "contestant_name", "from", "contestants", "order", "by", "contestant_name", "desc"], "question": "List the contestant numbers and names, ordered by contestant name descending.", "question_toks": ["List", "the", "contestant", "numbers", "and", "names", ",", "ordered", "by", "contestant", "name", "descending", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "688", "answer_text": [[2, "Tabatha Gehling"], [8, "Nita Coster"], [11, "Loraine NygrenTania Mattioli"], [9, "Kurt Walser"], [3, "Kelly Clauss"], [6, "Jessie Eichman"], [4, "Jessie Alloway"], [10, "Ericka Dieter"], [1, "Edwina Burnam"], [7, "Allie Rogalski"], [5, "Alana Bregman"]], "trigger_words": ["Contestant Number", "Contestant Name"], "Prediction": "contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC;"}
{"db_id": "voter_1", "query": "SELECT vote_id ,  phone_number ,  state FROM votes", "query_toks": ["SELECT", "vote_id", ",", "phone_number", ",", "state", "FROM", "votes"], "query_toks_no_value": ["select", "vote_id", ",", "phone_number", ",", "state", "from", "votes"], "question": "List the vote ids, phone numbers and states of all votes.", "question_toks": ["List", "the", "vote", "ids", ",", "phone", "numbers", "and", "states", "of", "all", "votes", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "689", "answer_text": [[1, 7182887233, "NY"], [2, 7148407040, "NY"], [3, 6209222712, "CA"], [5, 5112677315, "NJ\n"]], "trigger_words": ["Vote Id", "Phone Number", "State"], "Prediction": "vote_id, phone_number, state FROM VOTES;"}
{"db_id": "voter_1", "query": "SELECT max(area_code) ,  min(area_code) FROM area_code_state", "query_toks": ["SELECT", "max", "(", "area_code", ")", ",", "min", "(", "area_code", ")", "FROM", "area_code_state"], "query_toks_no_value": ["select", "max", "(", "area_code", ")", ",", "min", "(", "area_code", ")", "from", "area_code_state"], "question": "What are the maximum and minimum values of area codes?", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "values", "of", "area", "codes", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 1, false], null]], [2, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "690", "answer_text": [[989, 201]], "trigger_words": ["Maximal Number", "Minimal Number"], "Prediction": "MAX(area_code), MIN(area_code) FROM AREA_CODE_STATE;"}
{"db_id": "voter_1", "query": "SELECT max(created) FROM votes WHERE state  =  'CA'", "query_toks": ["SELECT", "max", "(", "created", ")", "FROM", "votes", "WHERE", "state", "=", "'CA", "'"], "query_toks_no_value": ["select", "max", "(", "created", ")", "from", "votes", "where", "state", "=", "value"], "question": "What is last date created of votes from the state 'CA'?", "question_toks": ["What", "is", "last", "date", "created", "of", "votes", "from", "the", "state", "'CA", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"CA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "691", "answer_text": [["2018-03-09 19:03:39"]], "trigger_words": ["Maximal Number"], "Prediction": "MAX(created) FROM VOTES WHERE state='CA';"}
{"db_id": "voter_1", "query": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'", "query_toks": ["SELECT", "contestant_name", "FROM", "contestants", "WHERE", "contestant_name", "!", "=", "'Jessie", "Alloway", "'"], "query_toks_no_value": ["select", "contestant_name", "from", "contestants", "where", "contestant_name", "!", "=", "value"], "question": "What are the names of the contestants whose names are not 'Jessie Alloway'", "question_toks": ["What", "are", "the", "names", "of", "the", "contestants", "whose", "names", "are", "not", "'Jessie", "Alloway", "'"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"Jessie Alloway\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "692", "answer_text": [["Edwina Burnam"], ["Tabatha Gehling"], ["Kelly Clauss"], ["Alana Bregman"], ["Jessie Eichman"], ["Allie Rogalski"], ["Nita Coster"], ["Kurt Walser"], ["Ericka Dieter"], ["Loraine NygrenTania Mattioli"]], "trigger_words": ["Contestant Name"], "Prediction": "contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway';"}
{"db_id": "voter_1", "query": "SELECT DISTINCT state ,  created FROM votes", "query_toks": ["SELECT", "DISTINCT", "state", ",", "created", "FROM", "votes"], "query_toks_no_value": ["select", "distinct", "state", ",", "created", "from", "votes"], "question": "What are the distinct states and create time of all votes?", "question_toks": ["What", "are", "the", "distinct", "states", "and", "create", "time", "of", "all", "votes", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "693", "answer_text": [["NY", "2018-03-09 19:03:21"], ["NY", "2018-03-09 19:03:36"], ["CA", "2018-03-09 19:03:39"], ["NJ\n", "2018-03-09 19:03:40"]], "trigger_words": ["State", "Created"], "Prediction": "DISTINCT state, created FROM VOTES;"}
{"db_id": "voter_1", "query": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.contestant_number", ",", "T1.contestant_name", "FROM", "contestants", "AS", "T1", "JOIN", "votes", "AS", "T2", "ON", "T1.contestant_number", "=", "T2.contestant_number", "GROUP", "BY", "T1.contestant_number", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "contestant_number", ",", "t1", ".", "contestant_name", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1", ".", "contestant_number", "=", "t2", ".", "contestant_number", "group", "by", "t1", ".", "contestant_number", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the contestant numbers and names of the contestants who had at least two votes?", "question_toks": ["What", "are", "the", "contestant", "numbers", "and", "names", "of", "the", "contestants", "who", "had", "at", "least", "two", "votes", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "694", "answer_text": [[3, "Kelly Clauss"]], "trigger_words": ["Contestant Number", "Contestant Name"], "Prediction": "CONTESTANTS.contestant_number, CONTESTANTS.contestant_name\n FROM CONTESTANTS\n WHERE CONTESTANTS.contestant_number IN (\n     SELECT VOTES.contestant_number\n     FROM VOTES\n     GROUP BY VOTES.contestant_number\n     HAVING COUNT(*) >= 2\n );"}
{"db_id": "voter_1", "query": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "T1.contestant_number", ",", "T1.contestant_name", "FROM", "contestants", "AS", "T1", "JOIN", "votes", "AS", "T2", "ON", "T1.contestant_number", "=", "T2.contestant_number", "GROUP", "BY", "T1.contestant_number", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "contestant_number", ",", "t1", ".", "contestant_name", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1", ".", "contestant_number", "=", "t2", ".", "contestant_number", "group", "by", "t1", ".", "contestant_number", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?", "question_toks": ["Of", "all", "the", "contestants", "who", "got", "voted", ",", "what", "is", "the", "contestant", "number", "and", "name", "of", "the", "contestant", "who", "got", "least", "votes", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "695", "answer_text": [[2, "Tabatha Gehling"]], "trigger_words": ["Contestant Number", "Contestant Name"], "Prediction": "CONTESTANTS.contestant_number, CONTESTANTS.contestant_name\nFROM CONTESTANTS\nWHERE CONTESTANTS.contestant_number = (\n    SELECT VOTES.contestant_number\n    FROM VOTES\n    GROUP BY VOTES.contestant_number\n    ORDER BY COUNT(*) ASC\n    LIMIT 1\n);"}
{"db_id": "voter_1", "query": "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "votes", "WHERE", "state", "=", "'NY", "'", "OR", "state", "=", "'CA", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "votes", "where", "state", "=", "value", "or", "state", "=", "value"], "question": "What are the number of votes from state 'NY' or 'CA'?", "question_toks": ["What", "are", "the", "number", "of", "votes", "from", "state", "'NY", "'", "or", "'CA", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"NY\"", null], "or", [false, 2, [0, [0, 7, false], null], "\"CA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "696", "answer_text": [[3]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM VOTES WHERE state='NY' OR state='CA';"}
{"db_id": "voter_1", "query": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "contestants", "WHERE", "contestant_number", "NOT", "IN", "(", "SELECT", "contestant_number", "FROM", "votes", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "contestants", "where", "contestant_number", "not", "in", "(", "select", "contestant_number", "from", "votes", ")"], "question": "How many contestants did not get voted?", "question_toks": ["How", "many", "contestants", "did", "not", "get", "voted", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "697", "answer_text": [[8]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM CONTESTANTS LEFT JOIN VOTES ON CONTESTANTS.contestant_number=VOTES.contestant_number WHERE VOTES.contestant_number IS NULL;"}
{"db_id": "voter_1", "query": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.area_code", "FROM", "area_code_state", "AS", "T1", "JOIN", "votes", "AS", "T2", "ON", "T1.state", "=", "T2.state", "GROUP", "BY", "T1.area_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "area_code", "from", "area_code_state", "as", "t1", "join", "votes", "as", "t2", "on", "t1", ".", "state", "=", "t2", ".", "state", "group", "by", "t1", ".", "area_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the area code in which the most voters voted?", "question_toks": ["What", "is", "the", "area", "code", "in", "which", "the", "most", "voters", "voted", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "698", "answer_text": [[212]], "trigger_words": ["Area Code"], "Prediction": "AREA_CODE_STATE.area_code\nFROM VOTES\nJOIN AREA_CODE_STATE ON VOTES.state=AREA_CODE_STATE.state\nGROUP BY AREA_CODE_STATE.area_code\nORDER BY COUNT(*) DESC\nLIMIT 1;"}
{"db_id": "voter_1", "query": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'", "query_toks": ["SELECT", "T2.created", ",", "T2.state", ",", "T2.phone_number", "FROM", "contestants", "AS", "T1", "JOIN", "votes", "AS", "T2", "ON", "T1.contestant_number", "=", "T2.contestant_number", "WHERE", "T1.contestant_name", "=", "'Tabatha", "Gehling", "'"], "query_toks_no_value": ["select", "t2", ".", "created", ",", "t2", ".", "state", ",", "t2", ".", "phone_number", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1", ".", "contestant_number", "=", "t2", ".", "contestant_number", "where", "t1", ".", "contestant_name", "=", "value"], "question": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?", "question_toks": ["What", "are", "the", "create", "dates", ",", "states", ",", "and", "phone", "numbers", "of", "the", "votes", "that", "were", "for", "the", "contestant", "named", "'Tabatha", "Gehling", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Tabatha Gehling\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "699", "answer_text": [["2018-03-09 19:03:21", "NY", 7182887233]], "trigger_words": ["Created", "State", "Phone Number"], "Prediction": "VOTES.created, VOTES.state, VOTES.phone_number \nFROM VOTES \nJOIN CONTESTANTS ON VOTES.contestant_number=CONTESTANTS.contestant_number \nWHERE CONTESTANTS.contestant_name='Tabatha Gehling';"}
{"db_id": "voter_1", "query": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'", "query_toks": ["SELECT", "T3.area_code", "FROM", "contestants", "AS", "T1", "JOIN", "votes", "AS", "T2", "ON", "T1.contestant_number", "=", "T2.contestant_number", "JOIN", "area_code_state", "AS", "T3", "ON", "T2.state", "=", "T3.state", "WHERE", "T1.contestant_name", "=", "'Tabatha", "Gehling", "'", "INTERSECT", "SELECT", "T3.area_code", "FROM", "contestants", "AS", "T1", "JOIN", "votes", "AS", "T2", "ON", "T1.contestant_number", "=", "T2.contestant_number", "JOIN", "area_code_state", "AS", "T3", "ON", "T2.state", "=", "T3.state", "WHERE", "T1.contestant_name", "=", "'Kelly", "Clauss", "'"], "query_toks_no_value": ["select", "t3", ".", "area_code", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1", ".", "contestant_number", "=", "t2", ".", "contestant_number", "join", "area_code_state", "as", "t3", "on", "t2", ".", "state", "=", "t3", ".", "state", "where", "t1", ".", "contestant_name", "=", "value", "intersect", "select", "t3", ".", "area_code", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1", ".", "contestant_number", "=", "t2", ".", "contestant_number", "join", "area_code_state", "as", "t3", "on", "t2", ".", "state", "=", "t3", ".", "state", "where", "t1", ".", "contestant_name", "=", "value"], "question": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.", "question_toks": ["List", "the", "area", "codes", "in", "which", "voters", "voted", "both", "for", "the", "contestant", "'Tabatha", "Gehling", "'", "and", "the", "contestant", "'Kelly", "Clauss", "'", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Tabatha Gehling\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Kelly Clauss\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "700", "answer_text": [[212], [315], [347], [516], [518], [585], [607], [631], [646], [716], [718], [845], [914], [917]], "trigger_words": ["Area Code"], "Prediction": "DISTINCT SUBSTR(phone_number, 1, 3) AS area_code\nFROM VOTES\nWHERE contestant_number IN (\n  SELECT contestant_number\n  FROM CONTESTANTS\n  WHERE contestant_name = 'Tabatha Gehling'\n) AND phone_number IN (\n  SELECT phone_number\n  FROM VOTES\n  WHERE contestant_number IN (\n    SELECT contestant_number\n    FROM CONTESTANTS\n    WHERE contestant_name = 'Kelly Clauss'\n  )\n);"}
{"db_id": "voter_1", "query": "select contestant_name from contestants where contestant_name like \"%al%\"", "query_toks": ["select", "contestant_name", "from", "contestants", "where", "contestant_name", "like", "\"%al%\""], "query_toks_no_value": ["select", "contestant_name", "from", "contestants", "where", "contestant_name", "like", "value"], "question": "Return the names of the contestants whose names contain the substring 'Al' .", "question_toks": ["Return", "the", "names", "of", "the", "contestants", "whose", "names", "contain", "the", "substring", "'Al'", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 9, [0, [0, 4, false], null], "\"%al%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "701", "answer_text": [["Jessie Alloway"], ["Alana Bregman"], ["Allie Rogalski"], ["Kurt Walser"]], "trigger_words": ["Contestant Name"], "Prediction": "contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%';"}
{"db_id": "world_1", "query": "SELECT Name FROM country WHERE IndepYear  >  1950", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "IndepYear", ">", "1950"], "query_toks_no_value": ["select", "name", "from", "country", "where", "indepyear", ">", "value"], "question": "What are the names of all the countries that became independent after 1950?", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "countries", "that", "became", "independent", "after", "1950", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 1950.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "702", "answer_text": [["Angola"], ["United Arab Emirates"], ["Armenia"], ["Antigua and Barbuda"], ["Azerbaijan"], ["Burundi"], ["Benin"], ["Burkina Faso"], ["Bangladesh"], ["Bahrain"], ["Bahamas"], ["Bosnia and Herzegovina"], ["Belarus"], ["Belize"], ["Barbados"], ["Brunei"], ["Botswana"], ["Central African Republic"], ["C\u00f4te d\u2019Ivoire"], ["Cameroon"], ["Congo, The Democratic Republic of the"], ["Congo"], ["Comoros"], ["Cape Verde"], ["Cyprus"], ["Czech Republic"], ["Germany"], ["Djibouti"], ["Dominica"], ["Algeria"], ["Eritrea"], ["Estonia"], ["Fiji Islands"], ["Micronesia, Federated States of"], ["Gabon"], ["Georgia"], ["Ghana"], ["Guinea"], ["Gambia"], ["Guinea-Bissau"], ["Equatorial Guinea"], ["Grenada"], ["Guyana"], ["Croatia"], ["Jamaica"], ["Kazakstan"], ["Kenya"], ["Kyrgyzstan"], ["Cambodia"], ["Kiribati"], ["Saint Kitts and Nevis"], ["Kuwait"], ["Laos"], ["Libyan Arab Jamahiriya"], ["Saint Lucia"], ["Lesotho"], ["Lithuania"], ["Latvia"], ["Morocco"], ["Moldova"], ["Madagascar"], ["Maldives"], ["Marshall Islands"], ["Macedonia"], ["Mali"], ["Malta"], ["Mozambique"], ["Mauritania"], ["Mauritius"], ["Malawi"], ["Malaysia"], ["Namibia"], ["Niger"], ["Nigeria"], ["Nauru"], ["Oman"], ["Palau"], ["Papua New Guinea"], ["Qatar"], ["Russian Federation"], ["Rwanda"], ["Sudan"], ["Senegal"], ["Singapore"], ["Solomon Islands"], ["Sierra Leone"], ["Somalia"], ["Sao Tome and Principe"], ["Suriname"], ["Slovakia"], ["Slovenia"], ["Swaziland"], ["Seychelles"], ["Chad"], ["Togo"], ["Tajikistan"], ["Turkmenistan"], ["Tonga"], ["Trinidad and Tobago"], ["Tunisia"], ["Tuvalu"], ["Tanzania"], ["Uganda"], ["Ukraine"], ["Uzbekistan"], ["Saint Vincent and the Grenadines"], ["Vanuatu"], ["Samoa"], ["Zambia"], ["Zimbabwe"]], "trigger_words": ["Name"], "Prediction": "Name FROM country WHERE IndepYear > 1950;"}
{"db_id": "world_1", "query": "SELECT Name FROM country WHERE IndepYear  >  1950", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "IndepYear", ">", "1950"], "query_toks_no_value": ["select", "name", "from", "country", "where", "indepyear", ">", "value"], "question": "Give the names of the nations that were founded after 1950.", "question_toks": ["Give", "the", "names", "of", "the", "nations", "that", "were", "founded", "after", "1950", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 1950.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "703", "answer_text": [["Angola"], ["United Arab Emirates"], ["Armenia"], ["Antigua and Barbuda"], ["Azerbaijan"], ["Burundi"], ["Benin"], ["Burkina Faso"], ["Bangladesh"], ["Bahrain"], ["Bahamas"], ["Bosnia and Herzegovina"], ["Belarus"], ["Belize"], ["Barbados"], ["Brunei"], ["Botswana"], ["Central African Republic"], ["C\u00f4te d\u2019Ivoire"], ["Cameroon"], ["Congo, The Democratic Republic of the"], ["Congo"], ["Comoros"], ["Cape Verde"], ["Cyprus"], ["Czech Republic"], ["Germany"], ["Djibouti"], ["Dominica"], ["Algeria"], ["Eritrea"], ["Estonia"], ["Fiji Islands"], ["Micronesia, Federated States of"], ["Gabon"], ["Georgia"], ["Ghana"], ["Guinea"], ["Gambia"], ["Guinea-Bissau"], ["Equatorial Guinea"], ["Grenada"], ["Guyana"], ["Croatia"], ["Jamaica"], ["Kazakstan"], ["Kenya"], ["Kyrgyzstan"], ["Cambodia"], ["Kiribati"], ["Saint Kitts and Nevis"], ["Kuwait"], ["Laos"], ["Libyan Arab Jamahiriya"], ["Saint Lucia"], ["Lesotho"], ["Lithuania"], ["Latvia"], ["Morocco"], ["Moldova"], ["Madagascar"], ["Maldives"], ["Marshall Islands"], ["Macedonia"], ["Mali"], ["Malta"], ["Mozambique"], ["Mauritania"], ["Mauritius"], ["Malawi"], ["Malaysia"], ["Namibia"], ["Niger"], ["Nigeria"], ["Nauru"], ["Oman"], ["Palau"], ["Papua New Guinea"], ["Qatar"], ["Russian Federation"], ["Rwanda"], ["Sudan"], ["Senegal"], ["Singapore"], ["Solomon Islands"], ["Sierra Leone"], ["Somalia"], ["Sao Tome and Principe"], ["Suriname"], ["Slovakia"], ["Slovenia"], ["Swaziland"], ["Seychelles"], ["Chad"], ["Togo"], ["Tajikistan"], ["Turkmenistan"], ["Tonga"], ["Trinidad and Tobago"], ["Tunisia"], ["Tuvalu"], ["Tanzania"], ["Uganda"], ["Ukraine"], ["Uzbekistan"], ["Saint Vincent and the Grenadines"], ["Vanuatu"], ["Samoa"], ["Zambia"], ["Zimbabwe"]], "trigger_words": ["Name"], "Prediction": "Name FROM country WHERE IndepYear > 1950;"}
{"db_id": "world_1", "query": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "country", "WHERE", "GovernmentForm", "=", "``", "Republic", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "country", "where", "governmentform", "=", "value"], "question": "How many countries have a republic as their form of government?", "question_toks": ["How", "many", "countries", "have", "a", "republic", "as", "their", "form", "of", "government", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Republic\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "704", "answer_text": [[122]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM country WHERE GovernmentForm = 'Republic';"}
{"db_id": "world_1", "query": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "country", "WHERE", "GovernmentForm", "=", "``", "Republic", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "country", "where", "governmentform", "=", "value"], "question": "How many countries have governments that are republics?", "question_toks": ["How", "many", "countries", "have", "governments", "that", "are", "republics", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Republic\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "705", "answer_text": [[122]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM country WHERE GovernmentForm LIKE '%Republic%';"}
{"db_id": "world_1", "query": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"", "query_toks": ["SELECT", "sum", "(", "SurfaceArea", ")", "FROM", "country", "WHERE", "Region", "=", "``", "Caribbean", "''"], "query_toks_no_value": ["select", "sum", "(", "surfacearea", ")", "from", "country", "where", "region", "=", "value"], "question": "What is the total surface area of the countries in the Caribbean region?", "question_toks": ["What", "is", "the", "total", "surface", "area", "of", "the", "countries", "in", "the", "Caribbean", "region", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Caribbean\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "706", "answer_text": [[234423.0]], "trigger_words": ["Total Number"], "Prediction": "SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';"}
{"db_id": "world_1", "query": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"", "query_toks": ["SELECT", "sum", "(", "SurfaceArea", ")", "FROM", "country", "WHERE", "Region", "=", "``", "Caribbean", "''"], "query_toks_no_value": ["select", "sum", "(", "surfacearea", ")", "from", "country", "where", "region", "=", "value"], "question": "How much surface area do the countires in the Carribean cover together?", "question_toks": ["How", "much", "surface", "area", "do", "the", "countires", "in", "the", "Carribean", "cover", "together", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Caribbean\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "707", "answer_text": [[234423.0]], "trigger_words": ["Total Number"], "Prediction": "SUM(SurfaceArea) FROM country WHERE Continent = 'Caribbean';"}
{"db_id": "world_1", "query": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"", "query_toks": ["SELECT", "Continent", "FROM", "country", "WHERE", "Name", "=", "``", "Anguilla", "''"], "query_toks_no_value": ["select", "continent", "from", "country", "where", "name", "=", "value"], "question": "Which continent is Anguilla in?", "question_toks": ["Which", "continent", "is", "Anguilla", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Anguilla\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "708", "answer_text": [["North America"]], "trigger_words": ["Continent"], "Prediction": "Continent FROM country WHERE Name = 'Anguilla';"}
{"db_id": "world_1", "query": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"", "query_toks": ["SELECT", "Continent", "FROM", "country", "WHERE", "Name", "=", "``", "Anguilla", "''"], "query_toks_no_value": ["select", "continent", "from", "country", "where", "name", "=", "value"], "question": "What is the continent name which Anguilla belongs to?", "question_toks": ["What", "is", "the", "continent", "name", "which", "Anguilla", "belongs", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Anguilla\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "709", "answer_text": [["North America"]], "trigger_words": ["Continent"], "Prediction": "Continent FROM country WHERE Name = 'Anguilla';"}
{"db_id": "world_1", "query": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"", "query_toks": ["SELECT", "Region", "FROM", "country", "AS", "T1", "JOIN", "city", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Name", "=", "``", "Kabul", "''"], "query_toks_no_value": ["select", "region", "from", "country", "as", "t1", "join", "city", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "name", "=", "value"], "question": "Which region is the city Kabul located in?", "question_toks": ["Which", "region", "is", "the", "city", "Kabul", "located", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kabul\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "710", "answer_text": [["Southern and Central Asia"]], "trigger_words": ["Region"], "Prediction": "country.Region FROM city JOIN country ON city.CountryCode=country.Code WHERE city.Name='Kabul';"}
{"db_id": "world_1", "query": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"", "query_toks": ["SELECT", "Region", "FROM", "country", "AS", "T1", "JOIN", "city", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Name", "=", "``", "Kabul", "''"], "query_toks_no_value": ["select", "region", "from", "country", "as", "t1", "join", "city", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "name", "=", "value"], "question": "What region is Kabul in?", "question_toks": ["What", "region", "is", "Kabul", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kabul\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "711", "answer_text": [["Southern and Central Asia"]], "trigger_words": ["Region"], "Prediction": "country.Region \nFROM city \nJOIN country ON city.CountryCode=country.Code \nWHERE city.Name='Kabul';"}
{"db_id": "world_1", "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1", "query_toks": ["SELECT", "T2.Language", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T1.Name", "=", "``", "Aruba", "''", "ORDER", "BY", "Percentage", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t1", ".", "name", "=", "value", "order", "by", "percentage", "desc", "limit", "value"], "question": "Which language is the most popular in Aruba?", "question_toks": ["Which", "language", "is", "the", "most", "popular", "in", "Aruba", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Aruba\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 26, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "712", "answer_text": [["Papiamento"]], "trigger_words": ["Language"], "Prediction": "Language \nFROM countrylanguage \nWHERE CountryCode = 'ABW' \nORDER BY Percentage DESC \nLIMIT 1;"}
{"db_id": "world_1", "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1", "query_toks": ["SELECT", "T2.Language", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T1.Name", "=", "``", "Aruba", "''", "ORDER", "BY", "Percentage", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t1", ".", "name", "=", "value", "order", "by", "percentage", "desc", "limit", "value"], "question": "What language is predominantly spoken in Aruba?", "question_toks": ["What", "language", "is", "predominantly", "spoken", "in", "Aruba", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Aruba\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 26, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "713", "answer_text": [["Papiamento"]], "trigger_words": ["Language"], "Prediction": "Language FROM countrylanguage WHERE CountryCode='ABW' AND IsOfficial='T'"}
{"db_id": "world_1", "query": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"", "query_toks": ["SELECT", "Population", ",", "LifeExpectancy", "FROM", "country", "WHERE", "Name", "=", "``", "Brazil", "''"], "query_toks_no_value": ["select", "population", ",", "lifeexpectancy", "from", "country", "where", "name", "=", "value"], "question": "What are the population and life expectancies in Brazil?", "question_toks": ["What", "are", "the", "population", "and", "life", "expectancies", "in", "Brazil", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Brazil\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "714", "answer_text": [[170115000, 62.9]], "trigger_words": ["Population", "Life Expectancy"], "Prediction": "Population, LifeExpectancy FROM country WHERE Name = 'Brazil';"}
{"db_id": "world_1", "query": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"", "query_toks": ["SELECT", "Population", ",", "LifeExpectancy", "FROM", "country", "WHERE", "Name", "=", "``", "Brazil", "''"], "query_toks_no_value": ["select", "population", ",", "lifeexpectancy", "from", "country", "where", "name", "=", "value"], "question": "Give me Brazil\u2019s population and life expectancies.", "question_toks": ["Give", "me", "Brazil\u2019s", "population", "and", "life", "expectancies", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Brazil\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "715", "answer_text": [[170115000, 62.9]], "trigger_words": ["Population", "Life Expectancy"], "Prediction": "Population, LifeExpectancy FROM country WHERE Name = 'Brazil';"}
{"db_id": "world_1", "query": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"", "query_toks": ["SELECT", "Population", ",", "Region", "FROM", "country", "WHERE", "Name", "=", "``", "Angola", "''"], "query_toks_no_value": ["select", "population", ",", "region", "from", "country", "where", "name", "=", "value"], "question": "What are the region and population of Angola?", "question_toks": ["What", "are", "the", "region", "and", "population", "of", "Angola", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Angola\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "716", "answer_text": [[12878000, "Central Africa"]], "trigger_words": ["Population", "Region"], "Prediction": "Region, Population FROM country WHERE Name = 'Angola';"}
{"db_id": "world_1", "query": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"", "query_toks": ["SELECT", "Population", ",", "Region", "FROM", "country", "WHERE", "Name", "=", "``", "Angola", "''"], "query_toks_no_value": ["select", "population", ",", "region", "from", "country", "where", "name", "=", "value"], "question": "What region does Angola belong to and what is its population?", "question_toks": ["What", "region", "does", "Angola", "belong", "to", "and", "what", "is", "its", "population", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Angola\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "717", "answer_text": [[12878000, "Central Africa"]], "trigger_words": ["Population", "Region"], "Prediction": "Region, Population FROM country WHERE Name = 'Angola';"}
{"db_id": "world_1", "query": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"", "query_toks": ["SELECT", "avg", "(", "LifeExpectancy", ")", "FROM", "country", "WHERE", "Region", "=", "``", "Central", "Africa", "''"], "query_toks_no_value": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "region", "=", "value"], "question": "What is the average expected life expectancy for countries in the region of Central Africa?", "question_toks": ["What", "is", "the", "average", "expected", "life", "expectancy", "for", "countries", "in", "the", "region", "of", "Central", "Africa", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Central Africa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "718", "answer_text": [[50.31111111111111]], "trigger_words": ["Average Number"], "Prediction": "AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';"}
{"db_id": "world_1", "query": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"", "query_toks": ["SELECT", "avg", "(", "LifeExpectancy", ")", "FROM", "country", "WHERE", "Region", "=", "``", "Central", "Africa", "''"], "query_toks_no_value": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "region", "=", "value"], "question": "How long is the people\u2019s average life expectancy in Central Africa?", "question_toks": ["How", "long", "is", "the", "people\u2019s", "average", "life", "expectancy", "in", "Central", "Africa", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Central Africa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "719", "answer_text": [[50.31111111111111]], "trigger_words": ["Average Number"], "Prediction": "AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND Region = 'Central Africa';"}
{"db_id": "world_1", "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''", "ORDER", "BY", "LifeExpectancy", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "country", "where", "continent", "=", "value", "order", "by", "lifeexpectancy", "limit", "value"], "question": "What is the name of country that has the shortest life expectancy in Asia?", "question_toks": ["What", "is", "the", "name", "of", "country", "that", "has", "the", "shortest", "life", "expectancy", "in", "Asia", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 15, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "720", "answer_text": [["Afghanistan"]], "trigger_words": ["Name"], "Prediction": "country.Name \nFROM country \nWHERE country.Continent = 'Asia' \nORDER BY country.LifeExpectancy ASC \nLIMIT 1;"}
{"db_id": "world_1", "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''", "ORDER", "BY", "LifeExpectancy", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "country", "where", "continent", "=", "value", "order", "by", "lifeexpectancy", "limit", "value"], "question": "Give the name of the country in Asia with the lowest life expectancy.", "question_toks": ["Give", "the", "name", "of", "the", "country", "in", "Asia", "with", "the", "lowest", "life", "expectancy", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 15, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "721", "answer_text": [["Afghanistan"]], "trigger_words": ["Name"], "Prediction": "country.Name \nFROM country \nWHERE country.Continent = 'Asia' \nORDER BY country.LifeExpectancy ASC \nLIMIT 1;"}
{"db_id": "world_1", "query": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"", "query_toks": ["SELECT", "sum", "(", "Population", ")", ",", "max", "(", "GNP", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''"], "query_toks_no_value": ["select", "sum", "(", "population", ")", ",", "max", "(", "gnp", ")", "from", "country", "where", "continent", "=", "value"], "question": "What is the total population and maximum GNP in Asia?", "question_toks": ["What", "is", "the", "total", "population", "and", "maximum", "GNP", "in", "Asia", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [1, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "722", "answer_text": [[3705025700, 3787042.0]], "trigger_words": ["Total Number", "Maximal Number"], "Prediction": "SUM(country.Population), MAX(country.GNP) FROM country WHERE country.Continent='Asia';"}
{"db_id": "world_1", "query": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"", "query_toks": ["SELECT", "sum", "(", "Population", ")", ",", "max", "(", "GNP", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''"], "query_toks_no_value": ["select", "sum", "(", "population", ")", ",", "max", "(", "gnp", ")", "from", "country", "where", "continent", "=", "value"], "question": "How many people live in Asia, and what is the largest GNP among them?", "question_toks": ["How", "many", "people", "live", "in", "Asia", ",", "and", "what", "is", "the", "largest", "GNP", "among", "them", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [1, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "723", "answer_text": [[3705025700, 3787042.0]], "trigger_words": ["Total Number", "Maximal Number"], "Prediction": "SUM(city.Population), MAX(country.GNP) FROM city JOIN country ON city.CountryCode=country.Code WHERE country.Continent='Asia';"}
{"db_id": "world_1", "query": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"", "query_toks": ["SELECT", "avg", "(", "LifeExpectancy", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Africa", "''", "AND", "GovernmentForm", "=", "``", "Republic", "''"], "query_toks_no_value": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "continent", "=", "value", "and", "governmentform", "=", "value"], "question": "What is the average life expectancy in African countries that are republics?", "question_toks": ["What", "is", "the", "average", "life", "expectancy", "in", "African", "countries", "that", "are", "republics", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null], "and", [false, 2, [0, [0, 19, false], null], "\"Republic\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "724", "answer_text": [[50.84347826086956]], "trigger_words": ["Average Number"], "Prediction": "AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic';"}
{"db_id": "world_1", "query": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"", "query_toks": ["SELECT", "avg", "(", "LifeExpectancy", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Africa", "''", "AND", "GovernmentForm", "=", "``", "Republic", "''"], "query_toks_no_value": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "continent", "=", "value", "and", "governmentform", "=", "value"], "question": "Give the average life expectancy for countries in Africa which are republics?", "question_toks": ["Give", "the", "average", "life", "expectancy", "for", "countries", "in", "Africa", "which", "are", "republics", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null], "and", [false, 2, [0, [0, 19, false], null], "\"Republic\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "725", "answer_text": [[50.84347826086956]], "trigger_words": ["Average Number"], "Prediction": "AVG(LifeExpectancy) FROM country WHERE Continent='Africa' AND GovernmentForm='Republic';"}
{"db_id": "world_1", "query": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"", "query_toks": ["SELECT", "sum", "(", "SurfaceArea", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''", "OR", "Continent", "=", "``", "Europe", "''"], "query_toks_no_value": ["select", "sum", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", "or", "continent", "=", "value"], "question": "What is the total surface area of the continents Asia and Europe?", "question_toks": ["What", "is", "the", "total", "surface", "area", "of", "the", "continents", "Asia", "and", "Europe", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null], "or", [false, 2, [0, [0, 10, false], null], "\"Europe\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "726", "answer_text": [[54930138.9]], "trigger_words": ["Total Number"], "Prediction": "SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');"}
{"db_id": "world_1", "query": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"", "query_toks": ["SELECT", "sum", "(", "SurfaceArea", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''", "OR", "Continent", "=", "``", "Europe", "''"], "query_toks_no_value": ["select", "sum", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", "or", "continent", "=", "value"], "question": "Give the total surface area covered by countries in Asia or Europe.", "question_toks": ["Give", "the", "total", "surface", "area", "covered", "by", "countries", "in", "Asia", "or", "Europe", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null], "or", [false, 2, [0, [0, 10, false], null], "\"Europe\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "727", "answer_text": [[54930138.9]], "trigger_words": ["Total Number"], "Prediction": "SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');"}
{"db_id": "world_1", "query": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"", "query_toks": ["SELECT", "sum", "(", "Population", ")", "FROM", "city", "WHERE", "District", "=", "``", "Gelderland", "''"], "query_toks_no_value": ["select", "sum", "(", "population", ")", "from", "city", "where", "district", "=", "value"], "question": "How many people live in Gelderland district?", "question_toks": ["How", "many", "people", "live", "in", "Gelderland", "district", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[4, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Gelderland\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "728", "answer_text": [[545548]], "trigger_words": ["Total Number"], "Prediction": "SUM(Population) FROM city WHERE District = 'Gelderland';"}
{"db_id": "world_1", "query": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"", "query_toks": ["SELECT", "sum", "(", "Population", ")", "FROM", "city", "WHERE", "District", "=", "``", "Gelderland", "''"], "query_toks_no_value": ["select", "sum", "(", "population", ")", "from", "city", "where", "district", "=", "value"], "question": "What is the total population of Gelderland district?", "question_toks": ["What", "is", "the", "total", "population", "of", "Gelderland", "district", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[4, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Gelderland\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "729", "answer_text": [[545548]], "trigger_words": ["Total Number"], "Prediction": "SUM(Population) FROM city WHERE District = 'Gelderland';"}
{"db_id": "world_1", "query": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"", "query_toks": ["SELECT", "avg", "(", "GNP", ")", ",", "sum", "(", "population", ")", "FROM", "country", "WHERE", "GovernmentForm", "=", "``", "US", "Territory", "''"], "query_toks_no_value": ["select", "avg", "(", "gnp", ")", ",", "sum", "(", "population", ")", "from", "country", "where", "governmentform", "=", "value"], "question": "What is the average GNP and total population in all nations whose government is US territory?", "question_toks": ["What", "is", "the", "average", "GNP", "and", "total", "population", "in", "all", "nations", "whose", "government", "is", "US", "territory", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 16, false], null]], [4, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"US Territory\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "730", "answer_text": [[510.3333333333333, 329000]], "trigger_words": ["Average Number", "Total Number"], "Prediction": "AVG(GNP), SUM(Population) FROM country WHERE GovernmentForm = 'US territory';"}
{"db_id": "world_1", "query": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"", "query_toks": ["SELECT", "avg", "(", "GNP", ")", ",", "sum", "(", "population", ")", "FROM", "country", "WHERE", "GovernmentForm", "=", "``", "US", "Territory", "''"], "query_toks_no_value": ["select", "avg", "(", "gnp", ")", ",", "sum", "(", "population", ")", "from", "country", "where", "governmentform", "=", "value"], "question": "Give the mean GNP and total population of nations which are considered US territory.", "question_toks": ["Give", "the", "mean", "GNP", "and", "total", "population", "of", "nations", "which", "are", "considered", "US", "territory", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 16, false], null]], [4, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"US Territory\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "731", "answer_text": [[510.3333333333333, 329000]], "trigger_words": ["Average Number", "Total Number"], "Prediction": "AVG(GNP), SUM(Population) FROM country WHERE Continent = 'North America' AND Region = 'Caribbean' AND GovernmentForm = 'Nonmetropolitan Territory of The US'"}
{"db_id": "world_1", "query": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage", "query_toks": ["SELECT", "count", "(", "DISTINCT", "LANGUAGE", ")", "FROM", "countrylanguage"], "query_toks_no_value": ["select", "count", "(", "distinct", "language", ")", "from", "countrylanguage"], "question": "How many unique languages are spoken in the world?", "question_toks": ["How", "many", "unique", "languages", "are", "spoken", "in", "the", "world", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 24, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "732", "answer_text": [[457]], "trigger_words": ["Number Of Language"], "Prediction": "COUNT(DISTINCT Language) FROM countrylanguage;"}
{"db_id": "world_1", "query": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage", "query_toks": ["SELECT", "count", "(", "DISTINCT", "LANGUAGE", ")", "FROM", "countrylanguage"], "query_toks_no_value": ["select", "count", "(", "distinct", "language", ")", "from", "countrylanguage"], "question": "What is the number of distinct languages used around the world?", "question_toks": ["What", "is", "the", "number", "of", "distinct", "languages", "used", "around", "the", "world", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 24, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "733", "answer_text": [[457]], "trigger_words": ["Number Of Language"], "Prediction": "COUNT(DISTINCT Language) FROM countrylanguage;"}
{"db_id": "world_1", "query": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"", "query_toks": ["SELECT", "count", "(", "DISTINCT", "GovernmentForm", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Africa", "''"], "query_toks_no_value": ["select", "count", "(", "distinct", "governmentform", ")", "from", "country", "where", "continent", "=", "value"], "question": "How many type of governments are in Africa?", "question_toks": ["How", "many", "type", "of", "governments", "are", "in", "Africa", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 19, true], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "734", "answer_text": [[10]], "trigger_words": ["Number Of Government Form"], "Prediction": "COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';"}
{"db_id": "world_1", "query": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"", "query_toks": ["SELECT", "count", "(", "DISTINCT", "GovernmentForm", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Africa", "''"], "query_toks_no_value": ["select", "count", "(", "distinct", "governmentform", ")", "from", "country", "where", "continent", "=", "value"], "question": "How many different forms of governments are there in Africa?", "question_toks": ["How", "many", "different", "forms", "of", "governments", "are", "there", "in", "Africa", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 19, true], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "735", "answer_text": [[10]], "trigger_words": ["Number Of Government Form"], "Prediction": "COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';"}
{"db_id": "world_1", "query": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"", "query_toks": ["SELECT", "COUNT", "(", "T2.Language", ")", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T1.Name", "=", "``", "Aruba", "''"], "query_toks_no_value": ["select", "count", "(", "t2", ".", "language", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t1", ".", "name", "=", "value"], "question": "What is the total number of languages used in Aruba?", "question_toks": ["What", "is", "the", "total", "number", "of", "languages", "used", "in", "Aruba", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Aruba\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "736", "answer_text": [[4]], "trigger_words": ["Number"], "Prediction": "COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'ABW';"}
{"db_id": "world_1", "query": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"", "query_toks": ["SELECT", "COUNT", "(", "T2.Language", ")", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T1.Name", "=", "``", "Aruba", "''"], "query_toks_no_value": ["select", "count", "(", "t2", ".", "language", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t1", ".", "name", "=", "value"], "question": "How many languages are spoken in Aruba?", "question_toks": ["How", "many", "languages", "are", "spoken", "in", "Aruba", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Aruba\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "737", "answer_text": [[4]], "trigger_words": ["Number"], "Prediction": "COUNT(Language) FROM countrylanguage WHERE CountryCode='ABW';"}
{"db_id": "world_1", "query": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T1.Name", "=", "``", "Afghanistan", "''", "AND", "IsOfficial", "=", "``", "T", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t1", ".", "name", "=", "value", "and", "isofficial", "=", "value"], "question": "How many official languages does Afghanistan have?", "question_toks": ["How", "many", "official", "languages", "does", "Afghanistan", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Afghanistan\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "738", "answer_text": [[2]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM countrylanguage WHERE CountryCode='AFG' AND IsOfficial='T';"}
{"db_id": "world_1", "query": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T1.Name", "=", "``", "Afghanistan", "''", "AND", "IsOfficial", "=", "``", "T", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t1", ".", "name", "=", "value", "and", "isofficial", "=", "value"], "question": "How many official languages are spoken in Afghanistan?", "question_toks": ["How", "many", "official", "languages", "are", "spoken", "in", "Afghanistan", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Afghanistan\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "739", "answer_text": [[2]], "trigger_words": ["Number"], "Prediction": "COUNT(Language) FROM countrylanguage WHERE CountryCode='AFG' AND IsOfficial='T';"}
{"db_id": "world_1", "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "GROUP", "BY", "T1.Name", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "group", "by", "t1", ".", "name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is name of the country that speaks the largest number of languages?", "question_toks": ["What", "is", "name", "of", "the", "country", "that", "speaks", "the", "largest", "number", "of", "languages", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "740", "answer_text": [["United States"]], "trigger_words": ["Name"], "Prediction": "country.Name \nFROM country \nJOIN countrylanguage ON country.Code=countrylanguage.CountryCode \nGROUP BY country.Code \nORDER BY COUNT(countrylanguage.Language) DESC \nLIMIT 1;"}
{"db_id": "world_1", "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "GROUP", "BY", "T1.Name", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "group", "by", "t1", ".", "name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Give the name of the nation that uses the greatest amount of languages.", "question_toks": ["Give", "the", "name", "of", "the", "nation", "that", "uses", "the", "greatest", "amount", "of", "languages", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "741", "answer_text": [["United States"]], "trigger_words": ["Name"], "Prediction": "country.Name \nFROM country \nJOIN countrylanguage ON country.Code=countrylanguage.CountryCode \nGROUP BY country.Code \nORDER BY COUNT(countrylanguage.Language) DESC \nLIMIT 1;"}
{"db_id": "world_1", "query": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Continent", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "GROUP", "BY", "T1.Continent", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "continent", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "group", "by", "t1", ".", "continent", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which continent has the most diverse languages?", "question_toks": ["Which", "continent", "has", "the", "most", "diverse", "languages", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "742", "answer_text": [["Africa"]], "trigger_words": ["Continent"], "Prediction": "country.Continent \nFROM country \nJOIN countrylanguage ON country.Code=countrylanguage.CountryCode \nGROUP BY country.Continent \nORDER BY COUNT(DISTINCT countrylanguage.Language) DESC \nLIMIT 1;"}
{"db_id": "world_1", "query": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Continent", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "GROUP", "BY", "T1.Continent", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "continent", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "group", "by", "t1", ".", "continent", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which continent speaks the most languages?", "question_toks": ["Which", "continent", "speaks", "the", "most", "languages", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "743", "answer_text": [["Africa"]], "trigger_words": ["Continent"], "Prediction": "Continent, COUNT(DISTINCT Language) AS NumLanguages \n FROM countrylanguage \n JOIN country ON countrylanguage.CountryCode=country.Code \n GROUP BY Continent \n ORDER BY NumLanguages DESC \n LIMIT 1;"}
{"db_id": "world_1", "query": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "(", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "INTERSECT", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "Dutch", "''", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "(", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "intersect", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", ")"], "question": "How many countries speak both English and Dutch?", "question_toks": ["How", "many", "countries", "speak", "both", "English", "and", "Dutch", "?"], "sql": {"from": {"table_units": [["sql", {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Dutch\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "744", "answer_text": [[3]], "trigger_words": ["Number"], "Prediction": "COUNT(DISTINCT countrylanguage.CountryCode) \nFROM countrylanguage \nWHERE Language = 'English' AND CountryCode IN \n    (SELECT CountryCode FROM countrylanguage WHERE Language = 'Dutch')"}
{"db_id": "world_1", "query": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "(", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "INTERSECT", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "Dutch", "''", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "(", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "intersect", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", ")"], "question": "What is the number of nations that use English and Dutch?", "question_toks": ["What", "is", "the", "number", "of", "nations", "that", "use", "English", "and", "Dutch", "?"], "sql": {"from": {"table_units": [["sql", {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Dutch\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "745", "answer_text": [[3]], "trigger_words": ["Number"], "Prediction": "COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language IN ('English', 'Dutch');"}
{"db_id": "world_1", "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"", "query_toks": ["SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "INTERSECT", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "French", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "intersect", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value"], "question": "What are the names of nations speak both English and French?", "question_toks": ["What", "are", "the", "names", "of", "nations", "speak", "both", "English", "and", "French", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"French\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "746", "answer_text": [["Canada"], ["Monaco"], ["Seychelles"], ["United States"], ["Vanuatu"], ["Virgin Islands, U.S."]], "trigger_words": ["Name"], "Prediction": "country.Name \nFROM country \nINNER JOIN countrylanguage ON country.Code=countrylanguage.CountryCode \nWHERE countrylanguage.Language='English' AND countrylanguage.IsOfficial='T' \nAND country.Code IN (SELECT CountryCode FROM countrylanguage WHERE Language='French' AND IsOfficial='T');"}
{"db_id": "world_1", "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"", "query_toks": ["SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "INTERSECT", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "French", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "intersect", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value"], "question": "Give the names of nations that speak both English and French.", "question_toks": ["Give", "the", "names", "of", "nations", "that", "speak", "both", "English", "and", "French", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"French\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "747", "answer_text": [["Canada"], ["Monaco"], ["Seychelles"], ["United States"], ["Vanuatu"], ["Virgin Islands, U.S."]], "trigger_words": ["Name"], "Prediction": "country.Name \nFROM country \nINNER JOIN countrylanguage ON country.Code=countrylanguage.CountryCode \nWHERE countrylanguage.Language='English' AND country.Code IN \n(SELECT CountryCode FROM countrylanguage WHERE Language='French');"}
{"db_id": "world_1", "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"", "query_toks": ["SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "AND", "T2.IsOfficial", "=", "``", "T", "''", "INTERSECT", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "French", "''", "AND", "T2.IsOfficial", "=", "``", "T", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "and", "t2", ".", "isofficial", "=", "value", "intersect", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "and", "t2", ".", "isofficial", "=", "value"], "question": "What are the names of nations where both English and French are official languages?", "question_toks": ["What", "are", "the", "names", "of", "nations", "where", "both", "English", "and", "French", "are", "official", "languages", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"French\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "748", "answer_text": [["Canada"], ["Seychelles"], ["Vanuatu"]], "trigger_words": ["Name"], "Prediction": "country.Name \nFROM country \nINNER JOIN countrylanguage ON country.Code=countrylanguage.CountryCode \nWHERE countrylanguage.Language='English' AND countrylanguage.IsOfficial='T' \nAND EXISTS (SELECT * FROM countrylanguage WHERE CountryCode=country.Code AND Language='French' AND IsOfficial='T');"}
{"db_id": "world_1", "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"", "query_toks": ["SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "AND", "T2.IsOfficial", "=", "``", "T", "''", "INTERSECT", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "French", "''", "AND", "T2.IsOfficial", "=", "``", "T", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "and", "t2", ".", "isofficial", "=", "value", "intersect", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "and", "t2", ".", "isofficial", "=", "value"], "question": "Give the names of countries with English and French as official languages.", "question_toks": ["Give", "the", "names", "of", "countries", "with", "English", "and", "French", "as", "official", "languages", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"French\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "749", "answer_text": [["Canada"], ["Seychelles"], ["Vanuatu"]], "trigger_words": ["Name"], "Prediction": "country.Name \nFROM country \nINNER JOIN countrylanguage ON country.Code=countrylanguage.CountryCode \nWHERE countrylanguage.Language='English' AND countrylanguage.IsOfficial='T' \nINTERSECT \nSELECT country.Name \nFROM country \nINNER JOIN countrylanguage ON country.Code=countrylanguage.CountryCode \nWHERE countrylanguage.Language='French' AND countrylanguage.IsOfficial='T';"}
{"db_id": "world_1", "query": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "Continent", ")", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "Chinese", "''"], "query_toks_no_value": ["select", "count", "(", "distinct", "continent", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value"], "question": "What is the number of distinct continents where Chinese is spoken?", "question_toks": ["What", "is", "the", "number", "of", "distinct", "continents", "where", "Chinese", "is", "spoken", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 10, true], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Chinese\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "750", "answer_text": [[4]], "trigger_words": ["Number Of Count( Distinct Continent"], "Prediction": "COUNT(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code=countrylanguage.CountryCode WHERE countrylanguage.Language='Chinese' AND countrylanguage.IsOfficial='T';"}
{"db_id": "world_1", "query": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "Continent", ")", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "Chinese", "''"], "query_toks_no_value": ["select", "count", "(", "distinct", "continent", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value"], "question": "How many continents speak Chinese?", "question_toks": ["How", "many", "continents", "speak", "Chinese", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 10, true], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Chinese\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "751", "answer_text": [[4]], "trigger_words": ["Number Of Count( Distinct Continent"], "Prediction": "COUNT(DISTINCT country.Continent) FROM countrylanguage \nINNER JOIN country ON countrylanguage.CountryCode=country.Code \nWHERE countrylanguage.Language='Chinese' AND countrylanguage.IsOfficial='T';"}
{"db_id": "world_1", "query": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"", "query_toks": ["SELECT", "DISTINCT", "T1.Region", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "OR", "T2.Language", "=", "``", "Dutch", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "region", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "or", "t2", ".", "language", "=", "value"], "question": "What are the regions that use English or Dutch?", "question_toks": ["What", "are", "the", "regions", "that", "use", "English", "or", "Dutch", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null], "or", [false, 2, [0, [0, 24, false], null], "\"Dutch\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "752", "answer_text": [["Caribbean"], ["Polynesia"], ["Australia and New Zealand"], ["Western Europe"], ["Middle East"], ["Central America"], ["North America"], ["Southeast Asia"], ["Nordic Countries"], ["South America"], ["British Islands"], ["Southern Europe"], ["Micronesia"], ["Eastern Asia"], ["Southern Africa"], ["Southern and Central Asia"], ["Western Africa"], ["Eastern Africa"], ["Micronesia/Caribbean"], ["Melanesia"]], "trigger_words": ["Region"], "Prediction": "country.Region \nFROM country \nJOIN countrylanguage ON country.Code=countrylanguage.CountryCode \nWHERE countrylanguage.Language IN ('English', 'Dutch');"}
{"db_id": "world_1", "query": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"", "query_toks": ["SELECT", "DISTINCT", "T1.Region", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "OR", "T2.Language", "=", "``", "Dutch", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "region", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "or", "t2", ".", "language", "=", "value"], "question": "Which regions speak Dutch or English?", "question_toks": ["Which", "regions", "speak", "Dutch", "or", "English", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null], "or", [false, 2, [0, [0, 24, false], null], "\"Dutch\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "753", "answer_text": [["Caribbean"], ["Polynesia"], ["Australia and New Zealand"], ["Western Europe"], ["Middle East"], ["Central America"], ["North America"], ["Southeast Asia"], ["Nordic Countries"], ["South America"], ["British Islands"], ["Southern Europe"], ["Micronesia"], ["Eastern Asia"], ["Southern Africa"], ["Southern and Central Asia"], ["Western Africa"], ["Eastern Africa"], ["Micronesia/Caribbean"], ["Melanesia"]], "trigger_words": ["Region"], "Prediction": "country.Region\nFROM country\nJOIN countrylanguage ON country.Code=countrylanguage.CountryCode\nWHERE countrylanguage.Language IN ('Dutch', 'English');"}
{"db_id": "world_1", "query": "select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"english\" and isofficial  =  \"t\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"dutch\" and isofficial  =  \"t\"", "query_toks": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"english\"", "and", "isofficial", "=", "\"t\"", "union", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"dutch\"", "and", "isofficial", "=", "\"t\""], "query_toks_no_value": ["select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "and", "isofficial", "=", "value", "union", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "and", "isofficial", "=", "value"], "question": "What are the countries where either English or Dutch is the official language ?", "question_toks": ["What", "are", "the", "countries", "where", "either", "English", "or", "Dutch", "is", "the", "official", "language", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"english\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"t\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"dutch\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"t\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "id": "754", "answer_text": [], "trigger_words": ["Name"], "Prediction": "country.Name \nFROM country \nJOIN countrylanguage ON country.Code=countrylanguage.CountryCode \nWHERE (countrylanguage.Language='English' OR countrylanguage.Language='Dutch') AND countrylanguage.IsOfficial='T';"}
{"db_id": "world_1", "query": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"", "query_toks": ["SELECT", "*", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "AND", "IsOfficial", "=", "``", "T", "''", "UNION", "SELECT", "*", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "Dutch", "''", "AND", "IsOfficial", "=", "``", "T", "''"], "query_toks_no_value": ["select", "*", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "and", "isofficial", "=", "value", "union", "select", "*", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "and", "isofficial", "=", "value"], "question": "Which countries have either English or Dutch as an official language?", "question_toks": ["Which", "countries", "have", "either", "English", "or", "Dutch", "as", "an", "official", "language", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Dutch\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "id": "755", "answer_text": [["ABW", "Aruba", "North America", "Caribbean", 193.0, null, 103000, 78.4, 828.0, 793.0, "Aruba", "Nonmetropolitan Territory of The Netherlands", "Beatrix", 129, "AW", "ABW", "Dutch", "T", 5.3], ["AIA", "Anguilla", "North America", "Caribbean", 96.0, null, 8000, 76.1, 63.2, null, "Anguilla", "Dependent Territory of the UK", "Elisabeth II", 62, "AI", "AIA", "English", "T", 0.0], ["ANT", "Netherlands Antilles", "North America", "Caribbean", 800.0, null, 217000, 74.7, 1941.0, null, "Nederlandse Antillen", "Nonmetropolitan Territory of The Netherlands", "Beatrix", 33, "AN", "ANT", "Dutch", "T", 0.0], ["ASM", "American Samoa", "Oceania", "Polynesia", 199.0, null, 68000, 75.1, 334.0, null, "Amerika Samoa", "US Territory", "George W. Bush", 54, "AS", "ASM", "English", "T", 3.1], ["ATG", "Antigua and Barbuda", "North America", "Caribbean", 442.0, 1981, 68000, 70.5, 612.0, 584.0, "Antigua and Barbuda", "Constitutional Monarchy", "Elisabeth II", 63, "AG", "ATG", "English", "T", 0.0], ["AUS", "Australia", "Oceania", "Australia and New Zealand", 7741220.0, 1901, 18886000, 79.8, 351182.0, 392911.0, "Australia", "Constitutional Monarchy, Federation", "Elisabeth II", 135, "AU", "AUS", "English", "T", 81.2], ["BEL", "Belgium", "Europe", "Western Europe", 30518.0, 1830, 10239000, 77.8, 249704.0, 243948.0, "Belgi\u00eb/Belgique", "Constitutional Monarchy, Federation", "Albert II", 179, "BE", "BEL", "Dutch", "T", 59.2], ["BLZ", "Belize", "North America", "Central America", 22696.0, 1981, 241000, 70.9, 630.0, 616.0, "Belize", "Constitutional Monarchy", "Elisabeth II", 185, "BZ", "BLZ", "English", "T", 50.8], ["BMU", "Bermuda", "North America", "North America", 53.0, null, 65000, 76.9, 2328.0, 2190.0, "Bermuda", "Dependent Territory of the UK", "Elisabeth II", 191, "BM", "BMU", "English", "T", 100.0], ["BRB", "Barbados", "North America", "Caribbean", 430.0, 1966, 270000, 73.0, 2223.0, 2186.0, "Barbados", "Constitutional Monarchy", "Elisabeth II", 174, "BB", "BRB", "English", "T", 0.0], ["CAN", "Canada", "North America", "North America", 9970610.0, 1867, 31147000, 79.4, 598862.0, 625626.0, "Canada", "Constitutional Monarchy, Federation", "Elisabeth II", 1822, "CA", "CAN", "English", "T", 60.4], ["CCK", "Cocos (Keeling) Islands", "Oceania", "Australia and New Zealand", 14.0, null, 600, null, 0.0, null, "Cocos (Keeling) Islands", "Territory of Australia", "Elisabeth II", 2317, "CC", "CCK", "English", "T", 0.0], ["CXR", "Christmas Island", "Oceania", "Australia and New Zealand", 135.0, null, 2500, null, 0.0, null, "Christmas Island", "Territory of Australia", "Elisabeth II", 1791, "CX", "CXR", "English", "T", 0.0], ["CYM", "Cayman Islands", "North America", "Caribbean", 264.0, null, 38000, 78.9, 1263.0, 1186.0, "Cayman Islands", "Dependent Territory of the UK", "Elisabeth II", 553, "KY", "CYM", "English", "T", 0.0], ["FLK", "Falkland Islands", "South America", "South America", 12173.0, null, 2000, null, 0.0, null, "Falkland Islands", "Dependent Territory of the UK", "Elisabeth II", 763, "FK", "FLK", "English", "T", 0.0], ["GBR", "United Kingdom", "Europe", "British Islands", 242900.0, 1066, 59623400, 77.7, 1378330.0, 1296830.0, "United Kingdom", "Constitutional Monarchy", "Elisabeth II", 456, "GB", "GBR", "English", "T", 97.3], ["GIB", "Gibraltar", "Europe", "Southern Europe", 6.0, null, 25000, 79.0, 258.0, null, "Gibraltar", "Dependent Territory of the UK", "Elisabeth II", 915, "GI", "GIB", "English", "T", 88.9], ["GUM", "Guam", "Oceania", "Micronesia", 549.0, null, 168000, 77.8, 1197.0, 1136.0, "Guam", "US Territory", "George W. Bush", 921, "GU", "GUM", "English", "T", 37.5], ["HKG", "Hong Kong", "Asia", "Eastern Asia", 1075.0, null, 6782000, 79.5, 166448.0, 173610.0, "Xianggang/Hong Kong", "Special Administrative Region of China", "Jiang Zemin", 937, "HK", "HKG", "English", "T", 2.2], ["IRL", "Ireland", "Europe", "British Islands", 70273.0, 1921, 3775100, 76.8, 75921.0, 73132.0, "Ireland/\u00c9ire", "Republic", "Mary McAleese", 1447, "IE", "IRL", "English", "T", 98.4], ["KNA", "Saint Kitts and Nevis", "North America", "Caribbean", 261.0, 1983, 38000, 70.7, 299.0, null, "Saint Kitts and Nevis", "Constitutional Monarchy", "Elisabeth II", 3064, "KN", "KNA", "English", "T", 0.0], ["LCA", "Saint Lucia", "North America", "Caribbean", 622.0, 1979, 154000, 72.3, 571.0, null, "Saint Lucia", "Constitutional Monarchy", "Elisabeth II", 3065, "LC", "LCA", "English", "T", 20.0], ["LSO", "Lesotho", "Africa", "Southern Africa", 30355.0, 1966, 2153000, 50.8, 1061.0, 1161.0, "Lesotho", "Constitutional Monarchy", "Letsie III", 2437, "LS", "LSO", "English", "T", 0.0], ["MHL", "Marshall Islands", "Oceania", "Micronesia", 181.0, 1990, 64000, 65.5, 97.0, null, "Marshall Islands/Majol", "Republic", "Kessai Note", 2507, "MH", "MHL", "English", "T", 0.0], ["MLT", "Malta", "Europe", "Southern Europe", 316.0, 1964, 380200, 77.9, 3512.0, 3338.0, "Malta", "Republic", "Guido de Marco", 2484, "MT", "MLT", "English", "T", 2.1], ["MNP", "Northern Mariana Islands", "Oceania", "Micronesia", 464.0, null, 78000, 75.5, 0.0, null, "Northern Mariana Islands", "Commonwealth of the US", "George W. Bush", 2913, "MP", "MNP", "English", "T", 4.8], ["MSR", "Montserrat", "North America", "Caribbean", 102.0, null, 11000, 78.0, 109.0, null, "Montserrat", "Dependent Territory of the UK", "Elisabeth II", 2697, "MS", "MSR", "English", "T", 0.0], ["NFK", "Norfolk Island", "Oceania", "Australia and New Zealand", 36.0, null, 2000, null, 0.0, null, "Norfolk Island", "Territory of Australia", "Elisabeth II", 2806, "NF", "NFK", "English", "T", 0.0], ["NIU", "Niue", "Oceania", "Polynesia", 260.0, null, 2000, null, 0.0, null, "Niue", "Nonmetropolitan Territory of New Zealand", "Elisabeth II", 2805, "NU", "NIU", "English", "T", 0.0], ["NLD", "Netherlands", "Europe", "Western Europe", 41526.0, 1581, 15864000, 78.3, 371362.0, 360478.0, "Nederland", "Constitutional Monarchy", "Beatrix", 5, "NL", "NLD", "Dutch", "T", 95.6], ["NRU", "Nauru", "Oceania", "Micronesia", 21.0, 1968, 12000, 60.8, 197.0, null, "Naoero/Nauru", "Republic", "Bernard Dowiyogo", 2728, "NR", "NRU", "English", "T", 7.5], ["NZL", "New Zealand", "Oceania", "Australia and New Zealand", 270534.0, 1907, 3862000, 77.8, 54669.0, 64960.0, "New Zealand/Aotearoa", "Constitutional Monarchy", "Elisabeth II", 3499, "NZ", "NZL", "English", "T", 87.0], ["PLW", "Palau", "Oceania", "Micronesia", 459.0, 1994, 19000, 68.6, 105.0, null, "Belau/Palau", "Republic", "Kuniwo Nakamura", 2881, "PW", "PLW", "English", "T", 3.2], ["SHN", "Saint Helena", "Africa", "Western Africa", 314.0, null, 6000, 76.8, 0.0, null, "Saint Helena", "Dependent Territory of the UK", "Elisabeth II", 3063, "SH", "SHN", "English", "T", 0.0], ["SYC", "Seychelles", "Africa", "Eastern Africa", 455.0, 1976, 77000, 70.4, 536.0, 539.0, "Sesel/Seychelles", "Republic", "France-Albert Ren\u00e9", 3206, "SC", "SYC", "English", "T", 3.8], ["TCA", "Turks and Caicos Islands", "North America", "Caribbean", 430.0, null, 17000, 73.3, 96.0, null, "The Turks and Caicos Islands", "Dependent Territory of the UK", "Elisabeth II", 3423, "TC", "TCA", "English", "T", 0.0], ["TKL", "Tokelau", "Oceania", "Polynesia", 12.0, null, 2000, null, 0.0, null, "Tokelau", "Nonmetropolitan Territory of New Zealand", "Elisabeth II", 3333, "TK", "TKL", "English", "T", 0.0], ["TON", "Tonga", "Oceania", "Polynesia", 650.0, 1970, 99000, 67.9, 146.0, 170.0, "Tonga", "Monarchy", "Taufa'ahau Tupou IV", 3334, "TO", "TON", "English", "T", 0.0], ["TUV", "Tuvalu", "Oceania", "Polynesia", 26.0, 1978, 12000, 66.3, 6.0, null, "Tuvalu", "Constitutional Monarchy", "Elisabeth II", 3424, "TV", "TUV", "English", "T", 0.0], ["UMI", "United States Minor Outlying Islands", "Oceania", "Micronesia/Caribbean", 16.0, null, 0, null, 0.0, null, "United States Minor Outlying Islands", "Dependent Territory of the US", "George W. Bush", null, "UM", "UMI", "English", "T", 0.0], ["USA", "United States", "North America", "North America", 9363520.0, 1776, 278357000, 77.1, 8510700.0, 8110900.0, "United States", "Federal Republic", "George W. Bush", 3813, "US", "USA", "English", "T", 86.2], ["VCT", "Saint Vincent and the Grenadines", "North America", "Caribbean", 388.0, 1979, 114000, 72.3, 285.0, null, "Saint Vincent and the Grenadines", "Constitutional Monarchy", "Elisabeth II", 3066, "VC", "VCT", "English", "T", 0.0], ["VGB", "Virgin Islands, British", "North America", "Caribbean", 151.0, null, 21000, 75.4, 612.0, 573.0, "British Virgin Islands", "Dependent Territory of the UK", "Elisabeth II", 537, "VG", "VGB", "English", "T", 0.0], ["VIR", "Virgin Islands, U.S.", "North America", "Caribbean", 347.0, null, 93000, 78.1, 0.0, null, "Virgin Islands of the United States", "US Territory", "George W. Bush", 4067, "VI", "VIR", "English", "T", 81.7], ["VUT", "Vanuatu", "Oceania", "Melanesia", 12189.0, 1980, 190000, 60.6, 261.0, 246.0, "Vanuatu", "Republic", "John Bani", 3537, "VU", "VUT", "English", "T", 28.3], ["WSM", "Samoa", "Oceania", "Polynesia", 2831.0, 1962, 180000, 69.2, 141.0, 157.0, "Samoa", "Parlementary Monarchy", "Malietoa Tanumafili II", 3169, "WS", "WSM", "English", "T", 0.6], ["ZAF", "South Africa", "Africa", "Southern Africa", 1221037.0, 1910, 40377000, 51.1, 116729.0, 129092.0, "South Africa", "Republic", "Thabo Mbeki", 716, "ZA", "ZAF", "English", "T", 8.5], ["ZWE", "Zimbabwe", "Africa", "Eastern Africa", 390757.0, 1980, 11669000, 37.8, 5951.0, 8670.0, "Zimbabwe", "Republic", "Robert G. Mugabe", 4068, "ZW", "ZWE", "English", "T", 2.2]], "trigger_words": ["Answer"], "Prediction": "country.Name \nFROM country \nJOIN countrylanguage ON country.Code=countrylanguage.CountryCode \nWHERE (countrylanguage.Language='English' OR countrylanguage.Language='Dutch') AND countrylanguage.IsOfficial='T';"}
{"db_id": "world_1", "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.Language", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T1.Continent", "=", "``", "Asia", "''", "GROUP", "BY", "T2.Language", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t1", ".", "continent", "=", "value", "group", "by", "t2", ".", "language", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which language is the most popular on the Asian continent?", "question_toks": ["Which", "language", "is", "the", "most", "popular", "on", "the", "Asian", "continent", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [[0, 24, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "756", "answer_text": [["Arabic"]], "trigger_words": ["Language"], "Prediction": "Language \nFROM countrylanguage \nJOIN country ON countrylanguage.CountryCode=country.Code \nWHERE Continent='Asia' \nORDER BY Percentage DESC \nLIMIT 1;"}
{"db_id": "world_1", "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.Language", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T1.Continent", "=", "``", "Asia", "''", "GROUP", "BY", "T2.Language", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t1", ".", "continent", "=", "value", "group", "by", "t2", ".", "language", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the language that is used by the largest number of Asian nations?", "question_toks": ["What", "is", "the", "language", "that", "is", "used", "by", "the", "largest", "number", "of", "Asian", "nations", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [[0, 24, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "757", "answer_text": [["Arabic"]], "trigger_words": ["Language"], "Prediction": "Language \nFROM countrylanguage \nJOIN country ON countrylanguage.CountryCode=country.Code \nWHERE Continent='Asia' \nGROUP BY Language \nORDER BY COUNT(DISTINCT country.Code) DESC \nLIMIT 1;"}
{"db_id": "world_1", "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1", "query_toks": ["SELECT", "T2.Language", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T1.GovernmentForm", "=", "``", "Republic", "''", "GROUP", "BY", "T2.Language", "HAVING", "COUNT", "(", "*", ")", "=", "1"], "query_toks_no_value": ["select", "t2", ".", "language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t1", ".", "governmentform", "=", "value", "group", "by", "t2", ".", "language", "having", "count", "(", "*", ")", "=", "value"], "question": "Which languages are spoken by only one country in republic governments?", "question_toks": ["Which", "languages", "are", "spoken", "by", "only", "one", "country", "in", "republic", "governments", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Republic\"", null]], "groupBy": [[0, 24, false]], "having": [[false, 2, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "758", "answer_text": [["Abhyasi"], ["Acholi"], ["Adja"], ["Aizo"], ["Ambo"], ["Amhara"], ["Ami"], ["Ane"], ["Arabic-French"], ["Arabic-French-English"], ["Araucan"], ["Assyrian"], ["Atayal"], ["Bajad"], ["Balante"], ["Bali"], ["Balochi"], ["Bambara"], ["Bamileke-bamum"], ["Banda"], ["Banja"], ["Bariba"], ["Bassa"], ["Batakki"], ["Bemba"], ["Bengali"], ["Berberi"], ["Bhojpuri"], ["Bicol"], ["Bilin"], ["Bislama"], ["Boa"], ["Brahui"], ["Bubi"], ["Bugi"], ["Bullom-sherbro"], ["Burmese"], ["Buryat"], ["Busansi"], ["Cakchiquel"], ["Caprivi"], ["Cebuano"], ["Chaga and Pare"], ["Chakma"], ["Chewa"], ["Chichewa"], ["Chin"], ["Chuabo"], ["Comorian"], ["Comorian-Arabic"], ["Comorian-French"], ["Comorian-Swahili"], ["Comorian-madagassi"], ["Cuna"], ["Czech"], ["Czech and Moravian"], ["Dagara"], ["Dariganga"], ["Dhivehi"], ["Dorbet"], ["Duala"], ["Dyula"], ["Embera"], ["Fijian"], ["Fon"], ["Friuli"], ["Ga-adangme"], ["Gagauzi"], ["Ganda"], ["Garifuna"], ["Garo"], ["Gbaya"], ["Georgiana"], ["Gio"], ["Gisu"], ["Gogo"], ["Gorane"], ["Grebo"], ["Guaym\u00ed"], ["Gur"], ["Gurage"], ["Gusii"], ["Ha"], ["Hadareb"], ["Hadjarai"], ["Haiti Creole"], ["Hakka"], ["Hassaniya"], ["Hausa"], ["Haya"], ["Hebrew"], ["Hehet"], ["Herero"], ["Hiligaynon"], ["Hindko"], ["Icelandic"], ["Ilocano"], ["Irish"], ["Javanese"], ["Kaby\u00e9"], ["Kachin"], ["Kalenjin"], ["Kamba"], ["Kanem-bornu"], ["Kanuri"], ["Karakalpak"], ["Karen"], ["Kavango"], ["Kayah"], ["Kekch\u00ed"], ["Khasi"], ["Khoekhoe"], ["Kiga"], ["Kikuyu"], ["Kirgiz"], ["Kirundi"], ["Kissi"], ["Kono-vai"], ["Korean"], ["Kotokoli"], ["Kuranko"], ["Lango"], ["Lao"], ["Lao-Soung"], ["Latvian"], ["Limba"], ["Lozi"], ["Luba"], ["Luchazi"], ["Lugbara"], ["Luguru"], ["Luhya"], ["Luimbe-nganguela"], ["Luo"], ["Luvale"], ["Madura"], ["Maguindanao"], ["Maka"], ["Makonde"], ["Makua"], ["Maltese"], ["Mam"], ["Mandara"], ["Mandarin Chinese"], ["Mandjia"], ["Mandyako"], ["Mano"], ["Maranao"], ["Marathi"], ["Marendje"], ["Marma"], ["Marshallese"], ["Masai"], ["Masana"], ["Mayo-kebbi"], ["Mboshi"], ["Mbum"], ["Mbundu"], ["Mende"], ["Meru"], ["Min"], ["Minangkabau"], ["Mixed Languages"], ["Moba"], ["Mon"], ["Mon-khmer"], ["Mongo"], ["Mongolian"], ["Moravian"], ["Mpongwe"], ["Nahua"], ["Nama"], ["Naudemba"], ["Nauru"], ["Ngala and Bangi"], ["Ngbaka"], ["Ngoni"], ["Nkole"], ["Northsotho"], ["Nsenga"], ["Nyakusa"], ["Nyamwesi"], ["Nyaneka-nkhumbi"], ["Nyika"], ["Oromo"], ["Osseetti"], ["Ouaddai"], ["Ovambo"], ["Ovimbundu"], ["Paiwan"], ["Palau"], ["Pampango"], ["Pangasinan"], ["Pashto"], ["Persian"], ["Philippene Languages"], ["Pilipino"], ["Punjabi"], ["Punu"], ["Punu-sira-nzebi"], ["Quich\u00e9"], ["Rakhine"], ["Rapa nui"], ["Ronga"], ["Rundi"], ["Saame"], ["Saho"], ["Sango"], ["Santhali"], ["Saraiki"], ["Sardinian"], ["Sena"], ["Senufo and Minianka"], ["Serer"], ["Seselwa"], ["Shambala"], ["Shan"], ["Sidamo"], ["Silesiana"], ["Sinaberberi"], ["Sindhi"], ["Singali"], ["Soga"], ["Somba"], ["Songhai"], ["Songhai-zerma"], ["Soqutri"], ["Southsotho"], ["Sranantonga"], ["Sumo"], ["Sunda"], ["Susu"], ["Swazi"], ["Swedish"], ["Tandjile"], ["Temne"], ["Teso"], ["Thai"], ["Tigre"], ["Tikar"], ["Tongan"], ["Tripuri"], ["Tswa"], ["Tukulor"], ["Turkana"], ["Turkmenian"], ["Ukrainian and Russian"], ["Urdu"], ["Venda"], ["Walaita"], ["Waray-waray"], ["Watyi"], ["Xhosa"], ["Yao"], ["Zande"], ["Zenaga"], ["Zulu"], ["[South]Mande"]], "trigger_words": ["Language"], "Prediction": "countrylanguage.Language \nFROM countrylanguage \nJOIN country ON countrylanguage.CountryCode = country.Code \nWHERE country.GovernmentForm LIKE '%Republic%' \nGROUP BY countrylanguage.Language \nHAVING COUNT(DISTINCT countrylanguage.CountryCode) = 1"}
{"db_id": "world_1", "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1", "query_toks": ["SELECT", "T2.Language", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T1.GovernmentForm", "=", "``", "Republic", "''", "GROUP", "BY", "T2.Language", "HAVING", "COUNT", "(", "*", ")", "=", "1"], "query_toks_no_value": ["select", "t2", ".", "language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t1", ".", "governmentform", "=", "value", "group", "by", "t2", ".", "language", "having", "count", "(", "*", ")", "=", "value"], "question": "What languages are only used by a single country with a republic government?", "question_toks": ["What", "languages", "are", "only", "used", "by", "a", "single", "country", "with", "a", "republic", "government", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Republic\"", null]], "groupBy": [[0, 24, false]], "having": [[false, 2, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "759", "answer_text": [["Abhyasi"], ["Acholi"], ["Adja"], ["Aizo"], ["Ambo"], ["Amhara"], ["Ami"], ["Ane"], ["Arabic-French"], ["Arabic-French-English"], ["Araucan"], ["Assyrian"], ["Atayal"], ["Bajad"], ["Balante"], ["Bali"], ["Balochi"], ["Bambara"], ["Bamileke-bamum"], ["Banda"], ["Banja"], ["Bariba"], ["Bassa"], ["Batakki"], ["Bemba"], ["Bengali"], ["Berberi"], ["Bhojpuri"], ["Bicol"], ["Bilin"], ["Bislama"], ["Boa"], ["Brahui"], ["Bubi"], ["Bugi"], ["Bullom-sherbro"], ["Burmese"], ["Buryat"], ["Busansi"], ["Cakchiquel"], ["Caprivi"], ["Cebuano"], ["Chaga and Pare"], ["Chakma"], ["Chewa"], ["Chichewa"], ["Chin"], ["Chuabo"], ["Comorian"], ["Comorian-Arabic"], ["Comorian-French"], ["Comorian-Swahili"], ["Comorian-madagassi"], ["Cuna"], ["Czech"], ["Czech and Moravian"], ["Dagara"], ["Dariganga"], ["Dhivehi"], ["Dorbet"], ["Duala"], ["Dyula"], ["Embera"], ["Fijian"], ["Fon"], ["Friuli"], ["Ga-adangme"], ["Gagauzi"], ["Ganda"], ["Garifuna"], ["Garo"], ["Gbaya"], ["Georgiana"], ["Gio"], ["Gisu"], ["Gogo"], ["Gorane"], ["Grebo"], ["Guaym\u00ed"], ["Gur"], ["Gurage"], ["Gusii"], ["Ha"], ["Hadareb"], ["Hadjarai"], ["Haiti Creole"], ["Hakka"], ["Hassaniya"], ["Hausa"], ["Haya"], ["Hebrew"], ["Hehet"], ["Herero"], ["Hiligaynon"], ["Hindko"], ["Icelandic"], ["Ilocano"], ["Irish"], ["Javanese"], ["Kaby\u00e9"], ["Kachin"], ["Kalenjin"], ["Kamba"], ["Kanem-bornu"], ["Kanuri"], ["Karakalpak"], ["Karen"], ["Kavango"], ["Kayah"], ["Kekch\u00ed"], ["Khasi"], ["Khoekhoe"], ["Kiga"], ["Kikuyu"], ["Kirgiz"], ["Kirundi"], ["Kissi"], ["Kono-vai"], ["Korean"], ["Kotokoli"], ["Kuranko"], ["Lango"], ["Lao"], ["Lao-Soung"], ["Latvian"], ["Limba"], ["Lozi"], ["Luba"], ["Luchazi"], ["Lugbara"], ["Luguru"], ["Luhya"], ["Luimbe-nganguela"], ["Luo"], ["Luvale"], ["Madura"], ["Maguindanao"], ["Maka"], ["Makonde"], ["Makua"], ["Maltese"], ["Mam"], ["Mandara"], ["Mandarin Chinese"], ["Mandjia"], ["Mandyako"], ["Mano"], ["Maranao"], ["Marathi"], ["Marendje"], ["Marma"], ["Marshallese"], ["Masai"], ["Masana"], ["Mayo-kebbi"], ["Mboshi"], ["Mbum"], ["Mbundu"], ["Mende"], ["Meru"], ["Min"], ["Minangkabau"], ["Mixed Languages"], ["Moba"], ["Mon"], ["Mon-khmer"], ["Mongo"], ["Mongolian"], ["Moravian"], ["Mpongwe"], ["Nahua"], ["Nama"], ["Naudemba"], ["Nauru"], ["Ngala and Bangi"], ["Ngbaka"], ["Ngoni"], ["Nkole"], ["Northsotho"], ["Nsenga"], ["Nyakusa"], ["Nyamwesi"], ["Nyaneka-nkhumbi"], ["Nyika"], ["Oromo"], ["Osseetti"], ["Ouaddai"], ["Ovambo"], ["Ovimbundu"], ["Paiwan"], ["Palau"], ["Pampango"], ["Pangasinan"], ["Pashto"], ["Persian"], ["Philippene Languages"], ["Pilipino"], ["Punjabi"], ["Punu"], ["Punu-sira-nzebi"], ["Quich\u00e9"], ["Rakhine"], ["Rapa nui"], ["Ronga"], ["Rundi"], ["Saame"], ["Saho"], ["Sango"], ["Santhali"], ["Saraiki"], ["Sardinian"], ["Sena"], ["Senufo and Minianka"], ["Serer"], ["Seselwa"], ["Shambala"], ["Shan"], ["Sidamo"], ["Silesiana"], ["Sinaberberi"], ["Sindhi"], ["Singali"], ["Soga"], ["Somba"], ["Songhai"], ["Songhai-zerma"], ["Soqutri"], ["Southsotho"], ["Sranantonga"], ["Sumo"], ["Sunda"], ["Susu"], ["Swazi"], ["Swedish"], ["Tandjile"], ["Temne"], ["Teso"], ["Thai"], ["Tigre"], ["Tikar"], ["Tongan"], ["Tripuri"], ["Tswa"], ["Tukulor"], ["Turkana"], ["Turkmenian"], ["Ukrainian and Russian"], ["Urdu"], ["Venda"], ["Walaita"], ["Waray-waray"], ["Watyi"], ["Xhosa"], ["Yao"], ["Zande"], ["Zenaga"], ["Zulu"], ["[South]Mande"]], "trigger_words": ["Language"], "Prediction": "DISTINCT Language \nFROM countrylanguage \nWHERE CountryCode IN (\n    SELECT Code \n    FROM country \n    WHERE GovernmentForm LIKE '%Republic%' \n    AND Code IN (\n        SELECT CountryCode \n        FROM countrylanguage \n        GROUP BY CountryCode \n        HAVING COUNT(*) = 1\n    )\n) \nAND IsOfficial = 'T'"}
{"db_id": "world_1", "query": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1", "query_toks": ["SELECT", "T1.Name", ",", "T1.Population", "FROM", "city", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.CountryCode", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "ORDER", "BY", "T1.Population", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "population", "from", "city", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "countrycode", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "order", "by", "t1", ".", "population", "desc", "limit", "value"], "question": "Find the city with the largest population that uses English.", "question_toks": ["Find", "the", "city", "with", "the", "largest", "population", "that", "uses", "English", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "760", "answer_text": [["New York", 8008278]], "trigger_words": ["Name", "Population"], "Prediction": "city.Name \nFROM city \nJOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode \nWHERE countrylanguage.Language = 'English' \nORDER BY city.Population DESC \nLIMIT 1;"}
{"db_id": "world_1", "query": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1", "query_toks": ["SELECT", "T1.Name", ",", "T1.Population", "FROM", "city", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.CountryCode", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "ORDER", "BY", "T1.Population", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "population", "from", "city", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "countrycode", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "order", "by", "t1", ".", "population", "desc", "limit", "value"], "question": "What is the most populace city that speaks English?", "question_toks": ["What", "is", "the", "most", "populace", "city", "that", "speaks", "English", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "761", "answer_text": [["New York", 8008278]], "trigger_words": ["Name", "Population"], "Prediction": "city.Name \nFROM city \nJOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode \nWHERE countrylanguage.Language = 'English' \nORDER BY city.Population DESC \nLIMIT 1;"}
{"db_id": "world_1", "query": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1", "query_toks": ["SELECT", "Name", ",", "Population", ",", "LifeExpectancy", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "population", ",", "lifeexpectancy", "from", "country", "where", "continent", "=", "value", "order", "by", "surfacearea", "desc", "limit", "value"], "question": "Find the name, population and expected life length of asian country with the largest area?", "question_toks": ["Find", "the", "name", ",", "population", "and", "expected", "life", "length", "of", "asian", "country", "with", "the", "largest", "area", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "762", "answer_text": [["China", 1277558000, 71.4]], "trigger_words": ["Name", "Population", "Life Expectancy"], "Prediction": "country.Name, country.Population, country.LifeExpectancy \n FROM country \n WHERE country.Continent = 'Asia' \n ORDER BY country.SurfaceArea DESC \n LIMIT 1;"}
{"db_id": "world_1", "query": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1", "query_toks": ["SELECT", "Name", ",", "Population", ",", "LifeExpectancy", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "population", ",", "lifeexpectancy", "from", "country", "where", "continent", "=", "value", "order", "by", "surfacearea", "desc", "limit", "value"], "question": "What are the name, population, and life expectancy of the largest Asian country by land?", "question_toks": ["What", "are", "the", "name", ",", "population", ",", "and", "life", "expectancy", "of", "the", "largest", "Asian", "country", "by", "land", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "763", "answer_text": [["China", 1277558000, 71.4]], "trigger_words": ["Name", "Population", "Life Expectancy"], "Prediction": "country.Name, country.Population, country.LifeExpectancy \n FROM country \n WHERE continent = 'Asia' \n ORDER BY SurfaceArea DESC \n LIMIT 1;"}
{"db_id": "world_1", "query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")", "query_toks": ["SELECT", "avg", "(", "LifeExpectancy", ")", "FROM", "country", "WHERE", "Name", "NOT", "IN", "(", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "AND", "T2.IsOfficial", "=", "``", "T", "''", ")"], "query_toks_no_value": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "name", "not", "in", "(", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "and", "t2", ".", "isofficial", "=", "value", ")"], "question": "What is average life expectancy in the countries where English is not the official language?", "question_toks": ["What", "is", "average", "life", "expectancy", "in", "the", "countries", "where", "English", "is", "not", "the", "official", "language", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 15, false], null]]]], "where": [[true, 8, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "764", "answer_text": [[65.48270270270272]], "trigger_words": ["Average Number"], "Prediction": "AVG(LifeExpectancy) FROM country \nWHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE IsOfficial = 'T' AND Language = 'English')"}
{"db_id": "world_1", "query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")", "query_toks": ["SELECT", "avg", "(", "LifeExpectancy", ")", "FROM", "country", "WHERE", "Name", "NOT", "IN", "(", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", "AND", "T2.IsOfficial", "=", "``", "T", "''", ")"], "query_toks_no_value": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "name", "not", "in", "(", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", "and", "t2", ".", "isofficial", "=", "value", ")"], "question": "Give the mean life expectancy of countries in which English is not the official language.", "question_toks": ["Give", "the", "mean", "life", "expectancy", "of", "countries", "in", "which", "English", "is", "not", "the", "official", "language", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 15, false], null]]]], "where": [[true, 8, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "765", "answer_text": [[65.48270270270272]], "trigger_words": ["Average Number"], "Prediction": "AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE IsOfficial = 'T' AND Language = 'English');"}
{"db_id": "world_1", "query": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")", "query_toks": ["SELECT", "sum", "(", "Population", ")", "FROM", "country", "WHERE", "Name", "NOT", "IN", "(", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", ")"], "query_toks_no_value": ["select", "sum", "(", "population", ")", "from", "country", "where", "name", "not", "in", "(", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", ")"], "question": "What is the total number of people living in the nations that do not use English?", "question_toks": ["What", "is", "the", "total", "number", "of", "people", "living", "in", "the", "nations", "that", "do", "not", "use", "English", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]]]], "where": [[true, 8, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "766", "answer_text": [[5451331150]], "trigger_words": ["Total Number"], "Prediction": "SUM(city.Population) \nFROM city \nJOIN country ON city.CountryCode=country.Code \nJOIN countrylanguage ON country.Code=countrylanguage.CountryCode \nWHERE countrylanguage.Language != 'English' AND countrylanguage.IsOfficial = 'T'"}
{"db_id": "world_1", "query": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")", "query_toks": ["SELECT", "sum", "(", "Population", ")", "FROM", "country", "WHERE", "Name", "NOT", "IN", "(", "SELECT", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T2.Language", "=", "``", "English", "''", ")"], "query_toks_no_value": ["select", "sum", "(", "population", ")", "from", "country", "where", "name", "not", "in", "(", "select", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t2", ".", "language", "=", "value", ")"], "question": "How many people live in countries that do not speak English?", "question_toks": ["How", "many", "people", "live", "in", "countries", "that", "do", "not", "speak", "English", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]]]], "where": [[true, 8, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "767", "answer_text": [[5451331150]], "trigger_words": ["Total Number"], "Prediction": "SUM(city.Population) \nFROM city \nJOIN country ON city.CountryCode=country.Code \nJOIN countrylanguage ON country.Code=countrylanguage.CountryCode \nWHERE countrylanguage.Language != 'English' AND countrylanguage.IsOfficial = 'T'"}
{"db_id": "world_1", "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"", "query_toks": ["SELECT", "T2.Language", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T1.HeadOfState", "=", "``", "Beatrix", "''", "AND", "T2.IsOfficial", "=", "``", "T", "''"], "query_toks_no_value": ["select", "t2", ".", "language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t1", ".", "headofstate", "=", "value", "and", "t2", ".", "isofficial", "=", "value"], "question": "What is the official language spoken in the country whose head of state is Beatrix?", "question_toks": ["What", "is", "the", "official", "language", "spoken", "in", "the", "country", "whose", "head", "of", "state", "is", "Beatrix", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Beatrix\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "768", "answer_text": [["Dutch"], ["Dutch"], ["Papiamento"], ["Dutch"]], "trigger_words": ["Language"], "Prediction": "countrylanguage.Language \nFROM countrylanguage \nJOIN country ON countrylanguage.CountryCode = country.Code \nWHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T';"}
{"db_id": "world_1", "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"", "query_toks": ["SELECT", "T2.Language", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "T1.HeadOfState", "=", "``", "Beatrix", "''", "AND", "T2.IsOfficial", "=", "``", "T", "''"], "query_toks_no_value": ["select", "t2", ".", "language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "t1", ".", "headofstate", "=", "value", "and", "t2", ".", "isofficial", "=", "value"], "question": "What is the official language used in the country the name of whose head of state is Beatrix.", "question_toks": ["What", "is", "the", "official", "language", "used", "in", "the", "country", "the", "name", "of", "whose", "head", "of", "state", "is", "Beatrix", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Beatrix\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "769", "answer_text": [["Dutch"], ["Dutch"], ["Papiamento"], ["Dutch"]], "trigger_words": ["Language"], "Prediction": "countrylanguage.Language \n FROM countrylanguage \n JOIN country ON countrylanguage.CountryCode = country.Code \n WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T';"}
{"db_id": "world_1", "query": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"", "query_toks": ["SELECT", "count", "(", "DISTINCT", "T2.Language", ")", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "IndepYear", "<", "1930", "AND", "T2.IsOfficial", "=", "``", "T", "''"], "query_toks_no_value": ["select", "count", "(", "distinct", "t2", ".", "language", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "indepyear", "<", "value", "and", "t2", ".", "isofficial", "=", "value"], "question": "What is the total number of unique official languages spoken in the countries that are founded before 1930?", "question_toks": ["What", "is", "the", "total", "number", "of", "unique", "official", "languages", "spoken", "in", "the", "countries", "that", "are", "founded", "before", "1930", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 24, true], null]]]], "where": [[false, 4, [0, [0, 13, false], null], 1930.0, null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "770", "answer_text": [[40]], "trigger_words": ["Number Of Language"], "Prediction": "COUNT(DISTINCT Language) \nFROM countrylanguage \nJOIN country ON countrylanguage.CountryCode=country.Code \nWHERE IsOfficial='T' AND IndepYear<1930;"}
{"db_id": "world_1", "query": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"", "query_toks": ["SELECT", "count", "(", "DISTINCT", "T2.Language", ")", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "WHERE", "IndepYear", "<", "1930", "AND", "T2.IsOfficial", "=", "``", "T", "''"], "query_toks_no_value": ["select", "count", "(", "distinct", "t2", ".", "language", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "where", "indepyear", "<", "value", "and", "t2", ".", "isofficial", "=", "value"], "question": "For the countries founded before 1930, what is the total number of distinct official languages?", "question_toks": ["For", "the", "countries", "founded", "before", "1930", ",", "what", "is", "the", "total", "number", "of", "distinct", "official", "languages", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 24, true], null]]]], "where": [[false, 4, [0, [0, 13, false], null], 1930.0, null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "771", "answer_text": [[40]], "trigger_words": ["Number Of Language"], "Prediction": "COUNT(DISTINCT Language) \nFROM countrylanguage \nJOIN country ON countrylanguage.CountryCode=country.Code \nWHERE IndepYear < 1930 AND IsOfficial = 'T';"}
{"db_id": "world_1", "query": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "SurfaceArea", ">", "(", "SELECT", "min", "(", "SurfaceArea", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Europe", "''", ")"], "query_toks_no_value": ["select", "name", "from", "country", "where", "surfacearea", ">", "(", "select", "min", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", ")"], "question": "What are the countries that have greater surface area than any country in Europe?", "question_toks": ["What", "are", "the", "countries", "that", "have", "greater", "surface", "area", "than", "any", "country", "in", "Europe", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[2, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Europe\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "772", "answer_text": [["Aruba"], ["Afghanistan"], ["Angola"], ["Anguilla"], ["Albania"], ["Andorra"], ["Netherlands Antilles"], ["United Arab Emirates"], ["Argentina"], ["Armenia"], ["American Samoa"], ["Antarctica"], ["French Southern territories"], ["Antigua and Barbuda"], ["Australia"], ["Austria"], ["Azerbaijan"], ["Burundi"], ["Belgium"], ["Benin"], ["Burkina Faso"], ["Bangladesh"], ["Bulgaria"], ["Bahrain"], ["Bahamas"], ["Bosnia and Herzegovina"], ["Belarus"], ["Belize"], ["Bermuda"], ["Bolivia"], ["Brazil"], ["Barbados"], ["Brunei"], ["Bhutan"], ["Bouvet Island"], ["Botswana"], ["Central African Republic"], ["Canada"], ["Cocos (Keeling) Islands"], ["Switzerland"], ["Chile"], ["China"], ["C\u00f4te d\u2019Ivoire"], ["Cameroon"], ["Congo, The Democratic Republic of the"], ["Congo"], ["Cook Islands"], ["Colombia"], ["Comoros"], ["Cape Verde"], ["Costa Rica"], ["Cuba"], ["Christmas Island"], ["Cayman Islands"], ["Cyprus"], ["Czech Republic"], ["Germany"], ["Djibouti"], ["Dominica"], ["Denmark"], ["Dominican Republic"], ["Algeria"], ["Ecuador"], ["Egypt"], ["Eritrea"], ["Western Sahara"], ["Spain"], ["Estonia"], ["Ethiopia"], ["Finland"], ["Fiji Islands"], ["Falkland Islands"], ["France"], ["Faroe Islands"], ["Micronesia, Federated States of"], ["Gabon"], ["United Kingdom"], ["Georgia"], ["Ghana"], ["Gibraltar"], ["Guinea"], ["Guadeloupe"], ["Gambia"], ["Guinea-Bissau"], ["Equatorial Guinea"], ["Greece"], ["Grenada"], ["Greenland"], ["Guatemala"], ["French Guiana"], ["Guam"], ["Guyana"], ["Hong Kong"], ["Heard Island and McDonald Islands"], ["Honduras"], ["Croatia"], ["Haiti"], ["Hungary"], ["Indonesia"], ["India"], ["British Indian Ocean Territory"], ["Ireland"], ["Iran"], ["Iraq"], ["Iceland"], ["Israel"], ["Italy"], ["Jamaica"], ["Jordan"], ["Japan"], ["Kazakstan"], ["Kenya"], ["Kyrgyzstan"], ["Cambodia"], ["Kiribati"], ["Saint Kitts and Nevis"], ["South Korea"], ["Kuwait"], ["Laos"], ["Lebanon"], ["Liberia"], ["Libyan Arab Jamahiriya"], ["Saint Lucia"], ["Liechtenstein"], ["Sri Lanka"], ["Lesotho"], ["Lithuania"], ["Luxembourg"], ["Latvia"], ["Macao"], ["Morocco"], ["Monaco"], ["Moldova"], ["Madagascar"], ["Maldives"], ["Mexico"], ["Marshall Islands"], ["Macedonia"], ["Mali"], ["Malta"], ["Myanmar"], ["Mongolia"], ["Northern Mariana Islands"], ["Mozambique"], ["Mauritania"], ["Montserrat"], ["Martinique"], ["Mauritius"], ["Malawi"], ["Malaysia"], ["Mayotte"], ["Namibia"], ["New Caledonia"], ["Niger"], ["Norfolk Island"], ["Nigeria"], ["Nicaragua"], ["Niue"], ["Netherlands"], ["Norway"], ["Nepal"], ["Nauru"], ["New Zealand"], ["Oman"], ["Pakistan"], ["Panama"], ["Pitcairn"], ["Peru"], ["Philippines"], ["Palau"], ["Papua New Guinea"], ["Poland"], ["Puerto Rico"], ["North Korea"], ["Portugal"], ["Paraguay"], ["Palestine"], ["French Polynesia"], ["Qatar"], ["R\u00e9union"], ["Romania"], ["Russian Federation"], ["Rwanda"], ["Saudi Arabia"], ["Sudan"], ["Senegal"], ["Singapore"], ["South Georgia and the South Sandwich Islands"], ["Saint Helena"], ["Svalbard and Jan Mayen"], ["Solomon Islands"], ["Sierra Leone"], ["El Salvador"], ["San Marino"], ["Somalia"], ["Saint Pierre and Miquelon"], ["Sao Tome and Principe"], ["Suriname"], ["Slovakia"], ["Slovenia"], ["Sweden"], ["Swaziland"], ["Seychelles"], ["Syria"], ["Turks and Caicos Islands"], ["Chad"], ["Togo"], ["Thailand"], ["Tajikistan"], ["Tokelau"], ["Turkmenistan"], ["East Timor"], ["Tonga"], ["Trinidad and Tobago"], ["Tunisia"], ["Turkey"], ["Tuvalu"], ["Taiwan"], ["Tanzania"], ["Uganda"], ["Ukraine"], ["United States Minor Outlying Islands"], ["Uruguay"], ["United States"], ["Uzbekistan"], ["Saint Vincent and the Grenadines"], ["Venezuela"], ["Virgin Islands, British"], ["Virgin Islands, U.S."], ["Vietnam"], ["Vanuatu"], ["Wallis and Futuna"], ["Samoa"], ["Yemen"], ["Yugoslavia"], ["South Africa"], ["Zambia"], ["Zimbabwe"]], "trigger_words": ["Name"], "Prediction": "Name \nFROM country \nWHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')"}
{"db_id": "world_1", "query": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "SurfaceArea", ">", "(", "SELECT", "min", "(", "SurfaceArea", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Europe", "''", ")"], "query_toks_no_value": ["select", "name", "from", "country", "where", "surfacearea", ">", "(", "select", "min", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", ")"], "question": "Which countries have greater area than that of any country in Europe?", "question_toks": ["Which", "countries", "have", "greater", "area", "than", "that", "of", "any", "country", "in", "Europe", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[2, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Europe\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "773", "answer_text": [["Aruba"], ["Afghanistan"], ["Angola"], ["Anguilla"], ["Albania"], ["Andorra"], ["Netherlands Antilles"], ["United Arab Emirates"], ["Argentina"], ["Armenia"], ["American Samoa"], ["Antarctica"], ["French Southern territories"], ["Antigua and Barbuda"], ["Australia"], ["Austria"], ["Azerbaijan"], ["Burundi"], ["Belgium"], ["Benin"], ["Burkina Faso"], ["Bangladesh"], ["Bulgaria"], ["Bahrain"], ["Bahamas"], ["Bosnia and Herzegovina"], ["Belarus"], ["Belize"], ["Bermuda"], ["Bolivia"], ["Brazil"], ["Barbados"], ["Brunei"], ["Bhutan"], ["Bouvet Island"], ["Botswana"], ["Central African Republic"], ["Canada"], ["Cocos (Keeling) Islands"], ["Switzerland"], ["Chile"], ["China"], ["C\u00f4te d\u2019Ivoire"], ["Cameroon"], ["Congo, The Democratic Republic of the"], ["Congo"], ["Cook Islands"], ["Colombia"], ["Comoros"], ["Cape Verde"], ["Costa Rica"], ["Cuba"], ["Christmas Island"], ["Cayman Islands"], ["Cyprus"], ["Czech Republic"], ["Germany"], ["Djibouti"], ["Dominica"], ["Denmark"], ["Dominican Republic"], ["Algeria"], ["Ecuador"], ["Egypt"], ["Eritrea"], ["Western Sahara"], ["Spain"], ["Estonia"], ["Ethiopia"], ["Finland"], ["Fiji Islands"], ["Falkland Islands"], ["France"], ["Faroe Islands"], ["Micronesia, Federated States of"], ["Gabon"], ["United Kingdom"], ["Georgia"], ["Ghana"], ["Gibraltar"], ["Guinea"], ["Guadeloupe"], ["Gambia"], ["Guinea-Bissau"], ["Equatorial Guinea"], ["Greece"], ["Grenada"], ["Greenland"], ["Guatemala"], ["French Guiana"], ["Guam"], ["Guyana"], ["Hong Kong"], ["Heard Island and McDonald Islands"], ["Honduras"], ["Croatia"], ["Haiti"], ["Hungary"], ["Indonesia"], ["India"], ["British Indian Ocean Territory"], ["Ireland"], ["Iran"], ["Iraq"], ["Iceland"], ["Israel"], ["Italy"], ["Jamaica"], ["Jordan"], ["Japan"], ["Kazakstan"], ["Kenya"], ["Kyrgyzstan"], ["Cambodia"], ["Kiribati"], ["Saint Kitts and Nevis"], ["South Korea"], ["Kuwait"], ["Laos"], ["Lebanon"], ["Liberia"], ["Libyan Arab Jamahiriya"], ["Saint Lucia"], ["Liechtenstein"], ["Sri Lanka"], ["Lesotho"], ["Lithuania"], ["Luxembourg"], ["Latvia"], ["Macao"], ["Morocco"], ["Monaco"], ["Moldova"], ["Madagascar"], ["Maldives"], ["Mexico"], ["Marshall Islands"], ["Macedonia"], ["Mali"], ["Malta"], ["Myanmar"], ["Mongolia"], ["Northern Mariana Islands"], ["Mozambique"], ["Mauritania"], ["Montserrat"], ["Martinique"], ["Mauritius"], ["Malawi"], ["Malaysia"], ["Mayotte"], ["Namibia"], ["New Caledonia"], ["Niger"], ["Norfolk Island"], ["Nigeria"], ["Nicaragua"], ["Niue"], ["Netherlands"], ["Norway"], ["Nepal"], ["Nauru"], ["New Zealand"], ["Oman"], ["Pakistan"], ["Panama"], ["Pitcairn"], ["Peru"], ["Philippines"], ["Palau"], ["Papua New Guinea"], ["Poland"], ["Puerto Rico"], ["North Korea"], ["Portugal"], ["Paraguay"], ["Palestine"], ["French Polynesia"], ["Qatar"], ["R\u00e9union"], ["Romania"], ["Russian Federation"], ["Rwanda"], ["Saudi Arabia"], ["Sudan"], ["Senegal"], ["Singapore"], ["South Georgia and the South Sandwich Islands"], ["Saint Helena"], ["Svalbard and Jan Mayen"], ["Solomon Islands"], ["Sierra Leone"], ["El Salvador"], ["San Marino"], ["Somalia"], ["Saint Pierre and Miquelon"], ["Sao Tome and Principe"], ["Suriname"], ["Slovakia"], ["Slovenia"], ["Sweden"], ["Swaziland"], ["Seychelles"], ["Syria"], ["Turks and Caicos Islands"], ["Chad"], ["Togo"], ["Thailand"], ["Tajikistan"], ["Tokelau"], ["Turkmenistan"], ["East Timor"], ["Tonga"], ["Trinidad and Tobago"], ["Tunisia"], ["Turkey"], ["Tuvalu"], ["Taiwan"], ["Tanzania"], ["Uganda"], ["Ukraine"], ["United States Minor Outlying Islands"], ["Uruguay"], ["United States"], ["Uzbekistan"], ["Saint Vincent and the Grenadines"], ["Venezuela"], ["Virgin Islands, British"], ["Virgin Islands, U.S."], ["Vietnam"], ["Vanuatu"], ["Wallis and Futuna"], ["Samoa"], ["Yemen"], ["Yugoslavia"], ["South Africa"], ["Zambia"], ["Zimbabwe"]], "trigger_words": ["Name"], "Prediction": "Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe');"}
{"db_id": "world_1", "query": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "Continent", "=", "``", "Africa", "''", "AND", "population", "<", "(", "SELECT", "max", "(", "population", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''", ")"], "query_toks_no_value": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", "<", "(", "select", "max", "(", "population", ")", "from", "country", "where", "continent", "=", "value", ")"], "question": "What are the African countries that have a  population less than any country in Asia?", "question_toks": ["What", "are", "the", "African", "countries", "that", "have", "a", "population", "less", "than", "any", "country", "in", "Asia", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null], "and", [false, 4, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "774", "answer_text": [["Angola"], ["Burundi"], ["Benin"], ["Burkina Faso"], ["Botswana"], ["Central African Republic"], ["C\u00f4te d\u2019Ivoire"], ["Cameroon"], ["Congo, The Democratic Republic of the"], ["Congo"], ["Comoros"], ["Cape Verde"], ["Djibouti"], ["Algeria"], ["Egypt"], ["Eritrea"], ["Western Sahara"], ["Ethiopia"], ["Gabon"], ["Ghana"], ["Guinea"], ["Gambia"], ["Guinea-Bissau"], ["Equatorial Guinea"], ["British Indian Ocean Territory"], ["Kenya"], ["Liberia"], ["Libyan Arab Jamahiriya"], ["Lesotho"], ["Morocco"], ["Madagascar"], ["Mali"], ["Mozambique"], ["Mauritania"], ["Mauritius"], ["Malawi"], ["Mayotte"], ["Namibia"], ["Niger"], ["Nigeria"], ["R\u00e9union"], ["Rwanda"], ["Sudan"], ["Senegal"], ["Saint Helena"], ["Sierra Leone"], ["Somalia"], ["Sao Tome and Principe"], ["Swaziland"], ["Seychelles"], ["Chad"], ["Togo"], ["Tunisia"], ["Tanzania"], ["Uganda"], ["South Africa"], ["Zambia"], ["Zimbabwe"]], "trigger_words": ["Name"], "Prediction": "country.Name \nFROM country \nWHERE country.Continent = 'Africa' \nAND country.Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia');"}
{"db_id": "world_1", "query": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "Continent", "=", "``", "Africa", "''", "AND", "population", "<", "(", "SELECT", "min", "(", "population", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''", ")"], "query_toks_no_value": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", "<", "(", "select", "min", "(", "population", ")", "from", "country", "where", "continent", "=", "value", ")"], "question": "Which African countries have a smaller population than that of any country in Asia?", "question_toks": ["Which", "African", "countries", "have", "a", "smaller", "population", "than", "that", "of", "any", "country", "in", "Asia", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null], "and", [false, 4, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[2, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "775", "answer_text": [["British Indian Ocean Territory"], ["Mayotte"], ["Saint Helena"], ["Sao Tome and Principe"], ["Seychelles"]], "trigger_words": ["Name"], "Prediction": "Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia');"}
{"db_id": "world_1", "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\")", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''", "AND", "population", ">", "(", "SELECT", "max", "(", "population", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Africa", "''", ")"], "query_toks_no_value": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", ">", "(", "select", "max", "(", "population", ")", "from", "country", "where", "continent", "=", "value", ")"], "question": "Which Asian countries have a population that is larger than any country in Africa?", "question_toks": ["Which", "Asian", "countries", "have", "a", "population", "that", "is", "larger", "than", "any", "country", "in", "Africa", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null], "and", [false, 3, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "776", "answer_text": [["Bangladesh"], ["China"], ["Indonesia"], ["India"], ["Japan"], ["Pakistan"]], "trigger_words": ["Name"], "Prediction": "country.Name \nFROM country \nWHERE country.Continent = 'Asia' \nAND country.Population > ALL (SELECT country.Population FROM country WHERE country.Continent = 'Africa')"}
{"db_id": "world_1", "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "Continent", "=", "``", "Asia", "''", "AND", "population", ">", "(", "SELECT", "min", "(", "population", ")", "FROM", "country", "WHERE", "Continent", "=", "``", "Africa", "''", ")"], "query_toks_no_value": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", ">", "(", "select", "min", "(", "population", ")", "from", "country", "where", "continent", "=", "value", ")"], "question": "What are the Asian countries which have a population larger than that of any country in Africa?", "question_toks": ["What", "are", "the", "Asian", "countries", "which", "have", "a", "population", "larger", "than", "that", "of", "any", "country", "in", "Africa", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null], "and", [false, 3, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[2, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "777", "answer_text": [["Afghanistan"], ["United Arab Emirates"], ["Armenia"], ["Azerbaijan"], ["Bangladesh"], ["Bahrain"], ["Brunei"], ["Bhutan"], ["China"], ["Cyprus"], ["Georgia"], ["Hong Kong"], ["Indonesia"], ["India"], ["Iran"], ["Iraq"], ["Israel"], ["Jordan"], ["Japan"], ["Kazakstan"], ["Kyrgyzstan"], ["Cambodia"], ["South Korea"], ["Kuwait"], ["Laos"], ["Lebanon"], ["Sri Lanka"], ["Macao"], ["Maldives"], ["Myanmar"], ["Mongolia"], ["Malaysia"], ["Nepal"], ["Oman"], ["Pakistan"], ["Philippines"], ["North Korea"], ["Palestine"], ["Qatar"], ["Saudi Arabia"], ["Singapore"], ["Syria"], ["Thailand"], ["Tajikistan"], ["Turkmenistan"], ["East Timor"], ["Turkey"], ["Taiwan"], ["Uzbekistan"], ["Vietnam"], ["Yemen"]], "trigger_words": ["Name"], "Prediction": "country.Name \nFROM country \nWHERE country.Continent = 'Asia' \nAND country.Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa');"}
{"db_id": "world_1", "query": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"", "query_toks": ["SELECT", "CountryCode", "FROM", "countrylanguage", "EXCEPT", "SELECT", "CountryCode", "FROM", "countrylanguage", "WHERE", "LANGUAGE", "=", "``", "English", "''"], "query_toks_no_value": ["select", "countrycode", "from", "countrylanguage", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "value"], "question": "What are the country codes for countries that do not speak English?", "question_toks": ["What", "are", "the", "country", "codes", "for", "countries", "that", "do", "not", "speak", "English", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "778", "answer_text": [["AFG"], ["AGO"], ["ALB"], ["AND"], ["ARE"], ["ARG"], ["ARM"], ["AUT"], ["AZE"], ["BDI"], ["BEL"], ["BEN"], ["BFA"], ["BGD"], ["BGR"], ["BHS"], ["BIH"], ["BLR"], ["BOL"], ["BRA"], ["BTN"], ["BWA"], ["CAF"], ["CHE"], ["CHL"], ["CHN"], ["CIV"], ["CMR"], ["COD"], ["COG"], ["COL"], ["COM"], ["CPV"], ["CRI"], ["CUB"], ["CYP"], ["CZE"], ["DEU"], ["DJI"], ["DMA"], ["DOM"], ["DZA"], ["ECU"], ["EGY"], ["ERI"], ["ESH"], ["ESP"], ["EST"], ["ETH"], ["FIN"], ["FJI"], ["FRA"], ["FRO"], ["FSM"], ["GAB"], ["GEO"], ["GHA"], ["GIN"], ["GLP"], ["GMB"], ["GNB"], ["GNQ"], ["GRC"], ["GRD"], ["GRL"], ["GTM"], ["GUF"], ["GUY"], ["HND"], ["HRV"], ["HTI"], ["HUN"], ["IDN"], ["IND"], ["IRN"], ["IRQ"], ["ISR"], ["ITA"], ["JAM"], ["JOR"], ["KAZ"], ["KEN"], ["KGZ"], ["KHM"], ["KIR"], ["KOR"], ["LAO"], ["LBN"], ["LBR"], ["LBY"], ["LIE"], ["LKA"], ["LTU"], ["LUX"], ["LVA"], ["MAR"], ["MDA"], ["MDG"], ["MEX"], ["MKD"], ["MLI"], ["MMR"], ["MNG"], ["MOZ"], ["MRT"], ["MTQ"], ["MUS"], ["MWI"], ["MYT"], ["NAM"], ["NCL"], ["NER"], ["NGA"], ["NIC"], ["NLD"], ["NPL"], ["OMN"], ["PAK"], ["PAN"], ["PCN"], ["PER"], ["PHL"], ["PNG"], ["POL"], ["PRK"], ["PRT"], ["PRY"], ["PSE"], ["PYF"], ["QAT"], ["REU"], ["ROM"], ["RUS"], ["RWA"], ["SAU"], ["SDN"], ["SEN"], ["SGP"], ["SJM"], ["SLB"], ["SLE"], ["SLV"], ["SMR"], ["SOM"], ["SPM"], ["STP"], ["SUR"], ["SVK"], ["SVN"], ["SWE"], ["SWZ"], ["SYR"], ["TCD"], ["TGO"], ["THA"], ["TJK"], ["TKM"], ["TMP"], ["TUN"], ["TUR"], ["TWN"], ["TZA"], ["UGA"], ["UKR"], ["URY"], ["UZB"], ["VAT"], ["VEN"], ["VNM"], ["WLF"], ["YEM"], ["YUG"], ["ZMB"]], "trigger_words": ["Country Code"], "Prediction": "country.Code \nFROM country \nWHERE country.Code NOT IN \n(SELECT CountryCode FROM countrylanguage WHERE Language='English');"}
{"db_id": "world_1", "query": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"", "query_toks": ["SELECT", "CountryCode", "FROM", "countrylanguage", "EXCEPT", "SELECT", "CountryCode", "FROM", "countrylanguage", "WHERE", "LANGUAGE", "=", "``", "English", "''"], "query_toks_no_value": ["select", "countrycode", "from", "countrylanguage", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "value"], "question": "Return the country codes for countries that do not speak English.", "question_toks": ["Return", "the", "country", "codes", "for", "countries", "that", "do", "not", "speak", "English", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "779", "answer_text": [["AFG"], ["AGO"], ["ALB"], ["AND"], ["ARE"], ["ARG"], ["ARM"], ["AUT"], ["AZE"], ["BDI"], ["BEL"], ["BEN"], ["BFA"], ["BGD"], ["BGR"], ["BHS"], ["BIH"], ["BLR"], ["BOL"], ["BRA"], ["BTN"], ["BWA"], ["CAF"], ["CHE"], ["CHL"], ["CHN"], ["CIV"], ["CMR"], ["COD"], ["COG"], ["COL"], ["COM"], ["CPV"], ["CRI"], ["CUB"], ["CYP"], ["CZE"], ["DEU"], ["DJI"], ["DMA"], ["DOM"], ["DZA"], ["ECU"], ["EGY"], ["ERI"], ["ESH"], ["ESP"], ["EST"], ["ETH"], ["FIN"], ["FJI"], ["FRA"], ["FRO"], ["FSM"], ["GAB"], ["GEO"], ["GHA"], ["GIN"], ["GLP"], ["GMB"], ["GNB"], ["GNQ"], ["GRC"], ["GRD"], ["GRL"], ["GTM"], ["GUF"], ["GUY"], ["HND"], ["HRV"], ["HTI"], ["HUN"], ["IDN"], ["IND"], ["IRN"], ["IRQ"], ["ISR"], ["ITA"], ["JAM"], ["JOR"], ["KAZ"], ["KEN"], ["KGZ"], ["KHM"], ["KIR"], ["KOR"], ["LAO"], ["LBN"], ["LBR"], ["LBY"], ["LIE"], ["LKA"], ["LTU"], ["LUX"], ["LVA"], ["MAR"], ["MDA"], ["MDG"], ["MEX"], ["MKD"], ["MLI"], ["MMR"], ["MNG"], ["MOZ"], ["MRT"], ["MTQ"], ["MUS"], ["MWI"], ["MYT"], ["NAM"], ["NCL"], ["NER"], ["NGA"], ["NIC"], ["NLD"], ["NPL"], ["OMN"], ["PAK"], ["PAN"], ["PCN"], ["PER"], ["PHL"], ["PNG"], ["POL"], ["PRK"], ["PRT"], ["PRY"], ["PSE"], ["PYF"], ["QAT"], ["REU"], ["ROM"], ["RUS"], ["RWA"], ["SAU"], ["SDN"], ["SEN"], ["SGP"], ["SJM"], ["SLB"], ["SLE"], ["SLV"], ["SMR"], ["SOM"], ["SPM"], ["STP"], ["SUR"], ["SVK"], ["SVN"], ["SWE"], ["SWZ"], ["SYR"], ["TCD"], ["TGO"], ["THA"], ["TJK"], ["TKM"], ["TMP"], ["TUN"], ["TUR"], ["TWN"], ["TZA"], ["UGA"], ["UKR"], ["URY"], ["UZB"], ["VAT"], ["VEN"], ["VNM"], ["WLF"], ["YEM"], ["YUG"], ["ZMB"]], "trigger_words": ["Country Code"], "Prediction": "country.Code\nFROM country\nWHERE country.Code NOT IN (\n    SELECT countrylanguage.CountryCode\n    FROM countrylanguage\n    WHERE countrylanguage.Language = 'English'\n);"}
{"db_id": "world_1", "query": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"", "query_toks": ["SELECT", "DISTINCT", "CountryCode", "FROM", "countrylanguage", "WHERE", "LANGUAGE", "!", "=", "``", "English", "''"], "query_toks_no_value": ["select", "distinct", "countrycode", "from", "countrylanguage", "where", "language", "!", "=", "value"], "question": "What are the country codes of countries where people use languages other than English?", "question_toks": ["What", "are", "the", "country", "codes", "of", "countries", "where", "people", "use", "languages", "other", "than", "English", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]]]], "where": [[false, 7, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "780", "answer_text": [["ABW"], ["AFG"], ["AGO"], ["ALB"], ["AND"], ["ANT"], ["ARE"], ["ARG"], ["ARM"], ["ASM"], ["ATG"], ["AUS"], ["AUT"], ["AZE"], ["BDI"], ["BEL"], ["BEN"], ["BFA"], ["BGD"], ["BGR"], ["BHR"], ["BHS"], ["BIH"], ["BLR"], ["BLZ"], ["BOL"], ["BRA"], ["BRB"], ["BRN"], ["BTN"], ["BWA"], ["CAF"], ["CAN"], ["CCK"], ["CHE"], ["CHL"], ["CHN"], ["CIV"], ["CMR"], ["COD"], ["COG"], ["COK"], ["COL"], ["COM"], ["CPV"], ["CRI"], ["CUB"], ["CXR"], ["CYP"], ["CZE"], ["DEU"], ["DJI"], ["DMA"], ["DNK"], ["DOM"], ["DZA"], ["ECU"], ["EGY"], ["ERI"], ["ESH"], ["ESP"], ["EST"], ["ETH"], ["FIN"], ["FJI"], ["FRA"], ["FRO"], ["FSM"], ["GAB"], ["GBR"], ["GEO"], ["GHA"], ["GIB"], ["GIN"], ["GLP"], ["GMB"], ["GNB"], ["GNQ"], ["GRC"], ["GRD"], ["GRL"], ["GTM"], ["GUF"], ["GUM"], ["GUY"], ["HKG"], ["HND"], ["HRV"], ["HTI"], ["HUN"], ["IDN"], ["IND"], ["IRL"], ["IRN"], ["IRQ"], ["ISL"], ["ISR"], ["ITA"], ["JAM"], ["JOR"], ["JPN"], ["KAZ"], ["KEN"], ["KGZ"], ["KHM"], ["KIR"], ["KNA"], ["KOR"], ["KWT"], ["LAO"], ["LBN"], ["LBR"], ["LBY"], ["LCA"], ["LIE"], ["LKA"], ["LSO"], ["LTU"], ["LUX"], ["LVA"], ["MAC"], ["MAR"], ["MCO"], ["MDA"], ["MDG"], ["MDV"], ["MEX"], ["MHL"], ["MKD"], ["MLI"], ["MLT"], ["MMR"], ["MNG"], ["MNP"], ["MOZ"], ["MRT"], ["MTQ"], ["MUS"], ["MWI"], ["MYS"], ["MYT"], ["NAM"], ["NCL"], ["NER"], ["NGA"], ["NIC"], ["NIU"], ["NLD"], ["NOR"], ["NPL"], ["NRU"], ["NZL"], ["OMN"], ["PAK"], ["PAN"], ["PCN"], ["PER"], ["PHL"], ["PLW"], ["PNG"], ["POL"], ["PRI"], ["PRK"], ["PRT"], ["PRY"], ["PSE"], ["PYF"], ["QAT"], ["REU"], ["ROM"], ["RUS"], ["RWA"], ["SAU"], ["SDN"], ["SEN"], ["SGP"], ["SJM"], ["SLB"], ["SLE"], ["SLV"], ["SMR"], ["SOM"], ["SPM"], ["STP"], ["SUR"], ["SVK"], ["SVN"], ["SWE"], ["SWZ"], ["SYC"], ["SYR"], ["TCD"], ["TGO"], ["THA"], ["TJK"], ["TKL"], ["TKM"], ["TMP"], ["TON"], ["TTO"], ["TUN"], ["TUR"], ["TUV"], ["TWN"], ["TZA"], ["UGA"], ["UKR"], ["URY"], ["USA"], ["UZB"], ["VAT"], ["VCT"], ["VEN"], ["VIR"], ["VNM"], ["VUT"], ["WLF"], ["WSM"], ["YEM"], ["YUG"], ["ZAF"], ["ZMB"], ["ZWE"]], "trigger_words": ["Country Code"], "Prediction": "DISTINCT country.Code \nFROM country \nINNER JOIN countrylanguage ON country.Code=countrylanguage.CountryCode \nWHERE countrylanguage.Language != 'English';"}
{"db_id": "world_1", "query": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"", "query_toks": ["SELECT", "DISTINCT", "CountryCode", "FROM", "countrylanguage", "WHERE", "LANGUAGE", "!", "=", "``", "English", "''"], "query_toks_no_value": ["select", "distinct", "countrycode", "from", "countrylanguage", "where", "language", "!", "=", "value"], "question": "Give the country codes for countries in which people speak langauges that are not English.", "question_toks": ["Give", "the", "country", "codes", "for", "countries", "in", "which", "people", "speak", "langauges", "that", "are", "not", "English", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]]]], "where": [[false, 7, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "781", "answer_text": [["ABW"], ["AFG"], ["AGO"], ["ALB"], ["AND"], ["ANT"], ["ARE"], ["ARG"], ["ARM"], ["ASM"], ["ATG"], ["AUS"], ["AUT"], ["AZE"], ["BDI"], ["BEL"], ["BEN"], ["BFA"], ["BGD"], ["BGR"], ["BHR"], ["BHS"], ["BIH"], ["BLR"], ["BLZ"], ["BOL"], ["BRA"], ["BRB"], ["BRN"], ["BTN"], ["BWA"], ["CAF"], ["CAN"], ["CCK"], ["CHE"], ["CHL"], ["CHN"], ["CIV"], ["CMR"], ["COD"], ["COG"], ["COK"], ["COL"], ["COM"], ["CPV"], ["CRI"], ["CUB"], ["CXR"], ["CYP"], ["CZE"], ["DEU"], ["DJI"], ["DMA"], ["DNK"], ["DOM"], ["DZA"], ["ECU"], ["EGY"], ["ERI"], ["ESH"], ["ESP"], ["EST"], ["ETH"], ["FIN"], ["FJI"], ["FRA"], ["FRO"], ["FSM"], ["GAB"], ["GBR"], ["GEO"], ["GHA"], ["GIB"], ["GIN"], ["GLP"], ["GMB"], ["GNB"], ["GNQ"], ["GRC"], ["GRD"], ["GRL"], ["GTM"], ["GUF"], ["GUM"], ["GUY"], ["HKG"], ["HND"], ["HRV"], ["HTI"], ["HUN"], ["IDN"], ["IND"], ["IRL"], ["IRN"], ["IRQ"], ["ISL"], ["ISR"], ["ITA"], ["JAM"], ["JOR"], ["JPN"], ["KAZ"], ["KEN"], ["KGZ"], ["KHM"], ["KIR"], ["KNA"], ["KOR"], ["KWT"], ["LAO"], ["LBN"], ["LBR"], ["LBY"], ["LCA"], ["LIE"], ["LKA"], ["LSO"], ["LTU"], ["LUX"], ["LVA"], ["MAC"], ["MAR"], ["MCO"], ["MDA"], ["MDG"], ["MDV"], ["MEX"], ["MHL"], ["MKD"], ["MLI"], ["MLT"], ["MMR"], ["MNG"], ["MNP"], ["MOZ"], ["MRT"], ["MTQ"], ["MUS"], ["MWI"], ["MYS"], ["MYT"], ["NAM"], ["NCL"], ["NER"], ["NGA"], ["NIC"], ["NIU"], ["NLD"], ["NOR"], ["NPL"], ["NRU"], ["NZL"], ["OMN"], ["PAK"], ["PAN"], ["PCN"], ["PER"], ["PHL"], ["PLW"], ["PNG"], ["POL"], ["PRI"], ["PRK"], ["PRT"], ["PRY"], ["PSE"], ["PYF"], ["QAT"], ["REU"], ["ROM"], ["RUS"], ["RWA"], ["SAU"], ["SDN"], ["SEN"], ["SGP"], ["SJM"], ["SLB"], ["SLE"], ["SLV"], ["SMR"], ["SOM"], ["SPM"], ["STP"], ["SUR"], ["SVK"], ["SVN"], ["SWE"], ["SWZ"], ["SYC"], ["SYR"], ["TCD"], ["TGO"], ["THA"], ["TJK"], ["TKL"], ["TKM"], ["TMP"], ["TON"], ["TTO"], ["TUN"], ["TUR"], ["TUV"], ["TWN"], ["TZA"], ["UGA"], ["UKR"], ["URY"], ["USA"], ["UZB"], ["VAT"], ["VCT"], ["VEN"], ["VIR"], ["VNM"], ["VUT"], ["WLF"], ["WSM"], ["YEM"], ["YUG"], ["ZAF"], ["ZMB"], ["ZWE"]], "trigger_words": ["Country Code"], "Prediction": "DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English';"}
{"db_id": "world_1", "query": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"", "query_toks": ["SELECT", "Code", "FROM", "country", "WHERE", "GovernmentForm", "!", "=", "``", "Republic", "''", "EXCEPT", "SELECT", "CountryCode", "FROM", "countrylanguage", "WHERE", "LANGUAGE", "=", "``", "English", "''"], "query_toks_no_value": ["select", "code", "from", "country", "where", "governmentform", "!", "=", "value", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "value"], "question": "What are the codes of the countries that do not speak English and whose government forms are not Republic?", "question_toks": ["What", "are", "the", "codes", "of", "the", "countries", "that", "do", "not", "speak", "English", "and", "whose", "government", "forms", "are", "not", "Republic", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 7, [0, [0, 19, false], null], "\"Republic\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "782", "answer_text": [["AFG"], ["AND"], ["ARE"], ["ARG"], ["ATA"], ["ATF"], ["AUT"], ["AZE"], ["BEL"], ["BHS"], ["BIH"], ["BRA"], ["BTN"], ["BVT"], ["CHE"], ["CHN"], ["CUB"], ["DEU"], ["ESH"], ["ESP"], ["FRO"], ["FSM"], ["GLP"], ["GRD"], ["GRL"], ["GUF"], ["HMD"], ["IND"], ["IOT"], ["IRN"], ["JAM"], ["JOR"], ["KHM"], ["LBY"], ["LIE"], ["LUX"], ["MAR"], ["MDG"], ["MEX"], ["MTQ"], ["MYT"], ["NCL"], ["NGA"], ["NLD"], ["NPL"], ["OMN"], ["PCN"], ["PNG"], ["PRK"], ["PSE"], ["PYF"], ["QAT"], ["REU"], ["RUS"], ["SAU"], ["SDN"], ["SGS"], ["SJM"], ["SLB"], ["SPM"], ["SWE"], ["SWZ"], ["THA"], ["TMP"], ["VAT"], ["VEN"], ["VNM"], ["WLF"], ["YUG"]], "trigger_words": ["Code"], "Prediction": "country.Code \nFROM country \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE countrylanguage.Language != 'English' AND country.GovernmentForm != 'Republic';"}
{"db_id": "world_1", "query": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"", "query_toks": ["SELECT", "Code", "FROM", "country", "WHERE", "GovernmentForm", "!", "=", "``", "Republic", "''", "EXCEPT", "SELECT", "CountryCode", "FROM", "countrylanguage", "WHERE", "LANGUAGE", "=", "``", "English", "''"], "query_toks_no_value": ["select", "code", "from", "country", "where", "governmentform", "!", "=", "value", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "value"], "question": "Return the codes of countries that do not speak English and do not have Republics for governments.", "question_toks": ["Return", "the", "codes", "of", "countries", "that", "do", "not", "speak", "English", "and", "do", "not", "have", "Republics", "for", "governments", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 7, [0, [0, 19, false], null], "\"Republic\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "783", "answer_text": [["AFG"], ["AND"], ["ARE"], ["ARG"], ["ATA"], ["ATF"], ["AUT"], ["AZE"], ["BEL"], ["BHS"], ["BIH"], ["BRA"], ["BTN"], ["BVT"], ["CHE"], ["CHN"], ["CUB"], ["DEU"], ["ESH"], ["ESP"], ["FRO"], ["FSM"], ["GLP"], ["GRD"], ["GRL"], ["GUF"], ["HMD"], ["IND"], ["IOT"], ["IRN"], ["JAM"], ["JOR"], ["KHM"], ["LBY"], ["LIE"], ["LUX"], ["MAR"], ["MDG"], ["MEX"], ["MTQ"], ["MYT"], ["NCL"], ["NGA"], ["NLD"], ["NPL"], ["OMN"], ["PCN"], ["PNG"], ["PRK"], ["PSE"], ["PYF"], ["QAT"], ["REU"], ["RUS"], ["SAU"], ["SDN"], ["SGS"], ["SJM"], ["SLB"], ["SPM"], ["SWE"], ["SWZ"], ["THA"], ["TMP"], ["VAT"], ["VEN"], ["VNM"], ["WLF"], ["YUG"]], "trigger_words": ["Code"], "Prediction": "country.Code \nFROM country \nLEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE countrylanguage.Language != 'English' AND country.GovernmentForm != 'Republic';"}
{"db_id": "world_1", "query": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')", "query_toks": ["SELECT", "DISTINCT", "T2.Name", "FROM", "country", "AS", "T1", "JOIN", "city", "AS", "T2", "ON", "T2.CountryCode", "=", "T1.Code", "WHERE", "T1.Continent", "=", "'Europe", "'", "AND", "T1.Name", "NOT", "IN", "(", "SELECT", "T3.Name", "FROM", "country", "AS", "T3", "JOIN", "countrylanguage", "AS", "T4", "ON", "T3.Code", "=", "T4.CountryCode", "WHERE", "T4.IsOfficial", "=", "'T", "'", "AND", "T4.Language", "=", "'English", "'", ")"], "query_toks_no_value": ["select", "distinct", "t2", ".", "name", "from", "country", "as", "t1", "join", "city", "as", "t2", "on", "t2", ".", "countrycode", "=", "t1", ".", "code", "where", "t1", ".", "continent", "=", "value", "and", "t1", ".", "name", "not", "in", "(", "select", "t3", ".", "name", "from", "country", "as", "t3", "join", "countrylanguage", "as", "t4", "on", "t3", ".", "code", "=", "t4", ".", "countrycode", "where", "t4", ".", "isofficial", "=", "value", "and", "t4", ".", "language", "=", "value", ")"], "question": "Which cities are in European countries where English is not the official language?", "question_toks": ["Which", "cities", "are", "in", "European", "countries", "where", "English", "is", "not", "the", "official", "language", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Europe\"", null], "and", [true, 8, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"T\"", null], "and", [false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "784", "answer_text": [["Amsterdam"], ["Rotterdam"], ["Haag"], ["Utrecht"], ["Eindhoven"], ["Tilburg"], ["Groningen"], ["Breda"], ["Apeldoorn"], ["Nijmegen"], ["Enschede"], ["Haarlem"], ["Almere"], ["Arnhem"], ["Zaanstad"], ["\u00b4s-Hertogenbosch"], ["Amersfoort"], ["Maastricht"], ["Dordrecht"], ["Leiden"], ["Haarlemmermeer"], ["Zoetermeer"], ["Emmen"], ["Zwolle"], ["Ede"], ["Delft"], ["Heerlen"], ["Alkmaar"], ["Tirana"], ["Andorra la Vella"], ["Antwerpen"], ["Gent"], ["Charleroi"], ["Li\u00e8ge"], ["Bruxelles [Brussel]"], ["Brugge"], ["Schaerbeek"], ["Namur"], ["Mons"], ["Sarajevo"], ["Banja Luka"], ["Zenica"], ["Sofija"], ["Plovdiv"], ["Varna"], ["Burgas"], ["Ruse"], ["Stara Zagora"], ["Pleven"], ["Sliven"], ["Dobric"], ["\u0160umen"], ["Madrid"], ["Barcelona"], ["Valencia"], ["Sevilla"], ["Zaragoza"], ["M\u00e1laga"], ["Bilbao"], ["Las Palmas de Gran Canaria"], ["Murcia"], ["Palma de Mallorca"], ["Valladolid"], ["C\u00f3rdoba"], ["Vigo"], ["Alicante [Alacant]"], ["Gij\u00f3n"], ["L\u00b4Hospitalet de Llobregat"], ["Granada"], ["A Coru\u00f1a (La Coru\u00f1a)"], ["Vitoria-Gasteiz"], ["Santa Cruz de Tenerife"], ["Badalona"], ["Oviedo"], ["M\u00f3stoles"], ["Elche [Elx]"], ["Sabadell"], ["Santander"], ["Jerez de la Frontera"], ["Pamplona [Iru\u00f1a]"], ["Donostia-San Sebasti\u00e1n"], ["Cartagena"], ["Legan\u00e9s"], ["Fuenlabrada"], ["Almer\u00eda"], ["Terrassa"], ["Alcal\u00e1 de Henares"], ["Burgos"], ["Salamanca"], ["Albacete"], ["Getafe"], ["C\u00e1diz"], ["Alcorc\u00f3n"], ["Huelva"], ["Le\u00f3n"], ["Castell\u00f3n de la Plana [Castell"], ["Badajoz"], ["[San Crist\u00f3bal de] la Laguna"], ["Logro\u00f1o"], ["Santa Coloma de Gramenet"], ["Tarragona"], ["Lleida (L\u00e9rida)"], ["Ja\u00e9n"], ["Ourense (Orense)"], ["Matar\u00f3"], ["Algeciras"], ["Marbella"], ["Barakaldo"], ["Dos Hermanas"], ["Santiago de Compostela"], ["Torrej\u00f3n de Ardoz"], ["T\u00f3rshavn"], ["Longyearbyen"], ["Reykjav\u00edk"], ["Roma"], ["Milano"], ["Napoli"], ["Torino"], ["Palermo"], ["Genova"], ["Bologna"], ["Firenze"], ["Catania"], ["Bari"], ["Venezia"], ["Messina"], ["Verona"], ["Trieste"], ["Padova"], ["Taranto"], ["Brescia"], ["Reggio di Calabria"], ["Modena"], ["Prato"], ["Parma"], ["Cagliari"], ["Livorno"], ["Perugia"], ["Foggia"], ["Reggio nell\u00b4 Emilia"], ["Salerno"], ["Ravenna"], ["Ferrara"], ["Rimini"], ["Syrakusa"], ["Sassari"], ["Monza"], ["Bergamo"], ["Pescara"], ["Latina"], ["Vicenza"], ["Terni"], ["Forl\u00ec"], ["Trento"], ["Novara"], ["Piacenza"], ["Ancona"], ["Lecce"], ["Bolzano"], ["Catanzaro"], ["La Spezia"], ["Udine"], ["Torre del Greco"], ["Andria"], ["Brindisi"], ["Giugliano in Campania"], ["Pisa"], ["Barletta"], ["Arezzo"], ["Alessandria"], ["Cesena"], ["Pesaro"], ["Wien"], ["Graz"], ["Linz"], ["Salzburg"], ["Innsbruck"], ["Klagenfurt"], ["Beograd"], ["Novi Sad"], ["Ni\u0161"], ["Pri\u0161tina"], ["Kragujevac"], ["Podgorica"], ["Subotica"], ["Prizren"], ["Athenai"], ["Thessaloniki"], ["Pireus"], ["Patras"], ["Peristerion"], ["Herakleion"], ["Kallithea"], ["Larisa"], ["Zagreb"], ["Split"], ["Rijeka"], ["Osijek"], ["Riga"], ["Daugavpils"], ["Liepaja"], ["Schaan"], ["Vaduz"], ["Vilnius"], ["Kaunas"], ["Klaipeda"], ["\u0160iauliai"], ["Panevezys"], ["Luxembourg [Luxemburg/L\u00ebtzebuerg]"], ["Skopje"], ["Chisinau"], ["Tiraspol"], ["Balti"], ["Bender (T\u00eeghina)"], ["Monte-Carlo"], ["Monaco-Ville"], ["Oslo"], ["Bergen"], ["Trondheim"], ["Stavanger"], ["B\u00e6rum"], ["Lisboa"], ["Porto"], ["Amadora"], ["Co\u00edmbra"], ["Braga"], ["Warszawa"], ["L\u00f3dz"], ["Krak\u00f3w"], ["Wroclaw"], ["Poznan"], ["Gdansk"], ["Szczecin"], ["Bydgoszcz"], ["Lublin"], ["Katowice"], ["Bialystok"], ["Czestochowa"], ["Gdynia"], ["Sosnowiec"], ["Radom"], ["Kielce"], ["Gliwice"], ["Torun"], ["Bytom"], ["Zabrze"], ["Bielsko-Biala"], ["Olsztyn"], ["Rzesz\u00f3w"], ["Ruda Slaska"], ["Rybnik"], ["Walbrzych"], ["Tychy"], ["Dabrowa G\u00f3rnicza"], ["Plock"], ["Elblag"], ["Opole"], ["Gorz\u00f3w Wielkopolski"], ["Wloclawek"], ["Chorz\u00f3w"], ["Tarn\u00f3w"], ["Zielona G\u00f3ra"], ["Koszalin"], ["Legnica"], ["Kalisz"], ["Grudziadz"], ["Slupsk"], ["Jastrzebie-Zdr\u00f3j"], ["Jaworzno"], ["Jelenia G\u00f3ra"], ["Paris"], ["Marseille"], ["Lyon"], ["Toulouse"], ["Nice"], ["Nantes"], ["Strasbourg"], ["Montpellier"], ["Bordeaux"], ["Rennes"], ["Le Havre"], ["Reims"], ["Lille"], ["St-\u00c9tienne"], ["Toulon"], ["Grenoble"], ["Angers"], ["Dijon"], ["Brest"], ["Le Mans"], ["Clermont-Ferrand"], ["Amiens"], ["Aix-en-Provence"], ["Limoges"], ["N\u00eemes"], ["Tours"], ["Villeurbanne"], ["Metz"], ["Besan\u00e7on"], ["Caen"], ["Orl\u00e9ans"], ["Mulhouse"], ["Rouen"], ["Boulogne-Billancourt"], ["Perpignan"], ["Nancy"], ["Roubaix"], ["Argenteuil"], ["Tourcoing"], ["Montreuil"], ["Bucuresti"], ["Iasi"], ["Constanta"], ["Cluj-Napoca"], ["Galati"], ["Timisoara"], ["Brasov"], ["Craiova"], ["Ploiesti"], ["Braila"], ["Oradea"], ["Bacau"], ["Pitesti"], ["Arad"], ["Sibiu"], ["T\u00e2rgu Mures"], ["Baia Mare"], ["Buzau"], ["Satu Mare"], ["Botosani"], ["Piatra Neamt"], ["R\u00e2mnicu V\u00e2lcea"], ["Suceava"], ["Drobeta-Turnu Severin"], ["T\u00e2rgoviste"], ["Focsani"], ["T\u00e2rgu Jiu"], ["Tulcea"], ["Resita"], ["Stockholm"], ["Gothenburg [G\u00f6teborg]"], ["Malm\u00f6"], ["Uppsala"], ["Link\u00f6ping"], ["V\u00e4ster\u00e5s"], ["\u00d6rebro"], ["Norrk\u00f6ping"], ["Helsingborg"], ["J\u00f6nk\u00f6ping"], ["Ume\u00e5"], ["Lund"], ["Bor\u00e5s"], ["Sundsvall"], ["G\u00e4vle"], ["Berlin"], ["Hamburg"], ["Munich [M\u00fcnchen]"], ["K\u00f6ln"], ["Frankfurt am Main"], ["Essen"], ["Dortmund"], ["Stuttgart"], ["D\u00fcsseldorf"], ["Bremen"], ["Duisburg"], ["Hannover"], ["Leipzig"], ["N\u00fcrnberg"], ["Dresden"], ["Bochum"], ["Wuppertal"], ["Bielefeld"], ["Mannheim"], ["Bonn"], ["Gelsenkirchen"], ["Karlsruhe"], ["Wiesbaden"], ["M\u00fcnster"], ["M\u00f6nchengladbach"], ["Chemnitz"], ["Augsburg"], ["Halle/Saale"], ["Braunschweig"], ["Aachen"], ["Krefeld"], ["Magdeburg"], ["Kiel"], ["Oberhausen"], ["L\u00fcbeck"], ["Hagen"], ["Rostock"], ["Freiburg im Breisgau"], ["Erfurt"], ["Kassel"], ["Saarbr\u00fccken"], ["Mainz"], ["Hamm"], ["Herne"], ["M\u00fclheim an der Ruhr"], ["Solingen"], ["Osnabr\u00fcck"], ["Ludwigshafen am Rhein"], ["Leverkusen"], ["Oldenburg"], ["Neuss"], ["Heidelberg"], ["Darmstadt"], ["Paderborn"], ["Potsdam"], ["W\u00fcrzburg"], ["Regensburg"], ["Recklinghausen"], ["G\u00f6ttingen"], ["Bremerhaven"], ["Wolfsburg"], ["Bottrop"], ["Remscheid"], ["Heilbronn"], ["Pforzheim"], ["Offenbach am Main"], ["Ulm"], ["Ingolstadt"], ["Gera"], ["Salzgitter"], ["Cottbus"], ["Reutlingen"], ["F\u00fcrth"], ["Siegen"], ["Koblenz"], ["Moers"], ["Bergisch Gladbach"], ["Zwickau"], ["Hildesheim"], ["Witten"], ["Schwerin"], ["Erlangen"], ["Kaiserslautern"], ["Trier"], ["Jena"], ["Iserlohn"], ["G\u00fctersloh"], ["Marl"], ["L\u00fcnen"], ["D\u00fcren"], ["Ratingen"], ["Velbert"], ["Esslingen am Neckar"], ["Serravalle"], ["San Marino"], ["Bratislava"], ["Ko\u0161ice"], ["Pre\u0161ov"], ["Ljubljana"], ["Maribor"], ["Helsinki [Helsingfors]"], ["Espoo"], ["Tampere"], ["Vantaa"], ["Turku [\u00c5bo]"], ["Oulu"], ["Lahti"], ["Z\u00fcrich"], ["Geneve"], ["Basel"], ["Bern"], ["Lausanne"], ["K\u00f8benhavn"], ["\u00c5rhus"], ["Odense"], ["Aalborg"], ["Frederiksberg"], ["Praha"], ["Brno"], ["Ostrava"], ["Plzen"], ["Olomouc"], ["Liberec"], ["Cesk\u00e9 Budejovice"], ["Hradec Kr\u00e1lov\u00e9"], ["\u00dast\u00ed nad Labem"], ["Pardubice"], ["Kyiv"], ["Harkova [Harkiv]"], ["Dnipropetrovsk"], ["Donetsk"], ["Odesa"], ["Zaporizzja"], ["Lviv"], ["Kryvyi Rig"], ["Mykolajiv"], ["Mariupol"], ["Lugansk"], ["Vinnytsja"], ["Makijivka"], ["Herson"], ["Sevastopol"], ["Simferopol"], ["Pultava [Poltava]"], ["T\u0161ernigiv"], ["T\u0161erkasy"], ["Gorlivka"], ["Zytomyr"], ["Sumy"], ["Dniprodzerzynsk"], ["Kirovograd"], ["Hmelnytskyi"], ["T\u0161ernivtsi"], ["Rivne"], ["Krement\u0161uk"], ["Ivano-Frankivsk"], ["Ternopil"], ["Lutsk"], ["Bila Tserkva"], ["Kramatorsk"], ["Melitopol"], ["Kert\u0161"], ["Nikopol"], ["Berdjansk"], ["Pavlograd"], ["Sjeverodonetsk"], ["Slovjansk"], ["Uzgorod"], ["Alt\u0161evsk"], ["Lysyt\u0161ansk"], ["Jevpatorija"], ["Kamjanets-Podilskyi"], ["Jenakijeve"], ["Krasnyi Lut\u0161"], ["Stahanov"], ["Oleksandrija"], ["Konotop"], ["Kostjantynivka"], ["Berdyt\u0161iv"], ["Izmajil"], ["\u0160ostka"], ["Uman"], ["Brovary"], ["Mukat\u0161eve"], ["Budapest"], ["Debrecen"], ["Miskolc"], ["Szeged"], ["P\u00e9cs"], ["Gy\u00f6r"], ["Nyiregyh\u00e1za"], ["Kecskem\u00e9t"], ["Sz\u00e9kesfeh\u00e9rv\u00e1r"], ["Minsk"], ["Gomel"], ["Mogiljov"], ["Vitebsk"], ["Grodno"], ["Bobruisk"], ["Baranovit\u0161i"], ["Borisov"], ["Pinsk"], ["Or\u0161a"], ["Mozyr"], ["Novopolotsk"], ["Lida"], ["Soligorsk"], ["Molodet\u0161no"], ["Citt\u00e0 del Vaticano"], ["Moscow"], ["St Petersburg"], ["Novosibirsk"], ["Nizni Novgorod"], ["Jekaterinburg"], ["Samara"], ["Omsk"], ["Kazan"], ["Ufa"], ["T\u0161eljabinsk"], ["Rostov-na-Donu"], ["Perm"], ["Volgograd"], ["Voronez"], ["Krasnojarsk"], ["Saratov"], ["Toljatti"], ["Uljanovsk"], ["Izevsk"], ["Krasnodar"], ["Jaroslavl"], ["Habarovsk"], ["Vladivostok"], ["Irkutsk"], ["Barnaul"], ["Novokuznetsk"], ["Penza"], ["Rjazan"], ["Orenburg"], ["Lipetsk"], ["Nabereznyje T\u0161elny"], ["Tula"], ["Tjumen"], ["Kemerovo"], ["Astrahan"], ["Tomsk"], ["Kirov"], ["Ivanovo"], ["T\u0161eboksary"], ["Brjansk"], ["Tver"], ["Kursk"], ["Magnitogorsk"], ["Kaliningrad"], ["Nizni Tagil"], ["Murmansk"], ["Ulan-Ude"], ["Kurgan"], ["Arkangeli"], ["Sot\u0161i"], ["Smolensk"], ["Orjol"], ["Stavropol"], ["Belgorod"], ["Kaluga"], ["Vladimir"], ["Mahat\u0161kala"], ["T\u0161erepovets"], ["Saransk"], ["Tambov"], ["Vladikavkaz"], ["T\u0161ita"], ["Vologda"], ["Veliki Novgorod"], ["Komsomolsk-na-Amure"], ["Kostroma"], ["Volzski"], ["Taganrog"], ["Petroskoi"], ["Bratsk"], ["Dzerzinsk"], ["Surgut"], ["Orsk"], ["Sterlitamak"], ["Angarsk"], ["Jo\u0161kar-Ola"], ["Rybinsk"], ["Prokopjevsk"], ["Niznevartovsk"], ["Nalt\u0161ik"], ["Syktyvkar"], ["Severodvinsk"], ["Bijsk"], ["Niznekamsk"], ["Blagove\u0161t\u0161ensk"], ["\u0160ahty"], ["Staryi Oskol"], ["Zelenograd"], ["Balakovo"], ["Novorossijsk"], ["Pihkova"], ["Zlatoust"], ["Jakutsk"], ["Podolsk"], ["Petropavlovsk-Kamt\u0161atski"], ["Kamensk-Uralski"], ["Engels"], ["Syzran"], ["Grozny"], ["Novot\u0161erkassk"], ["Berezniki"], ["Juzno-Sahalinsk"], ["Volgodonsk"], ["Abakan"], ["Maikop"], ["Miass"], ["Armavir"], ["Ljubertsy"], ["Rubtsovsk"], ["Kovrov"], ["Nahodka"], ["Ussurijsk"], ["Salavat"], ["Myti\u0161t\u0161i"], ["Kolomna"], ["Elektrostal"], ["Murom"], ["Kolpino"], ["Norilsk"], ["Almetjevsk"], ["Novomoskovsk"], ["Dimitrovgrad"], ["Pervouralsk"], ["Himki"], ["Bala\u0161iha"], ["Nevinnomyssk"], ["Pjatigorsk"], ["Korolev"], ["Serpuhov"], ["Odintsovo"], ["Orehovo-Zujevo"], ["Kamy\u0161in"], ["Novot\u0161eboksarsk"], ["T\u0161erkessk"], ["At\u0161insk"], ["Magadan"], ["Mit\u0161urinsk"], ["Kislovodsk"], ["Jelets"], ["Seversk"], ["Noginsk"], ["Velikije Luki"], ["Novokuiby\u0161evsk"], ["Neftekamsk"], ["Leninsk-Kuznetski"], ["Oktjabrski"], ["Sergijev Posad"], ["Arzamas"], ["Kiseljovsk"], ["Novotroitsk"], ["Obninsk"], ["Kansk"], ["Glazov"], ["Solikamsk"], ["Sarapul"], ["Ust-Ilimsk"], ["\u0160t\u0161olkovo"], ["Mezduret\u0161ensk"], ["Usolje-Sibirskoje"], ["Elista"], ["Novo\u0161ahtinsk"], ["Votkinsk"], ["Kyzyl"], ["Serov"], ["Zelenodolsk"], ["Zeleznodoroznyi"], ["Kine\u0161ma"], ["Kuznetsk"], ["Uhta"], ["Jessentuki"], ["Tobolsk"], ["Neftejugansk"], ["Bataisk"], ["Nojabrsk"], ["Bala\u0161ov"], ["Zeleznogorsk"], ["Zukovski"], ["Anzero-Sudzensk"], ["Bugulma"], ["Novouralsk"], ["Pu\u0161kin"], ["Vorkuta"], ["Derbent"], ["Kirovo-T\u0161epetsk"], ["Krasnogorsk"], ["Klin"], ["T\u0161aikovski"], ["Novyi Urengoi"], ["Tallinn"], ["Tartu"]], "trigger_words": ["Name"], "Prediction": "city.Name \nFROM city \nJOIN country ON city.CountryCode=country.Code \nJOIN countrylanguage ON countrylanguage.CountryCode=country.Code \nWHERE country.Continent='Europe' AND countrylanguage.Language='English' AND countrylanguage.IsOfficial='F';"}
{"db_id": "world_1", "query": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')", "query_toks": ["SELECT", "DISTINCT", "T2.Name", "FROM", "country", "AS", "T1", "JOIN", "city", "AS", "T2", "ON", "T2.CountryCode", "=", "T1.Code", "WHERE", "T1.Continent", "=", "'Europe", "'", "AND", "T1.Name", "NOT", "IN", "(", "SELECT", "T3.Name", "FROM", "country", "AS", "T3", "JOIN", "countrylanguage", "AS", "T4", "ON", "T3.Code", "=", "T4.CountryCode", "WHERE", "T4.IsOfficial", "=", "'T", "'", "AND", "T4.Language", "=", "'English", "'", ")"], "query_toks_no_value": ["select", "distinct", "t2", ".", "name", "from", "country", "as", "t1", "join", "city", "as", "t2", "on", "t2", ".", "countrycode", "=", "t1", ".", "code", "where", "t1", ".", "continent", "=", "value", "and", "t1", ".", "name", "not", "in", "(", "select", "t3", ".", "name", "from", "country", "as", "t3", "join", "countrylanguage", "as", "t4", "on", "t3", ".", "code", "=", "t4", ".", "countrycode", "where", "t4", ".", "isofficial", "=", "value", "and", "t4", ".", "language", "=", "value", ")"], "question": "What are the names of cities in Europe for which English is not the official language?", "question_toks": ["What", "are", "the", "names", "of", "cities", "in", "Europe", "for", "which", "English", "is", "not", "the", "official", "language", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Europe\"", null], "and", [true, 8, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"T\"", null], "and", [false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "785", "answer_text": [["Amsterdam"], ["Rotterdam"], ["Haag"], ["Utrecht"], ["Eindhoven"], ["Tilburg"], ["Groningen"], ["Breda"], ["Apeldoorn"], ["Nijmegen"], ["Enschede"], ["Haarlem"], ["Almere"], ["Arnhem"], ["Zaanstad"], ["\u00b4s-Hertogenbosch"], ["Amersfoort"], ["Maastricht"], ["Dordrecht"], ["Leiden"], ["Haarlemmermeer"], ["Zoetermeer"], ["Emmen"], ["Zwolle"], ["Ede"], ["Delft"], ["Heerlen"], ["Alkmaar"], ["Tirana"], ["Andorra la Vella"], ["Antwerpen"], ["Gent"], ["Charleroi"], ["Li\u00e8ge"], ["Bruxelles [Brussel]"], ["Brugge"], ["Schaerbeek"], ["Namur"], ["Mons"], ["Sarajevo"], ["Banja Luka"], ["Zenica"], ["Sofija"], ["Plovdiv"], ["Varna"], ["Burgas"], ["Ruse"], ["Stara Zagora"], ["Pleven"], ["Sliven"], ["Dobric"], ["\u0160umen"], ["Madrid"], ["Barcelona"], ["Valencia"], ["Sevilla"], ["Zaragoza"], ["M\u00e1laga"], ["Bilbao"], ["Las Palmas de Gran Canaria"], ["Murcia"], ["Palma de Mallorca"], ["Valladolid"], ["C\u00f3rdoba"], ["Vigo"], ["Alicante [Alacant]"], ["Gij\u00f3n"], ["L\u00b4Hospitalet de Llobregat"], ["Granada"], ["A Coru\u00f1a (La Coru\u00f1a)"], ["Vitoria-Gasteiz"], ["Santa Cruz de Tenerife"], ["Badalona"], ["Oviedo"], ["M\u00f3stoles"], ["Elche [Elx]"], ["Sabadell"], ["Santander"], ["Jerez de la Frontera"], ["Pamplona [Iru\u00f1a]"], ["Donostia-San Sebasti\u00e1n"], ["Cartagena"], ["Legan\u00e9s"], ["Fuenlabrada"], ["Almer\u00eda"], ["Terrassa"], ["Alcal\u00e1 de Henares"], ["Burgos"], ["Salamanca"], ["Albacete"], ["Getafe"], ["C\u00e1diz"], ["Alcorc\u00f3n"], ["Huelva"], ["Le\u00f3n"], ["Castell\u00f3n de la Plana [Castell"], ["Badajoz"], ["[San Crist\u00f3bal de] la Laguna"], ["Logro\u00f1o"], ["Santa Coloma de Gramenet"], ["Tarragona"], ["Lleida (L\u00e9rida)"], ["Ja\u00e9n"], ["Ourense (Orense)"], ["Matar\u00f3"], ["Algeciras"], ["Marbella"], ["Barakaldo"], ["Dos Hermanas"], ["Santiago de Compostela"], ["Torrej\u00f3n de Ardoz"], ["T\u00f3rshavn"], ["Longyearbyen"], ["Reykjav\u00edk"], ["Roma"], ["Milano"], ["Napoli"], ["Torino"], ["Palermo"], ["Genova"], ["Bologna"], ["Firenze"], ["Catania"], ["Bari"], ["Venezia"], ["Messina"], ["Verona"], ["Trieste"], ["Padova"], ["Taranto"], ["Brescia"], ["Reggio di Calabria"], ["Modena"], ["Prato"], ["Parma"], ["Cagliari"], ["Livorno"], ["Perugia"], ["Foggia"], ["Reggio nell\u00b4 Emilia"], ["Salerno"], ["Ravenna"], ["Ferrara"], ["Rimini"], ["Syrakusa"], ["Sassari"], ["Monza"], ["Bergamo"], ["Pescara"], ["Latina"], ["Vicenza"], ["Terni"], ["Forl\u00ec"], ["Trento"], ["Novara"], ["Piacenza"], ["Ancona"], ["Lecce"], ["Bolzano"], ["Catanzaro"], ["La Spezia"], ["Udine"], ["Torre del Greco"], ["Andria"], ["Brindisi"], ["Giugliano in Campania"], ["Pisa"], ["Barletta"], ["Arezzo"], ["Alessandria"], ["Cesena"], ["Pesaro"], ["Wien"], ["Graz"], ["Linz"], ["Salzburg"], ["Innsbruck"], ["Klagenfurt"], ["Beograd"], ["Novi Sad"], ["Ni\u0161"], ["Pri\u0161tina"], ["Kragujevac"], ["Podgorica"], ["Subotica"], ["Prizren"], ["Athenai"], ["Thessaloniki"], ["Pireus"], ["Patras"], ["Peristerion"], ["Herakleion"], ["Kallithea"], ["Larisa"], ["Zagreb"], ["Split"], ["Rijeka"], ["Osijek"], ["Riga"], ["Daugavpils"], ["Liepaja"], ["Schaan"], ["Vaduz"], ["Vilnius"], ["Kaunas"], ["Klaipeda"], ["\u0160iauliai"], ["Panevezys"], ["Luxembourg [Luxemburg/L\u00ebtzebuerg]"], ["Skopje"], ["Chisinau"], ["Tiraspol"], ["Balti"], ["Bender (T\u00eeghina)"], ["Monte-Carlo"], ["Monaco-Ville"], ["Oslo"], ["Bergen"], ["Trondheim"], ["Stavanger"], ["B\u00e6rum"], ["Lisboa"], ["Porto"], ["Amadora"], ["Co\u00edmbra"], ["Braga"], ["Warszawa"], ["L\u00f3dz"], ["Krak\u00f3w"], ["Wroclaw"], ["Poznan"], ["Gdansk"], ["Szczecin"], ["Bydgoszcz"], ["Lublin"], ["Katowice"], ["Bialystok"], ["Czestochowa"], ["Gdynia"], ["Sosnowiec"], ["Radom"], ["Kielce"], ["Gliwice"], ["Torun"], ["Bytom"], ["Zabrze"], ["Bielsko-Biala"], ["Olsztyn"], ["Rzesz\u00f3w"], ["Ruda Slaska"], ["Rybnik"], ["Walbrzych"], ["Tychy"], ["Dabrowa G\u00f3rnicza"], ["Plock"], ["Elblag"], ["Opole"], ["Gorz\u00f3w Wielkopolski"], ["Wloclawek"], ["Chorz\u00f3w"], ["Tarn\u00f3w"], ["Zielona G\u00f3ra"], ["Koszalin"], ["Legnica"], ["Kalisz"], ["Grudziadz"], ["Slupsk"], ["Jastrzebie-Zdr\u00f3j"], ["Jaworzno"], ["Jelenia G\u00f3ra"], ["Paris"], ["Marseille"], ["Lyon"], ["Toulouse"], ["Nice"], ["Nantes"], ["Strasbourg"], ["Montpellier"], ["Bordeaux"], ["Rennes"], ["Le Havre"], ["Reims"], ["Lille"], ["St-\u00c9tienne"], ["Toulon"], ["Grenoble"], ["Angers"], ["Dijon"], ["Brest"], ["Le Mans"], ["Clermont-Ferrand"], ["Amiens"], ["Aix-en-Provence"], ["Limoges"], ["N\u00eemes"], ["Tours"], ["Villeurbanne"], ["Metz"], ["Besan\u00e7on"], ["Caen"], ["Orl\u00e9ans"], ["Mulhouse"], ["Rouen"], ["Boulogne-Billancourt"], ["Perpignan"], ["Nancy"], ["Roubaix"], ["Argenteuil"], ["Tourcoing"], ["Montreuil"], ["Bucuresti"], ["Iasi"], ["Constanta"], ["Cluj-Napoca"], ["Galati"], ["Timisoara"], ["Brasov"], ["Craiova"], ["Ploiesti"], ["Braila"], ["Oradea"], ["Bacau"], ["Pitesti"], ["Arad"], ["Sibiu"], ["T\u00e2rgu Mures"], ["Baia Mare"], ["Buzau"], ["Satu Mare"], ["Botosani"], ["Piatra Neamt"], ["R\u00e2mnicu V\u00e2lcea"], ["Suceava"], ["Drobeta-Turnu Severin"], ["T\u00e2rgoviste"], ["Focsani"], ["T\u00e2rgu Jiu"], ["Tulcea"], ["Resita"], ["Stockholm"], ["Gothenburg [G\u00f6teborg]"], ["Malm\u00f6"], ["Uppsala"], ["Link\u00f6ping"], ["V\u00e4ster\u00e5s"], ["\u00d6rebro"], ["Norrk\u00f6ping"], ["Helsingborg"], ["J\u00f6nk\u00f6ping"], ["Ume\u00e5"], ["Lund"], ["Bor\u00e5s"], ["Sundsvall"], ["G\u00e4vle"], ["Berlin"], ["Hamburg"], ["Munich [M\u00fcnchen]"], ["K\u00f6ln"], ["Frankfurt am Main"], ["Essen"], ["Dortmund"], ["Stuttgart"], ["D\u00fcsseldorf"], ["Bremen"], ["Duisburg"], ["Hannover"], ["Leipzig"], ["N\u00fcrnberg"], ["Dresden"], ["Bochum"], ["Wuppertal"], ["Bielefeld"], ["Mannheim"], ["Bonn"], ["Gelsenkirchen"], ["Karlsruhe"], ["Wiesbaden"], ["M\u00fcnster"], ["M\u00f6nchengladbach"], ["Chemnitz"], ["Augsburg"], ["Halle/Saale"], ["Braunschweig"], ["Aachen"], ["Krefeld"], ["Magdeburg"], ["Kiel"], ["Oberhausen"], ["L\u00fcbeck"], ["Hagen"], ["Rostock"], ["Freiburg im Breisgau"], ["Erfurt"], ["Kassel"], ["Saarbr\u00fccken"], ["Mainz"], ["Hamm"], ["Herne"], ["M\u00fclheim an der Ruhr"], ["Solingen"], ["Osnabr\u00fcck"], ["Ludwigshafen am Rhein"], ["Leverkusen"], ["Oldenburg"], ["Neuss"], ["Heidelberg"], ["Darmstadt"], ["Paderborn"], ["Potsdam"], ["W\u00fcrzburg"], ["Regensburg"], ["Recklinghausen"], ["G\u00f6ttingen"], ["Bremerhaven"], ["Wolfsburg"], ["Bottrop"], ["Remscheid"], ["Heilbronn"], ["Pforzheim"], ["Offenbach am Main"], ["Ulm"], ["Ingolstadt"], ["Gera"], ["Salzgitter"], ["Cottbus"], ["Reutlingen"], ["F\u00fcrth"], ["Siegen"], ["Koblenz"], ["Moers"], ["Bergisch Gladbach"], ["Zwickau"], ["Hildesheim"], ["Witten"], ["Schwerin"], ["Erlangen"], ["Kaiserslautern"], ["Trier"], ["Jena"], ["Iserlohn"], ["G\u00fctersloh"], ["Marl"], ["L\u00fcnen"], ["D\u00fcren"], ["Ratingen"], ["Velbert"], ["Esslingen am Neckar"], ["Serravalle"], ["San Marino"], ["Bratislava"], ["Ko\u0161ice"], ["Pre\u0161ov"], ["Ljubljana"], ["Maribor"], ["Helsinki [Helsingfors]"], ["Espoo"], ["Tampere"], ["Vantaa"], ["Turku [\u00c5bo]"], ["Oulu"], ["Lahti"], ["Z\u00fcrich"], ["Geneve"], ["Basel"], ["Bern"], ["Lausanne"], ["K\u00f8benhavn"], ["\u00c5rhus"], ["Odense"], ["Aalborg"], ["Frederiksberg"], ["Praha"], ["Brno"], ["Ostrava"], ["Plzen"], ["Olomouc"], ["Liberec"], ["Cesk\u00e9 Budejovice"], ["Hradec Kr\u00e1lov\u00e9"], ["\u00dast\u00ed nad Labem"], ["Pardubice"], ["Kyiv"], ["Harkova [Harkiv]"], ["Dnipropetrovsk"], ["Donetsk"], ["Odesa"], ["Zaporizzja"], ["Lviv"], ["Kryvyi Rig"], ["Mykolajiv"], ["Mariupol"], ["Lugansk"], ["Vinnytsja"], ["Makijivka"], ["Herson"], ["Sevastopol"], ["Simferopol"], ["Pultava [Poltava]"], ["T\u0161ernigiv"], ["T\u0161erkasy"], ["Gorlivka"], ["Zytomyr"], ["Sumy"], ["Dniprodzerzynsk"], ["Kirovograd"], ["Hmelnytskyi"], ["T\u0161ernivtsi"], ["Rivne"], ["Krement\u0161uk"], ["Ivano-Frankivsk"], ["Ternopil"], ["Lutsk"], ["Bila Tserkva"], ["Kramatorsk"], ["Melitopol"], ["Kert\u0161"], ["Nikopol"], ["Berdjansk"], ["Pavlograd"], ["Sjeverodonetsk"], ["Slovjansk"], ["Uzgorod"], ["Alt\u0161evsk"], ["Lysyt\u0161ansk"], ["Jevpatorija"], ["Kamjanets-Podilskyi"], ["Jenakijeve"], ["Krasnyi Lut\u0161"], ["Stahanov"], ["Oleksandrija"], ["Konotop"], ["Kostjantynivka"], ["Berdyt\u0161iv"], ["Izmajil"], ["\u0160ostka"], ["Uman"], ["Brovary"], ["Mukat\u0161eve"], ["Budapest"], ["Debrecen"], ["Miskolc"], ["Szeged"], ["P\u00e9cs"], ["Gy\u00f6r"], ["Nyiregyh\u00e1za"], ["Kecskem\u00e9t"], ["Sz\u00e9kesfeh\u00e9rv\u00e1r"], ["Minsk"], ["Gomel"], ["Mogiljov"], ["Vitebsk"], ["Grodno"], ["Bobruisk"], ["Baranovit\u0161i"], ["Borisov"], ["Pinsk"], ["Or\u0161a"], ["Mozyr"], ["Novopolotsk"], ["Lida"], ["Soligorsk"], ["Molodet\u0161no"], ["Citt\u00e0 del Vaticano"], ["Moscow"], ["St Petersburg"], ["Novosibirsk"], ["Nizni Novgorod"], ["Jekaterinburg"], ["Samara"], ["Omsk"], ["Kazan"], ["Ufa"], ["T\u0161eljabinsk"], ["Rostov-na-Donu"], ["Perm"], ["Volgograd"], ["Voronez"], ["Krasnojarsk"], ["Saratov"], ["Toljatti"], ["Uljanovsk"], ["Izevsk"], ["Krasnodar"], ["Jaroslavl"], ["Habarovsk"], ["Vladivostok"], ["Irkutsk"], ["Barnaul"], ["Novokuznetsk"], ["Penza"], ["Rjazan"], ["Orenburg"], ["Lipetsk"], ["Nabereznyje T\u0161elny"], ["Tula"], ["Tjumen"], ["Kemerovo"], ["Astrahan"], ["Tomsk"], ["Kirov"], ["Ivanovo"], ["T\u0161eboksary"], ["Brjansk"], ["Tver"], ["Kursk"], ["Magnitogorsk"], ["Kaliningrad"], ["Nizni Tagil"], ["Murmansk"], ["Ulan-Ude"], ["Kurgan"], ["Arkangeli"], ["Sot\u0161i"], ["Smolensk"], ["Orjol"], ["Stavropol"], ["Belgorod"], ["Kaluga"], ["Vladimir"], ["Mahat\u0161kala"], ["T\u0161erepovets"], ["Saransk"], ["Tambov"], ["Vladikavkaz"], ["T\u0161ita"], ["Vologda"], ["Veliki Novgorod"], ["Komsomolsk-na-Amure"], ["Kostroma"], ["Volzski"], ["Taganrog"], ["Petroskoi"], ["Bratsk"], ["Dzerzinsk"], ["Surgut"], ["Orsk"], ["Sterlitamak"], ["Angarsk"], ["Jo\u0161kar-Ola"], ["Rybinsk"], ["Prokopjevsk"], ["Niznevartovsk"], ["Nalt\u0161ik"], ["Syktyvkar"], ["Severodvinsk"], ["Bijsk"], ["Niznekamsk"], ["Blagove\u0161t\u0161ensk"], ["\u0160ahty"], ["Staryi Oskol"], ["Zelenograd"], ["Balakovo"], ["Novorossijsk"], ["Pihkova"], ["Zlatoust"], ["Jakutsk"], ["Podolsk"], ["Petropavlovsk-Kamt\u0161atski"], ["Kamensk-Uralski"], ["Engels"], ["Syzran"], ["Grozny"], ["Novot\u0161erkassk"], ["Berezniki"], ["Juzno-Sahalinsk"], ["Volgodonsk"], ["Abakan"], ["Maikop"], ["Miass"], ["Armavir"], ["Ljubertsy"], ["Rubtsovsk"], ["Kovrov"], ["Nahodka"], ["Ussurijsk"], ["Salavat"], ["Myti\u0161t\u0161i"], ["Kolomna"], ["Elektrostal"], ["Murom"], ["Kolpino"], ["Norilsk"], ["Almetjevsk"], ["Novomoskovsk"], ["Dimitrovgrad"], ["Pervouralsk"], ["Himki"], ["Bala\u0161iha"], ["Nevinnomyssk"], ["Pjatigorsk"], ["Korolev"], ["Serpuhov"], ["Odintsovo"], ["Orehovo-Zujevo"], ["Kamy\u0161in"], ["Novot\u0161eboksarsk"], ["T\u0161erkessk"], ["At\u0161insk"], ["Magadan"], ["Mit\u0161urinsk"], ["Kislovodsk"], ["Jelets"], ["Seversk"], ["Noginsk"], ["Velikije Luki"], ["Novokuiby\u0161evsk"], ["Neftekamsk"], ["Leninsk-Kuznetski"], ["Oktjabrski"], ["Sergijev Posad"], ["Arzamas"], ["Kiseljovsk"], ["Novotroitsk"], ["Obninsk"], ["Kansk"], ["Glazov"], ["Solikamsk"], ["Sarapul"], ["Ust-Ilimsk"], ["\u0160t\u0161olkovo"], ["Mezduret\u0161ensk"], ["Usolje-Sibirskoje"], ["Elista"], ["Novo\u0161ahtinsk"], ["Votkinsk"], ["Kyzyl"], ["Serov"], ["Zelenodolsk"], ["Zeleznodoroznyi"], ["Kine\u0161ma"], ["Kuznetsk"], ["Uhta"], ["Jessentuki"], ["Tobolsk"], ["Neftejugansk"], ["Bataisk"], ["Nojabrsk"], ["Bala\u0161ov"], ["Zeleznogorsk"], ["Zukovski"], ["Anzero-Sudzensk"], ["Bugulma"], ["Novouralsk"], ["Pu\u0161kin"], ["Vorkuta"], ["Derbent"], ["Kirovo-T\u0161epetsk"], ["Krasnogorsk"], ["Klin"], ["T\u0161aikovski"], ["Novyi Urengoi"], ["Tallinn"], ["Tartu"]], "trigger_words": ["Name"], "Prediction": "city.Name \nFROM city \nJOIN country ON city.CountryCode=country.Code \nJOIN countrylanguage ON country.Code=countrylanguage.CountryCode \nWHERE country.Continent='Europe' AND countrylanguage.Language!='English' AND countrylanguage.IsOfficial='F';"}
{"db_id": "world_1", "query": "select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  \"asia\"", "query_toks": ["select", "distinct", "t3.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "join", "city", "as", "t3", "on", "t1.code", "=", "t3.countrycode", "where", "t2.isofficial", "=", "\"t\"", "and", "t2.language", "=", "\"chinese\"", "and", "t1.continent", "=", "\"asia\""], "query_toks_no_value": ["select", "distinct", "t3", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "join", "city", "as", "t3", "on", "t1", ".", "code", "=", "t3", ".", "countrycode", "where", "t2", ".", "isofficial", "=", "value", "and", "t2", ".", "language", "=", "value", "and", "t1", ".", "continent", "=", "value"], "question": "Which unique cities are in Asian countries where Chinese is the official language ?", "question_toks": ["Which", "unique", "cities", "are", "in", "Asian", "countries", "where", "Chinese", "is", "the", "official", "language", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 3, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"t\"", null], "and", [false, 2, [0, [0, 24, false], null], "\"chinese\"", null], "and", [false, 2, [0, [0, 10, false], null], "\"asia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "786", "answer_text": [], "trigger_words": ["Name"], "Prediction": "DISTINCT city.Name \nFROM city \nJOIN country ON city.CountryCode=country.Code \nJOIN countrylanguage ON country.Code=countrylanguage.CountryCode \nWHERE country.Continent='Asia' AND countrylanguage.Language='Chinese' AND countrylanguage.IsOfficial='T';"}
{"db_id": "world_1", "query": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"", "query_toks": ["SELECT", "DISTINCT", "T3.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "JOIN", "city", "AS", "T3", "ON", "T1.Code", "=", "T3.CountryCode", "WHERE", "T2.IsOfficial", "=", "'T", "'", "AND", "T2.Language", "=", "'Chinese", "'", "AND", "T1.Continent", "=", "``", "Asia", "''"], "query_toks_no_value": ["select", "distinct", "t3", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "join", "city", "as", "t3", "on", "t1", ".", "code", "=", "t3", ".", "countrycode", "where", "t2", ".", "isofficial", "=", "value", "and", "t2", ".", "language", "=", "value", "and", "t1", ".", "continent", "=", "value"], "question": "Return the different names of cities that are in Asia and for which Chinese is the official language.", "question_toks": ["Return", "the", "different", "names", "of", "cities", "that", "are", "in", "Asia", "and", "for", "which", "Chinese", "is", "the", "official", "language", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 3, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"T\"", null], "and", [false, 2, [0, [0, 24, false], null], "\"Chinese\"", null], "and", [false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "787", "answer_text": [["Shanghai"], ["Peking"], ["Chongqing"], ["Tianjin"], ["Wuhan"], ["Harbin"], ["Shenyang"], ["Kanton [Guangzhou]"], ["Chengdu"], ["Nanking [Nanjing]"], ["Changchun"], ["Xi\u00b4an"], ["Dalian"], ["Qingdao"], ["Jinan"], ["Hangzhou"], ["Zhengzhou"], ["Shijiazhuang"], ["Taiyuan"], ["Kunming"], ["Changsha"], ["Nanchang"], ["Fuzhou"], ["Lanzhou"], ["Guiyang"], ["Ningbo"], ["Hefei"], ["Urumt\u0161i [\u00dcr\u00fcmqi]"], ["Anshan"], ["Fushun"], ["Nanning"], ["Zibo"], ["Qiqihar"], ["Jilin"], ["Tangshan"], ["Baotou"], ["Shenzhen"], ["Hohhot"], ["Handan"], ["Wuxi"], ["Xuzhou"], ["Datong"], ["Yichun"], ["Benxi"], ["Luoyang"], ["Suzhou"], ["Xining"], ["Huainan"], ["Jixi"], ["Daqing"], ["Fuxin"], ["Amoy [Xiamen]"], ["Liuzhou"], ["Shantou"], ["Jinzhou"], ["Mudanjiang"], ["Yinchuan"], ["Changzhou"], ["Zhangjiakou"], ["Dandong"], ["Hegang"], ["Kaifeng"], ["Jiamusi"], ["Liaoyang"], ["Hengyang"], ["Baoding"], ["Hunjiang"], ["Xinxiang"], ["Huangshi"], ["Haikou"], ["Yantai"], ["Bengbu"], ["Xiangtan"], ["Weifang"], ["Wuhu"], ["Pingxiang"], ["Yingkou"], ["Anyang"], ["Panzhihua"], ["Pingdingshan"], ["Xiangfan"], ["Zhuzhou"], ["Jiaozuo"], ["Wenzhou"], ["Zhangjiang"], ["Zigong"], ["Shuangyashan"], ["Zaozhuang"], ["Yakeshi"], ["Yichang"], ["Zhenjiang"], ["Huaibei"], ["Qinhuangdao"], ["Guilin"], ["Liupanshui"], ["Panjin"], ["Yangquan"], ["Jinxi"], ["Liaoyuan"], ["Lianyungang"], ["Xianyang"], ["Tai\u00b4an"], ["Chifeng"], ["Shaoguan"], ["Nantong"], ["Leshan"], ["Baoji"], ["Linyi"], ["Tonghua"], ["Siping"], ["Changzhi"], ["Tengzhou"], ["Chaozhou"], ["Yangzhou"], ["Dongwan"], ["Ma\u00b4anshan"], ["Foshan"], ["Yueyang"], ["Xingtai"], ["Changde"], ["Shihezi"], ["Yancheng"], ["Jiujiang"], ["Dongying"], ["Shashi"], ["Xintai"], ["Jingdezhen"], ["Tongchuan"], ["Zhongshan"], ["Shiyan"], ["Tieli"], ["Jining"], ["Wuhai"], ["Mianyang"], ["Luzhou"], ["Zunyi"], ["Shizuishan"], ["Neijiang"], ["Tongliao"], ["Tieling"], ["Wafangdian"], ["Anqing"], ["Shaoyang"], ["Laiwu"], ["Chengde"], ["Tianshui"], ["Nanyang"], ["Cangzhou"], ["Yibin"], ["Huaiyin"], ["Dunhua"], ["Yanji"], ["Jiangmen"], ["Tongling"], ["Suihua"], ["Gongziling"], ["Xiantao"], ["Chaoyang"], ["Ganzhou"], ["Huzhou"], ["Baicheng"], ["Shangzi"], ["Yangjiang"], ["Qitaihe"], ["Gejiu"], ["Jiangyin"], ["Hebi"], ["Jiaxing"], ["Wuzhou"], ["Meihekou"], ["Xuchang"], ["Liaocheng"], ["Haicheng"], ["Qianjiang"], ["Baiyin"], ["Bei\u00b4an"], ["Yixing"], ["Laizhou"], ["Qaramay"], ["Acheng"], ["Dezhou"], ["Nanping"], ["Zhaoqing"], ["Beipiao"], ["Fengcheng"], ["Fuyu"], ["Xinyang"], ["Dongtai"], ["Yuci"], ["Honghu"], ["Ezhou"], ["Heze"], ["Daxian"], ["Linfen"], ["Tianmen"], ["Yiyang"], ["Quanzhou"], ["Rizhao"], ["Deyang"], ["Guangyuan"], ["Changshu"], ["Zhangzhou"], ["Hailar"], ["Nanchong"], ["Jiutai"], ["Zhaodong"], ["Shaoxing"], ["Fuyang"], ["Maoming"], ["Qujing"], ["Ghulja"], ["Jiaohe"], ["Puyang"], ["Huadian"], ["Jiangyou"], ["Qashqar"], ["Anshun"], ["Fuling"], ["Xinyu"], ["Hanzhong"], ["Danyang"], ["Chenzhou"], ["Xiaogan"], ["Shangqiu"], ["Zhuhai"], ["Qingyuan"], ["Aqsu"], ["Xiaoshan"], ["Zaoyang"], ["Xinghua"], ["Hami"], ["Huizhou"], ["Jinmen"], ["Sanming"], ["Ulanhot"], ["Korla"], ["Wanxian"], ["Rui\u00b4an"], ["Zhoushan"], ["Liangcheng"], ["Jiaozhou"], ["Taizhou"], ["Taonan"], ["Pingdu"], ["Ji\u00b4an"], ["Longkou"], ["Langfang"], ["Zhoukou"], ["Suining"], ["Yulin"], ["Jinhua"], ["Liu\u00b4an"], ["Shuangcheng"], ["Suizhou"], ["Ankang"], ["Weinan"], ["Longjing"], ["Da\u00b4an"], ["Lengshuijiang"], ["Laiyang"], ["Xianning"], ["Dali"], ["Anda"], ["Jincheng"], ["Longyan"], ["Xichang"], ["Wendeng"], ["Hailun"], ["Binzhou"], ["Linhe"], ["Wuwei"], ["Duyun"], ["Mishan"], ["Shangrao"], ["Changji"], ["Meixian"], ["Yushu"], ["Tiefa"], ["Huai\u00b4an"], ["Leiyang"], ["Zalantun"], ["Weihai"], ["Loudi"], ["Qingzhou"], ["Qidong"], ["Huaihua"], ["Luohe"], ["Chuzhou"], ["Kaiyuan"], ["Linqing"], ["Chaohu"], ["Laohekou"], ["Dujiangyan"], ["Zhumadian"], ["Linchuan"], ["Jiaonan"], ["Sanmenxia"], ["Heyuan"], ["Manzhouli"], ["Lhasa"], ["Lianyuan"], ["Kuytun"], ["Puqi"], ["Hongjiang"], ["Qinzhou"], ["Renqiu"], ["Yuyao"], ["Guigang"], ["Kaili"], ["Yan\u00b4an"], ["Beihai"], ["Xuangzhou"], ["Quzhou"], ["Yong\u00b4an"], ["Zixing"], ["Liyang"], ["Yizheng"], ["Yumen"], ["Liling"], ["Yuncheng"], ["Shanwei"], ["Cixi"], ["Yuanjiang"], ["Bozhou"], ["Jinchang"], ["Fu\u00b4an"], ["Suqian"], ["Shishou"], ["Hengshui"], ["Danjiangkou"], ["Fujin"], ["Sanya"], ["Guangshui"], ["Huangshan"], ["Xingcheng"], ["Zhucheng"], ["Kunshan"], ["Haining"], ["Pingliang"], ["Fuqing"], ["Xinzhou"], ["Jieyang"], ["Zhangjiagang"], ["Tong Xian"], ["Ya\u00b4an"], ["Emeishan"], ["Enshi"], ["Bose"], ["Yuzhou"], ["Tumen"], ["Putian"], ["Linhai"], ["Xilin Hot"], ["Shaowu"], ["Junan"], ["Huaying"], ["Pingyi"], ["Huangyan"], ["Singapore"]], "trigger_words": ["Name"], "Prediction": "city.Name \nFROM city \nJOIN country ON city.CountryCode=country.Code \nJOIN countrylanguage ON countrylanguage.CountryCode=country.Code \nWHERE country.Continent='Asia' AND countrylanguage.Language='Chinese' AND countrylanguage.IsOfficial='T';"}
{"db_id": "world_1", "query": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1", "query_toks": ["SELECT", "Name", ",", "SurfaceArea", ",", "IndepYear", "FROM", "country", "ORDER", "BY", "Population", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "surfacearea", ",", "indepyear", "from", "country", "order", "by", "population", "limit", "value"], "question": "What are the name, independence year, and surface area of the country with the smallest population?", "question_toks": ["What", "are", "the", "name", ",", "independence", "year", ",", "and", "surface", "area", "of", "the", "country", "with", "the", "smallest", "population", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 14, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "788", "answer_text": [["Antarctica", 13120000.0, null]], "trigger_words": ["Name", "Surface Area", "Year Of Independence"], "Prediction": "country.Name, country.IndepYear, country.SurfaceArea\n FROM country\n WHERE country.Population = (SELECT MIN(Population) FROM country);"}
{"db_id": "world_1", "query": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1", "query_toks": ["SELECT", "Name", ",", "SurfaceArea", ",", "IndepYear", "FROM", "country", "ORDER", "BY", "Population", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "surfacearea", ",", "indepyear", "from", "country", "order", "by", "population", "limit", "value"], "question": "Give the name, year of independence, and surface area of the country that has the lowest population.", "question_toks": ["Give", "the", "name", ",", "year", "of", "independence", ",", "and", "surface", "area", "of", "the", "country", "that", "has", "the", "lowest", "population", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 14, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "789", "answer_text": [["Antarctica", 13120000.0, null]], "trigger_words": ["Name", "Surface Area", "Year Of Independence"], "Prediction": "country.Name, country.IndepYear, country.SurfaceArea\n FROM country\n WHERE country.Population = (SELECT MIN(Population) FROM country);"}
{"db_id": "world_1", "query": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1", "query_toks": ["SELECT", "Name", ",", "population", ",", "HeadOfState", "FROM", "country", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "population", ",", "headofstate", "from", "country", "order", "by", "surfacearea", "desc", "limit", "value"], "question": "What are the population, name and leader of the country with the largest area?", "question_toks": ["What", "are", "the", "population", ",", "name", "and", "leader", "of", "the", "country", "with", "the", "largest", "area", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "790", "answer_text": [["Russian Federation", 146934000, "Vladimir Putin"]], "trigger_words": ["Name", "Population", "Head Of State"], "Prediction": "country.Population, country.Name, country.HeadOfState \nFROM country \nWHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country);"}
{"db_id": "world_1", "query": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1", "query_toks": ["SELECT", "Name", ",", "population", ",", "HeadOfState", "FROM", "country", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "population", ",", "headofstate", "from", "country", "order", "by", "surfacearea", "desc", "limit", "value"], "question": "Give the name, population, and head of state for the country that has the largest area.", "question_toks": ["Give", "the", "name", ",", "population", ",", "and", "head", "of", "state", "for", "the", "country", "that", "has", "the", "largest", "area", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "791", "answer_text": [["Russian Federation", 146934000, "Vladimir Putin"]], "trigger_words": ["Name", "Population", "Head Of State"], "Prediction": "Name, Population, HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1;"}
{"db_id": "world_1", "query": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2", "query_toks": ["SELECT", "COUNT", "(", "T2.Language", ")", ",", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "GROUP", "BY", "T1.Name", "HAVING", "COUNT", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "count", "(", "t2", ".", "language", ")", ",", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "group", "by", "t1", ".", "name", "having", "count", "(", "*", ")", ">", "value"], "question": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.", "question_toks": ["Return", "the", "country", "name", "and", "the", "numbers", "of", "languages", "spoken", "for", "each", "country", "that", "speaks", "at", "least", "3", "languages", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 24, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "792", "answer_text": [[5, "Afghanistan"], [3, "Albania"], [3, "American Samoa"], [4, "Andorra"], [9, "Angola"], [3, "Argentina"], [4, "Aruba"], [8, "Australia"], [8, "Austria"], [4, "Azerbaijan"], [7, "Bangladesh"], [4, "Belarus"], [6, "Belgium"], [4, "Belize"], [7, "Benin"], [3, "Bhutan"], [4, "Bolivia"], [5, "Botswana"], [5, "Brazil"], [4, "Brunei"], [4, "Bulgaria"], [6, "Burkina Faso"], [3, "Burundi"], [4, "Cambodia"], [8, "Cameroon"], [12, "Canada"], [6, "Central African Republic"], [8, "Chad"], [4, "Chile"], [12, "China"], [5, "Colombia"], [5, "Comoros"], [6, "Congo"], [10, "Congo, The Democratic Republic of the"], [4, "Costa Rica"], [8, "Czech Republic"], [5, "C\u00f4te d\u2019Ivoire"], [7, "Denmark"], [3, "Djibouti"], [6, "Eritrea"], [5, "Estonia"], [7, "Ethiopia"], [5, "Finland"], [6, "France"], [3, "French Polynesia"], [4, "Gabon"], [5, "Gambia"], [6, "Georgia"], [6, "Germany"], [6, "Ghana"], [5, "Guam"], [5, "Guatemala"], [7, "Guinea"], [6, "Guinea-Bissau"], [3, "Guyana"], [4, "Honduras"], [5, "Hong Kong"], [6, "Hungary"], [12, "India"], [9, "Indonesia"], [10, "Iran"], [5, "Iraq"], [3, "Israel"], [8, "Italy"], [6, "Japan"], [3, "Jordan"], [6, "Kazakstan"], [10, "Kenya"], [7, "Kyrgyzstan"], [4, "Laos"], [6, "Latvia"], [3, "Lebanon"], [3, "Lesotho"], [8, "Liberia"], [3, "Liechtenstein"], [5, "Lithuania"], [5, "Luxembourg"], [4, "Macao"], [5, "Macedonia"], [4, "Malawi"], [6, "Malaysia"], [6, "Mali"], [6, "Mauritania"], [6, "Mauritius"], [3, "Mayotte"], [6, "Mexico"], [6, "Micronesia, Federated States of"], [5, "Moldova"], [4, "Monaco"], [6, "Mongolia"], [10, "Mozambique"], [8, "Myanmar"], [8, "Namibia"], [5, "Nauru"], [7, "Nepal"], [4, "Netherlands"], [3, "Netherlands Antilles"], [3, "New Caledonia"], [4, "Nicaragua"], [5, "Niger"], [10, "Nigeria"], [6, "Northern Mariana Islands"], [5, "Norway"], [8, "Pakistan"], [4, "Palau"], [6, "Panama"], [4, "Paraguay"], [3, "Peru"], [10, "Philippines"], [4, "Poland"], [6, "Romania"], [12, "Russian Federation"], [5, "R\u00e9union"], [3, "Samoa"], [6, "Senegal"], [3, "Seychelles"], [8, "Sierra Leone"], [3, "Singapore"], [5, "Slovakia"], [3, "Slovenia"], [3, "Solomon Islands"], [11, "South Africa"], [4, "Spain"], [3, "Sri Lanka"], [10, "Sudan"], [6, "Sweden"], [4, "Switzerland"], [6, "Taiwan"], [3, "Tajikistan"], [11, "Tanzania"], [6, "Thailand"], [8, "Togo"], [3, "Trinidad and Tobago"], [3, "Tunisia"], [3, "Turkey"], [4, "Turkmenistan"], [3, "Tuvalu"], [10, "Uganda"], [7, "Ukraine"], [3, "United Kingdom"], [12, "United States"], [6, "Uzbekistan"], [3, "Vanuatu"], [3, "Venezuela"], [9, "Vietnam"], [3, "Virgin Islands, U.S."], [6, "Yugoslavia"], [6, "Zambia"], [4, "Zimbabwe"]], "trigger_words": ["Number", "Name"], "Prediction": "country.Name, COUNT(countrylanguage.Language) AS num_languages\n FROM country\n JOIN countrylanguage ON country.Code=countrylanguage.CountryCode\n GROUP BY country.Code\n HAVING COUNT(countrylanguage.Language) >= 3;"}
{"db_id": "world_1", "query": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2", "query_toks": ["SELECT", "COUNT", "(", "T2.Language", ")", ",", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "countrylanguage", "AS", "T2", "ON", "T1.Code", "=", "T2.CountryCode", "GROUP", "BY", "T1.Name", "HAVING", "COUNT", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "count", "(", "t2", ".", "language", ")", ",", "t1", ".", "name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "countrycode", "group", "by", "t1", ".", "name", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the names of countries that speak more than 2 languages, as well as how many languages they speak?", "question_toks": ["What", "are", "the", "names", "of", "countries", "that", "speak", "more", "than", "2", "languages", ",", "as", "well", "as", "how", "many", "languages", "they", "speak", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 24, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "793", "answer_text": [[5, "Afghanistan"], [3, "Albania"], [3, "American Samoa"], [4, "Andorra"], [9, "Angola"], [3, "Argentina"], [4, "Aruba"], [8, "Australia"], [8, "Austria"], [4, "Azerbaijan"], [7, "Bangladesh"], [4, "Belarus"], [6, "Belgium"], [4, "Belize"], [7, "Benin"], [3, "Bhutan"], [4, "Bolivia"], [5, "Botswana"], [5, "Brazil"], [4, "Brunei"], [4, "Bulgaria"], [6, "Burkina Faso"], [3, "Burundi"], [4, "Cambodia"], [8, "Cameroon"], [12, "Canada"], [6, "Central African Republic"], [8, "Chad"], [4, "Chile"], [12, "China"], [5, "Colombia"], [5, "Comoros"], [6, "Congo"], [10, "Congo, The Democratic Republic of the"], [4, "Costa Rica"], [8, "Czech Republic"], [5, "C\u00f4te d\u2019Ivoire"], [7, "Denmark"], [3, "Djibouti"], [6, "Eritrea"], [5, "Estonia"], [7, "Ethiopia"], [5, "Finland"], [6, "France"], [3, "French Polynesia"], [4, "Gabon"], [5, "Gambia"], [6, "Georgia"], [6, "Germany"], [6, "Ghana"], [5, "Guam"], [5, "Guatemala"], [7, "Guinea"], [6, "Guinea-Bissau"], [3, "Guyana"], [4, "Honduras"], [5, "Hong Kong"], [6, "Hungary"], [12, "India"], [9, "Indonesia"], [10, "Iran"], [5, "Iraq"], [3, "Israel"], [8, "Italy"], [6, "Japan"], [3, "Jordan"], [6, "Kazakstan"], [10, "Kenya"], [7, "Kyrgyzstan"], [4, "Laos"], [6, "Latvia"], [3, "Lebanon"], [3, "Lesotho"], [8, "Liberia"], [3, "Liechtenstein"], [5, "Lithuania"], [5, "Luxembourg"], [4, "Macao"], [5, "Macedonia"], [4, "Malawi"], [6, "Malaysia"], [6, "Mali"], [6, "Mauritania"], [6, "Mauritius"], [3, "Mayotte"], [6, "Mexico"], [6, "Micronesia, Federated States of"], [5, "Moldova"], [4, "Monaco"], [6, "Mongolia"], [10, "Mozambique"], [8, "Myanmar"], [8, "Namibia"], [5, "Nauru"], [7, "Nepal"], [4, "Netherlands"], [3, "Netherlands Antilles"], [3, "New Caledonia"], [4, "Nicaragua"], [5, "Niger"], [10, "Nigeria"], [6, "Northern Mariana Islands"], [5, "Norway"], [8, "Pakistan"], [4, "Palau"], [6, "Panama"], [4, "Paraguay"], [3, "Peru"], [10, "Philippines"], [4, "Poland"], [6, "Romania"], [12, "Russian Federation"], [5, "R\u00e9union"], [3, "Samoa"], [6, "Senegal"], [3, "Seychelles"], [8, "Sierra Leone"], [3, "Singapore"], [5, "Slovakia"], [3, "Slovenia"], [3, "Solomon Islands"], [11, "South Africa"], [4, "Spain"], [3, "Sri Lanka"], [10, "Sudan"], [6, "Sweden"], [4, "Switzerland"], [6, "Taiwan"], [3, "Tajikistan"], [11, "Tanzania"], [6, "Thailand"], [8, "Togo"], [3, "Trinidad and Tobago"], [3, "Tunisia"], [3, "Turkey"], [4, "Turkmenistan"], [3, "Tuvalu"], [10, "Uganda"], [7, "Ukraine"], [3, "United Kingdom"], [12, "United States"], [6, "Uzbekistan"], [3, "Vanuatu"], [3, "Venezuela"], [9, "Vietnam"], [3, "Virgin Islands, U.S."], [6, "Yugoslavia"], [6, "Zambia"], [4, "Zimbabwe"]], "trigger_words": ["Number", "Name"], "Prediction": "country.Name, COUNT(countrylanguage.Language) AS num_languages\n FROM country\n JOIN countrylanguage ON country.Code=countrylanguage.CountryCode\n GROUP BY country.Name\n HAVING num_languages > 2;"}
{"db_id": "world_1", "query": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "District", "FROM", "city", "WHERE", "Population", ">", "(", "SELECT", "avg", "(", "Population", ")", "FROM", "city", ")", "GROUP", "BY", "District"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "district", "from", "city", "where", "population", ">", "(", "select", "avg", "(", "population", ")", "from", "city", ")", "group", "by", "district"], "question": "Find the number of cities in each district whose population is greater than the average population of cities?", "question_toks": ["Find", "the", "number", "of", "cities", "in", "each", "district", "whose", "population", "is", "greater", "than", "the", "average", "population", "of", "cities", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "794", "answer_text": [[1, "Abidjan"], [1, "Abu Dhabi"], [1, "Adana"], [1, "Addis Abeba"], [1, "Aden"], [1, "Aguascalientes"], [1, "Ahal"], [2, "Aichi"], [1, "Alagoas"], [2, "Alberta"], [1, "Aleksandria"], [1, "Aleppo"], [1, "Alger"], [1, "Almaty Qalasy"], [1, "Altai"], [1, "Amazonas"], [1, "Amman"], [1, "Anambra & Enugu & Eb"], [2, "Andalusia"], [5, "Andhra Pradesh"], [5, "Anhui"], [1, "Ankara"], [1, "Antalya"], [1, "Antananarivo"], [1, "Antioquia"], [1, "Antwerpen"], [1, "Aragonia"], [1, "Aragua"], [1, "Arequipa"], [3, "Arizona"], [1, "Arkangeli"], [1, "Ashanti"], [1, "Assam"], [1, "Astrahan"], [1, "Asunci\u00f3n"], [1, "Atlantique"], [1, "Atl\u00e1ntico"], [1, "Attika"], [1, "Auckland"], [1, "Baden-W\u00fcrttemberg"], [1, "Baghdad"], [2, "Bahia"], [2, "Baijeri"], [3, "Baja California"], [1, "Baki"], [1, "Bali"], [1, "Baluchistan"], [1, "Bamako"], [1, "Banaadir"], [1, "Bangkok"], [1, "Bangui"], [1, "Baskimaa"], [1, "Basra"], [1, "Ba\u0161kortostan"], [1, "Beirut"], [1, "Bengasi"], [1, "Berliini"], [1, "Bihar"], [1, "Bishkek shaary"], [1, "Blantyre"], [2, "Bol\u00edvar"], [1, "Bratislava"], [1, "Brazzaville"], [1, "Bremen"], [1, "British Colombia"], [1, "Brjansk"], [1, "Budapest"], [12, "Buenos Aires"], [1, "Bukarest"], [1, "Bulawayo"], [1, "Burjatia"], [1, "Bursa"], [8, "California"], [1, "Callao"], [1, "Campania"], [1, "Canary Islands"], [2, "Cap-Vert"], [1, "Carabobo"], [1, "Casablanca"], [1, "Cear\u00e1"], [2, "Central"], [2, "Central Java"], [1, "Central Macedonia"], [1, "Central Serbia"], [1, "Central Visayas"], [1, "Centre"], [1, "Chandigarh"], [1, "Chari-Baguirmi"], [2, "Chhatisgarh"], [1, "Chiapas"], [4, "Chiba"], [2, "Chihuahua"], [1, "Chisinau"], [1, "Chittagong"], [1, "Chollabuk"], [1, "Chongqing"], [1, "Chungchongbuk"], [2, "Coahuila de Zaragoza"], [1, "Coast"], [1, "Cochabamba"], [2, "Colorado"], [1, "Conakry"], [1, "Constantine"], [1, "Cort\u00e9s"], [1, "C\u00f3rdoba"], [1, "Damascus"], [1, "Dar es Salaam"], [1, "Delhi"], [1, "Dhaka"], [1, "District of Columbia"], [1, "Distrito Central"], [4, "Distrito Federal"], [1, "Distrito Nacional"], [1, "Diyarbakir"], [1, "Djibouti"], [2, "Dnipropetrovsk"], [1, "Doha"], [1, "Dolnoslaskie"], [3, "Donetsk"], [1, "Dubai"], [1, "Durango"], [1, "East Azerbaidzan"], [2, "East Java"], [1, "East Kasai"], [1, "Eastern Cape"], [1, "Ehime"], [1, "Emilia-Romagna"], [7, "England"], [1, "Esfahan"], [1, "Eskisehir"], [1, "Estuaire"], [1, "Fars"], [1, "Federaatio"], [2, "Florida"], [2, "Fujian"], [2, "Fukuoka"], [1, "Fukushima"], [1, "F\u00e8s-Boulemane"], [1, "Gansu"], [7, "Gauteng"], [1, "Gaza"], [1, "Gaziantep"], [1, "Georgia"], [1, "Gifu"], [1, "Gilan"], [1, "Giza"], [1, "Goi\u00e1s"], [1, "Gomel"], [1, "Grad Sofija"], [1, "Grad Zagreb"], [1, "Greater Accra"], [3, "Guanajuato"], [4, "Guangdong"], [3, "Guangxi"], [1, "Guatemala"], [1, "Guayas"], [1, "Guerrero"], [2, "Guizhou"], [5, "Gujarat"], [1, "Habarovsk"], [1, "Hainan"], [1, "Haiphong"], [1, "Hamadan"], [1, "Hamburg"], [1, "Hamgyong N"], [1, "Hamgyong P"], [1, "Hanoi"], [1, "Harare"], [1, "Harjumaa"], [1, "Harkova"], [1, "Haryana"], [1, "Haute-Za\u00efre"], [1, "Hawaii"], [6, "Hebei"], [9, "Heilongjiang"], [7, "Henan"], [1, "Herson"], [1, "Hessen"], [1, "Hims"], [2, "Hiroshima"], [1, "Hlavn\u00ed mesto Praha"], [1, "Ho Chi Minh City"], [2, "Hokkaido"], [1, "Hongkong"], [1, "Horad Minsk"], [1, "Hsinchu"], [4, "Hubei"], [4, "Hunan"], [4, "Hyogo"], [1, "Illinois"], [1, "Inchon"], [1, "Indiana"], [3, "Inner Mongolia"], [1, "Irbil"], [1, "Irkutsk"], [1, "Ishikawa"], [1, "Islamabad"], [1, "Istanbul"], [1, "Ivanovo"], [1, "Izmir"], [1, "I\u00e7el"], [1, "Jakarta Raya"], [3, "Jalisco"], [1, "Jambi"], [1, "Jammu and Kashmir"], [1, "Jaroslavl"], [1, "Jerusalem"], [2, "Jharkhand"], [7, "Jiangsu"], [2, "Jiangxi"], [4, "Jilin"], [1, "Jizn\u00ed Morava"], [1, "Kabol"], [1, "Kadiogo"], [1, "Kaduna"], [1, "Kagoshima"], [1, "Kairo"], [1, "Kalimantan Barat"], [1, "Kalimantan Selatan"], [1, "Kalimantan Timur"], [1, "Kaliningrad"], [5, "Kanagawa"], [1, "Kano & Jigawa"], [1, "Kaohsiung"], [3, "Karnataka"], [1, "Karotegin"], [1, "Katalonia"], [1, "Kaunas"], [1, "Kayseri"], [1, "Keelung"], [2, "Kemerovo"], [3, "Kerala"], [1, "Kerman"], [1, "Kermanshah"], [3, "Khartum"], [1, "Khorasan"], [1, "Khulna"], [1, "Khuzestan"], [1, "Kinshasa"], [1, "Kiova"], [1, "Kirov"], [1, "Konya"], [1, "Kouilou"], [1, "Kowloon and New Kowl"], [2, "Krasnodar"], [1, "Krasnojarsk"], [1, "Kujawsko-Pomorskie"], [1, "Kumamoto"], [1, "Kurgan"], [1, "Kursk"], [4, "KwaZulu-Natal"], [1, "Kwangju"], [1, "Kwara & Kogi"], [7, "Kyonggi"], [1, "Kyongsangbuk"], [3, "Kyongsangnam"], [1, "Kyoto"], [1, "K\u00f8benhavn"], [1, "La Habana"], [1, "La Libertad"], [2, "La Paz"], [1, "Lagos"], [1, "Lambayeque"], [1, "Lampung"], [1, "Lara"], [1, "Latium"], [1, "Leinster"], [12, "Liaoning"], [1, "Liguria"], [1, "Lilongwe"], [1, "Lima"], [1, "Lipetsk"], [2, "Lisboa"], [1, "Littoral"], [1, "Lodzkie"], [1, "Lombardia"], [1, "Loreto"], [1, "Louisiana"], [1, "Luanda"], [1, "Lubelskie"], [1, "Lugansk"], [1, "Lusaka"], [1, "Luxor"], [1, "Lviv"], [1, "Macau"], [5, "Madhya Pradesh"], [1, "Madrid"], [1, "Maekel"], [1, "Magdalena"], [13, "Maharashtra"], [1, "Malopolskie"], [1, "Managua"], [1, "Mandalay"], [1, "Manitoba"], [2, "Maputo"], [1, "Maranh\u00e3o"], [1, "Maritime"], [1, "Markazi"], [1, "Marrakech-Tensift-Al"], [1, "Maryland"], [1, "Massachusetts"], [1, "Mato Grosso"], [1, "Mato Grosso do Sul"], [1, "Mazowieckie"], [1, "Medina"], [3, "Mekka"], [1, "Mekn\u00e8s-Tafilalet"], [1, "Michigan"], [1, "Michoac\u00e1n de Ocampo"], [1, "Midi-Pyr\u00e9n\u00e9es"], [4, "Minas Gerais"], [1, "Minnesota"], [1, "Miranda"], [1, "Missouri"], [1, "Miyagi"], [1, "Mogiljov"], [1, "Montevideo"], [1, "Montserrado"], [1, "Moscow (City)"], [1, "Murcia"], [1, "Murmansk"], [1, "Mykolajiv"], [9, "M\u00e9xico"], [1, "Nagano"], [1, "Nagasaki"], [1, "Nairobi"], [1, "Namangan"], [1, "Nampo-si"], [1, "Nara"], [12, "National Capital Reg"], [1, "Nebraska"], [1, "Nevada"], [1, "New Mexico"], [1, "New South Wales"], [1, "New York"], [1, "Newmaa"], [1, "Niamey"], [1, "Niedersachsen"], [1, "Niigata"], [1, "Ninawa"], [1, "Ningxia"], [1, "Nizni Novgorod"], [1, "Noord-Holland"], [7, "Nordrhein-Westfalen"], [1, "Norte de Santander"], [1, "North Carolina"], [1, "Northern Mindanao"], [1, "Nothwest Border Prov"], [1, "Nouakchott"], [1, "Novosibirsk"], [3, "Nuevo Le\u00f3n"], [1, "Odesa"], [1, "Ogun"], [2, "Ohio"], [1, "Oita"], [2, "Okayama"], [2, "Oklahoma"], [1, "Omsk"], [1, "Ondo & Ekiti"], [4, "Ontario"], [1, "Oran"], [1, "Oregon"], [1, "Orenburg"], [1, "Oriental"], [2, "Orissa"], [6, "Osaka"], [1, "Oslo"], [1, "Ouest"], [5, "Oyo & Osun"], [1, "Panam\u00e1"], [2, "Paran\u00e1"], [2, "Para\u00edba"], [2, "Par\u00e1"], [1, "Peking"], [1, "Pennsylvania"], [1, "Penza"], [1, "Perak"], [1, "Perm"], [3, "Pernambuco"], [1, "Phnom Penh"], [1, "Piau\u00ed"], [1, "Pichincha"], [1, "Piemonte"], [1, "Pietari"], [1, "Pomorskie"], [1, "Port Said"], [1, "Primorje"], [1, "Provence-Alpes-C\u00f4te"], [1, "Puebla"], [11, "Punjab"], [1, "Pusan"], [1, "Pyongyang-si"], [1, "Qaraghandy"], [1, "Qinghai"], [1, "Qom"], [1, "Quang Nam-Da Nang"], [1, "Queensland"], [1, "Quer\u00e9taro de Arteaga"], [1, "Quintana Roo"], [1, "Qu\u00e9bec"], [2, "Rabat-Sal\u00e9-Zammour-Z"], [5, "Rajasthan"], [1, "Rangoon [Yangon]"], [1, "Rh\u00f4ne-Alpes"], [1, "Riau"], [1, "Riika"], [1, "Rio Grande do Norte"], [1, "Rio Grande do Sul"], [8, "Rio de Janeiro"], [1, "Risaralda"], [1, "Rivers & Bayelsa"], [1, "Riyadh"], [1, "Rjazan"], [1, "Rostov-na-Donu"], [3, "Saitama"], [2, "Saksi"], [1, "Salta"], [2, "Samara"], [1, "Samarkand"], [1, "San Juan"], [1, "San Luis Potos\u00ed"], [1, "San Salvador"], [1, "Sanaa"], [1, "Sanliurfa"], [1, "Santa Catarina"], [1, "Santa Cruz"], [2, "Santa F\u00e9"], [1, "Santaf\u00e9 de Bogot\u00e1"], [1, "Santander"], [3, "Santiago"], [1, "Santiago de Cuba"], [1, "Saratov"], [2, "Scotland"], [1, "Seoul"], [1, "Sergipe"], [2, "Shaanxi"], [2, "Shaba"], [7, "Shandong"], [1, "Shanghai"], [3, "Shanxi"], [2, "Shizuoka"], [3, "Sichuan"], [3, "Sinaloa"], [2, "Sindh"], [1, "Sisilia"], [1, "Sistan va Baluchesta"], [1, "Skopje"], [1, "Smolensk"], [1, "Sofala"], [2, "Sonora"], [1, "South Australia"], [1, "South Kazakstan"], [2, "Southern Mindanao"], [2, "Southern Tagalog"], [1, "Suez"], [1, "Sulawesi Selatan"], [1, "Sumatera Barat"], [1, "Sumatera Selatan"], [1, "Sumatera Utara"], [2, "Sverdlovsk"], [13, "S\u00e3o Paulo"], [1, "Tabasco"], [1, "Taegu"], [1, "Taejon"], [1, "Taichung"], [1, "Tainan"], [5, "Taipei"], [2, "Tamaulipas"], [5, "Tamil Nadu"], [1, "Tanger-T\u00e9touan"], [2, "Tatarstan"], [1, "Tbilisi"], [2, "Teheran"], [2, "Tennessee"], [6, "Texas"], [1, "Tianjin"], [1, "Tjumen"], [1, "Tochigi"], [3, "Tokyo-to"], [1, "Tolima"], [1, "Tomsk"], [1, "Toscana"], [1, "Toskent Shahri"], [1, "Tripoli"], [1, "Tucum\u00e1n"], [1, "Tula"], [1, "Tunis"], [1, "Tver"], [2, "T\u0161eljabinsk"], [1, "T\u0161uvassia"], [1, "Udmurtia"], [1, "Ulaanbaatar"], [1, "Uljanovsk"], [12, "Uttar Pradesh"], [1, "Valencia"], [1, "Valle"], [2, "Veracruz"], [1, "Viangchan"], [1, "Victoria"], [1, "Vilna"], [1, "Vinnytsja"], [1, "Virginia"], [1, "Volgograd"], [1, "Voronez"], [1, "Wakayama"], [1, "Washington"], [1, "West Australia"], [1, "West Azerbaidzan"], [3, "West Bengali"], [1, "West G\u00f6tanmaan l\u00e4n"], [4, "West Java"], [1, "West Kasai"], [2, "Western"], [1, "Western Cape"], [1, "Western Mindanao"], [2, "Western Visayas"], [1, "Wielkopolskie"], [1, "Wien"], [1, "Wilayah Persekutuan"], [1, "Wisconsin"], [1, "Xinxiang"], [1, "Yerevan"], [1, "Yogyakarta"], [1, "Yucat\u00e1n"], [1, "Yunnan"], [1, "Zachodnio-Pomorskie"], [1, "Zaporizzja"], [3, "Zhejiang"], [2, "Zuid-Holland"], [1, "Zulia"], [1, "al-Daqahliya"], [2, "al-Gharbiya"], [1, "al-Qalyubiya"], [1, "al-Sharqiya"], [1, "al-Sulaymaniya"], [1, "al-Tamim"], [1, "al-Zarqa"], [1, "\u00cele-de-France"], [1, "\u2013"]], "trigger_words": ["Number", "District"], "Prediction": "District, COUNT(*) \nFROM city \nWHERE Population > (SELECT AVG(Population) FROM city) \nGROUP BY District;"}
{"db_id": "world_1", "query": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "District", "FROM", "city", "WHERE", "Population", ">", "(", "SELECT", "avg", "(", "Population", ")", "FROM", "city", ")", "GROUP", "BY", "District"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "district", "from", "city", "where", "population", ">", "(", "select", "avg", "(", "population", ")", "from", "city", ")", "group", "by", "district"], "question": "How many cities in each district have a population that is above the average population across all cities?", "question_toks": ["How", "many", "cities", "in", "each", "district", "have", "a", "population", "that", "is", "above", "the", "average", "population", "across", "all", "cities", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "795", "answer_text": [[1, "Abidjan"], [1, "Abu Dhabi"], [1, "Adana"], [1, "Addis Abeba"], [1, "Aden"], [1, "Aguascalientes"], [1, "Ahal"], [2, "Aichi"], [1, "Alagoas"], [2, "Alberta"], [1, "Aleksandria"], [1, "Aleppo"], [1, "Alger"], [1, "Almaty Qalasy"], [1, "Altai"], [1, "Amazonas"], [1, "Amman"], [1, "Anambra & Enugu & Eb"], [2, "Andalusia"], [5, "Andhra Pradesh"], [5, "Anhui"], [1, "Ankara"], [1, "Antalya"], [1, "Antananarivo"], [1, "Antioquia"], [1, "Antwerpen"], [1, "Aragonia"], [1, "Aragua"], [1, "Arequipa"], [3, "Arizona"], [1, "Arkangeli"], [1, "Ashanti"], [1, "Assam"], [1, "Astrahan"], [1, "Asunci\u00f3n"], [1, "Atlantique"], [1, "Atl\u00e1ntico"], [1, "Attika"], [1, "Auckland"], [1, "Baden-W\u00fcrttemberg"], [1, "Baghdad"], [2, "Bahia"], [2, "Baijeri"], [3, "Baja California"], [1, "Baki"], [1, "Bali"], [1, "Baluchistan"], [1, "Bamako"], [1, "Banaadir"], [1, "Bangkok"], [1, "Bangui"], [1, "Baskimaa"], [1, "Basra"], [1, "Ba\u0161kortostan"], [1, "Beirut"], [1, "Bengasi"], [1, "Berliini"], [1, "Bihar"], [1, "Bishkek shaary"], [1, "Blantyre"], [2, "Bol\u00edvar"], [1, "Bratislava"], [1, "Brazzaville"], [1, "Bremen"], [1, "British Colombia"], [1, "Brjansk"], [1, "Budapest"], [12, "Buenos Aires"], [1, "Bukarest"], [1, "Bulawayo"], [1, "Burjatia"], [1, "Bursa"], [8, "California"], [1, "Callao"], [1, "Campania"], [1, "Canary Islands"], [2, "Cap-Vert"], [1, "Carabobo"], [1, "Casablanca"], [1, "Cear\u00e1"], [2, "Central"], [2, "Central Java"], [1, "Central Macedonia"], [1, "Central Serbia"], [1, "Central Visayas"], [1, "Centre"], [1, "Chandigarh"], [1, "Chari-Baguirmi"], [2, "Chhatisgarh"], [1, "Chiapas"], [4, "Chiba"], [2, "Chihuahua"], [1, "Chisinau"], [1, "Chittagong"], [1, "Chollabuk"], [1, "Chongqing"], [1, "Chungchongbuk"], [2, "Coahuila de Zaragoza"], [1, "Coast"], [1, "Cochabamba"], [2, "Colorado"], [1, "Conakry"], [1, "Constantine"], [1, "Cort\u00e9s"], [1, "C\u00f3rdoba"], [1, "Damascus"], [1, "Dar es Salaam"], [1, "Delhi"], [1, "Dhaka"], [1, "District of Columbia"], [1, "Distrito Central"], [4, "Distrito Federal"], [1, "Distrito Nacional"], [1, "Diyarbakir"], [1, "Djibouti"], [2, "Dnipropetrovsk"], [1, "Doha"], [1, "Dolnoslaskie"], [3, "Donetsk"], [1, "Dubai"], [1, "Durango"], [1, "East Azerbaidzan"], [2, "East Java"], [1, "East Kasai"], [1, "Eastern Cape"], [1, "Ehime"], [1, "Emilia-Romagna"], [7, "England"], [1, "Esfahan"], [1, "Eskisehir"], [1, "Estuaire"], [1, "Fars"], [1, "Federaatio"], [2, "Florida"], [2, "Fujian"], [2, "Fukuoka"], [1, "Fukushima"], [1, "F\u00e8s-Boulemane"], [1, "Gansu"], [7, "Gauteng"], [1, "Gaza"], [1, "Gaziantep"], [1, "Georgia"], [1, "Gifu"], [1, "Gilan"], [1, "Giza"], [1, "Goi\u00e1s"], [1, "Gomel"], [1, "Grad Sofija"], [1, "Grad Zagreb"], [1, "Greater Accra"], [3, "Guanajuato"], [4, "Guangdong"], [3, "Guangxi"], [1, "Guatemala"], [1, "Guayas"], [1, "Guerrero"], [2, "Guizhou"], [5, "Gujarat"], [1, "Habarovsk"], [1, "Hainan"], [1, "Haiphong"], [1, "Hamadan"], [1, "Hamburg"], [1, "Hamgyong N"], [1, "Hamgyong P"], [1, "Hanoi"], [1, "Harare"], [1, "Harjumaa"], [1, "Harkova"], [1, "Haryana"], [1, "Haute-Za\u00efre"], [1, "Hawaii"], [6, "Hebei"], [9, "Heilongjiang"], [7, "Henan"], [1, "Herson"], [1, "Hessen"], [1, "Hims"], [2, "Hiroshima"], [1, "Hlavn\u00ed mesto Praha"], [1, "Ho Chi Minh City"], [2, "Hokkaido"], [1, "Hongkong"], [1, "Horad Minsk"], [1, "Hsinchu"], [4, "Hubei"], [4, "Hunan"], [4, "Hyogo"], [1, "Illinois"], [1, "Inchon"], [1, "Indiana"], [3, "Inner Mongolia"], [1, "Irbil"], [1, "Irkutsk"], [1, "Ishikawa"], [1, "Islamabad"], [1, "Istanbul"], [1, "Ivanovo"], [1, "Izmir"], [1, "I\u00e7el"], [1, "Jakarta Raya"], [3, "Jalisco"], [1, "Jambi"], [1, "Jammu and Kashmir"], [1, "Jaroslavl"], [1, "Jerusalem"], [2, "Jharkhand"], [7, "Jiangsu"], [2, "Jiangxi"], [4, "Jilin"], [1, "Jizn\u00ed Morava"], [1, "Kabol"], [1, "Kadiogo"], [1, "Kaduna"], [1, "Kagoshima"], [1, "Kairo"], [1, "Kalimantan Barat"], [1, "Kalimantan Selatan"], [1, "Kalimantan Timur"], [1, "Kaliningrad"], [5, "Kanagawa"], [1, "Kano & Jigawa"], [1, "Kaohsiung"], [3, "Karnataka"], [1, "Karotegin"], [1, "Katalonia"], [1, "Kaunas"], [1, "Kayseri"], [1, "Keelung"], [2, "Kemerovo"], [3, "Kerala"], [1, "Kerman"], [1, "Kermanshah"], [3, "Khartum"], [1, "Khorasan"], [1, "Khulna"], [1, "Khuzestan"], [1, "Kinshasa"], [1, "Kiova"], [1, "Kirov"], [1, "Konya"], [1, "Kouilou"], [1, "Kowloon and New Kowl"], [2, "Krasnodar"], [1, "Krasnojarsk"], [1, "Kujawsko-Pomorskie"], [1, "Kumamoto"], [1, "Kurgan"], [1, "Kursk"], [4, "KwaZulu-Natal"], [1, "Kwangju"], [1, "Kwara & Kogi"], [7, "Kyonggi"], [1, "Kyongsangbuk"], [3, "Kyongsangnam"], [1, "Kyoto"], [1, "K\u00f8benhavn"], [1, "La Habana"], [1, "La Libertad"], [2, "La Paz"], [1, "Lagos"], [1, "Lambayeque"], [1, "Lampung"], [1, "Lara"], [1, "Latium"], [1, "Leinster"], [12, "Liaoning"], [1, "Liguria"], [1, "Lilongwe"], [1, "Lima"], [1, "Lipetsk"], [2, "Lisboa"], [1, "Littoral"], [1, "Lodzkie"], [1, "Lombardia"], [1, "Loreto"], [1, "Louisiana"], [1, "Luanda"], [1, "Lubelskie"], [1, "Lugansk"], [1, "Lusaka"], [1, "Luxor"], [1, "Lviv"], [1, "Macau"], [5, "Madhya Pradesh"], [1, "Madrid"], [1, "Maekel"], [1, "Magdalena"], [13, "Maharashtra"], [1, "Malopolskie"], [1, "Managua"], [1, "Mandalay"], [1, "Manitoba"], [2, "Maputo"], [1, "Maranh\u00e3o"], [1, "Maritime"], [1, "Markazi"], [1, "Marrakech-Tensift-Al"], [1, "Maryland"], [1, "Massachusetts"], [1, "Mato Grosso"], [1, "Mato Grosso do Sul"], [1, "Mazowieckie"], [1, "Medina"], [3, "Mekka"], [1, "Mekn\u00e8s-Tafilalet"], [1, "Michigan"], [1, "Michoac\u00e1n de Ocampo"], [1, "Midi-Pyr\u00e9n\u00e9es"], [4, "Minas Gerais"], [1, "Minnesota"], [1, "Miranda"], [1, "Missouri"], [1, "Miyagi"], [1, "Mogiljov"], [1, "Montevideo"], [1, "Montserrado"], [1, "Moscow (City)"], [1, "Murcia"], [1, "Murmansk"], [1, "Mykolajiv"], [9, "M\u00e9xico"], [1, "Nagano"], [1, "Nagasaki"], [1, "Nairobi"], [1, "Namangan"], [1, "Nampo-si"], [1, "Nara"], [12, "National Capital Reg"], [1, "Nebraska"], [1, "Nevada"], [1, "New Mexico"], [1, "New South Wales"], [1, "New York"], [1, "Newmaa"], [1, "Niamey"], [1, "Niedersachsen"], [1, "Niigata"], [1, "Ninawa"], [1, "Ningxia"], [1, "Nizni Novgorod"], [1, "Noord-Holland"], [7, "Nordrhein-Westfalen"], [1, "Norte de Santander"], [1, "North Carolina"], [1, "Northern Mindanao"], [1, "Nothwest Border Prov"], [1, "Nouakchott"], [1, "Novosibirsk"], [3, "Nuevo Le\u00f3n"], [1, "Odesa"], [1, "Ogun"], [2, "Ohio"], [1, "Oita"], [2, "Okayama"], [2, "Oklahoma"], [1, "Omsk"], [1, "Ondo & Ekiti"], [4, "Ontario"], [1, "Oran"], [1, "Oregon"], [1, "Orenburg"], [1, "Oriental"], [2, "Orissa"], [6, "Osaka"], [1, "Oslo"], [1, "Ouest"], [5, "Oyo & Osun"], [1, "Panam\u00e1"], [2, "Paran\u00e1"], [2, "Para\u00edba"], [2, "Par\u00e1"], [1, "Peking"], [1, "Pennsylvania"], [1, "Penza"], [1, "Perak"], [1, "Perm"], [3, "Pernambuco"], [1, "Phnom Penh"], [1, "Piau\u00ed"], [1, "Pichincha"], [1, "Piemonte"], [1, "Pietari"], [1, "Pomorskie"], [1, "Port Said"], [1, "Primorje"], [1, "Provence-Alpes-C\u00f4te"], [1, "Puebla"], [11, "Punjab"], [1, "Pusan"], [1, "Pyongyang-si"], [1, "Qaraghandy"], [1, "Qinghai"], [1, "Qom"], [1, "Quang Nam-Da Nang"], [1, "Queensland"], [1, "Quer\u00e9taro de Arteaga"], [1, "Quintana Roo"], [1, "Qu\u00e9bec"], [2, "Rabat-Sal\u00e9-Zammour-Z"], [5, "Rajasthan"], [1, "Rangoon [Yangon]"], [1, "Rh\u00f4ne-Alpes"], [1, "Riau"], [1, "Riika"], [1, "Rio Grande do Norte"], [1, "Rio Grande do Sul"], [8, "Rio de Janeiro"], [1, "Risaralda"], [1, "Rivers & Bayelsa"], [1, "Riyadh"], [1, "Rjazan"], [1, "Rostov-na-Donu"], [3, "Saitama"], [2, "Saksi"], [1, "Salta"], [2, "Samara"], [1, "Samarkand"], [1, "San Juan"], [1, "San Luis Potos\u00ed"], [1, "San Salvador"], [1, "Sanaa"], [1, "Sanliurfa"], [1, "Santa Catarina"], [1, "Santa Cruz"], [2, "Santa F\u00e9"], [1, "Santaf\u00e9 de Bogot\u00e1"], [1, "Santander"], [3, "Santiago"], [1, "Santiago de Cuba"], [1, "Saratov"], [2, "Scotland"], [1, "Seoul"], [1, "Sergipe"], [2, "Shaanxi"], [2, "Shaba"], [7, "Shandong"], [1, "Shanghai"], [3, "Shanxi"], [2, "Shizuoka"], [3, "Sichuan"], [3, "Sinaloa"], [2, "Sindh"], [1, "Sisilia"], [1, "Sistan va Baluchesta"], [1, "Skopje"], [1, "Smolensk"], [1, "Sofala"], [2, "Sonora"], [1, "South Australia"], [1, "South Kazakstan"], [2, "Southern Mindanao"], [2, "Southern Tagalog"], [1, "Suez"], [1, "Sulawesi Selatan"], [1, "Sumatera Barat"], [1, "Sumatera Selatan"], [1, "Sumatera Utara"], [2, "Sverdlovsk"], [13, "S\u00e3o Paulo"], [1, "Tabasco"], [1, "Taegu"], [1, "Taejon"], [1, "Taichung"], [1, "Tainan"], [5, "Taipei"], [2, "Tamaulipas"], [5, "Tamil Nadu"], [1, "Tanger-T\u00e9touan"], [2, "Tatarstan"], [1, "Tbilisi"], [2, "Teheran"], [2, "Tennessee"], [6, "Texas"], [1, "Tianjin"], [1, "Tjumen"], [1, "Tochigi"], [3, "Tokyo-to"], [1, "Tolima"], [1, "Tomsk"], [1, "Toscana"], [1, "Toskent Shahri"], [1, "Tripoli"], [1, "Tucum\u00e1n"], [1, "Tula"], [1, "Tunis"], [1, "Tver"], [2, "T\u0161eljabinsk"], [1, "T\u0161uvassia"], [1, "Udmurtia"], [1, "Ulaanbaatar"], [1, "Uljanovsk"], [12, "Uttar Pradesh"], [1, "Valencia"], [1, "Valle"], [2, "Veracruz"], [1, "Viangchan"], [1, "Victoria"], [1, "Vilna"], [1, "Vinnytsja"], [1, "Virginia"], [1, "Volgograd"], [1, "Voronez"], [1, "Wakayama"], [1, "Washington"], [1, "West Australia"], [1, "West Azerbaidzan"], [3, "West Bengali"], [1, "West G\u00f6tanmaan l\u00e4n"], [4, "West Java"], [1, "West Kasai"], [2, "Western"], [1, "Western Cape"], [1, "Western Mindanao"], [2, "Western Visayas"], [1, "Wielkopolskie"], [1, "Wien"], [1, "Wilayah Persekutuan"], [1, "Wisconsin"], [1, "Xinxiang"], [1, "Yerevan"], [1, "Yogyakarta"], [1, "Yucat\u00e1n"], [1, "Yunnan"], [1, "Zachodnio-Pomorskie"], [1, "Zaporizzja"], [3, "Zhejiang"], [2, "Zuid-Holland"], [1, "Zulia"], [1, "al-Daqahliya"], [2, "al-Gharbiya"], [1, "al-Qalyubiya"], [1, "al-Sharqiya"], [1, "al-Sulaymaniya"], [1, "al-Tamim"], [1, "al-Zarqa"], [1, "\u00cele-de-France"], [1, "\u2013"]], "trigger_words": ["Number", "District"], "Prediction": "city.District, COUNT(city.Name)\n FROM city\n WHERE city.Population > (SELECT AVG(city.Population) FROM city)\n GROUP BY city.District;"}
{"db_id": "world_1", "query": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72", "query_toks": ["SELECT", "sum", "(", "Population", ")", ",", "GovernmentForm", "FROM", "country", "GROUP", "BY", "GovernmentForm", "HAVING", "avg", "(", "LifeExpectancy", ")", ">", "72"], "query_toks_no_value": ["select", "sum", "(", "population", ")", ",", "governmentform", "from", "country", "group", "by", "governmentform", "having", "avg", "(", "lifeexpectancy", ")", ">", "value"], "question": "Find the government form name and total population for each government form whose average life expectancy is longer than 72.", "question_toks": ["Find", "the", "government", "form", "name", "and", "total", "population", "for", "each", "government", "form", "whose", "average", "life", "expectancy", "is", "longer", "than", "72", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [[false, 3, [0, [5, 15, false], null], 72.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "796", "answer_text": [[3947000, "Commonwealth of the US"], [1972000, "Constitutional Monarchy (Emirate)"], [82516000, "Constitutional Monarchy, Federation"], [193050, "Dependent Territory of the UK"], [2441000, "Emirate Federation"], [7160400, "Federation"], [617000, "Monarchy (Emirate)"], [2870000, "Monarchy (Sultanate)"], [464000, "Nonmetropolitan Territory of France"], [320000, "Nonmetropolitan Territory of The Netherlands"], [1731000, "Overseas Department of France"], [78000, "Parliamentary Coprincipality"], [99000, "Part of Denmark"], [115072000, "Socialistic Republic"], [5605000, "Socialistic State"], [7255000, "Special Administrative Region of China"], [329000, "US Territory"]], "trigger_words": ["Total Number", "Government Form"], "Prediction": "GovernmentForm, SUM(Population) \n FROM country \n WHERE LifeExpectancy > 72 \n GROUP BY GovernmentForm;"}
{"db_id": "world_1", "query": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72", "query_toks": ["SELECT", "sum", "(", "Population", ")", ",", "GovernmentForm", "FROM", "country", "GROUP", "BY", "GovernmentForm", "HAVING", "avg", "(", "LifeExpectancy", ")", ">", "72"], "query_toks_no_value": ["select", "sum", "(", "population", ")", ",", "governmentform", "from", "country", "group", "by", "governmentform", "having", "avg", "(", "lifeexpectancy", ")", ">", "value"], "question": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?", "question_toks": ["What", "are", "the", "different", "government", "forms", "and", "what", "is", "the", "total", "population", "of", "each", "for", "government", "forms", "that", "have", "an", "average", "life", "expectancy", "greater", "than", "72", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [[false, 3, [0, [5, 15, false], null], 72.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "797", "answer_text": [[3947000, "Commonwealth of the US"], [1972000, "Constitutional Monarchy (Emirate)"], [82516000, "Constitutional Monarchy, Federation"], [193050, "Dependent Territory of the UK"], [2441000, "Emirate Federation"], [7160400, "Federation"], [617000, "Monarchy (Emirate)"], [2870000, "Monarchy (Sultanate)"], [464000, "Nonmetropolitan Territory of France"], [320000, "Nonmetropolitan Territory of The Netherlands"], [1731000, "Overseas Department of France"], [78000, "Parliamentary Coprincipality"], [99000, "Part of Denmark"], [115072000, "Socialistic Republic"], [5605000, "Socialistic State"], [7255000, "Special Administrative Region of China"], [329000, "US Territory"]], "trigger_words": ["Total Number", "Government Form"], "Prediction": "GovernmentForm, SUM(Population) \nFROM country \nWHERE LifeExpectancy > 72 \nGROUP BY GovernmentForm"}
{"db_id": "world_1", "query": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72", "query_toks": ["SELECT", "sum", "(", "Population", ")", ",", "avg", "(", "LifeExpectancy", ")", ",", "Continent", "FROM", "country", "GROUP", "BY", "Continent", "HAVING", "avg", "(", "LifeExpectancy", ")", "<", "72"], "query_toks_no_value": ["select", "sum", "(", "population", ")", ",", "avg", "(", "lifeexpectancy", ")", ",", "continent", "from", "country", "group", "by", "continent", "having", "avg", "(", "lifeexpectancy", ")", "<", "value"], "question": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?", "question_toks": ["Find", "the", "average", "life", "expectancy", "and", "total", "population", "for", "each", "continent", "where", "the", "average", "life", "expectancy", "is", "shorter", "than", "72", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [5, [0, [0, 15, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 4, [0, [5, 15, false], null], 72.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "798", "answer_text": [[784475000, 52.571929824561394, "Africa"], [3705025700, 67.44117647058825, "Asia"], [30401150, 69.715, "Oceania"], [345780000, 70.94615384615386, "South America"]], "trigger_words": ["Total Number", "Average Number", "Continent"], "Prediction": "continent, AVG(lifeExpectancy), SUM(population)\n FROM country\n WHERE lifeExpectancy < 72\n GROUP BY continent;"}
{"db_id": "world_1", "query": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72", "query_toks": ["SELECT", "sum", "(", "Population", ")", ",", "avg", "(", "LifeExpectancy", ")", ",", "Continent", "FROM", "country", "GROUP", "BY", "Continent", "HAVING", "avg", "(", "LifeExpectancy", ")", "<", "72"], "query_toks_no_value": ["select", "sum", "(", "population", ")", ",", "avg", "(", "lifeexpectancy", ")", ",", "continent", "from", "country", "group", "by", "continent", "having", "avg", "(", "lifeexpectancy", ")", "<", "value"], "question": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?", "question_toks": ["What", "are", "the", "different", "continents", "and", "the", "total", "popuation", "and", "average", "life", "expectancy", "corresponding", "to", "each", ",", "for", "continents", "that", "have", "an", "average", "life", "expectancy", "less", "than", "72", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [5, [0, [0, 15, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 4, [0, [5, 15, false], null], 72.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "799", "answer_text": [[784475000, 52.571929824561394, "Africa"], [3705025700, 67.44117647058825, "Asia"], [30401150, 69.715, "Oceania"], [345780000, 70.94615384615386, "South America"]], "trigger_words": ["Total Number", "Average Number", "Continent"], "Prediction": "Continent, SUM(Population), AVG(LifeExpectancy)\n FROM country\n WHERE Continent IN (\n     SELECT Continent\n     FROM country\n     GROUP BY Continent\n     HAVING AVG(LifeExpectancy) < 72\n )\n JOIN city ON country.Code = city.CountryCode\n GROUP BY Continent;"}
{"db_id": "world_1", "query": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "query_toks": ["SELECT", "Name", ",", "SurfaceArea", "FROM", "country", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "5"], "query_toks_no_value": ["select", "name", ",", "surfacearea", "from", "country", "order", "by", "surfacearea", "desc", "limit", "value"], "question": "What are the names and areas of countries with the top 5 largest area?", "question_toks": ["What", "are", "the", "names", "and", "areas", "of", "countries", "with", "the", "top", "5", "largest", "area", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 5, "intersect": null, "union": null, "except": null}, "id": "800", "answer_text": [["Russian Federation", 17075400.0], ["Antarctica", 13120000.0], ["Canada", 9970610.0], ["China", 9572900.0], ["United States", 9363520.0]], "trigger_words": ["Name", "Surface Area"], "Prediction": "Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;"}
{"db_id": "world_1", "query": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "query_toks": ["SELECT", "Name", ",", "SurfaceArea", "FROM", "country", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "5"], "query_toks_no_value": ["select", "name", ",", "surfacearea", "from", "country", "order", "by", "surfacearea", "desc", "limit", "value"], "question": "Return the names and surface areas of the 5 largest countries.", "question_toks": ["Return", "the", "names", "and", "surface", "areas", "of", "the", "5", "largest", "countries", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 5, "intersect": null, "union": null, "except": null}, "id": "801", "answer_text": [["Russian Federation", 17075400.0], ["Antarctica", 13120000.0], ["Canada", 9970610.0], ["China", 9572900.0], ["United States", 9363520.0]], "trigger_words": ["Name", "Surface Area"], "Prediction": "Name, SurfaceArea\n FROM country\n ORDER BY SurfaceArea DESC\n LIMIT 5;"}
{"db_id": "world_1", "query": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3", "query_toks": ["SELECT", "Name", "FROM", "country", "ORDER", "BY", "Population", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "name", "from", "country", "order", "by", "population", "desc", "limit", "value"], "question": "What are names of countries with the top 3 largest population?", "question_toks": ["What", "are", "names", "of", "countries", "with", "the", "top", "3", "largest", "population", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 14, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}, "id": "802", "answer_text": [["China"], ["India"], ["United States"]], "trigger_words": ["Name"], "Prediction": "Name FROM country ORDER BY Population DESC LIMIT 3;"}
{"db_id": "world_1", "query": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3", "query_toks": ["SELECT", "Name", "FROM", "country", "ORDER", "BY", "Population", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "name", "from", "country", "order", "by", "population", "desc", "limit", "value"], "question": "Return the names of the 3 most populated countries.", "question_toks": ["Return", "the", "names", "of", "the", "3", "most", "populated", "countries", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 14, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}, "id": "803", "answer_text": [["China"], ["India"], ["United States"]], "trigger_words": ["Name"], "Prediction": "Name FROM country ORDER BY Population DESC LIMIT 3;"}
{"db_id": "world_1", "query": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3", "query_toks": ["SELECT", "Name", "FROM", "country", "ORDER", "BY", "Population", "ASC", "LIMIT", "3"], "query_toks_no_value": ["select", "name", "from", "country", "order", "by", "population", "asc", "limit", "value"], "question": "What are the names of the nations with the 3 lowest populations?", "question_toks": ["What", "are", "the", "names", "of", "the", "nations", "with", "the", "3", "lowest", "populations", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 14, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}, "id": "804", "answer_text": [["Antarctica"], ["French Southern territories"], ["Bouvet Island"]], "trigger_words": ["Name"], "Prediction": "Name FROM country ORDER BY Population ASC LIMIT 3;"}
{"db_id": "world_1", "query": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3", "query_toks": ["SELECT", "Name", "FROM", "country", "ORDER", "BY", "Population", "ASC", "LIMIT", "3"], "query_toks_no_value": ["select", "name", "from", "country", "order", "by", "population", "asc", "limit", "value"], "question": "Return the names of the 3 countries with the fewest people.", "question_toks": ["Return", "the", "names", "of", "the", "3", "countries", "with", "the", "fewest", "people", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 14, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}, "id": "805", "answer_text": [["Antarctica"], ["French Southern territories"], ["Bouvet Island"]], "trigger_words": ["Name"], "Prediction": "Name FROM country ORDER BY Population ASC LIMIT 3;"}
{"db_id": "world_1", "query": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "country", "WHERE", "continent", "=", "``", "Asia", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "country", "where", "continent", "=", "value"], "question": "how many countries are in Asia?", "question_toks": ["how", "many", "countries", "are", "in", "Asia", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "806", "answer_text": [[51]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM country WHERE Continent = 'Asia';"}
{"db_id": "world_1", "query": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "country", "WHERE", "continent", "=", "``", "Asia", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "country", "where", "continent", "=", "value"], "question": "Count the number of countries in Asia.", "question_toks": ["Count", "the", "number", "of", "countries", "in", "Asia", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "807", "answer_text": [[51]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM country WHERE Continent = 'Asia';"}
{"db_id": "world_1", "query": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "continent", "=", "``", "Europe", "''", "AND", "Population", "=", "``", "80000", "''"], "query_toks_no_value": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", "=", "value"], "question": "What are the names of the countries that are in the continent of Europe and have a population of 80000?", "question_toks": ["What", "are", "the", "names", "of", "the", "countries", "that", "are", "in", "the", "continent", "of", "Europe", "and", "have", "a", "population", "of", "80000", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Europe\"", null], "and", [false, 2, [0, [0, 14, false], null], "\"80000\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "808", "answer_text": [], "trigger_words": ["Name"], "Prediction": "Name FROM country WHERE Continent = 'Europe' AND Population = 80000;"}
{"db_id": "world_1", "query": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "continent", "=", "``", "Europe", "''", "AND", "Population", "=", "``", "80000", "''"], "query_toks_no_value": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", "=", "value"], "question": "Give the names of countries that are in Europe and have a population equal to 80000.", "question_toks": ["Give", "the", "names", "of", "countries", "that", "are", "in", "Europe", "and", "have", "a", "population", "equal", "to", "80000", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Europe\"", null], "and", [false, 2, [0, [0, 14, false], null], "\"80000\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "809", "answer_text": [], "trigger_words": ["Name"], "Prediction": "Name FROM country WHERE Continent = 'Europe' AND Population = 80000;"}
{"db_id": "world_1", "query": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000", "query_toks": ["select", "sum", "(", "population", ")", ",", "avg", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "\"north america\"", "and", "surfacearea", ">", "3000"], "query_toks_no_value": ["select", "sum", "(", "population", ")", ",", "avg", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", "and", "surfacearea", ">", "value"], "question": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?", "question_toks": ["What", "is", "the", "total", "population", "and", "average", "area", "of", "countries", "in", "the", "continent", "of", "North", "America", "whose", "area", "is", "bigger", "than", "3000", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [5, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"north america\"", null], "and", [false, 3, [0, [0, 12, false], null], 3000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "810", "answer_text": [[null, null]], "trigger_words": ["Total Number", "Average Number"], "Prediction": "SUM(Population), AVG(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000;"}
{"db_id": "world_1", "query": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000", "query_toks": ["select", "sum", "(", "population", ")", ",", "avg", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "\"north america\"", "and", "surfacearea", ">", "3000"], "query_toks_no_value": ["select", "sum", "(", "population", ")", ",", "avg", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", "and", "surfacearea", ">", "value"], "question": "Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 .", "question_toks": ["Give", "the", "total", "population", "and", "average", "surface", "area", "corresponding", "to", "countries", "in", "North", "America", "that", "have", "a", "surface", "area", "greater", "than", "3000", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [5, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"north america\"", null], "and", [false, 3, [0, [0, 12, false], null], 3000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "811", "answer_text": [[null, null]], "trigger_words": ["Total Number", "Average Number"], "Prediction": "SUM(Population), AVG(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000;"}
{"db_id": "world_1", "query": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000", "query_toks": ["SELECT", "name", "FROM", "city", "WHERE", "Population", "BETWEEN", "160000", "AND", "900000"], "query_toks_no_value": ["select", "name", "from", "city", "where", "population", "between", "value", "and", "value"], "question": "What are the cities whose population is between 160000 and 900000?", "question_toks": ["What", "are", "the", "cities", "whose", "population", "is", "between", "160000", "and", "900000", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 1, [0, [0, 5, false], null], 160000.0, 900000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "812", "answer_text": [["Qandahar"], ["Herat"], ["Amsterdam"], ["Rotterdam"], ["Haag"], ["Utrecht"], ["Eindhoven"], ["Tilburg"], ["Groningen"], ["Breda"], ["Tirana"], ["Oran"], ["Constantine"], ["Annaba"], ["Batna"], ["S\u00e9tif"], ["Huambo"], ["Dubai"], ["Abu Dhabi"], ["Sharja"], ["al-Ayn"], ["Lomas de Zamora"], ["Quilmes"], ["Almirante Brown"], ["La Plata"], ["Mar del Plata"], ["San Miguel de Tucum\u00e1n"], ["Lan\u00fas"], ["Merlo"], ["General San Mart\u00edn"], ["Salta"], ["Moreno"], ["Santa F\u00e9"], ["Avellaneda"], ["Tres de Febrero"], ["Mor\u00f3n"], ["Florencio Varela"], ["San Isidro"], ["Tigre"], ["Malvinas Argentinas"], ["Vicente L\u00f3pez"], ["Berazategui"], ["Corrientes"], ["San Miguel"], ["Bah\u00eda Blanca"], ["Esteban Echeverr\u00eda"], ["Resistencia"], ["Jos\u00e9 C. Paz"], ["Paran\u00e1"], ["Godoy Cruz"], ["Posadas"], ["Guaymall\u00e9n"], ["Santiago del Estero"], ["San Salvador de Jujuy"], ["Hurlingham"], ["Neuqu\u00e9n"], ["Gjumri"], ["Vanadzor"], ["Canberra"], ["Gold Coast"], ["Newcastle"], ["Central Coast"], ["Wollongong"], ["G\u00e4nc\u00e4"], ["Sumqayit"], ["Nassau"], ["Khulna"], ["Rajshahi"], ["Narayanganj"], ["Rangpur"], ["Mymensingh"], ["Barisal"], ["Tungi"], ["Antwerpen"], ["Gent"], ["Charleroi"], ["Li\u00e8ge"], ["Cotonou"], ["Porto-Novo"], ["La Paz"], ["El Alto"], ["Cochabamba"], ["Oruro"], ["Sucre"], ["Sarajevo"], ["Gaborone"], ["S\u00e3o Gon\u00e7alo"], ["Nova Igua\u00e7u"], ["S\u00e3o Lu\u00eds"], ["Macei\u00f3"], ["Duque de Caxias"], ["S\u00e3o Bernardo do Campo"], ["Teresina"], ["Natal"], ["Osasco"], ["Campo Grande"], ["Santo Andr\u00e9"], ["Jo\u00e3o Pessoa"], ["Jaboat\u00e3o dos Guararapes"], ["Contagem"], ["S\u00e3o Jos\u00e9 dos Campos"], ["Uberl\u00e2ndia"], ["Feira de Santana"], ["Ribeir\u00e3o Preto"], ["Sorocaba"], ["Niter\u00f3i"], ["Cuiab\u00e1"], ["Juiz de Fora"], ["Aracaju"], ["S\u00e3o Jo\u00e3o de Meriti"], ["Londrina"], ["Joinville"], ["Belford Roxo"], ["Santos"], ["Ananindeua"], ["Campos dos Goytacazes"], ["Mau\u00e1"], ["Carapicu\u00edba"], ["Olinda"], ["Campina Grande"], ["S\u00e3o Jos\u00e9 do Rio Preto"], ["Caxias do Sul"], ["Moji das Cruzes"], ["Diadema"], ["Aparecida de Goi\u00e2nia"], ["Piracicaba"], ["Cariacica"], ["Vila Velha"], ["Pelotas"], ["Bauru"], ["Porto Velho"], ["Serra"], ["Betim"], ["Jund\u00eda\u00ed"], ["Canoas"], ["Franca"], ["S\u00e3o Vicente"], ["Maring\u00e1"], ["Montes Claros"], ["An\u00e1polis"], ["Florian\u00f3polis"], ["Petr\u00f3polis"], ["Itaquaquecetuba"], ["Vit\u00f3ria"], ["Ponta Grossa"], ["Rio Branco"], ["Foz do Igua\u00e7u"], ["Macap\u00e1"], ["Ilh\u00e9us"], ["Vit\u00f3ria da Conquista"], ["Uberaba"], ["Paulista"], ["Limeira"], ["Blumenau"], ["Caruaru"], ["Santar\u00e9m"], ["Volta Redonda"], ["Novo Hamburgo"], ["Caucaia"], ["Santa Maria"], ["Cascavel"], ["Guaruj\u00e1"], ["Ribeir\u00e3o das Neves"], ["Governador Valadares"], ["Taubat\u00e9"], ["Imperatriz"], ["Gravata\u00ed"], ["Embu"], ["Mossor\u00f3"], ["V\u00e1rzea Grande"], ["Petrolina"], ["Barueri"], ["Viam\u00e3o"], ["Ipatinga"], ["Juazeiro"], ["Juazeiro do Norte"], ["Tabo\u00e3o da Serra"], ["S\u00e3o Jos\u00e9 dos Pinhais"], ["Mag\u00e9"], ["Suzano"], ["S\u00e3o Leopoldo"], ["Mar\u00edlia"], ["S\u00e3o Carlos"], ["Sumar\u00e9"], ["Presidente Prudente"], ["Divin\u00f3polis"], ["Sete Lagoas"], ["Rio Grande"], ["Itabuna"], ["Jequi\u00e9"], ["Arapiraca"], ["Colombo"], ["Americana"], ["Alvorada"], ["Araraquara"], ["Itabora\u00ed"], ["Santa B\u00e1rbara d\u00b4Oeste"], ["Nova Friburgo"], ["Jacare\u00ed"], ["Ara\u00e7atuba"], ["Barra Mansa"], ["Praia Grande"], ["Marab\u00e1"], ["Crici\u00fama"], ["Boa Vista"], ["Passo Fundo"], ["Dourados"], ["Santa Luzia"], ["Rio Claro"], ["Maracana\u00fa"], ["Guarapuava"], ["Glasgow"], ["Liverpool"], ["Edinburgh"], ["Sheffield"], ["Manchester"], ["Leeds"], ["Bristol"], ["Cardiff"], ["Coventry"], ["Leicester"], ["Bradford"], ["Belfast"], ["Nottingham"], ["Kingston upon Hull"], ["Plymouth"], ["Stoke-on-Trent"], ["Wolverhampton"], ["Derby"], ["Swansea"], ["Southampton"], ["Aberdeen"], ["Northampton"], ["Dudley"], ["Portsmouth"], ["Newcastle upon Tyne"], ["Sunderland"], ["Luton"], ["Swindon"], ["Southend-on-Sea"], ["Walsall"], ["Bournemouth"], ["Plovdiv"], ["Varna"], ["Burgas"], ["Ruse"], ["Ouagadougou"], ["Bobo-Dioulasso"], ["Bujumbura"], ["Puente Alto"], ["Vi\u00f1a del Mar"], ["Valpara\u00edso"], ["Talcahuano"], ["Antofagasta"], ["San Bernardo"], ["Temuco"], ["Concepci\u00f3n"], ["Rancagua"], ["Arica"], ["Talca"], ["Chill\u00e1n"], ["Iquique"], ["San Jos\u00e9"], ["Djibouti"], ["Santiago de los Caballeros"], ["Cuenca"], ["Machala"], ["Santo Domingo de los Colorados"], ["Portoviejo"], ["Ambato"], ["Manta"], ["Shubra al-Khayma"], ["Port Said"], ["Suez"], ["al-Mahallat al-Kubra"], ["Tanta"], ["al-Mansura"], ["Luxor"], ["Asyut"], ["Bahtim"], ["Zagazig"], ["al-Faiyum"], ["Ismailia"], ["Kafr al-Dawwar"], ["Assuan"], ["Damanhur"], ["al-Minya"], ["Bani Suwayf"], ["Qina"], ["Sawhaj"], ["San Salvador"], ["Asmara"], ["Valencia"], ["Sevilla"], ["Zaragoza"], ["M\u00e1laga"], ["Bilbao"], ["Las Palmas de Gran Canaria"], ["Murcia"], ["Palma de Mallorca"], ["Valladolid"], ["C\u00f3rdoba"], ["Vigo"], ["Alicante [Alacant]"], ["Gij\u00f3n"], ["L\u00b4Hospitalet de Llobregat"], ["Granada"], ["A Coru\u00f1a (La Coru\u00f1a)"], ["Vitoria-Gasteiz"], ["Santa Cruz de Tenerife"], ["Badalona"], ["Oviedo"], ["M\u00f3stoles"], ["Elche [Elx]"], ["Sabadell"], ["Santander"], ["Jerez de la Frontera"], ["Pamplona [Iru\u00f1a]"], ["Donostia-San Sebasti\u00e1n"], ["Cartagena"], ["Legan\u00e9s"], ["Fuenlabrada"], ["Almer\u00eda"], ["Terrassa"], ["Alcal\u00e1 de Henares"], ["Burgos"], ["Johannesburg"], ["Port Elizabeth"], ["Pretoria"], ["Inanda"], ["Durban"], ["Vanderbijlpark"], ["Kempton Park"], ["Alberton"], ["Pinetown"], ["Pietermaritzburg"], ["Benoni"], ["Randburg"], ["Umlazi"], ["Bloemfontein"], ["Vereeniging"], ["Wonderboom"], ["Roodepoort"], ["Boksburg"], ["Klerksdorp"], ["Soshanguve"], ["Newcastle"], ["East London"], ["Welkom"], ["Kimberley"], ["Uitenhage"], ["Chatsworth"], ["Mdantsane"], ["Krugersdorp"], ["Botshabelo"], ["Brakpan"], ["Witbank"], ["Oberholzer"], ["Germiston"], ["Springs"], ["Dire Dawa"], ["Cebu"], ["Zamboanga"], ["Pasig"], ["Valenzuela"], ["Las Pi\u00f1as"], ["Antipolo"], ["Taguig"], ["Cagayan de Oro"], ["Para\u00f1aque"], ["Makati"], ["Bacolod"], ["General Santos"], ["Marikina"], ["Dasmari\u00f1as"], ["Muntinlupa"], ["Iloilo"], ["Pasay"], ["Malabon"], ["San Jos\u00e9 del Monte"], ["Bacoor"], ["Iligan"], ["Calamba"], ["Mandaluyong"], ["Butuan"], ["Angeles"], ["Tarlac"], ["Mandaue"], ["Baguio"], ["Batangas"], ["Cainta"], ["San Pedro"], ["Navotas"], ["Cabanatuan"], ["San Fernando"], ["Lipa"], ["Lapu-Lapu"], ["San Pablo"], ["Bi\u00f1an"], ["Taytay"], ["Lucena"], ["Imus"], ["Olongapo"], ["Binangonan"], ["Santa Rosa"], ["Tagum"], ["Tacloban"], ["Malolos"], ["Mabalacat"], ["Cotabato"], ["Meycauayan"], ["Puerto Princesa"], ["Libreville"], ["Kutaisi"], ["Kumasi"], ["Ciudad de Guatemala"], ["Mixco"], ["Bissau"], ["Georgetown"], ["Port-au-Prince"], ["Carrefour"], ["Delmas"], ["Tegucigalpa"], ["San Pedro Sula"], ["Malang"], ["Bandar Lampung"], ["Bekasi"], ["Padang"], ["Surakarta"], ["Banjarmasin"], ["Pekan Baru"], ["Denpasar"], ["Yogyakarta"], ["Pontianak"], ["Samarinda"], ["Jambi"], ["Depok"], ["Cimahi"], ["Balikpapan"], ["Manado"], ["Mataram"], ["Pekalongan"], ["Tegal"], ["Bogor"], ["Ciputat"], ["Pondokgede"], ["Cirebon"], ["Kediri"], ["Ambon"], ["Jember"], ["Cilacap"], ["Cimanggis"], ["Pematang Siantar"], ["Purwokerto"], ["Ciomas"], ["Tasikmalaya"], ["Madiun"], ["Srinagar"], ["Agra"], ["Coimbatore"], ["Thane (Thana)"], ["Allahabad"], ["Meerut"], ["Vishakhapatnam"], ["Jabalpur"], ["Amritsar"], ["Faridabad"], ["Vijayawada"], ["Gwalior"], ["Jodhpur"], ["Nashik (Nasik)"], ["Hubli-Dharwad"], ["Solapur (Sholapur)"], ["Ranchi"], ["Bareilly"], ["Guwahati (Gauhati)"], ["Shambajinagar (Aurangabad)"], ["Cochin (Kochi)"], ["Rajkot"], ["Kota"], ["Thiruvananthapuram (Trivandrum"], ["Pimpri-Chinchwad"], ["Jalandhar (Jullundur)"], ["Gorakhpur"], ["Chandigarh"], ["Mysore"], ["Aligarh"], ["Guntur"], ["Jamshedpur"], ["Ghaziabad"], ["Warangal"], ["Raipur"], ["Moradabad"], ["Durgapur"], ["Amravati"], ["Calicut (Kozhikode)"], ["Bikaner"], ["Bhubaneswar"], ["Kolhapur"], ["Kataka (Cuttack)"], ["Ajmer"], ["Bhavnagar"], ["Tiruchirapalli"], ["Bhilai"], ["Bhiwandi"], ["Saharanpur"], ["Ulhasnagar"], ["Salem"], ["Ujjain"], ["Malegaon"], ["Jamnagar"], ["Bokaro Steel City"], ["Akola"], ["Belgaum"], ["Rajahmundry"], ["Nellore"], ["Udaipur"], ["New Bombay"], ["Bhatpara"], ["Gulbarga"], ["New Delhi"], ["Jhansi"], ["Gaya"], ["Kakinada"], ["Dhule (Dhulia)"], ["Panihati"], ["Nanded (Nander)"], ["Mangalore"], ["Dehra Dun"], ["Kamarhati"], ["Davangere"], ["Asansol"], ["Bhagalpur"], ["Bellary"], ["Barddhaman (Burdwan)"], ["Rampur"], ["Jalgaon"], ["Muzaffarpur"], ["Nizamabad"], ["Muzaffarnagar"], ["Patiala"], ["Shahjahanpur"], ["Kurnool"], ["Tiruppur (Tirupper)"], ["Rohtak"], ["South Dum Dum"], ["Mathura"], ["Chandrapur"], ["Barahanagar (Baranagar)"], ["Darbhanga"], ["Siliguri (Shiliguri)"], ["Raurkela"], ["Ambattur"], ["Panipat"], ["Firozabad"], ["Ichalkaranji"], ["Jammu"], ["Ramagundam"], ["Eluru"], ["Brahmapur"], ["Alwar"], ["Pondicherry"], ["Thanjavur"], ["Bihar Sharif"], ["Tuticorin"], ["Imphal"], ["Latur"], ["Sagar"], ["Farrukhabad-cum-Fatehgarh"], ["Sangli"], ["Parbhani"], ["Nagar Coil"], ["Bijapur"], ["Kukatpalle"], ["Bally"], ["Bhilwara"], ["Ratlam"], ["Avadi"], ["Dindigul"], ["Ahmadnagar"], ["Bilaspur"], ["Shimoga"], ["Kharagpur"], ["Mira Bhayandar"], ["Vellore"], ["Jalna"], ["Burnpur"], ["Anantapur"], ["Allappuzha (Alleppey)"], ["Tirupati"], ["Karnal"], ["Burhanpur"], ["Hisar (Hissar)"], ["Tiruvottiyur"], ["Mirzapur-cum-Vindhyachal"], ["Secunderabad"], ["Nadiad"], ["Dewas"], ["Murwara (Katni)"], ["Ganganagar"], ["Vizianagaram"], ["Mosul"], ["Irbil"], ["Kirkuk"], ["Basra"], ["al-Sulaymaniya"], ["al-Najaf"], ["Karbala"], ["al-Hilla"], ["al-Nasiriya"], ["al-Amara"], ["al-Diwaniya"], ["al-Ramadi"], ["al-Kut"], ["Ahvaz"], ["Qom"], ["Kermanshah"], ["Urmia"], ["Zahedan"], ["Rasht"], ["Hamadan"], ["Kerman"], ["Arak"], ["Ardebil"], ["Yazd"], ["Qazvin"], ["Zanjan"], ["Sanandaj"], ["Bandar-e-Abbas"], ["Khorramabad"], ["Eslamshahr"], ["Borujerd"], ["Abadan"], ["Dezful"], ["Kashan"], ["Sari"], ["Gorgan"], ["Najafabad"], ["Sabzevar"], ["Khomeynishahr"], ["Dublin"], ["Jerusalem"], ["Tel Aviv-Jaffa"], ["Haifa"], ["Rishon Le Ziyyon"], ["Beerseba"], ["Holon"], ["Palermo"], ["Genova"], ["Bologna"], ["Firenze"], ["Catania"], ["Bari"], ["Venezia"], ["Messina"], ["Verona"], ["Trieste"], ["Padova"], ["Taranto"], ["Brescia"], ["Reggio di Calabria"], ["Modena"], ["Prato"], ["Parma"], ["Cagliari"], ["Livorno"], ["Graz"], ["Linz"], ["Chiba"], ["Sakai"], ["Kumamoto"], ["Okayama"], ["Sagamihara"], ["Hamamatsu"], ["Kagoshima"], ["Funabashi"], ["Higashiosaka"], ["Hachioji"], ["Niigata"], ["Amagasaki"], ["Himeji"], ["Shizuoka"], ["Urawa"], ["Matsuyama"], ["Matsudo"], ["Kanazawa"], ["Kawaguchi"], ["Ichikawa"], ["Omiya"], ["Utsunomiya"], ["Oita"], ["Nagasaki"], ["Yokosuka"], ["Kurashiki"], ["Gifu"], ["Hirakata"], ["Nishinomiya"], ["Toyonaka"], ["Wakayama"], ["Fukuyama"], ["Fujisawa"], ["Asahikawa"], ["Machida"], ["Nara"], ["Takatsuki"], ["Iwaki"], ["Nagano"], ["Toyohashi"], ["Toyota"], ["Suita"], ["Takamatsu"], ["Koriyama"], ["Okazaki"], ["Kawagoe"], ["Tokorozawa"], ["Toyama"], ["Kochi"], ["Kashiwa"], ["Akita"], ["Miyazaki"], ["Koshigaya"], ["Naha"], ["Aomori"], ["Hakodate"], ["Akashi"], ["Yokkaichi"], ["Fukushima"], ["Morioka"], ["Maebashi"], ["Kasugai"], ["Otsu"], ["Ichihara"], ["Yao"], ["Ichinomiya"], ["Tokushima"], ["Kakogawa"], ["Ibaraki"], ["Neyagawa"], ["Shimonoseki"], ["Yamagata"], ["Fukui"], ["Hiratsuka"], ["Mito"], ["Sasebo"], ["Hachinohe"], ["Takasaki"], ["Shimizu"], ["Kurume"], ["Fuji"], ["Soka"], ["Fuchu"], ["Chigasaki"], ["Atsugi"], ["Numazu"], ["Ageo"], ["Yamato"], ["Matsumoto"], ["Kure"], ["Takarazuka"], ["Kasukabe"], ["Chofu"], ["Odawara"], ["Kofu"], ["Kushiro"], ["Kishiwada"], ["Hitachi"], ["Nagaoka"], ["Itami"], ["Uji"], ["Suzuka"], ["Hirosaki"], ["Ube"], ["Kodaira"], ["Takaoka"], ["Obihiro"], ["Tomakomai"], ["Saga"], ["Sakura"], ["Kamakura"], ["Mitaka"], ["Izumi"], ["Hino"], ["Hadano"], ["Ashikaga"], ["Tsu"], ["Sayama"], ["Yachiyo"], ["Tsukuba"], ["Sanaa"], ["Aden"], ["Taizz"], ["Hodeida"], ["al-Zarqa"], ["Irbid"], ["Novi Sad"], ["Ni\u0161"], ["Phnom Penh"], ["Garoua"], ["Calgary"], ["Toronto"], ["North York"], ["Winnipeg"], ["Edmonton"], ["Mississauga"], ["Scarborough"], ["Vancouver"], ["Etobicoke"], ["London"], ["Hamilton"], ["Ottawa"], ["Laval"], ["Surrey"], ["Brampton"], ["Windsor"], ["Saskatoon"], ["Kitchener"], ["Markham"], ["Regina"], ["Burnaby"], ["Qu\u00e9bec"], ["Qaraghandy"], ["Shymkent"], ["Taraz"], ["Astana"], ["\u00d6skemen"], ["Pavlodar"], ["Semey"], ["Aqt\u00f6be"], ["Qostanay"], ["Petropavl"], ["Oral"], ["Temirtau"], ["Mombasa"], ["Kisumu"], ["Nakuru"], ["Bangui"], ["Handan"], ["Wuxi"], ["Xuzhou"], ["Datong"], ["Yichun"], ["Benxi"], ["Luoyang"], ["Suzhou"], ["Xining"], ["Huainan"], ["Jixi"], ["Daqing"], ["Fuxin"], ["Amoy [Xiamen]"], ["Liuzhou"], ["Shantou"], ["Jinzhou"], ["Mudanjiang"], ["Yinchuan"], ["Changzhou"], ["Zhangjiakou"], ["Dandong"], ["Hegang"], ["Kaifeng"], ["Jiamusi"], ["Liaoyang"], ["Hengyang"], ["Baoding"], ["Hunjiang"], ["Xinxiang"], ["Huangshi"], ["Haikou"], ["Yantai"], ["Bengbu"], ["Xiangtan"], ["Weifang"], ["Wuhu"], ["Pingxiang"], ["Yingkou"], ["Anyang"], ["Panzhihua"], ["Pingdingshan"], ["Xiangfan"], ["Zhuzhou"], ["Jiaozuo"], ["Wenzhou"], ["Zhangjiang"], ["Zigong"], ["Shuangyashan"], ["Zaozhuang"], ["Yakeshi"], ["Yichang"], ["Zhenjiang"], ["Huaibei"], ["Qinhuangdao"], ["Guilin"], ["Liupanshui"], ["Panjin"], ["Yangquan"], ["Jinxi"], ["Liaoyuan"], ["Lianyungang"], ["Xianyang"], ["Tai\u00b4an"], ["Chifeng"], ["Shaoguan"], ["Nantong"], ["Leshan"], ["Baoji"], ["Linyi"], ["Tonghua"], ["Siping"], ["Changzhi"], ["Tengzhou"], ["Chaozhou"], ["Yangzhou"], ["Dongwan"], ["Ma\u00b4anshan"], ["Foshan"], ["Yueyang"], ["Xingtai"], ["Changde"], ["Shihezi"], ["Yancheng"], ["Jiujiang"], ["Dongying"], ["Shashi"], ["Xintai"], ["Jingdezhen"], ["Tongchuan"], ["Zhongshan"], ["Shiyan"], ["Tieli"], ["Jining"], ["Wuhai"], ["Mianyang"], ["Luzhou"], ["Zunyi"], ["Shizuishan"], ["Neijiang"], ["Tongliao"], ["Tieling"], ["Wafangdian"], ["Anqing"], ["Shaoyang"], ["Laiwu"], ["Chengde"], ["Tianshui"], ["Nanyang"], ["Cangzhou"], ["Yibin"], ["Huaiyin"], ["Dunhua"], ["Yanji"], ["Jiangmen"], ["Tongling"], ["Suihua"], ["Gongziling"], ["Xiantao"], ["Chaoyang"], ["Ganzhou"], ["Huzhou"], ["Baicheng"], ["Shangzi"], ["Yangjiang"], ["Qitaihe"], ["Gejiu"], ["Jiangyin"], ["Hebi"], ["Jiaxing"], ["Wuzhou"], ["Meihekou"], ["Xuchang"], ["Liaocheng"], ["Haicheng"], ["Qianjiang"], ["Baiyin"], ["Bei\u00b4an"], ["Yixing"], ["Laizhou"], ["Qaramay"], ["Acheng"], ["Dezhou"], ["Nanping"], ["Zhaoqing"], ["Beipiao"], ["Fengcheng"], ["Fuyu"], ["Xinyang"], ["Dongtai"], ["Yuci"], ["Honghu"], ["Ezhou"], ["Heze"], ["Daxian"], ["Linfen"], ["Tianmen"], ["Yiyang"], ["Quanzhou"], ["Rizhao"], ["Deyang"], ["Guangyuan"], ["Changshu"], ["Zhangzhou"], ["Hailar"], ["Nanchong"], ["Jiutai"], ["Zhaodong"], ["Shaoxing"], ["Fuyang"], ["Maoming"], ["Qujing"], ["Ghulja"], ["Jiaohe"], ["Puyang"], ["Huadian"], ["Jiangyou"], ["Qashqar"], ["Anshun"], ["Fuling"], ["Xinyu"], ["Hanzhong"], ["Danyang"], ["Chenzhou"], ["Xiaogan"], ["Shangqiu"], ["Zhuhai"], ["Qingyuan"], ["Aqsu"], ["Jining"], ["Xiaoshan"], ["Zaoyang"], ["Xinghua"], ["Hami"], ["Huizhou"], ["Jinmen"], ["Sanming"], ["Bishkek"], ["Osh"], ["Cartagena"], ["C\u00facuta"], ["Bucaramanga"], ["Ibagu\u00e9"], ["Pereira"], ["Santa Marta"], ["Manizales"], ["Bello"], ["Pasto"], ["Neiva"], ["Soledad"], ["Armenia"], ["Villavicencio"], ["Soacha"], ["Valledupar"], ["Monter\u00eda"], ["Itag\u00fc\u00ed"], ["Palmira"], ["Buenaventura"], ["Floridablanca"], ["Sincelejo"], ["Popay\u00e1n"], ["Barrancabermeja"], ["Pointe-Noire"], ["Lubumbashi"], ["Mbuji-Mayi"], ["Kolwezi"], ["Kisangani"], ["Kananga"], ["Likasi"], ["Bukavu"], ["Kikwit"], ["Tshikapa"], ["Matadi"], ["Mbandaka"], ["Hamhung"], ["Chongjin"], ["Nampo"], ["Sinuiju"], ["Wonsan"], ["Phyongsong"], ["Sariwon"], ["Haeju"], ["Kanggye"], ["Kimchaek"], ["Hyesan"], ["Kaesong"], ["Songnam"], ["Puchon"], ["Suwon"], ["Anyang"], ["Chonju"], ["Chongju"], ["Koyang"], ["Ansan"], ["Pohang"], ["Chang-won"], ["Masan"], ["Kwangmyong"], ["Chonan"], ["Chinju"], ["Iksan"], ["Pyongtaek"], ["Kumi"], ["Uijongbu"], ["Kyongju"], ["Kunsan"], ["Cheju"], ["Kimhae"], ["Sunchon"], ["Mokpo"], ["Yong-in"], ["Wonju"], ["Kunpo"], ["Chunchon"], ["Namyangju"], ["Kangnung"], ["Chungju"], ["Andong"], ["Yosu"], ["Kyongsan"], ["Paju"], ["Yangsan"], ["Athenai"], ["Thessaloniki"], ["Pireus"], ["Zagreb"], ["Split"], ["Rijeka"], ["Santiago de Cuba"], ["Camag\u00fcey"], ["Holgu\u00edn"], ["Santa Clara"], ["Guant\u00e1namo"], ["Nicosia"], ["Vientiane"], ["Riga"], ["Maseru"], ["Tripoli"], ["Monrovia"], ["Bengasi"], ["Vilnius"], ["Kaunas"], ["Klaipeda"], ["El-Aai\u00fan"], ["Macao"], ["Antananarivo"], ["Skopje"], ["Blantyre"], ["Lilongwe"], ["Ipoh"], ["Johor Baharu"], ["Petaling Jaya"], ["Kelang"], ["Kuala Terengganu"], ["Pinang"], ["Kota Bharu"], ["Kuantan"], ["Taiping"], ["Seremban"], ["Bamako"], ["Rabat"], ["Marrakech"], ["F\u00e8s"], ["Tanger"], ["Sal\u00e9"], ["Mekn\u00e8s"], ["Oujda"], ["K\u00e9nitra"], ["T\u00e9touan"], ["Safi"], ["Nouakchott"], ["Naucalpan de Ju\u00e1rez"], ["Mexicali"], ["Culiac\u00e1n"], ["Acapulco de Ju\u00e1rez"], ["Tlalnepantla de Baz"], ["M\u00e9rida"], ["Chihuahua"], ["San Luis Potos\u00ed"], ["Guadalupe"], ["Toluca"], ["Aguascalientes"], ["Quer\u00e9taro"], ["Morelia"], ["Hermosillo"], ["Saltillo"], ["Torre\u00f3n"], ["Centro (Villahermosa)"], ["San Nicol\u00e1s de los Garza"], ["Durango"], ["Chimalhuac\u00e1n"], ["Tlaquepaque"], ["Atizap\u00e1n de Zaragoza"], ["Veracruz"], ["Cuautitl\u00e1n Izcalli"], ["Irapuato"], ["Tuxtla Guti\u00e9rrez"], ["Tultitl\u00e1n"], ["Reynosa"], ["Benito Ju\u00e1rez"], ["Matamoros"], ["Xalapa"], ["Celaya"], ["Mazatl\u00e1n"], ["Ensenada"], ["Ahome"], ["Cajeme"], ["Cuernavaca"], ["Tonal\u00e1"], ["Valle de Chalco Solidaridad"], ["Nuevo Laredo"], ["Tepic"], ["Tampico"], ["Ixtapaluca"], ["Apodaca"], ["Guasave"], ["G\u00f3mez Palacio"], ["Tapachula"], ["Nicol\u00e1s Romero"], ["Coatzacoalcos"], ["Uruapan"], ["Victoria"], ["Oaxaca de Ju\u00e1rez"], ["Coacalco de Berrioz\u00e1bal"], ["Pachuca de Soto"], ["General Escobedo"], ["Salamanca"], ["Santa Catarina"], ["Tehuac\u00e1n"], ["Chalco"], ["C\u00e1rdenas"], ["Campeche"], ["La Paz"], ["Oth\u00f3n P. Blanco (Chetumal)"], ["Texcoco"], ["La Paz"], ["Metepec"], ["Monclova"], ["Huixquilucan"], ["Chilpancingo de los Bravo"], ["Puerto Vallarta"], ["Fresnillo"], ["Ciudad Madero"], ["Soledad de Graciano S\u00e1nchez"], ["San Juan del R\u00edo"], ["San Felipe del Progreso"], ["C\u00f3rdoba"], ["Tec\u00e1mac"], ["Ocosingo"], ["Carmen"], ["L\u00e1zaro C\u00e1rdenas"], ["Jiutepec"], ["Papantla"], ["Comalcalco"], ["Zamora"], ["Chisinau"], ["Tiraspol"], ["Ulan Bator"], ["Matola"], ["Beira"], ["Nampula"], ["Chimoio"], ["Mandalay"], ["Moulmein (Mawlamyine)"], ["Pegu (Bago)"], ["Bassein (Pathein)"], ["Windhoek"], ["Kathmandu"], ["Niamey"], ["Ogbomosho"], ["Kano"], ["Oshogbo"], ["Ilorin"], ["Abeokuta"], ["Port Harcourt"], ["Zaria"], ["Ilesha"], ["Onitsha"], ["Iwo"], ["Ado-Ekiti"], ["Abuja"], ["Kaduna"], ["Mushin"], ["Maiduguri"], ["Enugu"], ["Ede"], ["Aba"], ["Ife"], ["Ila"], ["Oyo"], ["Ikerre"], ["Benin City"], ["Iseyin"], ["Katsina"], ["Jos"], ["Sokoto"], ["Ilobu"], ["Offa"], ["Ikorodu"], ["Ilawe-Ekiti"], ["Owo"], ["Ikirun"], ["Shaki"], ["Calabar"], ["Ondo"], ["Akure"], ["Oslo"], ["Bergen"], ["Bouak\u00e9"], ["Quetta"], ["Islamabad"], ["Sargodha"], ["Sialkot"], ["Bahawalpur"], ["Sukkur"], ["Jhang"], ["Sheikhupura"], ["Larkana"], ["Gujrat"], ["Mardan"], ["Kasur"], ["Rahim Yar Khan"], ["Sahiwal"], ["Okara"], ["Wah"], ["Dera Ghazi Khan"], ["Mirpur Khas"], ["Nawabshah"], ["Mingora"], ["Chiniot"], ["Ciudad de Panam\u00e1"], ["San Miguelito"], ["Port Moresby"], ["Asunci\u00f3n"], ["Arequipa"], ["Trujillo"], ["Chiclayo"], ["Callao"], ["Iquitos"], ["Chimbote"], ["Huancayo"], ["Piura"], ["Cusco"], ["Pucallpa"], ["Tacna"], ["Ica"], ["Lisboa"], ["Porto"], ["San Juan"], ["Bayam\u00f3n"], ["Ponce"], ["Carolina"], ["L\u00f3dz"], ["Krak\u00f3w"], ["Wroclaw"], ["Poznan"], ["Gdansk"], ["Szczecin"], ["Bydgoszcz"], ["Lublin"], ["Katowice"], ["Bialystok"], ["Czestochowa"], ["Gdynia"], ["Sosnowiec"], ["Radom"], ["Kielce"], ["Gliwice"], ["Torun"], ["Bytom"], ["Zabrze"], ["Bielsko-Biala"], ["Olsztyn"], ["Rzesz\u00f3w"], ["Doha"], ["Marseille"], ["Lyon"], ["Toulouse"], ["Nice"], ["Nantes"], ["Strasbourg"], ["Montpellier"], ["Bordeaux"], ["Rennes"], ["Le Havre"], ["Reims"], ["Lille"], ["St-\u00c9tienne"], ["Toulon"], ["Iasi"], ["Constanta"], ["Cluj-Napoca"], ["Galati"], ["Timisoara"], ["Brasov"], ["Craiova"], ["Ploiesti"], ["Braila"], ["Oradea"], ["Bacau"], ["Pitesti"], ["Arad"], ["Sibiu"], ["T\u00e2rgu Mures"], ["Kigali"], ["Stockholm"], ["Gothenburg [G\u00f6teborg]"], ["Malm\u00f6"], ["Uppsala"], ["Frankfurt am Main"], ["Essen"], ["Dortmund"], ["Stuttgart"], ["D\u00fcsseldorf"], ["Bremen"], ["Duisburg"], ["Hannover"], ["Leipzig"], ["N\u00fcrnberg"], ["Dresden"], ["Bochum"], ["Wuppertal"], ["Bielefeld"], ["Mannheim"], ["Bonn"], ["Gelsenkirchen"], ["Karlsruhe"], ["Wiesbaden"], ["M\u00fcnster"], ["M\u00f6nchengladbach"], ["Chemnitz"], ["Augsburg"], ["Halle/Saale"], ["Braunschweig"], ["Aachen"], ["Krefeld"], ["Magdeburg"], ["Kiel"], ["Oberhausen"], ["L\u00fcbeck"], ["Hagen"], ["Rostock"], ["Freiburg im Breisgau"], ["Erfurt"], ["Kassel"], ["Saarbr\u00fccken"], ["Mainz"], ["Hamm"], ["Herne"], ["M\u00fclheim an der Ruhr"], ["Solingen"], ["Osnabr\u00fcck"], ["Ludwigshafen am Rhein"], ["Leverkusen"], ["Ndola"], ["Kitwe"], ["Medina"], ["al-Dammam"], ["al-Taif"], ["Tabuk"], ["Burayda"], ["al-Hufuf"], ["al-Mubarraz"], ["Khamis Mushayt"], ["Hail"], ["Pikine"], ["Dakar"], ["Thi\u00e8s"], ["Kaolack"], ["Ziguinchor"], ["Freetown"], ["Bratislava"], ["Ko\u0161ice"], ["Ljubljana"], ["Colombo"], ["Dehiwala"], ["Moratuwa"], ["Sharq al-Nil"], ["Port Sudan"], ["Kassala"], ["Obeid"], ["Nyala"], ["Wad Madani"], ["al-Qadarif"], ["Kusti"], ["Helsinki [Helsingfors]"], ["Espoo"], ["Tampere"], ["Vantaa"], ["Turku [\u00c5bo]"], ["Z\u00fcrich"], ["Geneve"], ["Basel"], ["Hims"], ["Hama"], ["Latakia"], ["Dushanbe"], ["Khujand"], ["Tainan"], ["Panchiao"], ["Chungho"], ["Keelung (Chilung)"], ["Sanchung"], ["Hsinchuang"], ["Hsinchu"], ["Chungli"], ["Fengshan"], ["Taoyuan"], ["Chiayi"], ["Hsintien"], ["Changhwa"], ["Yungho"], ["Tucheng"], ["Pingtung"], ["Yungkang"], ["Pingchen"], ["Tali"], ["Taiping"], ["Pate"], ["Fengyuan"], ["Luchou"], ["Dodoma"], ["Mwanza"], ["K\u00f8benhavn"], ["\u00c5rhus"], ["Odense"], ["Aalborg"], ["Nonthaburi"], ["Nakhon Ratchasima"], ["Chiang Mai"], ["Lom\u00e9"], ["N\u00b4Djam\u00e9na"], ["Brno"], ["Ostrava"], ["Plzen"], ["Tunis"], ["Sfax"], ["Ariana"], ["Ettadhamen"], ["Gaziantep"], ["Konya"], ["Mersin (I\u00e7el)"], ["Antalya"], ["Diyarbakir"], ["Kayseri"], ["Eskisehir"], ["Sanliurfa"], ["Samsun"], ["Malatya"], ["Gebze"], ["Denizli"], ["Sivas"], ["Erzurum"], ["Tarsus"], ["Kahramanmaras"], ["El\u00e2zig"], ["Van"], ["Sultanbeyli"], ["Izmit (Kocaeli)"], ["Manisa"], ["Batman"], ["Balikesir"], ["Sakarya (Adapazari)"], ["Ashgabat"], ["Ch\u00e4rjew"], ["Kampala"], ["Zaporizzja"], ["Lviv"], ["Kryvyi Rig"], ["Mykolajiv"], ["Mariupol"], ["Lugansk"], ["Vinnytsja"], ["Makijivka"], ["Herson"], ["Sevastopol"], ["Simferopol"], ["Pultava [Poltava]"], ["T\u0161ernigiv"], ["T\u0161erkasy"], ["Gorlivka"], ["Zytomyr"], ["Sumy"], ["Dniprodzerzynsk"], ["Kirovograd"], ["Hmelnytskyi"], ["T\u0161ernivtsi"], ["Rivne"], ["Krement\u0161uk"], ["Ivano-Frankivsk"], ["Ternopil"], ["Lutsk"], ["Bila Tserkva"], ["Kramatorsk"], ["Melitopol"], ["Kert\u0161"], ["Debrecen"], ["Miskolc"], ["Auckland"], ["Christchurch"], ["Manukau"], ["North Shore"], ["Waitakere"], ["Wellington"], ["Namangan"], ["Samarkand"], ["Andijon"], ["Buhoro"], ["Karsi"], ["Nukus"], ["K\u00fckon"], ["Fargona"], ["Gomel"], ["Mogiljov"], ["Vitebsk"], ["Grodno"], ["Brest"], ["Bobruisk"], ["Baranovit\u0161i"], ["Barquisimeto"], ["Valencia"], ["Ciudad Guayana"], ["Petare"], ["Maracay"], ["Barcelona"], ["Matur\u00edn"], ["San Crist\u00f3bal"], ["Ciudad Bol\u00edvar"], ["Cuman\u00e1"], ["M\u00e9rida"], ["Cabimas"], ["Barinas"], ["Turmero"], ["Baruta"], ["Puerto Cabello"], ["Santa Ana de Coro"], ["Los Teques"], ["Punto Fijo"], ["Guarenas"], ["Krasnojarsk"], ["Saratov"], ["Toljatti"], ["Uljanovsk"], ["Izevsk"], ["Krasnodar"], ["Jaroslavl"], ["Habarovsk"], ["Vladivostok"], ["Irkutsk"], ["Barnaul"], ["Novokuznetsk"], ["Penza"], ["Rjazan"], ["Orenburg"], ["Lipetsk"], ["Nabereznyje T\u0161elny"], ["Tula"], ["Tjumen"], ["Kemerovo"], ["Astrahan"], ["Tomsk"], ["Kirov"], ["Ivanovo"], ["T\u0161eboksary"], ["Brjansk"], ["Tver"], ["Kursk"], ["Magnitogorsk"], ["Kaliningrad"], ["Nizni Tagil"], ["Murmansk"], ["Ulan-Ude"], ["Kurgan"], ["Arkangeli"], ["Sot\u0161i"], ["Smolensk"], ["Orjol"], ["Stavropol"], ["Belgorod"], ["Kaluga"], ["Vladimir"], ["Mahat\u0161kala"], ["T\u0161erepovets"], ["Saransk"], ["Tambov"], ["Vladikavkaz"], ["T\u0161ita"], ["Vologda"], ["Veliki Novgorod"], ["Komsomolsk-na-Amure"], ["Kostroma"], ["Volzski"], ["Taganrog"], ["Petroskoi"], ["Bratsk"], ["Dzerzinsk"], ["Surgut"], ["Orsk"], ["Sterlitamak"], ["Angarsk"], ["Jo\u0161kar-Ola"], ["Rybinsk"], ["Prokopjevsk"], ["Niznevartovsk"], ["Nalt\u0161ik"], ["Syktyvkar"], ["Severodvinsk"], ["Bijsk"], ["Niznekamsk"], ["Blagove\u0161t\u0161ensk"], ["\u0160ahty"], ["Staryi Oskol"], ["Zelenograd"], ["Balakovo"], ["Novorossijsk"], ["Pihkova"], ["Zlatoust"], ["Jakutsk"], ["Podolsk"], ["Petropavlovsk-Kamt\u0161atski"], ["Kamensk-Uralski"], ["Engels"], ["Syzran"], ["Grozny"], ["Novot\u0161erkassk"], ["Berezniki"], ["Juzno-Sahalinsk"], ["Volgodonsk"], ["Abakan"], ["Maikop"], ["Miass"], ["Armavir"], ["Ljubertsy"], ["Rubtsovsk"], ["Haiphong"], ["Da Nang"], ["Bi\u00ean Hoa"], ["Nha Trang"], ["Hue"], ["Can Tho"], ["Cam Pha"], ["Nam Dinh"], ["Quy Nhon"], ["Tallinn"], ["San Jose"], ["Indianapolis"], ["San Francisco"], ["Jacksonville"], ["Columbus"], ["Austin"], ["Baltimore"], ["Memphis"], ["Milwaukee"], ["Boston"], ["Washington"], ["Nashville-Davidson"], ["El Paso"], ["Seattle"], ["Denver"], ["Charlotte"], ["Fort Worth"], ["Portland"], ["Oklahoma City"], ["Tucson"], ["New Orleans"], ["Las Vegas"], ["Cleveland"], ["Long Beach"], ["Albuquerque"], ["Kansas City"], ["Fresno"], ["Virginia Beach"], ["Atlanta"], ["Sacramento"], ["Oakland"], ["Mesa"], ["Tulsa"], ["Omaha"], ["Minneapolis"], ["Honolulu"], ["Miami"], ["Colorado Springs"], ["Saint Louis"], ["Wichita"], ["Santa Ana"], ["Pittsburgh"], ["Arlington"], ["Cincinnati"], ["Anaheim"], ["Toledo"], ["Tampa"], ["Buffalo"], ["Saint Paul"], ["Corpus Christi"], ["Aurora"], ["Raleigh"], ["Newark"], ["Lexington-Fayette"], ["Anchorage"], ["Louisville"], ["Riverside"], ["Saint Petersburg"], ["Bakersfield"], ["Stockton"], ["Birmingham"], ["Jersey City"], ["Norfolk"], ["Baton Rouge"], ["Hialeah"], ["Lincoln"], ["Greensboro"], ["Plano"], ["Rochester"], ["Glendale"], ["Akron"], ["Garland"], ["Madison"], ["Fort Wayne"], ["Fremont"], ["Scottsdale"], ["Montgomery"], ["Shreveport"], ["Augusta-Richmond County"], ["Lubbock"], ["Chesapeake"], ["Mobile"], ["Des Moines"], ["Grand Rapids"], ["Richmond"], ["Yonkers"], ["Spokane"], ["Glendale"], ["Tacoma"], ["Irving"], ["Huntington Beach"], ["Modesto"], ["Durham"], ["Columbus"], ["Orlando"], ["Boise City"], ["Winston-Salem"], ["San Bernardino"], ["Jackson"], ["Little Rock"], ["Salt Lake City"], ["Reno"], ["Newport News"], ["Chandler"], ["Laredo"], ["Henderson"], ["Arlington"], ["Knoxville"], ["Amarillo"], ["Providence"], ["Chula Vista"], ["Worcester"], ["Oxnard"], ["Dayton"], ["Garden Grove"], ["Oceanside"], ["Bulawayo"], ["Chitungwiza"], ["Mount Darwin"], ["Gaza"]], "trigger_words": ["Name"], "Prediction": "Name FROM city WHERE Population BETWEEN 160000 AND 900000;"}
{"db_id": "world_1", "query": "select name from city where population between 160000 and 900000", "query_toks": ["select", "name", "from", "city", "where", "population", "between", "160000", "and", "900000"], "query_toks_no_value": ["select", "name", "from", "city", "where", "population", "between", "value", "and", "value"], "question": "Return the names of cities that have a population between 160000 and 900000 .", "question_toks": ["Return", "the", "names", "of", "cities", "that", "have", "a", "population", "between", "160000", "and", "900000", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 1, [0, [0, 5, false], null], 160000.0, 900000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "813", "answer_text": [["Qandahar"], ["Herat"], ["Amsterdam"], ["Rotterdam"], ["Haag"], ["Utrecht"], ["Eindhoven"], ["Tilburg"], ["Groningen"], ["Breda"], ["Tirana"], ["Oran"], ["Constantine"], ["Annaba"], ["Batna"], ["S\u00e9tif"], ["Huambo"], ["Dubai"], ["Abu Dhabi"], ["Sharja"], ["al-Ayn"], ["Lomas de Zamora"], ["Quilmes"], ["Almirante Brown"], ["La Plata"], ["Mar del Plata"], ["San Miguel de Tucum\u00e1n"], ["Lan\u00fas"], ["Merlo"], ["General San Mart\u00edn"], ["Salta"], ["Moreno"], ["Santa F\u00e9"], ["Avellaneda"], ["Tres de Febrero"], ["Mor\u00f3n"], ["Florencio Varela"], ["San Isidro"], ["Tigre"], ["Malvinas Argentinas"], ["Vicente L\u00f3pez"], ["Berazategui"], ["Corrientes"], ["San Miguel"], ["Bah\u00eda Blanca"], ["Esteban Echeverr\u00eda"], ["Resistencia"], ["Jos\u00e9 C. Paz"], ["Paran\u00e1"], ["Godoy Cruz"], ["Posadas"], ["Guaymall\u00e9n"], ["Santiago del Estero"], ["San Salvador de Jujuy"], ["Hurlingham"], ["Neuqu\u00e9n"], ["Gjumri"], ["Vanadzor"], ["Canberra"], ["Gold Coast"], ["Newcastle"], ["Central Coast"], ["Wollongong"], ["G\u00e4nc\u00e4"], ["Sumqayit"], ["Nassau"], ["Khulna"], ["Rajshahi"], ["Narayanganj"], ["Rangpur"], ["Mymensingh"], ["Barisal"], ["Tungi"], ["Antwerpen"], ["Gent"], ["Charleroi"], ["Li\u00e8ge"], ["Cotonou"], ["Porto-Novo"], ["La Paz"], ["El Alto"], ["Cochabamba"], ["Oruro"], ["Sucre"], ["Sarajevo"], ["Gaborone"], ["S\u00e3o Gon\u00e7alo"], ["Nova Igua\u00e7u"], ["S\u00e3o Lu\u00eds"], ["Macei\u00f3"], ["Duque de Caxias"], ["S\u00e3o Bernardo do Campo"], ["Teresina"], ["Natal"], ["Osasco"], ["Campo Grande"], ["Santo Andr\u00e9"], ["Jo\u00e3o Pessoa"], ["Jaboat\u00e3o dos Guararapes"], ["Contagem"], ["S\u00e3o Jos\u00e9 dos Campos"], ["Uberl\u00e2ndia"], ["Feira de Santana"], ["Ribeir\u00e3o Preto"], ["Sorocaba"], ["Niter\u00f3i"], ["Cuiab\u00e1"], ["Juiz de Fora"], ["Aracaju"], ["S\u00e3o Jo\u00e3o de Meriti"], ["Londrina"], ["Joinville"], ["Belford Roxo"], ["Santos"], ["Ananindeua"], ["Campos dos Goytacazes"], ["Mau\u00e1"], ["Carapicu\u00edba"], ["Olinda"], ["Campina Grande"], ["S\u00e3o Jos\u00e9 do Rio Preto"], ["Caxias do Sul"], ["Moji das Cruzes"], ["Diadema"], ["Aparecida de Goi\u00e2nia"], ["Piracicaba"], ["Cariacica"], ["Vila Velha"], ["Pelotas"], ["Bauru"], ["Porto Velho"], ["Serra"], ["Betim"], ["Jund\u00eda\u00ed"], ["Canoas"], ["Franca"], ["S\u00e3o Vicente"], ["Maring\u00e1"], ["Montes Claros"], ["An\u00e1polis"], ["Florian\u00f3polis"], ["Petr\u00f3polis"], ["Itaquaquecetuba"], ["Vit\u00f3ria"], ["Ponta Grossa"], ["Rio Branco"], ["Foz do Igua\u00e7u"], ["Macap\u00e1"], ["Ilh\u00e9us"], ["Vit\u00f3ria da Conquista"], ["Uberaba"], ["Paulista"], ["Limeira"], ["Blumenau"], ["Caruaru"], ["Santar\u00e9m"], ["Volta Redonda"], ["Novo Hamburgo"], ["Caucaia"], ["Santa Maria"], ["Cascavel"], ["Guaruj\u00e1"], ["Ribeir\u00e3o das Neves"], ["Governador Valadares"], ["Taubat\u00e9"], ["Imperatriz"], ["Gravata\u00ed"], ["Embu"], ["Mossor\u00f3"], ["V\u00e1rzea Grande"], ["Petrolina"], ["Barueri"], ["Viam\u00e3o"], ["Ipatinga"], ["Juazeiro"], ["Juazeiro do Norte"], ["Tabo\u00e3o da Serra"], ["S\u00e3o Jos\u00e9 dos Pinhais"], ["Mag\u00e9"], ["Suzano"], ["S\u00e3o Leopoldo"], ["Mar\u00edlia"], ["S\u00e3o Carlos"], ["Sumar\u00e9"], ["Presidente Prudente"], ["Divin\u00f3polis"], ["Sete Lagoas"], ["Rio Grande"], ["Itabuna"], ["Jequi\u00e9"], ["Arapiraca"], ["Colombo"], ["Americana"], ["Alvorada"], ["Araraquara"], ["Itabora\u00ed"], ["Santa B\u00e1rbara d\u00b4Oeste"], ["Nova Friburgo"], ["Jacare\u00ed"], ["Ara\u00e7atuba"], ["Barra Mansa"], ["Praia Grande"], ["Marab\u00e1"], ["Crici\u00fama"], ["Boa Vista"], ["Passo Fundo"], ["Dourados"], ["Santa Luzia"], ["Rio Claro"], ["Maracana\u00fa"], ["Guarapuava"], ["Glasgow"], ["Liverpool"], ["Edinburgh"], ["Sheffield"], ["Manchester"], ["Leeds"], ["Bristol"], ["Cardiff"], ["Coventry"], ["Leicester"], ["Bradford"], ["Belfast"], ["Nottingham"], ["Kingston upon Hull"], ["Plymouth"], ["Stoke-on-Trent"], ["Wolverhampton"], ["Derby"], ["Swansea"], ["Southampton"], ["Aberdeen"], ["Northampton"], ["Dudley"], ["Portsmouth"], ["Newcastle upon Tyne"], ["Sunderland"], ["Luton"], ["Swindon"], ["Southend-on-Sea"], ["Walsall"], ["Bournemouth"], ["Plovdiv"], ["Varna"], ["Burgas"], ["Ruse"], ["Ouagadougou"], ["Bobo-Dioulasso"], ["Bujumbura"], ["Puente Alto"], ["Vi\u00f1a del Mar"], ["Valpara\u00edso"], ["Talcahuano"], ["Antofagasta"], ["San Bernardo"], ["Temuco"], ["Concepci\u00f3n"], ["Rancagua"], ["Arica"], ["Talca"], ["Chill\u00e1n"], ["Iquique"], ["San Jos\u00e9"], ["Djibouti"], ["Santiago de los Caballeros"], ["Cuenca"], ["Machala"], ["Santo Domingo de los Colorados"], ["Portoviejo"], ["Ambato"], ["Manta"], ["Shubra al-Khayma"], ["Port Said"], ["Suez"], ["al-Mahallat al-Kubra"], ["Tanta"], ["al-Mansura"], ["Luxor"], ["Asyut"], ["Bahtim"], ["Zagazig"], ["al-Faiyum"], ["Ismailia"], ["Kafr al-Dawwar"], ["Assuan"], ["Damanhur"], ["al-Minya"], ["Bani Suwayf"], ["Qina"], ["Sawhaj"], ["San Salvador"], ["Asmara"], ["Valencia"], ["Sevilla"], ["Zaragoza"], ["M\u00e1laga"], ["Bilbao"], ["Las Palmas de Gran Canaria"], ["Murcia"], ["Palma de Mallorca"], ["Valladolid"], ["C\u00f3rdoba"], ["Vigo"], ["Alicante [Alacant]"], ["Gij\u00f3n"], ["L\u00b4Hospitalet de Llobregat"], ["Granada"], ["A Coru\u00f1a (La Coru\u00f1a)"], ["Vitoria-Gasteiz"], ["Santa Cruz de Tenerife"], ["Badalona"], ["Oviedo"], ["M\u00f3stoles"], ["Elche [Elx]"], ["Sabadell"], ["Santander"], ["Jerez de la Frontera"], ["Pamplona [Iru\u00f1a]"], ["Donostia-San Sebasti\u00e1n"], ["Cartagena"], ["Legan\u00e9s"], ["Fuenlabrada"], ["Almer\u00eda"], ["Terrassa"], ["Alcal\u00e1 de Henares"], ["Burgos"], ["Johannesburg"], ["Port Elizabeth"], ["Pretoria"], ["Inanda"], ["Durban"], ["Vanderbijlpark"], ["Kempton Park"], ["Alberton"], ["Pinetown"], ["Pietermaritzburg"], ["Benoni"], ["Randburg"], ["Umlazi"], ["Bloemfontein"], ["Vereeniging"], ["Wonderboom"], ["Roodepoort"], ["Boksburg"], ["Klerksdorp"], ["Soshanguve"], ["Newcastle"], ["East London"], ["Welkom"], ["Kimberley"], ["Uitenhage"], ["Chatsworth"], ["Mdantsane"], ["Krugersdorp"], ["Botshabelo"], ["Brakpan"], ["Witbank"], ["Oberholzer"], ["Germiston"], ["Springs"], ["Dire Dawa"], ["Cebu"], ["Zamboanga"], ["Pasig"], ["Valenzuela"], ["Las Pi\u00f1as"], ["Antipolo"], ["Taguig"], ["Cagayan de Oro"], ["Para\u00f1aque"], ["Makati"], ["Bacolod"], ["General Santos"], ["Marikina"], ["Dasmari\u00f1as"], ["Muntinlupa"], ["Iloilo"], ["Pasay"], ["Malabon"], ["San Jos\u00e9 del Monte"], ["Bacoor"], ["Iligan"], ["Calamba"], ["Mandaluyong"], ["Butuan"], ["Angeles"], ["Tarlac"], ["Mandaue"], ["Baguio"], ["Batangas"], ["Cainta"], ["San Pedro"], ["Navotas"], ["Cabanatuan"], ["San Fernando"], ["Lipa"], ["Lapu-Lapu"], ["San Pablo"], ["Bi\u00f1an"], ["Taytay"], ["Lucena"], ["Imus"], ["Olongapo"], ["Binangonan"], ["Santa Rosa"], ["Tagum"], ["Tacloban"], ["Malolos"], ["Mabalacat"], ["Cotabato"], ["Meycauayan"], ["Puerto Princesa"], ["Libreville"], ["Kutaisi"], ["Kumasi"], ["Ciudad de Guatemala"], ["Mixco"], ["Bissau"], ["Georgetown"], ["Port-au-Prince"], ["Carrefour"], ["Delmas"], ["Tegucigalpa"], ["San Pedro Sula"], ["Malang"], ["Bandar Lampung"], ["Bekasi"], ["Padang"], ["Surakarta"], ["Banjarmasin"], ["Pekan Baru"], ["Denpasar"], ["Yogyakarta"], ["Pontianak"], ["Samarinda"], ["Jambi"], ["Depok"], ["Cimahi"], ["Balikpapan"], ["Manado"], ["Mataram"], ["Pekalongan"], ["Tegal"], ["Bogor"], ["Ciputat"], ["Pondokgede"], ["Cirebon"], ["Kediri"], ["Ambon"], ["Jember"], ["Cilacap"], ["Cimanggis"], ["Pematang Siantar"], ["Purwokerto"], ["Ciomas"], ["Tasikmalaya"], ["Madiun"], ["Srinagar"], ["Agra"], ["Coimbatore"], ["Thane (Thana)"], ["Allahabad"], ["Meerut"], ["Vishakhapatnam"], ["Jabalpur"], ["Amritsar"], ["Faridabad"], ["Vijayawada"], ["Gwalior"], ["Jodhpur"], ["Nashik (Nasik)"], ["Hubli-Dharwad"], ["Solapur (Sholapur)"], ["Ranchi"], ["Bareilly"], ["Guwahati (Gauhati)"], ["Shambajinagar (Aurangabad)"], ["Cochin (Kochi)"], ["Rajkot"], ["Kota"], ["Thiruvananthapuram (Trivandrum"], ["Pimpri-Chinchwad"], ["Jalandhar (Jullundur)"], ["Gorakhpur"], ["Chandigarh"], ["Mysore"], ["Aligarh"], ["Guntur"], ["Jamshedpur"], ["Ghaziabad"], ["Warangal"], ["Raipur"], ["Moradabad"], ["Durgapur"], ["Amravati"], ["Calicut (Kozhikode)"], ["Bikaner"], ["Bhubaneswar"], ["Kolhapur"], ["Kataka (Cuttack)"], ["Ajmer"], ["Bhavnagar"], ["Tiruchirapalli"], ["Bhilai"], ["Bhiwandi"], ["Saharanpur"], ["Ulhasnagar"], ["Salem"], ["Ujjain"], ["Malegaon"], ["Jamnagar"], ["Bokaro Steel City"], ["Akola"], ["Belgaum"], ["Rajahmundry"], ["Nellore"], ["Udaipur"], ["New Bombay"], ["Bhatpara"], ["Gulbarga"], ["New Delhi"], ["Jhansi"], ["Gaya"], ["Kakinada"], ["Dhule (Dhulia)"], ["Panihati"], ["Nanded (Nander)"], ["Mangalore"], ["Dehra Dun"], ["Kamarhati"], ["Davangere"], ["Asansol"], ["Bhagalpur"], ["Bellary"], ["Barddhaman (Burdwan)"], ["Rampur"], ["Jalgaon"], ["Muzaffarpur"], ["Nizamabad"], ["Muzaffarnagar"], ["Patiala"], ["Shahjahanpur"], ["Kurnool"], ["Tiruppur (Tirupper)"], ["Rohtak"], ["South Dum Dum"], ["Mathura"], ["Chandrapur"], ["Barahanagar (Baranagar)"], ["Darbhanga"], ["Siliguri (Shiliguri)"], ["Raurkela"], ["Ambattur"], ["Panipat"], ["Firozabad"], ["Ichalkaranji"], ["Jammu"], ["Ramagundam"], ["Eluru"], ["Brahmapur"], ["Alwar"], ["Pondicherry"], ["Thanjavur"], ["Bihar Sharif"], ["Tuticorin"], ["Imphal"], ["Latur"], ["Sagar"], ["Farrukhabad-cum-Fatehgarh"], ["Sangli"], ["Parbhani"], ["Nagar Coil"], ["Bijapur"], ["Kukatpalle"], ["Bally"], ["Bhilwara"], ["Ratlam"], ["Avadi"], ["Dindigul"], ["Ahmadnagar"], ["Bilaspur"], ["Shimoga"], ["Kharagpur"], ["Mira Bhayandar"], ["Vellore"], ["Jalna"], ["Burnpur"], ["Anantapur"], ["Allappuzha (Alleppey)"], ["Tirupati"], ["Karnal"], ["Burhanpur"], ["Hisar (Hissar)"], ["Tiruvottiyur"], ["Mirzapur-cum-Vindhyachal"], ["Secunderabad"], ["Nadiad"], ["Dewas"], ["Murwara (Katni)"], ["Ganganagar"], ["Vizianagaram"], ["Mosul"], ["Irbil"], ["Kirkuk"], ["Basra"], ["al-Sulaymaniya"], ["al-Najaf"], ["Karbala"], ["al-Hilla"], ["al-Nasiriya"], ["al-Amara"], ["al-Diwaniya"], ["al-Ramadi"], ["al-Kut"], ["Ahvaz"], ["Qom"], ["Kermanshah"], ["Urmia"], ["Zahedan"], ["Rasht"], ["Hamadan"], ["Kerman"], ["Arak"], ["Ardebil"], ["Yazd"], ["Qazvin"], ["Zanjan"], ["Sanandaj"], ["Bandar-e-Abbas"], ["Khorramabad"], ["Eslamshahr"], ["Borujerd"], ["Abadan"], ["Dezful"], ["Kashan"], ["Sari"], ["Gorgan"], ["Najafabad"], ["Sabzevar"], ["Khomeynishahr"], ["Dublin"], ["Jerusalem"], ["Tel Aviv-Jaffa"], ["Haifa"], ["Rishon Le Ziyyon"], ["Beerseba"], ["Holon"], ["Palermo"], ["Genova"], ["Bologna"], ["Firenze"], ["Catania"], ["Bari"], ["Venezia"], ["Messina"], ["Verona"], ["Trieste"], ["Padova"], ["Taranto"], ["Brescia"], ["Reggio di Calabria"], ["Modena"], ["Prato"], ["Parma"], ["Cagliari"], ["Livorno"], ["Graz"], ["Linz"], ["Chiba"], ["Sakai"], ["Kumamoto"], ["Okayama"], ["Sagamihara"], ["Hamamatsu"], ["Kagoshima"], ["Funabashi"], ["Higashiosaka"], ["Hachioji"], ["Niigata"], ["Amagasaki"], ["Himeji"], ["Shizuoka"], ["Urawa"], ["Matsuyama"], ["Matsudo"], ["Kanazawa"], ["Kawaguchi"], ["Ichikawa"], ["Omiya"], ["Utsunomiya"], ["Oita"], ["Nagasaki"], ["Yokosuka"], ["Kurashiki"], ["Gifu"], ["Hirakata"], ["Nishinomiya"], ["Toyonaka"], ["Wakayama"], ["Fukuyama"], ["Fujisawa"], ["Asahikawa"], ["Machida"], ["Nara"], ["Takatsuki"], ["Iwaki"], ["Nagano"], ["Toyohashi"], ["Toyota"], ["Suita"], ["Takamatsu"], ["Koriyama"], ["Okazaki"], ["Kawagoe"], ["Tokorozawa"], ["Toyama"], ["Kochi"], ["Kashiwa"], ["Akita"], ["Miyazaki"], ["Koshigaya"], ["Naha"], ["Aomori"], ["Hakodate"], ["Akashi"], ["Yokkaichi"], ["Fukushima"], ["Morioka"], ["Maebashi"], ["Kasugai"], ["Otsu"], ["Ichihara"], ["Yao"], ["Ichinomiya"], ["Tokushima"], ["Kakogawa"], ["Ibaraki"], ["Neyagawa"], ["Shimonoseki"], ["Yamagata"], ["Fukui"], ["Hiratsuka"], ["Mito"], ["Sasebo"], ["Hachinohe"], ["Takasaki"], ["Shimizu"], ["Kurume"], ["Fuji"], ["Soka"], ["Fuchu"], ["Chigasaki"], ["Atsugi"], ["Numazu"], ["Ageo"], ["Yamato"], ["Matsumoto"], ["Kure"], ["Takarazuka"], ["Kasukabe"], ["Chofu"], ["Odawara"], ["Kofu"], ["Kushiro"], ["Kishiwada"], ["Hitachi"], ["Nagaoka"], ["Itami"], ["Uji"], ["Suzuka"], ["Hirosaki"], ["Ube"], ["Kodaira"], ["Takaoka"], ["Obihiro"], ["Tomakomai"], ["Saga"], ["Sakura"], ["Kamakura"], ["Mitaka"], ["Izumi"], ["Hino"], ["Hadano"], ["Ashikaga"], ["Tsu"], ["Sayama"], ["Yachiyo"], ["Tsukuba"], ["Sanaa"], ["Aden"], ["Taizz"], ["Hodeida"], ["al-Zarqa"], ["Irbid"], ["Novi Sad"], ["Ni\u0161"], ["Phnom Penh"], ["Garoua"], ["Calgary"], ["Toronto"], ["North York"], ["Winnipeg"], ["Edmonton"], ["Mississauga"], ["Scarborough"], ["Vancouver"], ["Etobicoke"], ["London"], ["Hamilton"], ["Ottawa"], ["Laval"], ["Surrey"], ["Brampton"], ["Windsor"], ["Saskatoon"], ["Kitchener"], ["Markham"], ["Regina"], ["Burnaby"], ["Qu\u00e9bec"], ["Qaraghandy"], ["Shymkent"], ["Taraz"], ["Astana"], ["\u00d6skemen"], ["Pavlodar"], ["Semey"], ["Aqt\u00f6be"], ["Qostanay"], ["Petropavl"], ["Oral"], ["Temirtau"], ["Mombasa"], ["Kisumu"], ["Nakuru"], ["Bangui"], ["Handan"], ["Wuxi"], ["Xuzhou"], ["Datong"], ["Yichun"], ["Benxi"], ["Luoyang"], ["Suzhou"], ["Xining"], ["Huainan"], ["Jixi"], ["Daqing"], ["Fuxin"], ["Amoy [Xiamen]"], ["Liuzhou"], ["Shantou"], ["Jinzhou"], ["Mudanjiang"], ["Yinchuan"], ["Changzhou"], ["Zhangjiakou"], ["Dandong"], ["Hegang"], ["Kaifeng"], ["Jiamusi"], ["Liaoyang"], ["Hengyang"], ["Baoding"], ["Hunjiang"], ["Xinxiang"], ["Huangshi"], ["Haikou"], ["Yantai"], ["Bengbu"], ["Xiangtan"], ["Weifang"], ["Wuhu"], ["Pingxiang"], ["Yingkou"], ["Anyang"], ["Panzhihua"], ["Pingdingshan"], ["Xiangfan"], ["Zhuzhou"], ["Jiaozuo"], ["Wenzhou"], ["Zhangjiang"], ["Zigong"], ["Shuangyashan"], ["Zaozhuang"], ["Yakeshi"], ["Yichang"], ["Zhenjiang"], ["Huaibei"], ["Qinhuangdao"], ["Guilin"], ["Liupanshui"], ["Panjin"], ["Yangquan"], ["Jinxi"], ["Liaoyuan"], ["Lianyungang"], ["Xianyang"], ["Tai\u00b4an"], ["Chifeng"], ["Shaoguan"], ["Nantong"], ["Leshan"], ["Baoji"], ["Linyi"], ["Tonghua"], ["Siping"], ["Changzhi"], ["Tengzhou"], ["Chaozhou"], ["Yangzhou"], ["Dongwan"], ["Ma\u00b4anshan"], ["Foshan"], ["Yueyang"], ["Xingtai"], ["Changde"], ["Shihezi"], ["Yancheng"], ["Jiujiang"], ["Dongying"], ["Shashi"], ["Xintai"], ["Jingdezhen"], ["Tongchuan"], ["Zhongshan"], ["Shiyan"], ["Tieli"], ["Jining"], ["Wuhai"], ["Mianyang"], ["Luzhou"], ["Zunyi"], ["Shizuishan"], ["Neijiang"], ["Tongliao"], ["Tieling"], ["Wafangdian"], ["Anqing"], ["Shaoyang"], ["Laiwu"], ["Chengde"], ["Tianshui"], ["Nanyang"], ["Cangzhou"], ["Yibin"], ["Huaiyin"], ["Dunhua"], ["Yanji"], ["Jiangmen"], ["Tongling"], ["Suihua"], ["Gongziling"], ["Xiantao"], ["Chaoyang"], ["Ganzhou"], ["Huzhou"], ["Baicheng"], ["Shangzi"], ["Yangjiang"], ["Qitaihe"], ["Gejiu"], ["Jiangyin"], ["Hebi"], ["Jiaxing"], ["Wuzhou"], ["Meihekou"], ["Xuchang"], ["Liaocheng"], ["Haicheng"], ["Qianjiang"], ["Baiyin"], ["Bei\u00b4an"], ["Yixing"], ["Laizhou"], ["Qaramay"], ["Acheng"], ["Dezhou"], ["Nanping"], ["Zhaoqing"], ["Beipiao"], ["Fengcheng"], ["Fuyu"], ["Xinyang"], ["Dongtai"], ["Yuci"], ["Honghu"], ["Ezhou"], ["Heze"], ["Daxian"], ["Linfen"], ["Tianmen"], ["Yiyang"], ["Quanzhou"], ["Rizhao"], ["Deyang"], ["Guangyuan"], ["Changshu"], ["Zhangzhou"], ["Hailar"], ["Nanchong"], ["Jiutai"], ["Zhaodong"], ["Shaoxing"], ["Fuyang"], ["Maoming"], ["Qujing"], ["Ghulja"], ["Jiaohe"], ["Puyang"], ["Huadian"], ["Jiangyou"], ["Qashqar"], ["Anshun"], ["Fuling"], ["Xinyu"], ["Hanzhong"], ["Danyang"], ["Chenzhou"], ["Xiaogan"], ["Shangqiu"], ["Zhuhai"], ["Qingyuan"], ["Aqsu"], ["Jining"], ["Xiaoshan"], ["Zaoyang"], ["Xinghua"], ["Hami"], ["Huizhou"], ["Jinmen"], ["Sanming"], ["Bishkek"], ["Osh"], ["Cartagena"], ["C\u00facuta"], ["Bucaramanga"], ["Ibagu\u00e9"], ["Pereira"], ["Santa Marta"], ["Manizales"], ["Bello"], ["Pasto"], ["Neiva"], ["Soledad"], ["Armenia"], ["Villavicencio"], ["Soacha"], ["Valledupar"], ["Monter\u00eda"], ["Itag\u00fc\u00ed"], ["Palmira"], ["Buenaventura"], ["Floridablanca"], ["Sincelejo"], ["Popay\u00e1n"], ["Barrancabermeja"], ["Pointe-Noire"], ["Lubumbashi"], ["Mbuji-Mayi"], ["Kolwezi"], ["Kisangani"], ["Kananga"], ["Likasi"], ["Bukavu"], ["Kikwit"], ["Tshikapa"], ["Matadi"], ["Mbandaka"], ["Hamhung"], ["Chongjin"], ["Nampo"], ["Sinuiju"], ["Wonsan"], ["Phyongsong"], ["Sariwon"], ["Haeju"], ["Kanggye"], ["Kimchaek"], ["Hyesan"], ["Kaesong"], ["Songnam"], ["Puchon"], ["Suwon"], ["Anyang"], ["Chonju"], ["Chongju"], ["Koyang"], ["Ansan"], ["Pohang"], ["Chang-won"], ["Masan"], ["Kwangmyong"], ["Chonan"], ["Chinju"], ["Iksan"], ["Pyongtaek"], ["Kumi"], ["Uijongbu"], ["Kyongju"], ["Kunsan"], ["Cheju"], ["Kimhae"], ["Sunchon"], ["Mokpo"], ["Yong-in"], ["Wonju"], ["Kunpo"], ["Chunchon"], ["Namyangju"], ["Kangnung"], ["Chungju"], ["Andong"], ["Yosu"], ["Kyongsan"], ["Paju"], ["Yangsan"], ["Athenai"], ["Thessaloniki"], ["Pireus"], ["Zagreb"], ["Split"], ["Rijeka"], ["Santiago de Cuba"], ["Camag\u00fcey"], ["Holgu\u00edn"], ["Santa Clara"], ["Guant\u00e1namo"], ["Nicosia"], ["Vientiane"], ["Riga"], ["Maseru"], ["Tripoli"], ["Monrovia"], ["Bengasi"], ["Vilnius"], ["Kaunas"], ["Klaipeda"], ["El-Aai\u00fan"], ["Macao"], ["Antananarivo"], ["Skopje"], ["Blantyre"], ["Lilongwe"], ["Ipoh"], ["Johor Baharu"], ["Petaling Jaya"], ["Kelang"], ["Kuala Terengganu"], ["Pinang"], ["Kota Bharu"], ["Kuantan"], ["Taiping"], ["Seremban"], ["Bamako"], ["Rabat"], ["Marrakech"], ["F\u00e8s"], ["Tanger"], ["Sal\u00e9"], ["Mekn\u00e8s"], ["Oujda"], ["K\u00e9nitra"], ["T\u00e9touan"], ["Safi"], ["Nouakchott"], ["Naucalpan de Ju\u00e1rez"], ["Mexicali"], ["Culiac\u00e1n"], ["Acapulco de Ju\u00e1rez"], ["Tlalnepantla de Baz"], ["M\u00e9rida"], ["Chihuahua"], ["San Luis Potos\u00ed"], ["Guadalupe"], ["Toluca"], ["Aguascalientes"], ["Quer\u00e9taro"], ["Morelia"], ["Hermosillo"], ["Saltillo"], ["Torre\u00f3n"], ["Centro (Villahermosa)"], ["San Nicol\u00e1s de los Garza"], ["Durango"], ["Chimalhuac\u00e1n"], ["Tlaquepaque"], ["Atizap\u00e1n de Zaragoza"], ["Veracruz"], ["Cuautitl\u00e1n Izcalli"], ["Irapuato"], ["Tuxtla Guti\u00e9rrez"], ["Tultitl\u00e1n"], ["Reynosa"], ["Benito Ju\u00e1rez"], ["Matamoros"], ["Xalapa"], ["Celaya"], ["Mazatl\u00e1n"], ["Ensenada"], ["Ahome"], ["Cajeme"], ["Cuernavaca"], ["Tonal\u00e1"], ["Valle de Chalco Solidaridad"], ["Nuevo Laredo"], ["Tepic"], ["Tampico"], ["Ixtapaluca"], ["Apodaca"], ["Guasave"], ["G\u00f3mez Palacio"], ["Tapachula"], ["Nicol\u00e1s Romero"], ["Coatzacoalcos"], ["Uruapan"], ["Victoria"], ["Oaxaca de Ju\u00e1rez"], ["Coacalco de Berrioz\u00e1bal"], ["Pachuca de Soto"], ["General Escobedo"], ["Salamanca"], ["Santa Catarina"], ["Tehuac\u00e1n"], ["Chalco"], ["C\u00e1rdenas"], ["Campeche"], ["La Paz"], ["Oth\u00f3n P. Blanco (Chetumal)"], ["Texcoco"], ["La Paz"], ["Metepec"], ["Monclova"], ["Huixquilucan"], ["Chilpancingo de los Bravo"], ["Puerto Vallarta"], ["Fresnillo"], ["Ciudad Madero"], ["Soledad de Graciano S\u00e1nchez"], ["San Juan del R\u00edo"], ["San Felipe del Progreso"], ["C\u00f3rdoba"], ["Tec\u00e1mac"], ["Ocosingo"], ["Carmen"], ["L\u00e1zaro C\u00e1rdenas"], ["Jiutepec"], ["Papantla"], ["Comalcalco"], ["Zamora"], ["Chisinau"], ["Tiraspol"], ["Ulan Bator"], ["Matola"], ["Beira"], ["Nampula"], ["Chimoio"], ["Mandalay"], ["Moulmein (Mawlamyine)"], ["Pegu (Bago)"], ["Bassein (Pathein)"], ["Windhoek"], ["Kathmandu"], ["Niamey"], ["Ogbomosho"], ["Kano"], ["Oshogbo"], ["Ilorin"], ["Abeokuta"], ["Port Harcourt"], ["Zaria"], ["Ilesha"], ["Onitsha"], ["Iwo"], ["Ado-Ekiti"], ["Abuja"], ["Kaduna"], ["Mushin"], ["Maiduguri"], ["Enugu"], ["Ede"], ["Aba"], ["Ife"], ["Ila"], ["Oyo"], ["Ikerre"], ["Benin City"], ["Iseyin"], ["Katsina"], ["Jos"], ["Sokoto"], ["Ilobu"], ["Offa"], ["Ikorodu"], ["Ilawe-Ekiti"], ["Owo"], ["Ikirun"], ["Shaki"], ["Calabar"], ["Ondo"], ["Akure"], ["Oslo"], ["Bergen"], ["Bouak\u00e9"], ["Quetta"], ["Islamabad"], ["Sargodha"], ["Sialkot"], ["Bahawalpur"], ["Sukkur"], ["Jhang"], ["Sheikhupura"], ["Larkana"], ["Gujrat"], ["Mardan"], ["Kasur"], ["Rahim Yar Khan"], ["Sahiwal"], ["Okara"], ["Wah"], ["Dera Ghazi Khan"], ["Mirpur Khas"], ["Nawabshah"], ["Mingora"], ["Chiniot"], ["Ciudad de Panam\u00e1"], ["San Miguelito"], ["Port Moresby"], ["Asunci\u00f3n"], ["Arequipa"], ["Trujillo"], ["Chiclayo"], ["Callao"], ["Iquitos"], ["Chimbote"], ["Huancayo"], ["Piura"], ["Cusco"], ["Pucallpa"], ["Tacna"], ["Ica"], ["Lisboa"], ["Porto"], ["San Juan"], ["Bayam\u00f3n"], ["Ponce"], ["Carolina"], ["L\u00f3dz"], ["Krak\u00f3w"], ["Wroclaw"], ["Poznan"], ["Gdansk"], ["Szczecin"], ["Bydgoszcz"], ["Lublin"], ["Katowice"], ["Bialystok"], ["Czestochowa"], ["Gdynia"], ["Sosnowiec"], ["Radom"], ["Kielce"], ["Gliwice"], ["Torun"], ["Bytom"], ["Zabrze"], ["Bielsko-Biala"], ["Olsztyn"], ["Rzesz\u00f3w"], ["Doha"], ["Marseille"], ["Lyon"], ["Toulouse"], ["Nice"], ["Nantes"], ["Strasbourg"], ["Montpellier"], ["Bordeaux"], ["Rennes"], ["Le Havre"], ["Reims"], ["Lille"], ["St-\u00c9tienne"], ["Toulon"], ["Iasi"], ["Constanta"], ["Cluj-Napoca"], ["Galati"], ["Timisoara"], ["Brasov"], ["Craiova"], ["Ploiesti"], ["Braila"], ["Oradea"], ["Bacau"], ["Pitesti"], ["Arad"], ["Sibiu"], ["T\u00e2rgu Mures"], ["Kigali"], ["Stockholm"], ["Gothenburg [G\u00f6teborg]"], ["Malm\u00f6"], ["Uppsala"], ["Frankfurt am Main"], ["Essen"], ["Dortmund"], ["Stuttgart"], ["D\u00fcsseldorf"], ["Bremen"], ["Duisburg"], ["Hannover"], ["Leipzig"], ["N\u00fcrnberg"], ["Dresden"], ["Bochum"], ["Wuppertal"], ["Bielefeld"], ["Mannheim"], ["Bonn"], ["Gelsenkirchen"], ["Karlsruhe"], ["Wiesbaden"], ["M\u00fcnster"], ["M\u00f6nchengladbach"], ["Chemnitz"], ["Augsburg"], ["Halle/Saale"], ["Braunschweig"], ["Aachen"], ["Krefeld"], ["Magdeburg"], ["Kiel"], ["Oberhausen"], ["L\u00fcbeck"], ["Hagen"], ["Rostock"], ["Freiburg im Breisgau"], ["Erfurt"], ["Kassel"], ["Saarbr\u00fccken"], ["Mainz"], ["Hamm"], ["Herne"], ["M\u00fclheim an der Ruhr"], ["Solingen"], ["Osnabr\u00fcck"], ["Ludwigshafen am Rhein"], ["Leverkusen"], ["Ndola"], ["Kitwe"], ["Medina"], ["al-Dammam"], ["al-Taif"], ["Tabuk"], ["Burayda"], ["al-Hufuf"], ["al-Mubarraz"], ["Khamis Mushayt"], ["Hail"], ["Pikine"], ["Dakar"], ["Thi\u00e8s"], ["Kaolack"], ["Ziguinchor"], ["Freetown"], ["Bratislava"], ["Ko\u0161ice"], ["Ljubljana"], ["Colombo"], ["Dehiwala"], ["Moratuwa"], ["Sharq al-Nil"], ["Port Sudan"], ["Kassala"], ["Obeid"], ["Nyala"], ["Wad Madani"], ["al-Qadarif"], ["Kusti"], ["Helsinki [Helsingfors]"], ["Espoo"], ["Tampere"], ["Vantaa"], ["Turku [\u00c5bo]"], ["Z\u00fcrich"], ["Geneve"], ["Basel"], ["Hims"], ["Hama"], ["Latakia"], ["Dushanbe"], ["Khujand"], ["Tainan"], ["Panchiao"], ["Chungho"], ["Keelung (Chilung)"], ["Sanchung"], ["Hsinchuang"], ["Hsinchu"], ["Chungli"], ["Fengshan"], ["Taoyuan"], ["Chiayi"], ["Hsintien"], ["Changhwa"], ["Yungho"], ["Tucheng"], ["Pingtung"], ["Yungkang"], ["Pingchen"], ["Tali"], ["Taiping"], ["Pate"], ["Fengyuan"], ["Luchou"], ["Dodoma"], ["Mwanza"], ["K\u00f8benhavn"], ["\u00c5rhus"], ["Odense"], ["Aalborg"], ["Nonthaburi"], ["Nakhon Ratchasima"], ["Chiang Mai"], ["Lom\u00e9"], ["N\u00b4Djam\u00e9na"], ["Brno"], ["Ostrava"], ["Plzen"], ["Tunis"], ["Sfax"], ["Ariana"], ["Ettadhamen"], ["Gaziantep"], ["Konya"], ["Mersin (I\u00e7el)"], ["Antalya"], ["Diyarbakir"], ["Kayseri"], ["Eskisehir"], ["Sanliurfa"], ["Samsun"], ["Malatya"], ["Gebze"], ["Denizli"], ["Sivas"], ["Erzurum"], ["Tarsus"], ["Kahramanmaras"], ["El\u00e2zig"], ["Van"], ["Sultanbeyli"], ["Izmit (Kocaeli)"], ["Manisa"], ["Batman"], ["Balikesir"], ["Sakarya (Adapazari)"], ["Ashgabat"], ["Ch\u00e4rjew"], ["Kampala"], ["Zaporizzja"], ["Lviv"], ["Kryvyi Rig"], ["Mykolajiv"], ["Mariupol"], ["Lugansk"], ["Vinnytsja"], ["Makijivka"], ["Herson"], ["Sevastopol"], ["Simferopol"], ["Pultava [Poltava]"], ["T\u0161ernigiv"], ["T\u0161erkasy"], ["Gorlivka"], ["Zytomyr"], ["Sumy"], ["Dniprodzerzynsk"], ["Kirovograd"], ["Hmelnytskyi"], ["T\u0161ernivtsi"], ["Rivne"], ["Krement\u0161uk"], ["Ivano-Frankivsk"], ["Ternopil"], ["Lutsk"], ["Bila Tserkva"], ["Kramatorsk"], ["Melitopol"], ["Kert\u0161"], ["Debrecen"], ["Miskolc"], ["Auckland"], ["Christchurch"], ["Manukau"], ["North Shore"], ["Waitakere"], ["Wellington"], ["Namangan"], ["Samarkand"], ["Andijon"], ["Buhoro"], ["Karsi"], ["Nukus"], ["K\u00fckon"], ["Fargona"], ["Gomel"], ["Mogiljov"], ["Vitebsk"], ["Grodno"], ["Brest"], ["Bobruisk"], ["Baranovit\u0161i"], ["Barquisimeto"], ["Valencia"], ["Ciudad Guayana"], ["Petare"], ["Maracay"], ["Barcelona"], ["Matur\u00edn"], ["San Crist\u00f3bal"], ["Ciudad Bol\u00edvar"], ["Cuman\u00e1"], ["M\u00e9rida"], ["Cabimas"], ["Barinas"], ["Turmero"], ["Baruta"], ["Puerto Cabello"], ["Santa Ana de Coro"], ["Los Teques"], ["Punto Fijo"], ["Guarenas"], ["Krasnojarsk"], ["Saratov"], ["Toljatti"], ["Uljanovsk"], ["Izevsk"], ["Krasnodar"], ["Jaroslavl"], ["Habarovsk"], ["Vladivostok"], ["Irkutsk"], ["Barnaul"], ["Novokuznetsk"], ["Penza"], ["Rjazan"], ["Orenburg"], ["Lipetsk"], ["Nabereznyje T\u0161elny"], ["Tula"], ["Tjumen"], ["Kemerovo"], ["Astrahan"], ["Tomsk"], ["Kirov"], ["Ivanovo"], ["T\u0161eboksary"], ["Brjansk"], ["Tver"], ["Kursk"], ["Magnitogorsk"], ["Kaliningrad"], ["Nizni Tagil"], ["Murmansk"], ["Ulan-Ude"], ["Kurgan"], ["Arkangeli"], ["Sot\u0161i"], ["Smolensk"], ["Orjol"], ["Stavropol"], ["Belgorod"], ["Kaluga"], ["Vladimir"], ["Mahat\u0161kala"], ["T\u0161erepovets"], ["Saransk"], ["Tambov"], ["Vladikavkaz"], ["T\u0161ita"], ["Vologda"], ["Veliki Novgorod"], ["Komsomolsk-na-Amure"], ["Kostroma"], ["Volzski"], ["Taganrog"], ["Petroskoi"], ["Bratsk"], ["Dzerzinsk"], ["Surgut"], ["Orsk"], ["Sterlitamak"], ["Angarsk"], ["Jo\u0161kar-Ola"], ["Rybinsk"], ["Prokopjevsk"], ["Niznevartovsk"], ["Nalt\u0161ik"], ["Syktyvkar"], ["Severodvinsk"], ["Bijsk"], ["Niznekamsk"], ["Blagove\u0161t\u0161ensk"], ["\u0160ahty"], ["Staryi Oskol"], ["Zelenograd"], ["Balakovo"], ["Novorossijsk"], ["Pihkova"], ["Zlatoust"], ["Jakutsk"], ["Podolsk"], ["Petropavlovsk-Kamt\u0161atski"], ["Kamensk-Uralski"], ["Engels"], ["Syzran"], ["Grozny"], ["Novot\u0161erkassk"], ["Berezniki"], ["Juzno-Sahalinsk"], ["Volgodonsk"], ["Abakan"], ["Maikop"], ["Miass"], ["Armavir"], ["Ljubertsy"], ["Rubtsovsk"], ["Haiphong"], ["Da Nang"], ["Bi\u00ean Hoa"], ["Nha Trang"], ["Hue"], ["Can Tho"], ["Cam Pha"], ["Nam Dinh"], ["Quy Nhon"], ["Tallinn"], ["San Jose"], ["Indianapolis"], ["San Francisco"], ["Jacksonville"], ["Columbus"], ["Austin"], ["Baltimore"], ["Memphis"], ["Milwaukee"], ["Boston"], ["Washington"], ["Nashville-Davidson"], ["El Paso"], ["Seattle"], ["Denver"], ["Charlotte"], ["Fort Worth"], ["Portland"], ["Oklahoma City"], ["Tucson"], ["New Orleans"], ["Las Vegas"], ["Cleveland"], ["Long Beach"], ["Albuquerque"], ["Kansas City"], ["Fresno"], ["Virginia Beach"], ["Atlanta"], ["Sacramento"], ["Oakland"], ["Mesa"], ["Tulsa"], ["Omaha"], ["Minneapolis"], ["Honolulu"], ["Miami"], ["Colorado Springs"], ["Saint Louis"], ["Wichita"], ["Santa Ana"], ["Pittsburgh"], ["Arlington"], ["Cincinnati"], ["Anaheim"], ["Toledo"], ["Tampa"], ["Buffalo"], ["Saint Paul"], ["Corpus Christi"], ["Aurora"], ["Raleigh"], ["Newark"], ["Lexington-Fayette"], ["Anchorage"], ["Louisville"], ["Riverside"], ["Saint Petersburg"], ["Bakersfield"], ["Stockton"], ["Birmingham"], ["Jersey City"], ["Norfolk"], ["Baton Rouge"], ["Hialeah"], ["Lincoln"], ["Greensboro"], ["Plano"], ["Rochester"], ["Glendale"], ["Akron"], ["Garland"], ["Madison"], ["Fort Wayne"], ["Fremont"], ["Scottsdale"], ["Montgomery"], ["Shreveport"], ["Augusta-Richmond County"], ["Lubbock"], ["Chesapeake"], ["Mobile"], ["Des Moines"], ["Grand Rapids"], ["Richmond"], ["Yonkers"], ["Spokane"], ["Glendale"], ["Tacoma"], ["Irving"], ["Huntington Beach"], ["Modesto"], ["Durham"], ["Columbus"], ["Orlando"], ["Boise City"], ["Winston-Salem"], ["San Bernardino"], ["Jackson"], ["Little Rock"], ["Salt Lake City"], ["Reno"], ["Newport News"], ["Chandler"], ["Laredo"], ["Henderson"], ["Arlington"], ["Knoxville"], ["Amarillo"], ["Providence"], ["Chula Vista"], ["Worcester"], ["Oxnard"], ["Dayton"], ["Garden Grove"], ["Oceanside"], ["Bulawayo"], ["Chitungwiza"], ["Mount Darwin"], ["Gaza"]], "trigger_words": ["Name"], "Prediction": "Name FROM city WHERE Population BETWEEN 160000 AND 900000;"}
{"db_id": "world_1", "query": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "LANGUAGE", "FROM", "countrylanguage", "GROUP", "BY", "LANGUAGE", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "language", "from", "countrylanguage", "group", "by", "language", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which language is spoken by the largest number of countries?", "question_toks": ["Which", "language", "is", "spoken", "by", "the", "largest", "number", "of", "countries", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [[0, 24, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "814", "answer_text": [["English"]], "trigger_words": ["Language"], "Prediction": "Language \nFROM countrylanguage \nGROUP BY Language \nORDER BY COUNT(DISTINCT CountryCode) DESC \nLIMIT 1;"}
{"db_id": "world_1", "query": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "LANGUAGE", "FROM", "countrylanguage", "GROUP", "BY", "LANGUAGE", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "language", "from", "countrylanguage", "group", "by", "language", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Give the language that is spoken in the most countries.", "question_toks": ["Give", "the", "language", "that", "is", "spoken", "in", "the", "most", "countries", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [[0, 24, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "815", "answer_text": [["English"]], "trigger_words": ["Language"], "Prediction": "Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1;"}
{"db_id": "world_1", "query": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode", "query_toks": ["SELECT", "LANGUAGE", ",", "CountryCode", ",", "max", "(", "Percentage", ")", "FROM", "countrylanguage", "GROUP", "BY", "CountryCode"], "query_toks_no_value": ["select", "language", ",", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "group", "by", "countrycode"], "question": "What is the language spoken by the largest percentage of people in each country?", "question_toks": ["What", "is", "the", "language", "spoken", "by", "the", "largest", "percentage", "of", "people", "in", "each", "country", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 23, false], null]], [1, [0, [0, 26, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "816", "answer_text": [["Papiamento", "ABW", 76.7], ["Pashto", "AFG", 52.4], ["Ovimbundu", "AGO", 37.2], ["English", "AIA", 0.0], ["Albaniana", "ALB", 97.9], ["Spanish", "AND", 44.6], ["Papiamento", "ANT", 86.2], ["Arabic", "ARE", 42.0], ["Spanish", "ARG", 96.8], ["Armenian", "ARM", 93.4], ["Samoan", "ASM", 90.6], ["Creole English", "ATG", 95.7], ["English", "AUS", 81.2], ["German", "AUT", 92.0], ["Azerbaijani", "AZE", 89.0], ["Kirundi", "BDI", 98.1], ["Dutch", "BEL", 59.2], ["Fon", "BEN", 39.8], ["Mossi", "BFA", 50.2], ["Bengali", "BGD", 97.7], ["Bulgariana", "BGR", 83.2], ["Arabic", "BHR", 67.7], ["Creole English", "BHS", 89.7], ["Serbo-Croatian", "BIH", 99.2], ["Belorussian", "BLR", 65.6], ["English", "BLZ", 50.8], ["English", "BMU", 100.0], ["Spanish", "BOL", 87.7], ["Portuguese", "BRA", 97.5], ["Bajan", "BRB", 95.1], ["Malay", "BRN", 45.5], ["Dzongkha", "BTN", 50.0], ["Tswana", "BWA", 75.5], ["Gbaya", "CAF", 23.8], ["English", "CAN", 60.4], ["English", "CCK", 0.0], ["German", "CHE", 63.6], ["Spanish", "CHL", 89.7], ["Chinese", "CHN", 92.0], ["Akan", "CIV", 30.0], ["Fang", "CMR", 19.7], ["Luba", "COD", 18.0], ["Kongo", "COG", 51.5], ["English", "COK", 0.0], ["Spanish", "COL", 99.0], ["Comorian", "COM", 75.0], ["Crioulo", "CPV", 100.0], ["Spanish", "CRI", 97.5], ["Spanish", "CUB", 100.0], ["Chinese", "CXR", 0.0], ["English", "CYM", 0.0], ["Greek", "CYP", 74.1], ["Czech", "CZE", 81.2], ["German", "DEU", 91.3], ["Somali", "DJI", 43.9], ["Creole English", "DMA", 100.0], ["Danish", "DNK", 93.5], ["Spanish", "DOM", 98.0], ["Arabic", "DZA", 86.0], ["Spanish", "ECU", 93.0], ["Arabic", "EGY", 98.8], ["Tigrinja", "ERI", 49.1], ["Arabic", "ESH", 100.0], ["Spanish", "ESP", 74.4], ["Estonian", "EST", 65.3], ["Oromo", "ETH", 31.0], ["Finnish", "FIN", 92.7], ["Fijian", "FJI", 50.8], ["English", "FLK", 0.0], ["French", "FRA", 93.6], ["Faroese", "FRO", 100.0], ["Trukese", "FSM", 41.6], ["Fang", "GAB", 35.8], ["English", "GBR", 97.3], ["Georgiana", "GEO", 71.7], ["Akan", "GHA", 52.4], ["English", "GIB", 88.9], ["Ful", "GIN", 38.6], ["Creole French", "GLP", 95.0], ["Malinke", "GMB", 34.1], ["Crioulo", "GNB", 36.4], ["Fang", "GNQ", 84.8], ["Greek", "GRC", 98.5], ["Creole English", "GRD", 100.0], ["Greenlandic", "GRL", 87.5], ["Spanish", "GTM", 64.7], ["Creole French", "GUF", 94.3], ["English", "GUM", 37.5], ["Creole English", "GUY", 96.4], ["Canton Chinese", "HKG", 88.7], ["Spanish", "HND", 97.2], ["Serbo-Croatian", "HRV", 95.9], ["Haiti Creole", "HTI", 100.0], ["Hungarian", "HUN", 98.5], ["Javanese", "IDN", 39.4], ["Hindi", "IND", 39.9], ["English", "IRL", 98.4], ["Persian", "IRN", 45.7], ["Arabic", "IRQ", 77.2], ["Icelandic", "ISL", 95.7], ["Hebrew", "ISR", 63.1], ["Italian", "ITA", 94.1], ["Creole English", "JAM", 94.2], ["Arabic", "JOR", 97.9], ["Japanese", "JPN", 99.1], ["Kazakh", "KAZ", 46.0], ["Kikuyu", "KEN", 20.9], ["Kirgiz", "KGZ", 59.7], ["Khmer", "KHM", 88.6], ["Kiribati", "KIR", 98.9], ["Creole English", "KNA", 100.0], ["Korean", "KOR", 99.9], ["Arabic", "KWT", 78.1], ["Lao", "LAO", 67.2], ["Arabic", "LBN", 93.0], ["Kpelle", "LBR", 19.5], ["Arabic", "LBY", 96.0], ["Creole French", "LCA", 80.0], ["German", "LIE", 89.0], ["Singali", "LKA", 60.3], ["Sotho", "LSO", 85.0], ["Lithuanian", "LTU", 81.6], ["Luxembourgish", "LUX", 64.4], ["Latvian", "LVA", 55.1], ["Canton Chinese", "MAC", 85.6], ["Arabic", "MAR", 65.0], ["French", "MCO", 41.9], ["Romanian", "MDA", 61.9], ["Malagasy", "MDG", 98.9], ["Dhivehi", "MDV", 100.0], ["Spanish", "MEX", 92.1], ["Marshallese", "MHL", 96.8], ["Macedonian", "MKD", 66.5], ["Bambara", "MLI", 31.8], ["Maltese", "MLT", 95.8], ["Burmese", "MMR", 69.0], ["Mongolian", "MNG", 78.8], ["Philippene Languages", "MNP", 34.1], ["Makua", "MOZ", 27.8], ["Hassaniya", "MRT", 81.7], ["English", "MSR", 0.0], ["Creole French", "MTQ", 96.6], ["Creole French", "MUS", 70.6], ["Chichewa", "MWI", 58.3], ["Malay", "MYS", 58.4], ["Mahor\u00e9", "MYT", 41.9], ["Ovambo", "NAM", 50.7], ["Malenasian Languages", "NCL", 45.4], ["Hausa", "NER", 53.1], ["English", "NFK", 0.0], ["Joruba", "NGA", 21.4], ["Spanish", "NIC", 97.6], ["English", "NIU", 0.0], ["Dutch", "NLD", 95.6], ["Norwegian", "NOR", 96.6], ["Nepali", "NPL", 50.4], ["Nauru", "NRU", 57.5], ["English", "NZL", 87.0], ["Arabic", "OMN", 76.7], ["Punjabi", "PAK", 48.2], ["Spanish", "PAN", 76.8], ["Pitcairnese", "PCN", 0.0], ["Spanish", "PER", 79.8], ["Pilipino", "PHL", 29.3], ["Palau", "PLW", 82.2], ["Papuan Languages", "PNG", 78.1], ["Polish", "POL", 97.6], ["Spanish", "PRI", 51.3], ["Korean", "PRK", 99.9], ["Portuguese", "PRT", 99.0], ["Spanish", "PRY", 55.1], ["Arabic", "PSE", 95.9], ["Tahitian", "PYF", 46.4], ["Arabic", "QAT", 40.7], ["Creole French", "REU", 91.5], ["Romanian", "ROM", 90.7], ["Russian", "RUS", 86.6], ["Rwanda", "RWA", 100.0], ["Arabic", "SAU", 95.0], ["Arabic", "SDN", 49.4], ["Wolof", "SEN", 48.1], ["Chinese", "SGP", 77.1], ["English", "SHN", 0.0], ["Norwegian", "SJM", 0.0], ["Malenasian Languages", "SLB", 85.6], ["Mende", "SLE", 34.8], ["Spanish", "SLV", 100.0], ["Italian", "SMR", 100.0], ["Somali", "SOM", 98.3], ["French", "SPM", 0.0], ["Crioulo", "STP", 86.3], ["Sranantonga", "SUR", 81.0], ["Slovak", "SVK", 85.6], ["Slovene", "SVN", 87.9], ["Swedish", "SWE", 89.5], ["Swazi", "SWZ", 89.9], ["Seselwa", "SYC", 91.3], ["Arabic", "SYR", 90.0], ["English", "TCA", 0.0], ["Sara", "TCD", 27.7], ["Ewe", "TGO", 23.2], ["Thai", "THA", 52.6], ["Tadzhik", "TJK", 62.2], ["English", "TKL", 0.0], ["Turkmenian", "TKM", 76.7], ["Portuguese", "TMP", 0.0], ["Tongan", "TON", 98.3], ["English", "TTO", 93.5], ["Arabic", "TUN", 69.9], ["Turkish", "TUR", 87.6], ["Tuvalu", "TUV", 92.5], ["Min", "TWN", 66.7], ["Nyamwesi", "TZA", 21.1], ["Ganda", "UGA", 18.1], ["Ukrainian", "UKR", 64.7], ["English", "UMI", 0.0], ["Spanish", "URY", 95.7], ["English", "USA", 86.2], ["Uzbek", "UZB", 72.6], ["Italian", "VAT", 0.0], ["Creole English", "VCT", 99.1], ["Spanish", "VEN", 96.9], ["English", "VGB", 0.0], ["English", "VIR", 81.7], ["Vietnamese", "VNM", 86.8], ["Bislama", "VUT", 56.6], ["Futuna", "WLF", 0.0], ["Samoan-English", "WSM", 52.0], ["Arabic", "YEM", 99.6], ["Serbo-Croatian", "YUG", 75.2], ["Zulu", "ZAF", 22.7], ["Bemba", "ZMB", 29.7], ["Shona", "ZWE", 72.1]], "trigger_words": ["Language", "Country Code", "Maximal Number"], "Prediction": "country.Name, countrylanguage.Language \n FROM country \n JOIN countrylanguage ON country.Code=countrylanguage.CountryCode \n WHERE countrylanguage.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode=country.Code) \n ORDER BY country.Name ASC;"}
{"db_id": "world_1", "query": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode", "query_toks": ["SELECT", "LANGUAGE", ",", "CountryCode", ",", "max", "(", "Percentage", ")", "FROM", "countrylanguage", "GROUP", "BY", "CountryCode"], "query_toks_no_value": ["select", "language", ",", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "group", "by", "countrycode"], "question": "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?", "question_toks": ["What", "are", "the", "country", "codes", "of", "the", "different", "countries", ",", "and", "what", "are", "the", "languages", "spoken", "by", "the", "greatest", "percentage", "of", "people", "for", "each", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 23, false], null]], [1, [0, [0, 26, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "817", "answer_text": [["Papiamento", "ABW", 76.7], ["Pashto", "AFG", 52.4], ["Ovimbundu", "AGO", 37.2], ["English", "AIA", 0.0], ["Albaniana", "ALB", 97.9], ["Spanish", "AND", 44.6], ["Papiamento", "ANT", 86.2], ["Arabic", "ARE", 42.0], ["Spanish", "ARG", 96.8], ["Armenian", "ARM", 93.4], ["Samoan", "ASM", 90.6], ["Creole English", "ATG", 95.7], ["English", "AUS", 81.2], ["German", "AUT", 92.0], ["Azerbaijani", "AZE", 89.0], ["Kirundi", "BDI", 98.1], ["Dutch", "BEL", 59.2], ["Fon", "BEN", 39.8], ["Mossi", "BFA", 50.2], ["Bengali", "BGD", 97.7], ["Bulgariana", "BGR", 83.2], ["Arabic", "BHR", 67.7], ["Creole English", "BHS", 89.7], ["Serbo-Croatian", "BIH", 99.2], ["Belorussian", "BLR", 65.6], ["English", "BLZ", 50.8], ["English", "BMU", 100.0], ["Spanish", "BOL", 87.7], ["Portuguese", "BRA", 97.5], ["Bajan", "BRB", 95.1], ["Malay", "BRN", 45.5], ["Dzongkha", "BTN", 50.0], ["Tswana", "BWA", 75.5], ["Gbaya", "CAF", 23.8], ["English", "CAN", 60.4], ["English", "CCK", 0.0], ["German", "CHE", 63.6], ["Spanish", "CHL", 89.7], ["Chinese", "CHN", 92.0], ["Akan", "CIV", 30.0], ["Fang", "CMR", 19.7], ["Luba", "COD", 18.0], ["Kongo", "COG", 51.5], ["English", "COK", 0.0], ["Spanish", "COL", 99.0], ["Comorian", "COM", 75.0], ["Crioulo", "CPV", 100.0], ["Spanish", "CRI", 97.5], ["Spanish", "CUB", 100.0], ["Chinese", "CXR", 0.0], ["English", "CYM", 0.0], ["Greek", "CYP", 74.1], ["Czech", "CZE", 81.2], ["German", "DEU", 91.3], ["Somali", "DJI", 43.9], ["Creole English", "DMA", 100.0], ["Danish", "DNK", 93.5], ["Spanish", "DOM", 98.0], ["Arabic", "DZA", 86.0], ["Spanish", "ECU", 93.0], ["Arabic", "EGY", 98.8], ["Tigrinja", "ERI", 49.1], ["Arabic", "ESH", 100.0], ["Spanish", "ESP", 74.4], ["Estonian", "EST", 65.3], ["Oromo", "ETH", 31.0], ["Finnish", "FIN", 92.7], ["Fijian", "FJI", 50.8], ["English", "FLK", 0.0], ["French", "FRA", 93.6], ["Faroese", "FRO", 100.0], ["Trukese", "FSM", 41.6], ["Fang", "GAB", 35.8], ["English", "GBR", 97.3], ["Georgiana", "GEO", 71.7], ["Akan", "GHA", 52.4], ["English", "GIB", 88.9], ["Ful", "GIN", 38.6], ["Creole French", "GLP", 95.0], ["Malinke", "GMB", 34.1], ["Crioulo", "GNB", 36.4], ["Fang", "GNQ", 84.8], ["Greek", "GRC", 98.5], ["Creole English", "GRD", 100.0], ["Greenlandic", "GRL", 87.5], ["Spanish", "GTM", 64.7], ["Creole French", "GUF", 94.3], ["English", "GUM", 37.5], ["Creole English", "GUY", 96.4], ["Canton Chinese", "HKG", 88.7], ["Spanish", "HND", 97.2], ["Serbo-Croatian", "HRV", 95.9], ["Haiti Creole", "HTI", 100.0], ["Hungarian", "HUN", 98.5], ["Javanese", "IDN", 39.4], ["Hindi", "IND", 39.9], ["English", "IRL", 98.4], ["Persian", "IRN", 45.7], ["Arabic", "IRQ", 77.2], ["Icelandic", "ISL", 95.7], ["Hebrew", "ISR", 63.1], ["Italian", "ITA", 94.1], ["Creole English", "JAM", 94.2], ["Arabic", "JOR", 97.9], ["Japanese", "JPN", 99.1], ["Kazakh", "KAZ", 46.0], ["Kikuyu", "KEN", 20.9], ["Kirgiz", "KGZ", 59.7], ["Khmer", "KHM", 88.6], ["Kiribati", "KIR", 98.9], ["Creole English", "KNA", 100.0], ["Korean", "KOR", 99.9], ["Arabic", "KWT", 78.1], ["Lao", "LAO", 67.2], ["Arabic", "LBN", 93.0], ["Kpelle", "LBR", 19.5], ["Arabic", "LBY", 96.0], ["Creole French", "LCA", 80.0], ["German", "LIE", 89.0], ["Singali", "LKA", 60.3], ["Sotho", "LSO", 85.0], ["Lithuanian", "LTU", 81.6], ["Luxembourgish", "LUX", 64.4], ["Latvian", "LVA", 55.1], ["Canton Chinese", "MAC", 85.6], ["Arabic", "MAR", 65.0], ["French", "MCO", 41.9], ["Romanian", "MDA", 61.9], ["Malagasy", "MDG", 98.9], ["Dhivehi", "MDV", 100.0], ["Spanish", "MEX", 92.1], ["Marshallese", "MHL", 96.8], ["Macedonian", "MKD", 66.5], ["Bambara", "MLI", 31.8], ["Maltese", "MLT", 95.8], ["Burmese", "MMR", 69.0], ["Mongolian", "MNG", 78.8], ["Philippene Languages", "MNP", 34.1], ["Makua", "MOZ", 27.8], ["Hassaniya", "MRT", 81.7], ["English", "MSR", 0.0], ["Creole French", "MTQ", 96.6], ["Creole French", "MUS", 70.6], ["Chichewa", "MWI", 58.3], ["Malay", "MYS", 58.4], ["Mahor\u00e9", "MYT", 41.9], ["Ovambo", "NAM", 50.7], ["Malenasian Languages", "NCL", 45.4], ["Hausa", "NER", 53.1], ["English", "NFK", 0.0], ["Joruba", "NGA", 21.4], ["Spanish", "NIC", 97.6], ["English", "NIU", 0.0], ["Dutch", "NLD", 95.6], ["Norwegian", "NOR", 96.6], ["Nepali", "NPL", 50.4], ["Nauru", "NRU", 57.5], ["English", "NZL", 87.0], ["Arabic", "OMN", 76.7], ["Punjabi", "PAK", 48.2], ["Spanish", "PAN", 76.8], ["Pitcairnese", "PCN", 0.0], ["Spanish", "PER", 79.8], ["Pilipino", "PHL", 29.3], ["Palau", "PLW", 82.2], ["Papuan Languages", "PNG", 78.1], ["Polish", "POL", 97.6], ["Spanish", "PRI", 51.3], ["Korean", "PRK", 99.9], ["Portuguese", "PRT", 99.0], ["Spanish", "PRY", 55.1], ["Arabic", "PSE", 95.9], ["Tahitian", "PYF", 46.4], ["Arabic", "QAT", 40.7], ["Creole French", "REU", 91.5], ["Romanian", "ROM", 90.7], ["Russian", "RUS", 86.6], ["Rwanda", "RWA", 100.0], ["Arabic", "SAU", 95.0], ["Arabic", "SDN", 49.4], ["Wolof", "SEN", 48.1], ["Chinese", "SGP", 77.1], ["English", "SHN", 0.0], ["Norwegian", "SJM", 0.0], ["Malenasian Languages", "SLB", 85.6], ["Mende", "SLE", 34.8], ["Spanish", "SLV", 100.0], ["Italian", "SMR", 100.0], ["Somali", "SOM", 98.3], ["French", "SPM", 0.0], ["Crioulo", "STP", 86.3], ["Sranantonga", "SUR", 81.0], ["Slovak", "SVK", 85.6], ["Slovene", "SVN", 87.9], ["Swedish", "SWE", 89.5], ["Swazi", "SWZ", 89.9], ["Seselwa", "SYC", 91.3], ["Arabic", "SYR", 90.0], ["English", "TCA", 0.0], ["Sara", "TCD", 27.7], ["Ewe", "TGO", 23.2], ["Thai", "THA", 52.6], ["Tadzhik", "TJK", 62.2], ["English", "TKL", 0.0], ["Turkmenian", "TKM", 76.7], ["Portuguese", "TMP", 0.0], ["Tongan", "TON", 98.3], ["English", "TTO", 93.5], ["Arabic", "TUN", 69.9], ["Turkish", "TUR", 87.6], ["Tuvalu", "TUV", 92.5], ["Min", "TWN", 66.7], ["Nyamwesi", "TZA", 21.1], ["Ganda", "UGA", 18.1], ["Ukrainian", "UKR", 64.7], ["English", "UMI", 0.0], ["Spanish", "URY", 95.7], ["English", "USA", 86.2], ["Uzbek", "UZB", 72.6], ["Italian", "VAT", 0.0], ["Creole English", "VCT", 99.1], ["Spanish", "VEN", 96.9], ["English", "VGB", 0.0], ["English", "VIR", 81.7], ["Vietnamese", "VNM", 86.8], ["Bislama", "VUT", 56.6], ["Futuna", "WLF", 0.0], ["Samoan-English", "WSM", 52.0], ["Arabic", "YEM", 99.6], ["Serbo-Croatian", "YUG", 75.2], ["Zulu", "ZAF", 22.7], ["Bemba", "ZMB", 29.7], ["Shona", "ZWE", 72.1]], "trigger_words": ["Language", "Country Code", "Maximal Number"], "Prediction": "country.Code, countrylanguage.Language\n FROM country\n JOIN countrylanguage ON country.Code = countrylanguage.CountryCode\n WHERE countrylanguage.Percentage = (\n   SELECT MAX(Percentage)\n   FROM countrylanguage\n   WHERE CountryCode = country.Code\n )\n ORDER BY country.Code;"}
{"db_id": "world_1", "query": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "max", "(", "Percentage", ")", "FROM", "countrylanguage", "WHERE", "LANGUAGE", "=", "``", "Spanish", "''", "GROUP", "BY", "CountryCode"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "value", "group", "by", "countrycode"], "question": "What is the total number of countries where Spanish is spoken by the largest percentage of people?", "question_toks": ["What", "is", "the", "total", "number", "of", "countries", "where", "Spanish", "is", "spoken", "by", "the", "largest", "percentage", "of", "people", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [1, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Spanish\"", null]], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "818", "answer_text": [[1, 7.4], [1, 44.6], [1, 96.8], [1, 31.6], [1, 87.7], [1, 0.7], [1, 89.7], [1, 99.0], [1, 97.5], [1, 100.0], [1, 98.0], [1, 93.0], [1, 74.4], [1, 0.4], [1, 64.7], [1, 97.2], [1, 92.1], [1, 97.6], [1, 76.8], [1, 79.8], [1, 51.3], [1, 55.1], [1, 100.0], [1, 0.6], [1, 95.7], [1, 7.5], [1, 96.9], [1, 13.3]], "trigger_words": ["Number", "Maximal Number"], "Prediction": "COUNT(DISTINCT countrylanguage.CountryCode) \nFROM countrylanguage \nWHERE Language = 'Spanish' AND Percentage = (\n    SELECT MAX(Percentage) \n    FROM countrylanguage \n    WHERE Language = 'Spanish'\n);"}
{"db_id": "world_1", "query": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "max", "(", "Percentage", ")", "FROM", "countrylanguage", "WHERE", "LANGUAGE", "=", "``", "Spanish", "''", "GROUP", "BY", "CountryCode"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "value", "group", "by", "countrycode"], "question": "Count the number of countries for which Spanish is the predominantly spoken language.", "question_toks": ["Count", "the", "number", "of", "countries", "for", "which", "Spanish", "is", "the", "predominantly", "spoken", "language", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [1, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Spanish\"", null]], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "819", "answer_text": [[1, 7.4], [1, 44.6], [1, 96.8], [1, 31.6], [1, 87.7], [1, 0.7], [1, 89.7], [1, 99.0], [1, 97.5], [1, 100.0], [1, 98.0], [1, 93.0], [1, 74.4], [1, 0.4], [1, 64.7], [1, 97.2], [1, 92.1], [1, 97.6], [1, 76.8], [1, 79.8], [1, 51.3], [1, 55.1], [1, 100.0], [1, 0.6], [1, 95.7], [1, 7.5], [1, 96.9], [1, 13.3]], "trigger_words": ["Number", "Maximal Number"], "Prediction": "COUNT(*) FROM countrylanguage WHERE Language='Spanish' AND IsOfficial='T' AND Percentage>50;"}
{"db_id": "world_1", "query": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "query_toks": ["SELECT", "CountryCode", ",", "max", "(", "Percentage", ")", "FROM", "countrylanguage", "WHERE", "LANGUAGE", "=", "``", "Spanish", "''", "GROUP", "BY", "CountryCode"], "query_toks_no_value": ["select", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "value", "group", "by", "countrycode"], "question": "What are the codes of countries where Spanish is spoken by the largest percentage of people?", "question_toks": ["What", "are", "the", "codes", "of", "countries", "where", "Spanish", "is", "spoken", "by", "the", "largest", "percentage", "of", "people", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]], [1, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Spanish\"", null]], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "820", "answer_text": [["ABW", 7.4], ["AND", 44.6], ["ARG", 96.8], ["BLZ", 31.6], ["BOL", 87.7], ["CAN", 0.7], ["CHL", 89.7], ["COL", 99.0], ["CRI", 97.5], ["CUB", 100.0], ["DOM", 98.0], ["ECU", 93.0], ["ESP", 74.4], ["FRA", 0.4], ["GTM", 64.7], ["HND", 97.2], ["MEX", 92.1], ["NIC", 97.6], ["PAN", 76.8], ["PER", 79.8], ["PRI", 51.3], ["PRY", 55.1], ["SLV", 100.0], ["SWE", 0.6], ["URY", 95.7], ["USA", 7.5], ["VEN", 96.9], ["VIR", 13.3]], "trigger_words": ["Country Code", "Maximal Number"], "Prediction": "country.Code \nFROM country \nJOIN countrylanguage ON country.Code=countrylanguage.CountryCode \nWHERE countrylanguage.Language='Spanish' \nORDER BY countrylanguage.Percentage DESC \nLIMIT 1;"}
{"db_id": "world_1", "query": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "query_toks": ["SELECT", "CountryCode", ",", "max", "(", "Percentage", ")", "FROM", "countrylanguage", "WHERE", "LANGUAGE", "=", "``", "Spanish", "''", "GROUP", "BY", "CountryCode"], "query_toks_no_value": ["select", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "value", "group", "by", "countrycode"], "question": "Return the codes of countries for which Spanish is the predominantly spoken language.", "question_toks": ["Return", "the", "codes", "of", "countries", "for", "which", "Spanish", "is", "the", "predominantly", "spoken", "language", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]], [1, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Spanish\"", null]], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "821", "answer_text": [["ABW", 7.4], ["AND", 44.6], ["ARG", 96.8], ["BLZ", 31.6], ["BOL", 87.7], ["CAN", 0.7], ["CHL", 89.7], ["COL", 99.0], ["CRI", 97.5], ["CUB", 100.0], ["DOM", 98.0], ["ECU", 93.0], ["ESP", 74.4], ["FRA", 0.4], ["GTM", 64.7], ["HND", 97.2], ["MEX", 92.1], ["NIC", 97.6], ["PAN", 76.8], ["PER", 79.8], ["PRI", 51.3], ["PRY", 55.1], ["SLV", 100.0], ["SWE", 0.6], ["URY", 95.7], ["USA", 7.5], ["VEN", 96.9], ["VIR", 13.3]], "trigger_words": ["Country Code", "Maximal Number"], "Prediction": "country.Code\n FROM country\n JOIN countrylanguage ON country.Code=countrylanguage.CountryCode\n WHERE countrylanguage.Language='Spanish' AND countrylanguage.IsOfficial='T' AND countrylanguage.Percentage>=50;"}
{"db_id": "orchestra", "query": "SELECT count(*) FROM conductor", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "conductor"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "conductor"], "question": "How many conductors are there?", "question_toks": ["How", "many", "conductors", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "822", "answer_text": [[12]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM conductor;"}
{"db_id": "orchestra", "query": "SELECT count(*) FROM conductor", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "conductor"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "conductor"], "question": "Count the number of conductors.", "question_toks": ["Count", "the", "number", "of", "conductors", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "823", "answer_text": [[12]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM conductor;"}
{"db_id": "orchestra", "query": "SELECT Name FROM conductor ORDER BY Age ASC", "query_toks": ["SELECT", "Name", "FROM", "conductor", "ORDER", "BY", "Age", "ASC"], "query_toks_no_value": ["select", "name", "from", "conductor", "order", "by", "age", "asc"], "question": "List the names of conductors in ascending order of age.", "question_toks": ["List", "the", "names", "of", "conductors", "in", "ascending", "order", "of", "age", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "824", "answer_text": [["Antal Dor\u00e1ti"], ["Igor Stravinsky"], ["Colin Davis"], ["Michael Tilson Thomas"], ["Paul Jorgensen"], ["Antal Brown"], ["Charles Dutoit"], ["Seiji Ozawa"], ["Valeri Gergiev"], ["Pierre Boulez"], ["Gerard Schwarz"], ["Robert Craft"]], "trigger_words": ["Name"], "Prediction": "Name FROM conductor ORDER BY Age ASC;"}
{"db_id": "orchestra", "query": "SELECT Name FROM conductor ORDER BY Age ASC", "query_toks": ["SELECT", "Name", "FROM", "conductor", "ORDER", "BY", "Age", "ASC"], "query_toks_no_value": ["select", "name", "from", "conductor", "order", "by", "age", "asc"], "question": "What are the names of conductors, ordered by age?", "question_toks": ["What", "are", "the", "names", "of", "conductors", ",", "ordered", "by", "age", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "825", "answer_text": [["Antal Dor\u00e1ti"], ["Igor Stravinsky"], ["Colin Davis"], ["Michael Tilson Thomas"], ["Paul Jorgensen"], ["Antal Brown"], ["Charles Dutoit"], ["Seiji Ozawa"], ["Valeri Gergiev"], ["Pierre Boulez"], ["Gerard Schwarz"], ["Robert Craft"]], "trigger_words": ["Name"], "Prediction": "Name FROM conductor ORDER BY Age;"}
{"db_id": "orchestra", "query": "SELECT Name FROM conductor WHERE Nationality != 'USA'", "query_toks": ["SELECT", "Name", "FROM", "conductor", "WHERE", "Nationality", "!", "=", "'USA", "'"], "query_toks_no_value": ["select", "name", "from", "conductor", "where", "nationality", "!", "=", "value"], "question": "What are the names of conductors whose nationalities are not \"USA\"?", "question_toks": ["What", "are", "the", "names", "of", "conductors", "whose", "nationalities", "are", "not", "``", "USA", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "826", "answer_text": [["Igor Stravinsky"], ["Paul Jorgensen"], ["Charles Dutoit"], ["Pierre Boulez"], ["Robert Craft"], ["Michael Tilson Thomas"]], "trigger_words": ["Name"], "Prediction": "Name FROM conductor WHERE Nationality != \"USA\";"}
{"db_id": "orchestra", "query": "SELECT Name FROM conductor WHERE Nationality != 'USA'", "query_toks": ["SELECT", "Name", "FROM", "conductor", "WHERE", "Nationality", "!", "=", "'USA", "'"], "query_toks_no_value": ["select", "name", "from", "conductor", "where", "nationality", "!", "=", "value"], "question": "Return the names of conductors that do not have the nationality \"USA\".", "question_toks": ["Return", "the", "names", "of", "conductors", "that", "do", "not", "have", "the", "nationality", "``", "USA", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "827", "answer_text": [["Igor Stravinsky"], ["Paul Jorgensen"], ["Charles Dutoit"], ["Pierre Boulez"], ["Robert Craft"], ["Michael Tilson Thomas"]], "trigger_words": ["Name"], "Prediction": "Name FROM conductor WHERE Nationality != \"USA\";"}
{"db_id": "orchestra", "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC", "query_toks": ["SELECT", "Record_Company", "FROM", "orchestra", "ORDER", "BY", "Year_of_Founded", "DESC"], "query_toks_no_value": ["select", "record_company", "from", "orchestra", "order", "by", "year_of_founded", "desc"], "question": "What are the record companies of orchestras in descending order of years in which they were founded?", "question_toks": ["What", "are", "the", "record", "companies", "of", "orchestras", "in", "descending", "order", "of", "years", "in", "which", "they", "were", "founded", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 10, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "828", "answer_text": [["Columbia Masterworks"], ["Philips"], ["Philips Classics Records"], ["RCA"], ["EMI"], ["Koch Records / Naxos Records"], ["Decca Records"], ["Mercury Records"], ["Deutsche Grammophon"], ["Kultur"], ["Decca Records"], ["Delos Records"]], "trigger_words": ["Record Company"], "Prediction": "Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;"}
{"db_id": "orchestra", "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC", "query_toks": ["SELECT", "Record_Company", "FROM", "orchestra", "ORDER", "BY", "Year_of_Founded", "DESC"], "query_toks_no_value": ["select", "record_company", "from", "orchestra", "order", "by", "year_of_founded", "desc"], "question": "Return the record companies of orchestras, sorted descending by the years in which they were founded.", "question_toks": ["Return", "the", "record", "companies", "of", "orchestras", ",", "sorted", "descending", "by", "the", "years", "in", "which", "they", "were", "founded", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 10, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "829", "answer_text": [["Columbia Masterworks"], ["Philips"], ["Philips Classics Records"], ["RCA"], ["EMI"], ["Koch Records / Naxos Records"], ["Decca Records"], ["Mercury Records"], ["Deutsche Grammophon"], ["Kultur"], ["Decca Records"], ["Delos Records"]], "trigger_words": ["Record Company"], "Prediction": "Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;"}
{"db_id": "orchestra", "query": "SELECT avg(Attendance) FROM SHOW", "query_toks": ["SELECT", "avg", "(", "Attendance", ")", "FROM", "SHOW"], "query_toks_no_value": ["select", "avg", "(", "attendance", ")", "from", "show"], "question": "What is the average attendance of shows?", "question_toks": ["What", "is", "the", "average", "attendance", "of", "shows", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[5, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "830", "answer_text": [[1326.4]], "trigger_words": ["Average Number"], "Prediction": "AVG(Attendance) FROM show;"}
{"db_id": "orchestra", "query": "SELECT avg(Attendance) FROM SHOW", "query_toks": ["SELECT", "avg", "(", "Attendance", ")", "FROM", "SHOW"], "query_toks_no_value": ["select", "avg", "(", "attendance", ")", "from", "show"], "question": "Return the average attendance across all shows.", "question_toks": ["Return", "the", "average", "attendance", "across", "all", "shows", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[5, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "831", "answer_text": [[1326.4]], "trigger_words": ["Average Number"], "Prediction": "AVG(Attendance) FROM show;"}
{"db_id": "orchestra", "query": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"", "query_toks": ["SELECT", "max", "(", "SHARE", ")", ",", "min", "(", "SHARE", ")", "FROM", "performance", "WHERE", "TYPE", "!", "=", "``", "Live", "final", "''"], "query_toks_no_value": ["select", "max", "(", "share", ")", ",", "min", "(", "share", ")", "from", "performance", "where", "type", "!", "=", "value"], "question": "What are the maximum and minimum share of performances whose type is not \"Live final\".", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "share", "of", "performances", "whose", "type", "is", "not", "``", "Live", "final", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 18, false], null]], [2, [0, [0, 18, false], null]]]], "where": [[false, 7, [0, [0, 14, false], null], "\"Live final\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "832", "answer_text": [["44.7%", "22.7%"]], "trigger_words": ["Maximal Number", "Minimal Number"], "Prediction": "MAX(Share), MIN(Share) FROM performance WHERE Type != \"Live final\";"}
{"db_id": "orchestra", "query": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"", "query_toks": ["SELECT", "max", "(", "SHARE", ")", ",", "min", "(", "SHARE", ")", "FROM", "performance", "WHERE", "TYPE", "!", "=", "``", "Live", "final", "''"], "query_toks_no_value": ["select", "max", "(", "share", ")", ",", "min", "(", "share", ")", "from", "performance", "where", "type", "!", "=", "value"], "question": "Return the maximum and minimum shares for performances that do not have the type \"Live final\".", "question_toks": ["Return", "the", "maximum", "and", "minimum", "shares", "for", "performances", "that", "do", "not", "have", "the", "type", "``", "Live", "final", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 18, false], null]], [2, [0, [0, 18, false], null]]]], "where": [[false, 7, [0, [0, 14, false], null], "\"Live final\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "833", "answer_text": [["44.7%", "22.7%"]], "trigger_words": ["Maximal Number", "Minimal Number"], "Prediction": "MAX(Share), MIN(Share) FROM performance WHERE Type != \"Live final\";"}
{"db_id": "orchestra", "query": "SELECT count(DISTINCT Nationality) FROM conductor", "query_toks": ["SELECT", "count", "(", "DISTINCT", "Nationality", ")", "FROM", "conductor"], "query_toks_no_value": ["select", "count", "(", "distinct", "nationality", ")", "from", "conductor"], "question": "How many different nationalities do conductors have?", "question_toks": ["How", "many", "different", "nationalities", "do", "conductors", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 4, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "834", "answer_text": [[3]], "trigger_words": ["Number Of Nationality"], "Prediction": "COUNT(DISTINCT Nationality) FROM conductor;"}
{"db_id": "orchestra", "query": "SELECT count(DISTINCT Nationality) FROM conductor", "query_toks": ["SELECT", "count", "(", "DISTINCT", "Nationality", ")", "FROM", "conductor"], "query_toks_no_value": ["select", "count", "(", "distinct", "nationality", ")", "from", "conductor"], "question": "Count the number of different nationalities of conductors.", "question_toks": ["Count", "the", "number", "of", "different", "nationalities", "of", "conductors", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 4, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "835", "answer_text": [[3]], "trigger_words": ["Number Of Nationality"], "Prediction": "COUNT(DISTINCT Nationality) FROM conductor;"}
{"db_id": "orchestra", "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC", "query_toks": ["SELECT", "Name", "FROM", "conductor", "ORDER", "BY", "Year_of_Work", "DESC"], "query_toks_no_value": ["select", "name", "from", "conductor", "order", "by", "year_of_work", "desc"], "question": "List names of conductors in descending order of years of work.", "question_toks": ["List", "names", "of", "conductors", "in", "descending", "order", "of", "years", "of", "work", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "836", "answer_text": [["Robert Craft"], ["Antal Brown"], ["Gerard Schwarz"], ["Valeri Gergiev"], ["Charles Dutoit"], ["Michael Tilson Thomas"], ["Igor Stravinsky"], ["Paul Jorgensen"], ["Pierre Boulez"], ["Antal Dor\u00e1ti"], ["Seiji Ozawa"], ["Colin Davis"]], "trigger_words": ["Name"], "Prediction": "Name FROM conductor ORDER BY Year_of_Work DESC;"}
{"db_id": "orchestra", "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC", "query_toks": ["SELECT", "Name", "FROM", "conductor", "ORDER", "BY", "Year_of_Work", "DESC"], "query_toks_no_value": ["select", "name", "from", "conductor", "order", "by", "year_of_work", "desc"], "question": "What are the names of conductors, sorted descending by the number of years they have worked?", "question_toks": ["What", "are", "the", "names", "of", "conductors", ",", "sorted", "descending", "by", "the", "number", "of", "years", "they", "have", "worked", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "837", "answer_text": [["Robert Craft"], ["Antal Brown"], ["Gerard Schwarz"], ["Valeri Gergiev"], ["Charles Dutoit"], ["Michael Tilson Thomas"], ["Igor Stravinsky"], ["Paul Jorgensen"], ["Pierre Boulez"], ["Antal Dor\u00e1ti"], ["Seiji Ozawa"], ["Colin Davis"]], "trigger_words": ["Name"], "Prediction": "Name FROM conductor ORDER BY Year_of_Work DESC;"}
{"db_id": "orchestra", "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1", "query_toks": ["SELECT", "Name", "FROM", "conductor", "ORDER", "BY", "Year_of_Work", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "conductor", "order", "by", "year_of_work", "desc", "limit", "value"], "question": "List the name of the conductor with the most years of work.", "question_toks": ["List", "the", "name", "of", "the", "conductor", "with", "the", "most", "years", "of", "work", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "838", "answer_text": [["Robert Craft"]], "trigger_words": ["Name"], "Prediction": "Name FROM conductor\nWHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);"}
{"db_id": "orchestra", "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1", "query_toks": ["SELECT", "Name", "FROM", "conductor", "ORDER", "BY", "Year_of_Work", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "conductor", "order", "by", "year_of_work", "desc", "limit", "value"], "question": "What is the name of the conductor who has worked the greatest number of years?", "question_toks": ["What", "is", "the", "name", "of", "the", "conductor", "who", "has", "worked", "the", "greatest", "number", "of", "years", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "839", "answer_text": [["Robert Craft"]], "trigger_words": ["Name"], "Prediction": "conductor.Name \nFROM conductor \nWHERE conductor.Year_of_Work = (\n    SELECT MAX(conductor.Year_of_Work) \n    FROM conductor\n)"}
{"db_id": "orchestra", "query": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Orchestra", "FROM", "conductor", "AS", "T1", "JOIN", "orchestra", "AS", "T2", "ON", "T1.Conductor_ID", "=", "T2.Conductor_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "orchestra", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1", ".", "conductor_id", "=", "t2", ".", "conductor_id"], "question": "Show the names of conductors and the orchestras they have conducted.", "question_toks": ["Show", "the", "names", "of", "conductors", "and", "the", "orchestras", "they", "have", "conducted", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "840", "answer_text": [["Antal Dor\u00e1ti", "London Symphony Orchestra"], ["Igor Stravinsky", "Columbia Symphony Orchestra"], ["Colin Davis", "Royal Concertgebouw Orchestra"], ["Paul Jorgensen", "Royal Danish Orchestra"], ["Antal Brown", "Detroit Symphony Orchestra"], ["Charles Dutoit", "Montreal Symphony Orchestra"], ["Gerard Schwarz", "Seattle Symphony Orchestra"], ["Pierre Boulez", "Chicago Symphony Orchestra"], ["Valeri Gergiev", "Kirov Orchestra"], ["Robert Craft", "Philharmonia Orchestra"], ["Seiji Ozawa", "Orchestre de Paris"], ["Michael Tilson Thomas", "San Francisco Symphony Orchestra"]], "trigger_words": ["Name", "Orchestra"], "Prediction": "conductor.Name, orchestra.Orchestra\n FROM conductor\n INNER JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID;"}
{"db_id": "orchestra", "query": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Orchestra", "FROM", "conductor", "AS", "T1", "JOIN", "orchestra", "AS", "T2", "ON", "T1.Conductor_ID", "=", "T2.Conductor_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "orchestra", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1", ".", "conductor_id", "=", "t2", ".", "conductor_id"], "question": "What are the names of conductors as well as the corresonding orchestras that they have conducted?", "question_toks": ["What", "are", "the", "names", "of", "conductors", "as", "well", "as", "the", "corresonding", "orchestras", "that", "they", "have", "conducted", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "841", "answer_text": [["Antal Dor\u00e1ti", "London Symphony Orchestra"], ["Igor Stravinsky", "Columbia Symphony Orchestra"], ["Colin Davis", "Royal Concertgebouw Orchestra"], ["Paul Jorgensen", "Royal Danish Orchestra"], ["Antal Brown", "Detroit Symphony Orchestra"], ["Charles Dutoit", "Montreal Symphony Orchestra"], ["Gerard Schwarz", "Seattle Symphony Orchestra"], ["Pierre Boulez", "Chicago Symphony Orchestra"], ["Valeri Gergiev", "Kirov Orchestra"], ["Robert Craft", "Philharmonia Orchestra"], ["Seiji Ozawa", "Orchestre de Paris"], ["Michael Tilson Thomas", "San Francisco Symphony Orchestra"]], "trigger_words": ["Name", "Orchestra"], "Prediction": "conductor.Name, orchestra.Orchestra\n FROM conductor\n JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID;"}
{"db_id": "orchestra", "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "T1.Name", "FROM", "conductor", "AS", "T1", "JOIN", "orchestra", "AS", "T2", "ON", "T1.Conductor_ID", "=", "T2.Conductor_ID", "GROUP", "BY", "T2.Conductor_ID", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1", ".", "conductor_id", "=", "t2", ".", "conductor_id", "group", "by", "t2", ".", "conductor_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Show the names of conductors that have conducted more than one orchestras.", "question_toks": ["Show", "the", "names", "of", "conductors", "that", "have", "conducted", "more", "than", "one", "orchestras", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "842", "answer_text": [], "trigger_words": ["Name"], "Prediction": "conductor.Name\nFROM conductor\nINNER JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID\nGROUP BY conductor.Name\nHAVING COUNT(DISTINCT orchestra.Orchestra_ID) > 1;"}
{"db_id": "orchestra", "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "T1.Name", "FROM", "conductor", "AS", "T1", "JOIN", "orchestra", "AS", "T2", "ON", "T1.Conductor_ID", "=", "T2.Conductor_ID", "GROUP", "BY", "T2.Conductor_ID", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1", ".", "conductor_id", "=", "t2", ".", "conductor_id", "group", "by", "t2", ".", "conductor_id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the names of conductors who have conducted at more than one orchestra?", "question_toks": ["What", "are", "the", "names", "of", "conductors", "who", "have", "conducted", "at", "more", "than", "one", "orchestra", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "843", "answer_text": [], "trigger_words": ["Name"], "Prediction": "conductor.Name \nFROM conductor \nINNER JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID \nGROUP BY conductor.Conductor_ID \nHAVING COUNT(DISTINCT orchestra.Orchestra_ID) > 1;"}
{"db_id": "orchestra", "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Name", "FROM", "conductor", "AS", "T1", "JOIN", "orchestra", "AS", "T2", "ON", "T1.Conductor_ID", "=", "T2.Conductor_ID", "GROUP", "BY", "T2.Conductor_ID", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1", ".", "conductor_id", "=", "t2", ".", "conductor_id", "group", "by", "t2", ".", "conductor_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the name of the conductor that has conducted the most number of orchestras.", "question_toks": ["Show", "the", "name", "of", "the", "conductor", "that", "has", "conducted", "the", "most", "number", "of", "orchestras", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "844", "answer_text": [["Michael Tilson Thomas"]], "trigger_words": ["Name"], "Prediction": "conductor.Name\nFROM conductor\nJOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID\nGROUP BY conductor.Conductor_ID\nORDER BY COUNT(orchestra.Orchestra_ID) DESC\nLIMIT 1;"}
{"db_id": "orchestra", "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Name", "FROM", "conductor", "AS", "T1", "JOIN", "orchestra", "AS", "T2", "ON", "T1.Conductor_ID", "=", "T2.Conductor_ID", "GROUP", "BY", "T2.Conductor_ID", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1", ".", "conductor_id", "=", "t2", ".", "conductor_id", "group", "by", "t2", ".", "conductor_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the conductor who has conducted the most orchestras?", "question_toks": ["What", "is", "the", "name", "of", "the", "conductor", "who", "has", "conducted", "the", "most", "orchestras", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "845", "answer_text": [["Michael Tilson Thomas"]], "trigger_words": ["Name"], "Prediction": "conductor.Name\nFROM conductor\nJOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID\nGROUP BY conductor.Conductor_ID\nORDER BY COUNT(orchestra.Orchestra_ID) DESC\nLIMIT 1;"}
{"db_id": "orchestra", "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008", "query_toks": ["SELECT", "T1.Name", "FROM", "conductor", "AS", "T1", "JOIN", "orchestra", "AS", "T2", "ON", "T1.Conductor_ID", "=", "T2.Conductor_ID", "WHERE", "Year_of_Founded", ">", "2008"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1", ".", "conductor_id", "=", "t2", ".", "conductor_id", "where", "year_of_founded", ">", "value"], "question": "Please show the name of the conductor that has conducted orchestras founded after 2008.", "question_toks": ["Please", "show", "the", "name", "of", "the", "conductor", "that", "has", "conducted", "orchestras", "founded", "after", "2008", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 2008.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "846", "answer_text": [["Igor Stravinsky"]], "trigger_words": ["Name"], "Prediction": "conductor.Name\nFROM conductor\nJOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID\nWHERE orchestra.Year_of_Founded > 2008;"}
{"db_id": "orchestra", "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008", "query_toks": ["SELECT", "T1.Name", "FROM", "conductor", "AS", "T1", "JOIN", "orchestra", "AS", "T2", "ON", "T1.Conductor_ID", "=", "T2.Conductor_ID", "WHERE", "Year_of_Founded", ">", "2008"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1", ".", "conductor_id", "=", "t2", ".", "conductor_id", "where", "year_of_founded", ">", "value"], "question": "What are the names of conductors who have conducted orchestras founded after the year 2008?", "question_toks": ["What", "are", "the", "names", "of", "conductors", "who", "have", "conducted", "orchestras", "founded", "after", "the", "year", "2008", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 2008.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "847", "answer_text": [["Igor Stravinsky"]], "trigger_words": ["Name"], "Prediction": "conductor.Name \nFROM conductor \nJOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID \nWHERE orchestra.Year_of_Founded > 2008;"}
{"db_id": "orchestra", "query": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company", "query_toks": ["SELECT", "Record_Company", ",", "COUNT", "(", "*", ")", "FROM", "orchestra", "GROUP", "BY", "Record_Company"], "query_toks_no_value": ["select", "record_company", ",", "count", "(", "*", ")", "from", "orchestra", "group", "by", "record_company"], "question": "Please show the different record companies and the corresponding number of orchestras.", "question_toks": ["Please", "show", "the", "different", "record", "companies", "and", "the", "corresponding", "number", "of", "orchestras", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "848", "answer_text": [["Columbia Masterworks", 1], ["Decca Records", 2], ["Delos Records", 1], ["Deutsche Grammophon", 1], ["EMI", 1], ["Koch Records / Naxos Records", 1], ["Kultur", 1], ["Mercury Records", 1], ["Philips", 1], ["Philips Classics Records", 1], ["RCA", 1]], "trigger_words": ["Record Company", "Number"], "Prediction": "Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company;"}
{"db_id": "orchestra", "query": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company", "query_toks": ["SELECT", "Record_Company", ",", "COUNT", "(", "*", ")", "FROM", "orchestra", "GROUP", "BY", "Record_Company"], "query_toks_no_value": ["select", "record_company", ",", "count", "(", "*", ")", "from", "orchestra", "group", "by", "record_company"], "question": "How many orchestras does each record company manage?", "question_toks": ["How", "many", "orchestras", "does", "each", "record", "company", "manage", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "849", "answer_text": [["Columbia Masterworks", 1], ["Decca Records", 2], ["Delos Records", 1], ["Deutsche Grammophon", 1], ["EMI", 1], ["Koch Records / Naxos Records", 1], ["Kultur", 1], ["Mercury Records", 1], ["Philips", 1], ["Philips Classics Records", 1], ["RCA", 1]], "trigger_words": ["Record Company", "Number"], "Prediction": "Record_Company, COUNT(DISTINCT Orchestra_ID) \n FROM orchestra \n GROUP BY Record_Company;"}
{"db_id": "orchestra", "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC", "query_toks": ["SELECT", "Major_Record_Format", "FROM", "orchestra", "GROUP", "BY", "Major_Record_Format", "ORDER", "BY", "COUNT", "(", "*", ")", "ASC"], "query_toks_no_value": ["select", "major_record_format", "from", "orchestra", "group", "by", "major_record_format", "order", "by", "count", "(", "*", ")", "asc"], "question": "Please show the record formats of orchestras in ascending order of count.", "question_toks": ["Please", "show", "the", "record", "formats", "of", "orchestras", "in", "ascending", "order", "of", "count", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "850", "answer_text": [["CD / LP"], ["DVD"], ["CD"]], "trigger_words": ["Major Record Format"], "Prediction": "Major_Record_Format, COUNT(*) AS count \n FROM orchestra \n GROUP BY Major_Record_Format \n ORDER BY count ASC;"}
{"db_id": "orchestra", "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC", "query_toks": ["SELECT", "Major_Record_Format", "FROM", "orchestra", "GROUP", "BY", "Major_Record_Format", "ORDER", "BY", "COUNT", "(", "*", ")", "ASC"], "query_toks_no_value": ["select", "major_record_format", "from", "orchestra", "group", "by", "major_record_format", "order", "by", "count", "(", "*", ")", "asc"], "question": "What are the major record formats of orchestras, sorted by their frequency?", "question_toks": ["What", "are", "the", "major", "record", "formats", "of", "orchestras", ",", "sorted", "by", "their", "frequency", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "851", "answer_text": [["CD / LP"], ["DVD"], ["CD"]], "trigger_words": ["Major Record Format"], "Prediction": "Major_Record_Format, COUNT(*) AS Frequency\n FROM orchestra\n GROUP BY Major_Record_Format\n ORDER BY Frequency DESC;"}
{"db_id": "orchestra", "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Record_Company", "FROM", "orchestra", "GROUP", "BY", "Record_Company", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "record_company", "from", "orchestra", "group", "by", "record_company", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "List the record company shared by the most number of orchestras.", "question_toks": ["List", "the", "record", "company", "shared", "by", "the", "most", "number", "of", "orchestras", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "852", "answer_text": [["Decca Records"]], "trigger_words": ["Record Company"], "Prediction": "Record_Company\nFROM orchestra\nGROUP BY Record_Company\nORDER BY COUNT(Orchestra_ID) DESC\nLIMIT 1;"}
{"db_id": "orchestra", "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Record_Company", "FROM", "orchestra", "GROUP", "BY", "Record_Company", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "record_company", "from", "orchestra", "group", "by", "record_company", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the record company used by the greatest number of orchestras?", "question_toks": ["What", "is", "the", "record", "company", "used", "by", "the", "greatest", "number", "of", "orchestras", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "853", "answer_text": [["Decca Records"]], "trigger_words": ["Record Company"], "Prediction": "Record_Company \n FROM orchestra \n GROUP BY Record_Company \n ORDER BY COUNT(*) DESC \n LIMIT 1;"}
{"db_id": "orchestra", "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)", "query_toks": ["SELECT", "Orchestra", "FROM", "orchestra", "WHERE", "Orchestra_ID", "NOT", "IN", "(", "SELECT", "Orchestra_ID", "FROM", "performance", ")"], "query_toks_no_value": ["select", "orchestra", "from", "orchestra", "where", "orchestra_id", "not", "in", "(", "select", "orchestra_id", "from", "performance", ")"], "question": "List the names of orchestras that have no performance.", "question_toks": ["List", "the", "names", "of", "orchestras", "that", "have", "no", "performance", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "854", "answer_text": [["San Francisco Symphony Orchestra"]], "trigger_words": ["Orchestra"], "Prediction": "orchestra.Orchestra\nFROM orchestra\nLEFT JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID\nWHERE performance.Performance_ID IS NULL;"}
{"db_id": "orchestra", "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)", "query_toks": ["SELECT", "Orchestra", "FROM", "orchestra", "WHERE", "Orchestra_ID", "NOT", "IN", "(", "SELECT", "Orchestra_ID", "FROM", "performance", ")"], "query_toks_no_value": ["select", "orchestra", "from", "orchestra", "where", "orchestra_id", "not", "in", "(", "select", "orchestra_id", "from", "performance", ")"], "question": "What are the orchestras that do not have any performances?", "question_toks": ["What", "are", "the", "orchestras", "that", "do", "not", "have", "any", "performances", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "855", "answer_text": [["San Francisco Symphony Orchestra"]], "trigger_words": ["Orchestra"], "Prediction": "orchestra.Orchestra\nFROM orchestra\nLEFT JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID\nWHERE performance.Performance_ID IS NULL;"}
{"db_id": "orchestra", "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003", "query_toks": ["SELECT", "Record_Company", "FROM", "orchestra", "WHERE", "Year_of_Founded", "<", "2003", "INTERSECT", "SELECT", "Record_Company", "FROM", "orchestra", "WHERE", "Year_of_Founded", ">", "2003"], "query_toks_no_value": ["select", "record_company", "from", "orchestra", "where", "year_of_founded", "<", "value", "intersect", "select", "record_company", "from", "orchestra", "where", "year_of_founded", ">", "value"], "question": "Show the record companies shared by orchestras founded before 2003 and after 2003.", "question_toks": ["Show", "the", "record", "companies", "shared", "by", "orchestras", "founded", "before", "2003", "and", "after", "2003", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 4, [0, [0, 10, false], null], 2003.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 2003.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "856", "answer_text": [["Decca Records"]], "trigger_words": ["Record Company"], "Prediction": "Record_Company \nFROM orchestra \nWHERE Year_of_Founded < 2003 \nINTERSECT \nSELECT Record_Company \nFROM orchestra \nWHERE Year_of_Founded > 2003;"}
{"db_id": "orchestra", "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003", "query_toks": ["SELECT", "Record_Company", "FROM", "orchestra", "WHERE", "Year_of_Founded", "<", "2003", "INTERSECT", "SELECT", "Record_Company", "FROM", "orchestra", "WHERE", "Year_of_Founded", ">", "2003"], "query_toks_no_value": ["select", "record_company", "from", "orchestra", "where", "year_of_founded", "<", "value", "intersect", "select", "record_company", "from", "orchestra", "where", "year_of_founded", ">", "value"], "question": "What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?", "question_toks": ["What", "are", "the", "record", "companies", "that", "are", "used", "by", "both", "orchestras", "founded", "before", "2003", "and", "those", "founded", "after", "2003", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 4, [0, [0, 10, false], null], 2003.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 2003.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "857", "answer_text": [["Decca Records"]], "trigger_words": ["Record Company"], "Prediction": "Record_Company \nFROM orchestra \nWHERE Year_of_Founded < 2003 \nINTERSECT \nSELECT Record_Company \nFROM orchestra \nWHERE Year_of_Founded > 2003;"}
{"db_id": "orchestra", "query": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "orchestra", "WHERE", "Major_Record_Format", "=", "``", "CD", "''", "OR", "Major_Record_Format", "=", "``", "DVD", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "orchestra", "where", "major_record_format", "=", "value", "or", "major_record_format", "=", "value"], "question": "Find the number of orchestras whose record format is \"CD\" or \"DVD\".", "question_toks": ["Find", "the", "number", "of", "orchestras", "whose", "record", "format", "is", "``", "CD", "''", "or", "``", "DVD", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"CD\"", null], "or", [false, 2, [0, [0, 11, false], null], "\"DVD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "858", "answer_text": [[11]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM orchestra WHERE Major_Record_Format IN (\"CD\", \"DVD\");"}
{"db_id": "orchestra", "query": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "orchestra", "WHERE", "Major_Record_Format", "=", "``", "CD", "''", "OR", "Major_Record_Format", "=", "``", "DVD", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "orchestra", "where", "major_record_format", "=", "value", "or", "major_record_format", "=", "value"], "question": "Count the number of orchestras that have CD or DVD as their record format.", "question_toks": ["Count", "the", "number", "of", "orchestras", "that", "have", "CD", "or", "DVD", "as", "their", "record", "format", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"CD\"", null], "or", [false, 2, [0, [0, 11, false], null], "\"DVD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "859", "answer_text": [[11]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');"}
{"db_id": "orchestra", "query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "Year_of_Founded", "FROM", "orchestra", "AS", "T1", "JOIN", "performance", "AS", "T2", "ON", "T1.Orchestra_ID", "=", "T2.Orchestra_ID", "GROUP", "BY", "T2.Orchestra_ID", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "year_of_founded", "from", "orchestra", "as", "t1", "join", "performance", "as", "t2", "on", "t1", ".", "orchestra_id", "=", "t2", ".", "orchestra_id", "group", "by", "t2", ".", "orchestra_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Show the years in which orchestras that have given more than one performance are founded.", "question_toks": ["Show", "the", "years", "in", "which", "orchestras", "that", "have", "given", "more", "than", "one", "performance", "are", "founded", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 13, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "860", "answer_text": [], "trigger_words": ["Year Of Founded"], "Prediction": "orchestra.Year_of_Founded\nFROM orchestra\nINNER JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID\nGROUP BY orchestra.Orchestra_ID\nHAVING COUNT(*) > 1;"}
{"db_id": "orchestra", "query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "Year_of_Founded", "FROM", "orchestra", "AS", "T1", "JOIN", "performance", "AS", "T2", "ON", "T1.Orchestra_ID", "=", "T2.Orchestra_ID", "GROUP", "BY", "T2.Orchestra_ID", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "year_of_founded", "from", "orchestra", "as", "t1", "join", "performance", "as", "t2", "on", "t1", ".", "orchestra_id", "=", "t2", ".", "orchestra_id", "group", "by", "t2", ".", "orchestra_id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are years of founding for orchestras that have had more than a single performance?", "question_toks": ["What", "are", "years", "of", "founding", "for", "orchestras", "that", "have", "had", "more", "than", "a", "single", "performance", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 13, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "861", "answer_text": [], "trigger_words": ["Year Of Founded"], "Prediction": "orchestra.Year_of_Founded\n FROM orchestra\n WHERE orchestra.Orchestra_ID IN (\n     SELECT performance.Orchestra_ID\n     FROM performance\n     GROUP BY performance.Orchestra_ID\n     HAVING COUNT(*) > 1\n );"}
{"db_id": "network_1", "query": "SELECT count(*) FROM Highschooler", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Highschooler"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "highschooler"], "question": "How many high schoolers are there?", "question_toks": ["How", "many", "high", "schoolers", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "862", "answer_text": [[16]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Highschooler;"}
{"db_id": "network_1", "query": "SELECT count(*) FROM Highschooler", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Highschooler"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "highschooler"], "question": "Count the number of high schoolers.", "question_toks": ["Count", "the", "number", "of", "high", "schoolers", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "863", "answer_text": [[16]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Highschooler;"}
{"db_id": "network_1", "query": "SELECT name ,  grade FROM Highschooler", "query_toks": ["SELECT", "name", ",", "grade", "FROM", "Highschooler"], "query_toks_no_value": ["select", "name", ",", "grade", "from", "highschooler"], "question": "Show the names and grades of each high schooler.", "question_toks": ["Show", "the", "names", "and", "grades", "of", "each", "high", "schooler", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "864", "answer_text": [["Jordan", 9], ["Gabriel", 9], ["Tiffany", 9], ["Cassandra", 9], ["Haley", 10], ["Andrew", 10], ["Kris", 10], ["Brittany", 10], ["Alexis", 11], ["Austin", 11], ["Gabriel", 11], ["Jessica", 11], ["Jordan", 12], ["John", 12], ["Kyle", 12], ["Logan", 12]], "trigger_words": ["Name", "Grade"], "Prediction": "name, grade FROM Highschooler;"}
{"db_id": "network_1", "query": "SELECT name ,  grade FROM Highschooler", "query_toks": ["SELECT", "name", ",", "grade", "FROM", "Highschooler"], "query_toks_no_value": ["select", "name", ",", "grade", "from", "highschooler"], "question": "What are the names and grades for each high schooler?", "question_toks": ["What", "are", "the", "names", "and", "grades", "for", "each", "high", "schooler", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "865", "answer_text": [["Jordan", 9], ["Gabriel", 9], ["Tiffany", 9], ["Cassandra", 9], ["Haley", 10], ["Andrew", 10], ["Kris", 10], ["Brittany", 10], ["Alexis", 11], ["Austin", 11], ["Gabriel", 11], ["Jessica", 11], ["Jordan", 12], ["John", 12], ["Kyle", 12], ["Logan", 12]], "trigger_words": ["Name", "Grade"], "Prediction": "name, grade FROM Highschooler;"}
{"db_id": "network_1", "query": "SELECT grade FROM Highschooler", "query_toks": ["SELECT", "grade", "FROM", "Highschooler"], "query_toks_no_value": ["select", "grade", "from", "highschooler"], "question": "Show all the grades of the high schoolers.", "question_toks": ["Show", "all", "the", "grades", "of", "the", "high", "schoolers", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "866", "answer_text": [[9], [9], [9], [9], [10], [10], [10], [10], [11], [11], [11], [11], [12], [12], [12], [12]], "trigger_words": ["Grade"], "Prediction": "grade FROM Highschooler;"}
{"db_id": "network_1", "query": "SELECT grade FROM Highschooler", "query_toks": ["SELECT", "grade", "FROM", "Highschooler"], "query_toks_no_value": ["select", "grade", "from", "highschooler"], "question": "What is the grade of each high schooler?", "question_toks": ["What", "is", "the", "grade", "of", "each", "high", "schooler", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "867", "answer_text": [[9], [9], [9], [9], [10], [10], [10], [10], [11], [11], [11], [11], [12], [12], [12], [12]], "trigger_words": ["Grade"], "Prediction": "grade FROM Highschooler;"}
{"db_id": "network_1", "query": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"", "query_toks": ["SELECT", "grade", "FROM", "Highschooler", "WHERE", "name", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "grade", "from", "highschooler", "where", "name", "=", "value"], "question": "What grade is Kyle in?", "question_toks": ["What", "grade", "is", "Kyle", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "868", "answer_text": [[12]], "trigger_words": ["Grade"], "Prediction": "grade FROM Highschooler WHERE name = 'Kyle';"}
{"db_id": "network_1", "query": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"", "query_toks": ["SELECT", "grade", "FROM", "Highschooler", "WHERE", "name", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "grade", "from", "highschooler", "where", "name", "=", "value"], "question": "Return the grade for the high schooler named Kyle.", "question_toks": ["Return", "the", "grade", "for", "the", "high", "schooler", "named", "Kyle", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "869", "answer_text": [[12]], "trigger_words": ["Grade"], "Prediction": "grade FROM Highschooler WHERE name = 'Kyle';"}
{"db_id": "network_1", "query": "SELECT name FROM Highschooler WHERE grade  =  10", "query_toks": ["SELECT", "name", "FROM", "Highschooler", "WHERE", "grade", "=", "10"], "query_toks_no_value": ["select", "name", "from", "highschooler", "where", "grade", "=", "value"], "question": "Show the names of all high schoolers in grade 10.", "question_toks": ["Show", "the", "names", "of", "all", "high", "schoolers", "in", "grade", "10", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "870", "answer_text": [["Haley"], ["Andrew"], ["Kris"], ["Brittany"]], "trigger_words": ["Name"], "Prediction": "name FROM Highschooler WHERE grade = 10;"}
{"db_id": "network_1", "query": "SELECT name FROM Highschooler WHERE grade  =  10", "query_toks": ["SELECT", "name", "FROM", "Highschooler", "WHERE", "grade", "=", "10"], "query_toks_no_value": ["select", "name", "from", "highschooler", "where", "grade", "=", "value"], "question": "What are the names of all high schoolers in grade 10?", "question_toks": ["What", "are", "the", "names", "of", "all", "high", "schoolers", "in", "grade", "10", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "871", "answer_text": [["Haley"], ["Andrew"], ["Kris"], ["Brittany"]], "trigger_words": ["Name"], "Prediction": "name FROM Highschooler WHERE grade = 10;"}
{"db_id": "network_1", "query": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"", "query_toks": ["SELECT", "ID", "FROM", "Highschooler", "WHERE", "name", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "id", "from", "highschooler", "where", "name", "=", "value"], "question": "Show the ID of the high schooler named Kyle.", "question_toks": ["Show", "the", "ID", "of", "the", "high", "schooler", "named", "Kyle", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "872", "answer_text": [[1934]], "trigger_words": ["Id"], "Prediction": "ID FROM Highschooler WHERE name = 'Kyle';"}
{"db_id": "network_1", "query": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"", "query_toks": ["SELECT", "ID", "FROM", "Highschooler", "WHERE", "name", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "id", "from", "highschooler", "where", "name", "=", "value"], "question": "What is Kyle's id?", "question_toks": ["What", "is", "Kyle", "'s", "id", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "873", "answer_text": [[1934]], "trigger_words": ["Id"], "Prediction": "ID FROM Highschooler WHERE name = 'Kyle';"}
{"db_id": "network_1", "query": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Highschooler", "WHERE", "grade", "=", "9", "OR", "grade", "=", "10"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "highschooler", "where", "grade", "=", "value", "or", "grade", "=", "value"], "question": "How many high schoolers are there in grade 9 or 10?", "question_toks": ["How", "many", "high", "schoolers", "are", "there", "in", "grade", "9", "or", "10", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 9.0, null], "or", [false, 2, [0, [0, 3, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "874", "answer_text": [[8]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Highschooler WHERE grade IN (9,10);"}
{"db_id": "network_1", "query": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Highschooler", "WHERE", "grade", "=", "9", "OR", "grade", "=", "10"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "highschooler", "where", "grade", "=", "value", "or", "grade", "=", "value"], "question": "Count the number of high schoolers in grades 9 or 10.", "question_toks": ["Count", "the", "number", "of", "high", "schoolers", "in", "grades", "9", "or", "10", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 9.0, null], "or", [false, 2, [0, [0, 3, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "875", "answer_text": [[8]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Highschooler WHERE grade IN (9,10);"}
{"db_id": "network_1", "query": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade", "query_toks": ["SELECT", "grade", ",", "count", "(", "*", ")", "FROM", "Highschooler", "GROUP", "BY", "grade"], "query_toks_no_value": ["select", "grade", ",", "count", "(", "*", ")", "from", "highschooler", "group", "by", "grade"], "question": "Show the number of high schoolers for each grade.", "question_toks": ["Show", "the", "number", "of", "high", "schoolers", "for", "each", "grade", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "876", "answer_text": [[9, 4], [10, 4], [11, 4], [12, 4]], "trigger_words": ["Grade", "Number"], "Prediction": "grade, COUNT(*) FROM Highschooler GROUP BY grade;"}
{"db_id": "network_1", "query": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade", "query_toks": ["SELECT", "grade", ",", "count", "(", "*", ")", "FROM", "Highschooler", "GROUP", "BY", "grade"], "query_toks_no_value": ["select", "grade", ",", "count", "(", "*", ")", "from", "highschooler", "group", "by", "grade"], "question": "How many high schoolers are in each grade?", "question_toks": ["How", "many", "high", "schoolers", "are", "in", "each", "grade", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "877", "answer_text": [[9, 4], [10, 4], [11, 4], [12, 4]], "trigger_words": ["Grade", "Number"], "Prediction": "grade, COUNT(*) FROM Highschooler GROUP BY grade;"}
{"db_id": "network_1", "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "grade", "FROM", "Highschooler", "GROUP", "BY", "grade", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "grade", "from", "highschooler", "group", "by", "grade", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which grade has the most high schoolers?", "question_toks": ["Which", "grade", "has", "the", "most", "high", "schoolers", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "878", "answer_text": [[12]], "trigger_words": ["Grade"], "Prediction": "grade FROM Highschooler\nGROUP BY grade\nORDER BY COUNT(*) DESC\nLIMIT 1;"}
{"db_id": "network_1", "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "grade", "FROM", "Highschooler", "GROUP", "BY", "grade", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "grade", "from", "highschooler", "group", "by", "grade", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the grade that has the greatest number of high schoolers.", "question_toks": ["Return", "the", "grade", "that", "has", "the", "greatest", "number", "of", "high", "schoolers", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "879", "answer_text": [[12]], "trigger_words": ["Grade"], "Prediction": "grade FROM Highschooler\n GROUP BY grade\n ORDER BY COUNT(*) DESC\n LIMIT 1;"}
{"db_id": "network_1", "query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4", "query_toks": ["SELECT", "grade", "FROM", "Highschooler", "GROUP", "BY", "grade", "HAVING", "count", "(", "*", ")", ">", "=", "4"], "query_toks_no_value": ["select", "grade", "from", "highschooler", "group", "by", "grade", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show me all grades that have at least 4 students.", "question_toks": ["Show", "me", "all", "grades", "that", "have", "at", "least", "4", "students", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 4.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "880", "answer_text": [[9], [10], [11], [12]], "trigger_words": ["Grade"], "Prediction": "grade \n FROM Highschooler \n GROUP BY grade \n HAVING COUNT(*) >= 4;"}
{"db_id": "network_1", "query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4", "query_toks": ["SELECT", "grade", "FROM", "Highschooler", "GROUP", "BY", "grade", "HAVING", "count", "(", "*", ")", ">", "=", "4"], "query_toks_no_value": ["select", "grade", "from", "highschooler", "group", "by", "grade", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Which grades have 4 or more high schoolers?", "question_toks": ["Which", "grades", "have", "4", "or", "more", "high", "schoolers", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 4.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "881", "answer_text": [[9], [10], [11], [12]], "trigger_words": ["Grade"], "Prediction": "grade FROM Highschooler\nGROUP BY grade\nHAVING COUNT(*) >= 4;"}
{"db_id": "network_1", "query": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id", "query_toks": ["SELECT", "student_id", ",", "count", "(", "*", ")", "FROM", "Friend", "GROUP", "BY", "student_id"], "query_toks_no_value": ["select", "student_id", ",", "count", "(", "*", ")", "from", "friend", "group", "by", "student_id"], "question": "Show the student IDs and numbers of friends corresponding to each.", "question_toks": ["Show", "the", "student", "IDs", "and", "numbers", "of", "friends", "corresponding", "to", "each", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "882", "answer_text": [[1101, 1], [1247, 2], [1304, 1], [1316, 1], [1381, 1], [1468, 2], [1501, 1], [1510, 2], [1661, 1], [1689, 2], [1709, 1], [1782, 3], [1911, 1], [1934, 1]], "trigger_words": ["Student Id", "Number"], "Prediction": "student_id, COUNT(friend_id) AS num_friends\n FROM Friend\n GROUP BY student_id;"}
{"db_id": "network_1", "query": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id", "query_toks": ["SELECT", "student_id", ",", "count", "(", "*", ")", "FROM", "Friend", "GROUP", "BY", "student_id"], "query_toks_no_value": ["select", "student_id", ",", "count", "(", "*", ")", "from", "friend", "group", "by", "student_id"], "question": "How many friends does each student have?", "question_toks": ["How", "many", "friends", "does", "each", "student", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "883", "answer_text": [[1101, 1], [1247, 2], [1304, 1], [1316, 1], [1381, 1], [1468, 2], [1501, 1], [1510, 2], [1661, 1], [1689, 2], [1709, 1], [1782, 3], [1911, 1], [1934, 1]], "trigger_words": ["Student Id", "Number"], "Prediction": "Friend.student_id, COUNT(Friend.friend_id) \n FROM Friend \n GROUP BY Friend.student_id;"}
{"db_id": "network_1", "query": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id"], "question": "Show the names of high school students and their corresponding number of friends.", "question_toks": ["Show", "the", "names", "of", "high", "school", "students", "and", "their", "corresponding", "number", "of", "friends", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "884", "answer_text": [["Haley", 1], ["Alexis", 2], ["Jordan", 1], ["Austin", 1], ["Tiffany", 1], ["Kris", 2], ["Jessica", 1], ["Jordan", 2], ["Logan", 1], ["Gabriel", 2], ["Cassandra", 1], ["Andrew", 3], ["Gabriel", 1], ["Kyle", 1]], "trigger_words": ["Name", "Number"], "Prediction": "Highschooler.name, COUNT(Friend.friend_id)\n FROM Highschooler\n JOIN Friend ON Friend.student_id = Highschooler.ID\n GROUP BY Highschooler.ID;"}
{"db_id": "network_1", "query": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id"], "question": "What are the names of the high schoolers and how many friends does each have?", "question_toks": ["What", "are", "the", "names", "of", "the", "high", "schoolers", "and", "how", "many", "friends", "does", "each", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "885", "answer_text": [["Haley", 1], ["Alexis", 2], ["Jordan", 1], ["Austin", 1], ["Tiffany", 1], ["Kris", 2], ["Jessica", 1], ["Jordan", 2], ["Logan", 1], ["Gabriel", 2], ["Cassandra", 1], ["Andrew", 3], ["Gabriel", 1], ["Kyle", 1]], "trigger_words": ["Name", "Number"], "Prediction": "Highschooler.name, COUNT(Friend.friend_id)\n FROM Highschooler\n LEFT JOIN Friend ON Friend.student_id = Highschooler.ID\n GROUP BY Highschooler.ID;"}
{"db_id": "network_1", "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the high schooler who has the greatest number of friends?", "question_toks": ["What", "is", "the", "name", "of", "the", "high", "schooler", "who", "has", "the", "greatest", "number", "of", "friends", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "886", "answer_text": [["Andrew"]], "trigger_words": ["Name"], "Prediction": "Highschooler.name\nFROM Highschooler\nJOIN Friend ON Friend.student_id = Highschooler.ID\nGROUP BY Highschooler.ID\nORDER BY COUNT(Friend.friend_id) DESC\nLIMIT 1;"}
{"db_id": "network_1", "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the name of the high school student with the most friends.", "question_toks": ["Return", "the", "name", "of", "the", "high", "school", "student", "with", "the", "most", "friends", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "887", "answer_text": [["Andrew"]], "trigger_words": ["Name"], "Prediction": "Highschooler.name\nFROM Highschooler\nJOIN Friend ON Friend.student_id = Highschooler.ID\nGROUP BY Highschooler.ID\nORDER BY COUNT(Friend.friend_id) DESC\nLIMIT 1;"}
{"db_id": "network_1", "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3", "query_toks": ["SELECT", "T2.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id", "HAVING", "count", "(", "*", ")", ">", "=", "3"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the names of high schoolers who have at least 3 friends.", "question_toks": ["Show", "the", "names", "of", "high", "schoolers", "who", "have", "at", "least", "3", "friends", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "888", "answer_text": [["Andrew"]], "trigger_words": ["Name"], "Prediction": "Highschooler.name\nFROM Highschooler\nJOIN Friend ON Friend.student_id = Highschooler.ID\nGROUP BY Highschooler.ID\nHAVING COUNT(Friend.friend_id) >= 3;"}
{"db_id": "network_1", "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3", "query_toks": ["SELECT", "T2.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id", "HAVING", "count", "(", "*", ")", ">", "=", "3"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the names of high schoolers who have 3 or more friends?", "question_toks": ["What", "are", "the", "names", "of", "high", "schoolers", "who", "have", "3", "or", "more", "friends", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "889", "answer_text": [["Andrew"]], "trigger_words": ["Name"], "Prediction": "Highschooler.name\nFROM Highschooler\nJOIN Friend ON Friend.student_id = Highschooler.ID\nGROUP BY Highschooler.ID\nHAVING COUNT(Friend.friend_id) >= 3;"}
{"db_id": "network_1", "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"", "query_toks": ["SELECT", "T3.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "JOIN", "Highschooler", "AS", "T3", "ON", "T1.friend_id", "=", "T3.id", "WHERE", "T2.name", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "join", "highschooler", "as", "t3", "on", "t1", ".", "friend_id", "=", "t3", ".", "id", "where", "t2", ".", "name", "=", "value"], "question": "Show the names of all of the high schooler Kyle's friends.", "question_toks": ["Show", "the", "names", "of", "all", "of", "the", "high", "schooler", "Kyle", "'s", "friends", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 5, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "890", "answer_text": [["Jordan"]], "trigger_words": ["Name"], "Prediction": "Highschooler.name\nFROM Highschooler\nJOIN Friend ON Friend.friend_id = Highschooler.ID\nWHERE Friend.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle');"}
{"db_id": "network_1", "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"", "query_toks": ["SELECT", "T3.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "JOIN", "Highschooler", "AS", "T3", "ON", "T1.friend_id", "=", "T3.id", "WHERE", "T2.name", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "join", "highschooler", "as", "t3", "on", "t1", ".", "friend_id", "=", "t3", ".", "id", "where", "t2", ".", "name", "=", "value"], "question": "Return the names of friends of the high school student Kyle.", "question_toks": ["Return", "the", "names", "of", "friends", "of", "the", "high", "school", "student", "Kyle", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 5, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "891", "answer_text": [["Jordan"]], "trigger_words": ["Name"], "Prediction": "Highschooler.name\nFROM Highschooler\nJOIN Friend ON Friend.friend_id = Highschooler.ID\nJOIN Highschooler AS Kyle ON Kyle.ID = Friend.student_id\nWHERE Kyle.name = 'Kyle';"}
{"db_id": "network_1", "query": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "WHERE", "T2.name", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "where", "t2", ".", "name", "=", "value"], "question": "How many friends does the high school student Kyle have?", "question_toks": ["How", "many", "friends", "does", "the", "high", "school", "student", "Kyle", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "892", "answer_text": [[1]], "trigger_words": ["Number"], "Prediction": "COUNT(*) \nFROM Friend \nWHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle');"}
{"db_id": "network_1", "query": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "WHERE", "T2.name", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "where", "t2", ".", "name", "=", "value"], "question": "Count the number of friends Kyle has.", "question_toks": ["Count", "the", "number", "of", "friends", "Kyle", "has", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "893", "answer_text": [[1]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle');"}
{"db_id": "network_1", "query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend", "query_toks": ["SELECT", "id", "FROM", "Highschooler", "EXCEPT", "SELECT", "student_id", "FROM", "Friend"], "query_toks_no_value": ["select", "id", "from", "highschooler", "except", "select", "student_id", "from", "friend"], "question": "Show ids of all students who do not have any friends.", "question_toks": ["Show", "ids", "of", "all", "students", "who", "do", "not", "have", "any", "friends", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "894", "answer_text": [[1025], [1641]], "trigger_words": ["Id"], "Prediction": "Highschooler.ID\nFROM Highschooler\nWHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)"}
{"db_id": "network_1", "query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend", "query_toks": ["SELECT", "id", "FROM", "Highschooler", "EXCEPT", "SELECT", "student_id", "FROM", "Friend"], "query_toks_no_value": ["select", "id", "from", "highschooler", "except", "select", "student_id", "from", "friend"], "question": "What are the ids of high school students who do not have friends?", "question_toks": ["What", "are", "the", "ids", "of", "high", "school", "students", "who", "do", "not", "have", "friends", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "895", "answer_text": [[1025], [1641]], "trigger_words": ["Id"], "Prediction": "Highschooler.ID\nFROM Highschooler\nWHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)"}
{"db_id": "network_1", "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id", "query_toks": ["SELECT", "name", "FROM", "Highschooler", "EXCEPT", "SELECT", "T2.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id"], "query_toks_no_value": ["select", "name", "from", "highschooler", "except", "select", "t2", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id"], "question": "Show names of all high school students who do not have any friends.", "question_toks": ["Show", "names", "of", "all", "high", "school", "students", "who", "do", "not", "have", "any", "friends", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "896", "answer_text": [["Brittany"], ["John"]], "trigger_words": ["Name"], "Prediction": "Highschooler.name\nFROM Highschooler\nWHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)"}
{"db_id": "network_1", "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id", "query_toks": ["SELECT", "name", "FROM", "Highschooler", "EXCEPT", "SELECT", "T2.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id"], "query_toks_no_value": ["select", "name", "from", "highschooler", "except", "select", "t2", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id"], "question": "What are the names of students who have no friends?", "question_toks": ["What", "are", "the", "names", "of", "students", "who", "have", "no", "friends", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "897", "answer_text": [["Brittany"], ["John"]], "trigger_words": ["Name"], "Prediction": "Highschooler.name\nFROM Highschooler\nWHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)"}
{"db_id": "network_1", "query": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes", "query_toks": ["SELECT", "student_id", "FROM", "Friend", "INTERSECT", "SELECT", "liked_id", "FROM", "Likes"], "query_toks_no_value": ["select", "student_id", "from", "friend", "intersect", "select", "liked_id", "from", "likes"], "question": "Show the ids of high schoolers who have friends and are also liked by someone else.", "question_toks": ["Show", "the", "ids", "of", "high", "schoolers", "who", "have", "friends", "and", "are", "also", "liked", "by", "someone", "else", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "898", "answer_text": [[1101], [1247], [1304], [1468], [1501], [1689], [1709], [1934]], "trigger_words": ["Student Id"], "Prediction": "Highschooler.ID\nFROM Highschooler\nINNER JOIN Friend ON Friend.student_id = Highschooler.ID\nINNER JOIN Likes ON Likes.student_id = Highschooler.ID\nWHERE Highschooler.ID IN (SELECT friend_id FROM Friend) AND Highschooler.ID IN (SELECT liked_id FROM Likes);"}
{"db_id": "network_1", "query": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes", "query_toks": ["SELECT", "student_id", "FROM", "Friend", "INTERSECT", "SELECT", "liked_id", "FROM", "Likes"], "query_toks_no_value": ["select", "student_id", "from", "friend", "intersect", "select", "liked_id", "from", "likes"], "question": "What are the ids of students who both have friends and are liked?", "question_toks": ["What", "are", "the", "ids", "of", "students", "who", "both", "have", "friends", "and", "are", "liked", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "899", "answer_text": [[1101], [1247], [1304], [1468], [1501], [1689], [1709], [1934]], "trigger_words": ["Student Id"], "Prediction": "Friend.student_id \nFROM Friend \nINNER JOIN Likes ON Friend.student_id = Likes.student_id;"}
{"db_id": "network_1", "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id", "query_toks": ["SELECT", "T2.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "INTERSECT", "SELECT", "T2.name", "FROM", "Likes", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.liked_id", "=", "T2.id"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "intersect", "select", "t2", ".", "name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "liked_id", "=", "t2", ".", "id"], "question": "Show name of all students who have some friends and also are liked by someone else.", "question_toks": ["Show", "name", "of", "all", "students", "who", "have", "some", "friends", "and", "also", "are", "liked", "by", "someone", "else", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "900", "answer_text": [["Alexis"], ["Cassandra"], ["Gabriel"], ["Haley"], ["Jessica"], ["Jordan"], ["Kris"], ["Kyle"]], "trigger_words": ["Name"], "Prediction": "Highschooler.name \nFROM Highschooler \nJOIN Friend ON Friend.student_id = Highschooler.ID \nJOIN Likes ON Likes.student_id = Highschooler.ID \nWHERE Highschooler.ID IN (SELECT friend_id FROM Friend) AND Highschooler.ID IN (SELECT liked_id FROM Likes);"}
{"db_id": "network_1", "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id", "query_toks": ["SELECT", "T2.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "INTERSECT", "SELECT", "T2.name", "FROM", "Likes", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.liked_id", "=", "T2.id"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "intersect", "select", "t2", ".", "name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "liked_id", "=", "t2", ".", "id"], "question": "What are the names of high schoolers who both have friends and are liked?", "question_toks": ["What", "are", "the", "names", "of", "high", "schoolers", "who", "both", "have", "friends", "and", "are", "liked", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "901", "answer_text": [["Alexis"], ["Cassandra"], ["Gabriel"], ["Haley"], ["Jessica"], ["Jordan"], ["Kris"], ["Kyle"]], "trigger_words": ["Name"], "Prediction": "Highschooler.name\nFROM Highschooler\nWHERE Highschooler.ID IN (\n  SELECT Friend.student_id\n  FROM Friend\n  INTERSECT\n  SELECT Likes.student_id\n  FROM Likes\n)"}
{"db_id": "network_1", "query": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id", "query_toks": ["SELECT", "student_id", ",", "count", "(", "*", ")", "FROM", "Likes", "GROUP", "BY", "student_id"], "query_toks_no_value": ["select", "student_id", ",", "count", "(", "*", ")", "from", "likes", "group", "by", "student_id"], "question": "Count the number of likes for each student id.", "question_toks": ["Count", "the", "number", "of", "likes", "for", "each", "student", "id", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "902", "answer_text": [[1025, 1], [1247, 1], [1316, 1], [1501, 1], [1641, 1], [1689, 1], [1709, 1], [1782, 1], [1911, 1], [1934, 1]], "trigger_words": ["Student Id", "Number"], "Prediction": "student_id, COUNT(*) FROM Likes GROUP BY student_id;"}
{"db_id": "network_1", "query": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id", "query_toks": ["SELECT", "student_id", ",", "count", "(", "*", ")", "FROM", "Likes", "GROUP", "BY", "student_id"], "query_toks_no_value": ["select", "student_id", ",", "count", "(", "*", ")", "from", "likes", "group", "by", "student_id"], "question": "How many likes correspond to each student id?", "question_toks": ["How", "many", "likes", "correspond", "to", "each", "student", "id", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "903", "answer_text": [[1025, 1], [1247, 1], [1316, 1], [1501, 1], [1641, 1], [1689, 1], [1709, 1], [1782, 1], [1911, 1], [1934, 1]], "trigger_words": ["Student Id", "Number"], "Prediction": "student_id, COUNT(*) FROM Likes GROUP BY student_id;"}
{"db_id": "network_1", "query": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "Likes", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id"], "question": "Show the names of high schoolers who have likes, and numbers of likes for each.", "question_toks": ["Show", "the", "names", "of", "high", "schoolers", "who", "have", "likes", ",", "and", "numbers", "of", "likes", "for", "each", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "904", "answer_text": [["John", 1], ["Alexis", 1], ["Austin", 1], ["Jessica", 1], ["Brittany", 1], ["Gabriel", 1], ["Cassandra", 1], ["Andrew", 1], ["Gabriel", 1], ["Kyle", 1]], "trigger_words": ["Name", "Number"], "Prediction": "Highschooler.name, COUNT(Likes.liked_id) \n FROM Highschooler \n JOIN Likes ON Highschooler.ID = Likes.student_id \n GROUP BY Highschooler.name;"}
{"db_id": "network_1", "query": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "Likes", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id"], "question": "What are the names of high schoolers who have likes, and how many likes does each have?", "question_toks": ["What", "are", "the", "names", "of", "high", "schoolers", "who", "have", "likes", ",", "and", "how", "many", "likes", "does", "each", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "905", "answer_text": [["John", 1], ["Alexis", 1], ["Austin", 1], ["Jessica", 1], ["Brittany", 1], ["Gabriel", 1], ["Cassandra", 1], ["Andrew", 1], ["Gabriel", 1], ["Kyle", 1]], "trigger_words": ["Name", "Number"], "Prediction": "Highschooler.name, COUNT(Likes.liked_id) \n FROM Highschooler \n JOIN Likes ON Highschooler.ID = Likes.student_id \n GROUP BY Highschooler.name;"}
{"db_id": "network_1", "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", "FROM", "Likes", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the high schooler who has the greatest number of likes?", "question_toks": ["What", "is", "the", "name", "of", "the", "high", "schooler", "who", "has", "the", "greatest", "number", "of", "likes", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "906", "answer_text": [["John"]], "trigger_words": ["Name"], "Prediction": "Highschooler.name\nFROM Highschooler\nJOIN Likes ON Highschooler.ID = Likes.student_id\nGROUP BY Highschooler.ID\nORDER BY COUNT(Likes.liked_id) DESC\nLIMIT 1;"}
{"db_id": "network_1", "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", "FROM", "Likes", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Give the name of the student with the most likes.", "question_toks": ["Give", "the", "name", "of", "the", "student", "with", "the", "most", "likes", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "907", "answer_text": [["John"]], "trigger_words": ["Name"], "Prediction": "Highschooler.name\nFROM Highschooler\nJOIN Likes ON Highschooler.ID = Likes.liked_id\nGROUP BY Highschooler.ID\nORDER BY COUNT(Likes.student_id) DESC\nLIMIT 1;"}
{"db_id": "network_1", "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T2.name", "FROM", "Likes", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the names of students who have at least 2 likes.", "question_toks": ["Show", "the", "names", "of", "students", "who", "have", "at", "least", "2", "likes", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "908", "answer_text": [], "trigger_words": ["Name"], "Prediction": "Highschooler.name\nFROM Highschooler\nJOIN Likes ON Highschooler.ID = Likes.student_id\nGROUP BY Highschooler.ID\nHAVING COUNT(Likes.liked_id) >= 2;"}
{"db_id": "network_1", "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T2.name", "FROM", "Likes", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the names of students who have 2 or more likes?", "question_toks": ["What", "are", "the", "names", "of", "students", "who", "have", "2", "or", "more", "likes", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "909", "answer_text": [], "trigger_words": ["Name"], "Prediction": "Highschooler.name\nFROM Highschooler\nJOIN Likes ON Highschooler.ID = Likes.student_id\nGROUP BY Highschooler.ID\nHAVING COUNT(Likes.liked_id) >= 2;"}
{"db_id": "network_1", "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T2.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "WHERE", "T2.grade", ">", "5", "GROUP", "BY", "T1.student_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "where", "t2", ".", "grade", ">", "value", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the names of students who have a grade higher than 5 and have at least 2 friends.", "question_toks": ["Show", "the", "names", "of", "students", "who", "have", "a", "grade", "higher", "than", "5", "and", "have", "at", "least", "2", "friends", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 5.0, null]], "groupBy": [[0, 4, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "910", "answer_text": [["Alexis"], ["Kris"], ["Jordan"], ["Gabriel"], ["Andrew"]], "trigger_words": ["Name"], "Prediction": "Highschooler.name\nFROM Highschooler\nJOIN Friend ON Friend.student_id = Highschooler.ID\nWHERE Highschooler.grade > 5\nGROUP BY Highschooler.ID\nHAVING COUNT(Friend.friend_id) >= 2;"}
{"db_id": "network_1", "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T2.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "WHERE", "T2.grade", ">", "5", "GROUP", "BY", "T1.student_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "where", "t2", ".", "grade", ">", "value", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?", "question_toks": ["What", "are", "the", "names", "of", "high", "schoolers", "who", "have", "a", "grade", "of", "over", "5", "and", "have", "2", "or", "more", "friends", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 5.0, null]], "groupBy": [[0, 4, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "911", "answer_text": [["Alexis"], ["Kris"], ["Jordan"], ["Gabriel"], ["Andrew"]], "trigger_words": ["Name"], "Prediction": "Highschooler.name\nFROM Highschooler\nJOIN Friend ON Friend.student_id = Highschooler.ID\nWHERE Highschooler.grade > 5\nGROUP BY Highschooler.ID\nHAVING COUNT(Friend.friend_id) >= 2;"}
{"db_id": "network_1", "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Likes", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "WHERE", "T2.name", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "where", "t2", ".", "name", "=", "value"], "question": "How many likes does Kyle have?", "question_toks": ["How", "many", "likes", "does", "Kyle", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "912", "answer_text": [[1]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle');"}
{"db_id": "network_1", "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Likes", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "WHERE", "T2.name", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "where", "t2", ".", "name", "=", "value"], "question": "Return the number of likes that the high schooler named Kyle has.", "question_toks": ["Return", "the", "number", "of", "likes", "that", "the", "high", "schooler", "named", "Kyle", "has", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "913", "answer_text": [[1]], "trigger_words": ["Number"], "Prediction": "COUNT(*) \nFROM Likes \nWHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle');"}
{"db_id": "network_1", "query": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "query_toks": ["SELECT", "avg", "(", "grade", ")", "FROM", "Highschooler", "WHERE", "id", "IN", "(", "SELECT", "T1.student_id", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", ")"], "query_toks_no_value": ["select", "avg", "(", "grade", ")", "from", "highschooler", "where", "id", "in", "(", "select", "t1", ".", "student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", ")"], "question": "Find the average grade of all students who have some friends.", "question_toks": ["Find", "the", "average", "grade", "of", "all", "students", "who", "have", "some", "friends", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 3, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "914", "answer_text": [[10.428571428571429]], "trigger_words": ["Average Number"], "Prediction": "AVG(Highschooler.grade) FROM Highschooler WHERE ID IN (SELECT DISTINCT student_id FROM Friend);"}
{"db_id": "network_1", "query": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "query_toks": ["SELECT", "avg", "(", "grade", ")", "FROM", "Highschooler", "WHERE", "id", "IN", "(", "SELECT", "T1.student_id", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", ")"], "query_toks_no_value": ["select", "avg", "(", "grade", ")", "from", "highschooler", "where", "id", "in", "(", "select", "t1", ".", "student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", ")"], "question": "What is the average grade of students who have friends?", "question_toks": ["What", "is", "the", "average", "grade", "of", "students", "who", "have", "friends", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 3, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "915", "answer_text": [[10.428571428571429]], "trigger_words": ["Average Number"], "Prediction": "AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend);"}
{"db_id": "network_1", "query": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "query_toks": ["SELECT", "min", "(", "grade", ")", "FROM", "Highschooler", "WHERE", "id", "NOT", "IN", "(", "SELECT", "T1.student_id", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", ")"], "query_toks_no_value": ["select", "min", "(", "grade", ")", "from", "highschooler", "where", "id", "not", "in", "(", "select", "t1", ".", "student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", ")"], "question": "Find the minimum grade of students who have no friends.", "question_toks": ["Find", "the", "minimum", "grade", "of", "students", "who", "have", "no", "friends", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "916", "answer_text": [[10]], "trigger_words": ["Minimal Number"], "Prediction": "MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend);"}
{"db_id": "network_1", "query": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "query_toks": ["SELECT", "min", "(", "grade", ")", "FROM", "Highschooler", "WHERE", "id", "NOT", "IN", "(", "SELECT", "T1.student_id", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", ")"], "query_toks_no_value": ["select", "min", "(", "grade", ")", "from", "highschooler", "where", "id", "not", "in", "(", "select", "t1", ".", "student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", ")"], "question": "What is the lowest grade of students who do not have any friends?", "question_toks": ["What", "is", "the", "lowest", "grade", "of", "students", "who", "do", "not", "have", "any", "friends", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "917", "answer_text": [[10]], "trigger_words": ["Minimal Number"], "Prediction": "MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend);"}
{"db_id": "dog_kennels", "query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals", "query_toks": ["SELECT", "state", "FROM", "Owners", "INTERSECT", "SELECT", "state", "FROM", "Professionals"], "query_toks_no_value": ["select", "state", "from", "owners", "intersect", "select", "state", "from", "professionals"], "question": "Which states have both owners and professionals living there?", "question_toks": ["Which", "states", "have", "both", "owners", "and", "professionals", "living", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "918", "answer_text": [["Indiana"], ["Mississippi"], ["Wisconsin"]], "trigger_words": ["State"], "Prediction": "state FROM Owners WHERE state IN (SELECT state FROM Professionals);"}
{"db_id": "dog_kennels", "query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals", "query_toks": ["SELECT", "state", "FROM", "Owners", "INTERSECT", "SELECT", "state", "FROM", "Professionals"], "query_toks_no_value": ["select", "state", "from", "owners", "intersect", "select", "state", "from", "professionals"], "question": "Find the states where both owners and professionals live.", "question_toks": ["Find", "the", "states", "where", "both", "owners", "and", "professionals", "live", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "919", "answer_text": [["Indiana"], ["Mississippi"], ["Wisconsin"]], "trigger_words": ["State"], "Prediction": "DISTINCT state FROM Owners WHERE state IN (SELECT state FROM Professionals);"}
{"db_id": "dog_kennels", "query": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )", "query_toks": ["SELECT", "avg", "(", "age", ")", "FROM", "Dogs", "WHERE", "dog_id", "IN", "(", "SELECT", "dog_id", "FROM", "Treatments", ")"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "dogs", "where", "dog_id", "in", "(", "select", "dog_id", "from", "treatments", ")"], "question": "What is the average age of the dogs who have gone through any treatments?", "question_toks": ["What", "is", "the", "average", "age", "of", "the", "dogs", "who", "have", "gone", "through", "any", "treatments", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 26, false], null]]]], "where": [[false, 8, [0, [0, 20, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 45, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "920", "answer_text": [[5.111111111111111]], "trigger_words": ["Average Number"], "Prediction": "AVG(Dogs.age) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id=Treatments.dog_id;"}
{"db_id": "dog_kennels", "query": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )", "query_toks": ["SELECT", "avg", "(", "age", ")", "FROM", "Dogs", "WHERE", "dog_id", "IN", "(", "SELECT", "dog_id", "FROM", "Treatments", ")"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "dogs", "where", "dog_id", "in", "(", "select", "dog_id", "from", "treatments", ")"], "question": "Find the average age of the dogs who went through treatments.", "question_toks": ["Find", "the", "average", "age", "of", "the", "dogs", "who", "went", "through", "treatments", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 26, false], null]]]], "where": [[false, 8, [0, [0, 20, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 45, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "921", "answer_text": [[5.111111111111111]], "trigger_words": ["Average Number"], "Prediction": "AVG(Dogs.age) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id=Treatments.dog_id;"}
{"db_id": "dog_kennels", "query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2", "query_toks": ["SELECT", "professional_id", ",", "last_name", ",", "cell_number", "FROM", "Professionals", "WHERE", "state", "=", "'Indiana", "'", "UNION", "SELECT", "T1.professional_id", ",", "T1.last_name", ",", "T1.cell_number", "FROM", "Professionals", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.professional_id", "=", "T2.professional_id", "GROUP", "BY", "T1.professional_id", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "professional_id", ",", "last_name", ",", "cell_number", "from", "professionals", "where", "state", "=", "value", "union", "select", "t1", ".", "professional_id", ",", "t1", ".", "last_name", ",", "t1", ".", "cell_number", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "professional_id", "=", "t2", ".", "professional_id", "group", "by", "t1", ".", "professional_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.", "question_toks": ["Which", "professionals", "live", "in", "the", "state", "of", "Indiana", "or", "have", "done", "treatment", "on", "more", "than", "2", "treatments", "?", "List", "his", "or", "her", "id", ",", "last", "name", "and", "cell", "phone", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 40, false], null]], [0, [0, [0, 43, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], "\"Indiana\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 40, false], null]], [0, [0, [0, 43, false], null]]]], "where": [], "groupBy": [[0, 33, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "id": "922", "answer_text": [[1, "Braun", "(275)939-2435x80863"], [8, "Hyatt", "328.842.3792"], [9, "Kshlerin", "962-983-8109x3509"]], "trigger_words": ["Professional Id", "Last Name", "Cell Number"], "Prediction": "professional_id, last_name, cell_number \n FROM Professionals \n WHERE state = 'Indiana' OR professional_id IN \n (SELECT professional_id FROM Treatments \n GROUP BY professional_id \n HAVING COUNT(*) > 2);"}
{"db_id": "dog_kennels", "query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2", "query_toks": ["SELECT", "professional_id", ",", "last_name", ",", "cell_number", "FROM", "Professionals", "WHERE", "state", "=", "'Indiana", "'", "UNION", "SELECT", "T1.professional_id", ",", "T1.last_name", ",", "T1.cell_number", "FROM", "Professionals", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.professional_id", "=", "T2.professional_id", "GROUP", "BY", "T1.professional_id", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "professional_id", ",", "last_name", ",", "cell_number", "from", "professionals", "where", "state", "=", "value", "union", "select", "t1", ".", "professional_id", ",", "t1", ".", "last_name", ",", "t1", ".", "cell_number", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "professional_id", "=", "t2", ".", "professional_id", "group", "by", "t1", ".", "professional_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.", "question_toks": ["Find", "the", "id", ",", "last", "name", "and", "cell", "phone", "of", "the", "professionals", "who", "live", "in", "the", "state", "of", "Indiana", "or", "have", "performed", "more", "than", "two", "treatments", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 40, false], null]], [0, [0, [0, 43, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], "\"Indiana\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 40, false], null]], [0, [0, [0, 43, false], null]]]], "where": [], "groupBy": [[0, 33, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "id": "923", "answer_text": [[1, "Braun", "(275)939-2435x80863"], [8, "Hyatt", "328.842.3792"], [9, "Kshlerin", "962-983-8109x3509"]], "trigger_words": ["Professional Id", "Last Name", "Cell Number"], "Prediction": "professional_id, last_name, cell_number \n FROM Professionals \n WHERE state = 'Indiana' OR professional_id IN \n (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) > 2);"}
{"db_id": "dog_kennels", "query": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )", "query_toks": ["select", "name", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", "group", "by", "dog_id", "having", "sum", "(", "cost_of_treatment", ")", ">", "1000", ")"], "query_toks_no_value": ["select", "name", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", "group", "by", "dog_id", "having", "sum", "(", "cost_of_treatment", ")", ">", "value", ")"], "question": "Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .", "question_toks": ["Which", "dogs", "have", "not", "cost", "their", "owner", "more", "than", "1000", "for", "treatment", "?", "List", "the", "dog", "names", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[true, 8, [0, [0, 20, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 45, false], null]]]], "where": [], "groupBy": [[0, 45, false]], "having": [[false, 3, [0, [4, 49, false], null], 1000.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "924", "answer_text": [["Kacey"], ["Hipolito"], ["Mavis"], ["Houston"], ["Jeffrey"], ["Merritt"], ["Narciso"], ["George"], ["Bessie"], ["Betty"], ["Holden"], ["Jesus"]], "trigger_words": ["Name"], "Prediction": "Dogs.name \n FROM Dogs \n JOIN Treatments ON Dogs.dog_id=Treatments.dog_id \n GROUP BY Dogs.dog_id \n HAVING SUM(Treatments.cost_of_treatment) <= 1000;"}
{"db_id": "dog_kennels", "query": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )", "query_toks": ["select", "name", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", "group", "by", "dog_id", "having", "sum", "(", "cost_of_treatment", ")", ">", "1000", ")"], "query_toks_no_value": ["select", "name", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", "group", "by", "dog_id", "having", "sum", "(", "cost_of_treatment", ")", ">", "value", ")"], "question": "What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?", "question_toks": ["What", "are", "the", "names", "of", "the", "dogs", "for", "which", "the", "owner", "has", "not", "spend", "more", "than", "1000", "for", "treatment", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[true, 8, [0, [0, 20, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 45, false], null]]]], "where": [], "groupBy": [[0, 45, false]], "having": [[false, 3, [0, [4, 49, false], null], 1000.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "925", "answer_text": [["Kacey"], ["Hipolito"], ["Mavis"], ["Houston"], ["Jeffrey"], ["Merritt"], ["Narciso"], ["George"], ["Bessie"], ["Betty"], ["Holden"], ["Jesus"]], "trigger_words": ["Name"], "Prediction": "Dogs.name \nFROM Dogs \nWHERE Dogs.owner_id IN (\n    SELECT Dogs.owner_id \n    FROM Dogs \n    JOIN Treatments ON Dogs.dog_id = Treatments.dog_id \n    GROUP BY Dogs.owner_id \n    HAVING SUM(Treatments.cost_of_treatment) <= 1000\n)"}
{"db_id": "dog_kennels", "query": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs", "query_toks": ["SELECT", "first_name", "FROM", "Professionals", "UNION", "SELECT", "first_name", "FROM", "Owners", "EXCEPT", "SELECT", "name", "FROM", "Dogs"], "query_toks_no_value": ["select", "first_name", "from", "professionals", "union", "select", "first_name", "from", "owners", "except", "select", "name", "from", "dogs"], "question": "Which first names are used for professionals or owners but are not used as dog names?", "question_toks": ["Which", "first", "names", "are", "used", "for", "professionals", "or", "owners", "but", "are", "not", "used", "as", "dog", "names", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "except": null}, "id": "926", "answer_text": [["Adelle"], ["Brady"], ["Cindy"], ["Danny"], ["Domenica"], ["Emelie"], ["Ericka"], ["Gay"], ["Heather"], ["Jaclyn"], ["Jayson"], ["Johann"], ["Kade"], ["Karley"], ["Lesly"], ["Lorenz"], ["Melisa"], ["Monte"], ["Nora"], ["Olaf"], ["Orlando"], ["Rachelle"], ["Rolando"], ["Ruben"], ["Sigurd"], ["Taryn"], ["Tre"], ["Velva"], ["Vernice"], ["Winfield"]], "trigger_words": ["First Name"], "Prediction": "DISTINCT first_name FROM (\n   SELECT first_name FROM Owners\n   UNION\n   SELECT first_name FROM Professionals\n) AS names\nWHERE names.first_name NOT IN (\n   SELECT name FROM Dogs\n);"}
{"db_id": "dog_kennels", "query": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs", "query_toks": ["SELECT", "first_name", "FROM", "Professionals", "UNION", "SELECT", "first_name", "FROM", "Owners", "EXCEPT", "SELECT", "name", "FROM", "Dogs"], "query_toks_no_value": ["select", "first_name", "from", "professionals", "union", "select", "first_name", "from", "owners", "except", "select", "name", "from", "dogs"], "question": "Find the first names that are used for professionals or owners but are not used as dog names.", "question_toks": ["Find", "the", "first", "names", "that", "are", "used", "for", "professionals", "or", "owners", "but", "are", "not", "used", "as", "dog", "names", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "except": null}, "id": "927", "answer_text": [["Adelle"], ["Brady"], ["Cindy"], ["Danny"], ["Domenica"], ["Emelie"], ["Ericka"], ["Gay"], ["Heather"], ["Jaclyn"], ["Jayson"], ["Johann"], ["Kade"], ["Karley"], ["Lesly"], ["Lorenz"], ["Melisa"], ["Monte"], ["Nora"], ["Olaf"], ["Orlando"], ["Rachelle"], ["Rolando"], ["Ruben"], ["Sigurd"], ["Taryn"], ["Tre"], ["Velva"], ["Vernice"], ["Winfield"]], "trigger_words": ["First Name"], "Prediction": "DISTINCT first_name FROM (\n   SELECT first_name FROM Owners\n   UNION\n   SELECT first_name FROM Professionals\n) AS names\nWHERE names.first_name NOT IN (\n   SELECT name FROM Dogs\n);"}
{"db_id": "dog_kennels", "query": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id", "query_toks": ["SELECT", "professional_id", ",", "role_code", ",", "email_address", "FROM", "Professionals", "EXCEPT", "SELECT", "T1.professional_id", ",", "T1.role_code", ",", "T1.email_address", "FROM", "Professionals", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.professional_id", "=", "T2.professional_id"], "query_toks_no_value": ["select", "professional_id", ",", "role_code", ",", "email_address", "from", "professionals", "except", "select", "t1", ".", "professional_id", ",", "t1", ".", "role_code", ",", "t1", ".", "email_address", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "professional_id", "=", "t2", ".", "professional_id"], "question": "Which professional did not operate any treatment on dogs? List the professional's id, role and email.", "question_toks": ["Which", "professional", "did", "not", "operate", "any", "treatment", "on", "dogs", "?", "List", "the", "professional", "'s", "id", ",", "role", "and", "email", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]], [0, [0, [0, 41, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]], [0, [0, [0, 41, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "928", "answer_text": [[1, "Employee", "deanna.schuster@example.com"], [2, "Employee", "lucile.shanahan@example.org"], [3, "Employee", "uboehm@example.org"], [11, "Employee", "west.eula@example.net"], [12, "Veterenarian", "marquardt.furman@example.org"], [13, "Veterenarian", "delphine29@example.com"], [15, "Employee", "jeichmann@example.com"]], "trigger_words": ["Professional Id", "Role Code", "Email Address"], "Prediction": "Professionals.professional_id, Professionals.role_code, Professionals.email_address\n FROM Professionals\n LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id\n WHERE Treatments.treatment_id IS NULL;"}
{"db_id": "dog_kennels", "query": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id", "query_toks": ["SELECT", "professional_id", ",", "role_code", ",", "email_address", "FROM", "Professionals", "EXCEPT", "SELECT", "T1.professional_id", ",", "T1.role_code", ",", "T1.email_address", "FROM", "Professionals", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.professional_id", "=", "T2.professional_id"], "query_toks_no_value": ["select", "professional_id", ",", "role_code", ",", "email_address", "from", "professionals", "except", "select", "t1", ".", "professional_id", ",", "t1", ".", "role_code", ",", "t1", ".", "email_address", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "professional_id", "=", "t2", ".", "professional_id"], "question": "Give me the id, role and email of the professionals who did not perform any treatment on dogs.", "question_toks": ["Give", "me", "the", "id", ",", "role", "and", "email", "of", "the", "professionals", "who", "did", "not", "perform", "any", "treatment", "on", "dogs", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]], [0, [0, [0, 41, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]], [0, [0, [0, 41, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "id": "929", "answer_text": [[1, "Employee", "deanna.schuster@example.com"], [2, "Employee", "lucile.shanahan@example.org"], [3, "Employee", "uboehm@example.org"], [11, "Employee", "west.eula@example.net"], [12, "Veterenarian", "marquardt.furman@example.org"], [13, "Veterenarian", "delphine29@example.com"], [15, "Employee", "jeichmann@example.com"]], "trigger_words": ["Professional Id", "Role Code", "Email Address"], "Prediction": "professional_id, role_code, email_address \nFROM Professionals \nWHERE professional_id NOT IN (SELECT professional_id FROM Treatments)"}
{"db_id": "dog_kennels", "query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.owner_id", ",", "T2.first_name", ",", "T2.last_name", "FROM", "Dogs", "AS", "T1", "JOIN", "Owners", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id", "GROUP", "BY", "T1.owner_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "owner_id", ",", "t2", ".", "first_name", ",", "t2", ".", "last_name", "from", "dogs", "as", "t1", "join", "owners", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id", "group", "by", "t1", ".", "owner_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which owner owns the most dogs? List the owner id, first name and last name.", "question_toks": ["Which", "owner", "owns", "the", "most", "dogs", "?", "List", "the", "owner", "id", ",", "first", "name", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 21, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "930", "answer_text": [[14, "Rachelle", "Funk"]], "trigger_words": ["Owner Id", "First Name", "Last Name"], "Prediction": "Owners.owner_id, Owners.first_name, Owners.last_name\nFROM Owners\nJOIN Dogs ON Dogs.owner_id = Owners.owner_id\nGROUP BY Owners.owner_id\nORDER BY COUNT(Dogs.dog_id) DESC\nLIMIT 1;"}
{"db_id": "dog_kennels", "query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.owner_id", ",", "T2.first_name", ",", "T2.last_name", "FROM", "Dogs", "AS", "T1", "JOIN", "Owners", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id", "GROUP", "BY", "T1.owner_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "owner_id", ",", "t2", ".", "first_name", ",", "t2", ".", "last_name", "from", "dogs", "as", "t1", "join", "owners", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id", "group", "by", "t1", ".", "owner_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the owner id, first name and last name of the owner who has the most dogs.", "question_toks": ["Return", "the", "owner", "id", ",", "first", "name", "and", "last", "name", "of", "the", "owner", "who", "has", "the", "most", "dogs", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 21, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "931", "answer_text": [[14, "Rachelle", "Funk"]], "trigger_words": ["Owner Id", "First Name", "Last Name"], "Prediction": "Owners.owner_id, Owners.first_name, Owners.last_name\nFROM Owners\nWHERE Owners.owner_id = (\n    SELECT Dogs.owner_id\n    FROM Dogs\n    GROUP BY Dogs.owner_id\n    ORDER BY COUNT(*) DESC\n    LIMIT 1\n);"}
{"db_id": "dog_kennels", "query": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.professional_id", ",", "T1.role_code", ",", "T1.first_name", "FROM", "Professionals", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.professional_id", "=", "T2.professional_id", "GROUP", "BY", "T1.professional_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "professional_id", ",", "t1", ".", "role_code", ",", "t1", ".", "first_name", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "professional_id", "=", "t2", ".", "professional_id", "group", "by", "t1", ".", "professional_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Which professionals have done at least two treatments? List the professional's id, role, and first name.", "question_toks": ["Which", "professionals", "have", "done", "at", "least", "two", "treatments", "?", "List", "the", "professional", "'s", "id", ",", "role", ",", "and", "first", "name", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]], [0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [[0, 33, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "932", "answer_text": [[4, "Veterenarian", "Vernice"], [6, "Veterenarian", "Ruben"], [8, "Employee", "Karley"], [9, "Veterenarian", "Monte"], [10, "Employee", "Domenica"], [14, "Employee", "Sigurd"]], "trigger_words": ["Professional Id", "Role Code", "First Name"], "Prediction": "Professionals.professional_id, Professionals.role_code, Professionals.first_name\nFROM Professionals\nINNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id\nGROUP BY Professionals.professional_id\nHAVING COUNT(Treatments.treatment_id) >= 2;"}
{"db_id": "dog_kennels", "query": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.professional_id", ",", "T1.role_code", ",", "T1.first_name", "FROM", "Professionals", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.professional_id", "=", "T2.professional_id", "GROUP", "BY", "T1.professional_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "professional_id", ",", "t1", ".", "role_code", ",", "t1", ".", "first_name", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "professional_id", "=", "t2", ".", "professional_id", "group", "by", "t1", ".", "professional_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the id, role, and first name of the professionals who have performed two or more treatments?", "question_toks": ["What", "are", "the", "id", ",", "role", ",", "and", "first", "name", "of", "the", "professionals", "who", "have", "performed", "two", "or", "more", "treatments", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]], [0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [[0, 33, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "933", "answer_text": [[4, "Veterenarian", "Vernice"], [6, "Veterenarian", "Ruben"], [8, "Employee", "Karley"], [9, "Veterenarian", "Monte"], [10, "Employee", "Domenica"], [14, "Employee", "Sigurd"]], "trigger_words": ["Professional Id", "Role Code", "First Name"], "Prediction": "Professionals.professional_id, Professionals.role_code, Professionals.first_name\nFROM Professionals\nINNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id\nGROUP BY Professionals.professional_id\nHAVING COUNT(*) >= 2;"}
{"db_id": "dog_kennels", "query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.breed_name", "FROM", "Breeds", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.breed_code", "=", "T2.breed_code", "GROUP", "BY", "T1.breed_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "breed_name", "from", "breeds", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "breed_code", "=", "t2", ".", "breed_code", "group", "by", "t1", ".", "breed_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the breed with the most dogs?", "question_toks": ["What", "is", "the", "name", "of", "the", "breed", "with", "the", "most", "dogs", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "934", "answer_text": [["Bulldog"]], "trigger_words": ["Breed Name"], "Prediction": "Breeds.breed_name \nFROM Dogs \nJOIN Breeds ON Dogs.breed_code=Breeds.breed_code \nGROUP BY Dogs.breed_code \nORDER BY COUNT(*) DESC \nLIMIT 1;"}
{"db_id": "dog_kennels", "query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.breed_name", "FROM", "Breeds", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.breed_code", "=", "T2.breed_code", "GROUP", "BY", "T1.breed_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "breed_name", "from", "breeds", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "breed_code", "=", "t2", ".", "breed_code", "group", "by", "t1", ".", "breed_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which breed do the most dogs have? Give me the breed name.", "question_toks": ["Which", "breed", "do", "the", "most", "dogs", "have", "?", "Give", "me", "the", "breed", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "935", "answer_text": [["Bulldog"]], "trigger_words": ["Breed Name"], "Prediction": "Breeds.breed_name\nFROM Breeds\nJOIN Dogs ON Breeds.breed_code = Dogs.breed_code\nGROUP BY Breeds.breed_name\nORDER BY COUNT(*) DESC\nLIMIT 1;"}
{"db_id": "dog_kennels", "query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.owner_id", ",", "T1.last_name", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id", "JOIN", "Treatments", "AS", "T3", "ON", "T2.dog_id", "=", "T3.dog_id", "GROUP", "BY", "T1.owner_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "owner_id", ",", "t1", ".", "last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id", "join", "treatments", "as", "t3", "on", "t2", ".", "dog_id", "=", "t3", ".", "dog_id", "group", "by", "t1", ".", "owner_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.", "question_toks": ["Which", "owner", "has", "paid", "for", "the", "most", "treatments", "on", "his", "or", "her", "dogs", "?", "List", "the", "owner", "id", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 20, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "936", "answer_text": [[14, "Funk"]], "trigger_words": ["Owner Id", "Last Name"], "Prediction": "Owners.owner_id, Owners.last_name\n FROM Owners\n JOIN Dogs ON Dogs.owner_id = Owners.owner_id\n JOIN Treatments ON Treatments.dog_id = Dogs.dog_id\n GROUP BY Owners.owner_id\n ORDER BY SUM(Treatments.cost_of_treatment) DESC\n LIMIT 1;"}
{"db_id": "dog_kennels", "query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.owner_id", ",", "T1.last_name", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id", "JOIN", "Treatments", "AS", "T3", "ON", "T2.dog_id", "=", "T3.dog_id", "GROUP", "BY", "T1.owner_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "owner_id", ",", "t1", ".", "last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id", "join", "treatments", "as", "t3", "on", "t2", ".", "dog_id", "=", "t3", ".", "dog_id", "group", "by", "t1", ".", "owner_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.", "question_toks": ["Tell", "me", "the", "owner", "id", "and", "last", "name", "of", "the", "owner", "who", "spent", "the", "most", "on", "treatments", "of", "his", "or", "her", "dogs", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 20, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "937", "answer_text": [[14, "Funk"]], "trigger_words": ["Owner Id", "Last Name"], "Prediction": "Owners.owner_id, Owners.last_name\n FROM Owners\n JOIN Dogs ON Dogs.owner_id = Owners.owner_id\n JOIN Treatments ON Treatments.dog_id = Dogs.dog_id\n GROUP BY Owners.owner_id\n ORDER BY SUM(Treatments.cost_of_treatment) DESC\n LIMIT 1;"}
{"db_id": "dog_kennels", "query": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1", "query_toks": ["SELECT", "T1.treatment_type_description", "FROM", "Treatment_types", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.treatment_type_code", "=", "T2.treatment_type_code", "GROUP", "BY", "T1.treatment_type_code", "ORDER", "BY", "sum", "(", "cost_of_treatment", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "treatment_type_description", "from", "treatment_types", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "treatment_type_code", "=", "t2", ".", "treatment_type_code", "group", "by", "t1", ".", "treatment_type_code", "order", "by", "sum", "(", "cost_of_treatment", ")", "asc", "limit", "value"], "question": "What is the description of the treatment type that costs the least money in total?", "question_toks": ["What", "is", "the", "description", "of", "the", "treatment", "type", "that", "costs", "the", "least", "money", "in", "total", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 47, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["asc", [[0, [4, 49, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "938", "answer_text": [["Take for a Walk"]], "trigger_words": ["Treatment Type Description"], "Prediction": "Treatment_Types.treatment_type_description \nFROM Treatments \nJOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code \nGROUP BY Treatments.treatment_type_code \nORDER BY SUM(Treatments.cost_of_treatment) ASC \nLIMIT 1;"}
{"db_id": "dog_kennels", "query": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1", "query_toks": ["SELECT", "T1.treatment_type_description", "FROM", "Treatment_types", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.treatment_type_code", "=", "T2.treatment_type_code", "GROUP", "BY", "T1.treatment_type_code", "ORDER", "BY", "sum", "(", "cost_of_treatment", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "treatment_type_description", "from", "treatment_types", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "treatment_type_code", "=", "t2", ".", "treatment_type_code", "group", "by", "t1", ".", "treatment_type_code", "order", "by", "sum", "(", "cost_of_treatment", ")", "asc", "limit", "value"], "question": "Give me the description of the treatment type whose total cost is the lowest.", "question_toks": ["Give", "me", "the", "description", "of", "the", "treatment", "type", "whose", "total", "cost", "is", "the", "lowest", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 47, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["asc", [[0, [4, 49, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "939", "answer_text": [["Take for a Walk"]], "trigger_words": ["Treatment Type Description"], "Prediction": "Treatment_Types.treatment_type_description \nFROM Treatment_Types \nJOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code \nGROUP BY Treatment_Types.treatment_type_description \nORDER BY SUM(Treatments.cost_of_treatment) ASC \nLIMIT 1;"}
{"db_id": "dog_kennels", "query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1", "query_toks": ["SELECT", "T1.owner_id", ",", "T1.zip_code", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id", "JOIN", "Treatments", "AS", "T3", "ON", "T2.dog_id", "=", "T3.dog_id", "GROUP", "BY", "T1.owner_id", "ORDER", "BY", "sum", "(", "T3.cost_of_treatment", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "owner_id", ",", "t1", ".", "zip_code", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id", "join", "treatments", "as", "t3", "on", "t2", ".", "dog_id", "=", "t3", ".", "dog_id", "group", "by", "t1", ".", "owner_id", "order", "by", "sum", "(", "t3", ".", "cost_of_treatment", ")", "desc", "limit", "value"], "question": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.", "question_toks": ["Which", "owner", "has", "paid", "the", "largest", "amount", "of", "money", "in", "total", "for", "their", "dogs", "?", "Show", "the", "owner", "id", "and", "zip", "code", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 20, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [4, 49, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "940", "answer_text": [[3, "02647"]], "trigger_words": ["Owner Id", "Zip Code"], "Prediction": "Owners.owner_id, Owners.zip_code\n FROM Owners\n JOIN Dogs ON Dogs.owner_id = Owners.owner_id\n JOIN Charges ON Charges.charge_id = Dogs.dog_id\n GROUP BY Owners.owner_id\n ORDER BY SUM(Charges.charge_amount) DESC\n LIMIT 1;"}
{"db_id": "dog_kennels", "query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1", "query_toks": ["SELECT", "T1.owner_id", ",", "T1.zip_code", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id", "JOIN", "Treatments", "AS", "T3", "ON", "T2.dog_id", "=", "T3.dog_id", "GROUP", "BY", "T1.owner_id", "ORDER", "BY", "sum", "(", "T3.cost_of_treatment", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "owner_id", ",", "t1", ".", "zip_code", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id", "join", "treatments", "as", "t3", "on", "t2", ".", "dog_id", "=", "t3", ".", "dog_id", "group", "by", "t1", ".", "owner_id", "order", "by", "sum", "(", "t3", ".", "cost_of_treatment", ")", "desc", "limit", "value"], "question": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.", "question_toks": ["Find", "the", "owner", "id", "and", "zip", "code", "of", "the", "owner", "who", "spent", "the", "most", "money", "in", "total", "for", "his", "or", "her", "dogs", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 20, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [4, 49, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "941", "answer_text": [[3, "02647"]], "trigger_words": ["Owner Id", "Zip Code"], "Prediction": "Owners.owner_id, Owners.zip_code\n FROM Owners\n JOIN Dogs ON Dogs.owner_id = Owners.owner_id\n JOIN Treatments ON Treatments.dog_id = Dogs.dog_id\n GROUP BY Owners.owner_id\n ORDER BY SUM(Treatments.cost_of_treatment) DESC\n LIMIT 1;"}
{"db_id": "dog_kennels", "query": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.professional_id", ",", "T1.cell_number", "FROM", "Professionals", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.professional_id", "=", "T2.professional_id", "GROUP", "BY", "T1.professional_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "professional_id", ",", "t1", ".", "cell_number", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "professional_id", "=", "t2", ".", "professional_id", "group", "by", "t1", ".", "professional_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Which professionals have done at least two types of treatments? List the professional id and cell phone.", "question_toks": ["Which", "professionals", "have", "done", "at", "least", "two", "types", "of", "treatments", "?", "List", "the", "professional", "id", "and", "cell", "phone", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 43, false], null]]]], "where": [], "groupBy": [[0, 33, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "942", "answer_text": [[4, "00230569697"], [6, "139-321-7313"], [8, "328.842.3792"], [9, "962-983-8109x3509"], [10, "461-801-2600"], [14, "1-185-137-1945x409"]], "trigger_words": ["Professional Id", "Cell Number"], "Prediction": "Professionals.professional_id, Professionals.cell_number\n FROM Professionals\n JOIN Treatments ON Treatments.professional_id = Professionals.professional_id\n GROUP BY Professionals.professional_id\n HAVING COUNT(DISTINCT Treatments.treatment_type_code) >= 2;"}
{"db_id": "dog_kennels", "query": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.professional_id", ",", "T1.cell_number", "FROM", "Professionals", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.professional_id", "=", "T2.professional_id", "GROUP", "BY", "T1.professional_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "professional_id", ",", "t1", ".", "cell_number", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "professional_id", "=", "t2", ".", "professional_id", "group", "by", "t1", ".", "professional_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Find the id and cell phone of the professionals who operate two or more types of treatments.", "question_toks": ["Find", "the", "id", "and", "cell", "phone", "of", "the", "professionals", "who", "operate", "two", "or", "more", "types", "of", "treatments", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 43, false], null]]]], "where": [], "groupBy": [[0, 33, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "943", "answer_text": [[4, "00230569697"], [6, "139-321-7313"], [8, "328.842.3792"], [9, "962-983-8109x3509"], [10, "461-801-2600"], [14, "1-185-137-1945x409"]], "trigger_words": ["Professional Id", "Cell Number"], "Prediction": "Professionals.professional_id, Professionals.cell_number\n FROM Professionals\n INNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id\n GROUP BY Professionals.professional_id\n HAVING COUNT(DISTINCT Treatments.treatment_type_code) >= 2;"}
{"db_id": "dog_kennels", "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )", "query_toks": ["SELECT", "DISTINCT", "T1.first_name", ",", "T1.last_name", "FROM", "Professionals", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "WHERE", "cost_of_treatment", "<", "(", "SELECT", "avg", "(", "cost_of_treatment", ")", "FROM", "Treatments", ")"], "query_toks_no_value": ["select", "distinct", "t1", ".", "first_name", ",", "t1", ".", "last_name", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "where", "cost_of_treatment", "<", "(", "select", "avg", "(", "cost_of_treatment", ")", "from", "treatments", ")"], "question": "What are the first name and last name of the professionals who have done treatment with cost below average?", "question_toks": ["What", "are", "the", "first", "name", "and", "last", "name", "of", "the", "professionals", "who", "have", "done", "treatment", "with", "cost", "below", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": []}, "select": [true, [[0, [0, [0, 35, false], null]], [0, [0, [0, 40, false], null]]]], "where": [[false, 4, [0, [0, 49, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[5, [0, [0, 49, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "944", "answer_text": [["Taryn", "Braun"], ["Jayson", "Ullrich"], ["Olaf", "Watsica"], ["Vernice", "Tillman"], ["Danny", "Considine"], ["Ruben", "O'Reilly"], ["Velva", "Hayes"], ["Karley", "Hyatt"], ["Monte", "Kshlerin"], ["Domenica", "Jacobs"], ["Brady", "Pouros"], ["Winfield", "Christiansen"], ["Ericka", "Murazik"], ["Sigurd", "Frami"], ["Lesly", "Walter"]], "trigger_words": ["First Name", "Last Name"], "Prediction": "Professionals.first_name, Professionals.last_name\nFROM Professionals\nINNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id\nWHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)"}
{"db_id": "dog_kennels", "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )", "query_toks": ["SELECT", "DISTINCT", "T1.first_name", ",", "T1.last_name", "FROM", "Professionals", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "WHERE", "cost_of_treatment", "<", "(", "SELECT", "avg", "(", "cost_of_treatment", ")", "FROM", "Treatments", ")"], "query_toks_no_value": ["select", "distinct", "t1", ".", "first_name", ",", "t1", ".", "last_name", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "where", "cost_of_treatment", "<", "(", "select", "avg", "(", "cost_of_treatment", ")", "from", "treatments", ")"], "question": "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.", "question_toks": ["Which", "professionals", "have", "operated", "a", "treatment", "that", "costs", "less", "than", "the", "average", "?", "Give", "me", "theor", "first", "names", "and", "last", "names", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": []}, "select": [true, [[0, [0, [0, 35, false], null]], [0, [0, [0, 40, false], null]]]], "where": [[false, 4, [0, [0, 49, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[5, [0, [0, 49, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "945", "answer_text": [["Taryn", "Braun"], ["Jayson", "Ullrich"], ["Olaf", "Watsica"], ["Vernice", "Tillman"], ["Danny", "Considine"], ["Ruben", "O'Reilly"], ["Velva", "Hayes"], ["Karley", "Hyatt"], ["Monte", "Kshlerin"], ["Domenica", "Jacobs"], ["Brady", "Pouros"], ["Winfield", "Christiansen"], ["Ericka", "Murazik"], ["Sigurd", "Frami"], ["Lesly", "Walter"]], "trigger_words": ["First Name", "Last Name"], "Prediction": "Professionals.first_name, Professionals.last_name\nFROM Professionals\nWHERE Professionals.professional_id IN (\n    SELECT Treatments.professional_id\n    FROM Treatments\n    WHERE Treatments.cost_of_treatment < (\n        SELECT AVG(cost_of_treatment)\n        FROM Treatments\n    )\n);"}
{"db_id": "dog_kennels", "query": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id", "query_toks": ["SELECT", "T1.date_of_treatment", ",", "T2.first_name", "FROM", "Treatments", "AS", "T1", "JOIN", "Professionals", "AS", "T2", "ON", "T1.professional_id", "=", "T2.professional_id"], "query_toks_no_value": ["select", "t1", ".", "date_of_treatment", ",", "t2", ".", "first_name", "from", "treatments", "as", "t1", "join", "professionals", "as", "t2", "on", "t1", ".", "professional_id", "=", "t2", ".", "professional_id"], "question": "List the date of each treatment, together with the first name of the professional who operated it.", "question_toks": ["List", "the", "date", "of", "each", "treatment", ",", "together", "with", "the", "first", "name", "of", "the", "professional", "who", "operated", "it", "."], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 46, false], null], [0, 33, false], null]]}, "select": [false, [[0, [0, [0, 48, false], null]], [0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "946", "answer_text": [["2018-03-19 04:39:54", "Monte"], ["2018-03-15 20:25:34", "Domenica"], ["2018-03-08 05:26:23", "Vernice"], ["2018-03-01 04:14:46", "Karley"], ["2018-03-23 13:52:10", "Sigurd"], ["2018-03-11 04:23:15", "Vernice"], ["2018-03-10 11:45:58", "Sigurd"], ["2018-03-24 22:25:58", "Ruben"], ["2018-03-14 19:10:40", "Domenica"], ["2018-02-28 17:09:43", "Velva"], ["2018-03-13 12:22:58", "Danny"], ["2018-03-16 10:27:36", "Monte"], ["2018-02-26 09:08:53", "Karley"], ["2018-03-04 20:33:43", "Monte"], ["2018-03-15 19:10:02", "Ruben"]], "trigger_words": ["Date Of Treatment", "First Name"], "Prediction": "Treatments.date_of_treatment, Professionals.first_name\n FROM Treatments\n JOIN Professionals ON Treatments.professional_id=Professionals.professional_id;"}
{"db_id": "dog_kennels", "query": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id", "query_toks": ["SELECT", "T1.date_of_treatment", ",", "T2.first_name", "FROM", "Treatments", "AS", "T1", "JOIN", "Professionals", "AS", "T2", "ON", "T1.professional_id", "=", "T2.professional_id"], "query_toks_no_value": ["select", "t1", ".", "date_of_treatment", ",", "t2", ".", "first_name", "from", "treatments", "as", "t1", "join", "professionals", "as", "t2", "on", "t1", ".", "professional_id", "=", "t2", ".", "professional_id"], "question": "What are the date and the operating professional's first name of each treatment?", "question_toks": ["What", "are", "the", "date", "and", "the", "operating", "professional", "'s", "first", "name", "of", "each", "treatment", "?"], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 46, false], null], [0, 33, false], null]]}, "select": [false, [[0, [0, [0, 48, false], null]], [0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "947", "answer_text": [["2018-03-19 04:39:54", "Monte"], ["2018-03-15 20:25:34", "Domenica"], ["2018-03-08 05:26:23", "Vernice"], ["2018-03-01 04:14:46", "Karley"], ["2018-03-23 13:52:10", "Sigurd"], ["2018-03-11 04:23:15", "Vernice"], ["2018-03-10 11:45:58", "Sigurd"], ["2018-03-24 22:25:58", "Ruben"], ["2018-03-14 19:10:40", "Domenica"], ["2018-02-28 17:09:43", "Velva"], ["2018-03-13 12:22:58", "Danny"], ["2018-03-16 10:27:36", "Monte"], ["2018-02-26 09:08:53", "Karley"], ["2018-03-04 20:33:43", "Monte"], ["2018-03-15 19:10:02", "Ruben"]], "trigger_words": ["Date Of Treatment", "First Name"], "Prediction": "Treatments.date_of_treatment, Professionals.first_name\n FROM Treatments\n JOIN Professionals ON Treatments.professional_id = Professionals.professional_id;"}
{"db_id": "dog_kennels", "query": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code", "query_toks": ["SELECT", "T1.cost_of_treatment", ",", "T2.treatment_type_description", "FROM", "Treatments", "AS", "T1", "JOIN", "treatment_types", "AS", "T2", "ON", "T1.treatment_type_code", "=", "T2.treatment_type_code"], "query_toks_no_value": ["select", "t1", ".", "cost_of_treatment", ",", "t2", ".", "treatment_type_description", "from", "treatments", "as", "t1", "join", "treatment_types", "as", "t2", "on", "t1", ".", "treatment_type_code", "=", "t2", ".", "treatment_type_code"], "question": "List the cost of each treatment and the corresponding treatment type description.", "question_toks": ["List", "the", "cost", "of", "each", "treatment", "and", "the", "corresponding", "treatment", "type", "description", "."], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 47, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 49, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "948", "answer_text": [[567, "Take for a Walk"], [147, "Vaccination"], [429, "Physical examination"], [266, "Vaccination"], [668, "Vaccination"], [313, "Physical examination"], [852, "Physical examination"], [407, "Physical examination"], [139, "Take for a Walk"], [681, "Take for a Walk"], [514, "Vaccination"], [428, "Physical examination"], [945, "Vaccination"], [349, "Take for a Walk"], [656, "Take for a Walk"]], "trigger_words": ["Cost Of Treatment", "Treatment Type Description"], "Prediction": "Treatments.cost_of_treatment, Treatment_Types.treatment_type_description\n FROM Treatments\n JOIN Treatment_Types ON Treatments.treatment_type_code=Treatment_Types.treatment_type_code;"}
{"db_id": "dog_kennels", "query": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code", "query_toks": ["SELECT", "T1.cost_of_treatment", ",", "T2.treatment_type_description", "FROM", "Treatments", "AS", "T1", "JOIN", "treatment_types", "AS", "T2", "ON", "T1.treatment_type_code", "=", "T2.treatment_type_code"], "query_toks_no_value": ["select", "t1", ".", "cost_of_treatment", ",", "t2", ".", "treatment_type_description", "from", "treatments", "as", "t1", "join", "treatment_types", "as", "t2", "on", "t1", ".", "treatment_type_code", "=", "t2", ".", "treatment_type_code"], "question": "What are the cost and treatment type description of each treatment?", "question_toks": ["What", "are", "the", "cost", "and", "treatment", "type", "description", "of", "each", "treatment", "?"], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 47, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 49, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "949", "answer_text": [[567, "Take for a Walk"], [147, "Vaccination"], [429, "Physical examination"], [266, "Vaccination"], [668, "Vaccination"], [313, "Physical examination"], [852, "Physical examination"], [407, "Physical examination"], [139, "Take for a Walk"], [681, "Take for a Walk"], [514, "Vaccination"], [428, "Physical examination"], [945, "Vaccination"], [349, "Take for a Walk"], [656, "Take for a Walk"]], "trigger_words": ["Cost Of Treatment", "Treatment Type Description"], "Prediction": "Treatments.cost_of_treatment, Treatment_Types.treatment_type_description\n FROM Treatments\n JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;"}
{"db_id": "dog_kennels", "query": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "T2.size_code", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "t2", ".", "size_code", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id"], "question": "List each owner's first name, last name, and the size of his for her dog.", "question_toks": ["List", "each", "owner", "'s", "first", "name", ",", "last", "name", ",", "and", "the", "size", "of", "his", "for", "her", "dog", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "950", "answer_text": [["Jaclyn", "Stoltenberg", "LGE"], ["Gay", "Feil", "LGE"], ["Nora", "Haley", "MED"], ["Rachelle", "Funk", "LGE"], ["Emelie", "Mertz", "MED"], ["Johann", "Fisher", "MED"], ["Jaclyn", "Stoltenberg", "MED"], ["Rachelle", "Funk", "SML"], ["Melisa", "DuBuque", "MED"], ["Kade", "Rippin", "MED"], ["Cindy", "Schmitt", "LGE"], ["Orlando", "Price", "MED"], ["Rolando", "Prohaska", "SML"], ["Rachelle", "Funk", "MED"], ["Lorenz", "Nicolas", "MED"]], "trigger_words": ["First Name", "Last Name", "Size Code"], "Prediction": "Owners.first_name, Owners.last_name, Sizes.size_description\nFROM Owners\nJOIN Dogs ON Owners.owner_id = Dogs.owner_id\nJOIN Sizes ON Dogs.size_code = Sizes.size_code;"}
{"db_id": "dog_kennels", "query": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "T2.size_code", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "t2", ".", "size_code", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id"], "question": "What are each owner's first name, last name, and the size of their dog?", "question_toks": ["What", "are", "each", "owner", "'s", "first", "name", ",", "last", "name", ",", "and", "the", "size", "of", "their", "dog", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "951", "answer_text": [["Jaclyn", "Stoltenberg", "LGE"], ["Gay", "Feil", "LGE"], ["Nora", "Haley", "MED"], ["Rachelle", "Funk", "LGE"], ["Emelie", "Mertz", "MED"], ["Johann", "Fisher", "MED"], ["Jaclyn", "Stoltenberg", "MED"], ["Rachelle", "Funk", "SML"], ["Melisa", "DuBuque", "MED"], ["Kade", "Rippin", "MED"], ["Cindy", "Schmitt", "LGE"], ["Orlando", "Price", "MED"], ["Rolando", "Prohaska", "SML"], ["Rachelle", "Funk", "MED"], ["Lorenz", "Nicolas", "MED"]], "trigger_words": ["First Name", "Last Name", "Size Code"], "Prediction": "Owners.first_name, Owners.last_name, Sizes.size_description\n FROM Owners\n JOIN Dogs ON Owners.owner_id = Dogs.owner_id\n JOIN Sizes ON Dogs.size_code = Sizes.size_code;"}
{"db_id": "dog_kennels", "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "query_toks": ["SELECT", "T1.first_name", ",", "T2.name", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t2", ".", "name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id"], "question": "List pairs of the owner's first name and the dogs's name.", "question_toks": ["List", "pairs", "of", "the", "owner", "'s", "first", "name", "and", "the", "dogs", "'s", "name", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "952", "answer_text": [["Jaclyn", "Kacey"], ["Gay", "Hipolito"], ["Nora", "Mavis"], ["Rachelle", "Houston"], ["Emelie", "Jeffrey"], ["Johann", "Merritt"], ["Jaclyn", "Narciso"], ["Rachelle", "George"], ["Melisa", "Bessie"], ["Kade", "Troy"], ["Cindy", "Betty"], ["Orlando", "Holden"], ["Rolando", "Jesus"], ["Rachelle", "Lyric"], ["Lorenz", "Evangeline"]], "trigger_words": ["First Name", "Name"], "Prediction": "Owners.first_name, Dogs.name\n FROM Owners\n JOIN Dogs ON Owners.owner_id = Dogs.owner_id;"}
{"db_id": "dog_kennels", "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "query_toks": ["SELECT", "T1.first_name", ",", "T2.name", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t2", ".", "name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id"], "question": "What are each owner's first name and their dogs's name?", "question_toks": ["What", "are", "each", "owner", "'s", "first", "name", "and", "their", "dogs", "'s", "name", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "953", "answer_text": [["Jaclyn", "Kacey"], ["Gay", "Hipolito"], ["Nora", "Mavis"], ["Rachelle", "Houston"], ["Emelie", "Jeffrey"], ["Johann", "Merritt"], ["Jaclyn", "Narciso"], ["Rachelle", "George"], ["Melisa", "Bessie"], ["Kade", "Troy"], ["Cindy", "Betty"], ["Orlando", "Holden"], ["Rolando", "Jesus"], ["Rachelle", "Lyric"], ["Lorenz", "Evangeline"]], "trigger_words": ["First Name", "Name"], "Prediction": "Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id;"}
{"db_id": "dog_kennels", "query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )", "query_toks": ["SELECT", "T1.name", ",", "T2.date_of_treatment", "FROM", "Dogs", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.dog_id", "=", "T2.dog_id", "WHERE", "T1.breed_code", "=", "(", "SELECT", "breed_code", "FROM", "Dogs", "GROUP", "BY", "breed_code", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "date_of_treatment", "from", "dogs", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "dog_id", "=", "t2", ".", "dog_id", "where", "t1", ".", "breed_code", "=", "(", "select", "breed_code", "from", "dogs", "group", "by", "breed_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "value", ")"], "question": "List the names of the dogs of the rarest breed and the treatment dates of them.", "question_toks": ["List", "the", "names", "of", "the", "dogs", "of", "the", "rarest", "breed", "and", "the", "treatment", "dates", "of", "them", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 48, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "954", "answer_text": [["Lyric", "2018-03-19 04:39:54"], ["Houston", "2018-03-15 20:25:34"], ["Lyric", "2018-03-08 05:26:23"], ["Lyric", "2018-03-14 19:10:40"], ["Kacey", "2018-03-15 19:10:02"]], "trigger_words": ["Name", "Date Of Treatment"], "Prediction": "Dogs.name, Treatments.date_of_treatment\n FROM Dogs\n JOIN Breeds ON Dogs.breed_code = Breeds.breed_code\n JOIN Treatments ON Treatments.dog_id = Dogs.dog_id\n WHERE Breeds.breed_code = (\n   SELECT breed_code\n   FROM Breeds\n   ORDER BY COUNT(*) ASC\n   LIMIT 1\n )\n ORDER BY Treatments.date_of_treatment ASC;"}
{"db_id": "dog_kennels", "query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )", "query_toks": ["SELECT", "T1.name", ",", "T2.date_of_treatment", "FROM", "Dogs", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.dog_id", "=", "T2.dog_id", "WHERE", "T1.breed_code", "=", "(", "SELECT", "breed_code", "FROM", "Dogs", "GROUP", "BY", "breed_code", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "date_of_treatment", "from", "dogs", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "dog_id", "=", "t2", ".", "dog_id", "where", "t1", ".", "breed_code", "=", "(", "select", "breed_code", "from", "dogs", "group", "by", "breed_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "value", ")"], "question": "Which dogs are of the rarest breed? Show their names and treatment dates.", "question_toks": ["Which", "dogs", "are", "of", "the", "rarest", "breed", "?", "Show", "their", "names", "and", "treatment", "dates", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 48, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "955", "answer_text": [["Lyric", "2018-03-19 04:39:54"], ["Houston", "2018-03-15 20:25:34"], ["Lyric", "2018-03-08 05:26:23"], ["Lyric", "2018-03-14 19:10:40"], ["Kacey", "2018-03-15 19:10:02"]], "trigger_words": ["Name", "Date Of Treatment"], "Prediction": "Dogs.name, Treatments.date_of_treatment\n FROM Dogs\n JOIN Breeds ON Dogs.breed_code = Breeds.breed_code\n JOIN Treatments ON Treatments.dog_id = Dogs.dog_id\n WHERE Breeds.breed_name = (SELECT Breeds.breed_name FROM Breeds ORDER BY COUNT(*) ASC LIMIT 1);"}
{"db_id": "dog_kennels", "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'", "query_toks": ["SELECT", "T1.first_name", ",", "T2.name", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id", "WHERE", "T1.state", "=", "'Virginia", "'"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t2", ".", "name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id", "where", "t1", ".", "state", "=", "value"], "question": "Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.", "question_toks": ["Which", "dogs", "are", "owned", "by", "someone", "who", "lives", "in", "Virginia", "?", "List", "the", "owner", "'s", "first", "name", "and", "the", "dog", "'s", "name", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Virginia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "956", "answer_text": [["Melisa", "Bessie"]], "trigger_words": ["First Name", "Name"], "Prediction": "Owners.first_name, Dogs.name\n FROM Dogs\n JOIN Owners ON Dogs.owner_id = Owners.owner_id\n WHERE Owners.state = 'Virginia';"}
{"db_id": "dog_kennels", "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'", "query_toks": ["SELECT", "T1.first_name", ",", "T2.name", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id", "WHERE", "T1.state", "=", "'Virginia", "'"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t2", ".", "name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id", "where", "t1", ".", "state", "=", "value"], "question": "Find the first names of owners living in Virginia and the names of dogs they own.", "question_toks": ["Find", "the", "first", "names", "of", "owners", "living", "in", "Virginia", "and", "the", "names", "of", "dogs", "they", "own", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Virginia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "957", "answer_text": [["Melisa", "Bessie"]], "trigger_words": ["First Name", "Name"], "Prediction": "Owners.first_name, Dogs.name \n FROM Owners \n JOIN Dogs ON Owners.owner_id = Dogs.owner_id \n WHERE Owners.state = 'Virginia';"}
{"db_id": "dog_kennels", "query": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id", "query_toks": ["SELECT", "DISTINCT", "T1.date_arrived", ",", "T1.date_departed", "FROM", "Dogs", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.dog_id", "=", "T2.dog_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "date_arrived", ",", "t1", ".", "date_departed", "from", "dogs", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "dog_id", "=", "t2", ".", "dog_id"], "question": "What are the arriving date and the departing date of the dogs who have gone through a treatment?", "question_toks": ["What", "are", "the", "arriving", "date", "and", "the", "departing", "date", "of", "the", "dogs", "who", "have", "gone", "through", "a", "treatment", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 45, false], null]]}, "select": [true, [[0, [0, [0, 30, false], null]], [0, [0, [0, 32, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "958", "answer_text": [["2017-06-18 19:45:38", "2018-03-24 23:48:59"], ["2017-04-20 00:58:55", "2018-03-24 19:12:22"], ["2017-12-22 05:02:02", "2018-03-25 02:11:32"], ["2017-10-24 04:45:13", "2018-03-25 14:15:41"], ["2017-12-29 06:08:26", "2018-03-25 04:42:14"], ["2017-12-29 23:24:13", "2018-03-24 19:36:59"], ["2018-01-02 03:15:29", "2018-03-25 05:07:47"], ["2017-05-06 08:03:52", "2018-03-25 06:29:10"], ["2017-09-08 20:10:13", "2018-03-25 06:58:44"]], "trigger_words": ["Date Arrived", "Date Departed"], "Prediction": "Dogs.date_arrived, Dogs.date_departed\nFROM Dogs\nINNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;"}
{"db_id": "dog_kennels", "query": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id", "query_toks": ["SELECT", "DISTINCT", "T1.date_arrived", ",", "T1.date_departed", "FROM", "Dogs", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.dog_id", "=", "T2.dog_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "date_arrived", ",", "t1", ".", "date_departed", "from", "dogs", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "dog_id", "=", "t2", ".", "dog_id"], "question": "Find the arriving date and the departing date of the dogs that received a treatment.", "question_toks": ["Find", "the", "arriving", "date", "and", "the", "departing", "date", "of", "the", "dogs", "that", "received", "a", "treatment", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 45, false], null]]}, "select": [true, [[0, [0, [0, 30, false], null]], [0, [0, [0, 32, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "959", "answer_text": [["2017-06-18 19:45:38", "2018-03-24 23:48:59"], ["2017-04-20 00:58:55", "2018-03-24 19:12:22"], ["2017-12-22 05:02:02", "2018-03-25 02:11:32"], ["2017-10-24 04:45:13", "2018-03-25 14:15:41"], ["2017-12-29 06:08:26", "2018-03-25 04:42:14"], ["2017-12-29 23:24:13", "2018-03-24 19:36:59"], ["2018-01-02 03:15:29", "2018-03-25 05:07:47"], ["2017-05-06 08:03:52", "2018-03-25 06:29:10"], ["2017-09-08 20:10:13", "2018-03-25 06:58:44"]], "trigger_words": ["Date Arrived", "Date Departed"], "Prediction": "Dogs.date_arrived, Dogs.date_departed\nFROM Dogs\nINNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;"}
{"db_id": "dog_kennels", "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )", "query_toks": ["SELECT", "T1.last_name", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id", "WHERE", "T2.age", "=", "(", "SELECT", "max", "(", "age", ")", "FROM", "Dogs", ")"], "query_toks_no_value": ["select", "t1", ".", "last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id", "where", "t2", ".", "age", "=", "(", "select", "max", "(", "age", ")", "from", "dogs", ")"], "question": "List the last name of the owner owning the youngest dog.", "question_toks": ["List", "the", "last", "name", "of", "the", "owner", "owning", "the", "youngest", "dog", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "960", "answer_text": [["Feil"], ["Fisher"], ["Rippin"]], "trigger_words": ["Last Name"], "Prediction": "Owners.last_name\nFROM Dogs\nJOIN Owners ON Dogs.owner_id=Owners.owner_id\nWHERE Dogs.age = (SELECT MIN(age) FROM Dogs)"}
{"db_id": "dog_kennels", "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )", "query_toks": ["SELECT", "T1.last_name", "FROM", "Owners", "AS", "T1", "JOIN", "Dogs", "AS", "T2", "ON", "T1.owner_id", "=", "T2.owner_id", "WHERE", "T2.age", "=", "(", "SELECT", "max", "(", "age", ")", "FROM", "Dogs", ")"], "query_toks_no_value": ["select", "t1", ".", "last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1", ".", "owner_id", "=", "t2", ".", "owner_id", "where", "t2", ".", "age", "=", "(", "select", "max", "(", "age", ")", "from", "dogs", ")"], "question": "Who owns the youngest dog? Give me his or her last name.", "question_toks": ["Who", "owns", "the", "youngest", "dog", "?", "Give", "me", "his", "or", "her", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "961", "answer_text": [["Feil"], ["Fisher"], ["Rippin"]], "trigger_words": ["Last Name"], "Prediction": "Owners.last_name\nFROM Dogs\nJOIN Owners ON Dogs.owner_id=Owners.owner_id\nWHERE Dogs.age = (SELECT MIN(age) FROM Dogs);"}
{"db_id": "dog_kennels", "query": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'", "query_toks": ["SELECT", "email_address", "FROM", "Professionals", "WHERE", "state", "=", "'Hawaii", "'", "OR", "state", "=", "'Wisconsin", "'"], "query_toks_no_value": ["select", "email_address", "from", "professionals", "where", "state", "=", "value", "or", "state", "=", "value"], "question": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.", "question_toks": ["List", "the", "emails", "of", "the", "professionals", "who", "live", "in", "the", "state", "of", "Hawaii", "or", "the", "state", "of", "Wisconsin", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 41, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], "\"Hawaii\"", null], "or", [false, 2, [0, [0, 38, false], null], "\"Wisconsin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "962", "answer_text": [["uboehm@example.org"], ["mekhi.little@example.org"]], "trigger_words": ["Email Address"], "Prediction": "email_address FROM Professionals WHERE state='Hawaii' OR state='Wisconsin';"}
{"db_id": "dog_kennels", "query": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'", "query_toks": ["SELECT", "email_address", "FROM", "Professionals", "WHERE", "state", "=", "'Hawaii", "'", "OR", "state", "=", "'Wisconsin", "'"], "query_toks_no_value": ["select", "email_address", "from", "professionals", "where", "state", "=", "value", "or", "state", "=", "value"], "question": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?", "question_toks": ["What", "are", "the", "emails", "of", "the", "professionals", "living", "in", "either", "the", "state", "of", "Hawaii", "or", "the", "state", "of", "Wisconsin", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 41, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], "\"Hawaii\"", null], "or", [false, 2, [0, [0, 38, false], null], "\"Wisconsin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "963", "answer_text": [["uboehm@example.org"], ["mekhi.little@example.org"]], "trigger_words": ["Email Address"], "Prediction": "email_address FROM Professionals WHERE state='Hawaii' OR state='Wisconsin';"}
{"db_id": "dog_kennels", "query": "SELECT date_arrived ,  date_departed FROM Dogs", "query_toks": ["SELECT", "date_arrived", ",", "date_departed", "FROM", "Dogs"], "query_toks_no_value": ["select", "date_arrived", ",", "date_departed", "from", "dogs"], "question": "What are the arriving date and the departing date of all the dogs?", "question_toks": ["What", "are", "the", "arriving", "date", "and", "the", "departing", "date", "of", "all", "the", "dogs", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 30, false], null]], [0, [0, [0, 32, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "964", "answer_text": [["2017-09-08 20:10:13", "2018-03-25 06:58:44"], ["2017-12-22 05:02:02", "2018-03-25 02:11:32"], ["2017-06-25 10:14:05", "2018-03-25 10:25:46"], ["2017-04-20 00:58:55", "2018-03-24 19:12:22"], ["2017-10-25 00:55:34", "2018-03-25 04:50:22"], ["2017-04-15 09:25:31", "2018-03-25 13:07:04"], ["2017-05-06 08:03:52", "2018-03-25 06:29:10"], ["2017-10-16 20:06:21", "2018-03-25 02:47:40"], ["2018-01-17 11:44:16", "2018-03-25 06:46:07"], ["2017-12-29 06:08:26", "2018-03-25 04:42:14"], ["2017-07-25 15:19:07", "2018-03-25 15:05:16"], ["2017-10-24 04:45:13", "2018-03-25 14:15:41"], ["2018-01-02 03:15:29", "2018-03-25 05:07:47"], ["2017-06-18 19:45:38", "2018-03-24 23:48:59"], ["2017-12-29 23:24:13", "2018-03-24 19:36:59"]], "trigger_words": ["Date Arrived", "Date Departed"], "Prediction": "date_arrived, date_departed FROM Dogs;"}
{"db_id": "dog_kennels", "query": "SELECT date_arrived ,  date_departed FROM Dogs", "query_toks": ["SELECT", "date_arrived", ",", "date_departed", "FROM", "Dogs"], "query_toks_no_value": ["select", "date_arrived", ",", "date_departed", "from", "dogs"], "question": "List the arrival date and the departure date for all the dogs.", "question_toks": ["List", "the", "arrival", "date", "and", "the", "departure", "date", "for", "all", "the", "dogs", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 30, false], null]], [0, [0, [0, 32, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "965", "answer_text": [["2017-09-08 20:10:13", "2018-03-25 06:58:44"], ["2017-12-22 05:02:02", "2018-03-25 02:11:32"], ["2017-06-25 10:14:05", "2018-03-25 10:25:46"], ["2017-04-20 00:58:55", "2018-03-24 19:12:22"], ["2017-10-25 00:55:34", "2018-03-25 04:50:22"], ["2017-04-15 09:25:31", "2018-03-25 13:07:04"], ["2017-05-06 08:03:52", "2018-03-25 06:29:10"], ["2017-10-16 20:06:21", "2018-03-25 02:47:40"], ["2018-01-17 11:44:16", "2018-03-25 06:46:07"], ["2017-12-29 06:08:26", "2018-03-25 04:42:14"], ["2017-07-25 15:19:07", "2018-03-25 15:05:16"], ["2017-10-24 04:45:13", "2018-03-25 14:15:41"], ["2018-01-02 03:15:29", "2018-03-25 05:07:47"], ["2017-06-18 19:45:38", "2018-03-24 23:48:59"], ["2017-12-29 23:24:13", "2018-03-24 19:36:59"]], "trigger_words": ["Date Arrived", "Date Departed"], "Prediction": "date_arrived, date_departed FROM Dogs;"}
{"db_id": "dog_kennels", "query": "SELECT count(DISTINCT dog_id) FROM Treatments", "query_toks": ["SELECT", "count", "(", "DISTINCT", "dog_id", ")", "FROM", "Treatments"], "query_toks_no_value": ["select", "count", "(", "distinct", "dog_id", ")", "from", "treatments"], "question": "How many dogs went through any treatments?", "question_toks": ["How", "many", "dogs", "went", "through", "any", "treatments", "?"], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[3, [0, [0, 45, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "966", "answer_text": [[9]], "trigger_words": ["Number Of Dog Id"], "Prediction": "COUNT(DISTINCT Dogs.dog_id) FROM Dogs JOIN Treatments ON Dogs.dog_id=Treatments.dog_id;"}
{"db_id": "dog_kennels", "query": "SELECT count(DISTINCT dog_id) FROM Treatments", "query_toks": ["SELECT", "count", "(", "DISTINCT", "dog_id", ")", "FROM", "Treatments"], "query_toks_no_value": ["select", "count", "(", "distinct", "dog_id", ")", "from", "treatments"], "question": "Count the number of dogs that went through a treatment.", "question_toks": ["Count", "the", "number", "of", "dogs", "that", "went", "through", "a", "treatment", "."], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[3, [0, [0, 45, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "967", "answer_text": [[9]], "trigger_words": ["Number Of Dog Id"], "Prediction": "COUNT(DISTINCT Dogs.dog_id) FROM Dogs JOIN Treatments ON Dogs.dog_id=Treatments.dog_id;"}
{"db_id": "dog_kennels", "query": "SELECT count(DISTINCT professional_id) FROM Treatments", "query_toks": ["SELECT", "count", "(", "DISTINCT", "professional_id", ")", "FROM", "Treatments"], "query_toks_no_value": ["select", "count", "(", "distinct", "professional_id", ")", "from", "treatments"], "question": "How many professionals have performed any treatment to dogs?", "question_toks": ["How", "many", "professionals", "have", "performed", "any", "treatment", "to", "dogs", "?"], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[3, [0, [0, 46, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "968", "answer_text": [[8]], "trigger_words": ["Number Of Professional Id"], "Prediction": "COUNT(DISTINCT Professionals.professional_id) FROM Professionals JOIN Treatments ON Professionals.professional_id=Treatments.professional_id;"}
{"db_id": "dog_kennels", "query": "SELECT count(DISTINCT professional_id) FROM Treatments", "query_toks": ["SELECT", "count", "(", "DISTINCT", "professional_id", ")", "FROM", "Treatments"], "query_toks_no_value": ["select", "count", "(", "distinct", "professional_id", ")", "from", "treatments"], "question": "Find the number of professionals who have ever treated dogs.", "question_toks": ["Find", "the", "number", "of", "professionals", "who", "have", "ever", "treated", "dogs", "."], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[3, [0, [0, 46, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "969", "answer_text": [[8]], "trigger_words": ["Number Of Professional Id"], "Prediction": "COUNT(DISTINCT professional_id) FROM Treatments;"}
{"db_id": "dog_kennels", "query": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'", "query_toks": ["SELECT", "role_code", ",", "street", ",", "city", ",", "state", "FROM", "professionals", "WHERE", "city", "LIKE", "'", "%", "West", "%", "'"], "query_toks_no_value": ["select", "role_code", ",", "street", ",", "city", ",", "state", "from", "professionals", "where", "city", "like", "value"], "question": "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.", "question_toks": ["Which", "professionals", "live", "in", "a", "city", "containing", "the", "substring", "'West", "'", "?", "List", "his", "or", "her", "role", ",", "street", ",", "city", "and", "state", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [0, [0, [0, 38, false], null]]]], "where": [[false, 9, [0, [0, 37, false], null], "\"%West%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "970", "answer_text": [["Employee", "6915 Oberbrunner Point Suite 491 Gleasonville", "West Heidi", "Indiana"]], "trigger_words": ["Role Code", "Street", "City", "State"], "Prediction": "role_code, street, city, state FROM Professionals WHERE city LIKE '%West%';"}
{"db_id": "dog_kennels", "query": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'", "query_toks": ["SELECT", "role_code", ",", "street", ",", "city", ",", "state", "FROM", "professionals", "WHERE", "city", "LIKE", "'", "%", "West", "%", "'"], "query_toks_no_value": ["select", "role_code", ",", "street", ",", "city", ",", "state", "from", "professionals", "where", "city", "like", "value"], "question": "Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.", "question_toks": ["Find", "the", "role", ",", "street", ",", "city", "and", "state", "of", "the", "professionals", "living", "in", "a", "city", "that", "contains", "the", "substring", "'West", "'", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [0, [0, [0, 38, false], null]]]], "where": [[false, 9, [0, [0, 37, false], null], "\"%West%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "971", "answer_text": [["Employee", "6915 Oberbrunner Point Suite 491 Gleasonville", "West Heidi", "Indiana"]], "trigger_words": ["Role Code", "Street", "City", "State"], "Prediction": "role_code, street, city, state \n FROM Professionals \n WHERE city LIKE '%West%';"}
{"db_id": "dog_kennels", "query": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "email_address", "FROM", "Owners", "WHERE", "state", "LIKE", "'", "%", "North", "%", "'"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "email_address", "from", "owners", "where", "state", "like", "value"], "question": "Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.", "question_toks": ["Which", "owners", "live", "in", "the", "state", "whose", "name", "contains", "the", "substring", "'North", "'", "?", "List", "his", "first", "name", ",", "last", "name", "and", "email", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 17, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%North%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "972", "answer_text": [["Johann", "Fisher", "zboncak.madonna@example.net"], ["Cindy", "Schmitt", "wpfeffer@example.net"]], "trigger_words": ["First Name", "Last Name", "Email Address"], "Prediction": "first_name, last_name, email_address \nFROM Owners \nWHERE state LIKE '%North%';"}
{"db_id": "dog_kennels", "query": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "email_address", "FROM", "Owners", "WHERE", "state", "LIKE", "'", "%", "North", "%", "'"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "email_address", "from", "owners", "where", "state", "like", "value"], "question": "Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.", "question_toks": ["Return", "the", "first", "name", ",", "last", "name", "and", "email", "of", "the", "owners", "living", "in", "a", "state", "whose", "name", "contains", "the", "substring", "'North", "'", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 17, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%North%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "973", "answer_text": [["Johann", "Fisher", "zboncak.madonna@example.net"], ["Cindy", "Schmitt", "wpfeffer@example.net"]], "trigger_words": ["First Name", "Last Name", "Email Address"], "Prediction": "first_name, last_name, email_address \nFROM Owners \nWHERE state LIKE '%North%';"}
{"db_id": "dog_kennels", "query": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Dogs", "WHERE", "age", "<", "(", "SELECT", "avg", "(", "age", ")", "FROM", "Dogs", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "dogs", "where", "age", "<", "(", "select", "avg", "(", "age", ")", "from", "dogs", ")"], "question": "How many dogs have an age below the average?", "question_toks": ["How", "many", "dogs", "have", "an", "age", "below", "the", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 4, [0, [0, 26, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "974", "answer_text": [[9]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);"}
{"db_id": "dog_kennels", "query": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Dogs", "WHERE", "age", "<", "(", "SELECT", "avg", "(", "age", ")", "FROM", "Dogs", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "dogs", "where", "age", "<", "(", "select", "avg", "(", "age", ")", "from", "dogs", ")"], "question": "Count the number of dogs of an age below the average.", "question_toks": ["Count", "the", "number", "of", "dogs", "of", "an", "age", "below", "the", "average", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 4, [0, [0, 26, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "975", "answer_text": [[9]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);"}
{"db_id": "dog_kennels", "query": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1", "query_toks": ["SELECT", "cost_of_treatment", "FROM", "Treatments", "ORDER", "BY", "date_of_treatment", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "cost_of_treatment", "from", "treatments", "order", "by", "date_of_treatment", "desc", "limit", "value"], "question": "How much does the most recent treatment cost?", "question_toks": ["How", "much", "does", "the", "most", "recent", "treatment", "cost", "?"], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 49, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 48, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "976", "answer_text": [[407]], "trigger_words": ["Cost Of Treatment"], "Prediction": "MAX(cost_of_treatment) FROM Treatments;"}
{"db_id": "dog_kennels", "query": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1", "query_toks": ["SELECT", "cost_of_treatment", "FROM", "Treatments", "ORDER", "BY", "date_of_treatment", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "cost_of_treatment", "from", "treatments", "order", "by", "date_of_treatment", "desc", "limit", "value"], "question": "Show me the cost of the most recently performed treatment.", "question_toks": ["Show", "me", "the", "cost", "of", "the", "most", "recently", "performed", "treatment", "."], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 49, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 48, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "977", "answer_text": [[407]], "trigger_words": ["Cost Of Treatment"], "Prediction": "cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;"}
{"db_id": "dog_kennels", "query": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Dogs", "WHERE", "dog_id", "NOT", "IN", "(", "SELECT", "dog_id", "FROM", "Treatments", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", ")"], "question": "How many dogs have not gone through any treatment?", "question_toks": ["How", "many", "dogs", "have", "not", "gone", "through", "any", "treatment", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 20, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 45, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "978", "answer_text": [[6]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments);"}
{"db_id": "dog_kennels", "query": "select count(*) from dogs where dog_id not in ( select dog_id from treatments )", "query_toks": ["select", "count", "(", "*", ")", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", ")"], "question": "Tell me the number of dogs that have not received any treatment .", "question_toks": ["Tell", "me", "the", "number", "of", "dogs", "that", "have", "not", "received", "any", "treatment", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 20, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 45, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "979", "answer_text": [[6]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments);"}
{"db_id": "dog_kennels", "query": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Owners", "WHERE", "owner_id", "NOT", "IN", "(", "SELECT", "owner_id", "FROM", "Dogs", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "owners", "where", "owner_id", "not", "in", "(", "select", "owner_id", "from", "dogs", ")"], "question": "How many owners temporarily do not have any dogs?", "question_toks": ["How", "many", "owners", "temporarily", "do", "not", "have", "any", "dogs", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "980", "answer_text": [[3]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs WHERE date_departed IS NULL);"}
{"db_id": "dog_kennels", "query": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Owners", "WHERE", "owner_id", "NOT", "IN", "(", "SELECT", "owner_id", "FROM", "Dogs", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "owners", "where", "owner_id", "not", "in", "(", "select", "owner_id", "from", "dogs", ")"], "question": "Find the number of owners who do not own any dogs at this moment.", "question_toks": ["Find", "the", "number", "of", "owners", "who", "do", "not", "own", "any", "dogs", "at", "this", "moment", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "981", "answer_text": [[3]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs WHERE date_departed IS NULL);"}
{"db_id": "dog_kennels", "query": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Professionals", "WHERE", "professional_id", "NOT", "IN", "(", "SELECT", "professional_id", "FROM", "Treatments", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "professionals", "where", "professional_id", "not", "in", "(", "select", "professional_id", "from", "treatments", ")"], "question": "How many professionals did not operate any treatment on dogs?", "question_toks": ["How", "many", "professionals", "did", "not", "operate", "any", "treatment", "on", "dogs", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 33, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 46, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "982", "answer_text": [[7]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);"}
{"db_id": "dog_kennels", "query": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Professionals", "WHERE", "professional_id", "NOT", "IN", "(", "SELECT", "professional_id", "FROM", "Treatments", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "professionals", "where", "professional_id", "not", "in", "(", "select", "professional_id", "from", "treatments", ")"], "question": "Find the number of professionals who have not treated any dogs.", "question_toks": ["Find", "the", "number", "of", "professionals", "who", "have", "not", "treated", "any", "dogs", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 33, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 46, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "983", "answer_text": [[7]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id=Treatments.professional_id WHERE Treatments.treatment_id IS NULL;"}
{"db_id": "dog_kennels", "query": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1", "query_toks": ["SELECT", "name", ",", "age", ",", "weight", "FROM", "Dogs", "WHERE", "abandoned_yn", "=", "1"], "query_toks_no_value": ["select", "name", ",", "age", ",", "weight", "from", "dogs", "where", "abandoned_yn", "=", "value"], "question": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.", "question_toks": ["List", "the", "dog", "name", ",", "age", "and", "weight", "of", "the", "dogs", "who", "have", "been", "abandoned", "?", "1", "stands", "for", "yes", ",", "and", "0", "stands", "for", "no", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "984", "answer_text": [["Kacey", "6", "7.57"], ["Lyric", "4", "4.36"], ["Evangeline", "1", "4.01"]], "trigger_words": ["Name", "Age", "Weight"], "Prediction": "name, age, weight FROM Dogs WHERE abandoned_yn = 1;"}
{"db_id": "dog_kennels", "query": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1", "query_toks": ["SELECT", "name", ",", "age", ",", "weight", "FROM", "Dogs", "WHERE", "abandoned_yn", "=", "1"], "query_toks_no_value": ["select", "name", ",", "age", ",", "weight", "from", "dogs", "where", "abandoned_yn", "=", "value"], "question": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.", "question_toks": ["What", "are", "the", "dog", "name", ",", "age", "and", "weight", "of", "the", "dogs", "that", "were", "abandoned", "?", "Note", "that", "1", "stands", "for", "yes", ",", "and", "0", "stands", "for", "no", "in", "the", "tables", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "985", "answer_text": [["Kacey", "6", "7.57"], ["Lyric", "4", "4.36"], ["Evangeline", "1", "4.01"]], "trigger_words": ["Name", "Age", "Weight"], "Prediction": "name, age, weight FROM Dogs WHERE abandoned_yn = 1;"}
{"db_id": "dog_kennels", "query": "SELECT avg(age) FROM Dogs", "query_toks": ["SELECT", "avg", "(", "age", ")", "FROM", "Dogs"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "dogs"], "question": "What is the average age of all the dogs?", "question_toks": ["What", "is", "the", "average", "age", "of", "all", "the", "dogs", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "986", "answer_text": [[5.066666666666666]], "trigger_words": ["Average Number"], "Prediction": "AVG(age) FROM Dogs;"}
{"db_id": "dog_kennels", "query": "SELECT avg(age) FROM Dogs", "query_toks": ["SELECT", "avg", "(", "age", ")", "FROM", "Dogs"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "dogs"], "question": "Compute the average age of all the dogs.", "question_toks": ["Compute", "the", "average", "age", "of", "all", "the", "dogs", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "987", "answer_text": [[5.066666666666666]], "trigger_words": ["Average Number"], "Prediction": "AVG(age) FROM Dogs;"}
{"db_id": "dog_kennels", "query": "SELECT max(age) FROM Dogs", "query_toks": ["SELECT", "max", "(", "age", ")", "FROM", "Dogs"], "query_toks_no_value": ["select", "max", "(", "age", ")", "from", "dogs"], "question": "What is the age of the oldest dog?", "question_toks": ["What", "is", "the", "age", "of", "the", "oldest", "dog", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "988", "answer_text": [["9"]], "trigger_words": ["Maximal Number"], "Prediction": "MAX(age) FROM Dogs;"}
{"db_id": "dog_kennels", "query": "SELECT max(age) FROM Dogs", "query_toks": ["SELECT", "max", "(", "age", ")", "FROM", "Dogs"], "query_toks_no_value": ["select", "max", "(", "age", ")", "from", "dogs"], "question": "Tell me the age of the oldest dog.", "question_toks": ["Tell", "me", "the", "age", "of", "the", "oldest", "dog", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "989", "answer_text": [["9"]], "trigger_words": ["Maximal Number"], "Prediction": "MAX(age) FROM Dogs;"}
{"db_id": "dog_kennels", "query": "SELECT charge_type ,  charge_amount FROM Charges", "query_toks": ["SELECT", "charge_type", ",", "charge_amount", "FROM", "Charges"], "query_toks_no_value": ["select", "charge_type", ",", "charge_amount", "from", "charges"], "question": "How much does each charge type costs? List both charge type and amount.", "question_toks": ["How", "much", "does", "each", "charge", "type", "costs", "?", "List", "both", "charge", "type", "and", "amount", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "990", "answer_text": [["Daily Accommodation", 98], ["Drugs", 322], ["Health Check", 640]], "trigger_words": ["Charge Type", "Charge Amount"], "Prediction": "charge_type, SUM(charge_amount) AS total_cost FROM Charges GROUP BY charge_type;"}
{"db_id": "dog_kennels", "query": "SELECT charge_type ,  charge_amount FROM Charges", "query_toks": ["SELECT", "charge_type", ",", "charge_amount", "FROM", "Charges"], "query_toks_no_value": ["select", "charge_type", ",", "charge_amount", "from", "charges"], "question": "List each charge type and its amount.", "question_toks": ["List", "each", "charge", "type", "and", "its", "amount", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "991", "answer_text": [["Daily Accommodation", 98], ["Drugs", 322], ["Health Check", 640]], "trigger_words": ["Charge Type", "Charge Amount"], "Prediction": "charge_type, charge_amount FROM Charges;"}
{"db_id": "dog_kennels", "query": "SELECT max(charge_amount) FROM Charges", "query_toks": ["SELECT", "max", "(", "charge_amount", ")", "FROM", "Charges"], "query_toks_no_value": ["select", "max", "(", "charge_amount", ")", "from", "charges"], "question": "How much does the most expensive charge type costs?", "question_toks": ["How", "much", "does", "the", "most", "expensive", "charge", "type", "costs", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "992", "answer_text": [[640]], "trigger_words": ["Maximal Number"], "Prediction": "MAX(charge_amount) FROM Charges;"}
{"db_id": "dog_kennels", "query": "SELECT max(charge_amount) FROM Charges", "query_toks": ["SELECT", "max", "(", "charge_amount", ")", "FROM", "Charges"], "query_toks_no_value": ["select", "max", "(", "charge_amount", ")", "from", "charges"], "question": "What is the charge amount of the most expensive charge type?", "question_toks": ["What", "is", "the", "charge", "amount", "of", "the", "most", "expensive", "charge", "type", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "993", "answer_text": [[640]], "trigger_words": ["Maximal Number"], "Prediction": "MAX(charge_amount) FROM Charges WHERE charge_type = (SELECT charge_type FROM Charges ORDER BY charge_amount DESC LIMIT 1);"}
{"db_id": "dog_kennels", "query": "SELECT email_address ,  cell_number ,  home_phone FROM professionals", "query_toks": ["SELECT", "email_address", ",", "cell_number", ",", "home_phone", "FROM", "professionals"], "query_toks_no_value": ["select", "email_address", ",", "cell_number", ",", "home_phone", "from", "professionals"], "question": "List the email, cell phone and home phone of all the professionals.", "question_toks": ["List", "the", "email", ",", "cell", "phone", "and", "home", "phone", "of", "all", "the", "professionals", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 41, false], null]], [0, [0, [0, 43, false], null]], [0, [0, [0, 42, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "994", "answer_text": [["deanna.schuster@example.com", "(275)939-2435x80863", "+71(6)2898266914"], ["lucile.shanahan@example.org", "889-940-2676", "+02(1)0259033559"], ["uboehm@example.org", "(369)908-7311x065", "325-155-0801x7005"], ["lourdes.lowe@example.net", "00230569697", "312.216.3352"], ["mekhi.little@example.org", "011.193.9081x3186", "1-609-566-2752x25197"], ["jacynthe.mclaughlin@example.net", "139-321-7313", "+43(5)1132733868"], ["lambert62@example.org", "499-434-0215x1628", "022.529.0550x1319"], ["goyette.roosevelt@example.net", "328.842.3792", "891.475.2256"], ["schneider.kathryne@example.org", "962-983-8109x3509", "320-508-6023"], ["jerrod.bahringer@example.org", "461-801-2600", "(230)338-3342x585"], ["west.eula@example.net", "609-405-2990", "(920)304-4499x59146"], ["marquardt.furman@example.org", "1-181-670-9466", "246-951-0080x76716"], ["delphine29@example.com", "880-659-7577x736", "346.594.3739"], ["cole.margarita@example.org", "1-185-137-1945x409", "971.048.3763x9404"], ["jeichmann@example.com", "1-258-285-4707x8020", "1-138-287-3775"]], "trigger_words": ["Email Address", "Cell Number", "Home Phone"], "Prediction": "email_address, cell_number, home_phone FROM Professionals;"}
{"db_id": "dog_kennels", "query": "SELECT email_address ,  cell_number ,  home_phone FROM professionals", "query_toks": ["SELECT", "email_address", ",", "cell_number", ",", "home_phone", "FROM", "professionals"], "query_toks_no_value": ["select", "email_address", ",", "cell_number", ",", "home_phone", "from", "professionals"], "question": "What are the email, cell phone and home phone of each professional?", "question_toks": ["What", "are", "the", "email", ",", "cell", "phone", "and", "home", "phone", "of", "each", "professional", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 41, false], null]], [0, [0, [0, 43, false], null]], [0, [0, [0, 42, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "995", "answer_text": [["deanna.schuster@example.com", "(275)939-2435x80863", "+71(6)2898266914"], ["lucile.shanahan@example.org", "889-940-2676", "+02(1)0259033559"], ["uboehm@example.org", "(369)908-7311x065", "325-155-0801x7005"], ["lourdes.lowe@example.net", "00230569697", "312.216.3352"], ["mekhi.little@example.org", "011.193.9081x3186", "1-609-566-2752x25197"], ["jacynthe.mclaughlin@example.net", "139-321-7313", "+43(5)1132733868"], ["lambert62@example.org", "499-434-0215x1628", "022.529.0550x1319"], ["goyette.roosevelt@example.net", "328.842.3792", "891.475.2256"], ["schneider.kathryne@example.org", "962-983-8109x3509", "320-508-6023"], ["jerrod.bahringer@example.org", "461-801-2600", "(230)338-3342x585"], ["west.eula@example.net", "609-405-2990", "(920)304-4499x59146"], ["marquardt.furman@example.org", "1-181-670-9466", "246-951-0080x76716"], ["delphine29@example.com", "880-659-7577x736", "346.594.3739"], ["cole.margarita@example.org", "1-185-137-1945x409", "971.048.3763x9404"], ["jeichmann@example.com", "1-258-285-4707x8020", "1-138-287-3775"]], "trigger_words": ["Email Address", "Cell Number", "Home Phone"], "Prediction": "email_address, cell_number, home_phone FROM Professionals;"}
{"db_id": "dog_kennels", "query": "SELECT DISTINCT breed_code ,  size_code FROM dogs", "query_toks": ["SELECT", "DISTINCT", "breed_code", ",", "size_code", "FROM", "dogs"], "query_toks_no_value": ["select", "distinct", "breed_code", ",", "size_code", "from", "dogs"], "question": "What are all the possible breed type and size type combinations?", "question_toks": ["What", "are", "all", "the", "possible", "breed", "type", "and", "size", "type", "combinations", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "996", "answer_text": [["ESK", "LGE"], ["BUL", "LGE"], ["BUL", "MED"], ["HUS", "MED"], ["ESK", "SML"], ["HUS", "SML"], ["ESK", "MED"]], "trigger_words": ["Breed Code", "Size Code"], "Prediction": "Breeds.breed_name, Sizes.size_description\n FROM Breeds, Sizes;"}
{"db_id": "dog_kennels", "query": "SELECT DISTINCT breed_code ,  size_code FROM dogs", "query_toks": ["SELECT", "DISTINCT", "breed_code", ",", "size_code", "FROM", "dogs"], "query_toks_no_value": ["select", "distinct", "breed_code", ",", "size_code", "from", "dogs"], "question": "Find the distinct breed type and size type combinations for dogs.", "question_toks": ["Find", "the", "distinct", "breed", "type", "and", "size", "type", "combinations", "for", "dogs", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "997", "answer_text": [["ESK", "LGE"], ["BUL", "LGE"], ["BUL", "MED"], ["HUS", "MED"], ["ESK", "SML"], ["HUS", "SML"], ["ESK", "MED"]], "trigger_words": ["Breed Code", "Size Code"], "Prediction": "DISTINCT Breeds.breed_name, Sizes.size_description\n FROM Dogs\n JOIN Breeds ON Dogs.breed_code = Breeds.breed_code\n JOIN Sizes ON Dogs.size_code = Sizes.size_code;"}
{"db_id": "dog_kennels", "query": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code", "query_toks": ["SELECT", "DISTINCT", "T1.first_name", ",", "T3.treatment_type_description", "FROM", "professionals", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.professional_id", "=", "T2.professional_id", "JOIN", "Treatment_types", "AS", "T3", "ON", "T2.treatment_type_code", "=", "T3.treatment_type_code"], "query_toks_no_value": ["select", "distinct", "t1", ".", "first_name", ",", "t3", ".", "treatment_type_description", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "professional_id", "=", "t2", ".", "professional_id", "join", "treatment_types", "as", "t3", "on", "t2", ".", "treatment_type_code", "=", "t3", ".", "treatment_type_code"], "question": "List the first name of all the professionals along with the description of the treatment they have done.", "question_toks": ["List", "the", "first", "name", "of", "all", "the", "professionals", "along", "with", "the", "description", "of", "the", "treatment", "they", "have", "done", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null], "and", [false, 2, [0, [0, 47, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 35, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "998", "answer_text": [["Monte", "Take for a Walk"], ["Domenica", "Vaccination"], ["Vernice", "Physical examination"], ["Karley", "Vaccination"], ["Sigurd", "Vaccination"], ["Sigurd", "Physical examination"], ["Ruben", "Physical examination"], ["Domenica", "Take for a Walk"], ["Velva", "Take for a Walk"], ["Danny", "Vaccination"], ["Monte", "Physical examination"], ["Ruben", "Take for a Walk"]], "trigger_words": ["First Name", "Treatment Type Description"], "Prediction": "Professionals.first_name, Treatment_Types.treatment_type_description\n FROM Professionals\n JOIN Treatments ON Professionals.professional_id = Treatments.professional_id\n JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;"}
{"db_id": "dog_kennels", "query": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code", "query_toks": ["SELECT", "DISTINCT", "T1.first_name", ",", "T3.treatment_type_description", "FROM", "professionals", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.professional_id", "=", "T2.professional_id", "JOIN", "Treatment_types", "AS", "T3", "ON", "T2.treatment_type_code", "=", "T3.treatment_type_code"], "query_toks_no_value": ["select", "distinct", "t1", ".", "first_name", ",", "t3", ".", "treatment_type_description", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "professional_id", "=", "t2", ".", "professional_id", "join", "treatment_types", "as", "t3", "on", "t2", ".", "treatment_type_code", "=", "t3", ".", "treatment_type_code"], "question": "What are each professional's first name and description of the treatment they have performed?", "question_toks": ["What", "are", "each", "professional", "'s", "first", "name", "and", "description", "of", "the", "treatment", "they", "have", "performed", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null], "and", [false, 2, [0, [0, 47, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 35, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "999", "answer_text": [["Monte", "Take for a Walk"], ["Domenica", "Vaccination"], ["Vernice", "Physical examination"], ["Karley", "Vaccination"], ["Sigurd", "Vaccination"], ["Sigurd", "Physical examination"], ["Ruben", "Physical examination"], ["Domenica", "Take for a Walk"], ["Velva", "Take for a Walk"], ["Danny", "Vaccination"], ["Monte", "Physical examination"], ["Ruben", "Take for a Walk"]], "trigger_words": ["First Name", "Treatment Type Description"], "Prediction": "Professionals.first_name, Treatment_Types.treatment_type_description\n FROM Professionals\n JOIN Treatments ON Professionals.professional_id = Treatments.professional_id\n JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;"}
{"db_id": "singer", "query": "SELECT count(*) FROM singer", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "singer"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "singer"], "question": "How many singers are there?", "question_toks": ["How", "many", "singers", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1000", "answer_text": [[8]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM singer;"}
{"db_id": "singer", "query": "SELECT count(*) FROM singer", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "singer"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "singer"], "question": "What is the count of singers?", "question_toks": ["What", "is", "the", "count", "of", "singers", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1001", "answer_text": [[8]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM singer;"}
{"db_id": "singer", "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC", "query_toks": ["SELECT", "Name", "FROM", "singer", "ORDER", "BY", "Net_Worth_Millions", "ASC"], "query_toks_no_value": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "asc"], "question": "List the name of singers in ascending order of net worth.", "question_toks": ["List", "the", "name", "of", "singers", "in", "ascending", "order", "of", "net", "worth", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 4, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1002", "answer_text": [["Abigail Johnson"], ["Susanne Klatten"], ["Gina Rinehart"], ["Iris Fontbona"], ["Jacqueline Mars"], ["Alice Walton"], ["Christy Walton"], ["Liliane Bettencourt"]], "trigger_words": ["Name"], "Prediction": "Name FROM singer ORDER BY Net_Worth_Millions ASC;"}
{"db_id": "singer", "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC", "query_toks": ["SELECT", "Name", "FROM", "singer", "ORDER", "BY", "Net_Worth_Millions", "ASC"], "query_toks_no_value": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "asc"], "question": "What are the names of singers ordered by ascending net worth?", "question_toks": ["What", "are", "the", "names", "of", "singers", "ordered", "by", "ascending", "net", "worth", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 4, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1003", "answer_text": [["Abigail Johnson"], ["Susanne Klatten"], ["Gina Rinehart"], ["Iris Fontbona"], ["Jacqueline Mars"], ["Alice Walton"], ["Christy Walton"], ["Liliane Bettencourt"]], "trigger_words": ["Name"], "Prediction": "Name FROM singer ORDER BY Net_Worth_Millions ASC;"}
{"db_id": "singer", "query": "SELECT Birth_Year ,  Citizenship FROM singer", "query_toks": ["SELECT", "Birth_Year", ",", "Citizenship", "FROM", "singer"], "query_toks_no_value": ["select", "birth_year", ",", "citizenship", "from", "singer"], "question": "What are the birth year and citizenship of singers?", "question_toks": ["What", "are", "the", "birth", "year", "and", "citizenship", "of", "singers", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1004", "answer_text": [[1944.0, "France"], [1948.0, "United States"], [1949.0, "United States"], [1942.0, "Chile"], [1940.0, "United States"], [1953.0, "Australia"], [1962.0, "Germany"], [1961.0, "United States"]], "trigger_words": ["Birth Year", "Citizenship"], "Prediction": "Birth_Year, Citizenship FROM singer;"}
{"db_id": "singer", "query": "SELECT Birth_Year ,  Citizenship FROM singer", "query_toks": ["SELECT", "Birth_Year", ",", "Citizenship", "FROM", "singer"], "query_toks_no_value": ["select", "birth_year", ",", "citizenship", "from", "singer"], "question": "What are the birth years and citizenships of the singers?", "question_toks": ["What", "are", "the", "birth", "years", "and", "citizenships", "of", "the", "singers", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1005", "answer_text": [[1944.0, "France"], [1948.0, "United States"], [1949.0, "United States"], [1942.0, "Chile"], [1940.0, "United States"], [1953.0, "Australia"], [1962.0, "Germany"], [1961.0, "United States"]], "trigger_words": ["Birth Year", "Citizenship"], "Prediction": "Birth_Year, Citizenship FROM singer;"}
{"db_id": "singer", "query": "SELECT Name FROM singer WHERE Citizenship != \"France\"", "query_toks": ["SELECT", "Name", "FROM", "singer", "WHERE", "Citizenship", "!", "=", "``", "France", "''"], "query_toks_no_value": ["select", "name", "from", "singer", "where", "citizenship", "!", "=", "value"], "question": "List the name of singers whose citizenship is not \"France\".", "question_toks": ["List", "the", "name", "of", "singers", "whose", "citizenship", "is", "not", "``", "France", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], "\"France\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1006", "answer_text": [["Christy Walton"], ["Alice Walton"], ["Iris Fontbona"], ["Jacqueline Mars"], ["Gina Rinehart"], ["Susanne Klatten"], ["Abigail Johnson"]], "trigger_words": ["Name"], "Prediction": "Name FROM singer WHERE Citizenship != \"France\";"}
{"db_id": "singer", "query": "SELECT Name FROM singer WHERE Citizenship != \"France\"", "query_toks": ["SELECT", "Name", "FROM", "singer", "WHERE", "Citizenship", "!", "=", "``", "France", "''"], "query_toks_no_value": ["select", "name", "from", "singer", "where", "citizenship", "!", "=", "value"], "question": "What are the names of the singers who are not French citizens?", "question_toks": ["What", "are", "the", "names", "of", "the", "singers", "who", "are", "not", "French", "citizens", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], "\"France\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1007", "answer_text": [["Christy Walton"], ["Alice Walton"], ["Iris Fontbona"], ["Jacqueline Mars"], ["Gina Rinehart"], ["Susanne Klatten"], ["Abigail Johnson"]], "trigger_words": ["Name"], "Prediction": "Name FROM singer WHERE Citizenship != 'French';"}
{"db_id": "singer", "query": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949", "query_toks": ["SELECT", "Name", "FROM", "singer", "WHERE", "Birth_Year", "=", "1948", "OR", "Birth_Year", "=", "1949"], "query_toks_no_value": ["select", "name", "from", "singer", "where", "birth_year", "=", "value", "or", "birth_year", "=", "value"], "question": "Show the name of singers whose birth year is either 1948 or 1949?", "question_toks": ["Show", "the", "name", "of", "singers", "whose", "birth", "year", "is", "either", "1948", "or", "1949", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 1948.0, null], "or", [false, 2, [0, [0, 3, false], null], 1949.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1008", "answer_text": [["Christy Walton"], ["Alice Walton"]], "trigger_words": ["Name"], "Prediction": "Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949;"}
{"db_id": "singer", "query": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949", "query_toks": ["SELECT", "Name", "FROM", "singer", "WHERE", "Birth_Year", "=", "1948", "OR", "Birth_Year", "=", "1949"], "query_toks_no_value": ["select", "name", "from", "singer", "where", "birth_year", "=", "value", "or", "birth_year", "=", "value"], "question": "What are the names of the singers whose birth years are either 1948 or 1949?", "question_toks": ["What", "are", "the", "names", "of", "the", "singers", "whose", "birth", "years", "are", "either", "1948", "or", "1949", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 1948.0, null], "or", [false, 2, [0, [0, 3, false], null], 1949.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1009", "answer_text": [["Christy Walton"], ["Alice Walton"]], "trigger_words": ["Name"], "Prediction": "Name FROM singer WHERE Birth_Year IN (1948, 1949);"}
{"db_id": "singer", "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1", "query_toks": ["SELECT", "Name", "FROM", "singer", "ORDER", "BY", "Net_Worth_Millions", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "desc", "limit", "value"], "question": "What is the name of the singer with the largest net worth?", "question_toks": ["What", "is", "the", "name", "of", "the", "singer", "with", "the", "largest", "net", "worth", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "1010", "answer_text": [["Liliane Bettencourt"]], "trigger_words": ["Name"], "Prediction": "Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1;"}
{"db_id": "singer", "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1", "query_toks": ["SELECT", "Name", "FROM", "singer", "ORDER", "BY", "Net_Worth_Millions", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "desc", "limit", "value"], "question": "What is the name of the singer who is worth the most?", "question_toks": ["What", "is", "the", "name", "of", "the", "singer", "who", "is", "worth", "the", "most", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "1011", "answer_text": [["Liliane Bettencourt"]], "trigger_words": ["Name"], "Prediction": "Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1;"}
{"db_id": "singer", "query": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship", "query_toks": ["SELECT", "Citizenship", ",", "COUNT", "(", "*", ")", "FROM", "singer", "GROUP", "BY", "Citizenship"], "query_toks_no_value": ["select", "citizenship", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "citizenship"], "question": "Show different citizenship of singers and the number of singers of each citizenship.", "question_toks": ["Show", "different", "citizenship", "of", "singers", "and", "the", "number", "of", "singers", "of", "each", "citizenship", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1012", "answer_text": [["Australia", 1], ["Chile", 1], ["France", 1], ["Germany", 1], ["United States", 4]], "trigger_words": ["Citizenship", "Number"], "Prediction": "Citizenship, COUNT(*) FROM singer GROUP BY Citizenship;"}
{"db_id": "singer", "query": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship", "query_toks": ["SELECT", "Citizenship", ",", "COUNT", "(", "*", ")", "FROM", "singer", "GROUP", "BY", "Citizenship"], "query_toks_no_value": ["select", "citizenship", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "citizenship"], "question": "For each citizenship, how many singers are from that country?", "question_toks": ["For", "each", "citizenship", ",", "how", "many", "singers", "are", "from", "that", "country", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1013", "answer_text": [["Australia", 1], ["Chile", 1], ["France", 1], ["Germany", 1], ["United States", 4]], "trigger_words": ["Citizenship", "Number"], "Prediction": "Citizenship, COUNT(*) FROM singer GROUP BY Citizenship;"}
{"db_id": "singer", "query": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Citizenship", "FROM", "singer", "GROUP", "BY", "Citizenship", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "citizenship", "from", "singer", "group", "by", "citizenship", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Please show the most common citizenship of singers.", "question_toks": ["Please", "show", "the", "most", "common", "citizenship", "of", "singers", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "1014", "answer_text": [["United States"]], "trigger_words": ["Citizenship"], "Prediction": "Citizenship, COUNT(*) as count\n FROM singer\n GROUP BY Citizenship\n ORDER BY count DESC\n LIMIT 1;"}
{"db_id": "singer", "query": "select citizenship from singer group by citizenship order by count(*) desc limit 1", "query_toks": ["select", "citizenship", "from", "singer", "group", "by", "citizenship", "order", "by", "count", "(", "*", ")", "desc", "limit", "1"], "query_toks_no_value": ["select", "citizenship", "from", "singer", "group", "by", "citizenship", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the most common singer citizenship ?", "question_toks": ["What", "is", "the", "most", "common", "singer", "citizenship", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "id": "1015", "answer_text": [["United States"]], "trigger_words": ["Citizenship"], "Prediction": "Citizenship FROM singer\nGROUP BY Citizenship\nORDER BY COUNT(*) DESC\nLIMIT 1;"}
{"db_id": "singer", "query": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "query_toks": ["SELECT", "Citizenship", ",", "max", "(", "Net_Worth_Millions", ")", "FROM", "singer", "GROUP", "BY", "Citizenship"], "query_toks_no_value": ["select", "citizenship", ",", "max", "(", "net_worth_millions", ")", "from", "singer", "group", "by", "citizenship"], "question": "Show different citizenships and the maximum net worth of singers of each citizenship.", "question_toks": ["Show", "different", "citizenships", "and", "the", "maximum", "net", "worth", "of", "singers", "of", "each", "citizenship", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [1, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1016", "answer_text": [["Australia", 17.0], ["Chile", 17.4], ["France", 30.0], ["Germany", 14.3], ["United States", 28.8]], "trigger_words": ["Citizenship", "Maximal Number"], "Prediction": "Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;"}
{"db_id": "singer", "query": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "query_toks": ["SELECT", "Citizenship", ",", "max", "(", "Net_Worth_Millions", ")", "FROM", "singer", "GROUP", "BY", "Citizenship"], "query_toks_no_value": ["select", "citizenship", ",", "max", "(", "net_worth_millions", ")", "from", "singer", "group", "by", "citizenship"], "question": "For each citizenship, what is the maximum net worth?", "question_toks": ["For", "each", "citizenship", ",", "what", "is", "the", "maximum", "net", "worth", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [1, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1017", "answer_text": [["Australia", 17.0], ["Chile", 17.4], ["France", 30.0], ["Germany", 14.3], ["United States", 28.8]], "trigger_words": ["Citizenship", "Maximal Number"], "Prediction": "Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;"}
{"db_id": "singer", "query": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID", "query_toks": ["SELECT", "T2.Title", ",", "T1.Name", "FROM", "singer", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.Singer_ID", "=", "T2.Singer_ID"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "t1", ".", "name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id"], "question": "Show titles of songs and names of singers.", "question_toks": ["Show", "titles", "of", "songs", "and", "names", "of", "singers", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1018", "answer_text": [["Do They Know It's Christmas", "Liliane Bettencourt"], ["F**k It (I Don't Want You Back)", "Liliane Bettencourt"], ["Cha Cha Slide", "Christy Walton"], ["Call on Me", "Iris Fontbona"], ["Yeah", "Christy Walton"], ["All This Time", "Gina Rinehart"], ["Left Outside Alone", "Jacqueline Mars"], ["Mysterious Girl", "Susanne Klatten"]], "trigger_words": ["Title", "Name"], "Prediction": "song.Title, singer.Name\n FROM song\n JOIN singer ON song.Singer_ID=singer.Singer_ID;"}
{"db_id": "singer", "query": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID", "query_toks": ["SELECT", "T2.Title", ",", "T1.Name", "FROM", "singer", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.Singer_ID", "=", "T2.Singer_ID"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "t1", ".", "name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id"], "question": "What are the song titles and singer names?", "question_toks": ["What", "are", "the", "song", "titles", "and", "singer", "names", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1019", "answer_text": [["Do They Know It's Christmas", "Liliane Bettencourt"], ["F**k It (I Don't Want You Back)", "Liliane Bettencourt"], ["Cha Cha Slide", "Christy Walton"], ["Call on Me", "Iris Fontbona"], ["Yeah", "Christy Walton"], ["All This Time", "Gina Rinehart"], ["Left Outside Alone", "Jacqueline Mars"], ["Mysterious Girl", "Susanne Klatten"]], "trigger_words": ["Title", "Name"], "Prediction": "song.Title, singer.Name\n FROM song\n JOIN singer ON song.Singer_ID=singer.Singer_ID;"}
{"db_id": "singer", "query": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000", "query_toks": ["SELECT", "DISTINCT", "T1.Name", "FROM", "singer", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.Singer_ID", "=", "T2.Singer_ID", "WHERE", "T2.Sales", ">", "300000"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "where", "t2", ".", "sales", ">", "value"], "question": "Show distinct names of singers that have songs with sales more than 300000.", "question_toks": ["Show", "distinct", "names", "of", "singers", "that", "have", "songs", "with", "sales", "more", "than", "300000", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 300000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1020", "answer_text": [["Liliane Bettencourt"], ["Christy Walton"], ["Iris Fontbona"]], "trigger_words": ["Name"], "Prediction": "DISTINCT singer.Name\nFROM singer\nINNER JOIN song ON singer.Singer_ID = song.Singer_ID\nWHERE song.Sales > 300000;"}
{"db_id": "singer", "query": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000", "query_toks": ["SELECT", "DISTINCT", "T1.Name", "FROM", "singer", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.Singer_ID", "=", "T2.Singer_ID", "WHERE", "T2.Sales", ">", "300000"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "where", "t2", ".", "sales", ">", "value"], "question": "what are the different names of the singers that have sales more than 300000?", "question_toks": ["what", "are", "the", "different", "names", "of", "the", "singers", "that", "have", "sales", "more", "than", "300000", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 300000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1021", "answer_text": [["Liliane Bettencourt"], ["Christy Walton"], ["Iris Fontbona"]], "trigger_words": ["Name"], "Prediction": "singer.Name FROM singer JOIN song ON singer.Singer_ID=song.Singer_ID WHERE song.Sales > 300000;"}
{"db_id": "singer", "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "T1.Name", "FROM", "singer", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.Singer_ID", "=", "T2.Singer_ID", "GROUP", "BY", "T1.Name", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "group", "by", "t1", ".", "name", "having", "count", "(", "*", ")", ">", "value"], "question": "Show the names of singers that have more than one song.", "question_toks": ["Show", "the", "names", "of", "singers", "that", "have", "more", "than", "one", "song", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1022", "answer_text": [["Christy Walton"], ["Liliane Bettencourt"]], "trigger_words": ["Name"], "Prediction": "singer.Name\nFROM singer\nINNER JOIN song ON singer.Singer_ID = song.Singer_ID\nGROUP BY singer.Name\nHAVING COUNT(song.Song_ID) > 1;"}
{"db_id": "singer", "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "T1.Name", "FROM", "singer", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.Singer_ID", "=", "T2.Singer_ID", "GROUP", "BY", "T1.Name", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "group", "by", "t1", ".", "name", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the names of the singers that have more than one songs?", "question_toks": ["What", "are", "the", "names", "of", "the", "singers", "that", "have", "more", "than", "one", "songs", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1023", "answer_text": [["Christy Walton"], ["Liliane Bettencourt"]], "trigger_words": ["Name"], "Prediction": "singer.Name\nFROM singer\nINNER JOIN song ON singer.Singer_ID = song.Singer_ID\nGROUP BY singer.Singer_ID\nHAVING COUNT(song.Song_ID) > 1;"}
{"db_id": "singer", "query": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name", "query_toks": ["SELECT", "T1.Name", ",", "sum", "(", "T2.Sales", ")", "FROM", "singer", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.Singer_ID", "=", "T2.Singer_ID", "GROUP", "BY", "T1.Name"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "sum", "(", "t2", ".", "sales", ")", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "group", "by", "t1", ".", "name"], "question": "Show the names of singers and the total sales of their songs.", "question_toks": ["Show", "the", "names", "of", "singers", "and", "the", "total", "sales", "of", "their", "songs", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [4, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1024", "answer_text": [["Christy Walton", 651421.0], ["Gina Rinehart", 292000.0], ["Iris Fontbona", 335000.0], ["Jacqueline Mars", 275000.0], ["Liliane Bettencourt", 1646407.0], ["Susanne Klatten", 261000.0]], "trigger_words": ["Name", "Total Number"], "Prediction": "singer.Name, SUM(song.Sales) AS Total_Sales\n FROM singer\n JOIN song ON song.Singer_ID = singer.Singer_ID\n GROUP BY singer.Name;"}
{"db_id": "singer", "query": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name", "query_toks": ["SELECT", "T1.Name", ",", "sum", "(", "T2.Sales", ")", "FROM", "singer", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.Singer_ID", "=", "T2.Singer_ID", "GROUP", "BY", "T1.Name"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "sum", "(", "t2", ".", "sales", ")", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "group", "by", "t1", ".", "name"], "question": "For each singer name, what is the total sales for their songs?", "question_toks": ["For", "each", "singer", "name", ",", "what", "is", "the", "total", "sales", "for", "their", "songs", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [4, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1025", "answer_text": [["Christy Walton", 651421.0], ["Gina Rinehart", 292000.0], ["Iris Fontbona", 335000.0], ["Jacqueline Mars", 275000.0], ["Liliane Bettencourt", 1646407.0], ["Susanne Klatten", 261000.0]], "trigger_words": ["Name", "Total Number"], "Prediction": "singer.Name, SUM(song.Sales) AS Total_Sales\n FROM singer\n JOIN song ON song.Singer_ID = singer.Singer_ID\n GROUP BY singer.Name;"}
{"db_id": "singer", "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "query_toks": ["SELECT", "Name", "FROM", "singer", "WHERE", "Singer_ID", "NOT", "IN", "(", "SELECT", "Singer_ID", "FROM", "song", ")"], "query_toks_no_value": ["select", "name", "from", "singer", "where", "singer_id", "not", "in", "(", "select", "singer_id", "from", "song", ")"], "question": "List the name of singers that do not have any song.", "question_toks": ["List", "the", "name", "of", "singers", "that", "do", "not", "have", "any", "song", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1026", "answer_text": [["Alice Walton"], ["Abigail Johnson"]], "trigger_words": ["Name"], "Prediction": "singer.Name \nFROM singer \nLEFT JOIN song ON singer.Singer_ID = song.Singer_ID \nWHERE song.Singer_ID IS NULL;"}
{"db_id": "singer", "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "query_toks": ["SELECT", "Name", "FROM", "singer", "WHERE", "Singer_ID", "NOT", "IN", "(", "SELECT", "Singer_ID", "FROM", "song", ")"], "query_toks_no_value": ["select", "name", "from", "singer", "where", "singer_id", "not", "in", "(", "select", "singer_id", "from", "song", ")"], "question": "What is the sname of every sing that does not have any song?", "question_toks": ["What", "is", "the", "sname", "of", "every", "sing", "that", "does", "not", "have", "any", "song", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1027", "answer_text": [["Alice Walton"], ["Abigail Johnson"]], "trigger_words": ["Name"], "Prediction": "singer.Name \nFROM singer \nLEFT JOIN song ON singer.Singer_ID = song.Singer_ID \nWHERE song.Singer_ID IS NULL;"}
{"db_id": "singer", "query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955", "query_toks": ["SELECT", "Citizenship", "FROM", "singer", "WHERE", "Birth_Year", "<", "1945", "INTERSECT", "SELECT", "Citizenship", "FROM", "singer", "WHERE", "Birth_Year", ">", "1955"], "query_toks_no_value": ["select", "citizenship", "from", "singer", "where", "birth_year", "<", "value", "intersect", "select", "citizenship", "from", "singer", "where", "birth_year", ">", "value"], "question": "Show the citizenship shared by singers with birth year before 1945 and after 1955.", "question_toks": ["Show", "the", "citizenship", "shared", "by", "singers", "with", "birth", "year", "before", "1945", "and", "after", "1955", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 4, [0, [0, 3, false], null], 1945.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 1955.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "1028", "answer_text": [["United States"]], "trigger_words": ["Citizenship"], "Prediction": "Citizenship \nFROM singer \nWHERE Birth_Year < 1945 OR Birth_Year > 1955;"}
{"db_id": "singer", "query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955", "query_toks": ["SELECT", "Citizenship", "FROM", "singer", "WHERE", "Birth_Year", "<", "1945", "INTERSECT", "SELECT", "Citizenship", "FROM", "singer", "WHERE", "Birth_Year", ">", "1955"], "query_toks_no_value": ["select", "citizenship", "from", "singer", "where", "birth_year", "<", "value", "intersect", "select", "citizenship", "from", "singer", "where", "birth_year", ">", "value"], "question": "What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?", "question_toks": ["What", "are", "the", "citizenships", "that", "are", "shared", "by", "singers", "with", "a", "birth", "year", "before", "1945", "and", "after", "1955", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 4, [0, [0, 3, false], null], 1945.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 1955.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "id": "1029", "answer_text": [["United States"]], "trigger_words": ["Citizenship"], "Prediction": "Citizenship \nFROM singer \nWHERE Birth_Year < 1945 AND Birth_Year > 1955;"}
{"db_id": "real_estate_properties", "query": "SELECT count(*) FROM Other_Available_Features", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Other_Available_Features"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "other_available_features"], "question": "How many available features are there in total?", "question_toks": ["How", "many", "available", "features", "are", "there", "in", "total", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1030", "answer_text": [[3]], "trigger_words": ["Number"], "Prediction": "COUNT(*) FROM Other_Available_Features;"}
{"db_id": "real_estate_properties", "query": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"", "query_toks": ["SELECT", "T2.feature_type_name", "FROM", "Other_Available_Features", "AS", "T1", "JOIN", "Ref_Feature_Types", "AS", "T2", "ON", "T1.feature_type_code", "=", "T2.feature_type_code", "WHERE", "T1.feature_name", "=", "``", "AirCon", "''"], "query_toks_no_value": ["select", "t2", ".", "feature_type_name", "from", "other_available_features", "as", "t1", "join", "ref_feature_types", "as", "t2", "on", "t1", ".", "feature_type_code", "=", "t2", ".", "feature_type_code", "where", "t1", ".", "feature_name", "=", "value"], "question": "What is the feature type name of feature AirCon?", "question_toks": ["What", "is", "the", "feature", "type", "name", "of", "feature", "AirCon", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"AirCon\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1031", "answer_text": [["Amenity, eg Pool."]], "trigger_words": ["Feature Type Name"], "Prediction": "Ref_Feature_Types.feature_type_name \nFROM Other_Available_Features \nJOIN Ref_Feature_Types \nON Other_Available_Features.feature_type_code=Ref_Feature_Types.feature_type_code \nWHERE Other_Available_Features.feature_name='AirCon';"}
{"db_id": "real_estate_properties", "query": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code", "query_toks": ["SELECT", "T2.property_type_description", "FROM", "Properties", "AS", "T1", "JOIN", "Ref_Property_Types", "AS", "T2", "ON", "T1.property_type_code", "=", "T2.property_type_code", "GROUP", "BY", "T1.property_type_code"], "query_toks_no_value": ["select", "t2", ".", "property_type_description", "from", "properties", "as", "t1", "join", "ref_property_types", "as", "t2", "on", "t1", ".", "property_type_code", "=", "t2", ".", "property_type_code", "group", "by", "t1", ".", "property_type_code"], "question": "Show the property type descriptions of properties belonging to that code.", "question_toks": ["Show", "the", "property", "type", "descriptions", "of", "properties", "belonging", "to", "that", "code", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "id": "1032", "answer_text": [["Apartment, Flat, Condo, etc."], ["Field, Meadow."], ["House, Bungalow, etc."], ["Other, to be determined."], ["Shop, Retail Outlet."]], "trigger_words": ["Property Type Description"], "Prediction": "Ref_Property_Types.property_type_description\n FROM Properties\n JOIN Ref_Property_Types ON Properties.property_type_code=Ref_Property_Types.property_type_code\n WHERE Properties.property_type_code = 'code';"}
{"db_id": "real_estate_properties", "query": "SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1", "query_toks": ["SELECT", "property_name", "FROM", "Properties", "WHERE", "property_type_code", "=", "``", "House", "''", "UNION", "SELECT", "property_name", "FROM", "Properties", "WHERE", "property_type_code", "=", "``", "Apartment", "''", "AND", "room_count", ">", "1"], "query_toks_no_value": ["select", "property_name", "from", "properties", "where", "property_type_code", "=", "value", "union", "select", "property_name", "from", "properties", "where", "property_type_code", "=", "value", "and", "room_count", ">", "value"], "question": "What are the names of properties that are either houses or apartments with more than 1 room?", "question_toks": ["What", "are", "the", "names", "of", "properties", "that", "are", "either", "houses", "or", "apartments", "with", "more", "than", "1", "room", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"House\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Apartment\"", null], "and", [false, 3, [0, [0, 15, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "id": "1033", "answer_text": [["longacre"], ["parc coliseum"], ["parc east"], ["park"], ["renoir"], ["ten tower"], ["the cole"], ["vogue"]], "trigger_words": ["Property Name"], "Prediction": "Properties.property_name \nFROM Properties \nINNER JOIN Ref_Property_Types \nON Properties.property_type_code=Ref_Property_Types.property_type_code \nWHERE (Ref_Property_Types.property_type_description='house' OR Ref_Property_Types.property_type_description='apartment') \nAND Properties.room_count>1;"}
